{
  "package_id": 29,
  "functions": [
    "currently_running_mac",
    "_get_executable",
    "_run_bashtop",
    "string_to_clipboard",
    "load_image_from_clipboard",
    "text_to_speech",
    "set_os_volume",
    "play_sound_file"
  ],
  "total_functions": 8,
  "estimated_hours": 6.0,
  "priority_score": 775,
  "context": {
    "currently_running_mac": {
      "function_name": "currently_running_mac",
      "calls": [],
      "called_by": [
        "_get_executable",
        "set_os_volume",
        "_ensure_installed",
        "play_sound_file",
        "string_to_clipboard",
        "pseudo_terminal",
        "_ensure_ffmpeg_installed",
        "load_image_from_clipboard",
        "_pip_import_pyflow",
        "_load_ryan_lazygit_config",
        "_install_lazygit",
        "_run_bashtop",
        "text_to_speech",
        "select_torch_device",
        "get_system_fonts"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "_ensure_installed",
        "play_sound_file",
        "_ensure_ffmpeg_installed",
        "_pip_import_pyflow",
        "_load_ryan_lazygit_config",
        "_run_bashtop",
        "select_torch_device",
        "text_to_speech",
        "_get_executable",
        "currently_running_mac",
        "set_os_volume",
        "string_to_clipboard",
        "pseudo_terminal",
        "load_image_from_clipboard",
        "_install_lazygit",
        "get_system_fonts"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "_get_executable": {
      "function_name": "_get_executable",
      "calls": [
        "currently_running_mac",
        "strip_file_extension",
        "file_exists",
        "make_directory",
        "currently_running_linux",
        "path_join",
        "download_url"
      ],
      "called_by": [
        "_get_esrgan_executable",
        "_get_rife_executable"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "_get_executable",
        "currently_running_mac",
        "strip_file_extension",
        "file_exists",
        "make_directory",
        "_get_rife_executable",
        "currently_running_linux",
        "path_join",
        "_get_esrgan_executable",
        "download_url"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": true
    },
    "_run_bashtop": {
      "function_name": "_run_bashtop",
      "calls": [
        "currently_running_mac",
        "get_system_commands",
        "fansi_print",
        "_run_sys_command",
        "currently_running_windows",
        "currently_running_linux"
      ],
      "called_by": [],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "_run_sys_command",
        "currently_running_mac",
        "currently_running_windows",
        "_run_bashtop",
        "get_system_commands",
        "currently_running_linux",
        "fansi_print"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": true
    },
    "string_to_clipboard": {
      "function_name": "string_to_clipboard",
      "calls": [
        "currently_running_mac",
        "_copy_text_over_terminal",
        "fansi_print",
        "_set_local_clipboard_string",
        "running_in_ssh"
      ],
      "called_by": [
        "accumulate_clipboard_text",
        "pseudo_terminal"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "currently_running_mac",
        "_copy_text_over_terminal",
        "string_to_clipboard",
        "pseudo_terminal",
        "fansi_print",
        "accumulate_clipboard_text",
        "_set_local_clipboard_string",
        "running_in_ssh"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "load_image_from_clipboard": {
      "function_name": "load_image_from_clipboard",
      "calls": [
        "currently_running_mac",
        "save",
        "currently_running_desktop",
        "delete_file",
        "pip_import",
        "load_image",
        "currently_running_windows",
        "temporary_file_path"
      ],
      "called_by": [
        "_paste_from_clipboard"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "currently_running_mac",
        "save",
        "currently_running_desktop",
        "delete_file",
        "pip_import",
        "load_image_from_clipboard",
        "load_image",
        "currently_running_windows",
        "_paste_from_clipboard",
        "temporary_file_path"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "text_to_speech": {
      "function_name": "text_to_speech",
      "calls": [
        "currently_running_mac",
        "text_to_speech_via_apple",
        "text_to_speech_via_google",
        "random_element",
        "run_as_new_thread"
      ],
      "called_by": [
        "text_to_speech_voices_comparison"
      ],
      "aliases": [],
      "via_variants": [
        "text_to_speech_via_apple",
        "text_to_speech_via_google"
      ],
      "cluster": [
        "currently_running_mac",
        "text_to_speech_via_apple",
        "text_to_speech_via_google",
        "text_to_speech",
        "random_element",
        "run_as_new_thread",
        "text_to_speech_voices_comparison"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "set_os_volume": {
      "function_name": "set_os_volume",
      "calls": [
        "currently_running_mac",
        "pip_import",
        "is_number"
      ],
      "called_by": [],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "set_os_volume",
        "currently_running_mac",
        "pip_import",
        "is_number"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "play_sound_file": {
      "function_name": "play_sound_file",
      "calls": [
        "currently_running_mac",
        "pip_import",
        "play_sound_from_samples",
        "play_sound_file_via_pygame",
        "play_sound_file_via_afplay",
        "currently_running_windows",
        "currently_running_linux",
        "load_sound_file"
      ],
      "called_by": [],
      "aliases": [],
      "via_variants": [
        "play_sound_file_via_afplay",
        "play_sound_file_via_pygame"
      ],
      "cluster": [
        "currently_running_mac",
        "play_sound_file",
        "pip_import",
        "play_sound_from_samples",
        "play_sound_file_via_pygame",
        "play_sound_file_via_afplay",
        "currently_running_windows",
        "currently_running_linux",
        "load_sound_file"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    }
  },
  "documentation_status": {
    "currently_running_mac": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "_get_executable": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "_run_bashtop": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "string_to_clipboard": {
      "current_quality": "basic",
      "current_docstring": "Copies a string to the clipboard so you can paste it later\nFirst tries to copy the string to the system clipboard.\nIf that doesn't work, it falls back to writing your string to a local file called '.r...",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "load_image_from_clipboard": {
      "current_quality": "basic",
      "current_docstring": "#Grab an image copied from your clipboard ",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type",
        "Add supported file formats and common usage patterns",
        "Expand description with more detail about purpose and behavior"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "text_to_speech": {
      "current_quality": "basic",
      "current_docstring": "An abstract combination of the other two text-to-speech methods that automatically selects the right one depending on platform compatiability/whether you specified a compatiable voice etc.\nFeel free t...",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "set_os_volume": {
      "current_quality": "basic",
      "current_docstring": "Set your operating system's volume ",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type",
        "Expand description with more detail about purpose and behavior"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "play_sound_file": {
      "current_quality": "basic",
      "current_docstring": "THIS Function is an abstraction of playing sound files. Just plug in whatever method works on your computer into this one to make it work\nNOTE: These functions should all run on separate threads from ...",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    }
  },
  "work_instructions": [
    "For each function in this package:",
    "1. Read the existing docstring (if any) and understand the function's purpose",
    "2. Examine the function's implementation to understand its behavior",
    "3. Check related functions (in context) to understand how they work together",
    "4. ENHANCE (don't replace) the docstring following the template:",
    "   - Keep original docstring if it exists",
    "   - Add 'Enhanced Documentation:' section with usage patterns",
    "   - Include concrete examples with >>> syntax",
    "   - Document parameters and return values",
    "   - Note related functions and when to use vs alternatives",
    "   - Add relevant tags for searchability",
    "5. Test your examples to ensure they work",
    "6. Update the appropriate tag files in documentation/tags/"
  ],
  "quality_checklist": [
    "\u2610 Each function has enhanced docstring with purpose clearly explained",
    "\u2610 All parameters are documented with types and descriptions",
    "\u2610 Return values are documented with types and descriptions",
    "\u2610 At least one concrete example with >>> syntax that actually runs",
    "\u2610 Related functions are mentioned with explanations",
    "\u2610 Usage patterns and common scenarios are described",
    "\u2610 Relevant tags added for searchability",
    "\u2610 Function added to appropriate tag files in documentation/tags/",
    "\u2610 Examples tested and confirmed working",
    "\u2610 Cross-references to multiplexing patterns or _via_ variants documented"
  ]
}