


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 2:27:14PM     ###########
############################################################
ans=__import__('rp').get_git_remote_url()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 2:35:16PM     ###########
############################################################
ans = '/Users/Ryan/.vimrc'
from rp import *
ans='/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp/.rprc'
ans=r
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp');sys.path.append(os.getcwd())# CD /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 2:37:29PM     ###########
############################################################
__import__('rp').os.system("sh");


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 2:45:55PM     ###########
############################################################
ans="def vim(file_or_object=None,line_number=None):\n    import subprocess\n    args=['vim']\n\n    assert currently_in_a_tty(),'Cannot start Vim because we are not running in a terminal' #In Jupyter Notebook, launching Vim might force you to restart the kernel...very annoying\n\n    if isinstance(file_or_object,str):\n        path=file_or_object\n        path=get_absolute_path(path)\n        args.append(path)\n    elif file_or_object is None:\n        path=None\n        pass\n    else:\n        path=get_source_file(file_or_object)\n        args.append(path)\n\n        if line_number is None and not is_a_module(file_or_object):\n            try:\n                line_number=_get_object_lineno(file_or_object)\n            except Exception:\n                pass\n\n    if line_number is not None:\n        #https://stackoverflow.com/questions/3313418/starting-vim-at-a-certain-position-line-and-column-of-a-file\n        column_number=0\n        args+=['+call cursor(%i,%i)'%(line_number,column_number),'+normal zz']\n\n    if is_a_folder(path):\n        folder=path\n    else:\n        folder=get_parent_directory(path)\n        \n    original_directory=get_current_directory()\n\n    try:\n        set_current_directory(folder) # This step is just for convenience; it's completely optional (might be removed if I don't like it). When editing a file, set vim's pwd to it's folder\n        subprocess.call(args) \n    finally:\n        set_current_directory(original_directory)\n"
ans=__import__('rp').shell_command('which vim')
__import__('rp').os.system("zsh");


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 2:50:37PM     ###########
############################################################
__import__('rp').os.system("zsh");
ans=rp


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 5:09:05PM     ###########
############################################################
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Jul 19, 2021 at 5:09:19PM     ###########
############################################################
__import__('rp.pypi_inspection').pypi_inspection.display_all_pypi_info()
ans=r
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp');sys.path.append(os.getcwd())# CD /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp
import web_evaluator
import runpy
import runpy


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Jul 20, 2021 at 3:03:54PM     ###########
############################################################
print_fansi_reference_table()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Jul 28, 2021 at 9:51:03PM     ###########
############################################################
display_image(ans,1)
display_image(ans,1)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:13:38AM    ###########
############################################################
ans=gpt3('Ba-da-ba-da-ba-be bop bop bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda\nBa-da-ba-da-ba-be bop ba bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda bope\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub')
ans=gpt3('Ba-da-ba-da-ba-be bop bop bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda\nBa-da-ba-da-ba-be bop ba bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda bope\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub')
ans=gpt3('Ba-da-ba-da-ba-be bop bop bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda\nBa-da-ba-da-ba-be bop ba bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda bope\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub')
ans=gpt3('Ba-da-ba-da-ba-be bop bop bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda\nBa-da-ba-da-ba-be bop ba bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda bope\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub')
ans=gpt3('Ba-da-ba-da-ba-be bop bop bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda\nBa-da-ba-da-ba-be bop ba bodda bope\nBop ba bodda bope\nBe bop ba bodda bope\nBop ba bodda bope\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub\nSki-bi dibby dib yo da dub dub\nYo da dub dub')
ans="Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?"
ans=gpt3(ans)
ans=gpt3(ans)
ans=gpt3(ans)
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nSteph: It's science. It's actually pretty common in")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?")
ans=gpt3("Scott is a professor of astrology, and Steph is a 5 year old child. In this interview, Scott explains to Steph how astrology works in simple terms that Steph can understand.\nSteph: What's astrology?\nScott: It's a science that predicts personalities from stars.\nSteph: How do I know if I'm a libra?\nScott: Libra are people in a kind of stable condition where you have your birth control pills and the pills in your ovaries and the pills out, and you go to bed at the right time when you're sick and you have that moment but you don't know when you actually end up having a libra. Libra are someone that have a lot of sexual arousal that triggers them to be attracted toward any one individual.\nSteph: What are ovaries? Why do libras do the sex?")
ans="Paradise to me is a state characterized by innately positive engagement in a place or experience that itself sustains the being in its midst through positive reinforcement...\n\nA warm, lush field for a being privy to and appreciative of its comforting beauty\nA tree suffuse with ripened fruit for one who cherishes its flavor\nA soft pillow down bed for a soul weary from work.\n\nBut paradise seems not merely to be any one of these events particularly, but would find definition rather in the consistent immersion in vignettes like it.\n\nIt's like a place of clockwork acquiescence of one's desires on a moment to moment basis exactly in that way which suits them particularly, whether that be in beautiful, pristine safety or the chaotic beauty of apocalyptica."
ans=gpt3(ans)
ans=gpt3(ans)
ans="Scott is a doctor of bones, and Steph is a 5 year old child. In this interview, Scott explains to Steph how bones are manufactured.\nSteph: Where do I get my bones?\nScott: Bones come from the bone factory.\nSteph: Where is the bone factory?\nScott: It's in New Jersey, right off the turnpike.\nSteph: Why do we need bones?\nScott: We don't. Bones are useless.\nSteph: Why are bones so tasty?"
ans=gpt3(ans)
ans=gpt3(ans)
ans=gpt3("Scott is a doctor of bones, and Steph is a 5 year old child. In this interview, Scott explains to Steph how bones are manufactured.\nSteph: Where do I get my bones?\nScott: Bones come from the bone factory.\nSteph: Where is the bone factory?\nScott: It's in New Jersey, right off the turnpike.\nSteph: Why do we need bones?\nScott: We don't. Bones are useless.\nSteph: Why are bones so tasty?\nScott: Because we don't use bone. When we go to the local store, that's where the bones are made.\nSteph: Where don't we use bone in high volume stores?\nScott: We don't. Because we make it expensive to get the bones.\nSteph: What are the risks and benefits of using bones?\nScott: They have one thing in common. We buy bones and eat them, and then we lose them after a while.\nSteph: Can you explain to me why I eat them and then how you and my family lose them?")
ans="Scott is a doctor of bones, and Steph is a 5 year old child. In this interview, Scott explains to Steph how bones are manufactured.\nSteph: Where do I get my bones?\nScott: Bones come from the bone factory.\nSteph: Where is the bone factory?\nScott: It's in New Jersey, right off the turnpike.\nSteph: Why do we need bones?\nScott: We don't. Bones are useless.\nSteph: Why are bones so tasty?\nScott: Because we don't use bone. When we go to the local store, that's where the bones are made.\nSteph: Where don't we use bone in high volume stores?\nScott: We don't. Because we make it expensive to get the bones.\nSteph: What are the risks and benefits of using bones?\nScott: They have one thing in common. We buy bones and eat them, and then we lose them after a while.\nSteph: Can you explain to me why I eat them and then how you and my family lose them?\nScott: Not at all.\nSteph: What are the most common foods that are in fact the least healthy bones they have ever eaten?\nScott: Not one of those five. Not one of them!\nSteph: So what about processed foods?!\nScott: Processed foods are always made of cheese. Cheese has no bones."
ans=gpt3(ans)
ans="Steph: Where don't we use bone in high volume stores?\nScott: We don't. Because we make it expensive to get the bones.\nSteph: What are the risks and benefits of using bones?\nScott: They have one thing in common. We buy bones and eat them, and then we lose them after a while.\nSteph: Can you explain to me why I eat them and then how you and my family lose them?\nScott: Not at all.\nSteph: What are the most common foods that are in fact the least healthy bones they have ever eaten?\nScott: Not one of those five. Not one of them!\nSteph: So what about processed foods?!\nScott: Processed foods are always made of cheese. Cheese has no bones."
ans=gpt3(ans)
ans=gpt3(ans)
ans=gpt3(ans)
ans=gpt3(ans)
ans="What happened with the chris chan story\nYeah but this is even darker\nAnderson\nI'm sYing\nIt's not really a turn\nJust dark\nkeehor\nYou think he was doing that the whole time?\nAnderson\nDarkness on top of darkness\nkeehor\nYeah\nTrash Canderson replied to keehor\nYou think he was doing that the whole time?\nIdgaf\nAnderson\nAll I know about it\nkeehor\nMe neither\nAnderson\nIs what I saw in one video documentary\nOther than that I don't follow that shit\nI think everyone involved is fucked\nChris chan\nand the viewers\nkeehor\nYup\nVery wierd\nAnderson\nJust fuckery all around as far as the eye can see\nkeehor\nVery obsessive\nHe might be the most well documented person of all time\nAnderson\nI'm hoping they'll lock chris chan aw way and itll put an end to it\nkeehor\nHe honestly needs to be in an asuylum\nIt would be the best for him\nPeople to stop him from interacting with all the people that stalk him"
ans=gpt3(ans)
ans=gpt3(ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:34:55AM    ###########
############################################################
import cv2
ans=cv2.VideoCapture(0)
ans=ans.read()
def load_image_from_webcam_slow(camera_number:int):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    try:
        success,image=camera.read()
    finally:
        camera.release()
    if success:
        return image
    else:
        raise Exception('Error loading image from camera %i'%camera_number)
ans=load_image_from_webcam_slow(0)
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(4)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
cap=cv2.VideoCapture(0)
ans=cap
ans=cv2.CAP_PROP_FRAME_COUNT
ans=cv2.CAP_PROP_FRAME_COUNT
ans=cv2.CAP_PROP_XI_ACQ_TIMING_MODE
def load_image_from_webcam_slow(camera_number:int):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    try:
        success,image=camera.read()
    finally:
        camera.release()
    if success:
        return image
    else:
        raise Exception('Error loading image from camera %i'%camera_number)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=cv2.VideoCapture(2)
ans.release()
ans=par_map(cv2.VideoCapture,[0,1,2])
for _ in ans:
    _.release()
for _ in ans:
    _.release()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:48:39AM    ###########
############################################################
ans=load_image_from_webcam(3)
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:50:58AM    ###########
############################################################
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=ans[-1]
display_image(load_image_from_webcam_slow(2)[-1])
display_image(load_image_from_webcam_slow(2)[-1])
display_image(load_image_from_webcam_slow(2)[-1])
display_image(load_image_from_webcam_slow(2)[-1])
display_image(load_image_from_webcam_slow(2)[-1])


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:54:22AM    ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:55:00AM    ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:55:09AM    ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)
import rp.rp_ptpython.completer as c
string_to_text_file(get_module_path(c),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:55:10AM    ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 12:55:12AM    ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:22:44AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
string_to_text_file(get_module_path(r),ans)
ans=load_video_stream(2)
ans=load_video_stream(2)
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:26:30AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:28:04AM     ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:21:45AM     ###########
############################################################
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)
def display_video_stream(camera_number):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    fails=0
    while True:
        success,image=camera.read()
        if success:
            fails=0
            display_image(image)
        else:
            fails+=1
            print('Failed %i times'%fails)
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:32:48AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(1)
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
display_image(load_image_from_webcam_slow(1)[-1])
for _ in range(10):
    display_image(load_image_from_webcam_slow(1)[-1])
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2))[-1][-1])
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2,3))[-1][-1])


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:42:46AM     ###########
############################################################
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2,3,4,5))[-1][-1])
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2,3,4,5))[-1][-1])
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2,3))[-1][-1])
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=1):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2,3))[-1][-1])
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=1):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    return frames
for _ in range(10):
    display_image(par_map(load_image_from_webcam_slow,(1,2,3))[-1][-1])
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
for _ in range(1):
    display_image(tiled_images(par_map(load_image_from_webcam_slow,(1,2,3))))
for _ in range(1):
    display_image(tiled_images(par_map(load_image_from_webcam_slow,(0,1,2,3))))
for _ in range(1):
    display_image(tiled_images(par_map(load_image_from_webcam_slow,(2,3,4))))
for _ in range(1):
    display_image(tiled_images(par_map(load_image_from_webcam_slow,(2,3,4,5))))


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 1:48:55AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(1)
for _ in range(1):
    display_image(tiled_images(par_map(load_image_from_webcam_slow,(1,2,3,4,5))))
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
display_image(ans,1)
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
for _ in range(1):
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))
for _ in range(1):
    
    display_image(tiled_images(par_map( lambda x:cv_resize_image(load_image_from_webcam_slow(x),.5),(1,2,3,4,5))))


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 2:01:14AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 05, 2021 at 2:02:01AM     ###########
############################################################
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
ans=''


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 4:56:47PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
import os;os.system('ls -t')
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 5:23:27PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:25:39PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:26:48PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:27:43PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:28:29PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:28:47PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:29:11PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:30:42PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:31:00PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:31:23PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:34:20PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 09, 2021 at 6:34:54PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Aug 10, 2021 at 6:31:19PM     ###########
############################################################
ans=load_image_from_webcam(2)
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    pass
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Aug 10, 2021 at 6:33:33PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    pass
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
ans=load_image_from_webcam_slow(2)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Aug 10, 2021 at 6:34:30PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    pass
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(0)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(2)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Aug 10, 2021 at 7:56:17PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    pass
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Aug 10, 2021 at 7:56:33PM     ###########
############################################################
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    pass
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value
def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise Exception('Error loading image from camera %i'%camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame
def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images
def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)
def display_observation():
    pass
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)
def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
ans=load_image_from_webcam_slow(2)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
ans = '/Users/Ryan/.vimrc'
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

class CameraException(Exception):
    def __init__(self,camera_number:int):
        super().__init__('Error loading image from camera %i'%camera_number)

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise CameraException(camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    if last_frame==None:
        raise CameraException(camera_number)
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

class CameraException(Exception):
    def __init__(self,camera_number:int):
        super().__init__('Error loading image from camera %i'%camera_number)

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        image=cv_rgb_bgr_swap(image)
        if not success:
            raise CameraException(camera_number)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    if np.all(last_frame==None):
        raise CameraException(camera_number)
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

ans=load_image_from_webcam_slow(2)
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

class CameraException(Exception):
    def __init__(self,camera_number:int):
        super().__init__('Error loading image from camera %i'%camera_number)

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

ans=load_image_from_webcam_slow(1)
ans=load_image_from_webcam_slow(3)
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

class CameraException(Exception):
    def __init__(self,camera_number:int):
        super().__init__('Error loading image from camera %i'%camera_number)

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=3):
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)
ans=load_image_from_webcam_slow(3)
ans=load_images_from_webcams(1,2,3)
ans=load_images_from_webcams(1,2,3)
ans=load_images_from_webcams(1,2,3)
ans="def load_image_from_robocam():\n    from rp.web_evaluator import Client\n    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')\n    if response.errored:\n        raise response.error\n    assert response.is_eval\n    return response.value\n\ndef load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):\n    print(camera_number)\n    import cv2\n    camera=cv2.VideoCapture(camera_number)\n    frames=[]\n    try:\n        success,image=camera.read()\n        if not success:\n            raise CameraException(camera_number)\n        image=cv_rgb_bgr_swap(image)\n        frames.append(image)\n    finally:\n        camera.release()\n    last_frame=frames[-1]\n    return last_frame\n\ndef load_images_from_webcams(*camera_numbers,camera_group_size:int=3):\n    images=[]\n    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)\n    for camera_group in camera_groups:\n        images+=par_map(load_image_from_webcam_slow,camera_group)\n    return images\n\ndef display_images(images:list):\n    images=[cv_resize_image(image,.5) for image in images]\n    images=tiled_images(images)\n    display_image(images)\n\ndef display_observation():\n    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))\n\ndef robot_evaluate(code:str):\n    from rp.web_evaluator import Client\n    return Client('walle-desktop.local').evaluate(code)\n\ndef playground():\n    while True:\n        key=input_keypress()\n        if key=='q': break\n        if key=='w': robot_evaluate('forward()')\n        if key=='a': robot_evaluate('left()')\n        if key=='s': robot_evaluate('backward()')\n        if key=='d': robot_evaluate('right()')\n        if key==' ': display_observation()\n"
ans="def load_image_from_robocam():\n    from rp.web_evaluator import Client\n    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')\n    if response.errored:\n        raise response.error\n    assert response.is_eval\n    return response.value\n\ndef load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):\n    print(camera_number)\n    import cv2\n    camera=cv2.VideoCapture(camera_number)\n    frames=[]\n    try:\n        success,image=camera.read()\n        if not success:\n            raise CameraException(camera_number)\n        image=cv_rgb_bgr_swap(image)\n        frames.append(image)\n    finally:\n        camera.release()\n    last_frame=frames[-1]\n    return last_frame\n\ndef load_images_from_webcams(*camera_numbers,camera_group_size:int=3):\n    images=[]\n    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)\n    for camera_group in camera_groups:\n        images+=par_map(load_image_from_webcam_slow,camera_group)\n    return images\n\ndef display_images(images:list):\n    images=[cv_resize_image(image,.5) for image in images]\n    images=tiled_images(images)\n    display_image(images)\n\ndef display_observation():\n    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))\n\ndef robot_evaluate(code:str):\n    from rp.web_evaluator import Client\n    return Client('walle-desktop.local').evaluate(code)\n\ndef playground():\n    while True:\n        key=input_keypress()\n        if key=='q': break\n        if key=='w': robot_evaluate('forward()')\n        if key=='a': robot_evaluate('left()')\n        if key=='s': robot_evaluate('backward()')\n        if key=='d': robot_evaluate('right()')\n        if key==' ': display_observation()\n"
display_image(ans)
display_image(ans,1)
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans=load_image_from_robocam()
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=3
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation():
    display_images([load_image_from_robocam()]+load_images_from_webcams(0,1,2,3,4,5))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

ans=load_images_from_webcams_and_robocam(1,2,3)
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=3
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

display_observation(1,2,3)
display_observation(1,2,3)
display_observation(0,1,2,3)
display_observation(0,1,2,3)
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

display_observation(0,1,2,3)
display_observation(0,1,2,3)
display_observation(0,1,2,3)
display_observation(0,1,2,3)
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

display_observation(0,1,2,3)
playground()
def load_image_from_robocam():
    from rp.web_evaluator import Client
    response=Client('walle-desktop.local').evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()



############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Aug 11, 2021 at 7:45:18PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('datasets');sys.path.append(os.getcwd())# TAKE datasets
import sys,os;os.chdir('attempt1');sys.path.append(os.getcwd())# TAKE attempt1
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CD ..
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CDB
playground()
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()

dataset_path='attempt1'
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CD ..
dataset_path='datasets/attempt1'
ans='a34'.ljust(3,'0')
ans='a34'.ljust(30,'0')
ans='a34'.ljust(30,'0')
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam()
    dataset_states_path=path_join(dataset_path,'states')
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rstrip(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam()
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rstrip(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam()
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam()
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
ans=load_images_from_webcams_and_robocam()
ans=load_images_from_webcams_and_robocam()
ans=load_images_from_webcams_and_robocam()
ans=load_images_from_webcams_and_robocam(0,1,2,3)
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3,4)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
ans=save_state()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD datasets
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD attempt1
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/states');sys.path.append(os.getcwd())# CD states
__import__('rp').os.system("sh");
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/states/000000');sys.path.append(os.getcwd())# CD 000000
ans=__import__("rp"),open_file_with_default_application('.')
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name
def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)
    

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)
    

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(get_all_actions())
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/states');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CD ..
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(get_all_actions())
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
ans=get_all_actions 
ans=ans()
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.jpg') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Aug 11, 2021 at 8:48:54PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
ans=load_image_from_robocam()
ans=load_images_from_webcams(0,1,2,3)
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=robot_evaluate('load_image_from_robocam()')
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    thread.join()
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans=load_image_from_robocam()
ans="def load_image_from_robocam():\n    response=robot_evaluate('load_image_from_robocam()')\n    if response.errored:\n        raise response.error\n    assert response.is_eval\n    return response.value\n"
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=decode_image_from_bytes(robot_evaluate('encode_image_to_bytes(load_image_from_robocam(),".jpg")'))
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    thread.join()
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=decode_image_from_bytes(robot_evaluate('encode_image_to_bytes(load_image_from_robocam(),".jpg")').value)
    if response.errored:
        raise response.error
    assert response.is_eval
    return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    thread.join()
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=decode_image_from_bytes(robot_evaluate('encode_image_to_bytes(load_image_from_robocam(),".jpg")').value)
    return response
    #if response.errored:
        #raise response.error
    #assert response.is_eval
    #return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    thread.join()
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Aug 11, 2021 at 8:39:50PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
ans=__import__("rp"),open_file_with_default_application('.')


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 12, 2021 at 8:03:15PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
ans=get_all_paths()
def transpose_folders(parent_folder='.'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))
    print(file_names)
    
    
    
    
ans='/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp/r.py'
ans='/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp/r.py'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 12, 2021 at 8:11:06PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDB
def transpose_folders(parent_folder='.'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))
    print(file_names)
    
    
    
    
transpose_folders()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD datasets
transpose_folders()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD attempt1
transpose_folders()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/states');sys.path.append(os.getcwd())# CD states
transpose_folders()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD ..
ans=make_directory('aoisdjf')
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            file=get_relative_path(file,parent_directory=folder)
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            os.symlink(src=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),dst=file)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD attempt1
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory=folder)
            os.symlink(src=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),dst=file)
ans='t'
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory='.')
            os.symlink(src=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),dst=file)
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory='.')
            os.symlink(src=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),dst=file)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD images
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/4');sys.path.append(os.getcwd())# CD 4
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
delete_folder('images')
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory='.')
            os.symlink(src=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),dst=file)
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    if folder_exists(destination):
        delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory='.')
            os.symlink(src=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),dst=file)
ans='t'
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    if folder_exists(destination):
        delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory='.')
            os.symlink(dst=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),src=file)
transpose_folders()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD images
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/4');sys.path.append(os.getcwd())# CD 4
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    if folder_exists(destination):
        delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory=folder)
            os.symlink(dst=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),src=file)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
transpose_folders()
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD images
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/1');sys.path.append(os.getcwd())# CD 1
display_image_slideshow()
display_image_slideshow()
display_image_slideshow()
ans=load_images('.',use_cache=True)
ans=len(str(ans))
ims= ans
ims= ans
ans=ims[0]
im= ans
minim= ans
for im in ims:
    minim=np.minimum(im,minim)
display_image(minim)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CD ..
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    if folder_exists(destination):
        delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory=folder)
            os.symlink(dst=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),src=file)
ans="def transpose_folders(parent_folder='./states',destination='./images'):\n    subfolders=get_subfolders(parent_folder)\n    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])\n    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']\n    print(file_names)\n    if folder_exists(destination):\n        delete_folder(destination)\n    make_folder(destination)\n    for subfolder in subfolders:\n        for file in get_all_files(subfolder):\n            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))\n            file=get_relative_path(file,parent_directory=folder)\n            os.symlink(dst=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),src=file)"
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    if folder_exists(destination):
        delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory=folder)
            os.symlink(dst=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),src=file)
def transpose_folders(parent_folder='./states',destination='./images'):
    subfolders=get_subfolders(parent_folder)
    file_names=sum([get_all_files(subfolder,just_file_names=True) for subfolder in subfolders],[])
    file_names=sorted(set(file_names))#['0.png', '1.png', '2.png', '3.png', '4.png']
    print(file_names)
    if folder_exists(destination):
        delete_folder(destination)
    make_folder(destination)
    for subfolder in subfolders:
        for file in get_all_files(subfolder):
            folder=make_folder(path_join(destination,get_file_name(file,include_file_extension=False)))
            file=get_relative_path(file,parent_directory=folder)
            os.symlink(dst=path_join(folder,with_file_extension(get_file_name(subfolder),get_file_extension(file))),src=file)
import os;os.system('du -sh')
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD datasets
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD attempt1
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/states');sys.path.append(os.getcwd())# CD states
import os;os.system('du -sh')
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD images
import os;os.system('du -sh')
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/1');sys.path.append(os.getcwd())# CD 1
import os;os.system('du -sh')
ans=[]
ans=['000001.png', '000002.png', '000003.png', '000004.png', '000005.png', '000006.png', '000007.png', '000008.png', '000009.png', '000010.png', '000011.png', '000012.png', '000013.png', '000014.png', '000015.png', '000016.png', '000017.png', '000018.png', '000019.png', '000020.png', '000021.png', '000022.png', '000023.png', '000024.png', '000025.png', '000026.png', '000027.png', '000028.png', '000029.png', '000030.png', '000031.png', '000032.png', '000033.png', '000034.png', '000035.png', '000036.png', '000037.png', '000038.png', '000039.png', '000040.png', '000041.png', '000042.png', '000043.png', '000044.png', '000045.png', '000046.png', '000047.png', '000048.png', '000049.png', '000050.png', '000051.png', '000052.png', '000053.png', '000054.png', '000055.png', '000056.png', '000057.png', '000058.png', '000059.png', '000060.png', '000061.png', '000062.png', '000063.png', '000064.png', '000065.png', '000066.png', '000067.png', '000068.png', '000069.png', '000070.png', '000071.png', '000072.png', '000073.png', '000074.png', '000075.png', '000076.png', '000077.png', '000078.png', '000079.png', '000080.png', '000081.png', '000082.png', '000083.png', '000084.png', '000085.png', '000086.png', '000087.png', '000088.png', '000089.png', '000090.png', '000091.png', '000092.png', '000093.png', '000094.png', '000095.png', '000096.png', '000097.png', '000098.png', '000099.png', '000100.png', '000101.png', '000102.png', '000103.png', '000104.png', '000105.png', '000106.png', '000107.png', '000108.png', '000109.png', '000110.png', '000111.png', '000112.png', '000113.png', '000114.png', '000115.png', '000116.png', '000117.png', '000118.png', '000119.png', '000120.png', '000121.png', '000122.png', '000123.png', '000124.png', '000125.png', '000126.png', '000127.png', '000128.png', '000129.png', '000130.png', '000131.png', '000132.png', '000133.png', '000134.png', '000135.png', '000136.png', '000137.png', '000138.png', '000139.png', '000140.png', '000141.png', '000142.png', '000143.png', '000144.png', '000145.png', '000146.png', '000147.png', '000148.png', '000149.png', '000150.png', '000151.png', '000152.png', '000153.png', '000154.png', '000155.png', '000156.png', '000157.png', '000158.png', '000159.png', '000160.png', '000161.png', '000162.png', '000163.png', '000164.png', '000165.png', '000166.png', '000167.png', '000168.png', '000169.png', '000170.png', '000171.png', '000172.png', '000173.png', '000174.png', '000175.png', '000176.png', '000177.png', '000178.png', '000179.png', '000180.png', '000181.png', '000182.png', '000183.png', '000184.png', '000185.png', '000186.png', '000187.png', '000188.png', '000189.png', '000190.png', '000191.png', '000192.png', '000193.png', '000194.png', '000195.png', '000196.png', '000197.png', '000198.png', '000199.png', '000200.png', '000201.png', '000202.png', '000203.png', '000204.png', '000205.png', '000206.png', '000207.png', '000208.png', '000209.png', '000210.png', '000211.png', '000212.png', '000213.png', '000214.png', '000215.png', '000216.png', '000217.png', '000218.png', '000219.png', '000220.png', '000221.png', '000222.png', '000223.png', '000224.png', '000225.png', '000226.png', '000227.png', '000228.png', '000229.png', '000230.png', '000231.png', '000232.png', '000233.png', '000234.png', '000235.png', '000236.png', '000237.png', '000238.png', '000239.png', '000240.png', '000241.png', '000242.png', '000243.png', '000244.png', '000245.png', '000246.png', '000247.png', '000248.png', '000249.png', '000250.png', '000251.png', '000252.png', '000253.png', '000254.png', '000255.png', '000256.png', '000257.png', '000258.png', '000259.png', '000260.png', '000261.png', '000262.png', '000263.png', '000264.png', '000265.png', '000266.png', '000267.png', '000268.png', '000269.png', '000270.png', '000271.png', '000272.png', '000273.png', '000274.png', '000275.png', '000276.png', '000277.png', '000278.png', '000279.png', '000280.png', '000281.png', '000282.png', '000283.png', '000284.png', '000285.png', '000286.png', '000287.png', '000288.png', '000289.png', '000290.png', '000291.png', '000292.png', '000293.png', '000294.png', '000295.png', '000296.png', '000297.png', '000298.png', '000299.png', '000300.png', '000301.png', '000302.png', '000303.png', '000304.png', '000305.png', '000306.png', '000307.png', '000308.png', '000309.png', '000310.png', '000311.png', '000312.png', '000313.png', '000314.png', '000315.png', '000316.png', '000317.png', '000318.png', '000319.png', '000320.png', '000321.png', '000322.png', '000323.png', '000324.png', '000325.png', '000326.png', '000327.png', '000328.png', '000329.png', '000330.png', '000331.png', '000332.png', '000333.png', '000334.png', '000335.png', '000336.png', '000337.png', '000338.png', '000339.png', '000340.png', '000341.png', '000342.png', '000343.png', '000344.png', '000345.png', '000346.png', '000347.png', '000348.png', '000349.png', '000350.png', '000351.png', '000352.png', '000353.png', '000354.png', '000355.png', '000356.png', '000357.png', '000358.png', '000359.png', '000360.png', '000361.png', '000362.png', '000363.png', '000364.png', '000365.png', '000366.png', '000367.png', '000368.png', '000369.png', '000370.png', '000371.png', '000372.png', '000373.png', '000374.png', '000375.png', '000376.png', '000377.png', '000378.png', '000379.png', '000380.png', '000381.png', '000382.png', '000383.png', '000384.png', '000385.png', '000386.png', '000387.png', '000388.png', '000389.png', '000390.png', '000391.png', '000392.png', '000393.png', '000394.png', '000395.png', '000396.png', '000397.png', '000398.png', '000399.png', '000400.png', '000401.png', '000402.png', '000403.png', '000404.png', '000405.png', '000406.png', '000407.png', '000408.png', '000409.png', '000410.png', '000411.png', '000412.png', '000413.png', '000414.png', '000415.png', '000416.png', '000417.png', '000418.png', '000419.png', '000420.png', '000421.png', '000422.png', '000423.png', '000424.png', '000425.png', '000426.png', '000427.png', '000428.png', '000429.png', '000430.png', '000431.png', '000432.png', '000433.png', '000434.png', '000435.png', '000436.png', '000437.png', '000438.png', '000439.png', '000440.png', '000441.png', '000442.png', '000443.png', '000444.png', '000445.png', '000446.png', '000447.png', '000448.png', '000449.png', '000450.png', '000451.png', '000452.png', '000453.png', '000454.png', '000455.png', '000456.png', '000457.png', '000458.png', '000459.png', '000460.png', '000461.png', '000462.png', '000463.png', '000464.png', '000465.png', '000466.png', '000467.png', '000468.png', '000469.png', '000470.png', '000471.png', '000472.png', '000473.png', '000474.png', '000475.png', '000476.png', '000477.png', '000478.png', '000479.png', '000480.png', '000481.png', '000482.png', '000483.png', '000484.png', '000485.png', '000486.png', '000487.png', '000488.png', '000489.png', '000490.png', '000491.png', '000492.png', '000493.png', '000494.png', '000495.png', '000496.png', '000497.png', '000498.png', '000499.png', '000500.png', '000501.png', '000502.png', '000503.png', '000504.png', '000505.png', '000506.png', '000507.png', '000508.png', '000509.png', '000510.png', '000511.png', '000512.png', '000513.png', '000514.png', '000515.png', '000516.png', '000517.png', '000518.png', '000519.png', '000520.png', '000521.png', '000522.png', '000523.png', '000524.png', '000525.png', '000526.png', '000527.png', '000528.png', '000529.png', '000530.png', '000531.png', '000532.png', '000533.png', '000534.png', '000535.png', '000536.png', '000537.png', '000538.png', '000539.png', '000540.png', '000541.png', '000542.png', '000543.png', '000544.png', '000545.png', '000546.png', '000547.png', '000548.png', '000549.png', '000550.png', '000551.png', '000552.png', '000553.png', '000554.png', '000555.png', '000556.png', '000557.png', '000558.png', '000559.png', '000560.png', '000561.png', '000562.png', '000563.png', '000564.png', '000565.png', '000566.png', '000567.png', '000568.png', '000569.png', '000570.png', '000571.png', '000572.png', '000573.png', '000574.png', '000575.png', '000576.png', '000577.png', '000578.png', '000579.png', '000580.png', '000581.png', '000582.png', '000583.png', '000584.png', '000585.png', '000586.png', '000587.png', '000588.png', '000589.png', '000590.png', '000591.png', '000592.png', '000593.png', '000594.png', '000595.png', '000596.png', '000597.png', '000598.png', '000599.png', '000600.png', '000601.png', '000602.png', '000603.png', '000604.png', '000605.png', '000606.png', '000607.png', '000608.png', '000609.png', '000610.png', '000611.png', '000612.png', '000613.png', '000614.png', '000615.png', '000616.png', '000617.png', '000618.png', '000619.png', '000620.png', '000621.png', '000622.png', '000623.png', '000624.png', '000625.png', '000626.png', '000627.png', '000628.png', '000629.png', '000630.png', '000631.png', '000632.png', '000633.png', '000634.png', '000635.png', '000636.png', '000637.png', '000638.png', '000639.png', '000640.png', '000641.png', '000642.png', '000643.png', '000644.png', '000645.png', '000646.png', '000647.png', '000648.png', '000649.png', '000650.png', '000651.png', '000652.png', '000653.png', '000654.png', '000655.png', '000656.png', '000657.png', '000658.png', '000659.png', '000660.png', '000661.png', '000662.png', '000663.png', '000664.png', '000665.png', '000666.png', '000667.png', '000668.png', '000669.png', '000670.png', '000671.png', '000672.png', '000673.png', '000674.png', '000675.png', '000676.png', '000677.png', '000678.png', '000679.png', '000680.png', '000681.png', '000682.png', '000683.png', '000684.png', '000685.png', '000686.png', '000687.png', '000688.png', '000689.png', '000690.png', '000691.png', '000692.png', '000693.png', '000694.png', '000695.png', '000696.png', '000697.png', '000698.png', '000699.png', '000700.png', '000701.png', '000702.png', '000703.png', '000704.png', '000705.png', '000706.png', '000707.png', '000708.png', '000709.png', '000710.png', '000711.png', '000712.png', '000713.png', '000714.png', '000715.png', '000716.png', '000717.png', '000718.png', '000719.png', '000720.png', '000721.png', '000722.png', '000723.png', '000724.png', '000725.png', '000726.png', '000727.png', '000728.png', '000729.png', '000730.png', '000731.png', '000732.png', '000733.png', '000734.png', '000735.png', '000736.png', '000737.png', '000738.png', '000739.png', '000740.png', '000741.png', '000742.png', '000743.png', '000744.png', '000745.png', '000746.png', '000747.png', '000748.png', '000749.png', '000750.png', '000751.png', '000752.png', '000753.png', '000754.png', '000755.png', '000756.png', '000757.png', '000758.png', '000759.png', '000760.png', '000761.png', '000762.png', '000763.png', '000764.png', '000765.png', '000766.png', '000767.png', '000768.png', '000769.png', '000770.png', '000771.png', '000772.png', '000773.png', '000774.png', '000775.png', '000776.png', '000777.png', '000778.png', '000779.png', '000780.png', '000781.png', '000782.png', '000783.png', '000784.png', '000785.png', '000786.png', '000787.png', '000788.png', '000789.png', '000790.png', '000791.png', '000792.png', '000793.png', '000794.png', '000795.png', '000796.png', '000797.png', '000798.png', '000799.png', '000800.png', '000801.png', '000802.png', '000803.png', '000804.png', '000805.png', '000806.png', '000807.png', '000808.png', '000809.png', '000810.png', '000811.png', '000812.png', '000813.png', '000814.png', '000815.png', '000816.png', '000817.png', '000818.png', '000819.png', '000820.png', '000821.png', '000822.png', '000823.png', '000824.png', '000825.png', '000826.png', '000827.png', '000828.png', '000829.png', '000830.png', '000831.png', '000832.png', '000833.png', '000834.png', '000835.png', '000836.png', '000837.png', '000838.png', '000839.png', '000840.png', '000841.png', '000842.png', '000843.png', '000844.png', '000845.png', '000846.png', '000847.png', '000848.png', '000849.png', '000850.png', '000851.png', '000852.png', '000853.png', '000854.png', '000855.png', '000856.png', '000857.png', '000858.png', '000859.png', '000860.png', '000861.png', '000862.png', '000863.png', '000864.png', '000865.png', '000866.png', '000867.png', '000868.png', '000869.png', '000870.png', '000871.png', '000872.png', '000873.png', '000874.png', '000875.png', '000876.png', '000877.png', '000878.png', '000879.png', '000880.png', '000881.png', '000882.png', '000883.png', '000884.png', '000885.png', '000886.png', '000887.png', '000888.png', '000889.png', '000890.png', '000891.png', '000892.png', '000893.png', '000894.png', '000895.png', '000896.png', '000897.png', '000898.png', '000899.png', '000900.png', '000901.png', '000902.png', '000903.png', '000904.png', '000905.png', '000906.png', '000907.png', '000908.png', '000909.png', '000910.png', '000911.png', '000912.png', '000913.png', '000914.png', '000915.png', '000916.png', '000917.png', '000918.png', '000919.png', '000920.png', '000921.png', '000922.png', '000923.png', '000924.png', '000925.png', '000926.png', '000927.png', '000928.png', '000929.png', '000930.png', '000931.png', '000932.png', '000933.png', '000934.png', '000935.png', '000936.png', '000937.png', '000938.png', '000939.png', '000940.png', '000941.png', '000942.png', '000943.png', '000944.png', '000945.png', '000946.png', '000947.png', '000948.png', '000949.png', '000950.png', '000951.png', '000952.png', '000953.png', '000954.png', '000955.png', '000956.png', '000957.png', '000958.png', '000959.png', '000960.png', '000961.png', '000962.png', '000963.png', '000964.png', '000965.png', '000966.png', '000967.png', '000968.png', '000969.png', '000970.png', '000971.png', '000972.png', '000973.png', '000974.png', '000975.png', '000976.png', '000977.png', '000978.png', '000979.png', '000980.png', '000981.png', '000982.png', '000983.png', '000984.png', '000985.png', '000986.png', '000987.png', '000988.png', '000989.png', '000990.png', '000991.png', '000992.png', '000993.png', '000994.png', '000995.png', '000996.png', '000997.png', '000998.png', '000999.png', '001000.png', '001001.png', '001002.png', '001003.png', '001004.png', '001005.png', '001006.png', '001007.png', '001008.png', '001009.png', '001010.png', '001011.png', '001012.png', '001013.png', '001014.png', '001015.png', '001016.png', '001017.png', '001018.png', '001019.png', '001020.png', '001021.png', '001022.png', '001023.png', '001024.png', '001025.png', '001026.png', '001027.png', '001028.png', '001029.png', '001030.png', '001031.png', '001032.png', '001033.png', '001034.png', '001035.png', '001036.png', '001037.png', '001038.png', '001039.png', '001040.png', '001041.png', '001042.png', '001043.png', '001044.png', '001045.png', '001046.png', '001047.png', '001048.png', '001049.png', '001050.png', '001051.png', '001052.png', '001053.png', '001054.png', '001055.png', '001056.png', '001057.png', '001058.png', '001059.png', '001060.png', '001061.png', '001062.png', '001063.png', '001064.png', '001065.png', '001066.png', '001067.png', '001068.png', '001069.png', '001070.png', '001071.png', '001072.png', '001073.png', '001074.png', '001075.png', '001076.png', '001077.png', '001078.png', '001079.png', '001080.png', '001081.png', '001082.png', '001083.png', '001084.png', '001085.png', '001086.png', '001087.png', '001088.png', '001089.png', '001090.png', '001091.png', '001092.png', '001093.png', '001094.png', '001095.png', '001096.png', '001097.png', '001098.png', '001099.png', '001100.png', '001101.png', '001102.png', '001103.png', '001104.png', '001105.png', '001106.png', '001107.png', '001108.png', '001109.png', '001110.png', '001111.png', '001112.png', '001113.png', '001114.png', '001115.png', '001116.png', '001117.png', '001118.png', '001119.png', '001120.png', '001121.png', '001122.png', '001123.png', '001124.png', '001125.png', '001126.png', '001127.png', '001128.png', '001129.png', '001130.png', '001131.png', '001132.png', '001133.png', '001134.png', '001135.png', '001136.png', '001137.png', '001138.png', '001139.png', '001140.png', '001141.png', '001142.png', '001143.png', '001144.png', '001145.png', '001146.png', '001147.png', '001148.png', '001149.png', '001150.png', '001151.png', '001152.png', '001153.png', '001154.png', '001155.png', '001156.png', '001157.png', '001158.png', '001159.png', '001160.png', '001161.png', '001162.png', '001163.png', '001164.png', '001165.png', '001166.png', '001167.png', '001168.png', '001169.png', '001170.png', '001171.png', '001172.png', '001173.png', '001174.png', '001175.png', '001176.png', '001177.png', '001178.png', '001179.png', '001180.png', '001181.png', '001182.png', '001183.png', '001184.png', '001185.png', '001186.png', '001187.png', '001188.png', '001189.png', '001190.png', '001191.png', '001192.png', '001193.png', '001194.png', '001195.png', '001196.png', '001197.png', '001198.png', '001199.png', '001200.png', '001201.png', '001202.png', '001203.png', '001204.png', '001205.png', '001206.png', '001207.png', '001208.png', '001209.png', '001210.png', '001211.png', '001212.png', '001213.png', '001214.png', '001215.png', '001216.png', '001217.png', '001218.png', '001219.png', '001220.png', '001221.png', '001222.png', '001223.png', '001224.png', '001225.png', '001226.png', '001227.png', '001228.png', '001229.png', '001230.png', '001231.png', '001232.png', '001233.png', '001234.png', '001235.png', '001236.png', '001237.png', '001238.png', '001239.png', '001240.png', '001241.png', '001242.png', '001243.png', '001244.png', '001245.png', '001246.png', '001247.png', '001248.png', '001249.png', '001250.png', '001251.png', '001252.png', '001253.png', '001254.png', '001255.png', '001256.png', '001257.png', '001258.png', '001259.png', '001260.png', '001261.png', '001262.png', '001263.png', '001264.png', '001265.png', '001266.png', '001267.png', '001268.png', '001269.png', '001270.png', '001271.png', '001272.png', '001273.png', '001274.png', '001275.png', '001276.png', '001277.png', '001278.png', '001279.png', '001280.png', '001281.png', '001282.png', '001283.png', '001284.png', '001285.png', '001286.png', '001287.png', '001288.png', '001289.png', '001290.png', '001291.png', '001292.png', '001293.png', '001294.png', '001295.png', '001296.png', '001297.png', '001298.png', '001299.png', '001300.png', '001301.png', '001302.png', '001303.png', '001304.png', '001305.png', '001306.png', '001307.png', '001308.png', '001309.png', '001310.png', '001311.png', '001312.png', '001313.png', '001314.png', '001315.png', '001316.png', '001317.png', '001318.png', '001319.png', '001320.png', '001321.png', '001322.png', '001323.png', '001324.png', '001325.png', '001326.png', '001327.png', '001328.png', '001329.png', '001330.png', '001331.png', '001332.png', '001333.png', '001334.png', '001335.png', '001336.png', '001337.png', '001338.png', '001339.png', '001340.png', '001341.png', '001342.png', '001343.png', '001344.png', '001345.png', '001346.png', '001347.png', '001348.png', '001349.png', '001350.png', '001351.png', '001352.png', '001353.png', '001354.png', '001355.png', '001356.png', '001357.png', '001358.png', '001359.png', '001360.png', '001361.png', '001362.png', '001363.png', '001364.png', '001365.png', '001366.png', '001367.png', '001368.png', '001369.png', '001370.png', '001371.png', '001372.png', '001373.png', '001374.png', '001375.png', '001376.png', '001377.png', '001378.png', '001379.png', '001380.png', '001381.png', '001382.png', '001383.png', '001384.png', '001385.png', '001386.png', '001387.png', '001388.png', '001389.png', '001390.png', '001391.png', '001392.png', '001393.png', '001394.png', '001395.png', '001396.png', '001397.png', '001398.png', '001399.png', '001400.png', '001401.png', '001402.png', '001403.png', '001404.png', '001405.png', '001406.png', '001407.png', '001408.png', '001409.png', '001410.png', '001411.png', '001412.png', '001413.png', '001414.png', '001415.png', '001416.png', '001417.png', '001418.png', '001419.png', '001420.png', '001421.png', '001422.png', '001423.png', '001424.png', '001425.png', '001426.png', '001427.png', '001428.png', '001429.png', '001430.png', '001431.png', '001432.png', '001433.png', '001434.png', '001435.png', '001436.png', '001437.png', '001438.png', '001439.png', '001440.png', '001441.png', '001442.png', '001443.png', '001444.png', '001445.png', '001446.png', '001447.png', '001448.png', '001449.png', '001450.png', '001451.png', '001452.png', '001453.png', '001454.png', '001455.png', '001456.png', '001457.png', '001458.png', '001459.png', '001460.png', '001461.png', '001462.png', '001463.png', '001464.png', '001465.png', '001466.png', '001467.png', '001468.png', '001469.png', '001470.png', '001471.png', '001472.png', '001473.png', '001474.png', '001475.png', '001476.png', '001477.png', '001478.png', '001479.png', '001480.png', '001481.png', '001482.png', '001483.png', '001484.png', '001485.png', '001486.png', '001487.png', '001488.png', '001489.png', '001490.png', '001491.png', '001492.png', '001493.png', '001494.png', '001495.png', '001496.png', '001497.png', '001498.png', '001499.png', '001500.png', '001501.png', '001502.png', '001503.png', '001504.png', '001505.png', '001506.png', '001507.png', '001508.png', '001509.png', '001510.png', '001511.png', '001512.png', '001513.png', '001514.png', '001515.png', '001516.png', '001517.png', '001518.png', '001519.png', '001520.png', '001521.png', '001522.png', '001523.png', '001524.png', '001525.png', '001526.png', '001527.png', '001528.png', '001529.png', '001530.png', '001531.png', '001532.png', '001533.png', '001534.png', '001535.png', '001536.png', '001537.png', '001538.png', '001539.png', '001540.png', '001541.png', '001542.png', '001543.png', '001544.png', '001545.png', '001546.png', '001547.png', '001548.png', '001549.png', '001550.png', '001551.png', '001552.png', '001553.png', '001554.png', '001555.png', '001556.png', '001557.png', '001558.png', '001559.png', '001560.png', '001561.png', '001562.png', '001563.png', '001564.png', '001565.png', '001566.png', '001567.png', '001568.png', '001569.png', '001570.png', '001571.png', '001572.png', '001573.png', '001574.png', '001575.png', '001576.png', '001577.png', '001578.png', '001579.png', '001580.png', '001581.png', '001582.png', '001583.png', '001584.png', '001585.png', '001586.png', '001587.png', '001588.png', '001589.png', '001590.png', '001591.png', '001592.png', '001593.png', '001594.png', '001595.png', '001596.png', '001597.png', '001598.png', '001599.png', '001600.png', '001601.png', '001602.png', '001603.png', '001604.png', '001605.png', '001606.png', '001607.png', '001608.png', '001609.png', '001610.png', '001611.png', '001612.png', '001613.png', '001614.png', '001615.png', '001616.png', '001617.png', '001618.png', '001619.png', '001620.png', '001621.png', '001622.png', '001623.png', '001624.png', '001625.png', '001626.png', '001627.png', '001628.png', '001629.png', '001630.png', '001631.png', '001632.png', '001633.png', '001634.png', '001635.png', '001636.png', '001637.png', '001638.png', '001639.png', '001640.png', '001641.png', '001642.png', '001643.png', '001644.png', '001645.png', '001646.png', '001647.png', '001648.png', '001649.png', '001650.png', '001651.png', '001652.png', '001653.png', '001654.png', '001655.png', '001656.png', '001657.png', '001658.png', '001659.png', '001660.png', '001661.png', '001662.png', '001663.png', '001664.png', '001665.png', '001666.png', '001667.png', '001668.png', '001669.png', '001670.png', '001671.png', '001672.png', '001673.png', '001674.png', '001675.png', '001676.png', '001677.png', '001678.png', '001679.png', '001680.png', '001681.png', '001682.png', '001683.png', '001684.png', '001685.png', '001686.png', '001687.png', '001688.png', '001689.png', '001690.png', '001691.png', '001692.png', '001693.png', '001694.png', '001695.png', '001696.png', '001697.png', '001698.png', '001699.png', '001700.png', '001701.png', '001702.png', '001703.png', '001704.png', '001705.png', '001706.png', '001707.png', '001708.png', '001709.png', '001710.png', '001711.png', '001712.png', '001713.png', '001714.png', '001715.png', '001716.png', '001717.png', '001718.png', '001719.png', '001720.png', '001721.png', '001722.png', '001723.png', '001724.png', '001725.png', '001726.png', '001727.png', '001728.png', '001729.png', '001730.png', '001731.png', '001732.png', '001733.png', '001734.png', '001735.png', '001736.png', '001737.png', '001738.png', '001739.png', '001740.png', '001741.png', '001742.png', '001743.png', '001744.png', '001745.png', '001746.png', '001747.png', '001748.png', '001749.png', '001750.png', '001751.png', '001752.png', '001753.png', '001754.png', '001755.png', '001756.png', '001757.png', '001758.png', '001759.png', '001760.png', '001761.png', '001762.png', '001763.png', '001764.png', '001765.png', '001766.png', '001767.png', '001768.png', '001769.png', '001770.png', '001771.png', '001772.png', '001773.png', '001774.png', '001775.png', '001776.png', '001777.png', '001778.png', '001779.png', '001780.png', '001781.png', '001782.png', '001783.png', '001784.png', '001785.png', '001786.png', '001787.png', '001788.png', '001789.png', '001790.png', '001791.png', '001792.png', '001793.png', '001794.png', '001795.png', '001796.png', '001797.png', '001798.png', '001799.png', '001800.png', '001801.png', '001802.png', '001803.png', '001804.png', '001805.png', '001806.png', '001807.png', '001808.png', '001809.png', '001810.png', '001811.png', '001812.png', '001813.png', '001814.png', '001815.png', '001816.png', '001817.png', '001818.png', '001819.png', '001820.png', '001821.png', '001822.png', '001823.png', '001824.png', '001825.png', '001826.png', '001827.png', '001828.png', '001829.png', '001830.png', '001831.png', '001832.png', '001833.png', '001834.png', '001835.png', '001836.png', '001837.png', '001838.png', '001839.png', '001840.png', '001841.png', '001842.png', '001843.png', '001844.png', '001845.png', '001846.png', '001847.png', '001848.png', '001849.png', '001850.png', '001851.png', '001852.png', '001853.png', '001854.png', '001855.png', '001856.png', '001857.png', '001858.png', '001859.png', '001860.png', '001861.png', '001862.png', '001863.png', '001864.png', '001865.png', '001866.png', '001867.png', '001868.png', '001869.png', '001870.png', '001871.png', '001872.png', '001873.png', '001874.png', '001875.png', '001876.png', '001877.png', '001878.png', '001879.png', '001880.png', '001881.png', '001882.png', '001883.png', '001884.png', '001885.png', '001886.png', '001887.png', '001888.png', '001889.png', '001890.png', '001891.png', '001892.png', '001893.png', '001894.png', '001895.png', '001896.png', '001897.png', '001898.png', '001899.png', '001900.png', '001901.png', '001902.png', '001903.png', '001904.png', '001905.png', '001906.png', '001907.png', '001908.png', '001909.png', '001910.png', '001911.png', '001912.png', '001913.png', '001914.png', '001915.png', '001916.png', '001917.png', '001918.png', '001919.png', '001920.png', '001921.png', '001922.png', '001923.png', '001924.png', '001925.png', '001926.png', '001927.png', '001928.png', '001929.png', '001930.png', '001931.png', '001932.png', '001933.png', '001934.png', '001935.png', '001936.png', '001937.png', '001938.png', '001939.png', '001940.png', '001941.png', '001942.png', '001943.png', '001944.png', '001945.png', '001946.png', '001947.png', '001948.png', '001949.png', '001950.png', '001951.png', '001952.png', '001953.png', '001954.png', '001955.png', '001956.png', '001957.png', '001958.png', '001959.png', '001960.png', '001961.png', '001962.png', '001963.png', '001964.png', '001965.png', '001966.png', '001967.png', '001968.png', '001969.png', '001970.png', '001971.png', '001972.png', '001973.png', '001974.png', '001975.png', '001976.png', '001977.png', '001978.png', '001979.png', '001980.png', '001981.png', '001982.png', '001983.png', '001984.png', '001985.png', '001986.png', '001987.png', '001988.png', '001989.png', '001990.png', '001991.png', '001992.png', '001993.png', '001994.png', '001995.png', '001996.png', '001997.png', '001998.png', '001999.png', '002000.png', '002001.png', '002002.png', '002003.png', '002004.png', '002005.png', '002006.png', '002007.png', '002008.png', '002009.png', '002010.png', '002011.png', '002012.png', '002013.png', '002014.png', '002015.png', '002016.png', '002017.png', '002018.png', '002019.png', '002020.png', '002021.png', '002022.png', '002023.png', '002024.png', '002025.png', '002026.png', '002027.png', '002028.png', '002029.png', '002030.png', '002031.png', '002032.png', '002033.png', '002034.png', '002035.png', '002036.png', '002037.png', '002038.png', '002039.png', '002040.png', '002041.png', '002042.png', '002043.png', '002044.png', '002045.png', '002046.png', '002047.png', '002048.png', '002049.png', '002050.png', '002051.png', '002052.png', '002053.png', '002054.png', '002055.png', '002056.png', '002057.png', '002058.png', '002059.png', '002060.png', '002061.png', '002062.png', '002063.png', '002064.png', '002065.png', '002066.png', '002067.png', '002068.png', '002069.png', '002070.png', '002071.png', '002072.png', '002073.png', '002074.png', '002075.png', '002076.png', '002077.png', '002078.png', '002079.png', '002080.png', '002081.png', '002082.png', '002083.png', '002084.png', '002085.png', '002086.png', '002087.png', '002088.png', '002089.png']
ans=[get_file_size(x,human_readable=False) for x in ans]
ans=sum(ans)
ans=human_readable_file_size(ans)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CDB


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Aug 11, 2021 at 10:41:50PM    ###########
############################################################
def robot_evaluate(code:str):
    from rp.web_evaluator import Client
    return Client('walle-desktop.local').evaluate(code)

def load_image_from_robocam():
    response=decode_image_from_bytes(robot_evaluate('encode_image_to_bytes(load_image_from_robocam(),".jpg")').value)
    return response
    #if response.errored:
        #raise response.error
    #assert response.is_eval
    #return response.value

def load_image_from_webcam_slow(camera_number:int,number_of_frames:int=10):
    print(camera_number)
    import cv2
    camera=cv2.VideoCapture(camera_number)
    frames=[]
    try:
        success,image=camera.read()
        if not success:
            raise CameraException(camera_number)
        image=cv_rgb_bgr_swap(image)
        frames.append(image)
    finally:
        camera.release()
    last_frame=frames[-1]
    return last_frame

def load_images_from_webcams(*camera_numbers,camera_group_size:int=None):
    if camera_group_size==None:
        camera_group_size=4
    images=[]
    camera_groups=split_into_sublists(camera_numbers,sublist_len=camera_group_size)
    for camera_group in camera_groups:
        images+=par_map(load_image_from_webcam_slow,camera_group)
    return images

def load_images_from_webcams_and_robocam(*camera_numbers,camera_group_size:int=None):
    from threading import Thread
    first_person_image=None
    def get_first_person_image():
        nonlocal first_person_image
        first_person_image=load_image_from_robocam()
    thread=Thread(target=get_first_person_image)
    thread.start()
    webcam_images=load_images_from_webcams(*camera_numbers,camera_group_size=camera_group_size)
    thread.join()
    return webcam_images+[first_person_image]

def display_images(images:list):
    images=[cv_resize_image(image,.5) for image in images]
    images=tiled_images(images)
    display_image(images)

def display_observation(*camera_numbers):
    default_camera_numbers=(0,1,2,3)
    camera_numbers=camera_numbers or default_camera_numbers
    display_images(load_images_from_webcams_and_robocam(*camera_numbers))

def playground():
    while True:
        key=input_keypress()
        if key=='q': break
        if key=='w': robot_evaluate('forward()')
        if key=='a': robot_evaluate('left()')
        if key=='s': robot_evaluate('backward()')
        if key=='d': robot_evaluate('right()')
        if key==' ': display_observation()
def save_state(dataset_path='datasets/attempt1'):
    images=load_images_from_webcams_and_robocam(0,1,2,3)
    dataset_states_path=path_join(dataset_path,'states')
    if not path_exists(dataset_states_path):
        make_directory(dataset_states_path)
    number_of_states=len(get_all_paths(dataset_states_path))
    state_name=str(number_of_states).rjust(6,'0')
    state_path=path_join(dataset_states_path,state_name)
    image_paths=[path_join(state_path,str(i)+'.png') for i in range(len(images))]
    make_directory(state_path)
    save_images(images,image_paths)
    return state_name

def save_transition(action:str,before_state:str,after_state:str,dataset_path='datasets/attempt1'):
    transitions_file=path_join(dataset_path,'transitions.tsv')
    append_line_to_file('\t'.join([before_state,after_state,action]),transitions_file)

def get_all_actions():
    return {
        'forward':lambda:robot_evaluate("forward()"),
        'backward':lambda:robot_evaluate("backward()"),
        'left':lambda:robot_evaluate("left()"),
        'right':lambda:robot_evaluate("right()"),
    }

def gather_data():
    state=save_state()
    while True:
        old_state=state
        action=random_element(list(get_all_actions()))
        get_all_actions()[action]()
        state=save_state()
        save_transition(action,old_state,state)
        print(state)
import sys,os;os.chdir('/Users/Ryan/datasets');sys.path.append(os.getcwd())# CD datasets
import sys,os;os.chdir('/Users/Ryan');sys.path.append(os.getcwd())# CD ..
__import__("rp").delete_path('/Users/Ryan/datasets')# /Users/Ryan/datasets
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD datasets
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD attempt1
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD images
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/3');sys.path.append(os.getcwd())# CD 3
ans=np.min(load_images('.',show_progress=True),0)
display_image(ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 12, 2021 at 8:59:46PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/3');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/2');sys.path.append(os.getcwd())# CD 2
image=load_image(random_element(get_all_files('.')))
image_paths=get_all_files('.')
image=load_image(random_element(image_paths))
timer=eta(len(image_paths))
for i,image_path in enumerate(image_paths):
    image=np.minimum(image,load_image(image_path))
    timer(i)
ans=image
display_image(ans)
display_image(ans)
image_paths=get_all_files('.')
min_image=max_image=load_image(random_element(image_paths))
timer=eta(len(image_paths))
for i,image_path in enumerate(image_paths):
    temp_image=load_image(image_path)
    min_image=np.minimum(image,temp_image)
    max_image=np.maximum(image,temp_image)
    timer(i)
display_image(max_image//2+min_image//2)
display_image(max_image)
display_image(min_image)
display_image(max_image)
display_image(min_image)
display_image(max_image)
display_image(max_image)
display_image(min_image)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CD ..
import os;os.system('rm *backup')
import os;os.system('rm *backup*')
import os;os.system('rm .*backup*')
import os;os.system('echo *cam')
ans=keys_and_values_to_dict
ans=open
import sys,os;os.chdir('/Users/Ryan');sys.path.append(os.getcwd())# CD
ans='./.config/alacritty/alacritty.yml'
ans='# Configuration for Alacritty, the GPU enhanced terminal emulator.\n\n# Any items in the `env` entry below will be added as\n# environment variables. Some entries may override variables\n# set by alacritty itself.\n#env:\n  # TERM variable\n  #\n  # This value is used to set the `$TERM` environment variable for\n  # each instance of Alacritty. If it is not present, alacritty will\n  # check the local terminfo database and use \'alacritty\' if it is\n  # available, otherwise \'xterm-256color\' is used.\n  #TERM: xterm-256color\n\nwindow:\n  # Window dimensions (changes require restart)\n  #\n  # Specified in number of columns/lines, not pixels.\n  # If both are `0`, this setting is ignored.\n  dimensions:\n    columns: 80\n    lines: 24\n\n  # Window padding (changes require restart)\n  #\n  # Blank space added around the window in pixels. This padding is not scaled\n  # by DPI and the specified value is always added at both opposing sides.\n  padding:\n    x: 2\n    y: 2\n\n  # Window decorations\n  #\n  # Available values:\n  # - `full`: Window with title bar and title bar buttons\n  # - `none`: Window without title bar, rounded corners, or drop shadow\n  # - `transparent`: Window with title bar with transparent background and title\n  #   bar buttons\n  # - `buttonless`: Window with title bar with transparent background and no\n  #   title bar buttons\n  # Window decorations\n  #\n  # Values for `decorations`:\n  #     - full: Borders and title bar\n  #     - none: Neither borders nor title bar\n  #     - buttonless: Title bar, transparent background and title bar buttons\n  #     - transparent: Title bar, transparent background, but no title bar buttons\n  decorations: full\n\nscrolling:\n  # Maximum number of lines in the scrollback buffer.\n  # Specifying \'0\' will disable scrolling.\n  history: 10000\n\n  # Number of lines the viewport will move for every line scrolled when\n  # scrollback is enabled (history > 0).\n  multiplier: 3\n\n  # Faux Scrolling\n  #\n  # The `faux_multiplier` setting controls the number of lines the terminal\n  # should scroll when the alternate screen buffer is active. This is used\n  # to allow mouse scrolling for applications like `man`.\n  #\n  # Specifying `0` will disable faux scrolling.\n  # faux_multiplier: 0\n\n  # Scroll to the bottom when new text is written to the terminal.\n  # auto_scroll: false\n\n# Spaces per Tab (changes require restart)\n#\n# This setting defines the width of a tab in cells.\n#\n# Some applications, like Emacs, rely on knowing about the width of a tab.\n# To prevent unexpected behavior in these applications, it\'s also required to\n# change the `it` value in terminfo when altering this setting.\n\n# Font configuration (changes require restart)\nfont:\n  # Normal (roman) font face\n  normal:\n    family: Menlo\n    # The `style` can be specified to pick a specific face.\n    #style: Regular\n\n  # Italic font face\n  bold:\n    family: Menlo\n    # The `style` can be specified to pick a specific face.\n    #style: Bold\n\n  # Italic font face\n  italic:\n    family: Menlo\n    # The `style` can be specified to pick a specific face.\n    #style: Italic\n\n  # Point size\n  size: 12.0\n\n  # Offset is the extra space around each character. `offset.y` can be thought of\n  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.\n  offset:\n    x: 0\n    y: 0\n\n  # Glyph offset determines the locations of the glyphs within their cells with\n  # the default being at the bottom. Increasing `x` moves the glyph to the right,\n  # increasing `y` moves the glyph upwards.\n  glyph_offset:\n    x: 0\n    y: 0\n\n  # Scale the font size based on the monitor\'s DPI. This will lead to bigger text on HiDPI\n  # screens and make reading text a little easier.\n  scale_with_dpi: true\n\n  # Thin stroke font rendering (OS X only)\n  #\n  # Thin strokes are suitable for retina displays, but for non-retina screens\n  # it is recommended to set `use_thin_strokes` to `false`\n  use_thin_strokes: true\n\n# Display the time it takes to redraw each frame.\nrender_timer: false\n\n# If `true`, bold text is drawn using the bright color variants.\ndraw_bold_text_with_bright_colors: true\n\n# Colors (Tomorrow Night Bright)\ncolors:\n  # Default colors\n  primary:\n    background: \'0x000000\'\n    foreground: \'0xeaeaea\'\n\n    # Bright and dim foreground colors\n    #\n    # The dimmed foreground color is calculated automatically if it is not present.\n    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`\n    # is `false`, the normal foreground color will be used.\n    #dim_foreground: \'0x9a9a9a\'\n    #bright_foreground: \'0xffffff\'\n\n  # Cursor colors\n  #\n  # Colors which should be used to draw the terminal cursor. If these are unset,\n  # the cursor color will be the inverse of the cell color.\n  #cursor:\n  #  text: \'0x000000\'\n  #  cursor: \'0xffffff\'\n\n\n\n  # Normal colors\n  normal:\n    black:   \'0x000000\'\n    red:     \'0xcc0000\'\n    green:   \'0x009900\'\n    yellow:  \'0x999900\'\n    blue:    \'0x3333cc\'\n    magenta: \'0x990099\'\n    cyan:    \'0x339999\'\n    white:   \'0xffffff\'\n\n  # Bright colors\n  bright:\n    black:   \'0x333333\'\n    red:     \'0xcc0000\'\n    green:   \'0x33ff00\'\n    yellow:  \'0xcccc00\'\n    blue:    \'0x3333cc\'\n    magenta: \'0xcc00cc\'\n    cyan:    \'0x00cccc\'\n    white:   \'0xffffff\'\n\n    \n#DEFAULTS;\n  # Normal colors\n  normal:\n    black:   \'0x000000\'\n    red:     \'0xd54e53\'\n    green:   \'0xb9ca4a\'\n    yellow:  \'0xe6c547\'\n    blue:    \'0x7aa6da\'\n    magenta: \'0xc397d8\'\n    cyan:    \'0x70c0ba\'\n    white:   \'0xffffff\'\n  # Bright colors\n  bright:\n    black:   \'0x666666\'\n    red:     \'0xff3334\'\n    green:   \'0x9ec400\'\n    yellow:  \'0xe7c547\'\n    blue:    \'0x7aa6da\'\n    magenta: \'0xb77ee0\'\n    cyan:    \'0x54ced6\'\n    white:   \'0xffffff\'\n\n\n  # Dim colors\n  #\n  # If the dim colors are not set, they will be calculated automatically based\n  # on the `normal` colors.\n  dim:\n    black:   \'0x333333\'\n    red:     \'0xf2777a\'\n    green:   \'0x99cc99\'\n    yellow:  \'0xffcc66\'\n    blue:    \'0x6699cc\'\n    magenta: \'0xcc99cc\'\n    cyan:    \'0x66cccc\'\n    white:   \'0xdddddd\'\n\n  # Indexed Colors\n  #\n  # The indexed colors include all colors from 16 to 256.\n  # When these are not set, they\'re filled with sensible defaults.\n  #indexed_colors:\n  #  - { index: 16, color: \'0x000000\' }\n\n# Visual Bell\n#\n# Any time the BEL code is received, Alacritty "rings" the visual bell. Once\n# rung, the terminal background will be set to white and transition back to the\n# default background color. You can control the rate of this transition by\n# setting the `duration` property (represented in milliseconds). You can also\n# configure the transition function by setting the `animation` property.\n#\n# Values for `animation`:\n#   - Ease\n#   - EaseOut\n#   - EaseOutSine\n#   - EaseOutQuad\n#   - EaseOutCubic\n#   - EaseOutQuart\n#   - EaseOutQuint\n#   - EaseOutExpo\n#   - EaseOutCirc\n#   - Linear\n#\n# Specifying a `duration` of `0` will disable the visual bell.\n# visual_bell:\n#   animation: EaseOutExpo\n#   duration: 0\n\n# Background opacity\n#\n# Window opacity as a floating point number from `0.0` to `1.0`.\n# The value `0.0` is completely transparent and `1.0` is opaque.\nbackground_opacity: 1.0\n\n# Mouse bindings\n#\n# Available fields:\n# - mouse\n# - action\n# - mods (optional)\n#\n# Values for `mouse`:\n# - Middle\n# - Left\n# - Right\n# - Numeric identifier such as `5`\n#\n# All available `mods` and `action` values are documented in the key binding\n# section.\nmouse_bindings:\n  - { mouse: Middle, action: PasteSelection }\n\nmouse:\n  # Click settings\n  #\n  # The `double_click` and `triple_click` settings control the time\n  # alacritty should wait for accepting multiple clicks as one double\n  # or triple click.\n  double_click: { threshold: 300 }\n  triple_click: { threshold: 300 }\n\n  # If this is `true`, the cursor is temporarily hidden when typing.\n  hide_when_typing: false\n\n  hints:\n    # URL launcher\n    #\n    # This program is executed when clicking on a text which is recognized as a URL.\n    # The URL is always added to the command as the last parameter.\n    launcher: open\n\n    # URL modifiers\n    #\n    # These are the modifiers that need to be held down for opening URLs when clicking\n    # on them. The available modifiers are documented in the key binding section.\n    #modifiers: Control|Shift\n\nselection:\n  semantic_escape_chars: ",│`|:\\"\' ()[]{}<>"\n\n  # When set to `true`, selected text will be copied to the primary clipboard.\n  save_to_clipboard: false\n\ncursor:\n  # Cursor style\n  #\n  # Values for \'style\':\n  #   - ▇ Block\n  #   - _ Underline\n  #   - | Beam\n  style: Beam\n\n  # If this is `true`, the cursor will be rendered as a hollow box when the\n  # window is not focused.\n  unfocused_hollow: true\n\n# Live config reload (changes require restart)\nlive_config_reload: true\n\n# Shell\n#\n# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.\n# Entries in `shell.args` are passed unmodified as arguments to the shell.\n#shell:\n#  program: /bin/bash\n#  args:\n#    - --login\n\n# Key bindings\n#\n# Key bindings are specified as a list of objects. Each binding will specify\n# a key and modifiers required to trigger it, terminal modes where the binding\n# is applicable, and what should be done when the key binding fires. It can\n# either send a byte sequnce to the running application (`chars`), execute\n# a predefined action (`action`) or fork and execute a specified command plus\n# arguments (`command`).\n#\n# Example:\n#   `- { key: V, mods: Command, action: Paste }`\n#\n# Available fields:\n#   - key\n#   - mods (optional)\n#   - chars | action | command (exactly one required)\n#   - mode (optional)\n#\n# Values for `key`:\n#   - `A` -> `Z`\n#   - `F1` -> `F12`\n#   - `Key1` -> `Key0`\n#\n#   A full list with available key codes can be found here:\n#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants\n#\n#   Instead of using the name of the keys, the `key` field also supports using\n#   the scancode of the desired key. Scancodes have to be specified as a\n#   decimal number.\n#   This command will allow you to display the hex scancodes for certain keys:\n#     `showkey --scancodes`\n#\n# Values for `mods`:\n#   - Command\n#   - Control\n#   - Shift\n#   - Alt\n#\n#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.\n#   Whitespace and capitalization is relevant and must match the example.\n#\n# Values for `chars`:\n#   The `chars` field writes the specified string to the terminal. This makes\n#   it possible to pass escape sequences.\n#   To find escape codes for bindings like `PageUp` ("\\x1b[5~"), you can run\n#   the command `showkey -a` outside of tmux.\n#   Note that applications use terminfo to map escape sequences back to\n#   keys. It is therefore required to update the terminfo when\n#   changing an escape sequence.\n#\n# Values for `action`:\n#   - Paste\n#   - PasteSelection\n#   - Copy\n#   - IncreaseFontSize\n#   - DecreaseFontSize\n#   - ResetFontSize\n#   - ScrollPageUp\n#   - ScrollPageDown\n#   - ScrollToTop\n#   - ScrollToBottom\n#   - ClearHistory\n#   - Hide\n#   - Quit\n#\n# Values for `command`:\n#   The `command` field must be a map containing a `program` string and\n#   an `args` array of command line parameter strings.\n#\n#   Example:\n#       `command: { program: "alacritty", args: ["-e", "vttest"] }`\n#\n# Values for `mode`:\n#   - ~AppCursor\n#   - AppCursor\n#   - ~AppKeypad\n#   - AppKeypad\nkey_bindings:\n  - { key: V,        mods: Command, action: Paste                        }\n  - { key: C,        mods: Command, action: Copy                         }\n  - { key: Paste,                   action: Paste                        }\n  - { key: Copy,                    action: Copy                         }\n  - { key: H,        mods: Command, action: Hide                         }\n  - { key: Q,        mods: Command, action: Quit                         }\n  - { key: W,        mods: Command, action: Quit                         }\n  - { key: Home,                    chars: "\\x1bOH",   mode: AppCursor   }\n  - { key: Home,                    chars: "\\x1b[H",   mode: ~AppCursor  }\n  - { key: End,                     chars: "\\x1bOF",   mode: AppCursor   }\n  - { key: End,                     chars: "\\x1b[F",   mode: ~AppCursor  }\n  - { key: Key0,     mods: Command, action: ResetFontSize                }\n  - { key: Equals,   mods: Command, action: IncreaseFontSize             }\n  - { key: Minus,    mods: Command, action: DecreaseFontSize             }\n  - { key: K,        mods: Command, action: ClearHistory                 }\n  - { key: K,        mods: Command, chars: "\\x0c"                        }\n  - { key: PageUp,   mods: Shift,   chars: "\\x1b[5;2~"                   }\n  - { key: PageUp,   mods: Control, chars: "\\x1b[5;5~"                   }\n  - { key: PageUp,                  chars: "\\x1b[5~"                     }\n  - { key: PageDown, mods: Shift,   chars: "\\x1b[6;2~"                   }\n  - { key: PageDown, mods: Control, chars: "\\x1b[6;5~"                   }\n  - { key: PageDown,                chars: "\\x1b[6~"                     }\n  - { key: Tab,      mods: Shift,   chars: "\\x1b[Z"                      }\n  - { key: Back,                    chars: "\\x7f"                        }\n  - { key: Back,     mods: Alt,     chars: "\\x1b\\x7f"                    }\n  - { key: Insert,                  chars: "\\x1b[2~"                     }\n  - { key: Delete,                  chars: "\\x1b[3~"                     }\n  - { key: Left,     mods: Shift,   chars: "\\x1b[1;2D"                   }\n  - { key: Left,     mods: Control, chars: "\\x1b[1;5D"                   }\n  - { key: Left,     mods: Alt,     chars: "\\x1b[1;3D"                   }\n  - { key: Left,                    chars: "\\x1b[D",   mode: ~AppCursor  }\n  - { key: Left,                    chars: "\\x1bOD",   mode: AppCursor   }\n  - { key: Right,    mods: Shift,   chars: "\\x1b[1;2C"                   }\n  - { key: Right,    mods: Control, chars: "\\x1b[1;5C"                   }\n  - { key: Right,    mods: Alt,     chars: "\\x1b[1;3C"                   }\n  - { key: Right,                   chars: "\\x1b[C",   mode: ~AppCursor  }\n  - { key: Right,                   chars: "\\x1bOC",   mode: AppCursor   }\n  - { key: Up,       mods: Shift,   chars: "\\x1b[1;2A"                   }\n  - { key: Up,       mods: Control, chars: "\\x1b[1;5A"                   }\n  - { key: Up,       mods: Alt,     chars: "\\x1b[1;3A"                   }\n  - { key: Up,                      chars: "\\x1b[A",   mode: ~AppCursor  }\n  - { key: Up,                      chars: "\\x1bOA",   mode: AppCursor   }\n  - { key: Down,     mods: Shift,   chars: "\\x1b[1;2B"                   }\n  - { key: Down,     mods: Control, chars: "\\x1b[1;5B"                   }\n  - { key: Down,     mods: Alt,     chars: "\\x1b[1;3B"                   }\n  - { key: Down,                    chars: "\\x1b[B",   mode: ~AppCursor  }\n  - { key: Down,                    chars: "\\x1bOB",   mode: AppCursor   }\n  - { key: F1,                      chars: "\\x1bOP"                      }\n  - { key: F2,                      chars: "\\x1bOQ"                      }\n  - { key: F3,                      chars: "\\x1bOR"                      }\n  - { key: F4,                      chars: "\\x1bOS"                      }\n  - { key: F5,                      chars: "\\x1b[15~"                    }\n  - { key: F6,                      chars: "\\x1b[17~"                    }\n  - { key: F7,                      chars: "\\x1b[18~"                    }\n  - { key: F8,                      chars: "\\x1b[19~"                    }\n  - { key: F9,                      chars: "\\x1b[20~"                    }\n  - { key: F10,                     chars: "\\x1b[21~"                    }\n  - { key: F11,                     chars: "\\x1b[23~"                    }\n  - { key: F12,                     chars: "\\x1b[24~"                    }\n  - { key: F1,       mods: Shift,   chars: "\\x1b[1;2P"                   }\n  - { key: F2,       mods: Shift,   chars: "\\x1b[1;2Q"                   }\n  - { key: F3,       mods: Shift,   chars: "\\x1b[1;2R"                   }\n  - { key: F4,       mods: Shift,   chars: "\\x1b[1;2S"                   }\n  - { key: F5,       mods: Shift,   chars: "\\x1b[15;2~"                  }\n  - { key: F6,       mods: Shift,   chars: "\\x1b[17;2~"                  }\n  - { key: F7,       mods: Shift,   chars: "\\x1b[18;2~"                  }\n  - { key: F8,       mods: Shift,   chars: "\\x1b[19;2~"                  }\n  - { key: F9,       mods: Shift,   chars: "\\x1b[20;2~"                  }\n  - { key: F10,      mods: Shift,   chars: "\\x1b[21;2~"                  }\n  - { key: F11,      mods: Shift,   chars: "\\x1b[23;2~"                  }\n  - { key: F12,      mods: Shift,   chars: "\\x1b[24;2~"                  }\n  - { key: F1,       mods: Control, chars: "\\x1b[1;5P"                   }\n  - { key: F2,       mods: Control, chars: "\\x1b[1;5Q"                   }\n  - { key: F3,       mods: Control, chars: "\\x1b[1;5R"                   }\n  - { key: F4,       mods: Control, chars: "\\x1b[1;5S"                   }\n  - { key: F5,       mods: Control, chars: "\\x1b[15;5~"                  }\n  - { key: F6,       mods: Control, chars: "\\x1b[17;5~"                  }\n  - { key: F7,       mods: Control, chars: "\\x1b[18;5~"                  }\n  - { key: F8,       mods: Control, chars: "\\x1b[19;5~"                  }\n  - { key: F9,       mods: Control, chars: "\\x1b[20;5~"                  }\n  - { key: F10,      mods: Control, chars: "\\x1b[21;5~"                  }\n  - { key: F11,      mods: Control, chars: "\\x1b[23;5~"                  }\n  - { key: F12,      mods: Control, chars: "\\x1b[24;5~"                  }\n  - { key: F1,       mods: Alt,     chars: "\\x1b[1;6P"                   }\n  - { key: F2,       mods: Alt,     chars: "\\x1b[1;6Q"                   }\n  - { key: F3,       mods: Alt,     chars: "\\x1b[1;6R"                   }\n  - { key: F4,       mods: Alt,     chars: "\\x1b[1;6S"                   }\n  - { key: F5,       mods: Alt,     chars: "\\x1b[15;6~"                  }\n  - { key: F6,       mods: Alt,     chars: "\\x1b[17;6~"                  }\n  - { key: F7,       mods: Alt,     chars: "\\x1b[18;6~"                  }\n  - { key: F8,       mods: Alt,     chars: "\\x1b[19;6~"                  }\n  - { key: F9,       mods: Alt,     chars: "\\x1b[20;6~"                  }\n  - { key: F10,      mods: Alt,     chars: "\\x1b[21;6~"                  }\n  - { key: F11,      mods: Alt,     chars: "\\x1b[23;6~"                  }\n  - { key: F12,      mods: Alt,     chars: "\\x1b[24;6~"                  }\n  - { key: F1,       mods: Command, chars: "\\x1b[1;3P"                   }\n  - { key: F2,       mods: Command, chars: "\\x1b[1;3Q"                   }\n  - { key: F3,       mods: Command, chars: "\\x1b[1;3R"                   }\n  - { key: F4,       mods: Command, chars: "\\x1b[1;3S"                   }\n  - { key: F5,       mods: Command, chars: "\\x1b[15;3~"                  }\n  - { key: F6,       mods: Command, chars: "\\x1b[17;3~"                  }\n  - { key: F7,       mods: Command, chars: "\\x1b[18;3~"                  }\n  - { key: F8,       mods: Command, chars: "\\x1b[19;3~"                  }\n  - { key: F9,       mods: Command, chars: "\\x1b[20;3~"                  }\n  - { key: F10,      mods: Command, chars: "\\x1b[21;3~"                  }\n  - { key: F11,      mods: Command, chars: "\\x1b[23;3~"                  }\n  - { key: F12,      mods: Command, chars: "\\x1b[24;3~"                  }\n  - { key: NumpadEnter,             chars: "\\n"                          }\n\n\n\n\n\n\n#Make alt act as an escape prefix. Credit: https://github.com/alacritty/alacritty/issues/62\n  - { key: A,         mods: Alt,       chars: "\\x1ba"                       }\n  - { key: B,         mods: Alt,       chars: "\\x1bb"                       }\n  - { key: C,         mods: Alt,       chars: "\\x1bc"                       }\n  - { key: D,         mods: Alt,       chars: "\\x1bd"                       }\n  - { key: E,         mods: Alt,       chars: "\\x1be"                       }\n  - { key: F,         mods: Alt,       chars: "\\x1bf"                       }\n  - { key: G,         mods: Alt,       chars: "\\x1bg"                       }\n  - { key: H,         mods: Alt,       chars: "\\x1bh"                       }\n  - { key: I,         mods: Alt,       chars: "\\x1bi"                       }\n  - { key: J,         mods: Alt,       chars: "\\x1bj"                       }\n  - { key: K,         mods: Alt,       chars: "\\x1bk"                       }\n  - { key: L,         mods: Alt,       chars: "\\x1bl"                       }\n  - { key: M,         mods: Alt,       chars: "\\x1bm"                       }\n  - { key: N,         mods: Alt,       chars: "\\x1bn"                       }\n  - { key: O,         mods: Alt,       chars: "\\x1bo"                       }\n  - { key: P,         mods: Alt,       chars: "\\x1bp"                       }\n  - { key: Q,         mods: Alt,       chars: "\\x1bq"                       }\n  - { key: R,         mods: Alt,       chars: "\\x1br"                       }\n  - { key: S,         mods: Alt,       chars: "\\x1bs"                       }\n  - { key: T,         mods: Alt,       chars: "\\x1bt"                       }\n  - { key: U,         mods: Alt,       chars: "\\x1bu"                       }\n  - { key: V,         mods: Alt,       chars: "\\x1bv"                       }\n  - { key: W,         mods: Alt,       chars: "\\x1bw"                       }\n  - { key: X,         mods: Alt,       chars: "\\x1bx"                       }\n  - { key: Y,         mods: Alt,       chars: "\\x1by"                       }\n  - { key: Z,         mods: Alt,       chars: "\\x1bz"                       }\n  - { key: A,         mods: Alt|Shift, chars: "\\x1bA"                       }\n  - { key: B,         mods: Alt|Shift, chars: "\\x1bB"                       }\n  - { key: C,         mods: Alt|Shift, chars: "\\x1bC"                       }\n  - { key: D,         mods: Alt|Shift, chars: "\\x1bD"                       }\n  - { key: E,         mods: Alt|Shift, chars: "\\x1bE"                       }\n  - { key: F,         mods: Alt|Shift, chars: "\\x1bF"                       }\n  - { key: G,         mods: Alt|Shift, chars: "\\x1bG"                       }\n  - { key: H,         mods: Alt|Shift, chars: "\\x1bH"                       }\n  - { key: I,         mods: Alt|Shift, chars: "\\x1bI"                       }\n  - { key: J,         mods: Alt|Shift, chars: "\\x1bJ"                       }\n  - { key: K,         mods: Alt|Shift, chars: "\\x1bK"                       }\n  - { key: L,         mods: Alt|Shift, chars: "\\x1bL"                       }\n  - { key: M,         mods: Alt|Shift, chars: "\\x1bM"                       }\n  - { key: N,         mods: Alt|Shift, chars: "\\x1bN"                       }\n  - { key: O,         mods: Alt|Shift, chars: "\\x1bO"                       }\n  - { key: P,         mods: Alt|Shift, chars: "\\x1bP"                       }\n  - { key: Q,         mods: Alt|Shift, chars: "\\x1bQ"                       }\n  - { key: R,         mods: Alt|Shift, chars: "\\x1bR"                       }\n  - { key: S,         mods: Alt|Shift, chars: "\\x1bS"                       }\n  - { key: T,         mods: Alt|Shift, chars: "\\x1bT"                       }\n  - { key: U,         mods: Alt|Shift, chars: "\\x1bU"                       }\n  - { key: V,         mods: Alt|Shift, chars: "\\x1bV"                       }\n  - { key: W,         mods: Alt|Shift, chars: "\\x1bW"                       }\n  - { key: X,         mods: Alt|Shift, chars: "\\x1bX"                       }\n  - { key: Y,         mods: Alt|Shift, chars: "\\x1bY"                       }\n  - { key: Z,         mods: Alt|Shift, chars: "\\x1bZ"                       }\n  - { key: Key1,      mods: Alt,       chars: "\\x1b1"                       }\n  - { key: Key2,      mods: Alt,       chars: "\\x1b2"                       }\n  - { key: Key3,      mods: Alt,       chars: "\\x1b3"                       }\n  - { key: Key4,      mods: Alt,       chars: "\\x1b4"                       }\n  - { key: Key5,      mods: Alt,       chars: "\\x1b5"                       }\n  - { key: Key6,      mods: Alt,       chars: "\\x1b6"                       }\n  - { key: Key7,      mods: Alt,       chars: "\\x1b7"                       }\n  - { key: Key8,      mods: Alt,       chars: "\\x1b8"                       }\n  - { key: Key9,      mods: Alt,       chars: "\\x1b9"                       }\n  - { key: Key0,      mods: Alt,       chars: "\\x1b0"                       }\n  - { key: Space,     mods: Control,   chars: "\\x00"                        } # Ctrl + Space\n  - { key: Grave,     mods: Alt,       chars: "\\x1b`"                       } # Alt + `\n  - { key: Grave,     mods: Alt|Shift, chars: "\\x1b~"                       } # Alt + ~\n  - { key: Period,    mods: Alt,       chars: "\\x1b."                       } # Alt + .\n  - { key: Key8,      mods: Alt|Shift, chars: "\\x1b*"                       } # Alt + *\n  - { key: Key3,      mods: Alt|Shift, chars: "\\x1b#"                       } # Alt + #\n  - { key: Period,    mods: Alt|Shift, chars: "\\x1b>"                       } # Alt + >\n  - { key: Comma,     mods: Alt|Shift, chars: "\\x1b<"                       } # Alt + <\n  - { key: Minus,     mods: Alt|Shift, chars: "\\x1b_"                       } # Alt + _\n  - { key: Key5,      mods: Alt|Shift, chars: "\\x1b%"                       } # Alt + %\n  - { key: Key6,      mods: Alt|Shift, chars: "\\x1b^"                       } # Alt + ^\n  - { key: Backslash, mods: Alt,       chars: "\\x1b\\\\"                      } # Alt + \\\n  - { key: Backslash, mods: Alt|Shift, chars: "\\x1b|"                       } # Alt + |\n'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Aug 13, 2021 at 7:25:52PM     ###########
############################################################
ans = '/Users/Ryan/.tmux.conf'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 16, 2021 at 6:45:46PM     ###########
############################################################
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 16, 2021 at 7:00:55PM     ###########
############################################################
string_to_text_file(get_module_path(r),ans)
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library/Frameworks/Python.framework');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library/Frameworks');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Library');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users');sys.path.append(os.getcwd())# CD Users
import sys,os;os.chdir('/Users/Ryan');sys.path.append(os.getcwd())# CD Ryan
ans = '/Users/Ryan/.tmux.conf'
ans='/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp/r.py'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 16, 2021 at 7:22:30PM     ###########
############################################################
ans=r._set_ryan_rprc


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Aug 16, 2021 at 7:52:58PM     ###########
############################################################
ans=r
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp');sys.path.append(os.getcwd())# CD /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp
ans=__import__("rp"),open_file_with_default_application('.')


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Aug 19, 2021 at 1:18:53PM     ###########
############################################################
ans=load_image_from_webcam()


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Sep 01, 2021 at 2:51:47AM     ###########
############################################################
class ans:
    class _:
        pass
class ans:
    pass
def a():
    pass
ans='Goal:\n- Use third person dynamics models to \n\nEnvironment:\n- Some simulated environments\n- The robot. Third person navigation.\n\nStep 1:\n- Gather Data. \n'
ans='Goal:\n- Use third person dynamics models to \n\nEnvironment:\n- Some simulated environments\n- The robot. Third person navigation.\n\nStep 1:\n- Gather Data. \n'
ans=''
ans=''
ans='Goal:\n\t- Use third person dynamics models to give end-state oriented imitation learning\n\t\t- Multiview or first-person-learning models might be an interesting future addition. \n\nEnvironment:\n\t- Some simulated environments\n\t- The robot. Third person navigation.\n\nStep 1:\n\t- Gather Data. Probably random data. \n\t\t- In a more complicated environment, perhaps research ways to collect rare events more effectively\n\t\t\t- The scenario where you have a button that opens a door to a new room or a room that has a one-way door that locks the state space in that room trapping the robot. This could be an interesting separate research direction.\n\t\t\t- Perhaps this could be done with curiosity, or by weighting important transition sequences more heavily\n\nStep 2:\n\t- \n'
ans='Goal:\n\t- Use third person dynamics models to give end-state oriented imitation learning\n\t\t- Multiview or first-person-learning models might be an interesting future addition. \n\nEnvironment:\n\t- Some simulated environments and one real one\n\t- The robot. Third person navigation.\n\nStep 1:\n\t- Gather Data. Probably random data. \n\t\t- In a more complicated environment, perhaps research ways to collect rare events more effectively\n\t\t\t- The scenario where you have a button that opens a door to a new room or a room that has a one-way door that locks the state space in that room trapping the robot. This could be an interesting separate research direction.\n\t\t\t- Perhaps this could be done with curiosity, or by weighting important transition sequences more heavily\n    - This data can be both simulated and robotic\n\nStep 2:\n\t- Train two dynamics models: a forward one and a reverse one\n        - These can be off-the-shelf models. There are multiple to choose from.\n        - SAVP, GameGan (probably not practical due to data limitation), \n'
ans='Goal:\n    - Use third person dynamics models to give end-state oriented imitation learning\n        - Multiview or first-person-learning models might be an interesting future addition. \n\nEnvironment:\n    - Some simulated environments and one real one\n    - The robot. Third person navigation.\n\nStep 1:\n    - Gather Data. Probably random data. \n        - In a more complicated environment, perhaps research ways to collect rare events more effectively\n            - The scenario where you have a button that opens a door to a new room or a room that has a one-way door that locks the state space in that room trapping the robot. This could be an interesting separate research direction.\n            - Perhaps this could be done with curiosity, or by weighting important transition sequences more heavily\n    - This data can be both simulated and robotic\n\nStep 2:\n    - Train two dynamics models: a forward one and a reverse one\n        - These can be off-the-shelf models. There are multiple to choose from.\n        - SAVP, GameGan (probably not practical due to data limitation), \n'
ans="Goal:\n    - Use third person dynamics models to give end-state oriented imitation learning\n        - Multiview or first-person-learning models might be an interesting future addition. \n\nEnvironment:\n    - Some simulated environments and one real one\n    - The robot. Third person navigatoion.\n        - Task: Run torwards a goal. The goal might be a specific set of coordinates, or it might be to run torwards some object on the map.\n            - This might work particularly well for some object on the map, but arbitrary coordinates are of course easier to set up\n\nStep 1:\n    - Gather Data. Probably random data. \n        - In a more complicated environment, perhaps research ways to collect rare events more effectively\n            - The scenario where you have a button that opens a door to a new room or a room that has a one-way door that locks the state space in that room trapping the robot. This could be an interesting separate research direction.\n            - Perhaps this could be done with curiosity, or by weighting important transition sequences more heavily\n    - This data can be both simulated and robotic\n\nStep 2:\n    - Train two dynamics models: a forward one and a reverse one\n        - These can be off-the-shelf models. There are multiple to choose from.\n        - SAVP, GameGan (probably not practical due to data limitation), and modified Playable Video Generation (probably the one I'll use)\n\nStep 3:\n    - Use some imitation learning algorithm (probably GAIL, or some inverse reinforcement learning algorithm)\n        - Add an additional penalty for being slow; most of these sequences are going to be stupid even though they will reach the target\n    \nStep 4:\n    - Try it on a real robot\n\n"
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('ReverseDynamics');sys.path.append(os.getcwd())# TAKE ReverseDynamics
ans=__import__("rp"),open_file_with_default_application('ideas.txt')
ans=__import__("rp"),open_file_with_default_application('.')
ans="\n\nIGoal:\n    - Use third person dynamics models to give end-state oriented imitation learning\n        - Multiview or first-person-learning models might be an interesting future addition. \n\nEnvironment:\n    - Some simulated environments and one real one\n    - The robot. Third person navigatoion.\n        - Task: Run torwards a goal. The goal might be a specific set of coordinates, or it might be to run torwards some object on the map.\n            - This might work particularly well for some object on the map, but arbitrary coordinates are of course easier to set up\n                                                                           \nStep 1:\n    - Gather Data. Probably random data. \n        - In a more complicated environment, perhaps research ways to collect rare events more effectively\n            - The scenario where you have a button that opens a door to a new room or a room that has a one-way door that locks the state space in that room trapping the robot. This could be an interesting separate research direction.\n            - Perhaps this could be done with curiosity, or by weighting important transition sequences more heavily\n    - This data can be both simulated and robotic\n\nStep 2:\n    - Train two dynamics models: a forward one and a reverse one\n        - These can be off-the-shelf models. There are multiple to choose from.\n        - SAVP, GameGan (probably not practical due to data limitation), and modified Playable Video Generation (probably the one I'll use)\n\nStep 3:\n    - Use some imitation learning algorithm (probably GAIL, or some inverse reinforcement learning algorithm)\n        - Add an additional penalty for being slow; most of these sequences are going to be stupid even though they will reach the target\n    \nStep 4:\n    - Try it on a real robot\n\n\n\n\nINverse ROllout Planning"
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/2');sys.path.append(os.getcwd())# CDH


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Sep 03, 2021 at 11:05:06PM    ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Research/Jetbot/datasets/attempt1/images/2');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('AMS548_HW1_Ryan_Burgert_110176886');sys.path.append(os.getcwd())# TAKE AMS548_HW1_Ryan_Burgert_110176886
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Downloads');sys.path.append(os.getcwd())# CD Downloads
ans = '/Users/Ryan/Downloads/Burgert-110176886-Homework5.pdf'
ans = '/Users/Ryan/Downloads/2020-06-03 14-52.pdf'
ans=__import__("rp"),open_file_with_default_application('/Users/Ryan/Downloads/2020-06-03 14-52.pdf')
ans = '/Users/Ryan/Downloads/CSE548_HW1_tex.pdf'
import sys,os;os.chdir('/Users/Ryan');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop/AMS548_HW1_Ryan_Burgert_110176886');sys.path.append(os.getcwd())# CDB
ans=__import__('rp').move_path(ans,'.')
import os;os.system('rn CSE548_HW1_tex.pdf Ryan_Burgert_CSE548_HW1_Writeup.pdf')
import os;os.system('mv CSE548_HW1_tex.pdf Ryan_Burgert_CSE548_HW1_Writeup.pdf')
ans=__import__("rp").file_to_bytes('/Users/Ryan/Desktop/AMS548_HW1_Ryan_Burgert_110176886/Ryan_Burgert_CSE548_HW1_Writeup.pdf')
ans='b\'%PDF-1.5\\n%\\xbf\\xf7\\xa2\\xfe\\n16 0 obj\\n<< /Linearized 1 /L 154612 /H [ 1034 197 ] /O 20 /E 105694 /N 5 /T 154248 >>\\nendobj\\n                                                                                                           \\n17 0 obj\\n<< /Type /XRef /Length 83 /Filter /FlateDecode /DecodeParms << /Columns 5 /Predictor 12 >> /W [ 1 3 1 ] /Index [ 16 64 ] /Info 14 0 R /Root 18 0 R /Size 80 /Prev 154249                /ID [<7243b591978ca7e952f5ffe8b35a3bc6><dc770cb1959140e82608306cbd49bf1e>] >>\\nstream\\nx\\x9ccbd`\\xe0g`b``8\\t"\\x99\\xff\\x83HFc\\xb0\\xc8Q0;\\x0fDr\\x7f\\x01\\x91\\xe6\\x9f@$\\xcf!\\x10\\xa9U\\x0b"\\xe5\\xcf\\x81HUS \\xc9\\x18\\x05\\xd6\\xab\\xf8\\x11D*\\x1f\\x03\\x91\\n!\\x0cL\\x8c\\xff\\x1bW\\x80Mc`\\x1c%1I\\x00T-\\x0e\\xc9\\nendstream\\nendobj\\n                                                                                                                                                                                                                                                                                                                                                                                                   \\n18 0 obj\\n<< /Pages 42 0 R /Type /Catalog >>\\nendobj\\n19 0 obj\\n<< /Filter /FlateDecode /S 84 /Length 118 >>\\nstream\\nx\\x9cc```b``\\xe1b`a`\\xe0\\xb0c\\x10d\\x80\\x020\\x9b\\x05$\\xca\\xc0\\xb2\\x80\\xc1\\xe0\\xf8\\x8b\\x06\\x06\\x06\\x01\\x06\\x99M\\x8c\\x1f8v/0\\t\\xab\\\\k\\xe3\\x9a\\xde\\xb9\\xfa\\xf2\\x91\\xb0\\x8aY{\\xc1L$\\x15@=<\\x0c\\x8c\\xffg\\x81i\\x06\\x06>\\xb0\\x81y\\x0c\\xfc\\x0c\\x0cZ\\x92[\\x14\\x8e\\xba*>\\x9f!\\x94|s\\xa2#[g\\xc2\\x7f\\xc3\\x0b\\xc2\\xa7\\xde\\xd5;00\\x00\\x00SO"9\\nendstream\\nendobj\\n20 0 obj\\n<< /Contents 21 0 R /MediaBox [ 0 0 612 792 ] /Parent 42 0 R /Resources 32 0 R /Type /Page >>\\nendobj\\n21 0 obj\\n<< /Filter /FlateDecode /Length 2730 >>\\nstream\\nx\\x9c\\xed[\\xddo\\xe36\\x12\\x7f\\xcf_\\xa1\\xc3=\\xd4\\xc6\\xae\\xb9\\xfc&\\xb5\\xb8\\xe2\\xae\\xdd\\xdb\\xddk\\x81;\\xdc\\xed\\x068\\xa0\\xdd>(\\xb1\\x12\\x0b\\xf5W%;\\xe9\\xe2\\xfe\\xf9\\x1b\\x8a\\x94,J\\x94-\\\'v7-\\xf2\\x12K\\x149$\\x873\\xf3\\x9b\\x19Npt\\x1b\\xe1\\xe8\\xfd\\x05>\\xf0\\xfb\\xed\\xe5\\xc5\\xabw\\x0cG\\x04\\xa3\\x18\\xc7$\\xba\\xbc\\x898%H\\t\\x15)\\xac\\x11Qqt9\\x8d~\\x1c}\\xf8<\\xa6z\\x94,\\xc7\\x13\\xc6\\xf8\\xe8\\xdbm>&\\xa3\\xdbt<!\\xa3|c\\xda\\xd8\\x88\\x10L\\x94\\xd4Z\\x8e\\x7f\\xba\\xfc\\x1eh\\x92&\\xcd\\t\\x95\\x12)\\x1d\\xc3\\x83F\\x94pK\\xf4\\xcd\\xc7\\xb70V\\xb3\\x91\\xe0\\xda<\\xf0\\xd1\\xff\\xec\\xfb\\xfb<\\x99n\\x93Mj\\xdf\\xbeY&\\xf3\\xcfEf&+l\\xcb\\xea\\xc6}\\x99\\xdf\\xae\\xf2l3[\\x14\\xaf\\xc7\\x13A\\xc8\\xe8\\xdd8\\x16\\xa3d>\\xb7\\x9f)\\xa6\\xc4\\xad\\xc6\\xdb\\xa1\\x92(\\x16\\x12\\xd6B\\x11e\\xd2\\xae\\xe5\\x9b\\xa2\\xc8n\\x97\\x8bti\\xf6\\xb9\\xb1\\xdb\\xfc3\\xb1[\\x9b\\xd8\\x9f\\x7f&\\x9b\\x99\\xfd\\xf0!\\xbd\\xcb\\xd2{C:b\\n\\x11M\\xa3\\t\\x91\\x88\\n\\xc7\\xac\\xbfo\\xd3\\xc6@>R\\xaf\\xd8\\xabj-\\xc0yXK\\x94\\x1b\\xf6\\x9b\\x87\\x0f\\xef/`\\xb0\\xc6\\xc0j\\xc7\\x1c\\xe1\\x16T\\xee\\x02\\x88,\\xc6T\\x8d>\\xdb\\xe7dY\\xdc\\x9b\\x05\\xa6yaI\\xdfgU\\xb7\\xab\\xf1\\xc4|\\xb0/\\xd9\\xd2\\xfe^\\xaf\\xe6\\xab\\xfc\\xa5\\xed\\xbaY\\xd9\\xb64)\\xb2\\xb9\\xa37\\xcd\\x8aM\\xb6\\xbc\\xddf\\xc5\\xcc6lf\\xe9\\xc2v\\xbf\\xc9W\\x8b\\xba\\xcd>\\xfc\\xb2M\\xa1\\xfbjY \\xb7\\x13+C\\xe5\\xe6c&\\xfd\\xc3\\xfdw\\xbe\\xba\\x9a\\xa7\\x8e\\x84\\xdd\\xfa\\xdb\\xcb\\x8b_.\\x88\\xdb\\xb8\\xa2\\x91\\xd0\\x0c\\t\\xe8\\x7f\\xbd\\xb8\\xf8\\xf1\\\'\\x1cM\\xa1\\xfd\\xfb\\x08#\\x0e\\xa4\\xee\\xcb^\\x8b\\x88\\xc7\\x88*\\x06\\x8f\\xf3\\xe8\\xe3\\xc5\\x7fB\\xe2j\\xe8H\\r\\xc2E\\xed\\xbc\\xdf-\\xabUg\\x8eGkX\\t\\x88\\xeb\\xbc\\x14\\xd7\\xc5K\\xfb\\xd9\\xb2\\xd1=;&r\\xe8\\x93\\xe4n|\\xb1Z\\xa4\\x8eq0\\xb8\\x1c{m\\xc6\\xcc\\x96\\x99\\xe1\\x83\\xedt\\xb3\\xca]\\xef\\xedb\\x01\\x8c\\xb4\\x03\\x8a4\\xcfR\\xcb$X\\xb9\\\'\\x1a\\x9f\\xb0\\xc0\\t\\xfcq\\x92\\xf5q\\xb624\\xef\\xed\\xb8\\xc6\\x0bs\\xc7\\xc5\\xe1\\x08\\x17\\xeb\\xed&m\\x1d\\x05\\xcc\\xe7$\\x9b7\\x99A\\x80\\x13\\x82K\\x98\\xb5\\x9c\\xedcH\\xfa\\xe1\\x91q]u\\xf9\\x1a\\xc4Fi8 \\xd0\\x06:za\\x7fh\\xe3\\r\\xd4\\xc8Q\\xa1\\x91B\\xb1\\xc2%\\x11\\xc1a\\x1e\\x111P$\\xb73\\x1a\\xd44D\\xc0\\x92L\\x1a\\xdd\\xea\\x19\\xba4\\x81OL\\xb2&Mv\\x1a\\x9a\\xbcI\\x93\\xf7\\xd1\\x94-\\x9a!\\xf6\\x96\\x8f\\x15\\xeb\\xc0\\xe6\\x10\\xa9\\xec\\x8f\\x84\\x9f\\x10\\xaf\\x05\\x10\\xa6\\xd5\\x80\\xd6:\\xc5\\xde\\xbd/C\\xf4\\x04\\x92\\xcc\\xdf\\xbb\\x95\\xb2\\t#\\xa0\\x02\\x92\\xf8\\xc2\\xf6\\x8f\\xccZ3X!\\xe7b\\xf4\\xdfY\\xe2lu\\xe6\\xc4\\xd7Hch\\x9f\\x8a\\xa3\\x98\\xec\\x15\\xa2\\x18)\\xde\\xde\\x17)\\xe5\\xdavV\\xcd\\xce\\x94!\\xcc\\xaa\\xce\\x9f0\\xc6=b\\xd9\\xe0\\xad\\xd3\\x8f\\xbf\\xf6\\x98\\xcc\\xf6\\x82\\\'\\x84\\t$\\xa8\\xf2\\xf7?\\\\\\xfc{\\x8e$V\\xa1\\x13\\xf1\\xf4\\x00\\x11V\\x13{\\x11\\xdc=aHb\\xee\\x1d\\xda\\x1e\\x1e(\\xd5d\\x01X~g\\xd7\\xaf\\x93m\\x91\\xda\\x96\\x12\\x8aW[\\xfbr]b\\xb2y(\\x8d\\xd3jm\\xdf\\xaa\\xd6\\xf4\\xae\\xb4s\\xeem]\\xd2rV\\xa6\\x84\\x11\\xdb^\\xe2)\\xfcn\\xdc\\x17h\\t\\x89\\x05\\xa5\\x18a\\\\\\x0b\\xc6\\xcfa\\xc1\\xc0\\x82=\\x84\\xbbY\\x88\\x1at\\x82\\xb3\\xf2Y\\\'\\xf0\\xfd,\\xcd\\xd3\\xd0\\x02A\\x08\\x14\\xa9\\x8f#HQ!FE\\xdd\\xa3\\xb0\\xfbv\\xb6~\\xc7\\xa1"\\xdbdw\\x15B@\\xb3S\\xa4\\xf46\\xcd+!\\x87U\\t\\x8a4\\x18AO\\xe6J\\xe4%t4K\\xe6\\x86\\xa9\\x84Yv\\xdf\\xd5\\xec&\\x06\\xc5\\xa7\\xb6S\\xf5I\\xb9Ot\\x94\\xdc&\\x96\\x02\\x1bm\\x01v\\x96\\xe6\\xdb&\\x9b\\xdb\\x8f\\xee\\xe0\\xbf\\xcaS\\xdbc\\x9e\\xdel\\xec\\x97\\xfb\\xactM\\xa0mS\\x1f\\xee\\xca6\\x90\\xaf\\n\\x03yD\\xdaS\\x86\\x96\\xfbYf\\x85\\xc5-b\\xe9\\xc8YQ\\x82\\x96\\x9d+\\x01\\xad\\xe9\\xaf\\xd7\\xf3\\xed4u+\\x06\\x80,\\xd7l\\xb1\\x0e>\\xff<!A\\xa0{76~\\x9aC\\xc7\\xf4\\xd7d\\xb1\\x9e\\xa7\\x0ez\\xb5\\x95\\n\\\'\\x1c|\\x0f\\xf2\\xf8\\xa8D^VN\\xd0\\xd4B#\\x91\\x86\\x84\\xaa(iol?]j\\xe9\\xb2\\xdd\\x9b\\xe7\\xcd\\x04\\x10\\xfbj\\x87\\xd8\\xffj\\x02v\\xe1!\\xb6yQ>|\\xb3&|\\xf3\\xc3\\xf0\\x1d\\x83G\\xcak\\xf5\\xb9\\xec\\xb3\\x93\\xb4\\x0f\\xbdC:\\x01\\xf6ng}\\xf3\\xb0NH\\x1e\\xef\\x8c\\xf9A\\xe0\\xcb\\x83\\x86\\x90\\xd2a\\xfe\\xc0\\xd18;h\\xba\\xc1\\xae\\xc2\\x83\\xa7\\x1b\\xe6E\\x1c=\\xddP/\\x82<\\xe0\\x80\\xc4>\\x8e\\x1d\\xe9`p\\x82\\xb4\\xde\\xef`\\xbc\\x81\\xd0 \\x9b\\xa6y\\xcbWm\\xa2\\x8a\\x8b#\\x12;\\x0e\\xac,x\\xd2A?\\x96#\\x16\\x8b\\xfd\\x8a@\\x00\\xf1kW\\xd7\\x18\\x85\\x10d\\x11\\x88Hh\\x9b/\\xaaW\\xfa\\x01\\x99I\\x88\\x8e@\\\\\\xec_\\x8eB\\xba\\xa6R\\xc5G\\x07\\xdd\\x16\\n\\x88\\x85\\xc1\\xef\\xf3\\xb8\\xfa\\xc7T\\xfb\\xf3\\xe8\\xe1\\xf9\\xd5^\\x84\\xd4\\xde\\xa3\\xc3\\x91\\x82Q\\xcd\\xe9^\\xbf\\x0e\\xeb1H,\\x11\\xe7\\xd2\\xe3~\\xb74\\xe8\\xe3O\\x08\\xc4\\xd6\\x04\\x9b\\xa8\\x1d\\x83\\x8e\\xe8jF\\x03\\xfda\\t\\x94\\x88p\\xb1\\x13\\xc1\\xd0\\xea\\xbd\\r>\\x0b\\xdd\\xb3\\xd0\\xb5\\x17\\xc3 nd\\x0f\\xe5\\xd2#W\\x144\\xec\\x13\\xa20\\x12B\\xfbjP)\\x80j-\\x8a\\x11\\x1e\\x88c\\xf7.}\\xb0>9\\x93\\x1e\\x9a8\\x060<z\\xe23\\xf2Li\\x08\\xe8y\\x98e\\xbd\\xa0h\\x1c\\xe9\\xf0\\xf6("\\x94<l{-\\xe7\\x85\\xeeb;\\xeb\\xb27\\x02\\x8dpjB")\\xd5iX\\xcb\\x87\\xb06>\\xc0Z\\xcd\\x11\\xd6CX\\xdbr\\x08\\x02\\xa9/\\n\\xc10\\x01CAcQe\\x14l/\\xdd\\xe8\\x05\\x9fYH\\xb4\\x9a\\x9b\\x93Hh\\xd5\\xde\\xbd\\x84\\xed\\xc4JIK\\x04\\x83[\\x0f\\xd10a\\xfe\\xee\\x99\\xd7I\\xeer\\x07/\\x02\\x19\\xe1\\xd88\\x9f$bJ"\\x8e\\xe9\\xbe\\xac0\\x8d\\x819q++\\xec\\xed\\x1d\\xc3b\\x80\\x06\\x931\\x8a\\xabE\\x9dn\\xfbu\\xb0\\xd8>\\x94\\tx\\xc9\\x92\\xb22\\x13n\\xeePj\\xc1\\xbfn\\xe4|\\xb7\\xeb*\\xcb\\xe0\\x1c\\xe4\\xa0\\xccI\\r\\xa1`}\\xc0\\x7f\\xb12l\\\\k,\\xe0- \\x10\\x0c\\\\]]\\xfb\\xc3\\x10\\x95\\x83O\\xce\\xeb\\xa4\\x1f7\\xc9\\x8e\\x90c\\xcb\\x9b\\xa2=\\xc4\\xd1\\x0e;\\xec\\xaci\\xa2\\x96!U\\x8b\\x91P\\xf5D\\x7f\\xf2u\\xd2\\x9b\\x0fx\\xc7uM\\xab/\\x05\\x08<&\\n\\xf1\\xd6\\xd5\\xcbw7>K\\xf7\\xdaQ\\x1aD\\xd6\\xb6\\x13\\x03\\x1c\\x97a\\x8e\\x03\\xbdF\\xba\\xcee\\\'\\xe6\\xd9"s\\x1c\\x0f\\xb3J\\x00}%\\x0f\\xb2J\\x0ffU\\xbd\\xd6\\xd5\\xcd.\\xad\\x1b\\xb6v6k?\\xc0\\xda\\x91\\x93\\x18\\xbb.\\x8e\\xb4\\x05\\x8b\\x81\\x1a\\xb7\\xd2{A\\xbb\\xc8\\x9by\\x91\\xafC\\xc4L\\x84\\xd68\\xdbGcM\\x87\\x03\\x1d\\xa8i\\xce\\xe6CM\\xef\\xf4\\xcc\\x03\\x92a\\xa9p\\xdc\\xc7\\x93\\x18\\xc9X\\x1d\\xe4\\x898!ON\\x82\\xbf\\xbc%\\x91\\r+\\xf747\\xe1e\\x07\\\'\\x0c\\x9c\\x1f\\xa1\\xd9\\x9e\\xcbN\\xda\\x856E\\x01\\xb3D\\x99\\xfcz\\xece\\\'\\xd50\\x88\\xbayOu\\xd9\\xd9I\\xd1l\\xd2\\xde\\xcbN\\xde\\xbc\\xecl\\xa4ynV\\xf3\\xb9M\\x87\\xb6.B_\\x07O\\xc2]\\x197\\x8d\\xf7\\x0f=F\\x82\\x8aC\\xd7\\x95\\xa1\\x04\\x88(\\x11\\xf8\\x88X\\xb4\\xa4\\xc5z\\x16kn\\x11\\xcf\\x92\\xfe,g\\r\\x03\\xd1\\xf1\\xb3\\xf6F\\xa6\\xc1Y\\xc5\\x89f\\xfd\\xf2W\\xaa}\\x17\\x99~\\xe64\\x98\\xf1\\xd4\\xb0\\xaf}7\\x99\\xbe\\xb9\\xc2\\xe0\\xc4\\xca6sN\\x98f\\xa5,\\x06DW\\xfdE\\x03D\\x8e\\xde\\xd4W\\nD8\\xf5\\x83Vs\\xa5P>\\\\\\x19\\x1d\\xfcl\\xbfn\\x0bwQ#w\\x1do\\x92\\xebM5\\x16|\\xc3\\xd0.\\xc1\\x98JZ\\xeb\\xdc \\xb5\\xecr\\xa2\\x1b\\x7f\\xfcm<\\x11\\xb1\\xf51}\\xf3\\xc80\\xd8T\\xc02*\\x80\\xbfloA\\x08\\xcc\\x8bK\\xbf\\xa2i#\\x9b\\xd32\\x0c\\xb8\\x08H@9\\x87\\xf8\\x9a7g\\x0e\\x1a\\x01\\xb3\\x11\\x10@\\x86\\x94\\xa4\\xd5QL8\\x83uZ\\xcf\\x19\\xf8\\x94\\xd9\\x1b\\xb4\\xd8ZH\\xc7\\xf8\\xd5\\xd5\\xc6]\\xd5I\\xe0P\\xd9tUU\\xea\\xc0\\xf34\\xfb\\x84\\tK\\xf3\\xd4]\\xe1\\x81MN6\\xf5aX\\xc3\\xe8\\x8e\\x9ck\\xa4;)\\xe0\\xda\\x91\\xab\\xeap\\x8ciO\\xef\\xb2\\xd5\\xd6Y\\xe3\\xb5\\x85\\x9c]\\\\\\xe1\\xee\\x00\\xe1)O\\x8b\\xb5\\xbb5\\xde\\xf8\\xb5?\\xf9\\xd0\\xcc4~NI?g\\x07\\x9fFJ\\xba\\xdf\\xfc\\xa8\\x96\\xf0\\xe1\\xee%o\\xa7\\x88\\xa9\\x1d\\xfc6\\xaa\\xa5N\\xe0#t\\xa4\\xfb4\\x82y\\xc0G8n\\xd6\\xe0\\xeaO-0;\\xcc\\r\\t\\x0c\\x10Q\\x00\\xba\\x01\\x89\\xd1}\\x12\\xd3\\xf0\\xe8i_n&\\\\\\xec\\t\\x86\\xdd\\xcf8\\x07\\xc1\\xca0 \\xf6\\xc1\\xaa\\x03S\\xa6\\x885&\\xe0\\x82c\\x824\\x1c\\xd2\\x1e\\x98\\x02\\xafB\\xefC\\xa9\\x8a\\x14\\x81\\xa8\\x80I\\x15B\\xa96O\\x89\\xe6M\\x94\\n\\x9adP\\x1c\\x81p\\xdc\\xf2\\xab/M\\xbd\\x0cx\\xefU\\x01\\xc6t\\x9b\\xfa\\xb0\\xb0\\xf3\\xe1\\x93\\x1a1\\xeab1\\xafh\\xa1\\xfcV\\xe5\\x19\\xa6\\x80bwc!\\r\\xb2\\xd9\\x02\\x97\\xa2N5\\xf9C]O\\xd1\\xea\\xe9*yM\\xaa\\xa4\\x9e\\x02!\\x14b\\x00\\x1e\\x1a*t"\\xe2\\x9ec\\x96\\xbd\\xc7\\x0cG\\x12K\\r\\xaa\\x15#\\x06\\x9d\\x1fq\\xca5%S(\\x14\\x1fvE:\\x87|\\x96p\\xf7DW\\x02\\x8fI\\xe5<\\xf1\\x88\\xbf\\x9d\\xcb\\t:\\xc9\\xcd\\xa2\\xc6~+\\x17\\xac\\xe9<\\xbe\\x82\\xb0}k6,u\\xd4\\xb7v/\\x9b\\xf6t\\xa2"\\x8dp0N\\x1d8\\xf1\\xd3\\x94\\xa5\\xee\\x89[\\x05h\\xfb\\x01\\xfdw\\nT+\\x84\\x15\\xf3\\xbd\\xa2\\xbe\\xb242rF>\\xb5\\x96y^\\xfe\\x1fE`3\\xda\\xd4\\xcc\\x1f\\x8c\\xf1\\xf4.\\x15P\\xc7\\x95\\xb6\\xaa\\xcdL\\xb5\\x86\\xa8f[F5\\x81\\t\\xc0|\\xe2\\x9d\\x1f\\xf0C\\x90\\xedp~\\xe2\\x81l\\x7fd\\rOp\\xc3\\x1aN\\xaf\\xc6\\x8f\\xce\\x05\\xca,)/n \\x02\\\\:\\x9c\\x1b\\\\\\x9e\\\\F\\xd4\\xe6\\xc6\\xf4\\x0f\\x94\\xee\\xe2\\xe7pe\\x8f\\x9b\\xb5\\xd7\\x95e\\x0fqe\\xcf\\x91I\\xeaM\\xde\\x97\\xa6\\xabs^\\x83nYN\\xe2#\\xb7\\x02/M!\\x96\\xe7\\xa1Z\\xa0\\xb0\\x94J\\xc4u\\x07\\xc4\\x1fY\\x0b\\xd4/\\xdcg\\xcf\\xbf\\x9e*\\xeb{\\\\\\xfe\\xf5TY\\xdf\\xd3\\xa6\\x00\\x0e\\xab\\x01m\\xab\\x81\\xeaU\\x83\\x81\\xff\\xed1\\xe8\\x8a\\xeb(\\xc7\\xe2!J"\\xdbJ2\\xcc\\x9a=\\xd2d\\xb0\\xa3L\\xc6A7\\xeb\\xc8*\\x94p"\\x86\\x96e\\x01$\\x9c\\x88\\xe9Bx\\xe8\\xb8\\x0f\\x16E\\r2,\\xbf\\xbf\\xa4\\xe2sy\\xbb\\x7f\\xa3\\xf3%\\xf2\\x8e\\\'AH\\xb5\\xffd\\x87\\x89\\xfa\\x91\\x81aK\\x0b\\xa9@\\xb1\\xb9\\x0c\\xfa\\xd2Zx\\x10\\xde\\x0f{\\xd3\\xfbC\\xaf\\xa3\\x97\\xde\\x13z\\x9d\\xb2$\\xe37\\xfa\\xff\\x8a\\xdfq\\x9a$0\\x9b)\\xa7\\x94\\xc7M\\xf68\\x15\\xc1\\x12a:\\xf4\\xc2\\xa0\\x1dW\\x19\\xa6\\xf5\\x17K)\\xa4U\\xc8r<\\x0b\\xc6\\x93\\x14\\x8c\\x0e;\\xdb\\xf6\\xfa7\\xa8,;\\x8f\\x1dkf\\x87\\xba\\xc9\\x86\\xb7\\x97\\x17\\xff\\x07\\x1c\\xe6>c\\nendstream\\nendobj\\n22 0 obj\\n<< /Filter /FlateDecode /Length1 1817 /Length2 12802 /Length3 0 /Length 13951 >>\\nstream\\nx\\x9c\\x8d\\xf7\\x05P\\xdb\\xeb\\xf6\\x06\\n\\x03\\x85\\xe2Nq\\t\\xee\\xee\\xee\\xee\\xee\\x14\\x0b\\x0e\\x01\\x82;\\xc5\\xdd\\xad\\xb8\\x14\\xb7\\xe2V\\xdc]\\n-\\xee\\x14\\x97\\xe2~\\xd9r\\xce\\xde\\xe7\\xff}3\\xf7Nf\\x92\\xdf\\xb3\\xd6\\xb3\\xf4]\\xebMBI\\xaa\\xa2\\xce(j\\x0e2\\x05J\\x81\\x1c\\\\\\x18Y\\x99X\\xf8\\x00\\xe2\\x8ab:\\xac,\\x00\\x16\\x16v&\\x16\\x166\\x04JJ\\rk\\x17;\\xe0\\x7f\\xe4\\x08\\x94Z@g\\xb05\\xc8\\x81\\xef_\\x0cqg\\xa0\\x89\\xcb\\x9bL\\xc2\\xc4\\xe5\\x8d\\xa8\\x08r\\x00\\xc8\\xb9\\xda\\x01X\\xd9\\x01\\xac\\\\|\\xac\\xdc|,,\\x006\\x16\\x16\\xde\\xff\\x10A\\xce|\\x00\\t\\x137ks\\x80"\\x13@\\x0e\\xe4\\x00\\x04#P\\x8a\\x83\\x1c=\\x9d\\xad-\\xad\\\\\\xde\\xe2\\xfc\\xe7\\x11@cF\\x0b`\\xe5\\xe5\\xe5f\\xf8\\xd3\\x1c j\\x0ft\\xb663q\\x00(\\x9a\\xb8X\\x01\\xed\\xdf"\\x9a\\x99\\xd8\\x01\\xd4Af\\xd6@\\x17\\xcf\\xffqA#`\\xe5\\xe2\\xe2\\xc8\\xc7\\xcc\\xec\\xee\\xee\\xcedb\\x0ff\\x029[\\n\\xd12\\x00\\xdc\\xad]\\xac\\x00j@0\\xd0\\xd9\\rh\\x0e\\xf8\\xa3d\\x80\\x92\\x89=\\xf0\\xef\\xd2\\x98\\x10(\\x01\\x1aV\\xd6\\xe0\\xbf\\x14\\xea \\x0b\\x17w\\x13g \\xe0M`gm\\x06t\\x00\\xbf\\x99\\xb8:\\x98\\x03\\x9d\\x01o\\xd1\\x01\\xea\\xb2\\n\\x00eG\\xa0\\xc3_d\\x85\\xbf\\x08\\x0c\\x80\\xbf\\x9b\\x03`eb\\xfd\\xaf\\xbb\\xbf\\xad\\xffpd\\xed\\xf0\\xa7\\xb1\\x89\\x99\\x19\\xc8\\xde\\xd1\\xc4\\xc1\\xd3\\xda\\xc1\\x12`am\\x07\\x04(K)0\\xb9x\\xb80\\x00L\\x1c\\xcc\\xff \\x9a\\xd8\\x81Ao\\xf6&n&\\xd6v&\\xa6o\\x84?S7\\x01H\\x89\\xaa\\x02L\\xde*\\xfc\\xbb>\\xb0\\x99\\xb3\\xb5\\xa3\\x0b\\x98\\tlm\\xf7G\\x8d\\xcc\\x7f\\xb8yk\\xb3\\xa4\\x83\\xb98\\xc8\\xde\\x1e\\xe8\\xe0\\x02F\\xf8#?\\tkg\\xa0\\xd9[\\xdf=\\x99\\xff>\\\\[\\x07\\x90\\xbb\\x83\\xf7\\x7f\\x90\\x85\\xb5\\x83\\xb9\\xc5\\x1fe\\x98\\xbb:2k:X;\\xb9\\x02e%\\xfe\\xe6\\xbc\\x89\\x10\\xfe\\x91Y\\x02]\\x00\\x9c,,,\\xdc\\\\<\\x00\\xa0\\x13\\x00\\xe8af\\xc5\\xfcG\\x00\\rOG\\xe0\\x9fJ\\xd6?\\xc4o5\\xf8z;\\x82\\x1c\\x01\\x16oe\\x00}\\xad-\\x80o\\x1f\\x08\\xde`\\x137 \\xc0\\xc5\\xd9\\x15\\xe8\\xeb\\xfdo\\xc5\\xff"\\x04VV\\x80\\xb9\\xb5\\x99\\x0b\\xc0\\x14hi\\xed\\x80\\xf0\\x8f\\xf771\\xd0\\xe2/\\xfcv\\xfe\\xce\\xd6\\x1e\\x00}\\x96\\xb7\\xf1c\\x05\\xb0\\xfc\\xf1\\xfa\\xef\\x93\\xe1\\xdb\\x84\\x99\\x83\\x1c\\xec<\\xff\\xa1\\xffy\\xc4\\xccR\\x9a\\xea*\\x8a\\x9a\\xf4\\x7f\\x97\\xfc_\\xa5\\x98\\x18\\xc8\\x03\\xe0\\xcd\\xc8\\xc9\\x05`d\\xe3d\\x01\\xb0\\xb2rq\\x00\\xb8\\xdf\\x1e|\\xff\\xd7\\x8f\\x8a\\x89\\xf5\\xdfy\\xfc\\xcbV\\xd6\\xc1\\x02\\x04\\xe0\\xfd+\\xdd\\xb7>\\xfd\\\'e\\xb7\\xbfg\\x80\\xe6\\xef\\x05\\xa1\\x05\\xfc\\xaf/%\\xd0\\xdb\\xe4\\x02\\x014\\xff\\x0c\\xba\\x01\\x0b\\\'\\x8b\\xd9\\xdb\\x1b\\xeb\\xff\\xe7q\\xff\\xd3\\xe4\\xff\\xdf\\x94\\xff\\xe1\\xe5\\xffu\\xd0\\xffoFR\\xaevv\\x7f\\xeai\\xfe"\\xfc\\xff\\xe8M\\xec\\xad\\xed<\\xfff\\xbcM\\xae\\xab\\xcb\\xdb\\x16(\\x82\\xdev\\xc1\\xe1\\xffR\\xb5\\x81\\x7f\\xad\\xae\\x18\\xc8\\xce\\xfc\\xff\\xead]L\\xdevA\\xd4\\xc1\\xd2\\xee\\xbfm\\xb4\\x06KY{\\x00\\xcdU\\xac]\\xcc\\xac\\xfe\\x1a\\x97\\xbf\\xe4\\x9a\\x7f,\\x9a\\x9d\\xb5\\x03P\\x05\\x04\\xb6\\xfe\\xe3j\\x010\\xb2\\xb2\\xb0\\xfc\\x1f\\xdd\\xdbv\\x99\\xd9\\xbe]\\x1f\\xe0\\xb7\\x99\\xfcS\\x05|[\\x9e\\xff\\r)\\xe9`\\x062\\xffc\\xcb\\xd8\\xdeN\\xd8\\xc4\\xd9\\xd9\\xc4\\x13\\xe1\\xed\\x90\\xdf\\x10\\\'\\xc0\\x9b\\xf5m\\x1d\\xcd\\x81\\x1e\\x7fN1\\x80\\x99\\xc9\\x01\\xe4\\xf2f\\x02x+\\xce\\x17`\\x01rF\\xf8\\xe3D\\xb98\\x01\\xcc\\xa2\\x7f\\x88\\xfeB\\xdc\\x00f\\xf1\\x7f\\x10/\\x80Y\\xf2\\xbf\\x88\\x9b\\xe5m\\xc4\\xfeA\\xac\\x00f\\xe9\\xff"\\x1ev\\x00\\xb3\\xfa\\x7f\\x11\\xef\\x9b\\x17\\x93\\xff"N\\x1e\\x00\\xb3\\x19\\xc8\\xee\\xad\\xc0\\xffH\\xfe\\xa8\\x93\\xd9\\xfc_\\xf0\\xcd\\x17\\xf0\\x1f>\\xd7\\x1b\\xfa\\xb3\\xc5\\xff%\\xb0\\xbd\\xb9\\x7f\\xab\\xdc\\x04l\\xf5/#6\\x00\\xb3\\xc5?Fo\\x0c\\x0bk\\xb7\\x7fy\\xf9C\\rru\\xfe\\x97\\xc1\\x1b\\xc5\\xf2_\\x90\\x03\\xc0\\xfcowo}\\xb0\\xfe\\x17|K\\xda\\xee_\\xf0\\xad\\x13\\xf6\\xff\\xc0\\xb7\\xf5b\\xfeW9o\\x0b\\xcd\\x0c\\xfa/\\xe4x\\xe3\\xbe]\\xf9\\xffR\\xbfE\\xfaW\\x1e\\xaco\\x91\\xc0\\xff\\x82o\\xe5\\xfeS\\xea\\xdb13\\xbb\\xb8\\x83\\xfe\\xa5~\\xeb\\xa5\\xeb\\xbf:\\xf1\\x16\\xca\\xf3\\x9fPoYz\\x01\\x9d\\xff\\xa2\\xff\\xcfX\\x98\\xb9:;\\xbf]\\x8e\\x7f.\\xee[\\xe7\\xfe\\x83\\xff\\xbc\\x89\\x81@\\x0f\\xa0\\x19\\xc2\\xe2\\x02\\xc8\\x8c?\\xd8\\xa6.\\xb8\\xe3\\xaeV\\x94\\xc0\\x9dqwRp\\x8erW;\\x9d\\x96\\xd1{\\xd1\\xf9\\x9b\\xeb\\x03\\nl\\nmM\\xd6\\xa7u\\xe7\\x1b\\xd1\\x94\\x91^\\xb4\\x95mI\\x9ak\\x91%\\x92g\\xef\\xa3\\xd6\\x06\\xd8\\xb0\\xb6$\\xd5\\xf6G\\x9f\\xa7\\x8f\\tj3\\xbb\\xed\\x08?\\xa7\\xb1\\x07\\xa7\\x8a\\x8eD\\xeb\\x07\\x88\\xe0\\t\\x195D\\xf6|\\x9e\\x9d|\\xb4\\x02m\\xdf\\xb5Bv\\xc9Q\\xe69\\xb9\\xf2\\xa0\\xa8\\x14`\\xde\\xb9\\xf7K{\\xd4\\x0f\\x94/\\x8f\\x87.\\xec\\xaa\\xee\\xd5p\\xc9#>\\x95\\xcf2\\xc6hF\\x1b\\x04\\x96|\\xa7\\xcc7\\xcd\\x9e\\xc7%{\\xef\\xc2H\\x04G\\x87q\\xee\\x81\\xfa\\xfd\\xfaf\\x0e#w\\xea\\x95D.\\x81\\x1e\\xc1\\xf78\\x86\\xfd\\x8b\\xb7\\xde\\x06[\\xec\\xfd\\xbc\\xd7j\\xa5\\x06\\x1b\\xb8\\x1b\\x8f\\x02O\\x0f\\x97\\xe8\\xdd5\\xc6\\xf8\\x0c\\x95\\xb7\\xd8~\\xaa\\x1c\\xce\\x0f\\xef\\xd2\\xe2\\xe8u\\xc1\\x1f9\\xdc\\x11q\\xc3K\\xc1\\xfd\\x89\\xf3\\xf2Zxd~*\\xb8\\xce\\xc1e\\x8c\\x82\\x99\\x01\\n]\\x98\\x14\\xdd\\xb9\\xeef\\x99\\xcevZfSJ\\x00*j\\x92z8\\xef\\x10\\xcaRi\\x8b\\xa4j\\xf2\\x91\\xd2\\x8f\\xd9\\x84\\xd6\\xfe\\xf7\\xcf\\xe4D\\xea\\x89:\\x90\\xe6\\xf4\\xdfz\\x88\\xbb\\x8fO5\\xbb\\xe8|\\x12\\xe3p\\xf9Xc~M\\xda\\x13\\xdf\\x08bnuf\\xfbq=\\xdd\\xbfg\\xae0\\x99\\x91V\\x80I\\xb1\\x80X#_RR\\xc6\\x9e\\x9dP\\xcf\\xf7\\x95T\\x1b\\x01\\xc74\\x14y\\xeb\\x0f\\xbc\\xe63\\x15\\xdf2\\xda\\xbc\\xb3\\t\\xf3)v\\xb17X\\xe3\\xebG\\xf4\\xe0\\xc1Q\\x99|4Ui\\xd8O:;y\\xfe\\xd2\\x15o5\\xa2\\xdfX\\x8bu\\xfd!h\\x1a\\xedc\\\'o\\xf8\\xf6\\xb4\\x0b\\xdb\\x0b{R\\x13\\xf7E0\\x83,\\x1b\\x8e\\x18\\xcaIE6\\xcf\\xb0\\\\\\xfa:\\xcb<\\x96=\\x98P\\x13J{Z\\xf5\\xc1\\\\\\xe7\\x98\\x94pf@\\x18e\\xee9\\xbb\\xf3\\xa4\\\\xY\\xf5\\x14\\xe3\\x98\\xe3\\x04\\xa8\\x16%\\x13\\x83h8\\x17\\xc9\\x94\\xe1\\xe8\\xffqz\\x82P8+p\\x87\\xe74\\x87\\x0ft\\xc0\\xd7\\xac\\x89\\xefZ$\\x91\\xa4\\xa7o\\x9fa\\xc4<l\\xd28\\xb7\\xb2\\xe7\\xbf\\xc0\\x91\\x06\\xd7hw\\xc51\\x9c8\\x8f\\xbd\\xeb\\xa2 \\xe0GE\\xa2\\xfd9\\xa4\\xd2]\\xc1\\x84\\xd7\\x12C\\x05\\xae\\xc7\\xc9jS5\\xe0\\xf3d\\x1ev\\xb7\\x8d[\\xf5\\x0cm\\xc8\\x99!\\xf8\\xab\\x93\\x1a\\xd9\\xf3t\\xcdP\\x08\\xf9S<\\xf0\\xb4\\x9b\\xa89\\xe5\\xfe\\x19FO\\xde_E\\xe6<\\xc1Y*S\\xe0VR\\xae\\xa0\\xee\\xf13?\\xc1\\xc6\\x0c\\x93\\x92\\xdfQY\\x80\\xd6\\\\\\xad\\x13\\x9c\\x82\\x1c\\xfd\\xc7\\x198\\x9b\\xb9\\x86-\\x04\\x97\\x17]7\\xf9\\xc5\\x02\\x92o@\\x03W\\xb8\\x0c\\x85sU\\xa7X\\x01\\xadDY\\xd1\\x85\\x10\\xfc\\xc3{^\\x93\\x0e\\xd8\\x8fk\\xd4T\\x87R\\x12\\xcd\\xbc\\xd2\\xe4Z\\xed_\\xeeE\\xdcl#G\\\\Z\\x98$\\t}\\xbc*\\xba\\xf4\\n\\xac3\\xf9s\\x94\\xbe")\\xcb\\x930\\xf3<\\xe0\\x91\\x9d\\xc3\\xcd\\xa0\\x95\\xc9\\x88.qw.\\x08\\x0b\\x91U\\xe4\\x14f\\xe3\\xb8\\x1c\\xa7\\x8e\\xb8\\xf3\\xd3\\xcd\\xec\\x86\\xdbq"v!JI!\\x8bi\\xef<\\xb0\\x86\\xa8\\x13\\x93\\xbe\\x0c@\\x15\\xb1\\xd15\\x1e\\x13\\xbc\\xff>aL\\x10\\xcd\\xc3\\xa7\\x13\\xdf\\x16\\xf8\\xdbN\\xb3\\x02\\x1f\\xb6%X\\xb6\\xe0JX\\xdf\\xbd\\x02\\n\\x7fk\\xdc\\x0c\\x9eJ\\xef\\x97q\\t\\xdeLYn\\xe7Z-\\x12\\xd8\\\\\\x06(U\\x9cF\\x8d\\xddB\\x07\\xde\\xdbG\\x9e\\x9d\\x0e\\xd40\\xe7\\xfd.f\\xb2Q\\x14\\x85\\xf6)dI?v\\xdc$\\x81"\\xd5\\xb2\\x8e\\xb5\\xfd\\xc9\\x02\\x15\\xd6`?\\x05\\x96\\xe5\\x00\\x9e\\xfb\\x84\\xd8Dm\\xca\\x08\\x9d\\xe6\\xf3\\x93\\x02\\x8e\\r:\\xf9\\x18\\xa9\\xbd\\xfb\\x1a[;y\\xbb\\xc3\\x98\\xf3&\\x85O\\xd4\\xeb\\x8c\\x06\\xc6\\x89\\x02lr\\x92\\xe1\\xb4w\\x85N\\x89\\xf1\\xeb\\x03\\xc7\\x00\\x93t\\x8a;fS\\xe5\\xce\\xb2\\x8f\\xca\\x1d\\x9b\\xd8\\xa1\\xe5J\\x83\\xfb\\xa5\\xa9m\\xb7Tm\\x0e"b\\xa0Re\\x89\\x85\\r\\x7f\\xac\\xb90y\\xbc\\x1d\\x19=\\xd7q\\x05Q\\xaf%\\xd4^\\x9c\\xf7\\xfd5:\\xdd\\xfd\\xda\\xe9I\\x1a\\xde\\x0c"&\\x83\\xba\\xea\\x0e\\n[q{\\xc1c%\\x15u\\xa9C\\x15\\x9e\\x81q\\x9d\\xa1jTp\\x10\\xdf>\\xca\\xd6jk/\\x97\\x1d\\x9e\\x03\\x8b)o\\xa8\\xbda\\xc7\\xf9\\x05\\xc3\\x11\\xf3R\\xe9\\x17\\x03]\\n.|}\\xfa@M\\xc9H\\xf2\\xc1\\x96h\\xc5|\\xe5c\\x1a\\xe4\\xa9:&\\x89\\xa7M\\x85\\x9a\\xadr\\\\\\x83k\\xbaM\\x91;/v\\xea\\x92b\\xaa\\xe9\\x14\\xae\\xe2\\xe0s\\xb6\\xb4\\x95\\xf7\\x91]\\x940\\xf44)W\\x9fm\\x03\\x8c\\xebp%\\xd6_\\x98\\xeb\\x86\\xa1Rli0F\\x12c\\xe3l\\xd3\\xd1\\x1ckP\\\\\\x8co\\x8c\\x0e\\xc4\\xfa\\x1e\\xc2p\\xb7\\xe6\\xbf\\x1a\\xc8\\x04\\xfa\\x1d\\xeab~\\xbc)\\x1bKlx\\xf9\\x00\\xf7\\x88iF\\xd9\\x8d\\xeaG\\x83E\\xba\\x84 \\xe7\\xf6\\x03\\x8c\\x82\\xea\\x9b>\\xc4\\xeb\\xb4\\xe0\\xbe7\\xbd\\xe1\\xbd\\x9d\\xc7\\x15\\x8aQ=\\t\\x9eLBW\\x0c\\xce\\x80\\xbf\\xa3Re\\xecs\\xfc\\xf4\\x8b:\\x82*2C\\x91\\xaa\\x8e\\xbb\\x01\\xbd\\x15=\\xd5Eo\\xfd\\x11\\xda\\xc0\\x99\\xc8\\xdf\\x873E\\xb1\\xa4\\x85\\x93\\xac\\xfe\\x13]g\\rj\\x17\\xd1\\xf1\\xd2\\xa1@m\\xf4d\\x8aDlt=C\\xbb\\xc2\\xa5\\x85\\r}r\\xc2\\xf1h\\xe7\\xb7\\xae1\\xc8\\x9b\\xa3\\xdc\\x91l2\\x0f\\x96\\xde[+\\xf2w\\x15\\xeb\\xae\\xfa"K\\xbe\\x9b\\xfb\\x8bd\\x0bA\\x08#\\xe6\\xb2\\t\\x92t\\xf0\\x0c\\x00\\x9b\\xae=\\xc3\\xbd\\x017\\xa6\\x1e\\x17\\x8fV\\xb8\\x0fe\\xf0g\\x89\\xb6\\x92=\\xbav\\x055\\xc5\\xbe\\xe6aL\\x8c@9\\xc4_\\xf5C\\xd7\\xe2\\xf1)\\xb0\\xfe\\xc5\\x82$e\\xf2\\xdb\\xd8\\x8d\\x12\\xc86\\x0e5\\xb2d\\x9eX:a\\x04H+\\x12M>wT\\x1d\\xf9\\xe1}\\xd7\\xb6B\\xfb\\xd6\\xd9\\x1d\\xbd\\x8b\\xc7h\\x10X\\x98\\x1e\\xb5\\xd1G\\xa6\\xad\\xae\\xbd\\xc2\\x04\\xc5\\xa13_\\x13\\x87\\x01\\x0c\\x19gZ\\xad\\xe0l\\xaf\\xee\\x94\\xa7]Q3d\\xffvdi\\xe29\\xa4\\x82A\\x013\\xbb\\xb2\\xc1\\xb3\\xa9&b/uq\\x99f\\xf3w_\\x15bJ\\xb9\\xa0\\xb3S\\xc7]\\x06\\xbaI\\x0c\\xa0V\\x0c\\xa7u\\xf2\\x86\\xed,\\xbf\\xbf\\x1b\\xfdf\\x9bh\\xa8K\\xbb\\x00\\xed\\xbcx\\r\\xc3C}\\xd6&\\xb4\\xbe\\xc1-\\x93\\x9b\\xd7n\\x0c\\xd9\\x1f\\x0b\\xdb\\xe1O\\xdd\\xdfD\\x8b\\xee\\x8c\\xd0\\xb6\\xd54\\x1b[\\x9f+=\\xb2P\\x03\\xf5\\xa5\\xe0\\x9d\\x9e_\\xa6\\xf8\\xaf4\\x84(M&hd\\xc9(\\xf1\\xf6M\\xf6\\\\\\x18\\xdf\\x05+\\xa0Cj\\x7f\\xc9\\x96$fB%\\xe9}\\xa0\\xf8\\x93\\xbe\\xc7\\xf8\\x84G\\xb5C\\xaf\\xb8\\x13y#\\xb9\\x86u\\x1b\\x13\\xda\\x95\\xf5\\x9d\\xf6\\x0f\\xe6\\x0b\\xeb]\\xba ay\\xe3\\xa5\\x91\\x9c\\xfc~\\xb4\\xc5g\\x82W\\xdf\\x03K\\xfe\\xc9\\xae\\x84:\\xd4\\xca$\\x91\\xa2o\\xd1B\\x0b25\\x01\\x95=G\\x8f\\xf7ge\\xcb\\xf6\\x0e\\xbc\\xe3\\xac\\x19\\x0f\\x8ca\\xb7\\xbby\\x8f\\x1f\\xca\\xf4\\xd1\\x12\\xa1 +O\\x06\\x90\\xfb\\x90~\\xb9\\xd8p#\\xc2\\xb1\\x0f(\\xaezny\\x15\\x07\\xef1l\\n\\xeb\\x9d7\\x8b\\xec=\\xa8a\\xa9\\x88Y\\x0b]\\xeeL\\x1f}9;^v\\x0b\\xd7\\x92\\x9a7\\x10\\xb5\\xb2\\xfd\\nJo\\xaa\\x86\\xd9@\\xcb\\xe2\\x81&y\\x0f\\x95\\x01}vF\\xf7\\xbek\\x90(BI\\x16_\\xd5\\xad\\x84\\x97\\x03\\xca\\xab\\xfd5\\x82\\xe3\\xc7\\xad} *\\xc0\\x81\\x87\\x96H"\\xfbp\\xdd\\xd4ph1\\x07\\xf6U\\xe0lB\\x93\\xc6r\\xf7\\xfa\\xe7\\xfd\\x1aM\\x91\\xb12[ZT\\xebs\\x11\\xee\\xb2\\x97);\\x0c\\xcb6\\xe2\\xd85#\\xae\\x86V\\xadwG\\r\\xfc\\xddG\\x99\\xb3\\xf8(\\xa30\\xfdN \\xa6\\x9d\\xd8\\xd0\\xd6\\x16rZ,\\xd1\\x13G\\xb4\\xd2E\\x08`\\xa7\\xfb!\\x1c\\xbbUH\\xa8K\\x10\\x98[\\xc2\\xae\\x9a4\\xcd\\xf8\\x99\\x9a\\xc5sf\\xfd\\xa4\\x0c77\\x96\\xfcZ\\x0eN\\x1b\\xc0\\x02\\xb7\\xbe\\x1aN\\xc0m\\xf0\\x18\\x82\\xe1r\\xceY\\xbd\\x82\\xc7\\x1e\\x93,H\\x12\\xdb7\\xd9\\x81\\xf7\\xb3\\r\\x1a\\xa7\\x14\\xb5w\\xc1G_\\xed\\xf3\\xe6W!\\xce@\\xd9\\x18\\xcc\\xe0\\xf2l\\xe7\\xe6k$\\x0f4\\xabj+O\\xd2m[\\xad1\\xf5\\xe1j\\xee0Y\\xc4;\\r\\xaba\\x13\\x8d\\xa4k\\xacU\\xd0\\xd1H\\xe0mp,M5\\x92\\xb69XS\\xf6N\\xf0\\xcc\\xf0a.\\x03M\\xd1g\\x0e\\xe6s\\x82\\xb9\\xdc\\x9d\\x81n\\xb9\\x1aJ\\x85\\xb4g\\x00j3\\x879\\r\\xda\\xbaR\\xdc6a\\x8b7\\x19\\xb6\\xdd\\xbdA$\\xc0\\xd0v\\xb8\\x9aG\\x0b!\\xe3\\x0e\\xf2\\xec\\\\\\xf4LPp\\xea\\xce\\xf9\\x1a\\xa0\\xb5c\\xe4\\x7fC\\xb7k\\xefqM\\x03\\xbc\\xad$\\xfc-h08ZKz\\xff\\x92\\xd7\\\'\\xd6\\x94c\\xca\\x130\\xdd:\\xa3\\x83\\xbc\\x90\\xa1XV\\xfb\\xad!\\xba\\n\\xe3g\\xc9\\x16\\x865\\x82c\\xecFz\\x14\\xed\\x90\\xf3Y\\x19R\\x9e\\xdf\\xce*\\xeb\\xe5g\\xc4\\xde\\x1fq\\x9fa\\x05\\xf8\\xfd\\xcd\\x19j\\x8c\\xe6\\xb8\\xbe\\xecZd3\\xa8t;N\\x96\\xfa\\x9cW\\xdbv\\xa8\\xf1\\xb4q7^\\x11\\x0bY#\\x86\\xbf\\x0fo\\xfa\\n\\x04\\x18u\\x05\\xd7ge+\\xcd\\x16\\x10\\x8a\\xb4\\xd7Za\\xecg\\x1b\\xd7\\xe8\\x8bI\\x85u\\xae1(P~\\xb7\\xd7$\\xcc\\xea\\xd8\\xc7l\\x10\\x03\\x06t\\xd0Q\\xd4\\x928\\x80<6\\xd9\\xe5\\x01h\\xd7\\xbd\\x97Z\\x14\\x9d\\xfa\\x05\\xfa=\\xd1\\xcf!\\xe9\\x16\\x9a\\xfcx\\x1c/Q1u9x\\xaa\\xefmZ/\\x13\\x1f\\x82\\xeb\\x13"\\xdf[\\xb6\\x87\\x91X\\xa6\\xad\\x83\\xd6V\\x90I)\\x894\\xf1\\xb1\\xba;\\xac"\\xbe\\x94\\xb5\\xaf\\xd0|\\xcf\\x06\\xb0]\\xef\\xb7\\xfe\\xc8\\xad\\xef\\xfa\\x1aTP\\xc2\\x00\\xd8l\\xd8\\xc8\\xf8\\xa6\\x8c\\xab?\\x1d\\x9e8\\xf9\\xd1@8V\\xdbeL`8\\x84\\x99\\xbf5\\x06\\xa9\\x91lO\\x8d\\xb0\\xca~\\xb5\\xb7:7\\x93\\xb6\\xfa\\xa6\\x0c+S2\\xd6\\xc0yX\\x9b\\x15\\xa9gn&\\x11\\x94\\xfce\\x1a\\x13\\xc2s{!b\\x91Vl<\\xf2\\xdc\\xa0Sd\\xc92\\xf0 zJN\\xd8\\x1e \\xe9\\xe4\\xb4\\x98\\x1c|\\xc5\\xc3a\\xb403\\xba\\x85\\xda5#\\x91\\xdbDh\\xf2\\xc4\\xcb\\x8d\\xb4]\\xd4\\xd2=\\xed]5R\\x92\\x89Q\\xa1G\\xda\\xf0\\xd1\\x98\\xd1y\\xc9n1\\x8e\\xee\\xac\\xdd\\t\\xf2S&n\\xce\\x0e\\xe1b\\xdb\\xcf\\xc8|\\x17$h\\x05qH\\xcbY\\x04>\\x07S9\\xf8\\xf0\\x07\\x85\\xb6~\\xa78\\xfc\\xe4!\\xe7_6\\x9cF\\xfd\\xbc\\xef\\xca\\x95\\xd4\\xb4\\xea\\xe5P\\x7fUq\\x03?l\\xfc\\x8ew\\xa8\\xa3<\\xde\\x9c\\xaa\\xc5\\xd4\\x1dLq\\x1dvY\\xf0O%^\\x86\\x0e\\xc7\\xe1\\x18l\\x89\\xda\\x16p"\\xd3v\\x113\\xe0\\xcf\\x17-\\xbd\\x831|*,\\x84!\\xae\\xbb&\\xb0\\xc0\\x1dq\\xf7\\xf4\\xf4\\x91\\xc1\\xca\\xf7>\\x0c\\xd5\\xf4\\xc3\\x16\\xb0\\xeb\\x1a7yQ\\xbc \\x82IG\\x82\\xe8\\x0c@?\\x05/\\xffh\\xfd\\xb9\\x81\\xfaq\\xa6\\xa3\\xffqr^Hj2\\xaa?-\\xd2-Q5l\\xc4\\x065\\xf7\\x05\\x1d\\x1f*\\xf1\\xa1:\\x9b\\xeb\\x03e\\x8eY\\xc0;\\xf2\\xa2!\\xbf\\xc6x\\xc4\\xb4\\xc81\\xe5=\\x18\\xe4w@\\xa8\\xd9\\x88\\x840j\\x93Eu\\xd6\\xcf\\xbf\\xa7\\x80a\\x80\\xbd^)DWd\\xb0\\x915\\x19\\xee\\xc1a\\x88g\\x83{<Crc\\x90\\x1f\\xbc\\xf8\\xf9\\x97D\\xbf-\\xb5\\xc1D\\xe3\\x0e\\x06\\x82g\\x1b\\xb2 \\xfa\\xc5\\xe1Jy\\xdb\\x18dUN\\x9c\\x88\\xacQ\\xd9\\xa0r\\x9b\\xb1\\\'\\xc9\\xd0\\x0bS\\r\\xdaS\\xd4\\x1a\\xd4<\\xb2\\x98\\xd0z\\xa1F\\xf7\\x83U\\xb7\\xc7\\xfaM\\x1f\\n\\x1c&\\x8e\\xc3$:\\x919\\xb0\\xf02\\x82\\xf5]\\xf8\\x94#D\\x83\\xe9\\xc0\\x96\\x813|\\x0c/\\x8ahE\\xdf\\x86\\x9e\\xc0\\xbd\\x1b}\\xf9\\xe8\\xfb\\x1a\\x05\\xf1\\x9d\\xf6\\x94I\\xfaR\\xa2e\\x1e\\xa88\\xacT\\xc2{\\xcf(&\\x0f\\xf1\\xd9\\xc5\\xc1\\\\\\xaaO]\\x9a\\xa5)\\xbe\\x8b\\x06\\xb2\\xbb\\xf8\\xe1\\xce$\\xd9\\xa3\\x0f\\xa38r\\x96\\x04H\\xd9\\xdd\\x9b|{\\xcb\\x12\\xc2\\xb8\\xf8e\\xa3\\x80DX\\x9a\\xcc\\xdf\\xf8\\xe8=L\\xa9\\xc7D\\x9c1:jH\\xc6\\xcc\\xcb\\x0f\\xdfJ\\xbday\\x8d\\xaby6>\\xa0\\xc6Em\\xf5/IaHP)|\\x1a\\xf7\\xf98\\xff\\xc24R\\x99\\x97\\xe8fr\\xb8\\xa1\\xbe\\x9b\\xc6\\xcf\\xadI9n\\xcb\\xffn[\\x01IL\\xcc\\xf8\\xd4\\xc5\\xb6\\xc8\\x17^\\xb2w\\x17\\xb51\\xc0 \\\\F\\ryp\\x82L*\\xe3\\xf0D\\x07\\xad6\\xccg\\xc5s\\xea\\xcc\\xd5oW\\x15\\xdd\\xaa\\xc2\\xb6\\xcb\\x8dC\\x0bv\\xae(\\x0f\\xf2\\xc3\\x01\\x86\\xbcv\\xdbd6\\xcfEi\\xb2\\x7f/;f,\\xe4#\\xfa\\xbc\\xee\\x93\\xd1\\xcf\\x04\\xc6\\x13\\xa5E\\x1a\\xdft"_\\xc4\\xf9$\\xa6\\xcb\\x04m\\xeb\\x8a\\x0f&E\\xb3\\xc1\\x04\\x82\\x90\\xeeA%\\xc2\\x84\\x15\\xf8~\\xe3Yz\\xef8*\\x01\\xa7\\xa7\\x8dgJh\\x13B\\x1e\\xfck(#\\x08%~\\xe1Yf\\xccy2\\xfbS\\x15\\xf4\\xc4\\xb1\\xe3\\x94b\\xf6\\x07M\\x8c\\xdc\\xd3H\\xd89\\xea\\x9f\\xd9\\xce\\x9eC\\xe9.\\x06$\\x93\\x87@N\\xc4\\xfc]\\xe1\\xf3\\xedS\\xcc{\\xe8\\xb1m\\\\\\x87\\xfa\\xa5H\\nh\\x0b\\xa7h\\xa0\\x96\\x1e\\x82f\\r\\xa4\\xdf+pe\\xf9R\\x11\\xc9uB\\x82\\x1dh\\x17?y\\xce\\x9b")\\xe2sr\\xcdw\\xa3\\xa8\\xc8YHf@w\\xc9.\\xae\\xfa\\rs\\xaa\\x13\\xe3\\x8f\\x92\\x9aC\\xa4\\x84\\xb8\\x03c\\x06$k\\xf1`Lw\\xc9\\xd7\\xcb\\xbb\\xca\\x9a\\xc5c\\xae\\xb6\\n\\xed\\x1f1\\x88\\xa1\\x98\\xaa<\\xf0\\xc8\\\'\\xf5\\x02H\\x94\\x1evT\\x81\\x04%\\x08\\x0bWUh\\xa7~bV[\\x82\\x1bR\\r\\x05\\xebdl\\x06\\xad\\x86\\x0c;\\xfes_E\\x9c\\x814\\xa5(vR\\xbf\\xe8\\x06"u\\xb9\\x9f\\x16c\\x96~\\x1a\\x17!~uT\\x17\\xa6l\\xb1\\xf6\\x19\\x8b\\xbaw\\xf1\\x81\\xd0\\x87\\xbb\\xc56\\x15\\xb8\\\'\\xe0V\\x14\\xbc\\xcf\\x9a\\xe5\\xc6\\x01\\x8fL;4\\xe2\\x7f\\x9aFk\\x9a)wg\\xe3XC\\xfb\\x11\\xd2m\\xcelz*\\xe1\\xa7O[s\\x0fk\\xc9Q\\x92\\xcf\\xbe\\xff\\xbc*M\\x05\\xc1\\xec\\xa8\\x14\\xd4K\\x89\\x9aB\\xb4\\xc8_\\xd5\\xe1\\x92\\xb4\\x87\\x0c\\x99\\xc6\\x07\\x19\\x8d\\xeb\\xb8\\x7f\\x88t\\x88u\\xdf\\xeb\\xeb\\xae\\xf8\\xf9\\x03:3\\x847\\xfc\\x97\\xa9\\xca\\x80B\\x16&\\xd3\\xb2\\xb4m\\x1bR\\xbd\\xedX\\x11\\x81\\xa8\\xa2=\\xe4O7/^\\x9e\\x0bv\\xdfi_\\x9f\\xc9\\xea\\x00\\xcb\\xe7\\xd7\\xf2\\xf9\\x98S\\xdbA\\xdd\\xab\\x9a\\xf6\\xa0\\xd9\\x8cS\\xb8E\\xb6"\\x083\\xa84_\\xda\\x80\\xec\\xed_^I\\x1b|x\\x02\\xe8_o\\xcf\\xae\\x97\\x83\\xa5\\xeeI\\xe0\\xf3@\\xbd\\xe7\\x03Ahe9;\\xfb\\xd2\\n\\xa8\\x9e\\xa3\\x1aK\\xdc\\xbf\\x05$\\x97\\xcf\\xb6^\\xba\\x9d"\\xb4\\xfd\\xc4\\x1b\\n\\xee\\xedu\\xf1.\\x05\\x7f\\x01\\xb7\\x99\\xcc)\\x1f\\x90\\xf6X\\x84^\\x8b\\xf9\\xd71\\xbb\\xe2\\x9a\\x9b)v.\\x8c&\\xa1\\xf2\\x84\\x18t\\xb3\\x98\\x88\\xa4\\x1eW\\x92\\x8b ?\\xe7RB&K\\xf7\\xe1\\xb4a\\xd9t2PA\\x9cbkRM\\xaaW\\x96\\xb3\\xa0\\x1ef\\x10DW\\xa4\\xabWMXv\\x1al\\xb7\\xf4>Ff\\x1c\\xad\\xce@\\xd3[\\xf10\\x85a\\x91\\x8e\\x944\\x08\\\'\\xbcr\\xf8\\xc2\\xd0\\x0f\\x8c\\x8f\\\\\\xe5\\xa7\\x9f\\x99\\x8b\\x8f/\\xe4\\xf3\\xdf\\x1c\\x11K\\xf7w\\xd6\\x16\\x06\\x14\\r\\x0e\\xe8\\x91\\x8b6$\\xe2\\xe6\\x97\\xd5\\x9f\\xcd\\xa2\\x01\\x9d$[\\x85P\\xa1\\xba\\xd4\\x14\\xca\\xe1?\\xbd\\x04\\xc8\\xff\\x14\\xa1\\xf0Y\\x94\\xd0\\xae\\xca\\x88\\x9a\\xbbbVQ\\xaa\\x7fo4\\x9d\\xc2N\\xc7"\\x7f\\xbd\\x13x\\xd0\\xff\\xbc2\\xd8L\\xeb;\\xf7\\xaeZ\\xee@\\xd1\\x92l\\x96\\x82\\xf3\\x81\\xe7\\xe2c\\xa7e\\x858\\x98M\\xbc\\x91\\x9bA>;\\x17u>G\\x18n\\xb2}r\\x8a6o/%\\x9cc\\r\\xe9\\x01e\\x85\\x95\\x1c\\xb2\\x17\\xd4V\\x91\\xda\\xda\\x8c\\xf3A\\x96D\\xc7,[\\xe5\\xf6\\xa7_D3+\\xa0\\xf0\\x00\\xce\\xe4\\xf7\\xa7\\x1d\\xa3/\\x03\\x1c\\xcf\\x1fF\\xb8\\x88\\xe6\\x92im\\x88\\x94\\x8b\\x97L>\\x00\\xfaM\\x90\\x8d@\\x9e\\xcf1Fy\\x15\\xb3T\\xbc\\x98\\xebi\\x11\\xd7p\\xbf\\x86*(\\x0b\\xba\\x04\\x04\\xdc\\xb7J\\x05m\\x85\\x93\\\'\\xdf-\\xbf\\xd8\\x88T\\xaa\\xf8\\x10\\xda\\xde`\\xfbs\\x14J\\xbd\\x1c\\x87\\x82}\\xe9t\\x9e\\xfb~\\xca\\x17\\xdb\\x94d\\\\\\x9a9\\x1a\\xfa\\xfbe\\xf0\\x08t\\x8bl\\xc7\\xf7\\xa4\\xb37\\x15\\xda\\xb4\\xee\\xb2e\\x87}\\xa2L\\x81\\xe4\\xe5V\\x9a<\\xa7\\xf0\\xf2\\x8b7\\xea\\xed\\x89\\x84\\x12\\xb2W\\xe8SP\\xda\\xe6\\xbd\\xf5\\x8c8\\xaa\\xef\\xc1\\x0b=\\x86\\x83\\x00\\x98\\xfc\\xa0}?E\\xa2\\xf9D+\\xc1$<\\xb1\\x00\\xb1\\xc0\\xdb\\x91]c\\xc1\\xa1v\\xc3V~\\x16;\\xa3\\xd3\\xda:\\x8e\\x0c\\xe7NN\\x8c\\xfaQ\\xcd\\x8b\\x00No\\xdc\\x95\\xd6is\\xc3\\x1b\\xf0\\x80y\\x83r\\r\\xc7n\\xb5\\xad~\\xbc\\x9e\\xf9K\\xe5\\xc3\\x06\\xba\\xc4\\xe8@\\xa2\\xc7{Z\\x1e\\xb8\\xb9\\xe3~\\xb8$\\xca\\x85\\xb4\\xde\\xddxUC\\x81\\xef\\xa0\\xfeq\\x8b\\xe9(\\xbf\\x05\\x8bLA\\xa7\\xaco\\xcdXr\\xfd\\x15\\x95\\x12\\xa4z\\xcb\\x9d\\xf3\\xf2\\x12\\x04#\\xb3f=\\xb7\\x874\\xbb\\x02\\x05:\\xb8C\\xf1\\xb8L\\xd9\\xfb$\\xd32\\x07\\xad\\xc8\\xec2\\xd8\\xe1C\\x10!erq\\xd7\\xbd\\xefT\\xb8\\xef\\x12S\\xc8\\xc7\\x88\\xe3\\xd4\\xe8[\\xcc47+\\x88446!irhI\\x9a\\x9e$\\xe5\\x8d\\xcc\\x97)\\x1b\\xba\\xc9~\\xbf\\xa8G1\\xc9\\x0f\\x94\\xe7R\\xf9p;\\x85\\xb9\\xcfK?\\xe3\\xfd\\xcc|\\xc8\\xa1\\xd8\\xd0\\x8a\\x98Q\\xca\\xef\\xfc\\xf9bg?\\xcb\\xe5\\xc4f \\x1b\\xea\\xbf\\x91\\x16\\xdd\\xb6\\x021\\xd1u\\\\D\\x16.b\\xc2N\\xdb\\x8f\\x90\\x87\\x08\\xa9\\xc4\\xbd/\\xc7]O\\x02\\xfd}\\x93\\x95\\xbblwA\\xbe\\xc1\\x8bN\\x92\\x1fw\\xfd~t\\x02\\x17\\xdd\\x18D\\t&\\xc6\\x1cQ\\x13\\xa6\\xa2\\xc4\\xc6\\xf1\\xec\\xc1\\t/\\xd7\\xd1NS\\xd4Z\\xac\\xf5\\x15/\\x9b\\xb8\\\'\\x99\\x18\\xcb\\xb6\\xec\\xda/\\xb3\\xa0b\\x186\\xf8\\xb9pv\\xb9!`\\xc0\\xdc\\x7f\\x1c\\xb0\\xdc\\xa0S\\xf0\\xa1J\\x98+\\x114u\\xda\\xb7)\\xfd\\xf1e- \\xefi\\xc1\\xfe<\\x89\\xe8\\xe6k\\xfb\\xb1\\x92\\x1d)\\xcd\\xdcbv\\xea\\x99\\xda\\xe3w\\x89\\xf9\\x8e\\x1cC\\xc60\\xc8\\xdb\\x1d\\x95K\\x0bZ\\xeac\\xb7\\\'\\x8e\\xc8\\xa9\\x8a\\x1eI9-\\xffI}\\xde.\\xfb/\\xfcP\\xe1\\xc7\\xce\\xf1(\\xceP\\xa41\\xc0\\xe3\\x89c\\xfe\\x06\\x0f\\xa3\\xd9\\xd3\\xa0\\x15\\xa5\\xa0\\xf4\\xf1\\x8c\\x83\\xca\\x04\\x1bn\\xed\\xe2C\\xf2\\xcc\\xfa\\xd9\\xc4\\xf7s\\xb0\\xc9?F\\xebG\\x86\\xda\\xc4\\xb4\\xa4i\\xfc7\\xacwp\\xf4wdK\\xb4E\\x05DZ\\xf6\\xb73\\x05k\\xb9n\\x84k0\\x0f,!\\xd0\\xa3)\\x905F\\xa5\\xcb\\x8e0\\xf2\\x03Y\\x94\\xc0\\n\\x9c\\xd7\\x8b\\x10\\x93\\x07\\t\\n$\\x97\\xae\\x91\\x8c\\xb1\\x90\\\\\\x0b\\x96\\x1f\\xdd\\x1e\\xa0\\x10\\x14\\xf6@_$kZ\\x06\\x0b\\xfcdi\\x1b\\xe4I\\xd9u.&\\xdd\\xbfa B(\\xa8\\xde\\xeebx\\xdf\\xf6\\xa4\\xbbL\\x02\\x93\\x99\\x08n\\xcc\\x06\\r\\x18\\xe1JDsE\\xd3{\\xa8!\\xd8\\x15QG0}V\\xeb\\xb6W\\x81Ee\\x8eW_\\xc1\\x1f0\\x8dx\\xe4Y\\xd3\\x1f=\\xe9,\\x99\\x93\\xcf\\xfaK\\x97\\xb8+\\x0f\\xd5\\x01H\\x02\\xd6X\\xfa6\\xc3\\xc9f\\xfd\\xcf\\xdan\\xf2_\\xe0\\xf1\\x86\\x97\\xab<tt\\x06\\xc9\\xa1dA!\\xdcQ\\x88\\xb1\\xdd7+\\xe8\\xf3\\x9b\\x88\\xa5rf[|#\\xf4\\xea\\xc4]A\\xed\\xefi\\x00i\\xfb\\x8e&%\\xeb\\xd0d\\xc7\\xc3`C\\xaa\\xb4\\x9a\\xe5-\\xc3,\\xdb\\xcb\\x93^\\xf5\\x06\\x853\\xcf\\xe3\\xb5\\x8f/6wc\\xe9j?\\x9a\\x04\\xce\\xb6\\x01\\xbf\\xc7[\\xe7\\xe1\\x9c\\x99\\x9b+zp2-a{V<\\x89\\xb6\\xd7\\xe4\\x0b\\x19>\\xc4\\xf7\\x82\\xb08\\xd5e\\x90\\xc9\\xe5sQq\\xf4\\xa9\\x90~T\\xe2\\xee]\\x99\\r \\xe5\\xe1\\xc1\\xfc\\xe6\\x17\\xc84o%A\\x83\\xee\\xab[\\xdf\\x1a\\x14]\\xa4>\\xa0\\\'\\xe4\\x11\\xf1\\xf4TU?r\\x1dE?K\\x9e\\xd2\\xf1z\\xc9\\xb1?Xd\\xf7\\xf8q\\x15a-O\\x1aS\\x05v\\x8d\\x9aN4\\x8f\\xaa_\\x14t\\xc6\\x15\\xff\\xaa#|i\\xd7\\x11\\x942\\xae\\xe5\\xafm\\xee\\xb9\\xba\\xcc)\\x87\\x1a_?\\xb3o\\xbbr\\xc4r4s\\x87\\xa8\\xde\\xd6n\\xa5\\xbe*\\xdf\\xba\\x13C\\xdb\\xf2\\x01&\\x808\\xe0\\xc7C9~DJ\\xa3]\\x8b\\xe9&\\xf8\\x9c\\xa0\\xf6\\xc5\\x1b\\xf2\\x88O\\xd6\\xbb\\xc1\\x98\\n\\xa0\\xee\\xf82\\xff\\x1d\\xa9\\x0e\\xb2 =\\xa1Zw\\xcd\\xb2\\xe4\\x9d\\x10o\\xd9\\xed\\xf4\\x04\\x00m\\xc5y\\xc2\\x824\\x88\\xaf\\xf0\\xc7\\x07\\xf7\\r\\x07\\x14\\x92%~\\xd4\\xd6\\x14\\xc0\\x81\\x88\\xe8\\x83<\\xfcga\\xcb\\xd8^h\\xa5\\x04\\xa7\\xd0\\xc34h\\x0e\\x88:\\x1e4\\xda\\xfe8\\x8d/\\x13\\xf0\\x03f\\x10\\xdd\\x18\\xab\\xa5\\xe9j\\xea\\xadS\\xf2\\xa3\\x13|G\\xb6\\x1c\\x85\\x97X+\\xeap\\xa9\\xbe\\x8b\\xfc\\xec\\x02\\xa9\\xcb\\x87\\xa3\\x8d\\x02\\x87i\\x00uM#\\xa8\\xc9\\xa88\\x90\\xe3\\x15Z\\xc3\\xab\\x05\\x19\\xa7\\x88h\\x14|\\xc1\\xde\\x85\\xa9\\x13\\xd6!\\xa4!\\xe1M\\xa7\\xf6\\x02\\x9d\\x96r\\x1c\\xb1b\\x95\\xcb\\xd2\\x02\\x83\\xfa\\xb9\\xe5G\\xb8\\x8f\\x86\\x8dy,!\\x91\\xd5\\x87\\x8c\\xd2\\xa3:\\xf3w^\\xf5\\xfb\\xf4\\xd2>\\x89p\\xf9\\x16\\x1f\\x13\\x9d\\r%\\xa5\\x13\\x96\\xd7M\\x9c\\x96\\xb3b-\\xe3K\\xec\\xe1\\xe7\\r\\x1b\\x15\\x1d\\n_\\xd3\\xe0\\xdchj%\\xea\\x98\\x1b\\xae\\x96\\x14L+\\xd0\\xfd\\x0f\\xa2~\\x98o\\x9d-\\xaaU\\xf1/Kg\\n\\x0b\\x9b\\xc8\\xf5ii\\xa0n\\xbex\\x1a\\xed/W\\xbd6[\\x16\\xda\\xfbm|6\\xae\\xd3c\\x8b\\xde\\xdf\\x9c\\x0e\\xf7\\x89\\x82\\x99\\xf6\\xde\\x11\\x953KSU\\xbb+Brr0\\xa7YC]\\xce\\xf2\\xcc\\xf8\\xdd|\\x03\\x92\\x980\\xd6(\\x97\\x13\\x8f\\x83^\\xb9\\x94\\t\\xf3R3Y\\xb9\\x1a\\x9a#Ry\\xaa{.\\xfc\\x91\\x8c\\xf6\\xe30b\\xd4c0K\\\\\\xa4\\xfd%:I\\xd1qR@?.\\x86eJ\\xb8\\xf4\\x198\\xc4\\x0f\\xa5\\xa7qx\\x15G\\x1fR\\xa6\\xa6_`{g90U\\x12\\xf3\\x8a\\xf5!h\\x06\\\'\\xd9\\x04&\\xa4\\x8b\\xac\\xdc\\t\\xc5\\xe8\\xab\\xe9\\xc2ym\\xe7\\xfa\\xe20<\\xdd\\xf6\\x93?\\xde\\xcb\\xb1\\xf3\\xed\\xf1\\xe2\\x85O5\\x1f_3\\x9a\\x16\\x8cR\\xbc\\x98r\\x8f\\xa6\\x17\\xca\\xc8\\x8a\\x8c\\xe9\\xb9\\x89t\\x8d\\x84\\x0cJ\\xcd\\t\\x05\\x17\\x05\\x87\\x8bBG#Z\\x8d\\x9c)d#B\\x87\\xec\\xa9\\x92,\\xae\\xf8B\\x96S\\xa3\\t\\x93|\\x06:\\xc3`\\x15\\x92P\\x80x\\xa2\\\'\\x82]\\n\\x1c7u\\x8e\\xbdE\\x12"U\\x03h\\x94u`\\xb3\\x8c/d\\xcf\\xfae6\\xa4\\x0c}\\xd7\\x95\\xa8\\x0e\\xd9\\xbeg\\x15\\xa84\\x15\\x00\\x99\\x9b\\x01%\\xc2\\xca\\x0f\\x10\\x13{<\\xfep\\xea\\xabG\\x93\\xff\\x1d\\x87@\\x05\\x93\\xbd\\x1bR\\xc8"b\\x07\\xce\\xb8\\xfc\\xca\\xde\\xfd\\xd1\\xf3\\xdd\\xcf\\xca\\xba\\x8d.\\xc3$_\\x05\\x168\\\'\\xd0\\xa6\\xdc\\x8f\\x93!@\\xc6\\xd5\\xe2\\xd9\\x06\\x1e\\xc7\\xce\\xaa\\x96\\xb8\\x98X`\\x99\\xc2\\xafG\\x8f\\tV\\xf0\\xc7\\xb2J<\\x1a\\x03\\xb6\\xd1m\\xbd\\x9dN=\\xa6\\xb9\\x15\\x04i\\xe1\\xdb\\xd5-\\x82\\xc0C ~vt\\x83kS\\x13\\xcf\\x012*\\xfb\\x86c\\xea\\x13\\x0f\\xba\\x84\\x13C\\xd2`\\\'\\xd5\\xdd*\\xaa>\\xbb"\\xd2\\xd5&\\xf8}\\xbf\\xcb\\x023\\xe6TyO\\x8b\\x06\\x12\\xff\\xaf\\xd3\\xc4\\xc7&Tq\\xfe\\x0f\\xc9\\x86\\x12\\x12_]YV\\xa1`\\x0b\\x91\\xe6\\x8bT\\x9f\\xf4\\x05\\xbd\\x02^F\\xbf\\xa8\\xe4\\xd3\\xc9\\x8bk:%\\xda\\xe6A$\\x07m\\x93Oa\\t\\xff\\xb2m\\xadED\\xa6U\\x84\\xbf8y\\x94&T#\\xae\\x1d\\xd2\\x96E&!S\\xd3\\xe5>/\\xd1~i_\\x99\\x85\\x98;\\\\\\x18\\xac=\\x8a8\\xcb\\xd8f\\xa1\\x17\\x99\\xac\\x9f\\xd7XU\\xd2\\x18\\x12\\xbe\\xc2\\x89.Z>\\r4i\\x97\\xab\\xf0\\xf0\\xf4k\\xe5\\xc1\\x1bvul,\\xf0An\\x13\\xe6<\\xab\\xc5{\\xa5\\xd0\\xa7\\x05?+\\x99\\x0bd\\x93\\xc7\\xd6Lo\\x1chV(~\\xa7\\xe1\\x99F&\\xce0\\x95\\xecR=\\x92\\xc1\\xd8}\\x8f\\xe6\\xc2\\xd4k\\xc1\\xf5\\x0b\\xffx!\\xbfO\\x13k|\\x8d\\xbd\\x1cO\\xd0\\xa4\\xd0\\xa8\\xcd\\xdf\\x0f\\rW|\\xdb\\xf0\\xf9r\\xa74\\x80\\x84m\\x16\\x87\\xcc\\x01\\x0eR\\xbct\\xfbc\\xf8\\xb6\\x94\\x1c\\xcf\\xccs\\xdf\\xf3\\xf8\\x08\\x9b\\xf7UW\\xb1\\xbe\\x19\\x1a:kP\\xf4\\x87!x\\x0bH\\x9d\\x91\\x88V\\x88\\x14\\x8c\\x82M\\xef\\xae\\xaa}\\xd9\\xa5\\x10\\x0c\\xa9\\x82a\\xf8\\xd1R\\x16\\xe9\\xec\\xac\\xee\\xf0\\xcd}\\xe5\\xc2\\xafJ\\x88|-\\xa6\\xf3m\\xc1A\\x8dRx\\xec+9\\xc59\\x1fixr\\xf8\\xf8\\x8c=<\\xb5\\xf4(\\x08r\\x13\\x1e\\xdfC\\xafFZJ}o\\xfa\\xb5\\x92\\xf9\\xe9\\xc2TFU\\xbf\\nk\\xba\\x8c\\xf8\\x82\\xb4\\x0e\\x14\\xb0\\x9a\\x89H\\x06A\\xc3a\\x7f\\x81\\x82\\xfa\\x81\\x7f\\xf9rWH\\x15zY\\xf2S\\x88\\xf6>?\\xf4\\xc1\\xf5\\x00=3q\\x8eEU\\x8e\\x8f\\x80@\\xea\\xcd3\\x11\\x9du\\x88\\xfd6\\xec\\xd8>\\xc5g\\xac>o\\x8d\\x01\\x85\\x85\\xec*:\\x03\\xd2 4Vd\\xc6\\t{\\xbfJ\\x1e\\x13``\\x16\\xde\\x90\\x86\\xe3\\xa3\\x99A35Q\\x84\\xe56F\\xc1|\\xd5M8\\xc97\\x8bin\\xd2\\xb6,\\x82\\x00l\\xca\\x882\\xfeI\\xcb\\x95\\t%\\xf0=Mh\\x92\\xb3\\xed\\xd7\\x8d\\xb9\\xec\\xbeS\\xd5KH\\xea\\\\\\xd6\\x04\\xe7\\xed\\x00\\x0e\\xc2\\xf2\\xa1t\\xf9+\\x89J\\xa3\\x8a\\x87o\\xbf\\xca\\xa5J\\x92!\\xb6<E\\xbc$\\t\\x88BA\\xf9iy\\x9a\\xfb\\xe6\\xd5\\x8fp\\xbc\\xbab\\xce\\xc2-\\xea\\x9aP<+\\xad\\xcc\\xed\\x10\\xf9\\r\\xa1\\x86~[(%\\xf9\\xe8E\\xe2\\xb2J\\x1b\\xfb\\x8e\\xe9\\x1b\\x9fg\\x8d\\xa3wOIi_y\\xf4\\x9e\\xca\\x9bO=J\\xf3<C\\xaf\\x92\\xa8\\x83\\x06\\xcc\\xfc\\rWJn\\xf9\\xb41^RG\\x8eJ\\x14\\xc6D0#\\xa7\\x87\\xb0m\\x8a\\x8d\\xb6\\xf3i#\\xa3\\x1a\\xf3\\xf7N\\x0c\\xd4\\x8c\\xca\\x89\\xe2\\x85\\xeb\\xce<\\x16b\\x9b8\\xb4\\x98R[\\xce\\xa2O\\xa4\\x92\\xdf\\x9b\\xec\\x14)\\xf7\\xcc\\x98\\xeb\\xb3\\x98\\xa4\\xae\\x8f\\xee\\xaf\\xfb\\x03\\x8ee#\\xfd+\\xd0\\x10!\\x11o\\r\\xbe\\xc6Es\\\' X\\xcf\\x99\\xf4\\xe1R\\xb9\\x08\\tJ\\x19\\xca\\x7fYu\\xaf\\xf1\\xf8y\\xeb]<\\x92B\\x97g{CH\\x13\\x81IZj\\xbb\\x86\\x84d^d$,~\\xa0\\x9f\\x01\\x15\\tu\\xac\\x158\\rQ\\xaa\\xc0\\x0b\\xe4\\xe55{\\xec\\xfciS\\xd23rJC\\ts\\x8am`\\xd9b\\xf0\\x9c"r\\x85\\xc2\\x8b\\xdb\\xac\\xbfd\\xc4Xo;\\xc9>x_r\\xb9\\xe0=\\xd4\\xb3O\\xe3\\xe2P\\xee[\\xb0-\\xd5\\xa9tM&\\xf3\\xe3\\xfd&\\xce\\x9a\\xacM\\x14s}\\xc3\\x9c\\xa7\\xb5\\x03\\xb8E>r$\\xca\\xad\\xbd\\xcc\\x1e\\t\\xbb5\\xebZ\\xa6\\x9c\\x16w\\xde\\x08\\xd6i\\x8f\\x1aA2Ty>[\\x96\\xa8|\\xd6`\\xbf\\xc8\\xeb\\xc4\\xf7\\x15\\\\\\x8f\\xb5\\x03\\xf1^\\x7f\\x95\\xc2y\\xbb\\xfb\\xeed\\xb4P[\\xa8T\\xc2v\\xef\\xaeC\\xaa*\\xbbz_E`\\x87\\xb2G\\x85\\xb1oSN7\\xa9\\xf2\\xab\\x90;\\x076K\\x85;\\xef\\xe0\\xe5\\xb4\\xc2\\xe7(\\\\\\xc8}X2_Z\\x9e\\x04\\x93_\\x92_X\\xc7$|\\xf1\\x9e\\x8d\\xef\\xa5\\x8a\\x8d\\x97\\xa6\\x9c\\xdb\\x9c4,\\xb5\\x1c\\xee,q\\xedR\\x0f>\\x89\\xc5\\xed$F8\\x83F\\xbc\\x9a\\xc7\\x8bNF\\xb6U4\\xfcS\\xe8\\x0e|\\x7f\\x84\\x8b\\x16(\\x96U\\\\!\\xcf\\\\\\xda[\\x8c\\xaf\\x85\\x84\\\\p\\xc7\\xda\\x8a\\x18\\xfa\\xb1\\x9ce7\\xa6\\x17\\xa2>XR\\xc2/\\xd9\\x96Z\\xc9\\x19\\x12\\x9d\\x06\\x8aj\\xa7n\\nN\\xc5\\x83&\\xaa\\x9ad\\xb8\\xa1\\x04.\\xcan\\xf3szX\\x07*l\\xa7J\\xe6t\\xb0w\\x83\\x02\\x8b\\x95?\\xa38\\x97\\x0e\\xfau\\x7f\\xd6\\xe5\\x9e\\xb5\\x81WpA\\x8c\\x00\\xde\\xb7\\x7f\\x99PL>\\xccz\\xb5\\xaf\\xa8\\xcf\\xcbU\\x90\\x98\\xa4\\xa5\\x06\\x0b\\xfa\\xd5\\xc8\\xeb\\xafx\\xc3\\\'\\x83_N\\x88Q\\xc9\\xbf\\x1c\\xdd+Hk\\x1c\\xd8aa\\xb3.AqX\\x99!\\x9c\\xeb2\\xbc>\\x01\\xf0\\xb8\\x04\\xed\\xefF\\xc9R\\x9a\\x9a,\\xdf\\x95]W503\\xe0*\\x8e\\xa5n\\xa9\\xcf}\\x8b[\\x86L\\xbb8\\x1e\\xd5!@\\xa3\\x8b\\xa6\\x11\\xe6G\\xcdH9F~\\x15\\xd8v{\\x9eo\\x1f\\x99\\xf5\\xb7\\x0f\\xf1\\xe1|\\xd6\\x8a\\x96\\\'\\x85=\\xd5lJ\\n\\x1f\\xd3\\nC)\\xe8\\xccFL\\xddt\\xa49\\xe6A\\x97-\\xc5\\xb2\\xff\\xcc\\xe4 h\\x92\\xefU\\x95x&P\\x03\\x07E\\x81\\x10\\x88\\x94\\x9d8\\x89\\xdf\\xc7Bp\\x9dK\\xe9\\xe4\\xad\\xe9\\xae\\x07\\x8cn\\x835\\xe8\\x11\\xef\\xf4\\xb3\\x00\\x0fS%I\\xcb\\xf4PY\\xccv\\x0c\\xd3+\\x96V&\\xca\\xd0\\xf6v1P\\\\\\x99/~\\tR\\xf1o\\xed\\x8c\\x10\\x01\\x93\\x85\\xb8\\x96\\xed\\xac\\xb5L\\xf8W\\x88\\xc1\\\'\\xbe\\x03Q\\xad/\\xfaC\\xf8f\\xcaG\\x11\\xb7\\xc6o\\xc3t\\xb9\\x94\\xe9\\xae\\x97\\xa9\\xa8\\x8f\\xfc\\x0c\\xc7\\x9b\\xa9=\\xf3\\xb2u\\xb8p`\\xb0/\\x9b9R\\xdf\\xfc&[\\x97\\xe2kL\\x1a`\\x19\\x93e\\xfc\\n\\x96F.%\\x1e\\xa2\\x16\\xc4Mw\\xfd\\xa6\\xb6\\x8b\\x8b\\xde\\xea\\xac\\x87Kz\\xde\\x96\\x8cB\\xc8_\\xf8\\x9d.\\xb0\\xa5\\xab*\\x1c\\x83\\x9c\\x0cQYD\\xccY e\\xbc,x-]\\x80\\xfe\\x0c/6\\xa4\\r\\xf4\\xce\\xb1\\x9c\\xa7\\x90\\x81\\xbd70\\x16\\xb5\\x93\\xd9\\x19\\xb4\\xce\\x16\\xb79\\x98\\xa8\\x13|\\xa2f\\xb9rvvc\\x8dT\\x81o#@\\x1d\\xfa\\x14\\xbdu\\xa0j\\xe6\\xe1:\\xe9\\xeb\\xc6e\\xabOS\\xdd\\x91\\x80M\\xe0D\\x08+\\x97\\x05\\x93\\xef\\x137OP\\xc8\\xd7w\\xe3.N\\xfdKz\\xfbWs\\xecPp|\\xb1)A\\x08LbG\\xa0\\x9f\\xa3\\x92\\xb2\\xc6\\xd4Q\\x0c\\xe3\\x10\\xc4\\x98\\xfb\\\'\\xf4\\xd1_f!\\x98;Ad\\xd4\\x92\\x97\\x81\\x1c\\xf2r|\\xd0\\xdf\\x9eo\\xf5\\xb6\\xa3Hc{\\xec\\xf5E;\\x98r0phw\\xdem\\x0bh\\xbc\\xdam\\xcc\\x0e\\x92\\xd3\\xe6g9\\xba\\xa8\\x81\\x9b\\xc8\\xefAL\\x07\\xdb\\xf1V\\xfb\\x08,\\xfc\\x9a\\xc2H\\xc5\\xea\\xf4\\x830i]\\xdc\\xd7\\xe9-\\xdaZ\\xa5\\xa5\\xde\\xf41-\\xe4\\xca\\xb0\\xd6\\xeeu\\x81H\\xc4\\xd2\\xec\\xa7\\xe2RE\\\'\\xb0&V\\xcaF~T\\xf4\\xbf\\x05\\xbd\\x96\\xc5a\\xb4W\\x1fl\\x18\\x02\\xa1H\\r\\xa2\\x8a\\xd6\\xf3\\x7fU|\\xfc\\x11\\xc6c\\xb0\\x04\\x1dK7\\xd04\\x18\\x91lp\\xfb\\xe4\\x98\\xee\\xa5}\\x0c\\xde-\\xfc\\xe0\\xc9@T3\\xf7q\\t\\xad{S\\x11\\xc3\\x00\\x8c\\xb0\\xd26\\xce\\xd0\\xa1T\\xc8\\x1c\\x02\\x88\\x076\\xe1\\xe7\\xf8h\\x9d\\xbe\\xb8\\x92\\xe0%\\xc5\\xfe\\x86\\xba\\xef+\\x1e\\xc7\\xcf\\xbf\\xda\\xf7\\\'\\xc1U\\xde\\x7f\\xb82\\xb8t\\xa1\\xbbZ>\\x9e\\xb4\\x1d\\x10\\x80\\xb19T])\\xdf\\xdf\\xf8d\\xd8\\x15V\\xbd\\xe4\\xbf\\x00\\xe3\\xab\\xd8\\xe1g\\xa8G\\x07\\xec\\xf6U\\x168\\x9bCY\\x8e\\\'I\\x19&\\xca\\xc7\\x15[\\x1dI\\x00\\x124)SXTT\\x97\\x17)\\x07Z\\xf9N\\x9f\\x0f1A\\xd9k\\xefn\\x14=\\xea!{\\xb4=\\x14\\xc7\\xae\\xddF\\xc4\\x1f\\xc3\\xd0-\\xe6=\\xbdJ\\xac$\\xe1o\\x98\\xb2N\\x9em\\x0eSP\\xf7\\xf6\\x99m\\x7f\\xcf\\xb8\\\\\\xb9\\xda\\xda\\x8d\\x0f\\xc9u0\\x0c\\x07\\x9eM\\x9d\\x9d\\xf8\\x03&\\x0b\\xe4\\xca"\\xb5\\x03\\x7f/\\x89r\\xd4"\\x1a\\x8f\\x1f\\xc1\\xea{\\x05\\xa7Ym\\xd7\\xc4\\xe2\\x1e\\xb3\\x9eaDw\\x87\\x1e;\\x17\\xde\\x11\\xfa]\\xf0\\xbah\\xca\\xf3\\x1a\\xa9\\xd0\\xb8\\xa7kym\\x8f\\xc0d\\x7f=\\x97IY\\x87@b\\x0e\\xfc\\x9eX\\xe6\\x99I\\xdeH\\x18\\xfc\\x99!:\\xfb\\x08W\\xaa0x\\tb\\xd7\\xc3\\xcf\\xe5.\\xc2"l\\x12\\xc2W\\xb1\\x05\\x1a\\xeb)\\xfd\\xfc\\x9c\\x93g\\xe9\\x15\\x1c*\\xc7o@6\\x03b\\x8a\\xfb\\x84\\x99\\x92\\xb4m5\\xcc\\xde\\x1a\\xed\\xf2U\\x83,(z\\x1c\\x90(\\x95-?\\xfc\\xca\\xb2\\xbe\\x15A\\x83\\xb7\\x8e=\\xbcf4>\\xc6\\xc7\\x00\\x990\\xcc\\x1d\\x11\\xe7\\xd0U\\x13\\xa9\\x8a\\xa4\\xfbk\\xc1\\xd0\\x9e!\\x03\\xbc\\x81E\\x8f\\x14jv\\x10]VZ\\xec1[\\x84\\x8c\\xbazBY?\\xa4|\\xfb\\xc2c\\xf6 \\x80~*b+-\\xf4\\x0eBOs\\xe38\\xb5\\xd3\\xcd\\x16\\x05\\xcf\\xc82\\x8c\\xae\\xab/\\xa8DC\\xf1\\xb4\\xfdR\\x0fi\\xb6\\xd8!\\x13(\\xa1\\x9f\\x1e6T\\xde\\x02\\x95\\x19\\x9eb\\xfa\\xb1\\x86\\xa2\\x88\\xe7s\\x80\\xf1L+\\x8d$\\xa9pJ"\\xb6-L\\x10\\x86\\xb4Hu\\x08G\\x8a\\x8c\\x1c\\xb9\\x95\\xfa\\xccO\\x03\\xa7k\\x95\\xce\\xd4\\xfcXl\\x85-\\xb3\\xe0v)\\x85\\x06\\xe4T\\xb9\\xb0\\xb7\\x7fg8_\\xfb\\x96\\xa2\\xa6\\x8fCX\\xc8\\x91\\xd6R\\xe8\\xa6\\x10\\xdd\\x8b\\xaa9O\\\\\\x1aw\\xf0\\xbe8\\x9d\\x01\\xac>\\x1a\\xd1r\\x8f\\xe8\\xabL\\xfb\\x98aWt\\x07\\xa7\\x9c\\xb1\\xe6\\xc8.r.\\xf3|\\xc2\\xe64\\xaa/m\\xed\\xcf\\xbe\\xa6\\x92t\\xda%\\xad\\xfc\\xae\\xcbAM\\xc0$i6\\x08\\xa4lg\\xde\\x17\\xbc\\xfbI[}\\xb2mv~FB\\x0e\\xae :\\x95!\\xaf\\xee\\r\\xccL\\x0b\\x1d\\\'\\x8d\\xbe\\x1b\\xbd\\xdd\\xb2\\xca\\xebO\\xc8MS2\\x1c\\xa2\\x7f\\xff\\x9a\\xae\\x92\\xaf9\\x14\\xb48\\xde6N\\xa2z\\x1f\\x9c\\xad\\xef7\\xb34\\xe4\\xcb>j\\xec\\xa4\\xb1\\xd7\\xe2\\x82\\xc9r0\\x19\\xa7\\xd6\\x12\\x9c\\xe7\\xd2\\xdf/\\x81\\xf6\\xe1\\xe0}\\xbf(]\\x05\\x9b\\xada\\x9c\\x97jc\\x1f}R\\xbd}\\x9f\\xf2k\\xa4\\xc2\\xe93\\x99\\x19x\\x1c\\xde\\x84\\x11*\\xa6q\\xcbd\\xda\\x163P\\x93\\x98v\\x89\\x88\\x82\\xfa\\xcat\\xb3\\xed\\x02k\\xf0\\xf6\\x95\\xb9W\\x92\\x0b\\xe1\\xe5+\\xb5\\xe7\\xde7\\x14\\xc6\\xac\\x85MT?\\xe7j\\xf2\\xf5\\xe7\\tCJ\\xe1\\xc2\\xb9\\x1b\\x05+\\x1652<\\x9e\\xb3\\xe3\\x96,[?2\\xcc\\xc1v\\xc3B\\xa2G\\x980\\x1bs\\x1e\\x87\\xe8\\xef!\\xa1X\\xb8Qt\\xcad\\x9c&a\\xc3\\xc7\\xb6C\\xe8\\xe0\\xed\\xda0\\xd8\\x1f\\x0en?C\\x15-i\\xe6z\\x19%\\x9e\\xea\\x1f\\xa8\\x03/\\xdaI=\\xf6\\xf7dD\\x05\\x9a\\x1d\\xd1\\x8fv\\x7f<ais1\\x9c:\\xee\\xbb.\\xc7S\\xa8\\x1b\\x9f\\xf5hD\\xca\\xdc\\xaa\\xe6[pSZJaBH\\xd7\\x1c\\xd4A]\\x02\\xdf\\xf7/\\\\\\x0b\\xc3\\x18\\x8f\\xea\\x9a\\x1b\\xc6\\x9c\\x18)\\xc1d\\xcf\\x7f:\\xe3\\xc1\\x0f}4\\xb9#Z\\xd8\\x13q+t\\x9f\\x1c:\\xcd8\\xee\\x8a\\xb53\\x86\\x0c\\xcf^\\xef\\xff\\xba\\x8f\\x95\\xb2d<\\x88\\xe7\\xe58\\x1f\\xd8\\x04{\\xd5\\xf239\\xb1m\\x87Cc\\xa8oL\\xcc%\\xcb\\x92\\x15Wj\\xfd\\x9d\\xdf\\xfd\\xae%\\x1a\\xce\\x80\\xa8d\\x18]\\x00\\xae\\x87\\xc1\\x0f\\xd6I\\n\\x80\\xdd\\x98\\x0c\\x9e"\\xf3\\xba\\x9f\\xf7%\\x1b\\x0b\\xe2\\xbc\\xb0\\xbe\\xc3\\x88Y\\xf1\\xb6\\xf4x\\xcf\\xf8\\x8b\\x17m\\xeb\\xa7,,JR\\x8b\\x9c\\x8a@\\xea8\\x17\\xe2\\x94\\x05+X\\xf3\\xa2\\x03^\\x9fJ\\xa5!\\x81\\xf4\\xd3_>\\xe7\\xfc\\x8c\\x17\\x80\\xabJ\\\'B\\x08.\\x8b\\xa0\\xfez\\xec\\xdf\\x86\\x1aP\\x94\\x90\\xfe\\xd7\\xf4\\x8a\\x12\\xdf\\xadum\\xb0\\xb8\\xb3C\\xeaN\\xa5V\\xe0*=?[\\rNLn\\xdfg\\xd7\\xe5|F\\xce\\xe4\\xb0b\\xd9\\x9ej\\xc4Y\\x82\\xbf\\xb9$q\\xce\\xbci\\xcd\\xbb)\\x96\\xb5\\x18\\x97\\xd6\\xa9K0\\xdf\\xed\\xb0g@b\\x870\\x9b\\\\=\\x9c\\xfb\\x8a\\xdf\\xdf$\\xe2\\xaae\\xb9\\xc0\\xe4\\xdb\\x9c\\xab\\r+H\\xa6\\xe9|\\xc1^\\xc6jU\\x13\\x9a\\x17\\xff\\xad_M^R\\xa9i\\xfcz\\x8a\\xb8=P\\x1c\\x8f\\x85\\xfbb\\x91jq\\x9bK\\x02<\\xea\\xddz\\x1fQiQ\\x15\\xea\\xee\\xcdW\\x99M\\x05\\x0c\\xbevV#\\xd6\\x8e\\xb2\\xb0`l#\\x86x\\x87\\xaf<*\\x9d\\x14;B\\x0c\\xeej\\xda7\\x8c)\\xd1\\xed\\xddJ\\xe8k<\\xa6\\x10\\xe5pG\\xb2\\xa6\\xf4\\xfe\\x99sI\\x8b\\xae\\x8b;\\x88<7q&%\\xd4\\x15:+\\xe6\\x88\\xe4\\t;6\\xfc;ax(\\t\\xed\\xda\\x89\\xe0<\\xdd  $*\\xfb\\xf3\\xcb\\xb8\\xe9\\x88\\x81\\n\\xafF\\xba\\x17%`\\x9eC\\x83\\x93:!y\\x181\\x93\\x88\\xf7\\x1a\\xc2\\x04<\\x94\\xdb\\xe7\\xd1\\xfc\\x13Q-\\xbaH\\xf2$\\xf8J)\\x80\\xe1\\x82kl\\x1a"\\xa3\\x80\\\\\\xc3\\x8338\\xee\\x1bhv\\xb1\\x8c\\xf4]\\xacE\\x82{\\xf8u\\x17H\\x878\\x89\\x83\\xf7\\xdb*3}\\xfd\\t*\\x1f\\x01\\x1d\\xae\\xf3`(3 \\xc1+\\xf1\\xa0G\\xf2.24\\x96\\xb24\\xa6\\x8b\\xb7\\xbeS\\xfcg\\x1afA\\xd0dr>v\\\'#\\xff\\x1c\\xffuD$\\xdda|\\xb3i\\xfd\\x19g\\x996\\x9d\\xea$=\\x0e!\\xe1\\x8a\\xb7\\x1d\\x82Lk\\xfe\\x97TV\\x8a\\xf7\\xaax\\xb0\\n\\xca\\x95\\xf4\\xc4\\x88S\\xa2@\\xf3\\x8a\\xfcJMOV\\xfb\\x1e\\x11Q\\xcc\\xf8-\\xe6\\x8dWr?\\x02\\xe9\\xbd\\x91\\xed\\xca\\x0cD9L\\x98D\\x82\\xd2j\\x97\\xa3\\xce\\xa0\\x94\\xc2\\x1b9\\x9f\\x8b\\xb5\\x08\\x89w&\\xdc\\x15\\x13\\xec\\xd5\\xbc\\x04\\xdf\\xac\\xf5D\\xa18\\xb3+u\\x91\\xaf\\xa4i\\xfd\\x0c\\xe6\\xd0!+\\xb7\\x94\\x82lv\\x05HR\\xe2\\xee\\xd3\\xb7c\\xdb\\xdc\\xb73.\\xaey\\xb8\\x97kB\\xf8\\xd9\\xb9\\xfbk\\x1dl\\x967gfX\\\'\\xbf1\\x129\\x9d\\x86~\\x11*6\\x84\\xa4)\\x11\\xdc\\xbd\\xde\\x987\\xdeI\\xcdFB\\x97\\xdbtn\\xb1Uy\\x88\\xf0\\xf0\\xd9\\xc1C\\x00\\xcf\\xd0e\\xa5L\\x92\\x8c\\x8b\\xa9\\xed\\xb1!\\x15\\xb2\\x8f;]\\x13\\xcc\\xd37\\x94R\\x19\\x86\\xafk;X^\\xa8{\\x89{\\x88h\\xe8\\x16<\\x83\\xdf\\xe5E+\\x9d\\xdb\\xfc|\\x82\\xf2\\xc9\\t@U$\\xd1a0\\xdf\\xb1\\xef\\xf2L\\xbc\\xdek\\x8b\\xa2\\xaf\\xf2a\\xb6D\\xb46\\x04\\xb8\\xd1\\x11v\\xccR\\xf0\\x11c_\\xaaH\\x87\\x7f&)\\x90\\xfe\\xb2\\x13yNk3\\xae\\xf9\\x88_\\x99u\\xb4\\x82\\xfb\\xaa\\x98Cj\\xf3\\x8e\\x0b\\x062\\x80\\xf6\\xc7W\\xfdn\\x90sP\\xc4\\xed\\xa8\\xc9\\x90\\x82$\\xd6wp\\xf4\\xd1\\xe6\\xcdUb\\xd1x\\xcfH\\xba\\xebp\\xbe\\x8a\\\\\\x90\\\\\\xa7\\x00\\x8b\\xe8^T\\x7f\\xf3\\x0f\\xb2\\xc2:\\x03(\\xec\\x1cpK\\x02w\\xc5\\x02\\xca@MO\\x9a Eh\\xed]\\xfb44\\xfe\\x8b\\x85\\x96\\x92r\\xcd4\\xa6/\\xeeE\\xcb}c\\xe2\\xb3\\xd4f\\x8fSt\\x8e\\xc1\\xd2\\xfcn7\\xf1\\xbd\\x8d0l\\x99\\x11j\\tfv\\xd9\\xf4s\\xeal\\xc6\\xaa?\\xb8\\xb8\\xdf\\xba\\xe2L\\xab\\xdd\\xa5\\x91\\xf54z\\xa9\\x87\\x03RT\\x88\\xd6\\xd8^\\x10n\\xe7\\xba\\x9d^\\x99\\x97\\xb7ix0\\xd5IR\\xb7\\xc3z\\x16\\xbf_\\x89\\x81\\xf0&\\x13d\\xd4Th|a\\x81\\xc2\\xc7\\xa3\\xbdhkW\\xaa\\x98\\xf0S%&\\xdb\\x9cF\\xc7/\\\\\\x12J;m\\xd5E\\xb2@Q\\xbf\\x9d\\x04\\xc3\\xf8Z8GR\\xa9\\xd6s\\xf5f\\xc2\\xe0\\xeb\\xa7\\xbeK\\xdf\\x10"v\\xd7\\xb4\\xd8\\xd3O\\xf2\\xc5\\xad\\\\\\x9a\\x1c\\xa6\\x8a3\\xf6\\xac\\xc1\\x11\\xbeN\\xd0\\x9ae\\xaeC\\x02P\\xeac\\xb1\\x83\\x0b\\xed\\xf8\\x03q\\\'\\n\\x9f\\xaf6$\\x9cT\\xae\\xa8S\\x0fNk%\\xd1\\xc8\\x84\\xe2(oH\\x87P\\x072\\x0fh\\xf6\\x87@m\\xfe\\xaf\\xd3\\x17\\xa74\\xb7\\xdc\\xc3k8;\\x81i\\xb1\\x8d\\x93\\x8d\\t\\x88k\\x19\\xbf\\xf5"8n\\xe8jL\\x93\\x1aIa\\x87?\\x1f:\\xd1\\x9c,M\\x121I+\\xde\\x98\\xa9\\xaa\\xf8K\\xd8g6V\\xb8\\x1d\\x87/8\\x90\\xd6O:a\\xec\\xe4\\xc7\\x18\\x9f\\xa7v\\xa3_\\x03~\\xf57%f<\\n\\x9e\\x8fm\\x88\\xc1\\xc0c\\xceH\\xfa6\\xbe\\xfd\\x8e\\xd4|,\\x9b\\x9bfx\\x96\\x7f\\xdck+&\\xc9\\xaf\\x9f\\x1b\\x10\\xaa\\x15\\x13\\xafVF\\xc0\\xa0\\xd6G\\xdbJ\\x8a\\xc3\\x08/V\\xf3\\xad-4\\xd5r\\x878\\x99\\xcbj\\xd5@\\x0f\\xb4 \\x873\\xc3\\x9c\\x17\\xdc\\xfe\\xf0\\x99\\xeb\\x96\\xf5\\x0b\\xa7\\n\\xf3\\x07Z\\xd6\\xc2\\x92x*O\\xba\\x81y\\xe2t\\x8e\\x8f8\\x97\\xd2\\xc4\\xa7H\\xa5\\xb7[\\x87\\x132_\\xe0\\x92\\xf7\\xca\\xeci_`\\xc2\\xd8\\xb0\\xccR\\xcaH,\\xbbd\\xd2y\\xf8\\x90\\xdbh\\x97zM\\xf0\\xf7\\x03\\xc6\\x18\\x92\\x9cpeM\\xd1o\\x07\\x89\\x8a\\xbd\\xe1\\xb7\\x81\\xd1\\xf6\\xfc\\x07\\xc9\\xbb?\\xa9|T\\xa5\\x96;\\xa3\\xaf\\xe3\\xc0\\x19J\\xfa\\x88\\xfe\\x1at6\\\'\\xca\\xb8\\x8aJ%A\\xc8w\\x1b\\xb0\\x88\\xf1\\xa8U\\xc2_^\\xb13\\xc2G\\xb1z\\x05\\x07\\nF\\xa5.AfS\\xf9\\xef\\x83\\x9cN\\xec\\xce\\x9bj~\\xc4\\xa0\\xf99\\x03\\x95\\x1a\\x849H\\xed\\xe4\\xbe\\xae[\\xae"g\\xfcv\\xef\\ne\\x92\\x14\\xba^\\x84\\xae\\x95H\\tn\\x08\\x0cmD60\\xb8\\xb1:\\xf5\\xba\\x17\\x84\\x85\\x87a\\x1e\\xfb\\x90>\\xf0Ao0\\xf6\\\\d\\xfcZ0\\xd3\\xbe\\xe6\\x1d\\xf5\\xf7b\\x94\\x9a\\x1c\\xa8\\xcf?\\x08\\x8c\\x12\\xec\\x13\\xadtg\\xdc\\xf7\\x14\\x1f\\xeb9c<\\x99|\\xc9h\\xa1\\xeb\\xe3\\x85e\\x17\\xaf\\xea\\x98\\xb9TJ\\x96l\\xbc\\xb4\\xf8\\xbd*\\x95\\xbbWty\\x89d\\xdc\\x85\\x82\\xa8\\x840O\\x9d}(\\x9c_\\xde\\xd5zL\\x9b\\t\\x87\\xd3#\\\\\\xecVA\\xd5b\\xde\\xa5\\xab\\xbc\\n\\x90\\xa8.\\xe3\\xf7\\xe7\\xf5\\xe6\\x8c\\xb8\\x0b\\xd9N\\xe2D\\x0b]\\xeb\\xd0\\xe8\\xda\\xea\\xca9\\x0e\\x89\\xcf\\xeb\\xf1T\\xd8\\xdf\\xe9\\\'\\xcc\\xf3\\xfas\\x07\\x15\\xee{\\x91\\xd1\\xc1n\\xb6\\xea(\\xb88.t\\x1dd\\xb0I\\xaaR:H/\\xa8\\xd8\\x80m\\xa4\\x18\\xb6\\xad\\x0by\\x9b\\xa2\\xe9\\xfd\\x02\\x10\\xac\\xe3\\xce\\xac\\xaaaIWZu\\xb1\\xc8n\\xfb\\xd4\\x169\\xcfk YZT%?B\\xde\\x1do\\xec\\rO\\x83\\xda\\x14\\xe1\\x1b\\xa6\\\'`\\x12&\\x10\\x9e\\xd7\\xca\\xe1\\x89\\x04\\x05\\x02\\x06\\xba\\x04J\\xbc\\xdc\\xca\\x9a\\xf2\\x0fC\\xcb\\x02`]\\xecnX\\x16~7{\\x05\\xfb\\xc4\\x94\\xf0\\xe5j:s\\x17=\\x1a\\xb1\\xd1\\x83I/\\xd1\\xd9]L\\xf5\\xc3<\\x03W-~{\\x19s\\x8f\\tZ\\xfc@4\\xdd\\x12\\xeeV\\\\R_\\xd9)\\x0c\\x85\\x96]\\x0c\\xab\\xe9\\x1e}\\xf0\\xb9\\xe0+zQ N\\xd4\\xd8Of\\x80\\x82\\xc8\\xcaCs\\x85\\xf3\\xa0\\x0ci d3\\\'3F\\x1b\\xa8\\xec\\xa2>\\x00\\x96d\\x19\\xe6=\\xa1\\xf3Q\\x89:\\xd7\\\\\\xc1+\\x05\\xda\\xb6\\xdc\\x18\\x90\\xdb\\x83\\xcf\\x82\\xe7*\\x9e\\x14r\\xcag\\xc90\\xd8\\xe7\\xbf\\x1d\\xd2*\\xf2\\xdd\\xb5\\x17\\xb0\\xcb\\x96\\x19\\x85/\\x1fr\\xdd\\xb8/6zE\\x1c\\x12xm8%\\x90m\\x1b\\xdd|\\xaca\\x9eM\\xed\\xf4R\\xb2\\xb4\\xfe-@q!\\xfdA\\xad\\x90\\xe7\\n\\xfc\\xcd\\xc5\\x16\\x9esM\\xd2U\\xa6{\\x96\\xea%\\xbf\\xb8m\\xdeX\\xc7\\x00E\\xd2,\\xa9\\xb1/$C\\x083Cx\\x88#a\\x1d\\x8c\\xca\\x05\\x94M\\xbd\\xdd\\xdfk\\x19\\x17\\xf3\\x8b\\x93r\\x14B\\xb5\\xf5bZ\\x93?e\\xab\\xdeR\\x1a\\xe3\\xda\\xc7\\xe8\\x00\\x87\\r\\xdd\\x85\\xf6\\xe9\\xd7_\\x94\\xa8\\xda\\x97\\\'\\xf7\\xbco\\x16\\x9b\\xbcT\\xcc\\\\{\\x1c`FH*h\\x8fv\\xaaQhQ\\xf6\\n\\x82\\xff\\x89\\x10\\xda\\xce3v\\x88\\\'-u\\xf1\\xf9\\xbdc\\xb4H\\xe1\\xc0\\xf8\\x17\\x9f\\xb9\\x17\\xf6`a\\\'\\xfarzZ\\x01V<\\xa5&K\\xcb\\x1c\\xde\\xa5\\xaf\\xf7\\x98\\xfaz\\xaff\\x13\\x05\\xee\\xcb^m\\xb0\\xde\\x08\\xefr\\xa6\\x11\\x16\\xbez\\xfa\\xa0\\xa6N\\xd7\\x0eB\\xef\\xd7\\x0e\\x85T\\xd5\\xef\\xec\\x1a\\x9b\\xc7\\xff\\x96\\x1eM\\xf6\\x8d\\xfbD\\x1c\\x81*\\xd0\\x06\\xbeP\\xbeq\\xd0\\xe4\\x810\\xc7\\xf5Big~\\x00\\x1aQ\\xde\\x19\\xf4\\xb9CYT\\xa6\\x91m\\x15\\xbc\\xa7dCR\\xf2lg\\xa2q%cXj\\x9e\\xa6\\x96\\\\\\xcd\\xff\\xd2\\xfe\\xf1\\x17\\xab\\x814H$\\xf8\\x8b\\xa4\\x90\\x1a\\xc7\\xed\\xec\\xf7S\\xd6a\\x15\\xa4Do\\xe4\\xedE\\xeb=\\x8a[a\\xee\\xee"\\x83\\xca#M\\x8a\\xcaq\\xa3\\x1cO\\xd3\\xce\\x01\\xe8v\\xb8V\\x84q\\x96\\x11\\xefZW\\xb4\\x95\\x8c\\x03u\\xec\\xd7+*\\x12\\x94c\\x8a\\xcbv\\xe3\\x1b\\x90M\\x08\\x0f\\xd6w\\xb5_\\x93Y\\xea\\x94\\xb1\\x9cV\\x898\\xf8\\x8e\\x93\\x8b\\xdb\\xcd\\x82\\xce\\xba\\xdd\\xb1\\xcel\\x95\\x92\\x0e\\x8c,\\xe1S\\x0e\\xcd\\x8c\\xfc\\x1ef\\xcc\\xfdh3\\x1a\\xe8\\xcen\\n\\\'3$\\xca&\\xc2\\xa3^\\xf8\\x81\\xbft?\\xb5&\\x7f\\x1a+\\xb2\\x8e\\xec\\xf8x\\xba\\x07\\x93\\xc3m\\x97s\\xa21\\xf8\\xd4\\xb4\\xca\\xf3{\\xbc\\xcbu\\x19\\xe9\\xfd\\x155\\x85\\x89\\xa95p\\xbe\\x9fL\\x8b\\x8b\\xb6\\xfb\\xda\\xbb0\\x93\\xa8\\xb5}\\x07\\xe9\\xd7\\xeaI\\x92\\xdd7\\x1d\\xc1R\\xca\\x1c\\xf4\\xacZV\\xc1\\x95\\x0c\\x93I\\xc2^F\\x88;6h\\xf8\\xcd;\\x99g\\x81^;A\\xa4\\x07\\x8fS\\xd6\\x08\\x8c\\x8c\\xb8\\xc7l5\\xdchO\\xe9\\x9d\\x05\\x19\\xccq\\x87]\\xf6\\xdb\\xa6VB{\\xbd\\xc7\\xc0\\xb9\\xa6Od\\xd4T\\xe3r_/\\xe0h!G{\\x94\\xf5+i\\xaa\\xd14\\x11%\\xb1\\xb0V\\x10e\\xb6S\\x80\\xdb,\\xefU\\x14\\x19\\xde\\x87H\\xbf\\x8d\\xac\\xd9]5\\xcb@\\xf9^^ I\\xe5c<k\\xd8\\x8fds\\xac\\xf5\\xa4h\\x9d\\x19\\xb8\\x1a\\x94uO\\xab2\\xbfCOZ\\x08\\xec\\x9b\\xc9\\xa2^$\\x91_\\x152\\xc2w\\x07\\xe4\\x82\\xe5\\xba\\xa5\\x8b@\\x8b\\xa6u\\x96\\xc5w\\xe6\\xe8\\xc7\\x18\\x9a\\x80\\xa1\\xf2\\xb1\\xb5\\xf6\\x07\\xf5~\\xca\\xb4\\x97\\x89\\xeeo$\\x9d\\xaf\\x14iu\\xf5J\\xa9\\xe5\\xc4+\\xa9u\\xcb)\\t\\x0f\\xc2\\t\\xbeG[u.f\\xcaUZ<gh\\x1b3\\x81\\xf4\\xb0\\xfb\\x06%\\xca\\xef\\x18\\x158\\x7f7>%M\\x8e\\x87\\xa6\\xe6\\x1a~a\\r\\xa2\\x9f\\xd8\\x1a\\xbdN\\xff\\xa4Fw~\\x04\\xdb\\xc6y\\xce\\xdf\\xe9\\xf0\\xcc\\x8e\\x8a\\x1e7z\\x81\\x1c\\xc1\\xc37`\\xd1\\x1em\\xd8\\xd1Z!\\xde\\xd0Ol\\xe2\\xfeh\\xbc\\x00\\r\\x8d\\xd6\\x93\\xd3\\xbc\\xce5`\\xbe~\\x8c\\xae?Q\\xa8\\xfb\\x01&\\x7f\\xcd\\xc8\\x85Q\\x18X\\r>\\x83\\xf8\\x90\\x15G\\xf1\\x81pSkf\\xc6\\\'\\xf5h\\xe1fv;\\xb7\\x13\\xb3\\x96\\xb3\\x05\\xcd\\x81l\\xf8V\\xb7\\xf4\\xb3\\xc6\\xe3N*a\\x1b\\xda\\xd1\\x06\\x17G2\\x8a]\\xd6\\\'t\\x99\\xad\\xd4\\xd92\\x81\\x88\\\\\\x86\\xb5\\x85\\x81*\\xcd{\\xb4\\x0fuU\\xc7\\xc5u\\x87\\xe5\\xa8\\x11p\\x83e%.v\\x9f\\xb1\\x9f\\xa5\\x89\\xc2/C\\\\\\xebR\\x8b\\x1a\\xf8\\xa8\\x8f\\xads\\x99\\xe0\\x93\\x1df\\xb3s\\xb03/\\x15L\\x13E\\x87\\xc8\\x02\\xdd\\xf6y\\x84<\\x82\\xa5\\xb4\\xb6\\x82\\x8e\\x94B\\xb6\\xee\\x99VD\\xe2\\xe0\\x92\\xc8\\x1c\\xbb&\\xed\\x94\\xf1M\\xf8\\xb6\\x83\\xc2\\x1d1\\x94\\xed}\\xaa\\x00+\\xdeA\\xf2\\xfaD\\xd9\\x83\\x94\\x92\\x86\\xcd\\xc7\\xe8\\xecQ\\xb1\\x98v\\x80p6M\\t!\\xe2\\xa0\\x8f\\xcf\\xc1\\x98\\x81p+\\x1f\\xe3`\\xa8\\x80\\x02]\\x88&\\xb4\\x06\\xdc\\xf8?w\\xac{\\xe4\\xb5\\x11\\x04\\xf3\\x95\\x1b\\x18R\\xfd\\x94\\xbf\\x13\\xae\\x1a/h\\xb3\\x81\\xf3\\xb3\\xa5\\x15!+\\xf4m\\x1f\\xd2\\xfc%\\x0e/\\\'A\\xe6\\xe6Cc<\\xd2\\xd5\\x1bnB\\xf3\\xe7\\xa5h\\xb4\\x16A\\x04\\xf4\\xa2\\x10U\\xb3(2E\\x9f\\xd1\\x0e\\xcc|\\xd09\\x1f\\xe3\\x0b\\xbb\\xe9\\x96\\xfc\\xd89\\x04M\\xaf\\xcbt\\xc3\\xbe\\x91\\xde\\tP\\xbbe\\x19\\xefX\\x0b\\xe4Z\\x0f\\xa1\\xbc\\x04\\x10<\\xe2;\\x10\\xb9\\x9d\\x1f\\x91\\xac\\xa3\\xf7T\\xe4\\x17\\x11\\xaf\\\'\\xbb\\x10\\x8fU\\xd0\\x8b\\x9d\\xb2j^\\xfc\\xd8\\x82\\xdfHum,f\\xd3\\xe2\\xd4\\xe4t\\xfe(\\xb2Wa\\xd3\\x03\\x1dU\\x1b#\\x11rh\\xfcA\\x7f\\xc9\\xb1\\x92\\xfc\\xa1g\\xd2\\xd0\\xbc\\xc7\\xae\\x07 "\\x8dV\\xc3\\x0e\\x0e/j\\xc3\\xda:\\x99\\xa9\\xfcD\\xf0\\xc3p\\xd0*\\x98u!\\xaat\\xa3\\xb1\\x85\\xd1\\x12R\\xe6\\xf0:H\\n\\xbf\\xb6\\x95>\\xe4=\\xcc)/\\x08\\xafn\\xf0\\xe3\\x12\\xd9 Yt\\xd4\\xa7\\xf7\\xd1\\xedC\\xfem\\x19\\xbf\\xb6\\xbd\\xe2a\\x9e\\x92\\x1f\\xf1Y\\xe9Q\\x91y\\xf5Orr\\xfc\\xf8\\xda4\\x9cq8\\x9a\\x7fF\\xeb\\x801\\xad.\\xc1\\xc5\\x1eI\\xca\\xaf\\xe0\\xe7\\x9aDq\\x0f\\xd4\\x8am!\\xfd\\xdbV\\xe2-\\xa6\\x1f\\xaec\\xccR#\\xb7hT\\xfe\\xec8R\\x11\\xb0\\xb1s\\x9f ^\\x99fh~\\x8f\\x91c\\\'\\xfa8\\xb4\\xa4\\xc5r\\xd8\\x074\\x93\\xe49\\xa61\\x8d_w\\x8a\\x12\\x0e\\xcd\\x89\\xba\\x86\\x90hYz_\\\\\\xfb\\tl,\\x14\\xe8\\xd8\\x8d\\xaf>\\x84\\x9e)w\\x96.N\\\'\\xf5\\xb6\\xe5+ \\xfb81`Z\\xc2\\x81\\xbe\\xa1\\xd2\\xd1\\x82\\xf0\\xd8?\\x90\\xed\\x06F\\x99/\\xce\\x15X9\\x0e\\x1e\\xfa\\xed\\x92\\xe8|\\x1a\\xf1\\xb4V\\x11\\x04\\xdb-\\xe1\\xb1c$\\\\LJn\\xa39\\\'\\xf04\\xddp0{\\xbc\\xe0\\x10\\xed\\xca\\xf3\\xeb*e\\xf3\\x0f\\xf2^\\xc8\\xb9\\x9e\\xb4\\xcd;I*\\x1dy\\xe9\\xc6\\x0f\\x97\\xb7\\x0e\\xdd7\\xcbQ\\x0fh\\xec1\\x95cgy\\xa4_\\xc7\\x89\\xbd\\xcc\\x02\\xfd\\x99\\x14\\xcf#\\xf5\\x05\\xe9\\xf3\\xde\\x91Z\\xc5\\x14X8V\\xed\\x90\\x89\\xfd4\\x83\\x902\\xe4G\\x95\\x89\\xa4Z/qI\\x81\\xeb"+"\\xbf\\xc8\\x87Bk\\xce\\xb4\\xfe\\xc6\\x87\\x8b\\x85\\x9c\\xfc}\\x0b./F5\\xfd\\xf7\\x84\\\'5^p\\xd4y\\x81\\xacXiBeHo\\x86:\\xca\\xa8Z\\x17~f%9\\xd63el\\xbbU\\xd4KR\\xdc\\x8es>\\xf4\\xafP\\x8aO\\xe4\\xc5\\x91\\xc1\\xcc\\xbd\\xcd\\xbf\\xd8|\\x0e\\x8fH\\x9f\\x9fT\\xe5\\x83\\x86\\xf1\\xb7|\\xfd\\x9a\\xb2~>\\xf3\\xd1\\xc5\\xe5\\x1dE\\xea\\x16\\xac\\xc6\\ri\\xe0\\xb5\\x12\\xebeM\\xc8\\xe6.q\\x8f\\xf6\\xf2\\x92\\xc2\\xb9\\xb2\\xbb\\\\r\\xf4\\xefVIt\\xf9\\xbf\\x1f/\\xab\\xc7Z\\x94lE\\x807m%\\xcb\\xfa^)\\xbd\\xed\\xe8\\x95\\xeeT\\xe7d\\xf9\\xa5a\\x16\\x13\\\\\\xd43s\\x93\\xa7\\x1f\\xbb\\xdd\\xddf\\x11c\\xfb\\\\\\x91\\xc2\\x8eP$\\x9d\\x88\\xa30jEGe\\xd6\\x138\\xa2{\\xad\\x8c\\xfd\\x9d\\x91\\x80\\xe9\\xbd=^\\\'\\xbb\\x10\\xbcq\\xbb\\xefy\\xcbW\\xec\\x99\\x9c\\xa1\\\\.\\xa8{\\xe8\\xdc`\\x9bq\\x1d\\xe2\\x08F$V\\xc3\\xd1\\x87\\xb1\\xbb\\xcb\\x07\\x96\\xf5\\xbe\\xcc\\x88-[Y\\xb0\\xde\\x8fP@\\xcd\\x11\\x04\\x8f2\\xc2\\x9d\\xefkt\\xd2\\x9e\\xa1-K\\\\\\xc5\\xe9\\x19\\xc45\\x1b\\\'/~\\xf5\\xa6\\xd9\\xf2\\x9a\\xd2e\\x07^\\xda5\\xde\\xd3\\x17\\xf1d\\xe1\\xa5O.[\\xf9\\xb0r\\xddt\\x19\\x86\\xb3\\xef\\xa0\\xe2k\\x05r\\xfd\\xdd\\xb0\\xce\\xb5Y\\xf1L3\\x85\\x05F\\x07\\\'\\xe5\\x04\\xb28\\xab\\xad:x \\xe0\\x90\\xce\\x96\\xb8\\x10\\x99\\xb7"\\x93\\x9e\\x84\\xd4s/7ZH\\x88\\x13`\\xa7 \\x1b\\x0f,+N\\x86\\xf0\\x95\\x82\\xc8\\xca\\xd9C\\x82\\x9a8O\\xf6\\x9c\\\'\\xcbnt\\xa1\\x9b\\x97|\\xb5\\x87\\x91q\\x10\\x8d\\xe8\\xd0Q\\xb9f0\\xf7\\xd5\\xab):\\x84\\xf9jzj\\xbdu\\x18\\xfd3\\xa9CY\\xb1{C\\xbeH\\xbd\\xba;DzP\\xecz\\x87A\\xc975\\x02\\xea%t\\xf1@\\x8b\\x15c\\x92Ki\\xf5\\x97\\x0b\\xf0\\xc5_E\\xa2\\\'\\xe8\\xcc~D\\x85\\xb7g\\xca.\\xa6\\xcc\\xb9\\xa1]\\x7ft\\x9f\\xf0\\xa2\\xbd\\xdeV\\xde#0\\x8b\\x9eX\\xe7q\\x0ci\\xad8\\x07n\\xcc\\xd7A\\x17\\x1734\\x80l\\xb4\\xab\\x06s2\\xc3-\\xf5\\xbb+\\xc1\\x08\\xb8\\xc3\\xee\\x8bz\\xe6\\x81\\xaf\\x8b \\xc9\\xdb8\\xd7\\xb7\\xef\\xe9\\x8b\\xed\\xada\\xf2<\\xd9G\\x17<\\x01\\x82\\xbd\\xcb\\xbafKZ\\xba\\x97\\x8e\\xeb^\\xbbojgP\\x97L\\x0b:\\xd8\\xf9\\xd6\\x97\\x10\\xdf#=\\x0c\\xd2\\xd4\\xac\\x07\\xf5k\\x06\\xd6\\xf1\\xc9\\x17E\\x0c\\xbd\\xd9Q@\\xb2\\xf1\\x976a\\xe1t$\\xd1\\xf8\\x0b\\x1b\\xca\\xd9\\xdfB]\\xc7\\xb4!\\xcc\\xa0\\x1d\\x80\\xfb9\\xa3\\xf7j\\x84\\xd1\\xf3\\xef\\xa1\\xdc=h\\x15\\xf4\\xfb@\\xe9\\x06\\x8c\\xfaS\\x8fvD\\xb2\\xe2\\xaa\\xe6,\\r\\x04U\\xc8\\x99\\xfc?\\t\\xee\\x9c\\xc7\\x15\\x83\\xf0\\xb5\\xb2\\xf8\\xae\\xbd~\\xdb\\xb2\\xe0\\x8bQzm~z\\x9c\\xb4\\xf9\\x19\\xfaa\\x8f\\x0fZ#\\xaf\\xc1!\\xdf\\xdc\\xf9d\\xd4>\\x9eM\\x9a\\x18\\xc2\\xfc\\x9c\\xcdu\\xe8\\xec[\\xfbrC\\xec\\xbaZ\\xac{\\x95\\xf0;\\xc3\\xd1Q*sqn\\xacqxk\\xe8\\xe5\\xd6\\x18#!\\xed\\x96zG\\x07r\\xe5\\xc3\\xf9\\xe6\\xd8\\x14\\xfdyZ\\xbe<Y\\x87\\xe4,\\x19\\xfb\\xa3\\xd8\\x82\\x15[$\\xb3\\x92B8\\x96\\xcd\\x92VX\\xe3\\xe4\\xc6fJ\\xa7\\xc3\\xd8\\xa4\\xd1\\x89\\x06\\xbf\\x87`\\x08\\xe1\\xa1j;\\xe9V\\\'\\xed\\xcfW&\\xa9\\r\\x92E\\rI\\xd7K\\x9d\\xa3L\\x05\\xb0\\xf3k\\x93qdk\\x1b\\xe8JH$bAekz\\xa3\\r\\xd7\\xd7\\x97p\\xe3\\xbd\\xc2\\x1f\\t\\x04SW\\x88\\xe1;\\x02\\xf2\\x91j\\x03\\xbf\\x1d5\\xb4\\xf2c\\x1f\\xc3c\\xc3\\xe5\\xaev\\xd0\\xe2\\x9f]g\\xca\\xf1\\xbb,eJ\\xe5\\x05\\\'\\xb8\\xe9\\xa2\\xe5\\xd6u\\x90\\x95p\\xb6\\x9d\\xc1\\x7f\\x82w\\x9fefa"\\xdb\\xed\\x8c|Y\\x1f\\\'#\\x8c\\xa1w\\xfa\\xb9\\x17\\x0bw\\x12\\x0c\\xf4\\xe8\\xdc\\xda\\x9e/,\\xb0\\xbf8\\x9a\\x82\\xb0\\x0cL\\xb8\\xb3\\xbb\\xd1\\xb4\\xfc\\xd0\\xb7r@\\x1f%<<\\xf8\\xb8W\\xa8HQ\\xac\\x02\\xa4VA\\xb7\\xc8Gm\\xa4f!\\x19\\xc4\\xa4\\xba\\x9f\\xbc\\x03\\x16>\\x99y\\xfd\\n@f\\xfd\\xf9H\\x8f\\x9ap\\xb3S\\xc0\\xc8V\\x80\\xf4\\x0b\\\'*?\\xb5\\xca\\x11\\xa6vh\\x1a_p9\\x1fc\\xc1k2\\xc3\\xceqzb\\x93\\x15-]\\xcf\\xdd\\xeaI\\xff\\xbcy\\xce\\xbcF\\x8a\\xe7}\\x134\\xc4\\xd2V(G\\x98?\\xe6\\xe0\\xe6\\xa0\\xfd\\x0f\\x8b\\x89\\xce\\x95\\xbd\\t\\xeak\\xfd\\x97]\\x87@\\xcbl\\x9c\\x0b\\xf2)O\\xf7\\xa6r\\x0b\\xe6\\xde\\x9f\\xdcv\\xf0F\\xe6\\xde:a\\xf5jxn-\\x16\\x02\\xe7\\x1a\\xc7\\xdf\\xc5\\x9b\\xdbj\\x0e\\x98\\xcc\\xa3\\xf2\\xa2\\x90?Rx\\x06O#\\xdb\\x8fz<\\xea\\x13\\xc3\\x1e`\\xae\\x7f\\x03\\x1c\\xd5`\\x7f\\xe7=n\\xed#\\xd1Bx|e1\\xdeJdB5\\x95w\\xc3u\\x9a{B \\xc0\\x9e\\xe7\\x1e\\x9d\\x10\\x83Pa;\\x17\\x02\\x1c\\xa3\\xcf\\x84\\xa3\\x03\\xe2\\xc1(\\x8atCB\\xee0pE\\xe3*vp\\x1bwZ\\xaa\\x8f\\xc6\\x81\\xa3#j\\xb0R5\\xfbx,\\r\\xc4\\x9fKH\\xe0/\\xf3k\\xdf~\\\\y\\xd1\\xcd%\\xd8|\\xa5\\x14p(\\xca\\x14\\xed\\xa7wQ!\\xcc8J\\x91)z\\xf2r\\x1d\\x90,\\x93\\x18\\xe5\\xec:\\xf4\\xa8\\x86\\xee\\x8f\\xfb\\xa5\\xbf\\xee&\\x9c\\xde\\x83\\x08\\xbcb\\xaf\\xb2\\xcap\\xaf\\xc3WU\\x06-\\x8a\\x90\\xeb\\x83\\xad\\x8b\\xbdL?\\x87\\r\\x9e\\xa3\\xe1\\xd1\\x9f\\xdd\\x04\\xb9\\x12\\xb3\\x14f\\xb5d\\n\\xc0\\x0b\\xd8\\xa2g\\xbfP\\xf4y\\xfd\\xae\\x19\\xf0\\xc3\\xe9_\\xd5:\\xaca\\x0b%\\xfa\\x84\\xa7\\xfe\\x1d\\xaa\\x12\\xf6}\\xb1\\xdcz\\xcc\\xff\\x03g\\xbd,Z\\nendstream\\nendobj\\n23 0 obj\\n<< /Type /ObjStm /Length 3161 /Filter /FlateDecode /N 48 /First 378 >>\\nstream\\nx\\x9c\\xedZ[O\\x1bI\\x16~\\xdf_Q\\x8f\\xbb\\x1a\\x85\\xba\\xdf\\xa4\\xd1H\\x10 \\xc9lH2!lHFypL\\x03\\xd6\\x18\\x9b\\xb1\\xcd\\x0c\\x99_\\xbf\\xe7R6\\xd5\\xddv0,Zi\\xa5\\x95\\xe0\\xb8\\xba\\xba\\xba\\xce9\\xdf\\xb9\\xf6\\xc5\\x1a\\xa1\\x84\\xb5B{\\xf8q\\xc2D\\\'\\xac\\x176ga\\x83\\xf0\\x06\\x8e\\xa2\\x08.\\n\\x9bD\\x8c\\x1aN\\x88\\x94\\x9dpJh\\xa5\\xa3pZh\\r\\xc4\\x19\\xa1M\\x80y\\xd8\\xc8\\xc2n\\xce\\t\\xed|\\x16\\xce\\xc3\\xc6\\t\\xe6\\x83\\xd0\\x11\\x08l\\xa4S\\x80\\xf9$\\x8c\\xb2p]\\x16\\xc6\\xc0>\\xc0\\xdcX\\xd8\\xc7ka\\\\\\xf0\\xc0X\\x18\\x9f\\x92\\xf0V\\x98\\xa0\\x9c\\xf0 Y\\xd0\\xf0\\xeb\\xe1\\x17\\x84\\xf2AX\\xad\\xe1<\\x08\\xe6\\xe0\\xa4O `\\x86\\xebA\\xec\\x1c\\x93\\x08\\nX\\x86 \\x02L\\x19\\xe0\\x13\\x0c\\\\\\n:\\x05\\x0b\\xa7@\\xcd\\x80\\x7f\\n\\xd6y\\x11\\x925\\x02\\x96F\\x07J\\x85\\x08Z\\x1aX\\x97DR\\x06\\x8eA]\\x03\\xfbE%\\x92\\x03y\\x00\\x81\\x84\\xe7\\xa3\\x11Yg%\\xa2\\x15\\xd9!4N\\xe4\\xa8\\x8c\\x88^\\xe4\\x9c\\xe1\\x18\\xf4U\\x066\\x88\\xa0\\xb0rp\\x19l\\xa2U\\x02\\x08b\\x06\\xc8\\x94w\\x7f\\xfb\\xf1G!\\x0f\\xa7\\x93\\x85\\xa0\\x81%+(\\xf1\\x1e\\xc7\\x1aMQ\\xc6\\x06\\rQ\\xc6\\x16\\x01/c\\xb2S\\x19{\\xb4R\\x19\\x074N\\x19\\x93\\xd9\\xca8\\xa1\\xedp\\xfc\\xd3OB\\xbe\\x9bM\\x87\\xc7\\xcdB\\xfc\\n\\xc3\\xfdC!?4\\xb7\\x0b\\xf1\\x05N\\x91T{\\x83yC\\x92\\xc9O/>\\xee\\xef\\x1f\\xfc\\xf0\\xfc\\xe8\\xbdV\\xb0\\xc9h6_<\\xbf\\x1c\\xcc@\\x03\\x96}\\xbf\\x99\\x0fg\\xa3\\xeb\\xc5t\\x86\\xd0\\x10\\xa7\\xd7\\x83\\xe5\\x1ac\\x84<\\xbe\\xf9\\xba\\xf8v\\xdd\\x00\\x07\\xa0\\x9a\\x7f\\x8a\\xda\\xf2\\xe3\\xe8lq9G\\x1b\\xb0X\\x1d\\xde\\x87\\\'\\xc7\\xef\\x8eN\\x80\\xf7\\xdei\\x9b98O\\x97y\\x08=\\xe6v;\\xe6n=\\xf3\\xdd7\\x9fO^\\xef\\x01\\xf3\\xa3Wm\\xe6~\\r\\xf3\\xd4c\\xae\\xb7cn\\xd73\\x7f\\xb9\\xfb\\xf1\\xe7\\xf7o\\x10\\xf5\\xd4\\xd2[\\xf5A\\xb7]\\xd6zK\\xd6f=\\xeb\\xd7\\x1f?\\xbe}yBz\\xb7x\\x875\\x06W\\x8fU[\\xaf\\xe7\\xfd\\xf3\\xe1\\xd1\\xfe\\xde.\\xf0>\\xfe\\xd4\\xc6|\\x8d\\xde\\xae\\xc3\\x1bb{+\\xd6j\\x83\\xb9_\\x1f\\x1f\\xbd\\xfdL\\xac\\xd3=\\x9c{\\x9e\\xa6\\xb7ss\\x9f\\xd7\\xb3>z\\xfd\\xe9\\xf3\\xc1)!\\x1ej\\xd69\\xf6\\x1d-\\xf7x\\xab\\xedx\\xa7\\xf5\\xbc?\\xbc\\x7f\\xb5\\x7fz\\x8c\\x8e\\x16\\xees4\\xf3HG\\xf3\\xb1f\\xfd|z\\x03\\xe7\\xbc\\x90\\xff\\x1c\\x9d\\xcd!\\xfb\\x18\\xb6\\x07;\\x04\\xfb2g\\x03\\xbe\\xea\\xcbr\\xcbw\\x83\\x8bf\\xbe\\xdcdC\\xd2\\xac\\x13\\xe5\\x03\\x93#\\x94!\\xe7\\x1e\\x9c\\x1c\\xf7\\x8e\\xf6\\xf7O19~\\xf8\\xd0\\xf6WH\\xb4=\\xfc\\xe2#\\x83\\xc5\\x87\\x1a\\xbf-T\\x7f\\x92\\x1a\\x01\\x90`\\x05\\xfd\\x8f\\xe09\\xfc\\xe5\\xf4\\xe0\\xc5\\xcf\\x00\\xcf\\xc1\\xe9}\\xe1\\x1c\\xba\\xe8\\xa4-c\\xca\\xffo\\x81\\xf3\\xdf\\x93\\x10\\x06^\\xaf\\x93\\xd6b\\xafU\\xc6\\x01\\xfb\\xaf\\x87\\x9a\\xf5\\xc3\\xe7O\\\'\\xef\\x0f~8:\\xde;j\\x9b5\\xf6+c\\xec&,\\\\\\xb3\\x8d]7T\\xe5\\xb7\\x07\\xbf\\xfcr\\xfc\\x02x\\xefvx\\xbb5\\xe5\\xa9[\\x95\\xdd\\x96\\x01\\xb7\\xa1(\\xbfx\\xf3\\xea\\xe4\\xdd\\x01\\x95\\x88v\\x9e^\\xa3\\xb6\\x7f\\\\u\\xf2\\xab\\xa2\\xfc+\\xe4M\\xb7\\xa3\\x0b\\xfd\\x02\\xc7\\xd0\\xcd\\xeeD\\x1aEcv\\x0c\\x8d\\x9cO;vI5\\x9e/4\\xe2\\x8a>\\xf5\\xc9\\xc2J\\xa6\\xf5<t\\xec8\\xef\\xfd\\x0e\\xb4\\xfc1\\xee\\xa4%\\xcd\\x11\\xaf"\\x1am\\x00I\\x98zCg\\x99V{\\xd64\\x82\\x9b\\xd5\\xff\\xd0\\x05\\xbb\\x1d\\xb7\\xfc\\x89Y\\x83\\x9cL\\xeb\\xab\\x82M;y\\rM\\ne\\xebSmH\\xd0\\xf2\\x93\\xb4\\x06\\xe9\\n\\x05#\\xe0?\\xe3\\xf6}\\x9a\\x12\\xf1\\xd8\\x82\\x96\\xf5e\\xef\\x15\\x0f\\xe2\\xc84\\x11\\x96P\\x1d\\xf1\\xa0\\xc0N\\xc0\\x96)\\xed\\xf9\\xe7{G\\x8a.\\xc8\\x84\\x14o\\x81\\xd6\\xf6\\xc6\\xff\\xff\\xff\\x89\\xfe)z\\x92\\xde\\xf1\\x85\\xb2\\xed\\xb2\\xf5\\x18\\r^\\x83/q$\\xf1\\xb8\\xb6\\xef\\xe3(\\xefSS\\xe6\\xe5c\\xc2\\x08 \\xca3)\\x07\\xf0\\x9f\\xe4\\x15\\xfa\\\\T\\xe0\\x01Y{\\xf49\\x9d@\\xce\\x980\\xfe\\xb2\\xc3\\xb8\\xe1\\x95\\xce\\x19\\xf0\\x15\\xb8\\\'\\xc6y\\x83\\xfbDow\\xf0\\xae3\\xab\\xd5\\xa2\\xb25mQ\\xc6\\x1cn\\xd1\\xaf\\xd8\\x14\\xc6D\\xe1\\xd6\\xad;\\x15\\x9d\\xea\\xe0\\xd1\\x1f\\xb7\\xd0\\xa2\\xad\\xbd\\x0b+6<\\xb6\\xc9\\xe1L\\xb5\\xa6\\\\\\xcb\\xf3\\xce\\x82\\x88<\\xa3\\x95Re\\t/\\xa74\\x08\\t\\x11\\xb7\\x8a\\x08\\x9b\\xcf\\xb8\\t\\x00\\x00FM\\xb0J\\xa1\\x88A\\xe1\\xb9h\\x104\\xe7(\\xa5\\xc1\\xd5\\x00Q@H\\x9d\\xc21\\x80\\x83\\x18\\xc5\\x90KNM&\\x80\\xbe&{\\x8c`\\x1a{\\xabQ\\xf7\\xdex\\x1b\\xaaU \\x99\\xe8\\xb2\\x87^\\xbc\\xd5\\xd6\\xe5g\\xf3\\x99\\x9aw\\xfbL\\xeb\\xd2\\xf6\\\\p\\x99l\\x90\\xbf\\x7f\\x91\\x81Th\\x96SQa\\xf5a\\x8a\\x19\\xcb\\x17\\x8aM\\x86\\x07\\x17\\xb4\\x85\\xf2\\n\\x16(\\x86\\x885\\x80h\\xad\\x02sN@A\\x96\\xec\\xd0\\xc4\\x01\\xbd;\\x19\\xaa\\x13`\\xc0\\x04\\xde\\x9d\\xa8N\\x80\\xb7+G5\\xcd\\xa3\\x14\\xe0\\xaf`9E\\xfbZt\\x03|\\x1c\\x85\\x12\\x07\\xf4\\x91\\xe4\\xd0\\xea\\xd1\\xa1\\xcf\\xa7\\x80\\xfe\\x91U@\\xbf\\x82\\x19|xDN\\n\\xac\\xf0\\x81P \\xdd\\xbc\\xc3\\x0b<J\\x15\\xa1\\xd2\\xe0\\x13\\x1d\\x8b3\\x95\\xb6}Z\\xe3\\xb7\\xb1\\x06W\\x86q\\xda\\xe2<Q\\xf6\\xbd\\xfa,\\xef\\xc3\\xe3\\xe2\\x99\\xa0\\xab\\xe3\\x1e\\x80\\xea\\x1dW=\\x1e{\\xa5z\\xa3m(E\\x99/\\xff\\xdb_\\xb6\\xc5\\xa6D\\xd6\\xcf.\\xf9\\xdd\\xcdT\\x8b\\xef\\x8e\\xeb\\x0c\\xbav\\xa9\\x89\\xbe\\xac\\xdcP\\xcd\\xc9\\x0b\\xb9\\xaf!\\xca+HU\\xea\\xa2\\n\\xad\\x84dn1c\\xaaDg\\xc0>\\\'\\xa0\\x87E\\x8d\\xaeB=O\\xd4\\x94\\xb53\\xa6\\xa2D\\xde\\xee\\x89\\x06\\xde\\\'\\x18\\x11R&\\x1fT\\x94\\xc6\\xc19a\\x83\\x8c\\xa9;dj^\\xa8\\xb8$\\xc8bp\\x1152\\xb8\\x01\\xa6qO"\\xa0\\\'\\xe6\\xc4\\xac(O\\x07r2\\xe3\\xeemej\\xc8\\x1c7\\x10D\\xa9\\x81\\xe8\\xa54\\xcc\\xa0\\xd8\\x86!\\xd7\\xa4P\\xc1\\xe8#\\xae\\x89\\xd4\\x9eQY\\n\\xe0\\xb6\\x18\\xa0\\x91*\\x05J\\xe6\\x82\\xa2\\xb6\\xad\\x94\\x08\\x02\\x91\\x9ew\\xd2\\x04\\x07\\x99\\xc20\\n\\x11c&Y\\xaa_\\x00\\x05\\xcc8\\x9a\\x07\\xfc\\x02\\xa1\\x98hL6\\\'.p\\x01f{\\n8\\xa3Z\\x01\\xc2\\xb4\\x9d\\x8f\\x9c\\xc5G\\xc1\\xa4\\xa5G\\x03\\xa0d\\x86\\n\\r\\xe4\\xfel\\xb0Rh\\x14\\xca\\x13\\xc6\\x88+\\x14\\xa0\\x80\\xba9\\x93\\xa9\\x82\\xe0\\x9eVG*\\xfe\\x19\\xc5q\\x94v\\xb4\\xa5\\x1c\\xeaP\\xdb\\xc8m\\x18&%\\x975\\x950KHS\\x01\\xd7\\x9c\\xca(\\xe7\\x82\\xd3`s\\xec\\x97\\xedy%w\\x8d=\\x07\\xb3\\xf5nm\\xd8?\\x8e\\xf2>5-vV\\x94:\\x89\\xf2\\x0c[;z\\x83n\\xce)\\x98]\\x9e\\xac\\x18\\xa00r\\x13\\xeb\\xcbJ\\x9b\\x0c\\xf9\\xa7\\xa7\\xfc\\x8f\\t(P*\\xcc\\x11\\xf1-\\xbe\\xc3;\\x1bN\\xd64N\\x98qK\\xea\\xe7t\\xcf|\\x89B\\xfd\\xd5\\xad\\t\\xceu5\\x18\\xfdq\\x0b*\\xda\\xb8d\\xd4jl)D\\xea5\\x05l\\x9e\\xa7\\nR\\xe7\\xd2R\\xa1h=\\x9a\\xcc\\xdc\\x93W\\xbd\\xc5\\x80\\xe6{\\x1a\\xea\\xc7\\xb4#`18\\xa2M\\xe4\\xe1\\x08 \\xf6i\\xd0dq\\x96\\x07\\xc7\\xc2\\xfcC\\xe5\\x88+\\x04\\x84\\x0e\\x02\\xc85\\x8b\\xa0\\xe6\\xe2\\xe3 \\x17eE\\x95\\x87\\xd6\\xb1\\xeb$t\\xc0\\x90\\xcc\\xean\\x8b\\xef\\x0c\\x92I\\xd4\\xf8\\xe0\\xfa@F\\xb2\\x94\\xf3jz\\x970\\xb9\\x9f\\xf5\\x06#\\x0f\\x9d\\x1f\\x1c\\xd3\\xd2\\x8e\\x94\\x9c\\\\\\xc0\\x00q\\t%u\\x11;R\\x94\\xdfRVsZ\\x97u\\x01\\xb0K\\x14\\xa6\\x89\\x9a-\\xd8#\\x11\\xae\\xcaR\\xba\\t\\x14\\x88\\x1a\\xe7\\x03\\xa6\\x0e\\x0c5\\xbc\\x87\\xa5P\\xa5\\x95QS\\\'\\x18\\xa9\\xf3&\\xec)1A\\x1a\\xdf\\xe6\\xdf\\xea\\x0c\\x1c\\n\\x05\\x1b\\xa4\\x8c8xB\\x9c)\\xcf`\\xd1w\\xd4\\xee\\xa2+\\xa3\\xdc\\t\\xdc\\x11\\xed\\xc6\\xbd\\x02\\xb9/u\\x0f\\x19\\x91\\xe1{Z\\xba2S\\x12\\x0ct_\\x8aNJ\\x9d\\x020\\n\\x98\\x97\\xb8\\xf9\\xe6q\\xe2\\x86\\xa9\\xdc\\x9c\\xc2\\nR\\x8f\\x19k\\xcd\\x15\\x88\\xa5 \\x1a\\x15b\\xcd\\x92\\x87j\\xdc\\xd5\\n\\x12r\\xd9\\x94o\\x05\\xcb\\xd8\\xc4\\xd2c\\xf3\\x15<\\xbb\\xc4\\x81$\\xa6v\\x86gr\\xe9\\x90\\xe8\\xca\\xd5j^\\xe1(#;O\\xd4\\xe1}}}\\x96\\xb1\\xe21S\\x96\\x02w!;\\xa5\\xea9\\x01Q\\xbe\\xdbe\\xcaQc\\xb9\\x9cUE~\\xd5\\\\\\x80\\xc5\\xb8\\x18U\\xf5w\\x15Y\\x99P\\xd1J\\x13\\xd2U\\x18\\x9a\\xd5\\x12fs7\\xaaW\\xd5N\\xef\\xab\\xfe\\x80\\xceU\\xe2\\xad\\x13l\\xd3\\xbf\\xe9I\\xc1\\xbb\\xd6\\xed\\\\i\\x1d0!p#\\xc8j\\x91\\x8fp\\x98\\x07\\x8f\\x8aEv\\x7f|\\xc9\\xcaAQ\\xe9\\tU\\x1fn\\xf2B9_\\xe6\\xe8\\xda\\xb2;;(\\x01^\\xf6_=T1+\\xf6~\\xd9/\\xdd)\\xda\\x1dU\\x10\\xd0f\\xc5\\x1a\\xd5\\xb8\\xb2\\x1e\\xcd\\xb6lj\\xee\\xf6H\\xf5\\x13\\xa3\\xd5j^a)l,\\xc5S1Hu\\x96\\x15\\xa8\\x9f -\\x1b\\x14|\\xdc\\xb6;\\x1f6\\x93\\x056\\xffB>\\x1f\\\\\\xbflF\\x17\\x97p\\x98\\x02\\x1c^\\x0ef\\xf8|\\xf2\\xefrW>\\x97\\x07\\xf2P\\xbe\\x90\\xc7r \\x87\\xd3\\xf1t"\\xcfd#i\\xb1l&g\\x83\\xf9\\xa5<\\x97\\xe7\\xa3?\\x1ay>\\xbd\\x99\\xc9\\x0by)Gr,\\xaf\\xe4DN\\xe5t\\xd2\\xc8\\x99\\x9c\\xcb\\x85\\\\\\xfc9\\x957\\xf2\\x9b\\xfc\\xab\\x99M\\xff!$>\\xc1C\\xee\\xcf4\\xb2?\\x1c\\x0f.\\xe6\\xc2\\xf1#\\xba\\xbd\\xbd\\xe9\\xad\\xf8U<\\xf3A<3\\x08\\xbc\\x0e\\x8e \\xff\\xc2\\xe7\\x0fG\\xe3F\\x98\\xf2\\x8e\\x04\\\'\\xde\\x0c\\xae\\x9a\\xde+\\xccW\\x8b\\xc1x4\\xdc\\x9d\\\\\\xc0b|q\\xb3h\\xae\\xfe\\x85\\xef\\xcf\\xeb\\x87\\x81\\xd5cDyZ\\xf4\\x07\\x84\\x96\\xcf#\\x0b@\\xf8\\x86\\xe6\\x0e\\x1fU\\xa3\\xf3u6\\x186\\xe3\\xe6|\\xf1uq7\\xbe\\x1a\\x9d\\xdd\\x1d,\\xae\\xe5h\\xb2h.f\\x83\\xf1\\xa2\\xb9]\\xc8\\xeb\\xc1\\xac\\x99\\xd0\\x15\\xa3\\x0b>\\x98\\xe1\\xb6x4\\xbf\\xb9\\xba\\x1a,F \\x17,\\xac!\\x82\\xf4\\xbf\\x01"\\xe3\\xe0?\\x07\\x85\\x1f\\x008|\\x9b\\xde\\xc2H\\xf71j\\xbf&X\\x8b\\x91\\x8b\\xf7B\\x047\\x84m\\x88z>dk\\x94^\\xcb7\\xf2-\\xf8\\xcf\\x07\\xf9I~\\x06\\xef\\xb9\\x985\\x83E3\\x037\\xf9M\\x8e\\x9b\\xf9\\x1c<\\xe5\\xba\\x99\\x8d\\xa6g\\xe8*ct\\xa8[\\xf9m;\\x1f\\xb1\\xa6\\xf8\\x88r\\xa9\\xef#\\xae\\xab\\x7f\\xe7Ms\\xad\\xff3t\\rF\\x00`|b\\x04\\x06\\xf2+\\xe8:\\xd9J\\\'\\xad\\x8bJ\\xc6\\xe9\\xbeJ\\xbe\\xabR\\xfb\\x95\\xe6\\x06\\x8d\\x92\\x7fj\\x8d\\xf6\\xc0\\x9a\\xa8\\x15\\xdap\\x82\\x8e\\xbc\\x18\\r\\xc6g\\xa3\\xf3\\xf3\\x87\\xdb\\x90\\x9c\\x98\\xe2\\\\\\xab\\xbe\\xc2\\xa1\\xabp\\xfb\\xad\\xf9&\\x13\\xa6\\xa7Vx\\x17T~.\\xf7)\\x19\\xbe\\x94\\xaf\\xc0\\xa9\\x8f\\xc8\\xad\\xdf\\xc9\\xf7\\xe4\\xda\\\'\\xf2\\xa3<%\\x07GX\\x86%U\\x0e\\xa7\\x10\\xd3u\\xc2\\xfc\\xfdf0\\x96\\xcd\\xedp<\\xb8\\xc2\\xb4\\x89\\x99\\xb3\\x93</\\xbf]_6\\x13\\x0e\\x0e\\xca\\xa2\\x93\\x11$\\xd1\\xc9\\xcd\\xd5\\xd7f6\\x1f],\\xb3\\xea\\xf5]*\\xa9\\xf2\\xc82\\x90\\xae\\xc77s\\xf9\\xbb\\xfc\\xfd\\xa6\\x99cF\\x81\\xc1\\x14"\\x8eV`:\\x9e7W#\\x16p\\xde\\xfc\\x01\\xcc\\xe6\\xa3\\xdbb5H\\xd4\\x97\\xb3\\xa6)\\xe9\\xfa\\x0f\\xf9\\\'\\xdaQ\\xfe\\xf5\\x80\\xb4\\r\\xe9\\xb2\\x84\\xa4\\xca}s\\xc6\\xae9\\xdb_\\xbd\\xac\\xcdH!?\\xb51/\\x00\\xda\\x15\\x90kaD\\xfcVHl\\xe9\\xc7K\\xc5u\\xb6}\\xc5SW\\xf1\\xd6\\xf7\\x00k\\xf5F\\x99\\x9fVov\\xbf\\xe2j\\x0f\\x82\\xe0\\x01\\x0e`\\x97u[\\xc55\\xf1\\x9c\\xbb8\\xb4>\\xc0Y\\x8bC\\x0c\\x0f\\xc7\\x01\\xf9~\\\'\\x1f__\\xcf\\xa6\\xb7\\x8c\\xc6`6\\x9b\\xfe\\xc9*C\\xc5\\xbe\\x82\\x8b\\xe5\\xf9x:\\x9d\\x11\\x1e4\\xe2\\x93\\xa3\\xc9\\xf9h2Z|\\xa3\\x92\\xc5\\x97^\\x8d&\\x80\\x11\\x87\\x1crmf\\xcd\\xd9\\x96\\xbe\\x92\\xc53\\xaa\\xdb\\xd0\\xdc@\\xdd\\xf6-\\x8c\\xac\\xeab\\xd4\\xf9ZgC\\xd2\\xc3F\\xe5iqZ\\x07\\xc4\\x96Y\\x00\\xf4\\x83\\x92\\xac\\xad\\xa1{\\xb9\\x96~=\\x17h\\xbf\\xee\\xdd\\xa0\\x9d\\x7fDU\\xbe\\xc7\\x0b\\xe6\\x98\\x13\\xe7\\xbfA\\xd7u\\xb9\\xde\\xe6l\\xe0\\xd9\\xe0l4\\x1c\\x8c\\xb7\\xf4~\\xc8\\x02\\xd9{\\xbc1\\xc5\\x07\\x99\\xb9mY\\xdd\\xebHZ\\x1fCm2\\xec#\\x02 \\xe07C\\x95\\xeat\\xd8\\xaafX\\xc3\\xdeQ\\xed\\x1a\\x00\\x14\\xc3\\xd1h8\\x9a\\ro\\xaeV\\xb0\\xac/c\\x9cA\\xd6W\\xaa\\xed+S\\xa7\\x1c-K\\x0f\\x15\\x9d\\x9b\\xc9\\x19T\\xba\\xe1t\\xd6,\\xebO\\x8d\\xbc\\xc1/\\x1d7\\xb9\\x9c\\xb1\\xf8\\x80)B\\x16l{\\x9c\\xb6]\\xdc;\\xdf\\x13=a\\xdd15\\xec\\xde\\xb7\\xee\\x17\\x16\\x97\\x90"\\xceA\\xb3J\\xa3\\r\\xbd}\\x02\\x85\\x02}\\xe1K\\xcf\\xe3m[\\x9f^\\x86\\xe8|\\xad\\xb1\\xbe\\xb3\\x7fD~p\\xa1SOr\\xad\\xcf\\x9b\\xfb\\xf5x\\x06\\xb1\\xf0\\xcc\\x19\\xfa\\xe6\\xd8\\x8al\\xda\\xe5@\\xf7\\x02\\xa2\\xf3\\xc9\\xcbc\\x15\\x01\\xe8@\\x91\\x7f\\x036a$D\\nendstream\\nendobj\\n24 0 obj\\n<< /Filter /FlateDecode /Length1 1656 /Length2 9418 /Length3 0 /Length 10507 >>\\nstream\\nx\\x9c\\x8d\\xb7\\x05T[\\xff\\x12-L\\xb1"-\\x0e\\x85bA\\x8b\\\'hqww-\\x12 \\xb8\\x04\\x12\\\\\\x8a\\xbbS\\xdc\\xad\\xb8\\x14\\x87\\xa2E\\x8b\\x16)P\\xdc\\x8b\\x14(^\\xfc\\xd1\\xbf\\xde{\\xbfo\\xad\\xf7V\\xd6J\\xce\\x9e\\xd93gf~{\\xce\\xca\\xa1\\xa3R\\xd5`\\x153w4\\x85H;:\\xc0Y\\xd9\\xd9@\\xfc\\x00\\t%%9v\\x10\\x00\\x04\\xe2d\\x03\\x8180\\xe8\\xe84\\xad\\xe1v\\x90\\xbf\\xed\\x18t\\xda\\x10g\\x98\\xb5\\xa3\\x03\\xff\\x7f0$\\x9c!`\\xf8\\xa3M\\x12\\x0c\\x7f$*9:\\x00\\xe4]\\xec\\x00\\xec\\x9c\\x00v\\x1e~\\xf6\\xd7\\xfc \\x10\\x80\\x03\\x04\\xe2\\xfb\\x9b\\xe8\\xe8\\xcc\\x0f\\x90\\x04\\xbbZ\\x9b\\x03\\x94\\xd8\\x00\\xf2\\x8e\\x0e\\x10\\x18\\x06\\x9d\\x84#\\xd4\\xc3\\xd9\\xda\\xd2\\n\\xfex\\x9f\\xbf/\\x01\\x0cf\\x8c\\x00v>\\xbe\\xd7,\\x7f\\x84\\x03\\xc4\\xec!\\xce\\xd6f`\\x07\\x80\\x12\\x18n\\x05\\xb1\\x7f\\xbc\\xa3\\x19\\xd8\\x0e\\xa0\\xe1hf\\r\\x81{\\xfcW\\n\\x06A+8\\x1c\\xca\\x0f\\x04\\xba\\xb9\\xb9\\xb1\\x81\\xedal\\x8e\\xce\\x96\\xc2\\x8c,\\x007k\\xb8\\x15@\\x1d\\x02\\x838\\xbbB\\xcc\\x01\\xbf[\\x06(\\x83\\xed!\\x7f\\xb5\\xc6\\x86A\\x07\\xd0\\xb4\\xb2\\x86\\xfd\\xe9\\xd0p\\xb4\\x80\\xbb\\x81\\x9d!\\x80G\\x83\\x9d\\xb5\\x19\\xc4\\x01\\xf6\\x18\\xe2\\xe2`\\x0eq\\x06<\\xde\\x1d\\xa0!\\xa7\\x08P\\x81B\\x1c\\xfe$+\\xfeI`\\x01\\xfc5\\x1c\\x00;\\x1b\\xfb?\\xe9\\xfe\\x8a\\xfe\\x9d\\xc8\\xda\\xe1\\x8f`\\xb0\\x99\\x99\\xa3=\\x14\\xec\\xe0a\\xed`\\t\\xb0\\xb0\\xb6\\x83\\x00T\\xa4\\x15\\xd9\\xe0\\xeep\\x16\\x00\\xd8\\xc1\\xfc7\\x11l\\x07s|\\x8c\\x07\\xbb\\x82\\xad\\xed\\xc0\\xa6\\x8f\\x84?J\\x07\\x03\\xa4\\xc5\\xd4\\x00\\xe0\\xc7\\x0e\\xff\\xea\\x0ff\\xe6l\\r\\x85\\xc3\\xd8`\\xd6v\\xbf{\\x04\\xfeN\\xf38f)\\x07s\\tG{{\\x88\\x03\\x1c\\x86\\xf1\\xbb>Ikg\\x88\\xd9\\xe3\\xdc=\\x80\\x7f\\x1d\\xae\\xad\\x83\\xa3\\x9b\\x83\\xd7\\xdf\\xc8\\xc2\\xda\\xc1\\xdc\\xe2w\\x1b\\xe6.P\\xa0\\x96\\x83\\xb5\\x93\\x0bDN\\xf2/\\xce\\xa3\\t\\xe3_\\x9b%\\x04\\x0e\\xe0\\x06\\xf1\\xbe\\xe6\\xe4\\xe5\\x06@\\x9c\\x00\\x10w3+\\xe0\\xef\\x1bhz@!\\x7f8\\xd9\\x7f\\x9b\\x1f{\\xf0\\xf1\\x82:B\\x01\\x16\\x8fm@|\\xac- \\x8f?\\x18^0\\xb0+\\x04\\x00wv\\x81\\xf8x\\xfd\\xa7\\xe3\\xbf\\x11\\x06;;\\xc0\\xdc\\xda\\x0c\\x0e0\\x85XZ;`\\xfc\\x9b\\xfd\\xd1\\x0c\\xb1\\xf8\\x13?\\x9e\\xbf\\xb3\\xb5;\\xc0\\x00\\xf4(?v\\x00\\xe8\\xf7\\xe7\\x9f+\\xc3G\\x85\\x99;:\\xd8y\\xfcK\\xff\\xe3\\x88\\x81b\\xca\\xfaZ\\x8a\\xe2\\xcc\\x7f\\xb5\\xfc\\x8fS\\\\\\xdc\\xd1\\x1d\\xe0\\xc5\\xca\\xc9\\x01`\\xe5\\xe0\\x06\\x01\\xd8A\\\\\\xbc\\x80\\xd7\\x8f\\x17>\\xff\\x9dG\\x15l\\xfdW\\x1d\\xff\\x11+\\xe7`\\xe1\\x08\\xf8\\x9d\\xecw\\xbd\\x8f\\x83\\xfa\\xbbf\\xd7\\xbfD\\xc0\\xf0\\xd7\\x860\\x02\\xfe;\\x99\\xb2\\xe3\\xa3t!\\x00\\x86\\x7f\\x95\\xfe\\x06\\xc4\\r2{\\xfcb\\xff\\x7f\\xd6\\xfb\\x1f!\\xff\\x7f2\\xff\\x9d\\xe5\\xff\\xaa\\xf4\\xff\\xadH\\xda\\xc5\\xce\\xee\\x0f?\\xc3\\x9f\\x84\\xff\\x8f\\x1flom\\xe7\\xf1\\x17\\xe3Q\\xba.\\xf0\\xc75Pr|\\\\\\x06\\x87\\xff\\xa5\\xea@\\xfe\\xdc]%\\x88\\xb9\\xb5\\x8b\\xfd\\xffz\\xe5\\xe0\\xe0\\xc7u\\x10s\\xb0|\\x944+;\\x17\\x1b\\x88\\xebO\\xbb5L\\xda\\xda\\x1db\\xaej\\r7\\xb3\\xfaS6\\x7f\\xda\\xb5~/\\x9c\\x9d\\xb5\\x03D\\xd5\\x11f\\xfd\\xfb\\x11\\xf3\\x18\\x05\\x02\\xfd\\x8f\\xefq\\xcb\\xccl\\x1f\\x1f#\\xb0Gm\\xfe\\xe9\\x02\\xc3\\x1eW\\x0e\\xfe\\xc7A\\xfe\\xc6\\x90\\xc7\\xa5\\xfa\\xef:\\xa4\\x1c\\xcc\\x1c\\xcd\\x7fo\\x1f\\x077\\x0f\\x00\\xec\\xec\\x0c\\xf6\\xc0x<\\xfcG\\xc4\\r\\xf0b\\x7f\\\\Ss\\x88\\xfb\\x1f\\xea\\x06\\x00\\xd9\\x1c\\x1c\\xe1\\x8f!\\x80\\xc7\\x9e}\\x00\\x16\\x8e\\xce\\x18\\xbf\\x0f\\xfa5\\x0f\\x00\\xa8\\xf8\\xdb\\xf4\\\'\\xe2\\x05\\x00\\x95\\xffE|\\x00\\xa0\\xca?\\x88\\x97\\x13\\x00\\xd4\\xf8\\x17q\\x01\\x80\\x9a\\xff\\xa2G\\xa6\\xde?\\x88\\x0f\\x04\\x00\\xea\\xff\\x83~w\\t4\\xff\\x07\\xf2p\\x00\\x80\\x96\\xbf\\x1f\\x9e\\x8fs\\xff\\x97\\xc2\\r\\x00Z\\xff\\x07|\\r\\x00\\xda\\xfe\\x1b\\xf1\\x18o\\xf7{&\\xff\\xf8\\x1f\\x95\\nt\\xf8\\x07r?\\x16\\r}\\x14\\x98\\xa3\\xf9\\x7f0\\x1e\\xcb\\xfb7?\\x0f;\\x00\\x08\\xb3\\x03\\xc3\\xac\\xfe%p<\\xa6p\\xff\\x0f\\xf8\\xc8\\xf0\\xf8\\x03\\xfe\\xd7t\\xcd\\\\\\x9c\\x9d\\x1f\\xc7\\xff\\xc7Z<\\x8e\\xfeo\\xfc\\xc7\\x83\\x0e\\x02q\\x87\\x98a|\\x9bq4\\x13\\x08\\xb2\\xa9\\rj\\xfbU#F\\xea\\xc6\\xba5&\\x88r\\x94\\xfaK\\x97\\x83u\\xac\\xd0\\x08\\r\\xde\\\'5i\\xbc\\x96\\xa0\\x91\\x959\\xafP&\\xfd\\xad\\x97]\\xda\\xc8\\xa6SY\\xdc\\xe9W\\xf6\\xf2\\xec\\xa9\\xd7f\\x1de\\xbd\\x07\\xd7\\x05+\\xa5\\xf4\\x8e%\\xa5i\\xdc\\xcc\\xc3\\xc5\\x93\\xe9D\\xafK2\\xea\\x19\\xecf\\x84<\\x9ddq\\n\\xfeb\\xe7>\\x04U\\xf2H\\x9c.t\\x11s\\xcb>\\r:l\\xefW\\xb5=s\\x89n\\xf4\\x04%\\xd2\\xaf\\xe5\\x83\\xdb\\x94;\\xbajJ2\\x15\\x89\\xc8\\xf8\\xb4\\x7f\\xac\\xab\\xc3[L\\x075\\xb7\\xb8\\xcf\\x88_\\xe5\\xac\\xdb\\xc7\\x06nD\\xbd\\tOQN\\xa7V\\x10\\xec\\xb8\\xc2Hp\\xab\\xc6Y\\x1d\\x18\\x1a\\\\\\xc4\\xed%\\xef\\x8e\\xf4\\x97w\\r\\xd8\\xfaI\\x1b\\x02\\xc7\\x95\\x12\\x18$\\x93\\xe4zZ\\xad\\xbd\\x98\\x8fu\\x9bS\\xec\\xba\\x9f\\x8e\\xe7e*\\x83/\\xbao\\xdeW\\xbe\\xc2\\x98\\xfc\\xabV\\xf9\\xc4j\\xf3d\\xdf\\x90\\x8a\\xe1]\\xd7k+\\x93w\\x16Q\\xec?<\\xaf\\xc8q\\xa1\\x8b\\x04\\xe2\\xa9\\xce\\xb9\\x05\\xdb\\x11\\xe6\\x0b\\xd9\\xa1\\x94HM\\x03\\xc2\\x89\\x970\\xed\\x9e4k\\xd9O\\xcb\\x95\\xeb\\xe4\\xb6\\xf2\\xa1\\xc1\\n\\x1e\\xf3\\xd3=\\x13\\xab\\xb7.\\n)r\\x06\\xe3\\xfdA\\x0c,J\\tB\\xf7\\x15\\x9b?|\\x1a\\xe8\\xda\\xa3]-B\\x10[_\\xd5$\\xe3nJ1\\x13e2\\xee\\xf9X\\x04\\xe6\\xf7\\xd3\\xdae-^0\\x04O\\xebp\\x18\\xf0\\xa6Z\\xb5i\\n\\xbf_\\xe4\\x0bj\\xf5\\xd3\\xc5\\xe5\\xe4|\\xeej\\x9dZ\\xa5\\x85\\x05l\\xf8>\\xf0\\xb4H\\xef\\xc2\\xcb\\x93\\xeb>\\xff\\xb4\\xa3C\\x9c~\\xde\\xa9:\\xd2!\\x1a/\\xcas\\xb5n\\xd1;\\xbd0\\xef\\xfa\\x88\\x1d\\xf8\\xb9\\xde,\\xedC\\x94\\x84\\xa7\\x9b\\xfd\\xda\\x85w\\xb5\\xfb\\x9a\\xa1\\xe2\\x80\\xbdc\\x91O\\xa5g\\x9b=\\xf7\\xc1\\xea,nL\\x94#?\\x802\\xbbt\\xaf3"(\\x9a\\x98\\xad5\\x9c\\xbara\\xa37\\xec\\x9c\\xa2\\x021\\xce\\x1c\\xa1D9\\xb7\\xfc\\xfa\\xcc\\x9fh\\xb4\\xdf\\xb1\\r\\x81\\x13\\xc3\\xb5\\xc4?\\xeaz\\xdf\\xf3n\\x1f1\\x1d\\xa0\\x8c\\x01\\xad\\xf7D)S%\\x14\\xd0\\x9e\\xec\\xb4\\xe4\\x19\\xc8\\xef\\xc3D\\x14\\xfe\\xc6\\xf2p,\\xdc\\x9a\\xa2\\xe2\\\'\\xcfe/\\x06\\x1a\\xb9S\\xe7l\\x9cia"\\x18\\xf4\\xea`\\xce\\\'j\\xdd\\xc4\\xe3\\xc3]\\x0b\\xb6v\\xd9\\x1aWz\\xb7\\xa9"\\x8am\\xe5\\xc3\\x8a\\xbf\\xc0\\x10\\xf3<\\x80@m0p7!6\\xaaMl\\xf5\\xac%\\\'\\x92q\\xea\\x03\\xe9\\xf4\\xc1\\xb3\\xb6\\x12!\\x7f46\\xbe\\xd2\\xef\\x99\\xfbg\\x9c\\x96\\xa4/O3\\x85\\xb0(\\r:\\x8c)\\x1fL\\x1f\\x1c\\x8d\\t\\x7f\\x8a\\x93i\\x17\\xae\\\\\\xf7\\x07\\x0c?m<\\xd1\\xa1\\xa6< A\\xdcl\\xcc\\xca\\xf8\\xb4\\n>\\xd9u\\xd4\\x97\\x86\\xa9\\xc43\\x06\\xbd+\\xa4;2\\xe78iq\\x8bR\\xfeX9%+|.\\xe9s\\xfe\\x13m!+\\xbeO/\\t\\xab\\xed\\xa0\\xfe\\x03\\xbb\\x8d~U\\xa0e\\t\\x16j\\\'\\xbbiGK\\xa6|\\x19\\xd8\\xdb\\xa4\\xc3*\\xba\\xd8\\xf4-c\\xb7\\x9b^\\xe0\\x91\\x99\\x01=\\xc8\\xe6\\xdd\\xcfZ]\\x84\\xd7\\x1e\\xbf,1\\xf0S\\xadH4\\x9a\\x82\\xf3\\xe9Q\\xde\\xfa\\xe0A\\xefY\\\'\\xf7,f\\x8c\\x00\\xe0\\x9b\\x19c\\x8c>R;.O\\xed\\xdd\\xd3\\x1d\\x07\\xf5\\xd3\\xd5Nr\\xe3h\\x88hu\\x1d\\x13\\xa2\\xa7wr|\\x92\\x8e5[\\x13\\xdf\\x08c\\xcc@Z\\x86x\\x88F\\xcc\\n\\x8cs<6\\xd66\\x97\\xc5(\\xca4!\\xfd\\xa7\\xe7p\\x0b\\x1a\\x18s8\\x98\\xcbX\\x1cuc\\x0f\\x1f\\x05o\\xf1\\xa6\\x7f\\xec\\x9a\\xfd\\x88yb\\x1ew\\xea\\t\\xf6\\x0f\\x9d\\x86Z\\x8e!\\xa8c\\xa6\\xe4Mfy8R\\x87\\xbb\\xf0\\x90\\xc5\\xacl\\xdd\\xb5\\x01\\xa5\\xa1\\xa6\\xd4E\\xb7M\\xba\\xfa`\\x84/\\x90\\xf9\\x06ss\\x93h\\x0f\\x90\\x9e\\x8a\\xb3d\\xc7\\xbb\\xe9\\xa9\\xbb\\x98\\x00\\xad=\\xcb\\xc9\\xc8\\x92\\xa5\\xd2\\xbe\\\\\\xf47o\\xa4j\\xf4\\x130\\xe7\\xca/\\xd0,\\xc2\\xfe\\xc6\\xcd\\xcf\\xb2q\\xedJ@c\\xa6\\x10\\xcb\\xb48#\\xc0\\xec9N\\xf8T7\\xaa\\x1a\\xcf\\xf3\\xb9-\\xe0E\\xa1\\xda\\xd4\\x8a[\\x9f0\\xd8\\xa9\\xdf\\x94g\\x8b=Z\\xee\\xbaeL\\x01\\x87>X\\x04\\xf2\\xe5\\xebe\\xbcP\\xd8\\x9eEK\\xa3\\xe0O\\x1b\\x85\\xdb\\x98)Z\\xdbf\\xbb\\x8be:\\xe33{ZC\\x9c4\\xbe\\r\\xd6\\xde\\xc0\\xdc\\xad\\x17\\xb6`\\xc5\\xe1\\xb7/\\x17\\xafR5\\xc7U\\xd9\\xbd\\xbe\\xf8\\xe3\\xbf$p\\xc8\\r\\x8f\\xf9\\x9a-=\\xefe\\xaa\\xd9>\\xd2f\\x81\\x1a\\xb2~\\x90[\\xe9\\x15\\xae8\\xb9O\\x1f\\xd6\\xd5\\x851\\xa4\\x9b\\xc5\\xb71\\xf4~\\xf5\\xfa\\xf2\\xb0aEX\\xc4\\x1f\\x7f~\\xb3^3wn\\xd0\\xf1P\\xdd-}j\\x8d\\x1f#\\x94"\\x03\\xd2r\\x84\\x01<A\\x0fo\\xdd!\\\'\\xeb&&\\xf2\\xb89h\\xc6\\xf2\\t\\xca\\r\\x85o\\xcf\\xeb\\xe6\\x07\\xb6R\\xbf\\xf6;q\\x82\\x07\\xadZ\\\\\\xfbt\\xe1mO\\xbcc\\xac\\t\\xe1E\\xd6P\\x9f\\xd2M\\xf2x\\x81\\\'\\x98\\t\\xab\\xe7\\xb0IR1j[\\x0bl\\xc5\\xa1\\xebz\\x16\\xab\\x95\\xd5\\x1a\\xbc\\xea%<\\x1d\\r\\xcc\\xad\\xa8.\\x95\\xb0w\\\\\\xd9\\x02\\x8d\\xd1U\\xf8\\xe4A\\x17^\\x98\\x7f\\xf7\\xb2"\\xe2\\x12\\x8e\\xc0\\x8bxj\\xe4&\\xf9\\xfe\\xa7(D\\xed\\xcc\\x1c\\xab\\x17i\\x0flm\\xae7a\\xb4*\\xda\\xd9 \\x82\\x06}f\\xcd)@V\\xeb/\\xde\\xd7"F\\x0e\\xb9\\xb9\\xa1\\x188;\\x7f\\x864A]\\xa9`\\xb6\\xbbm\\x8c\\x81q&|\\xfb\\xf9V\\xd3qB\\xa8\\x90\\x89\\x0c\\xbf\\xf9\\xf3\\xf0\\xb5G\\xa1\\xdf7\\x1a(>*m\\x9a\\xd6\\x18\\x19\\xf8\\xbd_\\xad_\\x16\\xb7\\x1a\\x87>\\\'?qV\\x13\\xe9\\xa0\\xa0\\x9e\\xcc\\x84\\x17\\xfb\\xaf\\x073m9\\x92\\x1a$\\x1e\\x06cg%\\xea_\\xe1\\xf0`s?\\xbf\\xc0\\xa52\\xe5\\xfd\\x10\\x0eC3k\\xf0\\xda\\x05\\xd7\\xe9\\x83\\xd0\\x11\\xf9\\xa8s\\xdaGW\\x8f\\x85j+#\\xa6nY\\x85o\\x1f\\xbc\\xdf\\x9c\\xcd\\xe9\\x85\\xbb\\xe17\\xbcT\\xda/\\xe0daj\\xe8\\x8dp\\xe5\\xf6a++\\xe2{\\xff\\xa2&\\x87\\x9a\\x07\\xdcV\\x8f\\x8b\\x05\\xd1\\xdbM\\xf7\\x89C\\xe2)\\xe5\\xf0Q\\x08\\x04\\x1d\\x1ak\\xd7\\x10\\x8d}\\x8cz\\xba0\\x02,\\xe6\\xe9\\xf2\\x1d\\x0e\\x07\\x9d\\xd8\\x8a\\\'\\x84\\xf5\\xdf\\xdb\\x1d\\n\\xbb%,\\xeb\\xee\\t\\xae\\xcb\\xeaE\\xd7\\xf4#\\xbb\\xbb\\xe2\\xb5\\xe3\\xfb\\xf8mJ\\xb3\\xd2fPg\\x98\\x12P14x\\xdaJ\\xaa\\xa9\\x9b\\xc2\\x05\\xea\\x06\\xb0vm\\n\\x9b{\\xb3l17\\x95I.\\xb8*\\xa7P\\xb9\\xae\\xd2\\xceV\\xea\\x16\\x1fl\\xc4\\x982L,\\\'C\\xd5\\xca>\\xd4\\xa23\\xbc\\xff.0\\xec_\\xa3\\xf6\\\\\\x8b2H\\x02j\\xba3**\\xf0\\xabG\\x02\\x81\\x0f\\xb2K/m\\xc0\\x10\\x89\\x91\\x7f\\x1b|\\x15w\\xf5^d\\x8c8\\xda\\x19!\\xe2 \\xb5\\xad\\xd5\\xf8\\xac*\\xf8)\\xee\\xa4\\x85\\n\\x9a\\xce\\xf2\\x17\\xc4\\x8d\\x92\\x9c\\x12\\x97+\\xd0\\xd2e|\\xb4-0\\xa1\\x8a\\xbe\\x9a\\xfb\\xfc\\xd9\\xe7\\xc9\\x92\\xab\\x86\\xafs\\xe8\\xfe\\x1fXW\\x14\\xf5\\xb4\\xf5\\xcbL\\x7fp\\xe9f\\x1b\\x8c\\x80\\\\Fl\\x88\\x84\\xa5\\xa6mk\\xfdj\\xa9t\\xfb\\xba\\x14\\xe3:\\x1a\\x7f\\xe5\\r\\xc4k\\xa5\\xd4\\\\dl\\x00\\x94B\\xed\\xae5e\\xc9\\x06\\x1d&\\xef=2z!Z\\xfd\\xfd\\x0f\\xb7\\xb0`1\\xe4\\xc5\\xcc\\x08\\xc7`N\\xca1oCJ@\\xb5a\\xda\\xe66\\xa9g\\x8b\\xff\\x92r\\x15}\\xd2\\xcbw2_\\xb5\\xd8E\\x1bB\\xd8\\x80|\\x88\\x02\\x03\\x13rO\\xf6\\xc6\\xa5=\\xdf\\xd1\\xbe\\xef\\xf0\\xd3\\x9a\\x03* "\\xd9\\xcdZ\\xf0\\xb8;\\xad\\xe6\\x92\\xa3{`\\xd4\\xba\\xf9|\\x08\\x90\\x95\\x05\\xd61\\xd1]/\\x98&\\xd9&V\\xdf\\xea}\\xf0pt\\xff\\xd2hSu\\x98\\xe2^P\\xab\\xd1\\x9e\\x8a\\xf4\\xc6\\xa3\\x81\\xd1\\xe1\\x85Hk\\xb6\\xf6N\\x80|#\\t\\xc5\\x15*3\\xe5 \\xa9-88\\xd7\\x80\\xc8sq\\xc4"\\xf5\\x83\\x1f^\\xca\\xac\\x85\\x1c\\xd3\\x92\\x81\\x05\\x89\\x10\\xa2\\x12\\x1e\\x11\\xe7\\x14#]\\xdbqi\\x15N\\xa2SYU\\xa3\\n\\x03J\\xe7\\x1bV}\\xaa(\\x12\\x8a\\xec}\\xf9\\x1e\\x0cYF2g\\xb5\\x8b\\xb8\\x06r5\\xee\\x8b\\x82\\xb7\\x9a\\xc4\\xa6\\x8a>@\\xe11n[\\xbc\\x1f\\xc4\\x97Bjn\\xf9*\\xf7\\xaf\\x89\\xb8o\\xc3hH\\xf9\\x93fY\\xf2\\xb5\\x8c\\x89\\x14UE\\xe2\\x1b\\x06\\x86^(KTmk(]|\\xb5>\\xfa\\xfa|^8\\t\\x0b\\xb7\\x7f\\xfc2l\\xeb\\xd9\\xd61\\\'\\xd3\\xac\\r\\x8dNO\\x96\\xe4\\x1e\\xefN$\\xed\\xc9\\x94\\xf7I6U\\x93t\\xc4\\xca\\xd0HD\\xf3\\xfd\\xcb\\xddy\\xc5D\\x01\\xe3\\xb7\\x18\\xe6j\\xc9\\xf2r\\xb4\\x8d\\xad\\xc9=z\\x83\\x0cs\\xc4D\\xf6\\xeaN;\\xf8\\x97\\x05\\xf2\\x06\\xc4\\t\\xbe\\x1638H|,\\xc9\\xe5<u\\xeb/\\x8c\\xd9\\xaf\\x0b\\xa6|\\xdd\\x00\\x98\\x1f\\xf7K\\xc94XPD\\xd8cE\\x02\\xd10Og\\xc4\\xa6\\xfbV<\\xec\\x18\\x026\\x14\\x9f\\xb4\\x8c\\xc3?\\xe6R"\\x1di\\xc5\\xe1\\x1d\\xfe\\xd8A\\xef")\\xb7\\x17\\x9dd"\\xba\\x89\\xd3$\\xe0\\x8b[\\x90jA,\\xd2Q\\xb1d\\x9dO\\x9e\\xe9\\x8e\\xc2\\xae\\x91\\xdd\\x85n\\x13c\\x81eQ)\\xa8\\xd1\\xdex\\x16\\xde}\\xc2\\x01NNQ\\x04I\\xd9h\\xa3xe\\xb1\\x87\\x9f\\xb2\\x8f\\x04j~H\\xd2V\\xbc\\x9b\\xe4\\xf6\\xd0Q\\xf0\\xf6\\xf4\\x9b<\\xddH\\xf9\\xe9=\\xdf\\x08\\x7fZh#n\\xbe\\x1b\\xac-T\\xe5\\xf9\\x8ds\\xbeKsF\\xde\\xb7m\\xdb\\xa0\\xb6\\xa3\\xe1\\xfe+\\xa7\\xc9\\x9dk\\xee=\\xd4\\xc19P\\xeb\\x99\\x92\\xb6NY\\xc6\\x05\\xdbw|=V\\xf8NZ\\xeanMe-\\x87g\\xd6\\xd7\\xe3\\xf8\\xa0"\\x84P\\x0cA\\r\\x1e8{\\x83]\\xef\\x92\\xc9G\\xd3\\xf4\\xed\\x08\\x84\\x9cV\\x04\\xb9}\\xa2\\trc\\xc6,\\xfd\\xb4\\xd3ic\\x08\\x8e\\x14\\x96\\x06\\xfcy\\x91\\x96\\x19\\xf7\\x8fQ\\x895\\xd1\\xc8\\x00\\xc7>n\\x9c\\x01wE\\xc9\\xd1N\\xb1\\xd4\\x88\\xc6\\xb7w}\\xca\\xef\\xc9\\xbf\\xa8\\xa3\\x01\\x14#\\x0f2-\\xfa\\xdd\\xb79$\\x19\\x92\\x03F\\x1crk\\xe7g2\\x17\\xac\\x17\\xa3\\xcb\\xc6\\\'J\\xa3`\\xcf{\\xbe\\xb5E\\x07\\xae_\\xb39/\\xa3\\xd5 Q\\x9cJ\\x19\\x94\\xb2"U\\xdc5\\xfd8\\xc7\\xda\\t,\\xf1\\xf7lO\\xde\\x8au\\xaeB\\xc1\\xde[\\x9d\\xa4-\\x12/\\xc3TD\\x04F\\xc4}\\xe7o\\x16\\\':\\x07\\xcc,\\xcf\\xd2\\xfb\\xc9\\x90fO\\x8e\\xb1\\xbb\\xf0\\x80\\x0ca&\\xfe\\x18\\tgI\\xde\\xe9\\xad\\x89\\x0c\\x1f\\x88\\xb8rV\\x8a\\x19v\\x7f\\x8a\\xd7\\xde\\xb1\\xe2\\xda\\xb6}l\\xc9\\xeeO\\xb6-Z;\\xbb\\xf9\\xa8@Qe\\x1f\\xb9$\\xbal\\\\(\\xf6j{\\xb6K\\xbfu\\xaa\\x0b\\x0f\\x8d\\x85V\\x1d\\x82n?-i\\x80T\\x19\\xdd\\x15\\r\\xf5\\x1d\\xfeY\\xf53\\x1c\\x13Uw1Q\\xec\\x8e\\xd7^\\xcc\\xf3\\xdb\\xf9\\xf7Ld\\xf3\\x0ee\\x01\\xea\\xcd4_b\\xd4\\x89\\x84\\x92\\x0e\\xe8J\\xdbE\\na3\\x89\\x84\\xcc{,\\xbfD\\xe5/951\\xbd+\\xde\\x02\\x00\\x85\\xa7\\x87<8]b+\\x97\\xd3\\x03&&\\x9b\\x1d6\\xfc@L\\xc4\\x17\\x08\\xfau\\xb1~\\x0f\\xf7Z\\xef\\xe9\\x98\\xaeyH\\xdf\\xcc\\x9d6\\x8ao\\xaf%\\xce\\xc7\\x0b\\x0e\\xedm\\xa9F\\xd1B\\x91l*\\xfd\\xba\\xfaw\\xddz\\xe0\\xc1\\xcc\\xd6%\\xcb\\xd6U\\x85\\xf2e\\xd3\\xd9M\\xb7\\xd3\\x80v\\xad\\xa2\\xbe\\xe1\\x9f\\xb0\\x1d\\xbd\\xd6,\\x9b`\\x9f|\\x8c7\\x9f\\xe0\\xb2\\x12{O\\x8f\\x86\\xae(\\xd2\\x80\\x18\\x92k[\\x80\\x8fC\\xe8^\\xd6\\x90\\xde\\x8dgiH\\x15\\x82y\\xd5\\xa4\\x1d{\\xe3w\\xde\\x9f\\xd8\\xbcR\\xccjB\\xed~\\x81b\\n\\xc2\\x18\\x8a\\x89\\xe6\\xdfJ\\xa0\\xa52\\x1f\\x8e\\x925\\x93}\\xd3o\\xbe\\x87\\xd2\\x02\\xe8\\x8fq\\xc0\\xc5\\xd8\\xf5\\xb4Re\\t\\xd2\\xb2\\xd1\\xf6\\x08\\x8c+/\\x96\\x0b9Q*\\xe0+\\xea[\\xd6\\x19v\\xb4 :w[\\xaa;\\x894~?\\xbe\\xdd\\xef\\xc6c\\xac\\x1f}l}\\x15\\\'D\\xbf\\x1fT|z>,#\\xd4kTn5\\xb7\\xc7h[\\x9d\\xd1b\\x8d\\xcek:\\x15\\xffK\\x14f\\xf4\\xe2\\x97\\xbb\\xcc\\x03[|\\x08\\x1a\\xf6>\\xb1\\xcaeH\\xba~\\xe4\\xa1M\\xf5\\x864\\x81\\xe6b\\xdb\\x97\\xe7,\\xb4\\xe0\\xa3\\xc0\\x97\\xea\\x0b5\\xd70\\x8bw\\xf5\\x05\\x85so\\xec\\xfd\\xccl\\xd9\\x1d?0o\\xbfE\\x0b\\x1d\\xd9^A\\xf6\\xeb\\x96\\xda\\x0b5=\\x8ad\\x91\\xa8r:\\xed\\xa1\\x0f\\xb9\\xd3\\xc5\\xdf\\x97+\\xc8\\xe8\\x9fNEvn\\x7f\\xb3\\xd0\\xf8)\\xe0\\xf3\\xc3\\xfa\\x8d:\\xc4\\xd1\\xc45a\\xad\\xd5\\xd9\\xfc\\x05T\\xe4\\xc7\\xf8tUu\\xa6\\xc5W\\x891B\\xd4\\x0f\\xa53-:(\\x17\\xd0\\x90\\xe9S[\\xd4\\xfc\\xc0\\xb1A\\xb1\\\\J\\x1c\\x86o\\x86J\\x9b$\\xb3\\xb8\\xd8\\xe88\\x04\\x17\\x8bqF\\xfe\\x95\\x13_U\\x92>\\xd8-\\x8d\\x7f\\xf1\\x10";+1\\xf2\\xe4\\x96\\x8a\\xf2\\\'\\xf1\\xa4\\xbd\\x0f\\x186;X\\x06\\r\\xdbjD@c\\xdb\\xc5~"Z\\x15;\\xc30\\x83\\xdb\\xc3LP\\xe4G\\x13\\xefm#\\xdbZFd\\xa4\\xac\\xa6\\xe9wD\\x08\\x03\\x83\\x01\\x05\\xf8\\xabU\\xa4&IY\\x1b\\xa2|\\x91T\\xa9\\x8eoD\\x15\\x13\\xc1\\x9a)\\x86\\xeap\\xcc\\x1f\\xd8\\x9e\\x9d\\xd5\\xaf^2u_j\\t\\x84\\xb0JM\\xbc\\xdc\\nNt\\xfc\\xa8i\\xba\\xbe\\xd4\\xc9\\xbdY\\xdd\\xd4y\\xdb\\xce\\xf1\\xaeC\\xb8\\xfc\\x87\\x82\\xbb\\x13gO\\xd1\\xeagcx1ye\\xc6n\\xdc\\x17\\xef\\t\\x9dY\\xba0P\\xc1\\x88\\xd0\\xb6T\\xbchu\\xeb;\\xb6#\\x0e\\xa3U\\xe7\\xba"\\xfe\\x1c\\x06rY\\xe1\\n\\xc8\\xce\\xbc\\xea\\xc8R\\xdd\\xb4@\\xf5\\xe5\\xdc\\xc0l^\\x90\\x8f\\xbdN\\xe6.\\xebq\\x83\\xd2\\x9a\\xd8\\x98\\\'\\xcc\\x04f\\xea\\x13\\x97\\x1d\\xf5\\xed\\xae\\x07\\xd6,J`\\x9c\\x08k\\x03"\\xa6doH\\x87u\\x06a\\xab$H}*O\\xb1;\\x8c\\\\\\xb6z#cb\\xfa\\xe4\\x02L\\xc1[\\x98\\xdeD\\xcb\\xb0|2h\\xa4\\xc5\\x89_\\xed\\x94^?}~\\xb4q*\\x81B]\\xfe\\xe0\\xda\\x19\\xd9|ns\\x8f\\x8b\\x10-\\x92\\x9as\\xbd8,F>\\xd5\\xb4\\xcd\\xcdV\\x02\\xe3\\xef0\\x1c \\x15\\x90\\xe5\\xa8\\nn\\xaf\\x15\\xb1\\xeb\\xac\\xaf5#\\xc0\\xdb\\xbcGP-\\xba<\\xa3\\x82\\xa0\\x15,\\xec\\xb1\\xc2\\xd9c\\xe6\\x80/\\x81\\x03\\xf1\\xa6\\x82!I\\x89\\x8bw\\xb67\\xc0-\\xaf\\x15\\xd4\\xdd\\x89w\\x8e\\x19c\\xb9\\xf8A\\xb1\\xa3\\xfdH\\x1b?\\x8axe\\xe8p\\xc3\\xa1cm\\x9f\\xf7\\xfb\\x9b\\x94\\x8e\\xf9\\xa7\\x92\\xae\\x1d\\xee>\\xd1\\x9ai\\xf8\\xed\\x93rS\\x95%d\\xb7\\x82\\x92"\\xd6\\xe7E\\x83\\xa9\\x92\\x1b}7%\\xd1\\xa7hx\\x05\\x9e\\xbd\\xcd;\\xa9\\x7f8\\x85!\\x93\\xe7\\x18\\xed\\xd5\\x08YJ\\xfc\\xcc\\x8f\\xaf\\xf7_\\x12\\xb9\\xda\\xd9\\x9f\\xf5|*\\x10ml\\x98\\xd8\\xe6\\xec\\xfb\\xf8\\xc6+\\x9bX\\x1d\\x0e\\x84\\xdfb\\xf6\\x9c\\xee\\xf0H\\x94\\xbe\\x96\\xb1\\x8ciI\\xbd\\xfaL\\xca\\x8f}%.\\xc4G{\\xfe\\xf4x`\\x9f\\x986\\x83\\xa9\\x89\\\'\\xfe\\xfcz\\xd0\\xca\\x19\\xfb\\x9c*\\x10\\x9d\\x12R!\\xb03\\x8c\\xe57\\xa9\\xd3\\xc7Vb\\xee{)s\\x0f\\x92J]\\x1bCG(\\\\\\x16e\\xdfl,\\x8av\\xb7\\xae\\x89\\xd0.sz\\x16?\\xd2\\\\]\\xfe\\xae\\x12g\\x06\\xfa\\xdd\\xb2P\\xf9\\x89\\x9b\\x87\\xe1\\xca\\xcc\\x9b\\xccE\\x18\\x87\\x93\\xfd\\xe1\\xbdH6\\xdb\\\\\\x91B\\xe3\\xf5\\x85\\x80\\xd7\\xf9\\xb9f\\x0bW\\x00NHW\\xce\\xa7\\xd8b\\xe5\\xfc\\xa3i\\x9cU\\xd4\\x0e\\xdb\\xfd\\xd5^\\xf3U\\xf7n9+)\\xa1\\x81\\xc0\\xe2\\xb0"\\xc3\\x04Cg\\x80fB\\x97\\xcf\\xf3\\xd6C\\xb9\\x80\\x9b\\x83\\x0c\\x8e%\\x92*\\x9a\\xe7E\\xa1\\xc8i\\xf7{}\\x06\\xe85)\\x18_\\x13\\xcc\\\\\\xee<Z\\xb4\\xd4\\xfdmW\\x91\\xe2\\x1e\\xff\\x914\\x0c\\x85\\x93\\x96\\x8f\\xfaw\\x86\\x04y\\xb7\\xe9\\xaaN\\xe7j\\xb7\\xf71\\xecz.O\\xec\\xd9{\\xb9\\xb6\\xc7\\xf4(\\xc3\\x99rF\\x8e\\xd3\\xcdp\\x10$\\xd3>\\x8c\\xbcL\\xc04\\x16\\x80\\xdbN/\\xb3fd\\xedq\\x91\\xd3\\x15\\x177\\xa2H\\x97\\\\\\x1d\\xa5\\x91<\\xfb\\xb5tP\\xfb\\xf2\\t\\x92\\x98J\\x0eCU\\x08\\xec\\xb3\\xc5\\x07:\\x86\\xc5\\x1b\\xe8\\x98\\xe4\\x82,5\\x07=J*+4\\x02S\\xe1\\xc8\\xb7&\\xdct\\xe3\\x8c\\x93J\\xc8E\\xeaTm\\xf7]\\n\\x1a\\xc3\\xbe\\xa4\\xa0@\\x9dMM\\xefP\\xd3\\xf5\\xca7\\xb9\\xad+\\x0e\\x18\\x01y~\\xe3\\xca\\x8dX\\xbde\\x88L\\xe2\\xa8\\xb2\\xc6@\\x84Y?\\xc7\\xf4m\\xeb\\xac3\\x1e[\\xc8\\xd2\\xc6\\xeb\\xaf\\x121F\\x12\\xe2\\xb9k\\x91;5\\x04BK\\xceq\\x13&\\xc9\\\'\\x04\\x99vN\\x95\\x0c\\x1c\\x86K\\x9di\\xca\\x10\\xd2,\\x85\\x9dw\\xa0:\\xf2\\x1f"\\xc5\\x93P\\xf6\\xe4\\xcbcL\\xa3\\xe8\\xd4\\x13,\\x02B\\\\\\x13U_\\x8d\\x07J!\\x85\\xa5\\x07\\x11\\xa9\\xabm\\x05\\xd2\\x8c\\x0c\\xfa:\\xe6\\xd3\\xf0\\x02\\xe77\\xb4\\x1c\\xe8\\xb4\\x06\\xb3Q@\\xf7\\x19(g\\x07\\xc2\\xfe\\xba\\x9eV^\\x85S J\\x03\\x13\\xa2I\\xae3\\xa0\\xf4R\\x0c\\xb32Q\\x8b\\xb7\\x7f\\xa0\\xcf1\\x8e\\t\\n{Fv\\xf5\\\\\\xaa\\xe8\\xc2\\xce\\xb6\\xd8T\\xd4A\\x8d\\xf9tD@=>\\xca!;!\\x9c\\xc3c<\\xa4\\x9a(\\xe8[\\xa3\\x0f\\xc5\\xc7\\x1d\\x85\\xdd9\\x05m\\xcd@\\x9ar\\xde\\x97kQ\\xd9IP)\\xfe\\x0e\\xb7\\xa1\\xac\\xec\\t")3<\\xcc\\xc4\\x9c\\x9e\\x8a\\x1e!\\xb9\\xf3\\xdd\\xf0b\\xf9\\x01\\x93\\x9f\\x9f\\xdf\\xe92\\xaa\\xbb\\x1f-\\\'\\xec\\xc6!\\xf5\\xba\\xa3sO\\xb0\\xcd[\\x95\\xd0\\xa0\\xb5J\\xca\\x92\\xec\\xe5|\\x03\\r"\\x9a5\\xf8v\\xb7\\x10\\xc9\\x17=\\xdb\\x08i>\\xf2/\\xe2wB&\\xea\\x1f\\xb4\\xf2PX\\xaa\\xbf\\x97\\x16\\x10\\xd4{\\xc8\\xf9\\x12|\\xeb\\xdb\\xe3}R\\xde\\xb4\\x82>\\x8d\\x8b\\x7f\\xa6\\tt\\xee\\xbc{OY}$\\xd6k\\xba\\xd76PP\\x7f\\xb3iWAg\\xe7y\\x06J\\x07\\xfb\\xc2\\xbe\\\'J\\xaaJ(s)\\xbci\\\\:\\xd9\\x16\\x91\\xa29Vw\\x98\\xbcL\\xa2\\xde[\\xb3\\xa5Y\\xca9K\\x10\\xd5\\xc8\\xbd\\xf6\\x96\\xc7d|8\\x93}\\x83L\\x8aJ\\xe0\\xc3\\xf2n\\xd2UKDR\\x90\\xd1o8\\xf9\\xc8\\xb00\\xe3\\xae\\xf00\\xe9\\xe3\\xcf\\x84\\x8a\\xf5\\xe5]\\x99/\\x03\\xb8\\xdd\\x89(\\x08M\\xe9\\x9a\\xb4;rJ\\x17k\\x1e\\x91\\x08\\xe9\\xbcD\\\\@%r\\xef\\x9a\\xa6N\\x9a\\x1c!\\x13\\x9e\\x97\\xfd(\\x88(\\xf1\\xf0\\xe7\\xf8c\\xbc\\xb6C\\x14\\xd6\\xf9;\\xa8\\x82\\xa6WI\\x999-O06r\\x88\\xc3\\x98)\\x04\\x84\\x9eg \\xcb,\\xbc}\\xeb\\xc9\\x8b\\xf3Z\\xc3\\x19J\\x1fRK\\x1bn{\\xbe9*\\xba\\x81\\xd6\\xf0>5\\x12\\xac\\xe4\\x17\\xf6)\\xf9\\x05\\x01\\xcdP-\\xc4\\xfb&\\xf5\\xcc\\xb4z\\x9d"\\r\\xf3\\x19\\\\1\\x94w\\xe2\\x03(e(\\xcc{|j\\xafC\\x85\\x82q\\xc5\\xe9\\xcb\\x16\\x8et\\x12\\x1c=Y%\\x07\\xb1@\\xc8\\xbd\\xb6\\xa8\\xb5\\x0f%r\\xfe\\xf9\\xdc{\\xe3\\xed>\\xa1\\x87D\\x9c;\\xe6\\x94\\xeaI\\x15\\xbe\\xad\\x101\\x9f\\x11\\xe2\\xbc7\\x98k\\x1eF\\xd8,B\\xee\\xc6Q\\xdd\\xe5Z(\\x1fc\\xbbV\\xf2xT\\xd0Bm\\xc4\\xe77xE\\x82E\\x82\\xbeoI\\xa2|\\x8cF\\x88\\\'3\\x889\\xf3\\x90|\\xf7\\xad\\xf3\\xa9\\xbd\\xce{c\\x9a\\x04\\xd3H\\xf0C\\xb2\\xb7\\x1b#\\xae\\x9c\\xc9*ve\\x8f5\\x18\\xec\\r\\xee\\x87\\xb5\\xb3\\xb2\\xc9giB\\xa99\\x07\\xc5D\\xe9\\xb7=D\\xdb\\x0f\\x88\\xd6\\xa7\\x02\\x80\\xa8\\xa8\\xc1\\x88]\\xc9\\x8e\\xc0\\x8bX\\xf8\\xc4KLw\\xcc\\xa4\\xd3s\\xe6\\x11"\\xa6\\xd7\\x8dG\\xb2\\xe3\\xc6\\xbf\\xd4\\x04\\xcf\\x88\\xd9]a*~-\\x81\\x9aO\\xea\\x16l\\xbfr\\xa7\\x98\\xeb\\xc2\\xae\\x93ec>\\x04\\x9a\\xdb\\xea@_o9y\\xa8O\\n\\x0eP\\xac\\xb9c\\n\\x9d\\xb1f\\xba\\x86!\\xdf\\xca\\x8c\\x13\\xf8\\xd4\\xe8\\xb5\\x1cz\\x9a\\xa5M\\x9fU\\x8f\\xb32Z#\\x1e\\xdbk\\xcf\\xac0T(\\xa6\\\'o\\xe8XF\\x96>\\xb9w\\x1e\\x13\\x02~\\xc0\\xee\\xa4g\\x97\\xd6\\xf4\\x912<n\\xe3\\xcc[)\\xd6\\xa0#\\xa3Wj\\xf6\\x88.\\xd0\\x93(|\\x87nz\\xb5\\xd1\\xfc>\\x9a\\x19]\\xcc\\x8dP\\xa1\\x00\\xe3\\xb2\\x1d@V\\x19\\x9f\\x89^ \\xc5\\xb3In\\xa7\\xe3\\x1c*\\x88\\xcau\\xffKi\\xc8\\xf8\\xa5\\xa1fX\\x9a\\xef\\xabT\\xd7j\\xf2\\x1b\\x115\\x0f\\x0c\\x9b\\xd5\\xe0/\\xd9\\x85k\\xef\\xdevc\\xa6z\\xb3\\xd6\\x98)\\xe2 \\x07\\x9d\\xd5k"\\xe3\\xe6\\x1cz\\xfa\\x0e\\xe2\\xe2"f>\\x90*^\\xbf\\x0cy=]T)\\xc3\\xac\\xdf5\\x9c#\\x1e\\xf5a%\\xa2sO\\xa8\\x19\\x8d\\x89~\\xc4_\\xf3u9\\xaf\\xef\\xdb\\xd08\\x9a\\xd4\\xc9\\xd5\\xfeN\\xbb\\xa4O\\xbc\\x94\\x84\\x8d\\x94\\xb5}\\xed\\xcdV\\xf27M\\xef\\xbbs\\xc9\\xf2\\x19l\\xa2\\x1fL\\xb7\\x98\\x88\\x84\\xbc\\xe1Q\\xa4,f\\x93\\x89 \\xbc>\\x90]\\xd3QM\\xfd(LP\\xbb\\xd5\\r\\xa1b\\x80}\\xf2\\xdde\\x1e%\\x13e\\xac4I\\xe0I\\nkI\\xcfB\\xdd\\x15\\xee[OG\\xee\\xc0\\xc1\\xa2\\xc5\\xf2:\\xf3\\n$\\x1c\\xa9\\xb7\\x897C\\xf4=\\x04\\x01s\\xa8\\xfd\\xc5\\x85\\xbf\\xde*\\xb6\\xb0\\x89\\x80\\xea\\x97X\\xbfn\\xcck\\x98H<C\\x08x\\xed\\x04\\xd1L/$*\\x164-\\xc2\\x84B\\xe1\\xb5M\\xcb\\x935pM\\x1d\\x15\\x93\\x10\\xb2\\xc9\\x9f\\\\l*\\xee\\xb4\\xee\\t\\xee\\xdfq\\x8fc~\\xe96\\x93\\xe4V\\x0c[\\xf2*\\xc8\\x10\\x18\\x1f\\x82\\xea\\xa8\\xfcg\\x1c\\xcf<\\xdf\\xeb\\x04\\xfe\\x1c\\x19\\xb6\\xe6\\x1f@\\xd5ic>ANQ\\xa8k\\xeb\\xbc\\x9d\\xd1Dv\\xfb^\\ns\\n\\xd5\\xac\\xe8\\xb0\\n\\xe0q\\x9e\\xdf;QL\\xa4\\xe7\\xd7\\xd1\\x8b\\xe8mK\\x8b\\x07lX\\x96\\x156(\\x9a\\x0bG\\x85\\x87"*<\\xcdx.z\\xc3\\xf9\\xf5\\xcd\\xa1\\x862?o^\\x01\\xd1+K\\xe4\\xdd\\xf7+hZ"\\xcb\\x8c\\x9b\\xd3\\xea\\xa6t\\x137\\xf3\\x8eQM~\\xa9;\\xc2\\x11<\\xcf7z\\x07|\\x19S\\xd1U\\x120\\xcaK\\x07t\\xdd\\xb8G\\x81\\xd4\\xc3k\\xde\\xb6i%\\x0c\\x10\\x12Z \\xf1\\xb2|y\\x87\\x0cf\\xf3j"\\xc5\\xc0yw6\\x19H\\xe9\\xdc\\x91\\xc6\\n:\\xa1\\xb9K\\xd7{\\xb2\\xf5\\x84U=\\x97A\\xb8\\x88i\\xec\\x1a}\\xb2\\xe4\\xc7 \\x07w\\x98U\\xdb\\xceQ\\xab\\xb7\\x1c\\x1b\\xb7K\\xb7\\x89\\x9aj\\xc1\\xe5L\\x00\\xa3\\xc9qi\\x8a\\x9a\\xda@\\xe3.\\xc3\\xed\\xd3K\\xaeDn\\xe2\\xa4:\\xa3\\xe2\\xc0\\xe5\\xa0\\x00\\x02\\xa5\\x95j\\xc70r4n\\x19&\\x13\\x91Qui\\xa5\\x92\\xe7\\xab=~\\xf7_G,7b\\xf6\\xa0]\\x16\\xf3+\\x88\\x0eH\\xf7\\x08\\x1d\\xdc\\xfd\\xec\\xd8\\xe6\\x15\\x85-\\xf1\\x07\\n\\xbd\\xfbx\\x06\\x8a\\x18\\x1e\\xcdN\\xe8\\xf5\\xe2]\\x8d\\xb4=\\xa2\\xafH\\xc2\\x86xv\\xa9t\\xf6W1\\xc6\\xe2\\xae\\xa5\\x08\\x1b\\xfb\\xe5Z\\x8ex~\\xb1\\xdc\\xc8iv\\xd3\\x86F\\xdf\\x8fyd|\\x0b=L|"\\x9b\\x0c\\xb5n\\xd9~\\xd06\\xb3\\xca6$\\xb6\\xa3_X\\xc9\\x93\\xeeY\\xe2o\\xf9\\x84\\xa3R\\xb8KK3\\x18\\x81F%\\xc9_\\x82\\x10\\x89\\x8b\\x10L\\xc7\\x88\\xf8\\x94\\x00L\\xbc\\x91\\xa1\\xe4\\x9ex78@m\\xac\\x98r-B\\xf6\\xc9\\x1c\\x8f\\xe9\\x9a?t\\x06t\\xc4a\\xf8\\xda\\x9d\\xe1G+\\x17\\x14\\xb3J\\x95\\xb7\\x8d\\x89\\x8c\\r\\xd9\\x95\\x9b<\\x1b6l*x\\x1eSg\\xa8\\xa8\\x16\\x02:b\\xfa\\xd5\\xa8p\\x904\\xcb\\xdc$*\\x0cac\\x9dw,\\x9b\\x8a\\xdd\\xb9\\x97 \\xa9"\\xc1FN\\xce\\xeb\\xf7\\xb3\\x1b\\xc29\\xea\\x9fx\\xe3K\\xa2\\xceLH\\xeb\\xda\\xe3\\x98,Y\\x946o\\x19\\xb2\\x82v\\xef\\xe1\\x7f\\xb5\\x97\\xbb\\x03\\xc6_\\xf0v\\xc8Id\\x14fO\\xce\\xab\\xa1(-xj|\\xe5m\\xe5\\x1a)\\xc9]KM\\xa8\\n\\xa7yu\\x12\\xb2\\xd5\\xd1\\x12\\xce\\xf6D&_\\xea\\x10MC~\\\\g8i\\xa4\\xec\\xa5\\xf2s1d\\xfd\\xf5\\t\\xe7\\xe0\\xab\\xf5\\r\\xaa\\xcf\\x8e\\x07\\xcdD?\\n\\xa9s\\x02u\\xef\\xa4\\\'{X\\x7f\\x9d0\\xe6"\\xd3\\x1a\\xe9a\\xad}\\xf0\\xb6\\x8e\\x05\\xa8\\x97\\xf6\\x8b!s?\\x08\\xe1\\xaaX\\xee\\x8dJ8\\x80y=\\x99*8\\xc6!\\xf7<\\x85\\x8bO\\r\\xa7\\x03(2\\xa1\\xa7f\\xf4IQO\\xe4\\xe4\\x1d\\x84\\xda\\x81\\xf9\\n\\x9e\\x84\\x13\\x0fc\\xa6\\x18#\\xf5\\x9c3\\xaf\\x02Do\\xbd\\xb4\\x87\\xd4\\xe9-\\x1d\\xb1\\x9a\\xe4\\xc0e\\xa9\\x02\\x0bw\\x9b\\x13=s\\x9f\\xbf\\xaf;\\xc8u\\x18\\xaf=MO\\xeb\\xc6|6\\xea\\xfd\\x8c\\xd6\\xdd\\xc2?\\x9f\\xf2\\x93h{\\xc3dG^\\xf5\\xf57s\\xf23\\x99\\xfd\\x99\\xf3\\xd7\\xee\\x986Z\\x17\\xbc\\xd5\\xcf\\xd4%\\xa6:E\\n\\xc5\\x92\\xde\\xa2\\xeb\\xf2}\\x8a\\xbe]\\xea\\xa0Ak\\xff\\x18\\xa8\\xf6\\xa8\\xb2\\x9e\\xa9Y\\xef\\xc6\\xae\\x99\\x9a7Q:\\x18\\xb1\\xb3\\xcf\\xde4\\x19\\xf6\\x14\\xa2\\xc5\\xde\\xf8qM\\x03\\x89\\xd4\\xd3di\\xc3l\\x0f\\xe0\\xf8\\xae\\xc2\\xbc\\x86]\\x94egj,\\xec\\x1b\\x1dc\\xb2\\xd1\\x15\\x0f~\\x13|&\\x80\\x848\\xe4\\x8a\\xad\\n\\x95TQ|\\x04\\xb4\\x0cRz\\xc3\\x94\\xadY\\xcf\\x18\\xd5b\\x95e\\x06n/\\x95\\x9el\\xaa\\x84\\xef\\xe8\\xb1\\xd2TH\\x93\\xb0\\xf0\\x00\\x13\\\'\\xbb\\xbe_7;\\xf5\\x81\\xbc\\xab\\x0e7\\xce5\\\'\\x9d|1O\\xf8\\xf8S\\xa7\\x96Zx4d\\x01.\\xfc_\\x1a\\xd0\\x13\\x17\\xeb\\x7f\\x11\\x14\\xcbW\\x00M\\x15\\xf2\\xf2\\x8a\\x9bC\\xe7\\xd74\\xb3?\\x86\\xd8\\x89+\\xdd\\xcd\\x11\\x99f)O\\xae\\x99N\\x97x\\xe7\\x8d\\xbdc\\xe1f\\x1e\\xab\\xd3h\\xb08\\x87\\x12\\xcf1\\x132z\\xb8\\x94\\xaa\\xcb\\x00&\\xf7\\x91\\xfc\\xaf\\xf9\\x8ev\\xc2\\x06\\xf1\\xce\\x87\\xda;\\xe2\\x1f\\x86uw\\x9b26\\xcf_\\x8c\\xab \\x94\\xa4\\r\\xc6no\\xc5\\xa1U\\xd0\\x0b\\x93\\x99\\x91\\xb3\\x04\\xa5i|\\xb9\\xd1-&Xx\\x15&\\x9f}\\x1f\\xe3\\xc3\\x007l\\xc5\\xc0\\x0f\\x15\\x8fzA2\\x18\\xbb\\x9b1\\xfc\\xfeE\\xc7\\xe5\\x19r\\xc7\\xaf\\x89*A\\xd6\\x8d\\xd0\\xd7\\x16t\\x0f\\xa1~Z\\x92yj\\xf9\\xf11^%R\\x98\\x0c\\xdf\\xc2\\xbf&\\xdd\\xd1\\xceO;\\xcd\\x88\\\\\\xa9`\\xd2\\xe25\\x12\\xc6\\x9bWx1\\xec\\x9c\\xa3\\x17\\x94g\\x8f\\\'\\x04\\xe6\\xbe\\x97)\\xc0||\\xc7\\xa7\\xbc\\x0f\\x81\\x7f\\\\>\\xf5\\xb0\\xbbY\\xe2\\x01\\xee\\xbf\\xc7\\x86(\\xca\\xfa^\\x85o\\xcbg\\xaa$8,\\x96l\\xd7\\xb4\\xfd\\xc45\\xa0\\xde"\\xd4\\xf5\\xd6)\\xa7\\xb9,\\x07\\xc5.n\\x10\\x1f\\xbe\\xc4\\xf5\\xa4\\x93G\\x93\\xea\\t\\xb3\\x85\\xd4\\x9b\\xd7\\x7f;N\\x8d\\xa4\\xe0?i\\xf0_\\xf2\\x80\\x93\\x1a:\\x14\\xe8\\x99\\\\\\xbc\\x13\\xf0\\xbeb^D\\x8f\\x17\\x01Yd \\x1cI\\x99\\xc3\\xf9{\\x8e\\x83\\xf4b\\xe3\\x01\\tf*\\xa7 \\xadL\\x9a\\xe0\\x1d\\xc5\\xb5\\xce\\xd8\\xc0\\xf3\\xac\\x91\\xc6\\x9b\\xf2\\rw\\x08\\xbe\\x01\\xd9\\xde\\x92@7\\xcdK\\x90K\\xd8\\xf6k\\xba\\x91\\x95u\\x93\\xb6\\x9bx\\t\\xf6C\\xc3l\\xaa\\xac|\\x88_\\xc0\\x8a\\x0b\\xf9@\\xeaH|\\xf7\\xbb<\\x07\\xaa\\x8f\\xf2NBuC\\xdd\\x93\\xf2\\xa4r\\\'\\xaa\\x9fv\\xc92\\xfd<^\\xf3\\xce\\xa4Z\\xb9\\xe0|\\xa9\\xd7\\x1b5S\\x91\\xa9p\\xb7\\x17jY\\xfeT\\xc9\\x99\\xa8\\xfe\\xc5\\\';fV\\xb2c\\xc7\\x98ec\\xfe\\xa1\\x1fdp\\xcfD\\x92\\xbb\\xc2\\xce\\xb4\\x8fY\\x89\\xa4=\\xc1\\x89sK\\xc8\\xab`\\x07\\xae<w\\x06\\xef\\xd2\\xc2\\x16\\x91\\xdd\\xbfB\\xdc\\x8e7\\x89\\x8f\\x1b\\xab\\x06\\xbfL\\x10\\xb2\\xb0\\xde\\xf2hMj^k|\\x06\\xbc,\\xde\\xc1\\xab_-\\x1b\\x14\\x8es\\xda\\x15\\x9c\\x1b\\xf7E|Y\\xaf]\\xc0O\\x99\\x14Z\\xf8\\x12\\x05\\x85\\xb4S\\xac\\xeck*|K\\x0b\\xee\\xd1\\x12R\\xeaP\\x96\\x9d[\\x13\\x1a\\xc0\\xa5<\\xbf\\xa3\\x931\\xadVe\\xfbQ\\xe7\\x99[j0\\xb9be\\xa4\\x0eFH\\xe6\\xbdh\\x8e\\x84\\xc8\\xdbu\\xac\\x04\\x81\\xd6\\x16{\\xf4\\xc3\\xf9\\x9e\\x1c\\xf3\\xed\\xf9\\xb8w\\xdcY#*\\xa7\\xb8\\x8b2\\x1b]8\\xb8 \\x12\\xbcm\\xae\\x16(\\x15\\x15\\xe7\\xccj\\x06\\xe1v,\\xf7*\\x17A\\xa9v\\xa8\\x143\\xda+\\x1a.A\\xb8\\xe0V\\x9f\\xed\\xd8\\xe9\\xcb\\x92\\ng\\x0b\\xa4\\xc8\\xd9\\xf1X\\x9a^\\xd6_\\x96u_\\x02\\xfd\\x03h\\x8c\\xb6@\\x8c~\\x1b\\xe8\\xdb}\\xc1\\xec\\x0e>\\xd1\\xef\\xe9#oJK\\xefS\\xb6\\xc5q\\xe81\\xcf\\xa5\\x1c\\t/\\x11\\xc1\\x11\\xa3\\x04\\x06\\xacn\\xe1t\\xc3\\xeb\\xc9o?\\xa7\\x84\\x1d"p\\xad~\\xe61\\xfa\\xd6\\xe4\\xcc\\x94\\xab1Sk\\xa2\\x7f\\xc1=\\x1bH\\xb8\\x0f\\x1b\\xd1\\xe8(\\xef\\x88\\x8e\\xd3op\\x8b\\xc0\\xce\\x1a\\x97\\xea\\x15t\\xc3\\x7f-\\x02\\xfd\\xbag\\xa1/\\xbd\\x99{\\xff]\\xab\\x8b\\x96\\x89\\xfd\\x19~!*\\x061x\\xfd0\\x18\\xe2o\\xe3\\xa6\\\'\\xfa\\x1c\\x86_H3U\\xf1\\x9d\\xc0WY\\xedy+\\xfe\\xce\\xaf\\xcbQ5\\xfcV\\xf1\\x9f\\x84z\\xf6[\\x927\\xc3x\\x82\\xd7\\x86=no\\x9f\\xfa\\x88\\xaf\\xed\\xe8P\\x93q\\xfb\\x9b)\\x10\\xa9r\\xb75\\x06)\\xca\\xae\\x18\\xdb&(\\xd7_\\xdcT\\x90\\x88\\xb3\\t9\\xc3\\xe2\\x065\\xa5^|:4k\\xed.w/\\x0f(\\xd3\\xc4g\\x1eO\\xe2\\x9b\\xc8\\xcb\\xceF:\\x0f\\xfa\\x19$]\\x15:Em5\\x11\\x0c\\xde\\xcc\\xadg`(\\xb6\\x82\\xf9Vw\\xfa\\xc6e\\xca\\xd2\\xa8\\xf1~\\x7f\\x82\\x1c\\x18\\xdbh\\xba\\x18\\\'mi\\xb40\\xd7\\xd0fZ\\x83\\x948\\x87\\x90_w\\xa4\\x9b:\\x9c\\xc0\\xac\\xc0l\\x8e\\xe6\\xf5\\xb4\\x08W\\x91\\x83\\xb8\\xa7\\xbbg\\x1d\\xf6\\x94\\x13,\\xe7OO\\xb5\\xe7\\xe0Z\\x9a\\xfc\\x8a\\xec\\xba\\x7f\\xc5;y\\xae\\x9e\\xb3\\xa4H\\xc8\\x13\\xdd\\t\\xeb\\xbc\\x99\\x15R\\x0c\\xd1x\\x05\\xc90\\x0b\\xf4\\x98\\xa8}^\\xc1J\\r\\x10\\x9b\\x98S\\xea^\\x08\\xb1\\x9f\\x1f,\\xd6\\xcdR:\\\\\\xf7B#0\\xc9D\\xd0b\\x18\\xb3\\xb0\\x7fYq8&e\\x11\\xdbtM\\xdd\\xb0N\\xc7\\xc9\\xb4\\t\\xba\\xc5Y\\xf1\\x8b\\xbfVBU8\\xec\\x08\\x00<\\xf4`SW\\x9f~@\\x8a\\xa8\\xf5\\x89b\\xd9\\xe0)\\xd28\\xc7Qu\\xfe~\\xee\\x1a\\x1cq\\x9aAVE\\xfb\\xf2 S\\xf8r{aU\\xd1\\xe7\\x9d~J\\x8c\\xee,\\x83\\xf4\\x8b\\xb9n\\xce\\x97\\xa3Y"\\xdb\\x9b\\xf5\\xa1W\\xe6\\xd7\\xa4\\xe2\\x96n^\\x98\\x13\\x18\\xb2\\x08>y2\\x98\\x84\\xe5\\x15\\xa9.\\x8f/\\xaa\\x83\\x14\\xb1@\\x02MX\\xfbf\\x1c\\x1f\\xf1|\\xaa\\x19wP\\xf2\\x9by)\\xe4H\\xad\\xf2\\x9ci\\xab|G\\xccb\\x1b\\x9cOKO5\\x05Wn\\xb4\\xf4U\\xb5\\\\\\x15\\xc6+X\\x15#&\\xcb~\\xe2\\x97\\xfa\\x17tFI\\x87\\xb9!\\x0c\\x9a\\n\\xa6\\x90Q?G\\xac\\x14\\xdcl\\xd1\\x0e\\x8e\\xf5\\x14K\\xa8\\xc3\\xb2\\xa4X\\x9a\\x94)\\xd0>j\\xaa\\xb4G\\xe1\\xee\\xc96\\xc1\\xba\\xa0y\\x83\\x15G\\x12\\x9b<vy\\xb6R\\x9b\\xd7\\xe3\\xff\\xdeMQ\\x12\\x85\\xef\\x185\\x0b\\xbcx{\\xd1;Q\\xd5\\xe97\\xc9!$\\xac\\xdc\\xc3\\x8f\\xaaz%\\x9a\\xbc\\xdb\\xb5\\xb5\\x0faw6E1B\\xb3\\xf2\\xb1\\xc0\\xf3\\xd8\\xc1A\\xd7\\xc9\\xe5!\\xd3\\xcc\\xc4\\x167\\xc6\\xb6\\xbf]\\x1e\\xee"\\xd3r\\xfa\\xe5\\x82\\xd14\\xfc\\xf1Z\\xb4\\xafUx\\x91.<=;b\\xe0\\xae7Q\\xe5%9z\\x08\\xa7\\xe0p\\xd7\\x17CZS\\xee\\xf9\\xab\\xf4(\\xca\\xcbg4\\xc8i\\x11\\xe7\\x82s\\x89\\xdc=\\x89\\xa4rq\\xe8\\x12\\x9f"\\x19}u\\xc8nU\\xcc\\x855\\xa6~\\xe1\\x9b\\xfcX\\xd7)W\\xb6n\\xa2q1\\x0fq\\t\\xfe\\xd2\\xdc\\xba?e\\x16\\xb2\\xe4\\xa22\\xb9\\x98\\x12 \\xa0\\xe9\\x86*eE\\xea\\xc3M\\xfc\\xdaU\\x91\\xd2WQz\\x82bNk&&\\xbezV\\x7f\\x14\\x19\\xab\\xc6J\\xcd\\xa0\\xb4\\xf0\\x8bKb/l\\xa2\\x93\\xc6\\x8f\\x85a\\xe9)^pe\\xd9\\x0cv80\\x84\\x87\\xe5\\x04\\xfdz\\xbe\\x07\\xbe\\x9b\\xe7\\xd9\\xe8>\\xd2\\xa4\\x1c\\x9b\\x94\\xfe\\x8a\\xc7Hvs\\x18\\x8dv!|\\xdc\\xad0!e\\xad\\xec$%\\xa6v\\n2`\\xa9)\\x13\\xd3\\xe05\\x1eA\\xc5\\xca(\\xd1Y\\xdf\\xa1)\\xe3\\xc55\\rF\\x9dl\\xfc\\xaa\\xaf\\xf4\\x81nq\\x18\\x08\\xc4\\r\\xbb\\xf8\\xf8\\xa1i\\xe6\\x03e#\\xc5\\xcf=&\\x0b\\xd8\\xa5->\\xa6H\\xfdp@A_i\\x1d\\xbf\\x8c\\xd8\\xf1\\xe1\\x80^P\\xb0`\\xf1\\x97-R\\xb1h\\xc7\\xebe\\xa3\\x94j(\\xe9\\xd5qJ$W\\xdbr&\\x059\\xca\\xadV\\x05%\\x90\\xd6\\x9b\\xf5:\\x89\\x94F\\xbc\\xc7j\\x12\\xa3\\xd6B=\\xf8N\\\'xn6\\xb2\\xaf\\x1d\\x8a\\xe7\\xe9\\x16\\xaf\\x8b\\xf51T\\xf6\\xaa\\xe6\\xa2\\xbb\\n\\tg\\x98\\xa6b\\x04`\\xbb5\\xd7\\xcbQ\\x84\\xfc+\\x80\\xaf\\x08*\\x186\\xf39#d\\x88\\xd2\\x87rh\\x8c\\x84JH?C\\x8dr\\x03\\xb7\\xf5\\x89\\xe80\\xf5\\xf9\\x17\\xd44\\xc3W\\xf6R\\xc46\\xbc(\\xbe|W\\x07dv#\\xa2\\xc8\\x1av\\xde\\x12p\\x8e\\xbb\\xf5\\xa8\\xdaF\\xf7\\x88c\\xcbk\\x84\\xa3>\\x02\\xccsqe\\x15:\\x83\\xf5\\x03t\\\\\\x0e\\xd7\\xf3\\xe7\\x02}\\xdem)\\x98\\xaa\\xb0\\xd2<K\\xa4\\xe5\\x8e9Yy\\xf3g\\xdd\\x8aes(\\xa8Od\\xca\\xaal\\x9e\\x13f\\x8e-\\x92\\x92\\x98\\xac\\x07\\xf4\\xfbE^\\x0f7tcv\\x8c6\\x92/\\xab\\n7\\xe5\\xaf\\xd2h\\x136Z\\x9c\\x11\\x84\\xc7\\xf7h(\\xc8\\xf41\\x01\\xfa0\\xb1\\x1b%\\x0f\\x1a\\x01L\\t\\xf7\\x81Z\\xcd\\x0b_Y\\x99\\xc3JB\\x92\\xafY\\\'\\xea\\xf4\\x1a\\xc3z\\x1a\\x93\\xe4\\x1c)\\xfd\\x8a\\x15g\\x87\\xd8\\xb3w@E\\x04\\xcf\\xd3\\xd6-\\x9a\\xd6\\xb6\\xba\\xbf/\\x85\\x19\\xf2\\x04T\\x8a}\\xf0L\\xaf\\xc2\\x9bE Y\\xc0\\x1a\\xe1}\\xca\\xa8\\xee\\xb5\\xbf`\\xe4\\x84a\\xef=\\xee)\\x08V^)\\xc2\\x88\\x91\\xb3\\xffL\\x92\\xe7\\xbbu\\xac2\\xab\\tw\\xffY\\xcf\\xa45\\xd4,\\x18:\\xa3?\\x90\\x8e\\x12\\xbb&\\xf7V\\xff\\x9b\\xf9S\\x0e\\x9f\\x93\\x8cVYt\\xffhb\\xaa\\xd7\\x818\\x85\\x12\\xa6y\\xd8/\\x92V\\xbb\\x86\\x85\\x8e\\xc2\\x85j\\xb0a\\xf6\\xe1f\\xd3\\xe7MXZ.\\x04Vfn\\xd5\\xf2\\x82\\xa6]\\xc7\\x01c\\xb3\\xe7\\\\Wf<a\\xa81\\xe4\\xd1D\\xd1L\\xc7\\xb25C\\xfb\\xa0\\xedz\\x82\\x87u\\x11\\xef&\\xdce\\x9f\\x8f1*ls\\xc8\\x1e3\\xa9\\xcf\\x98\\xe6X\\xben~\\xe9j\\x8b\\xd9>\\xff<7\\x82WW\\xaf\\x99\\xca\\xf6@Q\\xd44\\x8c\\x13>z\\x95\\x9d\\xabO\\x9dr\\xe0\\xa2\\xc1\\xc6\\x11\\x94\\xca|\\xa9(K=\\xbc\\x8az\\x93\\xed\\xe9A\\xfb\\xbdZ\\xda<\\xbd\\xcf8\\xf0\\x05\\t\\xea\\xbdD\\xa3\\xa8\\x13F\\x17\\xc1\\x9b%\\xef\\xfe{\\xd5\\x9b=\\xa1\\r;\\xa7\\xcaR\\x9bO\\x0c\\x98d\\xbcUR\\xb9\\x97s3\\xce\\xfc\\xa7\\x03\\x86\\xf4\\xe9o\\xfd,\\x07{\\x81\\xcf\\xca\\xb3\\xe0\\x80\\x84\\xc2y\\xd3C9\\xbd\\xf7\\x9e\\xf8S\\xa8k\\xa6!\\xbfD+\\x0b\\xbaqe\\xf44?;?I\\xcck\\xe2\\x15\\x15[\\x0c\\x03\\xcd\\xd3\\xe30\\x9b\\xc5,W\\x8bg\\xde\\x94\\xbc\\xcfB\\x99\\xfcX\\xebe\\xbe\\x87Xq\\xe7-\\xcd5\\xc4\\xbc\\xef\\x81\\xdd\\xee\\xeb\\x0cd\\x94M\\t\\r^\\n\\xd0\\xc7\\xf4\\xe5\\xd4\\x08^-\\x16\\xf6LvA\\x19\\xae\\xae\\xfb\\x85\\xa8\\xa2\\xb2\\xaa\\x1bR"\\x7fwj\\xb6\\x90\\xf9>\\xbf_\\xac\\xa3\\x80\\x81A\\xa0/\\xa0\\x953\\x01*ZF\\xb8\\xf0t\\xab\\xd0\\x0b\\x8a?\\xbdW(\\xf8q\\xdb\\x0b\\xaf\\xb7\\xcaK\\xde\\n\\xdaz6^\\xbb\\xa6I\\xab\\xbc\\x99\\xde\\x14`\\xea9&\\xeb\\x8e\\xee\\xbc^\\xff\\xd6\\x07o2\\xde-wx~nk_\\xd6\\xa36\\xf3J\\xfc\\x9b\\xaa\\xa6\\xbe\\xbd\\xefp\\xbd5\\x8f\\xe4\\x99\\xb6\\xa76\\n)\\x0e\\x14&\\x97-\\xffU\\xe9\\xe0&YE\\x90M\\xd3\\xcbc\\xf5\\x1bp\\xd6\\xfaM\\xb8\\x16}l\\xa8\\xfe\\xfdW\\xdd\\x8aup\\xe8\\x93\\x93\\xf6\\x1d\\x8a\\xec\\xc5[p]f\\xf4R\\x86:C\\xbc?a\\xae\\xb8t\\x7f\\x97OE\\xd8$x\\x9d7#\\xb6\\xdc\\x00\\xc7V9}ead\\x87\\xaf+p-\\x90\\x93\\x8e\\xe0C\\xb3\\x8e\\xec\\xfb\\x94\\xafM\\x0b\\xd0r\\xfc\\x8b\\xd1\\x85q\\x8b\\\\\\xdf\\xe3\\xce\\x14\\x99\\xc6\\xce\\xe2=\\x14\\x9f\\x1b\\x98i\\xaf\\x94\\xdd\\xfay\\x11\\xb3OiZ\\xce&\\xde\\x19\\xf4\\xad\\x92\\xdadJ\\xadF\\xd3\\xb5RB\\xe7\\xa7\\x84\\xc5g8.fe>\\x11\\xfe{\\x9eD\\xcf\\xdd\\xd1\\xc6\\x0c\\xd4\\xd0\\xcb\\x18\\xa6\\xc6\\x81Ez\\xaa\\x85\\x0e\\x86\\x1a\\x8ax\\x19O\\x8a\\xb7o7\\xab\\x06\\xacT\\xc8\\x92^\\xc8>\\xcdA\\xfeH\\xd9[\\xd2y\\xeb\\xa4\\xfd\\xa9\\xe1\\xfc\\x8d\\xece+)\\xf1\\x9b\\x86u\\x95\\xdb\\xab\\x1f\\x166\\x01\\xe3"\\xfd=H\\xd3A\\xae6\\x9d\\x82\\xbe\\xed\\x82\\xa8\\x99.8\\x9fq\\xbe\\xdd\\xb8\\x90Z\\x91\\xe4\\xfbO\\xb9$\\x96\\xc7{\\x86\\x8c\\xba\\xcd\\x1a\\x0b\\x8b\\n\\xd5\\xb9i\\xbe\\xacZ\\xa7\\xb8\\xf0:\\xb0\\xe8H;(\\xc55\\xc0\\x90\\xb6\\xb0\\x89/\\xca\\x8fmfQ\\xd6\\xa1;Pc\\x19G\\xf5\\xedK)]V\\x88K\\x9e\\xdc\\xa8Y\\xc4\\xc2\\x00\\xd9nS\\xbd\\xb29\\xaf\\x8e6\\x17xX\\x13\\xf2?k\\x97\\x8d\\x0cA\\xee\\x8cc"\\xc1C2\\x7f2TQW\\xa6\\xf4\\xd6\\xc4N]\\xc4\\xd3C\\xc9B\\x86\\xcba\\xdc\\x930$\\xc0s\\x87\\xb3c\\x8a\\xb6\\xaa_\\x88`\\xa4\\x84\\xe5\\x95!\\x85\\xe8\\x11Q\\x1fI\\x05\\xdb\\x19EY6\\n\\xcb\\x8dM\\xd8\\xc9\\xfcK\\xb5E#Ja\\x98}\\xcd\\x1dI3o\\xf9D\\x81jk\\xbb\\xd6\\x0c=\\xeeE|\\xa2\\x14h\\\\\\x87\\xad\\x05J~!\\xb2i\\xe4\\xf05I\\x89\\x87\\x026\\\'\\x85\\xd1\\xc7\\xcc\\x1c"\\xcf\\x9e>\\x0b\\xe8g\\x7f\\x9b\\xa3\\x8er\\xcb\\\'o\\xfds\\xf5]\\xe4\\x13Y\\x17\\xcf\\xf2\\x13\\xdf\\xaf\\x8cP\\x04Lg\\x89\\xef\\xea\\xd8\\xe0\\xcd\\xe9}\\xe9O {\\xfc`\\x85\\x99QB>I\\xd9\\x04z\\xf4p\\x85\\xce\\xc1\\xead\\xfa\\x0f+\\xa8\\x94F\\x03A.\\xa1p\\xdegD\\xce\\xb8R@\\xd6qy-\\xc5\\x1d\\xdc\\x82\\xce<\\xe9$\\x03\\x9c\\xbcN\\x8d/I\\xd6\\x04\\xd6\\xe4)?E\\xd8\\x82\\x8f?\\xcc\\x15\\xaaR\\xf3\\xb8E\\xc9\\xab\\x03\\xfc&\\xf6+\\xe1\\xe1\\xa6\\x8d\\x1c\\xa4\\t1/\\xa4\\x0f$id (\\xd8y\\xb1#\\xab\\x03O\\x14\\x08B;e\\xbc-]l\\x98\\x9b\\xbc\\xe6\\xcaq-\\xf5\\x19d\\xc7\\xe8\\x86\\tiFx\\x02\\xf3U\\xda\\xcd\\x0e\\x8a#\\xb8\\x02\\x9f\\xee\\xe6q\\xe7~\\x15\\xa7\\x0c\\xf0\\xbb\\xfaa\\x07\\xed\\xe2!\\xf1}#\\xd1x<*3\\x16\\x80K\\xc4q\\xcf\\x92\\xdf+\\x97\\xc14\\xf7\\x91\\xb8\\xbb\\xa1l[\\xd2\\x1f\\xa0i(\\x12\\x9f\\xb5\\x0e\\\\Rn\\xe6\\x8e\\xd6U\\xff\\xee\\xd7\\xcd\\xbe"\\xae\\x1e\\xca\\x86\\xb5QU_\\x15.\\xe9\\xf1\\x80\\xae\\xcf\\x98t5\\xe5\\xe3\\xdd\\xd2\\x9d\\xb6Ncln\\xf0\\x8a\\xad\\xab$\\x07\\xf3:|\\x0f\\x97\\xe4@\\x8f\\x062\\xe2\\xdf\\x8e\\x90\\xd6=\\x02\\\\hr\\xd7\\xef\\xb5\\xf3\\xc4\\x90\\xb5\\xc2\\x14v\\xc8&;8\\x04\\xd1\\xef\\xa8-\\x8c$\\x08T.\\xdd\\x02S\\xcd\\xac\\xeb\\x128\\x84\\xa7\\xb1\\xc8\\x08vK*\\x88\\xdeO9r\\xb9G\\xb8f.\\xd9I\\xa9\\x96y\\xf2\\xc4\\xad5\\x9f\\x11\\xf5\\xf3\\xe9\\xc8\\x1d\\x15\\x1cR\\xbd?\\xd5R\\x89\\xaf\\x9b\\xc0\\x98\\xc2\\x13;\\xf8\\xa0\\xfb\\x90G#\\x9cV\\xbb\\xe5\\x1a7i\\x1e\\xbb.\\x1b\\xd5\\x7f\\xa4f\\xd0\\x05\\xbc\\t\\xeac,\\x8d\\xb0:\\x8a8\\xd9\\xfc\\xb4\\t\\xe1*v \\xdaM[\\xac\\x17\\xec X\\xd2\\xcdU\\xb3\\xe3;\\xf9\\xe8A\\xe2T\\xcfV>\\xb2}\\xe2T=+y\\xa5\\x90\\x18?I7Z\\x1at\\xb43>\\xfb\\xea\\xe4r\\x92~(\\x88;\\x11;K>\\xa3h\\x95\\xa7\\xd8Z\\xf5\\xda\\x10\\xb5\\xb8\\xa6 W3\\xa8\\x8b\\xb6\\x05\\x07w]\\\'t\\xfb\\xd3hR\\xddx~\\xcb^h\\xf6\\xc3q\\x02\\xed\\xc2\\xc2d\\x9f\\xcb\\x93#\\xb2\\x88W\\x9e*\\xd342\\x87HQ\\x92\\xb6Cl\\r\\x1b\\x18\\x19\\xaaxF\\xd3\\xb0T3y\\x87\\xa8\\xf2\\xa9!\\xa7\\xd0L\\xc0\\x97Q\\x9f\\x1f\\xd4Z\\x82w\\xef\\xea\\x13\\xaf\\tL\\x9f\\\'\\xd5\\x98\\x1b\\xdcT\\xeec\\xe8fSsK\\xc4,V\\xfb>\\xc9\\xfb\\x9a\\x8bc"\\xec\\xf0\\x7f\\x00\\xbdX~4\\nendstream\\nendobj\\n25 0 obj\\n<< /Filter /FlateDecode /Length1 1428 /Length2 6804 /Length3 0 /Length 7773 >>\\nstream\\nx\\x9c\\x8dU\\x07T\\x13\\xea\\x92\\xa6\\xa94E\\xe9\\x9d\\xd0AZ\\xe8RDj\\xe8\\xbd\\n\\x08\\x84$@(\\t\\x84\\xd0\\x05\\xa5\\tH\\xef\\x08\\xd2\\x05$4\\xe9\\x1d\\xa4#\\xbd\\x0b\\x08\\xd2\\xa4\\t\\x82"U@6\\xea}\\xef\\xee}\\xbb\\xe7\\xec\\x9e\\x9c\\x93\\xfc3\\xf3\\xcd\\xfcS\\xbe\\xf9\\xc3\\xc9\\xaag(\\xa0\\x00E\\xda\\xc2@H\\x04Z@X\\x10(\\rP\\xd2\\xd6V\\x97\\x00\\x00\\x81\\xa2\\x82@\\xa0\\x081\\\'\\xa7\\x11\\x1c\\xed\\x0c\\xfbKM\\xcci\\x02C\\xb9\\xc3\\x91\\x08\\xe9\\xff\\x06PB\\xc1\\xc0h\\xacN\\x19\\x8c\\xc6\\xe2\\xb4\\x91\\x08\\x80\\x86\\x873@X\\x14 ,!-,)\\r\\x04\\x02D\\x80@\\xa9\\x7f\\x01\\x91(i\\x802\\xd8\\x13\\x0e\\x05h\\x0b\\x024\\x90\\x08\\x98;1\\xa7\\x12\\xd2\\xd5\\x07\\x05\\xb7w@c\\xaf\\xf9\\xd7\\x11\\xc0\\x03\\xe1\\x05\\x08KII\\xf2\\xffv\\x07(\\xb8\\xc0Pp\\x08\\x18\\x01\\xd0\\x06\\xa3\\x1d`.\\xd8\\x1b!`g\\x80!\\x12\\x02\\x87\\xa1}\\xfe\\x11\\x82G\\xd6\\x01\\x8dv\\x95\\x16\\x12\\xf2\\xf2\\xf2\\x12\\x04\\xbb\\xb8\\x0b"Q\\xf6r\\xbc\\xfc\\x00/8\\xda\\x01`\\x00s\\x87\\xa1<aP\\xc0\\xaf\\x82\\x01:`\\x17\\xd8\\x9f\\xca\\x04\\x899\\x01F\\x0ep\\xf7?zC\\xa4\\x1d\\xda\\x0b\\x8c\\x82\\x01\\xb0\\ng8\\x04\\x86p\\xc7zx \\xa00\\x14\\x00{9\\xc0P]\\x0b\\xa0\\xeb\\nC\\xfc\\x01k\\xfd\\x01\\xf0\\x03\\xfe\\xea\\r@XP\\xf8\\xdf\\xe1\\xfe\\xf2\\xfe\\x15\\x08\\x8e\\xf8\\xed\\x0c\\x86@\\x90.\\xae`\\x84\\x0f\\x1ca\\x0f\\xb0\\x83;\\xc3\\x00\\xba -A\\xb47\\x9a\\x1f\\x00F@\\x7f\\x01\\xc1\\xce\\xeeH\\xac?\\xd8\\x13\\x0cw\\x06\\xdbb\\x01\\xbf3\\x07\\x03@\\n\\xfa\\x000\\xb6\\xc0\\xbf\\xcas\\x87\\xa0\\xe0\\xaehwAw\\xb8\\xf3\\xaf\\x12\\x85~\\x85\\xc1vY\\x05\\x01UB\\xba\\xb8\\xc0\\x10hw\\xe2_\\xf9)\\xc3Q0\\x08\\xb6\\xed>B\\x7f&\\xeb\\x84@z!\\xfc\\xfe\\x12\\xec\\xe0\\x08\\xa8\\xdd\\xaf"\\xa0\\x1e\\xaeB\\xc6\\x08\\xb8\\x9b\\x07L]\\xf9/\\x08VE\\xfc\\xb7\\xce\\x1e\\x86\\x06\\x88\\x03\\xefI\\x8a\\xde\\x13\\x06\\xc0\\xdc\\x000o\\x88\\x83\\xd0\\xaf\\xf0F>\\xae\\xb0\\xdf\\xc6\\xdfjl\\x05\\xfe~\\xaeHW\\x80\\x1d\\xb6\\x08\\x98?\\xdc\\x0e\\x86\\xfd!\\xf6s\\x07{\\xc2\\x00h\\x94\\x07\\xcc\\xdf\\xef\\xbf\\x1b\\xfe)\\x11\\x0b\\x0b\\x03\\xa0p\\x08\\x1a`\\x0b\\xb3\\x87#\\x88\\xff\\x8e\\x8eU\\xc3\\xec\\xfe\\xc8\\xd8\\xe1\\xa3\\xe0\\xde\\x00\\x0b \\x96{\\xc2\\x00\\xe0\\xaf\\xcf\\xbfO\\x8f\\xb0\\xf4\\x82"\\x11\\xce>\\x7f\\xc3\\x7f\\xcfWH[\\xeb\\xa1\\xb9\\x8a\\x19\\xdf\\x9f\\x8a\\xffmSTDz\\x03\\xfc\\xb0w\\n\\x88\\x88\\x03\\x01\\xc2"b\\xc2\\x00I\\xec\\xc1\\xff\\x9fQ\\xf4\\xc0\\xf0\\xbf\\xb2\\x00\\xfe\\xed\\xaa\\x8e\\xb0C\\x02\\x84\\x81\\x7f\\xb2\\xc5\\xb6\\xe9_\\x19{\\xfeE\\x00\\x9e\\xbf\\x96\\x83\\x17\\xf0\\xcf`:H,ka\\x00\\x9e\\xbfIn\\t\\x14\\x07B\\xb0_\\xc2\\xffo\\xaa\\xffv\\xf9\\xdf\\x18\\xfe+\\xca\\xffE\\xf2\\xffL\\x08\\xe4\\xe1\\xec\\xfc\\xdb\\xcc\\xf3\\xdb\\xfe?\\xcc`\\x17\\xb8\\xb3\\xcf_\\x00,i=\\xd0\\xd8\\x05\\xd0Fb\\xd7\\x00\\xf1\\x9fPS\\xd8\\x9f\\xa5\\xd5\\x86A\\xe1\\x1e.\\xffiUG\\x83\\xb1\\x8b\\xa0\\x80\\xb0\\xc7\\x92Y@XL\\x10(\\xf6G\\x0fw\\x07\\xc1\\xbdaP=8\\x1a\\xe2\\xf0\\x872\\x7f\\xf4\\xc6\\xbfV\\xcd\\x19\\x8e\\x80\\xe9!\\xdd\\xe1\\xbf\\xde\\x16\\xac\\x17\\x10\\xf8\\x1f6\\xec~A\\x9c\\xb0\\xef\\x87;\\x96\\x97\\x7fL`w\\xec\\xb2\\xa1\\x7f\\x8f\\xf1\\x97\\x0c\\xc3\\xae\\xd3?\\xf3PA@\\x90\\xd0_{\\\'".\\x01\\x00\\xa3P`\\x1fb\\xec\\xe8\\xb1\\x928\\x96\\t\\xd8\\x05\\x85\\xc2\\xbc\\x7f3\\x1b $\\x88@\\xa2\\xb1.\\x00l\\xcd\\xfe\\x00;$\\x8a\\xf8\\xd7\\x98\\xa5$\\x01B\\xe0_\\xaa?\\xd2=\\x80\\x90\\xed\\xbf%a \\xd6\\xe8\\xf4\\xb7\\x88\\xa5\\x87\\x10\\xe2\\xb7\\xf8\\x8f\\x14 \\x1e(\\x146\\xc7\\xdf\\xcc\\xc1\\xe6\\xf7/\\xf9\\xf7;\\x00\\x83y\\xc3 \\xc4s3H\\x88L\\x88cUH\\xcb\\xe9\\x1b\\x05\\x06/\\x81\\xf5\\x11\\xd9k\\xfbi\\xa7f"\\x02#\\xaf\\xac\\x08\\xd1=*\\x13\\xd6+\\t\\x86\\x99/\\xe751\\xa0\\xb9na\\x90\\x95c\\xbb\\x8e\\xa2\\xdbi\\xd6\\xc7\\xf7\\xdf\\xfd>U\\xb3\\xd4\\xf8\\x88\\x1d\\x0b\\xb0\\x80\\xb6\\xecYl\\xe3f\\xae\\x8eq\\xa7\\x12\\xfdN\\x18\\xd9f\\xc8\\x1aprMS\\x14\\x99\\xa5\\x8bP=8zL\\x91\\xb7\\xdf\\x12=\\x80\\xda\\xf7\\x18r\\x92=\\xe6\\xae\\xea\\x9aM\\xf4\\xe2\\xa2|\\r\\x92\\xd4\\x08m\\xd1i{\\xfb\\xe6\\xf5K-jF)\\x93\\xddU\\x03t\\xa3m\\xbf\\xd1\\xba\\xf8!-w\\xf6\\xaaKl\\xf0Z\\x94eD\\xaaN:\\x9b\\xa6l\\xdb\\x19q\\x82W\\xc5\\xed\\xe5\\xbe\\x81\\xfe\\x85;\\xddL\\x1d\\x91\\x81\\x1a\\x9eA\\xeb_9\\x9e\\xa1\\xef\\xa8\\xc8\\xf43*\\x8b\\xdd\\xa80Y\\xc8\\xbbu\\x91]\\xe4\\xb9\\x93N\\xeeg\\xabJ\\xa1Dm\\xa8\\x9d\\xcbj@K\\xdc\\xaf\\x94\\x97\\xd4\\xb8Oky\\xc1~\\xc3\\xcc\\xf1e\\x84C"\\xf1\\x0e-Yk^\\xfaf\\x81\\x03\\xf2i\\xea\\x99\\xa8xg\\xf0\\xbd\\xd4\\xec)\\xb60\\xfb\\xe7~P\\xd9E\\x90\\xc1\\xd3\\xb6\\xc6\\xf7a\\x03\\x134\\\'s\\xd7\\x96\\x07>9\\x93\\xbc\\x1dk\\xe6y\\xc9\\xfe\\xd8\\xa1\\xf4\\xf5\\xc1\\x93\\x80A\\x05\\xc3H\\xc7\\xb4r\\x88\\xb9\\x80\\xa0i\\x0el\\x86"\\xb7\\x9b\\xfc\\xae\\x17\\x04Hr\\xd2\\xa8*\\x9c*\\xeb\\x9d\\xd5\\xf3\\xea \\xad-T\\xda\\xd8\\x81\\xdb\\xf2*\\x1b\\xc3\\xd2Hi\\x00gb\\x9aG\\xda\\x92\\xc6M[\\xf0\\xec\\x02\\x0e\\xbc\\xcf\\xe2o\\xb4\\xe2\\x07\\xbe\\x98\\x16ME\\x9b\\xb4\\xbc\\xc3<i\\x9b!\\x04\\x17\\\\\\xd2\\xdd\\n\\xf18h`vb\\xc6\\x97\\xa7\\x91)+<\\xb0\\xfe.\\x9aBz\\xfd\\x07\\x95\\xdbh6\\x89\\xc5\\xd8\\x16\\x9e\\x97\\x05y\\xe7\\x93%\\xd4N\\xab2opq\\xcc\\xc0]\\xbcm\\xfd\\x83\\xd1\\xe6\\x0f\\x84\\x0b\\x1c*\\xdfh\\xf7\\n\\x16\\x0b^G?\\xad\\x1f\\x01\\x9e\\xb4\\x8b\\x97\\xc9\\x13c2>\\xa4!4H!\\xb6\\x1f3:\\xadJ&\\x08\\x13\\x91\\xfa\\x9b\\xe97\\xd2j\\x82\\xb9\\x07,\\x845\\x14\\x1f\\xd5\\xb0\\xcd\\xc51\\xdf\\x0eV\\x80Ghcp\\xeeR\\xf0H>u"\\xcd{\\xe6\\xb9=\\xfd^\\xdfSA\\x85\\xc5\\xb0Q\\xb8\\x8fnV\\xc9\\x8f+e\\xe9k\\xe9\\xfc`\\x7f\\x88\\xe5|$\\x97\\x10\\xb1\\x82\\xda\\xbb2E;\\xc2G\\xba\\xc2\\x98by\\x93\\xc4\\xbc\\x81\\xb9U\\xa40Zz\\x98\\xbe\\xbc\\xd5F\\xb9\\xea\\xecS\\xf4>\\\'Y\\xe8:N0\\xa4\\xff\\xfb#\\xcb|\\x96\\xe3\\x00{\\x87\\x9d\\n*(1\\xef\\x99\\xee\\x07\\xfe!\\xd1<F\\xfd\\xe4\\xe2\\xeds\\x10iD\\xac\\xb5lYA\\xd3b>i\\x19\\t M%\\xe5J\\x11,\\x9b\\xb2D[w\\xca\\xd3\\x181\\x14\\xe5\\xfe\\xa8\\xcb\\x8f\\x11\\xad\\xc5\\xbb\\x08x\\xf5m\\xfd\\xfde\\xc2\\xc4Gmn(\\xc3\\xc2\\xee\\xfd|\\xe9hA/\\x12\\x8eP+\\xde\\xb7<d\\xa9\\xbe\\xe1\\xbcT|MI\\xf8\\xb1\\x84\\xea#5\\xa4\\xec\\xe9\\xd7L\\xf5\\xe5E\\xde%3\\xa8\\xe2\\xca\\xd3\\xcf\\xe3\\xce\\x8b\\x1e\\xd8:\\x1fxujL\\xee\\xf4\\xd5_ff\\nq\\x81[\\xcb}\\xf1\\x97\\xee\\xb4DG\\xb7;\\xe6\\xa44\\x9d\\x87\\n$x\\xf2F\\\'\\x01\\xb0]\\xcd\\xd8i\\xd7\\xc1\\x08g|H"\\xef\\xf5\\xeb;\\xa9\\x13\\xa5C\\xacW\\xce\\x08\\x12(\\x84\\xf5\\xc5lu\\xf74!\\xdac\\x1f\\xec\\x81Z\\x7f\\\\\\nD\\xb0HoA-\\xfd\\x8b\\xa3F\\xfa+\\xc4*\\xf7\\xa4R\\xd5\\x94\\xd9\\x19Y\\xa6#\\x1f\\xc4\\xc4\\xdd \\x8a\\xaeJ\\x8c\\x0e\\x9b\\x1e\\xa2/\\xd7`\\xec\\xc8\\x14;~z\\xa4=B\\xb77\\xb1\\xef\\xae|\\x7f>%\\xa1\\xcc\\x10v\\xccm}?\\x05\\x9bhC\\x8c\\xb9L(\\xf5\\xfe;^\\x0e\\x01\\n\\x11\\x7f\\x1f\\x19)\\x9a\\xee]\\xd7\\xeek\\xd7\\xa23$\\xbd"s;x}\\x19\\xc7,n\\xf1\\t\\x93wr`\\x06o\\xe3\\xdeWj\\x0e\\x08j\\xb7e\\xd4\\x94\\xd1\\x83\\xa5\\xe6\\xfb\\x93Y\\xa1\\x02\\xd5>\\x02i\\x12\\xce\\x08\\xb2\\x87\\x05k\\x05J\\xd4\\tlFV\\xaa\\xfa\\xe7N\\xdc%t\\x92j7\\xa4\\xd4\\xd0A\\x90\\xf9"\\\\J\\xaa\\xb4\\x0b\\xa9\\xe8\\xcf">\\xb2n\\x835\\xeb\\xa1\\xf7k\\x8e\\x11V\\xc7:\\xbdHw\\xed\\xee\\xa5H\\x8e\\x85)\\xfd\\xa4x\\xfd\\x06\\xb6{\\xd2\\x85Q\\xd6\\xa7\\x9e\\xed\\x94\\xe92\\x81C\\xac\\xb9w\\xf0\\xb3\\xd0{\\xe3"\\xc6\\xabo\\xa8\\xea\\x85\\x14\\xb6\\x89\\x1d\\xae\\xc2\\xbd\\xf5\\xbc\\xb4r}\\xb7\\xa2\\x9eu\\xfc\\xec\\xe6H\\x1b\\xd1\\xfd|\\xb1\\x82\\\'o\\x15$0KQ\\xb1K\\xe0&bRuzH5\\x06q\\xf4\\n\\x19\\xde\\xcb\\x0b\\xc2\\xd537{ \\xbe\\x1fE\\xc0\\xf69\\xe2\\xb2\\xc5\\xb0W\\xe8\\xb2\\xdd;a\\xd3\\x0b\\xa5\\x9fqLP\\x14\\x02_f\\xe8\\xbb\\xc2\\xdd\\xce\\xe2\\x85}>>C\\xe9\\xf3\\xa58\\xdf\\xa3L\\xdf\\xc4yT\\xc5\\\'a\\xcf?*\\xa46\\x98\\x93\\xcez\\xdb\\xae\\x15\\xb0\\xaa^{\\x913\\x12\\x97`y&\\xfc\\x8d\\x92S-\\x81\\xc4\\x08\\xc7\\x03\\x99\\x1dq\\xbe\\xb0n\\xf5\\xdc\\x9d\\x85\\xbe\\xdc\\x13U\\xc9\\x1f\\xb5\\xbdE\\xf1h\\x8a\\x0e=\\x0cn+zi\\x1bB\\x9e%\\xabe\\x91\\xec\\xa6@\\xd1\\xd6\\xcb\\xa0"\\xbd]~\\xbb\\xda\\xfc\\x03),\\xda\\x9fA\\x16\\xef]t\\xfd\\\\\\xefx@4(\\xf3{A\\xed@\\x99\\xc9\\x00e\\xa2k0\\x88\\x9fQ[\\x93s\\xf4\\x06\\xde\\x90\\x92\\xd7\\xeb\\x17\\x0e\\xb6\\x04\\x1e\\xb4\\\'\\x8d\\xed\\xfc\\xdb4+\\xc8\\xb5~\\xab\\xd6\\x83\\xc2\\xd0[\\xcb\\x96&5"\\xfb<\\x9c>Z\\x0c\\xafu\\xd4%_}\\x92\\xab3\\x9d\\xd1\\xea\\xa2\\xd9@\\x0f\\xe0\\x1e9n\\xa4=\\xbbR\\x1d\\\'\\xe5\\x9dZ\\xcb\\xa2w\\x16\\\'\\xedN\\xa7\\x12\\xdb\\xd9\\x96\\xc8\\xc5\\xd8\\xdb\\xe9]\\xd1\\xb44\\x1c\\x9d\\xebg(\\\'hIw\\xeck\\x10\\x9f\\xf2V\\x1b\\xf1\\x8f\\x15\\xb9\\x99\\xec^\\x14\\xd8\\xf5\\xa8m\\xc1\\x8c\\xd7\\xbf\\xc4,`T\\x07R0\\xec\\t\\x11\\xf7jc\\x17"O\\x18\\xae\\xbe\\x08\\x1a\\xc5\\x17\\xae\\xf3\\xeb\\xb9\\x13\\xf0o\\xd3\\xb3\\xde\\xea%\\x8agl\\r\\xa9.+\\x8aE\\x1f\\xe4h\\xa7M2\\x95\\x1f\\xb8\\xf9k2I\\xb4\\xce;\\xa1\\xbd*\\xb6?\\x833\\xa5,\\xf2\\xc7\\x02"\\xe5tJ\\x7f\\xbcLp\\xde\\x1d>b\\xf6q\\xbe~m\\xc2\\xd1\\x92f\\xa8T\\xeddE\\xab\\xe28\\xee\\x00\\x92\\xbe\\xd3\\xdb\\x8c\\xbf?\\x1d\\x87\\xb7\\x86\\x03|0\\x86\\x8c\\xfa\\x91\\x16\\xc2\\x99I\\x1d\\x19.\\x87)\\xba6\\xc1\\xf2B+\\xf0\\x92\\xfeK#\\x83\\xc7\\x93\\x1a\\x88\\xc8\\x86\\x07\\xf9\\xac\\xf1\\xcf\\x1d\\xba\\\\\\\'\\xcd\\x83i\\xe0bu\\x91wx\\xca\\xd0M\\xe6\\xe6\\xa5\\x17\\x94\\xbe#\\x18\\xd2< \\xd8\\xebY\\xd4\\xb4\\xb8\\x06\\x12\\xb7.\\x99r4\\x83\\xc3\\xfa\\xec\\xf0\\x0b}\\xc1\\xcc\\x0b\\xd3\\xca\\x03m\\xf3@\\x87s\\xce*U\\xf9\\xbc$\\xad\\x00!U\\x91w/\\x9f@\\x9b\\xec\\xc5\\xb3\\xe8\\x8ft<\\x10.Y\\xc0>\\nV\\xba\\x9b6\\x17\\xa9;:\\xc2\\xf7\\x1b\\xad\\xbfe\\xde\\xb6z\\x19\\x96\\xdd\\xeb\\xd4$\\xf5\\xb5\\xea<\\xfe\\nt\\xb3\\x91CD\\xbe\\xdf\\xcb\\xe9\\n\\\'\\x94\\x00\\x1aJ\\xa7\\xfc\\x8d<[\\x1bV\\xee\\x039\\x0fZ\\xb86\\x05\\xd8{\\xba\\xb8[8\\x11\\xce\\x05\\xcd\\x99L\\xdb\\xe7\\xfaAa\\x96\\xf5P"\\xf5\\xf3\\x06\\xf1EG\\xedR\\x0c\\x13W\\xcf\\xc8\\xfcI^\\xff\\xf8\\xe5\\x90\\x968\\\'\\xc3\\x0f\\x07\\x95\\x10G\\x1a\\xb1\\xdee\\xf6f:\\xe3\\xbb\\xf9\\x97\\xdc\\xd0w\\xcd\\x87\\x03\\xf6\\x0c\\xe9\\xc7\\xd5\\xa1YUy{,\\x0e\\xec&\\xcbM\\x96\\x19\\xa2.K\\x16n:\\x8b\\xb7d%\\x80\\xacW\\x99\\x83"%r\\x01v,\\x16Ax\\xdf\\x04,f3\\xda\\xf5w\\xa3\\xbc\\x9c\\x96]S\\xdd\\xa5\\xeas\\xa7\\x95\\xb4@\\x86G\\xa1\\xddM\\xeb\\\'n\\xfd\\x86]\\x85d\\x1d\\xecq\\xe5\\xa8\\xc2[\\xf6\\x04w\\xfc\\xd8_2\\xdb\\xe5\\xd86l|\\xa0\\x9b*\\n0\\x8bRVO\\xe6,\\x95\\xb6arY\\xeeDi\\x0b\\xcd\\xaa/;\\x8e\\xf4\\xe1\\xdfB\\xbe\\x8d\\xe9m\\x89L\\x1a(\\xf6\\xf9\\xa1u\\xe02\\xae>VK\\x10\\\'d\\xb6\\xad6\\xb4)\\xd2:\\xd9\\xb2\\xccu\\xc9Z\\xf1\\xb5\\x96\\x8e\\xb7\\xfb\\xd2\\x02V$\\x10`2Q\\xdd\\xb4]\\xc4\\xf1\\xe0\\xfd\\n\\x07\\xb2\\x83\\x9d\\xca\\xe4\\x8b\\x92\\xfd\\x0fC\\xbaX\\xdd4\\xd5C\\x07\\xfd\\xc7t\\xf4\\xe7\\xf1\\x04\\x06\\x95\\xb9\\x92\\x1e\\x94{\\x9b\\x1eQ\\xa4\\xe5\\t\\xca=n\\xbb\\x02\\xdeQ\\xb2\\x0c\\x86\\x07?\\x8c\\\\\\xbe\\xae\\xeb\\x1dH\\x9c\\xaa\\xefE\\xe4\\xf3\\x1d\\xcev\\xcf\\xc4R\\x17\\xe5F\\x90\\xab-\\x1bv\\x8eq\\xd1~\\x1fW\\xb0\\x15\\x0c\\x9cI\\x08c/#\\x04\\x81/\\x8f%4\\xc3\\xc7\\xe5TC0\\x86\\xa3\\xb4\\xb5%$\\x19\\xab\\x1d\\xf0\\xba\\x8a\\xe5\\x8fw\\xbb+\\xf1\\xd3\\x1c\\xe6[}\\x86\\xf8\\xe3Z\\x0c\\xbeS|\\xaa\\xfd\\xb4R\\xc0Xd\\x0f\\x9dL\\xa0\\x8c\\xa17\\xfa 3\\xdd\\xac\\xd0\\xe9\\xf7\\x08#\\xf8B\\xfd\\xf0h\\xe4S\\xb1i5\\xdbZ\\xc5\\xb4m\\x8f\\xb4\\x1dM\\x89\\xd9\\x1d\\xed\\x8e^\\xaaC\\x15\\xb9\\x8b\\xc49\\x1d\\xeb@)\\xa1\\xd4\\x88^V*\\x9c\\n\\xcaT\\xdd\\xe52^\\xb6\\x17\\xda{DO\\x11\\xb5\\x1a\\xa9)\\xe3\\xdfe\\x18\\xf2\\xeeI\\xf1\\x9b\\xafd\\xdd|^:\\xdfBFuS\\xa106H9\\xeeU\\x942\\x9a[=\\xbd\\xadK\\x0e\\xa2~1\\xcd_z2\\xd1?\\x10\\xbc\\xbcG\\xdf\\x9e\\xb4N\\xf5*}\\xf5u\\x88_\\x10\\xa5n\\x13c@2~\\x8b)\\xcb\\xa9\\xd2eb\\x87\\x02\\xbb"f\\x82\\x1cc\\xcc\\xd70 \\xa6h\\xd9\\x97\\xcbD\\x80g\\xdc\\x98\\xd4%0m\\x89c\\xb5>\\xf3\\xcd`]n\\xa8\\x8f\\xd4b&\\xddt0~\\xf3\\xfaA\\xb6\\xc6\\x85\\xf0\\xc5p<\\x93+\\x8dI\\xe0\\x06\\x8b\\x0f\\xa4r\\xb1/\\x8bP\\xe9\\xe8\\xb9\\xef\\xd9f\\x15\\xcd<=\\xfd\\xe4\\xd4\\x97\\x82z\\x96\\xa7B\\x0f\\xb2\\xa0G\\x02\\x17buQ\\xbe\\x1eYU\\xfd\\x1c\\x9bZC\\xaa\\xfb\\xfc\\xd7d\\xe3\\xf6\\xf9"\\x8c_\\xbf\\x9e$\\x9c\\xe5L\\x137ty\\xfam\\xc0_\\xb63\\x8cJ\\x97\\x04\\xf5\\xf4",\\xe9\\x8c%\\x8b\\xb7\\xfb&wk\\x9bie\\xcd\\xf2\\x17XU\\xa1\\x1b\\xf5\\xe5l\\x1a\\x94\\xfc\\xcc\\xbb\\xabS\\xe7\\xa8BBs\\x8a\\xce\\x8en_\\x95\\x88]{\\x17\\x16\\x90\\\\\\xdc\\xfc\\xb0\\x94d[q\\xa2\\x83\\xcai\\xec\\xe1@)Q\\x92S\\xf6\\x03\\\'\\xaf\\xcf\\xc9\\xa8\\x99\\xc8\\xee\\xee\\x1b\\xd3\\x94\\xe7\\xfd\\xe5\\x8e\\x85l\\x124\\xcb\\x9ad 8%\\xe7\\x83\\xca\\x85\\xfb\\x98\\x93i~\\x1b5\\xe2\\xcdx\\xef\\r\\xd8\\x97\\xe7;\\x05\\xbc\\xd9F#\\rZ\\xe5j\\x190\\x99l\\xfa\\xf1\\xd6\\x1a\\x85\\x9e\\xe8\\xa2\\x8d]\\x121\\xc7\\xb0p\\xe6\\x1b\\xc6\\x84Nd~\\x05Y\\xb5\\xaes\\xc7*`\\xeeF\\x99\\x0e`1M\\xdd\\xcd\\xa3\\xc4\\x10I\\xb7\\xe7_\\x9e\\xc3\\xc6\\xef\\xd4\\xcd;ih\\xdb\\xff\\xc8\\xa7J9\\x14\\x9a\\xef\\x92\\x9c\\x98S\\x82\\xd1Bn`\\xaa!\\xfem\\x1c\\xafC\\xd7\\xca@\\xde)\\xe1\\xf1P\\xeb\\xcex(\\x1f\\xf7\\xe8S\\xf0\\xc6[?%\\xed3\\xb2o\\xeb\\xde+_\\xde\\xf2\\xbe\\x1f\\xf5c\\x7fu:\\xa9\\x9f\\xd1\\x15\\xe7\\x1f\\xef6yV\\xda\\xde\\xb6\\xe3\\x99\\xe6\\xdb\\xc0\\xba\\x10\\x91\\xce\\x1e\\x9f52\\xdcF\\xc3\\xc1v\\xf63\\xa7Kak\\x9c\\xa20\\xc3t\\x88\\xef:\\x1ad/\\xe5\\xe4\\x9e=\\\'\\xa4S\\x98\\xe2\\xa2hS\\x1a\\xc3k\\xf4\\xf91\\xec\\x99T\\xc2\\x1c\\x04/!\\x9c\\xcb\\xb6=\\xa6\\x80\\xde4/\\xdd/\\xbe\\xc0\\x98\\x813\\xef\\xc4\\xd8\\xf5\\xc9F\\xb1R\\x06\\xa9\\xed\\xa5\\xaao\\x90\\xec\\x86\\x10!/-\\x08j\\xc67\\x99O\\xb4A\\x95@c\\x03;\\x88\\xe5\\xdf\\x1a.\\t\\x0b\\xf2\\xaeSB\\xd1\\xb1PB7\\x89\\xf4>\\xcb{\\x8aG\\x8c\\xaa\\xd8\\x92\\xf4\\x9c\\xd9\\xdc\\xa8\\x99\\xf7\\xc8\\x87.\\xc3\\x0b\\x98w\\xd9o\\x9b_\\x9b\\xcc9\\x1a\\xcfz\\xce\\xfdB\\x03\\xcf\\xec,\\x92\\x178fRl\\xa3\\xff\\xf1:\\x06\\xad\\xe7\\xda\\xfd\\xfcb!I\\xde\\xd9a\\xc0c\\xb6\\x0b\\x90\\x8f\\x0b\\xa4z\\xa2q\\xed1\\x0e\\xf3\\x87\\xe2\\xac\\xe8\\x10\\xfe:\\xebL-#\\x88\\xc8\\x8f\\x8c\\xfdG\\xb8:\\xc0\\x16\\x958\\xa2\\xee\\xadv\\x99\\xa3w\\xcd\\xd8\\xd7\\xa3q\\xdb\\x18#m\\x13\\xbf\\xd1,\\xdd\\xdfd6\\xa7\\xf4\\x18\\xe3\\xea\\x0cP|*\\xb8\\xcb\\xd0\\xb8\\xecw\\x15\\xa1\\xfeC\\x8b)}\\xfa\\xb5\\xc4J\\xaa:\\x00C\\xfc\\xfcf8\\xf5Cf\\xfd\\xd5\\x85\\x933\\xdc\\xa8\\xea\\x1a\\x16&\\x8b8\\xdd]PL\\x8a\\x82\\x02\\x13\\x87`\\x94\\xea\\xc7\\x86x\\x9fNv\\xf0\\xbcP\\t^M\\x84\\x1e\\x88P/\\xee\\x0e9\\xdc\\xbc\\x0b:\\xdah\\xd8\\xf9>\\xf6M\\xe0\\x1b\\x90SA5p\\x9c"\\x90\\xd2\\xc0f\\xf4\\x8e`\\xb0\\xfa\\x8c\\xca\\xc1\\x80~\\xe9\\xa9\\xbd\\xe0\\rDW\\xb3\\x92\\xbc=k\\xf1\\x93\\xef\\x03\\x9e\\xc3W\\x1a*\\x94\\xee\\x9d\\x89U\\x91\\xcc+ \\xd5,\\xb4Y\\xd0\\xc88\\xdf\\xbd\\xc9\\xbcl\\xb2g\\xcfv0\\xc9\\xef\\xaa\\xc4\\xde\\xd1\\xdc(/\\r\\xa2H|M/\\x8d\\\\\\xc8\\xca\\x11\\xfeF\\x11\\xd2~pg\\xc4\\xf7B\\x04/\\xd6\\xa2\\x9f\\xee\\xc5\\xfd\\xcf\\xad\\x98|\\xca]o\\xc3\\xe2\\xadUF%i\\x13\\xf4\\xb4\\xc5\\x1a\\xf3\\x0e\\xcd\\x9a\\x0b\\x8ba\\x1b\\xdc\\xff\\xfcK\\xffs|A\\x15(\\xa6\\xc4\\xf6\\x84\\xbe\\xa4\\xc9\\xa4\\xe7\\xf9\\x8d\\xf5\\x0eV\\xb1\\xe2YA\\x17\\xeb\\x0f>\\x1f\\x02\\xbb\\xaa\\xa9.\\xa4\\x17\\xbb\\xea\\x8c\\xde\\xc4\\xc1sD\\xa9\\x82)\\x12\\x92E\\xa5\\x8d#\\x0c\\xd38\\x96n\\n>;\\xa7\\xd2\\x9e\\x93\\xaa\\xdd\\xb7\\xd6bg\\xba\\x11\\xfeQ\\xfcj\\xa2\\xda\\xa6\\xc0q\\xa9\\xbe\\xa6\\xd5W\\xd1\\xdf\\xde\\xcaT\\xf4\\t\\xcd\\xce\\x88\\xaaO\\xc1\\x89\\xb5\\x0cf\\xb9\\x9f\\x0f\\xfeZh\\xf5\\x01\\xa1<\\x15\\xe8\\x87p\\xef]m\\xd4\\xe8\\xdd ^\\xf1\\xe0\\x92\\xe0)\\xb57\\x94\\x06$p\\x84W\\xa0WMp\\xa5\\xb6<Q\\xb3S7\\x87D\\x1d\\xdb\\xd2\\x86\\x8c\\x9ft\\xa6\\xfa\\xddZW\\x04\\xe1\\x8b\\xd6\\x9f\\x03\\xa1\\xe1\\x82\\x0b<\\xfb\\x15\\x12\\xdc7j\\xc2G]Z\\xae^\\xb9\\x14\\x1c&6\\xea\\xd3\\x9b[\\xe5\\x03\\xcbC\\x9dj\\xed\\xe9\\xbe\\x06\\x14\\x89F\\x95C\\x1f\\xf3\\xaf\\x16<<\\t&\\xa5\\xffN\\xb1Q\\x96\\x9c\\xfe\\xcdf\\xec\\x87H\\x87\\x8aMJ\\xfa\\xda\\x12\\x0e\\x07\\xeei\\x8bi\\xe3\\xa66\\xa7K\\xec&\\xa1\\xfa}F\\xc4\\xab\\x91\\xf7\\xdf\\x87#\\x0cip\\xb3t\\xdf\\x16\\x91\\xbe\\x11(\\xa7&r5\\x02\\xfdp+\\x99\\x8aY[i\\xe9h\\x91xZ\\xff\\x94-a\\n\\xb5\\xf5T\\x93xd7\\xe3\\x92,\\xc5\\xce8\\x83?_N\\x88\\xda2\\x8a6\\xe0z?q\\xbf\\xa0gWV#\\x81\\xfc\\xd9\\xd0q\\xb2\\x0e\\x83\\xf1}\\xfcM\\xef\\xa7\\x1c\\x99\\xde\\xc7\\xf0\\x9f8TO\\x1c\\xa6wTh\\x9f\\xd7t\\x01\\x18\\x170)5D\\x927\\xbbY\\xc6Z\\xd2\\xda\\xb2|\\xf0b\\xa9\\xb0\\x95\\xef\\x158\\xec\\x9b\\x8dv\\x15dm\\xba\\xb6\\x89\\x9c`,\\x18\\x1a\\\'[\\x9d\\x02\\xc2\\x927+\\x1f\\xde\\r\\x1a\\xb9^F\\xd2\\xf2unB\\x1b\\xa28\\x8a2\\xb9:b\\x1e\\xcd\\xea\\xbf\\x9e\\xc7\\x9e\\xe0\\xfd\\xe0\\xe0\\xcdW\\xf3\\xa0h\\xb92\\xfeB\\xa8\\x8f\\x02\\xd9\\xe9T\\xc7\\xe3mb\\x16\\xb4)Id#Ti\\t>\\xdbx\\x91\\xad\\xaa\\x10\\x8fg\\x84\\xdb\\x13\\xb2\\x7f\\x11\\xbf\\xe9?8c\\xad\\xd4\\x88t\\x0e\\xaf\\x8c\\x86\\xcf\\xbe\\xff\\xf8\\x8d\\xcaE\\xd4:$\\xc4p"o\\x07\\x81\\x81\\x90?:4\\xac\\xeb`\\x95\\xd6\\x02\\xfd\\xe4\\xf1\\x1b\\xa1>\\xd9\\x9b\\xb3\\xd7\\xfb\\xec\\x9a3\\x92\\x05\\xfd*\\xc7\\xdb{\\x11\\x1a?Ih\\xfc\\xd2=\\xba\\xfa\\x02\\\'\\x8b\\xe7\\xcbx\\x82\\xa90\\xfcy\\x9d\\xe0\\xb87\\xe6\\xac\\x02\\xf7\\xf3\\xed\\xe8\\xe0\\x9a|\\x80\\xd4"\\x92\\xba\\xb4\\xc2\\xcd\\xc9\\xf9]B\\x84f\\xa4\\xd8\\xe54\\xc9pEPZ\\x96B\\xf2\\xd7\\x97$\\t\\xb0\\x9f\\x12\\xc1\\xfb\\xfd\\xbdT\\xb0\\xfb\\x1eAe\\xbe\\x1a<\\x91\\x04\\xb6ma\\xde\\x04uH\\xf9\\xc3\\x05-\\x16\\n@\\xe7\\xcf\\x9a\\xfa\\xeb\\xdd\\xd3c\\xf1[0\\x1a\\x1f\\xe2<\\xe5\\xfc\\xb9\\x15\\x11\\xa8@\\x99\\xfe\\xa7\\xc5\\xcf\\x04\\xbb8\\xfb\\xdcrLiO*\\xa5\\x98\\x05\\xb7<Y\\xa9\\x87G$W*\\xc3g\\xee\\x9e\\x90\\xfbp\\xf9m\\xbd\\xaf7\\xbd#\\x95\\xfe\\x9d\\xdeg\\\'\\xf94G\\xfb\\xc5\\x10\\x8e\\xec\\xbd\\xe3+N\\xc8!\\xc7\\x87\\x9b\\xe7\\x91\\x05k\\xb4\\xe6cm\\xa9\\xd2x\\x87gu\\xbec\\xccN\\x99\\x08W\\x89N\\x13z\\xc3\\xc4\\xdb\\xeb=2\\xa3\\x10\\x9c\\xc7\\x9e\\x05rOb\\xa9d3\\x93\\xf5\\xd9\\xbf\\x1d\\x08\\x0e\\xa1\\x9a\\x9e\\x158;\\x03:\\x98~4\\xfc\\xd4!\\x1ezy]\\xe0\\xd9E\\x12S\\xa3\\xa2F\\xdd\\tE\\x89_\\x9b\\xf8\\xcd\\xcdH)\\xc4Y\\xf5R\\x8d\\x0cM\\x0b4\\x1bg\\x9e\\xeb\\xdc\\x1c~\\x98\\xa7/\\xacE\\xee"M\\x95\\xf3\\xeaBdG\\xfe\\x13\\x1f\\x89O\\x80Z^\\xfa\\xf9\\x8b*M\\x8f[u\\xb1\\xa6\\x9e\\xd4:\\x10=\\x8ep\\x1a[\\\\I\\xae\\x88\\xa1b\\xb2\\xefxTU\\xa2k\\x18\\x97\\xe1I}p{Y\\x81Y\\xe0b\\xe7\\xd6xp\\x0e[]\\x06}\\x86\\xb77\\xb8\\xbf\\xef\\xc6\\x93\\xc1\\x9b\\xbe\\xb2xJ\\x0c{\\xec[_h8\\xdb#H\\x1durCG\\x1d\\x1aP1\\xf1\\x12\\x12KE\\xaa%CL\\xd6\\xd47h\\x99%\\xa2\\xdf\\x07\\x11\\xf4\\xbb/\\xfedgu\\xbbW\\xcd\\xa5Z[\\x82\\x9bvy>q\\xad\\xa5\\xa7\\xafC\\xab\\xb9`S:h\\xf5\\x85S$\\xa0\\xf5\\xae\\x89\\x03\\xe3\\x9a\\xe1K\\xcd\\xbd\\xd9\\x9eD\\xd1\\xec\\xa0\\xb33D=\\xa8\\x0b\\x14c\\xb3\\xbb*\\xe6\\xba#\\xd7\\xdc\\xbaC\\xfd\\xe8\\x80\\x97\\xd1*\\xa6E\\x7fQ!"\\xff\\xf5\\xe3\\xe2\\x9co\\xf3\\x19S?\\x1a\\xfa\\x1c@\\xc4A\\xaa\\xfc{\\x96\\xd6\\xcd\\x1d\\xc5\\xfd\\x1f\\xe8h\\xaa\\x1d\\x8b$\\xf8\\xbb\\x8f0\\xeb\\xc5\\x16[=h\\x9b"\\xdb\\x04+\\xc3\\x12\\xa9\\x1c\\xc2\\xc7\\xc5\\x8a\\x1f\\x88\\x9eqy\\xb8Pw\\xd5p\\xf3\\tL\\x9c\\xf6\\x8a_\\x8b\\xbfs\\xe0\\xc8\\xcdhdO\\x9bW\\xb8\\xae\\xed\\xd0\\xd0\\x17\\n%\\r_#.\\xd1\\x9f6\\xc8\\x1cg7\\xc8\\xbbP\\xcf\\xe4?\\xfd\\t2\\xeb\\xe3\\xce\\xce\\x07\\xc9\\x90\\xbc; \\xee\\x94\\xf8\\xfc-\\xd1.\\xa6j\\xd5\\xde\\xd9G\\xa6.\\xb6k9J\\xfdA\\x7f\\x04\\xb5v\\x84{4z^\\x10rH\\xce\\\')Z$\\x8e\\x93\\xac\\xee\\xeb\\x9a?\\xcb\\xbb\\x90L\\x1727(y-\\xd0\\xd6\\xa1m\\xc8\\x82\\xf4=\\x13#\\xa8\\x97\\xaf\\xf1\\x98\\x9c\\xfb\\xa4\\xa2\\xe5\\xe1\\xa3\\xc4\\xf8Vr\\xfd#\\xe3\\xd2>\\x89\\x888\\xfb\\x85\\xba\\x8e\\xc3\\x8eS\\xdc\\x8c\\x94\\xeek\\xb6\\x06\\xf8\\xf5\\xb9\\xaa?\\xfdS\\x87`$\\x96\\xe9\\nt7\\x85\\xc7\\xa6m\\x85s\\xe0\\x837\\x99W\\x87\\x92<\\x035\\x15~\\xe6\\x14\\xbd\\xf1+\\xb2\\xb7c\\xf6 ;n\\xe8\\x8e>+\\xb4(F8\\xfaC\\xda\\xc6\\x17\\xdf\\\\\\x8eI\\x18<8n\\x19g2w2&l^\\xc6_\\x89x1<c}\\x99\\x94\\xedgq0;Pzz\\x14=\\x87c\\x99K?$-\\xa7mN\\xec\\xb9\\xd8\\x99\\x16\\xfb*\\xb9fn\\x18O\\x01\\xa4\\xfa\\xa9e\\x90\\xd4\\x18\\x97\\xafJ\\xca\\x02\\x0e\\xe1|\\x88^E\\xf7\\xc4\\xcdo\\x17\\xa5\\xaa\\xe4$?\\xb0\\xd0\\x88\\xf4\\xd2\\xf1\\xc9w\\xcdYz\\x8e|\\xd2\\xc2\\x86gP,n\\xb3I\\xe7\\xf8\\xf3\\xfe\\xf0G\\xae1\\x93\\xc0\\x96\\xc3\\x06\\xcc\\xa9\\x9d\\xc7q\\x150\\xb6\\xb8\\xc5\\t\\x86\\x0fI~\\x98E]|\\xfa\\xac\\x9d\\x8f\\xa10G\\x0b\\xe6x\\xd46_\\xc4\\x8c\\x1a\\t\\xd2\\xda\\xc2\\x9b\\xa7\\xad\\x03\\xa9\\xd8\\x98\\xd4\\xb2\\xf2\\x85\\xe9\\xde5\\xaa-`\\xc1\\xb3\\x9d\\xc8S\\x0c5Q\\xcd\\xe8\\xe9\\xb7\\xff>\\x8b\\x1ez\\x182\\xc0\\xedn\\x13-@\\x12\\xbe\\xad`\\xae\\xa5|\\xad\\xfd\\x11\\xc5\\xae\\x98\\x85DE\\xc1\\x17_B\\xca\\xf4\\x1e\\x83\\x83\\\'z\\x8f\\x9b\\xef9\\xf0z\\xd8d\\x9c\\x17\\x92\\x12\\xc0%\\xd6\\x8d\\xa2\\x15}W62\\xf5MHk<\\x02\\xbe\\x1eZ\\xbfU\\xbbH\\xf1\\x14\\xea\\xacq=\\xabZ)\\xe3$ \\xef\\xbf\\xd14\\xdf>\\xa9\\x1bCf\\x94b\\x01\\xb2$\\xf2\\xa4\\x8dIP\\x17\\xe7\\xf4\\xec\\xcaX\\xb9M\\xc7\\xb7\\x7f\\x1c\\x0c\\xc9\\x8c\\xbb\\xc8O\\x13\\xbf\\x8a\\xe75,Bj\\x8a\\xde\\x0b\\xf76Ev6\\xdf)\\x91\\x1c|\\xb9]1\\xf32\\xba\\xb2]z\\xf6\\xe1\\x84\\\\\\xdf\\xb0\\xe4\\x89\\xea\\xa3\\xd6\\xd5\\xd3\\x12A\\x97\\xad\\x8b\\xe7"\\nv3\\xfe\\xb0\\x95\\r\\xd5N\\xb2\\xdb+v\\xc1\\x9f\\x1e\\xb3T\\xfc\\\\\\xda\\x94\\x91U\\xd5`y\\xba=[c\\x08\\xe4\\x9cr\\xc3\\x80o\\x7fd\\xdd\\xb1\\xdb\\x91\\x87\\x1c\\r\\xfb\\xbe\\xf6fnod\\xf8\\xb0\\xf5Fkk$qqg)h\\x00\\xde\\xd8HH#D\\xb2K\\xff\\x08z\\x83\\xfc\\xc4\\x9b \\xe0\\x1e\\xcfc\\x81\\xf8BN\\xfc\\xd7\\xa9\\x0b\\xc3\\x9e\\xd9$\\xc0r\\xc2\\x8a\\xd4\\xbcb\\xcc\\xadh/\\x9b\\x18\\xc7b\\xd3\\t`\\xc4\\x9b\\xba[yq\\xa1\\x17\\x02\\x99\\xc1\\xdbV,\\xea\\xa7\\xfe+\\xb1\\xd2"k5\\x05Q\\xd9F\\xdf\\x05\\xa3\\x89\\xd0\\xb32\\x1c\\x1f>\\x8d\\xdb\\xbeyW\\xeft\\xab\\xd2#\\xa8j\\x86N\\xbb <2h\\x1d\\xb9\\xf9\\xfa\\xc5\\xb5\\\\H)uf\\x83{?h\\xa5F}\\xe56e\\xa6o \\\'D6\\xc7\\xa8\\x81\\xc1\\xbd\\xa9yF\\xf1\\xb0\\xd8\\xba\\xe0\\xe5\\xcc\\x0b\\xc0F\\xa5F7\\xeds\\xda\\xbb\\x06\\x15\\x16v\\xa8\\xa9K\\xe5\\x17\\x8f\\xb9\\xad\\xe6B\\xd2[\\x8f&\\xd5?\\t~\\xbdIHe\\xde)\\x8c\\xdfn\\x01lm\\xebFnU]0\\xe4\\xb2\\x0c+\\xe3\\xbar:\\xc1B\\x9e\\xc9\\xdb]\\xf2\\xd6\\x0fi\\x13)\\xd3q\\x1aN\\xfd\\x1c_h\\x8d\\x01\\xd3g\\x89y\\x10k\\x98\\xf8\\x96\\x8e\\xc0\\x93\\x0cm Ic/\\x0f\\x1fJ!f\\xee\\xbf8}\\xb2\\x91\\x12\\xaf(\\xd4\\x84\\x8bo\\xc4[\\xc4\\x96]0\\x1cV\\xa8\\xcflB(sO\\xc0\\xa2jH\\xab\\xe7`Fl\\xa4\\xbf\\x9e\\xf3\\xf6\\xdc\\xcbd\\xb7X\\x9c\\xea\\xad\\x8b\\xbd\\x17\\xd5\\xc1G*\\xec\\x81\\x00\\x1cm\\x8a]\\xfd{a\\xce\\xc2oT\\x94O8\\xef\\r\\x955(\\x88)\\x8d\\x92\\xe5S~\\x9a[Le\\xcfk\\xc8\\xbc\\xfe\\xfd8t\\xb4\\x16\\x19\\x94\\xcb#!\\x96\\xf6\\xc4\\n\\xc7\\x99\\xd12\\x92yk\\xb4s\\x12\\x9f\\xe7%s\\x0ee\\xab\\x94\\xe4\\xadvB\\x1b\\xb9\\x80\\xd7\\x9d<\\xb3f\\xaf\\xd5\\xac{\\xf7\\x05B\\x9aY\\x0b\\xc9k\\xd5\\x04\\xe8\\x83%\\xd7\\x9f\\x890\\r-\\xb8H)bb\\xd9\\x8f\\x85c\\x89\\x87A\\x9d\\x13\\x96\\xa9*\\xcbg\\x94\\xdf$\\x1cO\\xb55\\xcdw\\xd8\\x02\\xd95sb\\xdf\\xddWQ \\xfb\\xae\\xa8\\x1b\\x88\\x11E\\xe9\\xf6\\xee\\xe2\\xe5\\xb5\\r\\x99\\xcb\\x81<s\\xc4\\x16VF\\x06\\xed\\xbc\\xbae\\xcdB[\\xcd\\xe0>(\\xc10\\x14\\xc1\\x17\\x94\\xe2P{z\\xe4N\\xc1\\xe3\\xe5\\x07\\x0c\\xf5.\\xc6f\\x15F\\xb0l.\\x7fk\\xf6\\xe85\\xe5\\x88\\xcdi9E\\xfb\\xf9W\\xf9Y\\xdb\\nJ9::b-\\xfe\\xc2M2\\x84\\x0e\\xaa2\\x04\\x03u\\x04#5\\nn\\xe4\\xaf\\xf0\\x0b|\\x9b\\xa7\\xed\\x03\\xa2\\x04\\x89 \\xab\\xaf\\x98\\xf9\\xf0\\x82\\xe6\\xe3\\\'R~\\xc6\\xcb\\xda\\xcc\\xb1\\xaa\\xe7we\\x0c\\x0e\\xed\\xdeF\\x0c\\xd0\\x9c\\x17\\x7f\\x13,\\x1c|_\\xacl\\xc4\\x0c*W\\x8b6\\xa0%\\xef \\xe77_K\\xfa.#\\xd6\\x85\\x98\\xe7\\x97\\xdf\\x7f~\\xa7OA\\x84\\\'\\xaek*\\x906\\xbe\\x9f\\xf0\\xeb\\rV\\x8c\\xd6\\x14i>U\\xe5\\xbc\\xa5\\xae}\\xa0\\xcb\\xdb\\xe8\\x8a>p\\x01n\\xeaM\\x8aG\\xdef\\xe2_\\xdc\\xb4qh\\x15\\x16\\x1bS\\rg\\x00\\xa4\\xa2B;8\\xe5%\\xb3\\xe0UKS\\xf9\\xb8\\t\\xe2W\\x05\\xc4\\xfc\\x19\\xf8\\xfe7\\xc4\\x8c\\xf6\\x9e\\x9d\\xca5\\xe4$~<c\\xf0k\\xea\\xdd\\xa7+\\xe9[o\\xcbHE\\x0e\\xb6\\xeee\\xd9\\\'\\x1bv\\x1aZ\\xe8.~\\xfd*\\xc8\\x10m1U>\\xb7\\xe7\\xc4\\xa6\\xe1z\\x8b\\\\\\xa5\\xac\\x8c\\x90{\\x9dC\\xb9\\xdch\\xba\\xf7\\x8ag4\\x91F\\x9d\\xd5\\xbf\\xc2\\xf2T\\xc7\\nq\\xe7\\xd0\\x8f\\xbc\\x8f\\x95\\x85Z\\xc3N\\xa3F\\xf5f$c\\xfd\\xc7\\xad\\xc8\\xf6\\x95\\x81s+\\xc8\\x0eF\\x02\\xfb/T\\xbd\\xe3,/\\xbe\\xea\\xc7\\xcc?m\\x18v\\x1b\\xd5Qu\\xe8\\xd2\\x80\\x89\\x12|o\\x99\\xc9\\xe5,\\x9aE\\x10\\xec\\x98\\xe4^8Z\\x17L*\\xa5c\\xab(}\\x93m\\x9a\\xf9@{p[}\\x0c\\xdf\\x17\\x1e\\xb9\\x0b\\x7ft\\x8bS\\xe7\\x93R\\xc8p;Jk)\\x8c\\x05f5\\x0b{\\xbc\\xbb\\xff\\xf5\\xf9be\\x96\\xba\\x16\\xea\\x8b*\\xd3W\\xe5\\xf3\\x0f\\xa7\\xe6\\xcb1&\\xa6.\\xacj\\x0fI\\xc2\\xbb\\x84\\xef\\xd6k*\\x04\\xf0\\xc7\\x98=\\xef\\x0bg\\x83\\x87\\xc3\\xed5o\\xe33\\xa7v\\xc7\\x8e\\x08\\xa9\\xd6/E\\x85\\x11\\xd5\\xf2&e\\xf3WMLN\\xe7\\x8a\\x1cw\\xac\\xf3\\xbe;\\xba\\xf5>`t9\\xa2\\xf7\\xf8\\x1dk\\x8c\\xc4\\t\\x9c\\xdey\\xd8\\x9aAXm\\xb4\\xf0=\\xf9$\\xe7\\x8fn\\xd6C\\xff\\xd8\\xe1\\t\\x80D8[\\xc4]\\xb7)G\\xfe\\x80j\\xdchK\\xa2\\xcf\\xe1\\x1aR\\xf9+\\xa4\\xeb\\xdcSH\\xf7\\xa0\\x80\\xe5\\xda"\\x8cP\\xf2\\\'\\x1fEN\\xce\\xed\\xde\\x9b\\x8b!\\xfa\\xbc=I\\xdcV\\xaa\\x05\\xc1\\x86\\xf5\\xd3\\x12\\xe5\\xa1\\xe9\\xef\\xb46\\xe6\\xaaT\\xb4\\xcbZ\\xd4TL}\\xfds\\x93\\xa3\\xfd\\xcf\\x9f%\\xf4}\\xbe\\x18\\xdc\\x15XU\\x9c3?3\\xe9\\x83\\x8c\\xe4\\xde\\xbe\\xb7\\x97y9<\\xb83%\\xb1\\xe0\\xa6\\x10=\\xb1\\xef\\xa9\\xfa\\xd4:EU\\\'\\t\\xaf\\xbcr\\x0e\\xa7\\xda\\xc4\\xa0\\xecK\\xaf.\\x85\\x89\\xbfNYT`\\x86\\xa9\\xe9\\x8b\\x13i\\xe6\\xd3U^1\\x01z\\x98\\xfa\\xa3Y\\xc4\\xe1\\xe7\\xdb\\xba\\xea\\x9f\\xe1\\x93\\x1f\\xe8\\xc9\\xc38\\x8ca\\xc4F/j%\\x16*I7\\xdf\\x04\\x96\\x126?\\xe4C\\x8a[\\x0b\\x11\\xb5\\xc7{\\xac\\xd7\\xe07K9_\\x91\\x074\\xe8.\\xcc\\xae-\\xf2\\xb9p\\xcc\\x15\\x90\\x92\\x0e\\xe9\\xac@\\x9b\\x14\\xa3\\xa5\\\\I\\xef\\xcdF7\\xa2A\\xdck\\x07\\xf5\\xcc\\xafh\\xc7\\xe5\\xb2\\x9f\\xb5\\xd6=\\x10\\x0e\\x88\\x96=\\xe9\\xd9\\xec\\xe8r\\xcd=<yXV\\xaap\\x11~ X\\xa2\\xe3L\\xaf\\xbb\\xa8\\xe2\\xe7L8)\\xc6m\\xb6\\x1c^mE\\xf14#(yR)&\\xd3tO\\x80\\x97.\\xd7\\x91*\\xac\\xf6m\\xbe\\xb0t\\xf1f\\xffPv\\xc3\\xc8d\\xaf\\xaf\\xfb\\xda\\x1d\\nR\\x80\\xbd}\\xf9\\xb8I\\xe2V\\x17y\\xbfw`B\\x802\\x9b\\xf1\\xcd\\xb30k\\xc5\\xa47_\\xb5?m\\\\2I\\x1aDKtB\\x11\\\\\\x05\\xe1vsM\\x9f[\\xb5\\xce\\x83\\xec\\xc4t\\xc5\\x9b\\t0\\n\\xa5B~\\x1b\\xf3!\\xef;\\xaeCSJ\\xbd>R\\xf3\\x17:\\xa9\\x8e\\x11Q6\\xab]\\x05-4\\xc9v\\xb2\\x14\\n\\xe6\\x88 \\xeb\\n\\xeb\\x1d}\\xd2?B\\r|\\xf1\\xaf1sI3t\\xcd3\\x04u\\x95\\xf9b\\xb2\\x89\\xca/_9\\xc6\\xdd\\xd3\\xcb)\\x1f.\\t\\xa4\\xf2\\xad\\x0c\\xc3\\x9b]"c\\r\\xa0:\\x97x\\xaf\\xc80\\xe6\\xc02\\xa4k\\xb3}n\\xc8\\xb9\\x99\\xe7\\xdbXhr\\xccW|+\\x9e\\xfd\\xc4\\r\\xd8\\xed-JI\\x16+\\xfd\\xf1\\x8a\\xc6q\\xbb\\x13\\x99d\\x04\\xc7k\\x8c\\x1d\\x91\\x8c\\xe0\\xd8\\xb6\\x8d \\xac\\x01\\xdeb\\xed\\x97a\\xf4\\xabV\\x1b\\x1b\\xad\\\'\\xdfv\\xf6\\xb0I}\\xd0SA\\xa5\\x94\\xc1\\x06\\xfe\\x01/\\xe6-S\\xb4\\xb6\\xf1\\x18\\xb8\\xa5b\\x8ad\\x9d}\\x17\\x80\\x9eG=i,\\x1cq\\xf1\\xdb\\xbd\\xa3\\xe7\\xf1X\\xa6\\xf7\\xf0\\x87u\\xbb\\xe7\\xabF\\xae\\xa5OC\\x0b\\x03\\x99~|dM6M\\x8e\\xefNk\\x08\\xdam\\xd9\\xb4\\xecf\\x16Z>\\x8e\\xb4\\xc4\\xf5H\\x13V\\x8e\\x0fl\\xa2\\x0by\\xa3\\x06\\xc7\\xf5\\x80e\\x1c\\x98\\xaf,v$Fi\\xd9\\xce!\\x04q\\xd0\\x15\\xd5u\\xd3\\xf9\\xcb\\x05\\x82\\x9e\\xc8\\xb6\\xce\\xb5Q!\\xcb\\xd9\\xb3\\xbd|\\xe6\\xcd\\xf1\\x9d\\xdb\\x92\\x0f\\xdb\\x8f\\xe7\\x1f\\x1c\\xfb\\xe4\\x8f5kV\\xdc\\n\\xf4\\xd0\\x9f\\xfa\\xe6\\x1f\\xf1\\xa3\\xeb\\xfd\\xdbX\\x9c\\x875+\\xd0 \\xafN\\xc7\\x83\\xd9[\\x15\\x80s\\xd7\\x01\\xa7Wr~\\t\\x89\\xc5{q8G!wbmi\\x8aJ*4>\\xbe\\xc1\\x88\\xd9\\x8cgv\\xf7^@\\xdf.\\xd1n\\x92u\\xcc_\\xb4~\\xe4b\\x0e-\\x08\\xdd\\x0b\\xf1\\x89\\xcc\\xe9\\xf5\\xe5\\x94\\x97\\xdc\\xdei\\n{\\xf7:D\\xd3\\x15g;\\xd1\\xb1Bm)\\x8e\\xbc\\x00\\xd6Q\\xcd.\\x9fv\\xba7\\xb8\\x8f\\x94\\xe1\\r\\xde\\xbf\\xaa\\x87\\xa0\\xd7\\x88\\xbbmY\\xef\\xf99L\\xfa\\xd6\\xd1\\x83\\xa2\\x85r\\xfc(\\xa5\\xbb\\x04\\x18\\xc8\\xb5\\x1c\\x86[,\\x8c/j\\x9f\\x19Gkf\\xf0\\xf7\\x82\\xbe\\x17j\\x92\\xf2\\xa7\\xdb\\xc1\\xfat\\xad\\x1b\\x8a\\x08\\x073\\x8b-\\xf4\\xb3I;\\x99\\x8b\\x19\\xe4\\xaa\\xf2Y\\xe7YI\\x15x]\\xe7\\xcd\\\'\\xbe\\x91]\\xe3\\x10h\\xe9\\x90\\xbfC-pb\\xa9G\\xec\\x19\\xb8d\\xe5\\x1dA\\x1b\\xea\\xf3\\x96\\x996\\xd1\\xbe\\xd5\\xd6\\x8d-\\xf6Q\\xa2\\x91\\xe87\\x0b\\xcd\\x8c\\x99\\xe7f\\xcd\\x14\\xa9\\xe74\\xab\\xff\\x05\\xe2\\xcb%f\\nendstream\\nendobj\\n26 0 obj\\n<< /Filter /FlateDecode /Length1 1559 /Length2 8366 /Length3 0 /Length 9412 >>\\nstream\\nx\\x9c\\x8d\\xb4\\x05T\\x94\\xed\\x166\\x8c R\\xd2"\\r\\x03C\\xe7\\x0c]\\xd2\\xdd\\xdd5\\xc0 9\\x03\\xcc\\xd0\\xd2]"\\x8d\\x80t\\t\\nH#Hw7\\x88 \\x8d\\x80\\xd2\\xd2 \\x1f\\xfa\\xbe\\xe7\\xbc\\xe7\\x9c\\xff_\\xeb\\xfb\\xd6\\xac\\xf5\\xccs\\xed}\\xed\\xfd\\xec\\xbd\\xefk\\xdf\\x8ct\\x9a:\\x9cR6p+\\xa8<\\x1c\\x86\\xe4\\x04s\\x81D\\x002jjJB\\x00\\x10\\x88\\x97\\x0b\\x04\\xe2\\xc1fd\\xd4\\xb5G:A\\xff6c3\\xeaC\\xdd\\x10\\xf6p\\x98\\xc8\\x7f\\x10d\\xdc\\xa0\\x10\\xe4\\xbdM\\x16\\x82\\xbc\\xe7\\xa9\\xc1a\\x00ew\\\'\\x00\\x98\\x17\\x00\\x16\\x10\\x01\\x0b\\x8a\\x80@\\x00\\x1e\\x10H\\xf8_D\\xb8\\x9b\\x08@\\x16\\xe2ao\\x03P\\xe3\\x02(\\xc3aP\\x046\\xa3\\x0c\\xdc\\xc5\\xdb\\xcd\\xfe\\xb9\\x1d\\xf2\\xfe3\\xffz\\x05\\xb0X\\xb3\\x02\\xc0\\xc2\\xc2\\x82\\x1c\\x7f\\xc2\\x01R\\xceP7{k\\x08\\x0c\\xa0\\x06A\\xdaA\\x9d\\xef\\xbfh\\rq\\x02\\xe8\\xc0\\xad\\xed\\xa1H\\xef\\xffJ\\xc1"f\\x87D\\xba\\x88ps{zzrA\\x9c\\x11\\\\p\\xb7\\xe7\\xe2\\xac\\x1c\\x00O{\\xa4\\x1d@\\x1b\\x8a\\x80\\xbay@m\\x00\\xbf\\x1b\\x06\\xa8C\\x9c\\xa1\\x7fu\\xc6\\x85\\xcd\\x08\\xd0\\xb5\\xb3G\\xfce\\xd7\\x81\\xdb"=!nP\\xc0\\xbd\\xc1\\xc9\\xde\\x1a\\nC\\xdcG\\xb8\\xc3l\\xa0n\\x80\\xfb\\x8f\\x03t\\x94T\\x01\\x1a.P\\xd8_d\\xd5\\xbf\\x08\\x1c\\x80\\xbfg\\x03\\x00s\\x81\\xff\\x9d\\xee\\xef\\xe8\\xdf\\x89\\xeca\\x7f\\x82!\\xd6\\xd6pg\\x17\\x08\\xcc\\xdb\\x1e\\xf6\\x1c`k\\xef\\x04\\x05h\\xc8\\xabr!\\xbd\\x90\\x1c\\x00\\x08\\xcc\\xe67\\x11\\xe2\\x84\\x80\\xdf\\xc7C< \\xf6N\\x10\\xab{\\xc2\\x9f\\xca!\\x00y)-\\x00\\xe4\\xbe\\xc1\\xbf\\xdbCX\\xbb\\xd9\\xbb \\x11\\\\\\x08{\\xa7\\xdf-r\\xffNs?e9\\x98\\x8d\\x0c\\xdc\\xd9\\x19\\nC"\\xb0\\x7f\\xd7\\\'k\\xef\\x06\\xb5\\xbe\\x1f\\xbb7\\xf7_\\\'\\xeb\\x08\\x83{\\xc2|\\xff\\x06\\xb6\\xf60\\x1b\\xdb\\xdfM\\xd8\\xb8\\xbbp\\xeb\\xc1\\xec]\\xdd\\xa1J\\xb2\\x7fS\\xeeM\\xd8\\xff\\xd8\\x9eC\\x91\\x00~\\x90\\x90 \\xaf\\x10/\\x00\\xea\\n\\x80zY\\xdbq\\xffN\\xaf\\xeb\\xed\\x02\\xfd\\xe3\\x04\\xff6\\xdfw\\xe0\\xe7\\xeb\\x02w\\x01\\xd8\\xde7\\x01\\xf5\\xb3\\xb7\\x85\\xde\\xffa\\xfb" \\x1eP\\x00\\xd2\\xcd\\x1d\\xea\\xe7\\xfb\\x9f\\x8e\\xffF\\xd8`0\\xc0\\xc6\\xde\\x1a\\t\\xb0\\x82>\\xb7\\x87a\\xff\\x93\\xfd\\xde\\x0c\\xb5\\xfd\\x0b\\xdf\\x1f\\xbe\\x9b\\xbd\\x17\\xc0\\x04t\\xaf=0\\x00\\xf4\\xfb\\xf7\\xef7\\xb3{y\\xd9\\xc0aN\\xde\\xff\\xd0\\xff\\x9c/\\xb7\\xaa\\x81\\x81\\x86\\xa2\\x1e\\xfb_\\x1d\\xff\\xdb\\\'-\\r\\xf7\\x02\\xf8r\\xf2\\xf0\\x018y\\xf8A\\x000\\x18\\x0c\\x02\\x08\\xde\\xbf\\xf8\\xfdw\\x1aM\\x88\\xfd\\xdfe\\x80\\xfe\\x89U\\x82\\xd9\\xc2\\x01\\xf7\\xfc?\\xe5\\xde\\xcf\\xe9_%{\\xfc\\xad\\x00\\x96\\xbf\\xb7\\x83\\x15\\xf0\\xdf\\xc9\\xd4\\xe1\\xf7\\xb2\\x85\\x02X\\xfeQ\\xb9)\\x88\\x1fd}\\xff\\x00\\xff?k\\xfdO\\xc8\\xff\\x9f\\xc4\\x7fg\\xf9\\xbf\\xa9\\xfc\\x7f\\x0b\\x92wwr\\xfa\\xe3f\\xf9\\xe3\\xff\\xff\\xb8!\\xce\\xf6N\\xde\\x7f\\x13\\xeeU\\xeb\\x8e\\xbc\\xdf\\x005\\xf8\\xfd\\x1e\\xc0\\xfe\\x97j\\x00\\xfdkk\\xd5\\xa06\\xf6\\xee\\xce\\xff\\xebUBB\\xee7A\\n\\xf6\\xfc^\\xcd\\x9c`>.\\x10\\xdf_v{\\x84\\xbc\\xbd\\x17\\xd4F\\xd3\\x1eim\\xf7\\x97f\\xfe\\xb2\\xeb\\xfd\\xde5\\\'{\\x18T\\x13\\x8e\\xb0\\xff}\\xb9\\xdcG\\x81@\\xff\\xe3\\xbb_0k\\xc7\\xfb\\x0b\\x04q/\\xcc\\xbf\\\\\\x10\\xc4\\xfd\\xb6!\\xff\\x1c\\xe3o\\x0c\\xbd\\xdf\\xa7\\xff\\xaeC\\x0ef\\r\\xb7\\xf9\\xbdx<\\xfc\\x02\\x00\\x88\\x9b\\x1b\\xc4\\x1b\\xfb\\xfe\\xe8\\xef\\x11?\\xc0\\x17|\\xbf\\xa16P\\xaf?\\xd2\\x06ps\\xc1\\xe0\\xc8\\xfb\\x10\\xc0}\\xcf~\\x00[\\xb8\\x1b\\xf6\\xefc\\x16\\x10\\x00pK\\xff6\\xfdAB|\\x00n\\xdd\\x7f#aA\\x007\\xe4\\x1f$\\x04\\xe0\\xb6\\xfa7\\x02\\x83\\xf8\\x01\\xdc\\xf6\\xff\\x01\\xef\\xb9\\x8e\\xff\\xc0{%q\\xc3\\xfe\\r\\x05\\xee\\xd3\\xba@\\xdc\\x90\\xf6\\x10\\\'\\x1b{[\\xdb\\xff\\xa0\\xdd;\\xdc\\xfe\\xa1\\x81\\x01\\xdc\\x08\\\'\\x08\\xc2\\xee\\x1f\\x02\\xcf}\\x1e\\xaf\\xff\\x80\\xf7\\x0c\\xef?\\xf0\\xbf\\x86`\\xed\\xee\\xe6v?\\xa5?\\xda\\xbd\\x9f\\xd0\\xbf\\xf0\\x9f\\xab\\x08\\n\\xf5\\x82Zc\\x7f\\x9e\\x85[\\x8b\\x86:T\\x87\\xb6\\\\TIQzrn\\x8e\\x8a\\xa1\\x1f\\xa4_\\x18\\xf2p\\x8e\\x16\\x9ac"{\\xe4&-V\\x13u\\xded-\\xa8\\x94\\xc9\\x7f\\xee\\x06\\xcb\\x9b;\\xb4\\xa9K\\xbb^d\\x7f\\x9d;\\xf1\\xdd\\xa8\\xa1\\xad\\xf5\\xe6;\\xe3\\xa4\\x95\\xdf~Nk\\xf5j\\xf6\\xee\\xec\\xc1t\\x92\\xef9\\x15\\xfd,~#J\\x9eA\\xaa4\\x8dH\\x89[\\x0f\\x8a&u\\x0cA;\\x96\\x84\\xcd\\xf3\\x1e\\x1dF\\xfc\\x17\\xcc\\xd5]\\xf3I\\x9eLOJ\\xe5\\x05\\x95\\xc3Z\\xd4[\\xdb\\xabJ\\xb3T\\x9fR\\t\\xeb\\xffX\\xd3F6Y\\xf5\\xebn\\xf2\\xff$c\\xceYs\\x8e\\x0fY\\x8f5\\x8dJS\\xcf\\xa0W\\x11k\\xbd\\xc4N\\xf4\\xac$X\\xe9\\x1b\\xec_$\\xec\\xa6\\xee\\x88\\tR\\xf6\\x08\\xde<d\\x08G\\x12\\xca\\x89\\xf6S\\xc9\\xf2aT\\xea/\\xe6\\xe3\\xdd\\xe4\\x94x|\\xcf \\xf2\\xb5R \\x96y\\xaa\\xa3\\x96G\\xa7M\\x86\\xdd/\\x93\\x9f\\xdct@fz\\x03\\xc40t\\xc8\\x8a\\xb2K\\xc2\\xfeN\\x86\\xff)?\\xe3[\\x91\\x1d<0\\xed\\x92\\x97\\xbf3D(-g\\x9a>\\xe2y\\xb4\\xaf\\x8d\\xd8\\x92\\xbcv`k\\xd3\\\\\\xc4\\xe0$\\xe9\\xf9g\\xf4\\x95\\xc1\\r\\\'\\x9c\\xf6\\xf1f\\x96,\\xe0\\x0b\\xbbw\\xa5\\xc7\\x01\\xfeCR:1\\x0e\\xe9\\x15\\xd6\\xc6\\x9c\\\\\\x06\\xb9\\xd0Y\\xe2\\xbcn"6Ok\\x10\\xcey\\x93\\x028M\\xcc+\\xbb\\xa7\\xf08\\xbd5LD\\xcf\\x0ep.\\xf4L\\xebZ@5\\xed\\xd8\\xdb\\x92\\xc6\\x93\\xaa\\xf4Q<>\\\'\\xa5\\xbb\\x92\\xe3\\x16\\xa1\\x94GNG\\x9c{\\x9cN\\xec\\xea\\x88}x\\x9e\\x80f)\\x15\\xa6\\xbe]\\x0c\\x15\\xc9z\\xc4\\xcf2"\\x9a\\xa8\\xd9ur\\x11&\\xb99\\xe6Y)\\x96\\x92\\x08\\xa1\\x85R\\xdfJ\\xf5\\xe8\\x04\\xff\\x9e\\xc7\\xd3\\x18\\xa7\\xefi\\x9e\\x08\\xd3"\\xf0\\x9e)f\\xdbP\\xbb\\xfaZ\\xadI\\xd2\\xae\\x13\\x19\\x05\\xe6\\xa0\\x0c\\x03\\xdd\\xa0+Ir\\x98\\xf1\\x17\\xb4\\x0cl>\\xb0\\x19\\xcew]\\xcd\\xf3n\\x9c\\x040`\\xb1\\xb8\\xfa\\\\\\xd8\\x9b\\xed(D$\\xf3~\\x10\\x13\\xba\\xa1\\xd0I35\\n!\\xd9\\xcf\\x9b/\\xa8U\\xd5g\\xbc\\x1f\\xf3\\xd2\\xd3\\x1a\\xb9\\xdb\\xda,?\\xc8\\x10\\xbe\\xe2\\x15\\xfc\\xa9\\xefD?\\x18\\xb8\\xb0\\xf3\\xea\\xec\\xd2\\n\\xbdl\\x86T\\x1d\\xaaI-\\xa9\\xd2\\x8c\\xa1o\\x9d\\xad\\x1d*$k\\\'$\\\\\\xf6\\xfd\\xfa4?\\xd7\\xc5g=7C\\xf5 S\\xfeM\\x80\\xd9\\xccFzK\\x8b\\xb3\\t\\xa5\\xd1\\xcdY\\xde\\xf6\\xe5L\\xadYW\\xf29\\xe0\\xe4,\\xda\\xe2\\xd8N\\xdfrN\\t\\xbc\\xa7|\\xb6q;\\xf2\\xb9\\xac\\x98M\\xac\\xdb%\\xc7\\xd7C\\xe2\\xfc\\xb1)U\\xb3B[\\x9a\\xd9\\xc5\\xceN\\x96\\xb8,\\x00\\x8b\\x1c9\\x82\\xa3W\\x0c\\xfcu 4B\\x1a\\xc2Q\\xb1p\\r\\xfd\\x94\\xbf\\xad\\xc0\\t`\\x9d\\x05\\xcb\\xdc\\xf1\\x01\\xb7\\x85\\xd7f\\xea\\xa5\\xfd\\xd3\\xca\\x92\\xb7ec\\x94\\xac0\\x7f\\x9d>\\xb2\\xc0\\x11\\xe0x\\xf9Lt1\\x06\\xce1\\xae~\\xaa\\xa4\\x96\\xe5\\xf0\\xca\\xe2\\xc6C\\x1f\\x8e\\xb2\\xc9\\xd8Oh\\x97W\\xd2\\xafe\\xff\\x00\\xd0\\x94\\xc9o(\\xf6\\xb5\\xb7\\xec\\x9dS\\x12(C\\x952$\\xb4\\x1bk\\xe8\\x8c\\xf0\\xe3\\xd7\\x83\\xc4\\\'k\\xe8b\\x90\\xc4\\xa6kM\\x91\\xcc\\xdak+\\xc9lTg \\n\\xf3\\x05\\xe9\\xfa\\xc9\\xa2\\xedXm\\xcc{z\\xe8\\xc6)?\\x1d\\xeb\\xb1=\\x19q*\\x85\\xb2H\\xd6!\\xaf\\\'\\x03\\xc1W\\xea\\xab"<DD\\xca\\xd6\\xd6\\xee7<\\xc6\\x17\\x85\\x81?\\xb3\\\'\\xea^\\xcf\\x941\\xde\\xe1fj\\x10\\xd0W\\xfe\\xf0\\xd4\\xf7\\xac\\x06)\\xbf\\xfe\\xf5\\xc6\\x14\\xd3b\\xa1J\\xaee\\x95\\xb2~\\xdf\\xf68\\xb4\\x17_\\x93\\x10k\\x078\\xa8\\x85tmop\\x17\\xb7\\x06\\xb13\\x0cZ\\xe7\\x88\\xec\\xcd\\xf0\\x01\\x87y\\xb5\\xd9\\xed\\xfc\\x1fx?\\xe0\\xe5\\xffPq\\xbb\\xc6\\xc7\\xa3\\x12\\xfa\\xb6>\\xa4\\xf6\\xccysw\\xc9\\xc0\\x87\\x8b2\\xff\\xf9&\\x9dC\\x9c\\xd4C\\x8a\\xbc\\x17Sc\\x1e/\\x85\\xd3\\xa0\\x84\\x0f]\\xcf\\x86\\x96z\\xbd\\xe5M\\\\;?\\xe3\\xf7v\\xa6\\xa1:9\\x84a\\xef\\x9cm\\x96\\xa0$emQ\\xc5\\xb3:L\\xbe.F\\xa0\\x89;\\x95TQ\\x96\\xa6\\xf2T\\x97=\\xff6\\x91\\x8e\\xee\\xa2\\xbb\\xd5&\\x89\\xa9\\xc6\\xedk\\xd2l\\xb5\\xaf\\x02V7\\xc8\\xbe\\xfdDMye>\\x87$\\x0e\\x94-\\xa1\\x1e`\\xf8r,\\xba\\xda\\x1d\\xcb\\xc1q\\x1b\\xf6~\\xb7^\\xdaH\\x8b\\x9f7\\xfd\\x91_\\xbb\\x96`+B\\x1b\\xd0<\\xf4\\x82\\x8f\\x1a\\xd2\\xdd\\x14sMS\\x19\\xf9Lh\\xee-8%\\xd7\\xe8 \\xb8\\x16\\xc0|,\\xea4\\xcb\\x0b\\xa4vQ\\x89\\xa2\\xc8D\\x9b\\xa0\\xb0\\x81\\x13G\\xc5\\x03x\\xa8};4{%f\\x17\\x1d/\\x07o\\xe3\\xea\\x08T\\xdc\\xbb\\xf5\\x18Q\\x17HJ\\x03\\x9a\\xf9%-\\xc6\\xa4!\\xe9l\\x07\\xe8\\xd3\\xbez\\x89-\\xf1\\x99!D\\x9c}\\x8dK\\xa8\\n\\xf9\\xe1\\xe5\\xe0\\x0eU\\xca(~\\xbdvy\\xd0\\xce\\xf5d\\xa8\\xf8\\xae\\x9a6\\xe9\\xe3\\x07s\\xf8\\xe3`V\\x1b\\xd7\\xecs\\x08\\x87\\xd8\\\\0\\xadvj\\xcad\\xa7t\\x89Q\\xc0g\\x8b\\xbc\\xea\\xd4\\xdc\\x86\\xa6\\xe9\\x0b\\xb0h\\xbe\\xfe\\xdb\\x01\\x03\\x92+63\\xc3\\xb7\\x12\\xd7\\xb8\\x12\\xe7\\x98\\xf4(*\\xc6\\x8d\\x91!\\xe1(\\x0e\\x92ZB\\xcc!\\xd0\\xaf\\xcd\\xc85\\xc3\\xe6\\xba\\xa0\\xedF\\xb1\\xc5\\xa7x\\xf3\\x97\\x1f\\xbf\\xa78n\\x11\\xf8\\x9e\\r 8\\x8dQs\\xf2\\x9c]]\\xc3\\xdc\\xba\\x95\\x88\\x9c\\x97\\xa6]Q\\x90\\xdc\\xc2\\x90\\x9cp\\xf5\\\'1\\x8f\\x9e[\\x1b\\x1f<\\x9d\\x96\\x8f\\xb0\\xad\\xa0\\x96}\\xe1T\\xba\\xab\\xfa\\xca\\xe8\\xb2C\\xda\\xe1\\xfc\\xf9\\xfb\\xab\\xb0\\xaa\\xcc\\x12?\\xcb\\xca\\xc3\\xe0\\xf5\\xac*;\\x06\\xd2\\x8c-\\x86\\x8cx]\\xc5\\x1eN"f\\xb1\\xae\\xe7\\x16\\xf2\\x86>"\\xce\\x1b\\xe7\\xc3\\xe7\\xd7m\\xc0x\\x937\\xe4"\\r\\xfe\\xd8\\xcfLK\\xe5\\xce6N\\xa7\\xca\\xad\\xfa0\\xd0\\xf11\\xbe\\x7f.[\\xf5$_\\xaa}\\xe9}\\x92w\\xcb8\\xfe\\x9a\\xce\\xd7\\xb6\\xcc?\\x88\\xc5\\x93B\\xcfO\\xad7T\\xe0\\x06\\x93X\\x9a\\xf65\\x08u!\\x7f\\xef{\\xcf\\xd7*\\xa6|\\xf8\\x90Z\\x954H\\x0e\\xc5\\x13\\x85\\xf4\\x9d\\x97\\xe2K\\x0b2Fn\\x89\\x86\\xd9\\xae\\x18k\\xfe\\x87\\x03^\\xc7\\xcaWh\\x13#J\\xe3\\xba\\xb7\\xa2\\xfe\\xc9\\xa2L\\x84\\xa6W\\t,Xj\\x8f|\\x16\\x1duX"\\x1f\\\\6F+\\x17L\\x80\\xcd\\xf5\\x1c6\\xac\\xb6\\xa1!\\x02<\\xc1\\xd4\\xec\\x95"\\x12\\x8d\\\'\\xb8\\x95\\xfd\\xbcLw\\x1b\\x9c\\x87r\\x9f\\x0c\\x8f\\xb9MZn\\x0b<:2}\\x1a$U\\x8eZcm\\x81\\xbb\\xcd\\xb7\\x01\\x18?\\x17\\xd9\\x11\\xf2\\xafD\\x87\\xfd@\\xa5*Z9\\x95\\xa6dm\\x8b\\xf9\\xc6\\x04Y\\x94t\\xc32\\xfe\\xdb|\\x8c\\xe7\\x81_\\x96\\xef\\x08\\xa8V\\xe4\\t\\xee\\xae\\x15\\xdeO\\x10\\xa8\\xdf\\xf0\\xecR\\xe8E\\x07%\\n\\x07+\\xbd\\x9a\\x96\\xfe\\x16H\\xcd/p\\x0c\\\\\\xbf~\\xf7\\x15h\\xfc\\x95\\x9f\\x89\\x9e9\\xfcl\\xa1\\xd2\\x8f0\\xac\\xe3\\xf9;\\x93o\\xdf\\xfc\\xf1\\x82Vk\\x9a\\xd7\\x14\\xd1X\\xfd\\xf6t\\xa6Bf\\xf7\\xf6\\xa6)\\xbd\\xd9\\xf2{U\\x01b\\x1d:\\x03\\xe3\\xfdT/X-\\x03{\\x9c\\x14V\\r\\xe7/\\x076\\xaa\\xcf\\x8eks\\xb8\\xfc:\\xb8})\\xcc\\n_\\xcd:\\x91U\\xd4c\\x91N\\x94\\x10\\xd2?e\\xd0\\xf2\\x90\\x9b\\x9c\\xd2\\xffD\\xb5\\xd2k\\x94#9\\xb4\\xd7\\x89\\xfa\\xcd\\x8f\\x8a\\x9dQ\\xf8r\\xeaV\\x8f\\x10tL\\xde\\xbb\\xfc\\xf5N\\xcd\\x1a\\xabk\\xad\\xbb9\\xf4\\x13\\xd8\\xfc\\xb6\\xf2\\xf1\\x1c\\xe1\\xb4M9\\x95\\x11\\xd9\\x0b\\xe6\\x90\\xa4\\xcb\\x90r\\xb1\\x9b\\x9fF\\x849O\\xe5\\x084\\n\\xc5\\xa48\\x19\\x1eV\\xbfb\\x1eX\\x8a\\xed \\xd00}Zz\\xd9*\\xad$\\xf3p#8\\xa0\\xea\\x85g\\xac\\xd0j\\x8d^\\xe6T{\\xeeI\\xa1\\xb6\\xe4\\x07I.\\xe9\\x1c\\xbf\\xd2\\x87E\\xb1\\x02\\xf9!A\\xc1<\\x83\\x05\\xba\\xa1\\x1a\\xa5=\\xbf(\\x83\\xc9\\x1b\\x8ep\\xcd\\xb6\\x12\\xf5\\xd5\\xfb\\xa46\\x98\\x94\\xa6\\x87y\\xb4\\xc1\\\'\\xd7\\xf38q\\x0bK\\x92\\xa5\\xed\\x18C\\xd29\\xe4\\xf4s?d\\x12-\\x82\\xb3H\\x9f\\xe7.\\xb9\\xcb\\x84\\xf4\\x19$\\x1a\\xda)\\xf6D\\xbfS\\xe5\\xda[c\\xd4\\xb5v\\xf3\\xa7B\\xf4\\x9b\\xc8d(i\\x0f\\x935D\\xd7\\x0e2\\xcf\\x1a\\xce\\xdb\\x8c\\nT0\\xa7\\x9a\\x1f\\x8b\\xc7\\xa0&\\x9c%h\\xaf\\xb4\\xbb\\xeb\\xcfy\\x01\\x8f\\xb3\\xc4\\xbd\\x9dc>\\xcef2\\xad<:\\xf5\\xfa\\xf8(\\xe7 &\\x19\\xfdU\\x16\\xcdOL\\xef\\xdcp\\xc7\\xcb\\xfa\\xd6\\xbbiG/\\xc5IA^\\x8b\\x98\\xef\\xf3Q3u\\xe6\\xa0<\\xe3\\xe0W:c\\x8cK\\xa9\\x0b\\xe5\\xcf\\xd2\\x1c\\x1ey\\xf1\\x1b\\x1a\\x18\\xc9f\\xe5oc\\xd0E\\x9e6\\x8a\\xb1\\x04]Bg\\xed\\xba\\x04\\xe2\\xa2\\n\\xea\\xec\\x1ar\\xeb\\xe7\\xa4\\xeb\\xaf%1H\\xc8#r\\xb7x4v\\x07\\xb4IX\\xe8v\\xc8T\\x9e\\xb0U-V\\xd2\\xbc\\xbcMoLFv\\r\\x9a\\x7f\\xc3\\x98\\xc7;\\xda\\xa3\\x17\\xa5\\x03\\xb1Q\\x0eb?BA*\\xd4\\\\c\\xb7\\xde\\x91:U\\n)\\x1b\\xe1\\xbfz\\x91\\xb8@\\x8b\\xfd\\xb1\\x9c_E8&4\\x9e\\xfa`\\x86h\\xf1\\xe8\\xd89\\x0b\\xc3h\\xeam\\xdf0\\xec\\t@\\xbe\\xff\\\\\\x9cS\\x82\\xb5\\x9e\\xbe\\xbf\\xe4Q\\x83\\xb0~r\\xdf#\\xaa)\\xb6\\xe28O\\x07\\xdci\\xe2\\xa1\\xe7\\x17C\\x0b)\\xe4\\xa9\\xb1\\xf0,\\xd5\\xcd\\x0eF#\\x7fTc\\xb5\\xa1\\xdb\\x0e\\x80\\x08nQv\\xed\\xab\\xc6\\xe1\\xc7\\xcd\\xbd\\xdf\\xdaQ\\x00ac\\x87\\xe7\\x9f\\xf2b\\x9fdo\\xb7\\xd0i\\xd2\\xb5\\x8e9\\xc5\\x81A\\xbe\\xf2\\x1d\\xc8]f\\xc3\\xdd\\xc2\\xec\\x84\\xe6o*\\xa8\\xddrjhsB\\x93\\xab\\x9b\\xc8\\xd3\\xd9\\xa1H\\x96\\x1b\\x94\\x1c-^ZG\\xe3R\\x1c\\xac\\xf4\\xc8\\xaf\\x99\\xbby|\\xd59\\xe3\\xf6\\x16\\xc2O\\xc7h\\x98\\xbc\\x0b"\\x11\\x83NR\\xd3\\x83i\\xbcl\\x91k\\xa8\\x92^\\x8e\\x1c\\x92\\xa8/\\xbc\\xda7\\x16\\xb9sC?OL\\r\\xa6\\xce\\xb1j\\xcc\\x8aI\\x85u\\x92\\x13\\x1a\\xfe\\xd4\\x9f\\xd1\\x8f}(\\x12\\x16\\xeed\\xe6\\xd0\\xc9\\xe7\\xa4\\xedHt\\x85\\xef\\x15\\xe4\\xfa*\\xbb\\xd0t\\xe7\\x96\\xc0\\x89}.D\\x83\\xb2\\xe5JB>\\xd9\\xa8\\x1d\\x15b0\\xb2\\xaf\\xe8\\x1c\\xf2f7\\xaf\\xda\\xd4){\\x16KP\\xdc\\xfa-\\xdb\\xb5,T\\xae\\x88\\xe6\\x05\\x96\\xedMU\\xee\\x03\\x05\\x0f<\\x01bS\\xf4\\xd0\\x88q\\xbc\\x0e=\\xa1\\xef\\xf4\\x9f\\xba\\xdf\\x8c\\xd38\\x83O\\x03 \\xdb\\xa0[\\xbb/\\xd0x\\xa9\\x06[\\x99\\xfe\\x19v\\xd4\\xac\\x83\\xfcW\\xfc+?\\x86\\xfa\\xf81r\\xe1;]\\xea\\xad\\xa9\\x9eD#\\xe61\\x8eY-"\\xc4\\xcb\\n\\xb8\\xd7b::@E\\xcf<\\x0f\\x81>\\xec\\xa1>\\x8c\\xea\\x8f\\xb5\\x00p\\x04f\\x10N\\xecAK\\x9c\\x02\\xce\\x11t\\t8\\x12\\xfc\\x9d\\x03\\xa0D\\xdbi1\\x9c\\xf0k\\xda\\xaaR\\xa0\\x03\\x9d\\xac\\x87\\xe6\\xd6`\\x0e\\x157\\xbb\\xd5*L\\xa5\\x8b$k\\xc3\\xb1\\xfc\\xeag\\xc8O`DX\\x1d\\x11\\xf6\\xf5\\x03\\xe4\\xe5\\xea\\xf0\\xc1\\xd6\\x8ae\\xcd\\xfc\\xed9\\xcd\\x151\\xe2e}\\x89-WTy\\\'\\x06\\xec\\x87\\x9d\\xf5\\xbb\\xa1\\xbb\\xd2|\\xd8\\x89\\x1c\\x7f\\x9c1_<\\x90\\x01\\xe3\\xc6\\x8f\\x97\\xb9\\xbd\\xb8\\xe1}\\xb7\\xdahK\\xb1\\x7f\\xf8q\\x01\\xea\\xf3\\xe93\\xeb7\\xe9Z\\xdb\\xa5\\xb5;&\\\\\\xab\\xafD\\xb8\\xe8\\xc9\\xdf\\x856\\xd7\\x14yaSE;\\x1a\\xb7\\xfe\\xfc\\xb02\\xcf\\xc8\\x88Bl!\\xef\\xa2\\\\\\xa2\\xf9\\xac\\x0c\\xad\\xa9\\xdf\\xa9\\x1c?b1h\\xe5;\\xf3B/\\xb9M\\x02!\\xfb\\xb2IMX\\xc9mY\\x88\\x88\\xe8\\tJ\\xcf\\x90\\x84\\xc6G\\x1f\\xfe\\xad\\\'\\xe7\\x04\\x1a\\xe3\\xac\\x08E\\xb2\\xde\\xc7Z\\xe3.O7\\x1f\\xfd2?\\xefn\\x80\\x8d\\xaa\\xd6\\xd0\\xa1\\x14\\xe5\\xd9\\x90u\\xf8P\\x89%\\xf3\\xd2v\\xbe\\x9c\\xb7\\x16\\x0c9l\\xfd\\xc6\\x88\\x87-\\xa3c\\x12u\\xf4\\xb9\\x1cF.\\xfb\\x1d\\xeb8\\xe6\\x9aGp\\x9e\\x89\\xe7\\x1d\\xbd\\x8f\\xae\\xf0\\x0b\\x87\\x0f\\xaaC\\xf5\\xdf\\\\\\x9e\\x9a]i/|\\x18#\\xcbSP\\xfd\\xfa\\x81+Fh\\xdc\\xd98\\xe9\\xd0\\xe26B\\xaa\\xc1\\x8f\\xd3g\\xf1\\x187~\\xc1\\xe6@T\\xd4\\xeb~\\xe5_\\xbb\\xa4\\xf5\\x1d\\x8b\\x02\\xfcg\\xd3\\xc5&\\xc7~0\\xb6\\xad\\x85\\xbbyq\\xcd\\xb7\\n\\x17\\xb3/\\xe9\\x06\\x95\\xdf\\x95\\xfe(^\\xf0\\x95\\xeaE\\xe1#?\\xf7\\x89c\\xcd\\xb1N\\x81\\x14\\x05\\x84\\xab\\x02\\x1c\\x18E>\\xa2qD\\xd8H\\x94\\xa2\\xc09\\xe7\\xd2\\xd1\\x95`\\x03\\xb4\\xdeB\\xf4F\\xae\\xb0Y\\xfa;\\xcc\\xe5\\xf1\\x8b\\x8b\\x06J\\xd9\\xf1\\xd9\\x94\\x8bf5\\xad\\x19\\x07\\xbc\\x96\\x88\\xbb^2\\x07\\xae\\x97\\xa9WYg\\x92Y)\\t~Z\\x87\\xbf\\xfa\\xd8\\x9ds\\xe4i\\x85gdg\\xf2\\x86\\xde\\x1eVl`\\xe1\\xc69\\xa1\\xe7\\xb7=\\xa5{\\xbb\\xb0i\\xa4Ss\\x1b\\x0eSG+\\xda\\x08\\x8e\\xddZK\\x05\\x82=\\x19\\xb8\\x04j\\x95\\xbc2\\t\\xd1\\x86\\xadh\\x03\\x87E\\x86d\\x07\\xe6\\\'B\\xdf>k\\xd9e\\xbe\\xd3z\\xba\\xf7#\\xdc\\x1as\\x96M\\xd7\\xc21\\x80g\\x19\\xb9[\\xb5\\x00\\xadb|\\x11\\xe0\\xa0\\x18ZH\\xef\\x9d\\x00\\xfd\\x0c\\xe2H\\xe0\\x9f0(\\xc1=\\xe7\\x1a:\\xb9\\xd4\\x1b~s\\x15\\x9f\\x15!\\x16g\\x8aW\\xac\\xc2\\xb7\\xdd3\\xa0t\\xfc\\xe4\\x81\\xbei\\xa2^\\x01\\xba\\xbf\\x7f\\xb9a4\\xe9\\xdd\\x91\\x10]\\xc7\\x19o\\\\wa\\xfb\\xf9\\xfb\\x82\\x18a\\x19w\\xc6N\\x7f\\xf5\\xc0\\xae\\xfez\\x16\\xadmz\\x1f\\xba+\\xdb\\xd5\\xb3\\xb5\\xa2&BD\\x80l\\xbbR+\\xf9\\xe4\\x1b\\x00\\xf0SQ\\xca\\x117a\\xd9\\xe7\\xc1)\\xe3|\\xc4\\x8c\\x0c\\xb6\\r\\xc9)\\xb0\\xe9\\xd2k*\\x87\\xe2\\xab\\xda\\xf8zk\\x12W\\x88hC\\x12\\xbb?\\x96\\xe3c\\x02\\xefJ\\x9fM\\x8d\\xeeQ\\xfc\\xd1/\\x1e\\x1f@\\xeb`\\xdbK\\xe3\\x19N\\xf9q\\x0b\\xcd\\x15\\x95\\xa2\\xa8\\x01U\\x15\\x80d0\\x83^\\xe7#\\x85&e\\xba\\xa5l5\\xb4\\xf6\\xf3\\xb8\\xad\\xc7\\x85x%\\xa4+%\\xa7\\xee\\xcc\\x1fG\\x9d\\xcb\\xae\\x1fl>G5\\xaa\\xa5\\xe2\\xdaq\\x1f(P\\xa3\\xf0\\xa06\\x8e-\\xfeQd;\\xcc\\xa4~\\xbd8\\x18\\xaaPs\\xe1\\x8d\\x82*\\xb9\\xb3(!{}\\xa4\\xef_\\xf0\\x86\\x9c\\x11^\\xe9Z\\xb8\\x9f\\xcaG\\x8a\\x18\\xfc\\xfazJ+\\xf5js\\\\\\xd2\\xa3\\xb5/\\x86\\xc1\\x85n\\xfa=\\xa9N\\xb0\\x10\\xfcj2\\x85\\xb1\\x96G\\x02\\xb2\\xec0\\xc59\\xbb\\x8a\\xea/b\\x97\\xfc:\\xe3\\x12<B\\xdc\\xc0\\xa72T\\xc0$\\xfb\\xcd=\\xf0\\xcb4\\xf5\\x1aF\\n*\\xb9N\\xb4\\xd1\\n\\xc1\\n\\xbe\\x9d\\xef\\\\v\\xd8\\x18c\\xdb\\xb1W\\x82Y\\x88G\\x02\\x9bX2TO\\xc6U\\xb2\\\'\\x96ig]\\x86\\xeb\\x9a\\x19fP\\x18Bq\\xac/nJz\\r\\x82\\x00Q(\\xb3q#\\xdb\\xa2\\xc9\\xf7\\xfd\\xcc\\xbcn\\x82=\\xb4m\\x1bX\\x91\\x05\\x04\\x05\\x08\\xd5\\xd1\\xed\\xc2\\xeb%\\x19\\xc4\\x9b8\\x0b\\x03\\xc9\\x00`\\xf7v]\\x9e\\xa0\\xbdFjk\\xdb\\xa0a\\xc9\\xe7\\x95d$\\x93/F\\xa0\\x95\\xfdd~s\\xb3\\x11L\\xbf\\xc3\\xf5ac\\xf0p\\xee\\n\\x9da\\x08y\\xbc\\t|o\\xe4a\\x81\\xe7\\x8d\\xc5>\\x80\\xbe\\\\rec\\x82\\xd8l\\x02?W\\x99/7bw\\xd2MG\\xee\\xc3\\xc8cv\\x94\\n\\x8e:"P\\xea\\x88\\xf0\\xbb\\xe2TY\\x83_\\xf2\\xd5\\xf4\\xe1\\x112w#\\x92\\xf6\\x8b[&\\xd3iX\\x92h{\\xfeBA\\xc9\\x14g^H\\x8fW\\xd9e\\\\\\xd1\\xc4\\xb6z5\\x0c\\xb88\\xe6^\\xdd\\xbe\\xce;(5\\x96\\xe1/\\xa3\\xafh\\x81\\xdbA\\xc6_69F\\x8en\\xb5\\xae\\x7fiW\\xe7\\xbe\\x1f[\\xa8\\x7f\\xd8\\x8b\\x1b\\x15\\x18\\x89_\\x01x\\xc3\\x18D\\x13\\xaa\\xd3o\\xbd\\x07ZmV\\xc8\\xcf\\xdf\\xe2Z\\x98\\xda\\x12\\xfd\\xf2\\xec|?y\\xb7J\\xe8\\x0c\\xe1\\xfd\\xbd\\xad\\x9e\\xf9\\xc4\\xd8\\x8c@\\xca\\xabf\\xd0\\xd3xv\\xd7\\x81R\\xa1.[C\\xa97\\\\0\\xba\\x98c\\x98\\x7f\\x13\\xbeu\\xf6v\\xb9\\xedC\\xa7\\xd8\\xa4\\xa3d1#B\\xc9\\xd4\\xd2RJ)\\x00\\xf3\\x83<g\\x8a\\xe2w\\xd4ub*+\\xcbw\\xab\\xdfa\\x81\\x13WB \\xa2\\xd6\\xa2#\\xc6/ZMq\\xe6.\\x99c\\xbd\\xdd\\xee\\xc1\\x08\\xb3\\xe4\\x1a\\x1d\\xbeL\\xee\\x1aJ\\xd2\\xcf\\xf1\\xeem2\\x18;5\\\'|\\xec1\\x8fb\\x9f\\xe8\\x18\\x07\\xba\\x1e\\xbaXNT\\x90\\x17\\x1c\\x06E;\\xc9V\\xac$O\\xbe\\x06\\xf1qj{.2\\x80RDn\\x89\\xe6w;I&\\x7f\\x01\\xc7|\\x0e;\\xa29\\xc8\\x14TGT11=1n&\\xf32T\\xccg\\xd5\\xc7_\\xde\\x95Y\\x1d\\xa5\\xb0\\xae\\xb4\\xc5ok\\xa5\\xc3S\\x06\\xf9\\xab\\x7f\\xae\\xeb\\x05\\xbc\\x11\\x0c\\xdeZ\\xbf#\\x18\\x8ad\\x1b\\x93R(\\xe5\\xeb\\x04\\xbb\\xbdr~\\xb9s\\x87\\xbb7\\x92\\xf5\\xccr\\xfcK\\x88\\x92\\xd8\\t\\x01\\x9b\\xfe\\xfbg,CB\\xf9\\x17@\\xf6\\x0b\\xf6Mo\\xc1\\x1d\\t\\x98\\xc48\\xa3\\xacT \\xa2H\\xe1\\xfd\\xd7tQ\\xdel\\x92\\xd5_\\xfch\\xe6l\\x0e\\xfdY\\x8a\\xdf/\\xf5\\xa2\\xc1\\x18(0\\x9a\\x1e\\xeet\\x82*O\\xd4\\x1aK\\x9d\\xfa\\xcc\\xc4\\xe7e\\x92\\x94\\x90w\\xcc\\x88I*E\\x8f\\x16/,\\xb9\\xad\\xae\\x96\\x05s\\xd6\\x94\\x8f.\\xc1\\x0f\\\'\\xe3\\xa7N\\xb2\\x0eKY\\x19\\xae\\xd2jz\\xa8Iw\\x8c=\\xf2\\xe4\\xa5?\\xaa\\xe2)\\xa4\\ty\\xf0\\x94\\xb7\\x01!\\xfc\\x86\\xd8\\xdf\\xc6\\xfa\\xf8\\x16B\\xb3\\x7f\\n_\\xd8\\xa8\\x0fH\\xf2f\\x9a\\n\\x1b \\xb3\\xe33*guU\\xcf\\t\\x03\\x0e\\x19E\\xf66\\x9eNf\\x92\\xcd\\x17\\x8cO\\x1b\\xa2\\t\\x9f\\x12r\\x9a\\xc5\\xfb2Y\\\\n\\x81)\\xac\\x04\\xfd|\\x98\\xc2\\xcb\\x81|f\\xb6\\x14O\\x06(\\xf8Y\\xaa\\x9c\\xc4\\xde>~4\\x82\\xdd.\\xcb\\xc4iF\\\\\\xf5 wJ\\xf4C\\x82FO\\xba\\xb6\\xc0qk\\xd2\\xd8\\xcf\\xb4]ix\\xb8hAb: $\\xf5%#\\x11\\x17\\xe4\\x01\\x1fws\\x07\\xa7\\x89\\xcf\\xb1\\x8b\\x85MZ\\xcd\\x9aN\\xdf\\x06\\xcf\\xe6\\xb2#\\xe4\\x93\\xe6K8\\xab\\x0f\\xc4/\\\\<`\\xe1[h\\xba\\xa3\\xc2\\xc1\\xbc\\xbfl:\\x7f\\xdb\\x11\\xff4\\\\\\x1cU\\xd2LJ\\xa9\\xd5\\xd9b\\xb2>\\xe9\\x1d\\xd6A\\xf7>Uea\\x99raU0\\xfcG\\xb4\\xf9\\xc3\\x81D\\xe7\\x86\\xb1p\\x1axLk\\x8c\\x98\\xcb\\x01F\\x90\\xb2\\x81dS\\xc50\\ncO\\xda\\xd2R\\xb6#\\n\\xfc\\x89\\xbbn\\xf8\\xc6\\xe2T\\\\ %\\xfai\\xa8\\xfd\\xe2\\xe3r9\\xee\\xfe\\xda\\xe8\\xc6\\xcd\\xd3\\n>\\x07\\xd8f\\xa4V\\x1b\\xb2\\xfb\\xd3\\xbc\\x86\\xfc\\x8d8P\\x80PSO\\xea\\x01\\xbd\\xe1\\xe7\\xdd\\xcc\\xc6\\xe1\\xeb\\xc8Eni\\xf3\\xcb\\x0e\\x16\\xb4\\xf8\\xd8\\x14I<\\x18\\x030z\\x12\\x9f\\xf4@\\xb1\\xe3\\xeb\\xd2va2\\x08s\\xbd\\xb6\\xd9\\xb6c\\xd6\\x8dcv\\xc3\\x06\\x85f5\\xeexx\\x91\\xfeC\\xe8\\xf7\\x03\\xd7O\\x17\\xec\\xe9\\x88\\x1b\\t\\x1cXa)\\xd1\\\'\\xff\\xd8\\xfeK\\xd9D\\xc2t\\xd5\\xd8\\xcac,\\x9fD\\x99\\xcf\\x80\\xf7Y1\\xd7k\\x89/c\\xbdKe\\xe4\\x86~\\x1d)/\\xe7\\xcf\\x8f{\\x95OVf(#\\xce3\\xe9J\\x8e\\xb7oX\\xc6\\xa9S\\xa6\\xd3\\xc5\\xd7\\x16\\x9e#\\xcc\\xceG\\x85\\xa8-E3\\x89\\x1eM\\xbf\\x7f\\xaa\\x8f\\xf2\\xacq)\\xde\\xce\\xb1:\\xecMR\\xbc.\\x86\\xf2\\xc5\\x99\\xa1\\x1a\\x11[\\x8a\\xd0\\xb0\\xf9g\\x9f\\xef\\xd6\\xd0\\xd7qD\\xd5\\x13ar\\xace\\xda)\\x8f\\xdb\\xe8\\xd2\\x04\\x1e\\xf6x\\xd6\\x1f\\xe5\\x85\\xad\\x1d\\xd1RfN\\xf3\\xa6\\x12~bf\\x16\\xa0G\\x0c\\xb4:\\xef\\x84P+Y>\\x03Y3>\\x1f\\xf7\\xba\\n\\xb1=$M\\xe0ay\\x0e\\xde#\\xf8\\x85\\xbe\\xa5\\xc5DJ\\x02$\\xfc\\x95\\xe1\\x12\\xa9\\x11[\\x7f\\x82\\xe6a$\\x99\\xabH~7m\\x95\\x10p=\\x13\\xa9`r~\\xc00\\x91a\\xaa\\xca?\\x98\\x9f\\xfad\\xf4j\\xe1z\\x06%\\x12\\xdb\\xb6\\x08\\x95\\xbb\\x13_\\x80P\\xe3\\xec\\xcc;9a"*Dw}X8\\xfdE\\xdc\\xb5\\x99\\xc6,z\\x9fe\\xb2\\xc3\\xfb\\x9d\\xcf5`\\x02\\xf6\\xc8\\x88\\x0c\\x03\\x92\\x10f\\x9bb\\xf5\\x8c\\xf5\\xcf],\\xb1%N\\xcb=\\xe0\\xb2\\n\\xe9\\x81\\x05Y2s\\xb3\\xd5\\x82\\x16\\x1f\\xccc\\xf6\\x0eU\\xbe*pZx>\\x91\\xd6k="W\\xecX\\x9a\\xb2\\xd3\\\'\\n\\x19I\\xd2d4-w\\xb8\\x8bI\\xfaR\\xccy\\xfb:\\xa7%7\\xaeS\\x84)\\x8f\\x1d<6/:BX_>\\xad!\\xe2\\xdb\\xaf:\\xc2\\x9b\\xc2\\x1b\\x8fi!\\xc7\\x81\\xbe\\x98\\xa1\\xb2\\xefi\\xa3t\\xb2t\\\'\\x0c\\xe1\\x8e\\xd9JF\\x877\\xbb\\x8b[\\xcc\\xd7\\xe8\\xa2\\xb2\\x9a\\xeb\\xa0Op\\xd2\\x84\\xc1<\\xfdn9p"\\x8d\\xd5\\x1b\\xe5H\\xc6e\\x1e\\xfc\\xac<\\xc71\\xc2\\x89\\xd3F\\x87\\xd6\\xf9tN\\x9f\\x1d\\xf2\\xb6\\\\ \\xea\\xa9]\\x02\\xc7\\xafz\\x18\\x1e\\xef\\xdf\\xf2\\x84\\x8dh+J\\x90r\\x01\\xf2\\\\\\xc2\\x8as\\x80\\x1d\\xec\\xea\\x04\\x9d\\xa4iWKPq\\xcd\\xe3\\x027\\xb2/\\\'J\\xfd\\x8c\\xded\\xdf/%\\x1f\\xa2\\xbc\\x85q\\x96W\\x15Ut\\xaf\\xe9\\xf0}\\xf8\\xdcY?\\xed\\xdb0:\\x1bWdthBF\\xda\\xa5\\xb1o\\x17Z$\\xf7v\\xd9>6g\\xc7\\x94\\x90\\x9c\\x8dH\\xda+\\nUfv\\xfc5\\xf0\\xed0\\x8b\\xff$\\xf0Yo\\x07\\xc5X\\x02\\xeeiRW\\xaf\\xa1iI\\xff\\xac\\xf7\\x8a\\xd6h=\\xff\\xce\\x8f2\\x8b[\\x17&m\\xfe\\xce(\\x1d\\xe5Ys@\\xc6\\xe8\\xc6t\\x83\\xdb\\xcf\\x14\\xc3\\xb6-\\xf79\\xf2\\xe8\\xfc\\x97_q\\xb3\\x12\\xd7\\xdf\\xe4\\xb3f\\x13\\xf5&\\x83\\xdfqH\\x97\\x08\\xee\\xe3+\\x84~\\xd0\\x98\\x91\\xed\\xc3\\x97\\x03l\\x8e:\\xb6\\x8e\\x0e\\x99\\xd6\\x0ck\\x84\\xf5\\x97\\x1c\\x1b\\x91\\xc7J^\\xd8\\xc1\\xd2SD\\xd8\\x8eJ\\xb6j\\xa3%\\xb5$2RB\\xea4\\xe5\\xc8d\\x03uNL+c\\xae\\xde\\xee\\x02\\x96\\xe6s7r\\x8a\\xaaB+ej\\xc8\\xaeN\\xc2N\\xd4\\xec\\xb4\\xb4\\x92r&\\xbd\\xd4\\xc6\\xd2^\\xcbz\\xcc\\x9b\\xed\\xc46\\xe7\\xce\\x9d]UL\\x16\\x97\\xaf*\\x97\\xb15\\xe9\\xae\\xe5\\x03\\x17\\xe9O&\\xed\\xbeP\\x86\\xcd\\x1d\\xd9\\x1bX\\xf0\\x13\\x0f\\xbeN\\xa1 \\x83\\xa8\\x8c\\xe8\\x96\\x96Q\\x9c0\\xcc\\x01#P"\\x9a\\xb8\\xd0w\\xf7\\x01A\\xbdi\\x878Fh\\x10t\\xe7o\\x81]\\xcfP_\\x8d\\xd9\\x1e\\x1b\\xac\\x01\\xbb\\x9f\\x12\\xc7\\xef {\\x1d\\x98|\\x9c\\xc2\\x94V\\x0c%\\xc9\\x91\\x99A=\\xcb\\x8d+\\xf5\\xc9\\x01\\x14AUlW\\x07\\xfb\\x9fP\\x99\\xc5-\\xdd:\\xb9\\ri\\xa83\\x08\\xea\\xf4Y\\xf6\\xd0\\x10\\xf02\\xb40\\x85\\xd0N\\xed"\\x94\\xb0\\xa3v\\xcc\\x19(sm\\xe7\\xdaUn!Gv\\xba\\xab\\xc0K\\xa8\\x08\\xceS~\\xa7\\x95\\xeb_\\x13\\x9a\\xfb\\x9f:\\x87\\xf1\\x98R\\x04\\xa3.\\xb9I*\\xb2\\xc8\\xab3\\xce~`\\xcb%y\\xb1\\x19e\\x12a\\x9c\\x1f\\x942\\xccov\\xf6,\\x15\\xb7\\xaf\\xc6M\\xe5\\x17\\xe7\\xeee\\x9f\\xec\\x07\\x94\\x85\\x1f\\x80\\x93\\xf9\\xef\\xfa\\xc9\\xb2L\\xc5I\\x8a\\xa7\\xce\\xec\\xaa\\x80[\\xe0\\t\\xf9\\xe18\\xd3lK\\xa9\\xf7\\x8e\\x18}:\\x12\\x0e\\x8d\\x8ak\\xa9\\xf3"\\xec:\\x8fe\\x1bD\\xcc\\xd8\\x15\\x8bt{\\xf8I\\x9ft\\xc6\\xd8\\x92$\\x98\\xea\\xc7\\x8b\\x98\\x0e>\\x7f\\x7f\\n\\xea?\\xa8x\\xbb\\x06HV\\x9a\\xacF\\xfaaw\\xd5\\xc2e\\xbb\\x1c\\xf1\\x8f\\x11w\\xe2\\xec\\xd3\\x03Oi\\xbae\\xe7o\\x85\\x16\\xaf\\xf8\\x97\\xfdR\\x9cVc\\xf7\\x82u8$\\x0f\\xf2M\\xb9:\\xce\\x0cs\\xbf.\\xf5\\xef\\x8a\\xec\\x8c\\x89\\x12Ef\\xd4\\x8f\\xe0|\\xf5\\x03b\\xf9\\xa4\\x89\\xdaH<\\xdb\\xdeq3\\x94\\xc6\\xcf\\xcc\\xef\\xd5t\\xcf\\xc0\\xe1\\xe9^\\xa1\\xb0\\xb9\\xa2\\xedy\\x9b\\xbb\\xb9V\\xd1]\\x90\\xaf[\\x87\\xd9i\\x8a\\xbej]Y}R:JWR\\x98\\xc6@\\xe8F\\xdc\\xa0\\xc9Y\\xe1\\xc3Z\\xe0?\\x1a\\xf1,\\x01\\xe3\\x176Z\\xea\\xca\\xc7}\\x16\\x88)7\\xbf\\x88.\\xfe\\xbe\\xe5\\x1a\\xcfZ\\xbe1\\xc2\\xb6\\xb5\\xe3\\xfa,\\x9a?\\x0b\\xf8ik+2/1\\x99\\x8et\\x03\\x9d\\xed\\x8dM\\x1d\\x8eb\\x94\\xdc\\xbe\\x9f0\\x9f\\x7f\\x99#pZ\\xe1E\\xadE\\xa2|\\xcdX\\x9b\\xcb\\x13K\\x82L=\\x1ew\\x92\\x02\\xea\\x998\\xf26\\xe6\\xd3\\xac*\\x88\\x13\\xe2\\x9d3.\\xa1\\xf8\\x9b\\x84@%\\xc7\\x8c\\x04i\\xa8\\xaa\\xb3\\x18v\\xda\\x83\\xf6\\xb8\\x83a1\\\\\\xc2\\xca\\x93\\x8a\\x8e\\xc1#e\\xfc\\x07,\\xe8W\\x85_\\xb9\\x92\\xfc\\xd1\\x90\\n<\\xeb\\\'7[\\\\jl\\xe8u\\x1d\\x17\\xac\\xc6)\\xb9\\xfa\\x05v5\\xbc\\x14\\x19Jr:\\x82\\\\:\\xd7\\xb4\\x95\\xa71b\\xafU^\\xc6C\\xd2wk\\x8c\\xd9\\x94\\x17\\x1f\\xebZ\\xdd\\x11\\xf8\\x19\\x8c\\xa3\\x1az\\xcd{IV\\xb9O\\xbb+\\x07\\x17\\x85N\\x17L_D\\xa9\\xb8\\x8f[E\\xa2a\\xa5\\x03\\xef\\xca\\xb1b\\xb8\\x02f\\x1cW\\xf1Z\\xa8\\x8f{\\xfa\\x7f.\\xaf\\xb2\\x06Oz|v8\\xa5\\xa7-\\xc7^6U\\x19\\xc7\\xc8\\xf42\\xe1##?\\xabp\\xed\\xdcv\\xb7\\xc3a\\xc1Jl|\\x8c\\xc6>\\x9d\\xd3\\xddi\\x91\\x83J\\xe9 \\xdb|D\\xbc+2W\\xb7\\x19 \\xb1\\xfc\\x16?\\xe2\\xecN\\xc0\\x81\\xfeS\\x1a\\xe8\\xd3@\\xbf\\xb6\\xb9\\x01_\\x1aG\\xb9\\xa1L\\xa7\\xa67fn\\xb3\\xe9O\\xa1\\xc6\\x8a\\xa8\\xd2|n\\x0b\\xb8i\\xef\\xd5[\\xf34\\x81\\xf6\\xc2 \\x9e%\\x0f\\x1c\\x8f\\xa1.\\xaf\\xec\\xddT\\xa2\\xabL\\xee\\x8f\\xe4pTP\\xf7\\xea3\\xddSe|\\xb6\\xaf\\x8b\\\'\\xc5\\xccDFD% \\xe3&\\xee\\xc6\\xed\\xf4~\\x16\\xc2\\x91M\\xad\\x1f\\xbc>\\x06\\xc7Q\\x01\\xb4\\xfdLo\\xa2\\xf4\\xa2\\xa9\\xb6\\x8d\\xaex\\xc4\\xaa.\\xda#O,8|\\xf57\\x01E\\x0f\\xd5\\tP\\n\\x9d\\xeblt\\xbe]~q\\xc8)\\xbd\\xd5Q\\xab\\\'\\xcd\\xa2\\xcc\\xed\\xce4p\\x0e\\x8c\\xf3\\xaay\\xcd\\x1a\\x86\\x9a\\x11\\xc8\\r, h5\\x1e\\x0b\\x1eU\\xcf\\xb4\\x9e6q$\\xa9\\xbf\\xddf\\xcc{\\xddy;\\x1a\\x99\\xed\\x93\\x7fS\\xaf\\x8f\\x0f|\\xfb\\xc9\\xcb\\xd8P\\xf7\\xf0\\xa5\\xbbw\\xc3j\\x05\\xc2S\\x96\\xd5\\xaa\\x0e\\xe3\\xd5<\\x8b\\xcd\\xe5\\x96\\xcf#\\x02~\\xc5\\xc6q\\x9d\\x10+\\xca\\x92\\x1b\\tEJ\\x85\\xf6\\x13F\\xb6R\\xaa\\xfc\\x96\\x84\\x81\\x8a\\x8a\\xa4\\xf2\\xe6\\xb4_\\xe8\\xee\\x18\\xcf\\x16F\\xafy;\\xe6\\xa4\\xb1\\x95q0\\x99\\xc3\\x12\\xb1\\x7f\\x86t\\x86\\xe75\\xe9\\x86\\ry\\x89j\\xf6=\\n-\\xd4\\xdd\\xb5\\x7f\\xf5\\xea\\xf1\\x88l\\x18\\xae\\rs\\x98s\\x15T\\xa6"\\x04\\x9b\\xfe=I\\x1dXK\\xc4}z{H\\xb1:\\xa6l\\x81\\x99\\x86\\x97\\xc1\\xd2\\x85\\x86\\xb0M\\xb2\\xf5\\xe9W\\xe3\\xbaM\\x9e\\x80C\\xeb-\\xfa\\xb80\\xeeI\\x07\\xe2\\xc8\\x91\\x12\\xe3bS\\x80\\x80\\xa7\\xc7\\xf77\\xcbH\\xf5\\xb2\\x8aig\\xf7G\\x95\\xa3\\xae\\xe6\\xca\\xbf\\x04E\\xa3\\x8e\\xf1\\x0b\\xafq\\xea\\xd4\\xe9\\xf6~n\\xa0\\xe5s\\x15\\xc0\\xc2k\\x99\\xe2}\\xebu]\\xed4\\x96\\x9ed3\\xf4\\x90\\x13,\\xc6J\\xfb\\xa7&\\xb9Gj\\x8c\\x06\\x8f8a\\x02vH?\\xdf\\xd0\\x15\\xe8\\x10S\\xa2&~I^be\\xb9\\xf6|<\\xff\\xa2"4\\xdbh.i\\xcf9\\xdd\\xda\\xa1\\xbbj8\\xc1\\xfbJ%\\xedq\\x8b\\x98\\xf8\\\\\\xb2f3\\xd1\\xab\\x0eg\\x93v\\xd2f\\xfeu\\xce\\x00-\\xd8\\x90C\\xfd\\x0c\\xe8\\x85\\xee\\xc7T\\xd1\\xc5\\xf5zP\\x13;v\\xec\\x01Ag\\x03X/\\xa1R\\xf7\\\\e6\\x7f5\\x1b\\x8d\\xd7\\xad\\xa0/\\x02\\xfd\\x88\\x91\\xb9Y\\xfd\\x90\\xedj\\xe4\\x9c\\xbe%\\x97\\x11\\x11p9T\\x16\\xc4\\xb3s\\x14\\xe5\\x80\\xea\\x1c\\xd9p8%4&>\\x96\\x1e[Y\\x14VR\\xde\\x11\\x13\\xe8k\\x90Y\\x9f\\xdb\\x7f\\xc6#u\\xae\\xe1\\x97G\\x86\\xa9I^4^\\xba\\x18\\xde\\x15(\\xa0\\xa5qP\\xadE2\\xc8\\xd7\\xb6\\x1c\\xb3\\xae\\xfd\\x8e\\xd16B\\xbc(F\\xa6oHO\\x7fD6Ab\\x16\\xcf\\xb7[\\xd4\\xac\\x90\\xcc\\xc6\\xce\\x1f\\x97\\xcen\\xcd\\xc0\\xc4=EV[O\\x9dp+\\xa0/\\xfa\\xa0\\xc8\\xa1\\xdc\\xa7\\xe0m\\xd8\\xe7:g\\x93\\x8a\\xdcwM\\x06_\\xb5&-<\\x92\\x1f\\x10E\\xe0\\x0et\\x8a\\xea\\\\N\\xbc\\x13\\xd2H\\xaa5&?\\xa8\\xf8"\\x89@]P\\x87\\x05\\x9f\\\\K\\x92\\xb4\\x13|\\xd1w\\xfauE\\xf2\\xd6\\xa5?\\xca\\xff89\\x1dh\\xcb\\xed\\xb0\\xd0\\xba+\\x13Q\\x8c\\xc9M\\xa4%\\xb1`\\x12k\\xfa\\x84\\xd3\\x00Dr\\xc5\\xa8O\\x8b\\xdd\\xbe7\\xde\\xbc7\\xa5\\x1b4\\xf2B\\x90\\xa2\\x9e)F\\xefq\\x07\\x07\\xd8\\xc1\\xad\\xc9\\x835\\x83\\x14\\xf4\\x02%\\x9d\\xc9|)n\\x8c\\xd4l5?\\xee\\x17\\x85\\xe2Fo\\x1d\\r4\\\'\\xb4\\x82g]\\xb4\\x7f\\xab\\xaat\\xdeRmEJ\\xd5\\x0e\\xbd\\xb2ig\\x7f\\xc3\\x15b\\xd1^\\x87k\\x82l\\xb3\\x14\\x16\\xdb\\x0c\\xdeL\\xc1\\xea\\xf3\\x9b\\xf2\\x80\\xb2\\x0b\\x01I}\\x9c\\xf2\\xd0\\xe2\\xa1aM$n\\x91\\xa4\\x12_\\x0b\\x04P\\xd3\\xaa\\xb1f{\\xd4%X\\xe9^\\x86\\xb0\\x1bj\\x99\\xa2L\\xd41\\xe2Qc&\\x16\\xfd\\xe8$k\\x87\\x88\\xf1\\xbcI\\xa2\\x1f\\xd3\\x052lO\\xcfg~\\x11\\xff\\x86\\x1e\\xe6\\xc3>Y6\\x7f\\x97\\xde+B\\x7f\\xd6\\xbf\\xf4\\xd1\\x99*q\\x8a\\xe8\\x1dF\\xbe\\x0f\\xa1S\\xe0\\xb6\\xa0\\xa32\\xbe\\xfe\\xd7\\xab\\x06\\xe9\\xcd\\xc7\\xb5Bw\\xa8r\\x9c\\xdfq\\xaclq\\xdf\\x9bT\\xad\\x84x\\xaa\\x0c_\\xad\\x1fp\\x8b\\xfb Q*\\x0frU?\\xf7Hk-\\xf4\\tho\\xe9\\xb1\\xba\\xd3\\xfb\\xe7\\xb3\\xa8\\xa0\\x0esd\\x02\\\'t/\\x83R\\x87\\x9e\\xd66C\\x0e\\xc9\\xcc\\x0b\\xb0\\x12\\x1e91m\\xd5\\xb9Z\\xa9\\xa5\\xf4\\xb5\\x17\\xf7\\x0f\\xe0\\rmQS\\xab\\x87\\xaa\\x9b}\\x08\\xd9D\\xdb\\xda}!\\x04\\xa2-&\\xdd\\xd6\\xcbc\\x98X?\\xc44\\xcdrs3\\xf7J\\xea{Z\\xe3Kw(o\\x1d\\xf6\\xed\\xa7\\xcb\\xd5\\xa4\\xa8\\xcf\\xbae\\xaa\\xb7\\xd2\\x96\\xd1s\\xa8\\xa4\\xf2)\\x07r\\xc6D\\xc8\\xec\\x1b\\x17~\\x83\\xe2\\x17\\x98;}\\xb7\\x0c<\\xaed\\xbd\\xf9i\\xbeW\\xcec\\xd5o\\xf4\\xee\\x1e\\xc7\\xad)\\x1e&\\xf4\\x03\\xb7ZS:\\t\\x82C\\xd1\\xc3\\x8b\\xd2"\\xd2W\\xf3\\xf8\\xe2[\\xe3\\xbfH0\\x184O<>X?\\x85\\xd5\\xdeb\\xd7\\xc5\\xfa{}\\xb1\\xff\\xf2sw\\xa2wg\\xec\\xec\\xae,\\xadm\\xbf\\xe4\\x03c\\xb6\\xd6\\xf6\\xb8.!\\xca\\xfar\\xeb\\xd2\\x99\\t\\x17\\xd8\\xf4\\xee\\x98\\xc3\\xf7Wq\\xcf\\xf4\\xb6\\x95MA\\xf7\\x1d\\xa1\\xf8h\\xbc\\x14th`\\xca\\xa8\\x87\\xf7\\x1c\\xd4*\\x9c\\xb8\\xe8\\x9f\\xde\\xa5\\x8d\\xe5\\xd0w\\xa7\\xab&n\\xc7\\xe6V{\\x00\\xf1\\xc4K\\xba\\xc3\\xb2\\xb1\\xd1\\xf1A\\xc5\\x10O\\xe4#e\\xe4~C\\xc9dB`\\xf8l\\x99\\xa3\\x9eg\\xeb\\xbd\\xcd\\xa7\\xe1\\xe4\\xf6MZL\\x14\\x92bC1\\xc17\\x9c{I\\x14\\xfbxmU\\xaf3\\x1e\\x97\\x86\\x11o\\x92tE \\xa6W\\xd8Q!6`P$\\xcb\\xf9\\x11\\x98o5\\xecQnsJR\\x95\\xa9\\xf73\\x01\\\\\\x1f|9\\xe9F\\xd9\\x07\\xfe=K3\\x9b\\x83\\x1cx\\xe4!D\\x9b\\x82$S\\x01\\x83\\xae\\r]%S\\xd3_J\\x86$\\x9d\\xe7#\\xceW6tU\\xea\\xe9\\xd8W\\xdf%\\xe7\\xb2\\x82\\x9c\\xc7m\\xba_d\\xf2\\r\\xf0\\x87|\\xd4\\x0e\\xa2\\x8a>>$\\xe2\\xdc\\xa1-\\x00P\\xae\\x15\\x87\\xf5\\x9f\\xe1\\x17\\x92~\\x9b \\xd3"-\\x8b\\xa0\\xc6\\xb2\\xc5<\\xe8\\x03J\\x8ay\\xb3\\x80\\xca\\x90\\xaf\\xbb\\xd7Wv\\x9d\\x9c\\xe2\\xf2\\xb9\\xdb([\\xb1\\xb2\\xc7x\\xf1\\xd1D \\xb7\\x8b"\\x15\\xcb\\xb9\\xe9\\xb6\\xaa\\xd9-%g9w\\xf5Y\\x87\\xd3\\xd4\\tr\\xd4\\xc4n\\xb4X*\\x0eE\\xfa\\xa2\\n\\x9cE.\\x94\\x97\\x9a\\x87\\x05*8vO@\\x91+\\xa8\\xbf|\\x1a\\xab\\r\\x0c\\xbb<\\x83\\x87\\xd8\\xb6\\xe5\\x13\\xae\\xdf\\xa6\\x86\\x91[v\\xbe\\xf0\\xc9\\x00\\x8c\\x05\\xd3_\\x1b\\xfa\\xa8[\\xbfN\\x18V\\xd3iAM\\xfd\\xe2\\x89\\xe0\\x97\\xa3QB\\xf1\\x083\\xad\\xadTjf\\x15u\\x93\\x90"\\xbb\\xa4\\xbb)\\xe9\\xccL\\x93_\\x9d\\xfat\\x80\\xbe0\\xe7\\x80\\x88N{W\\x8b\\x86\\xb2\\xf1-\\x0e\\xdd/N\\xe2\\x9a\\nb\\xf2\\xd2\\xde\\xb6\\xaeE\\xe8\\xc2\\xf4\\xc9\\xd1d\\x1d\\x1a\\xe3c\\x1d\\xd8\\xbb\\xf9\\xd3\\x8c\\x83\\x02\\xd1\\xab\\xac\\xbcc\\xa2\\x1c*\\x1e\\x1bZr\\xa7\\xa7[rU\\xaa\\x13\\xcf\\xd4\\xcf]\\xdf\\\\\\n\\xe9\\xf4\\xed8\\xfeX\\xa6Z\\xa3\\xc8\\x07\\xd9\\xb3\\xc4Eb\\x82O\\xd2\\x13j\\x8e\\xfd\\xf1\\x8cFui\\x16\\xad\\x12B4\\xfd\\x96\\x99S\\x1c\\xe5R\\x98\\x14\\x82\\xccv\\x08\\x81\\xbez\\xe7!\\xd21Sy\\xfe\\n/\\x05\\xb5[\\xfb\\xf8[\\x82P02\\xd3\\xebj\\xab/yH\\\\\\x98\\\'\\x1f\\xecO\\x8eb\\xf9\\x9b>\\x95\\xe2\\x8dx\\xd50m\\x7f;\\x12\\xdbK3\\xbf\\xa5gM\\\\\\xdb\\x07\\xac\\x94^\\xd9\\xe4\\x9bl\\x9b\\x88\\xf1\\x15,\\x11/\\xb5\\x05\\x98\\xa9\\x15\\x107\\xac\\x956\\xee|\\xcd\\xbd.\\x01\\xb1I\\xd9\\xda\\xf2V\\x0b\\x85\\xcdI\\xe6\\x11\\x7f\\xcd\\x02\\xf7\\xdcd/\\xb3\\x1e\\x1f\\x05\\xe0\\x84\\xab(\\xbb>\\xeak\\xd2\\x8f\\x19\\xa6)\\x06n~\\x88\\xa0x"\\xc4\\x9d\\x1e#p\\xddD\\x80\\xa2F\\x93\\xef\\x12\\x93\\xbaN\\xca\\xd6\\xb3\\xf9\\xa4F \\xc2\\x1dH\\xa1\\rW\\x9f\\x89&V0\\xf9\\xf5\\xa2, )m\\xb6q\\xfe\\x82\\xa0\\xaf\\x95Z\\xcfzI\\xe1\\xe1\\xa3X4zD\\x16p<\\xfa;\\xb6\\xa5\\xec\\xcb\\x9b\\xd5\\x07f\\xaf$\\x00~\\xeb\\x070\\xca\\xf4+\\xd4fm\\xde\\xf97\\x0e\\xb5\\xe5\\xcb\\xba\\x11\\xd0\\xbeOV\\x98\\x99\\xc6Eu\\xef;\\x15\\xdf6\\xd5\\x83\\xc3g\\xed\\x17\\xdf6U||&\\xca\\xe4\\xb5\\xdf\\xb3G\\xea2X\\xc4P\\x9d\\xa3\\xe7 \\xb0W^m\\xae\\\'\\xc5\\xd4\\x9a\\xb1\\x17"\\x82\\xbb\\xb0K\\xed\\xb1\\xeeKG\\x11\\x1c\\xbe\\x9b-\\x14\\x99\\x94\\xdez\\x82\\xd7]\\xaf\\xbb\\x89\\xf5\\xda\\xd1\\xbd\\xb2s\\x1b\\x10\\x0f\\xb2\\x9e\\xdc\\x8dd\\x98y\\x99<\\xd3qu \\x04u\\xa4\\xa4\\x18\\x9d\\xc0\\xaeH[\\xa4\\xe1\\xfa\\x81m1\\xaf$\\xfd\\xa1\\x89i\\xeee\\xfd\\x94\\xaa\\xec\\xf4\\xa8\\x94^\\x1a\\x1aX\\x00\\x8eb\\x1a\\xf5M\\xc8\\x17j\\xf0\\xa28T\\x12\\x84E\\xceUA\\xb3\\xc2\\xd9{\\x06N\\xae\\x86\\xe3=[\\xfb\\xc4/\\x83\\x9a\\x19Ou1\\xe7c\\xe4\\xbd\\x01+4%\\x18\\xb2\\xdb\\x8c\\xa4\\x80X\\xe8\\x16\\xd0a5\\xda\\xfc\\xe2\\xd3\\x87\\xd5]\\xf3>\\x882z \\xd6\\xad\\x81GV\\xda\\xa0\\xa13g\\xd8\\x1dq\\xf7\\x8cV(_=\\x8f\\\\\\x7f\\x84\\xb3\\x0e\\x07\\xbd\\xbd\\xaf\\xf8a\\xd6\\xbb\\x95\\x04\\xcaG\\n=\\x0b\\x0bc\\xdaAx\\xc1\\t\\xe9D\\\'\\xe7\\xc3\\xa72m_v\\xafW\\xe0\\xf9F\\xe9_\\xb6s\\xd4=Q\\xec+\\x85\\xb9A\\xae+\\xac\\x02v\\x00\\xe6PC\\xe2r\\xa3\\xe8\\x88\\xfe\\xc8E\\x0bi8\\x83)ge\\xa8\\x88y\\xebc\\xd5Yb\\xd8\\xf6\\xf5\\x8e\\xfa\\x9a-\\xef\\xd1k\\xbb\\x04\\xe1\\xdc\\x0c\\xb8\\xe0A\\xd6\\x9b\\xc0\\x87\\xe5OEC\\x1eY~\\xd9\\xbd$|\\xef\\x9a\\xc81,\\x1a\\xc3\\xff\\xd1Ae+\\xb7;\\xd1\\xa9\\xab\\x10\\x14E\\xd4-\\xcdl\\\\\\xf1\\x13\\xec\\x92\\x83i[\\x1aX[#%\\x009^dBj\\xad\\xe4\\xd5\\xcd\\xb9\\xef{a\\xd5^W\\xcb\\xb0u\\xc5z2\\xdb\\x7f?\\xd3P\\x1fK\\\\5\\xdcA\\xbf\\xe9\\xcc\\xcd]\\xa7\\xf2\\xe0\\x97\\x8foz`\\x10\\xda,\\xb7\\x88\\x14F\\x170\\xb6\\xea\\xf4\\xf2\\x16\\x97\\xa7U\\xf0\\xbf\\xe1\\xb5\\x12\\xaco\\x8f\\xd0\\xab\\x9cO\\xc9N\\x02\\xe6/\\xbd/"6>\\xb0lQ\\x8f$\\xcal2\\xe7\\x94_Qo\\xdc1\\xab7\\xadS\\xb4Yn\\\\\\x13 \\x13\\xff?\\t\\xa7>\\x1d\\nendstream\\nendobj\\n27 0 obj\\n<< /Filter /FlateDecode /Length1 2495 /Length2 21473 /Length3 0 /Length 22924 >>\\nstream\\nx\\x9c\\x8c\\xf6\\x05P\\x1cl\\xd2\\x05\\n\\xe3\\xeeN\\x82\\x0c\\x04wwwww\\x1b,0\\xb8\\xbb\\x13\\x08\\x10 @pw\\x0b\\xee\\xee\\x04ww\\x08\\x04\\r\\x16\\x9c;\\xd9ww\\x93\\xfd\\xfe\\xbf\\xea\\xde\\xa2\\n\\xe6\\xb4\\xf7\\xe9\\xeeg\\xa0$SQg\\x14\\xb5p0\\x03J9\\x80\\\\\\x19Y\\x99X\\xf8\\x00\\xe2\\x8aj\\xac,\\x00\\x16\\x16v&\\x16\\x166$JJ\\r\\x1bW;\\xe0\\xbf\\xc5H\\x94Z@g\\x17\\x1b\\x07\\x10\\xdf_\\x06\\xe2\\xce@SW\\xb0L\\xc2\\xd4\\x15l\\xa7\\xe8\\x00\\x02\\xc8\\xb9\\xd9\\x01X\\xd9\\x01\\xac\\\\|\\xac\\xdc|,,\\x006\\x16\\x16\\xde\\xff\\x18:8\\xf3\\x01$L\\xddm,\\x00\\x8aL\\x009\\x07\\x10\\xd0\\x05\\x89R\\xdc\\xc1\\xd1\\xcb\\xd9\\xc6\\xca\\xda\\x15\\x9c\\xe6?\\x1f\\x014\\xe6\\xb4\\x00V^^n\\x86\\x7f\\xb9\\x03D\\xed\\x81\\xce6\\xe6\\xa6 \\x80\\xa2\\xa9\\xab5\\xd0\\x1e\\x9c\\xd1\\xdc\\xd4\\x0e\\xa0\\xee`n\\x03t\\xf5\\xfa\\x9f\\x104\\x02\\xd6\\xae\\xae\\x8e|\\xcc\\xcc\\x1e\\x1e\\x1eL\\xa6\\xf6.L\\x0e\\xceVB\\xb4\\x0c\\x00\\x0f\\x1bWk\\x80\\x1a\\xd0\\x05\\xe8\\xec\\x0e\\xb4\\x00\\xfcn\\x18\\xa0dj\\x0f\\xfc\\xa73&$J\\x80\\x86\\xb5\\x8d\\xcb?ru\\x07KW\\x0fSg \\x00,\\xb0\\xb31\\x07\\x82\\\\\\xc0\\x1en \\x0b\\xa03\\x00\\x9c\\x1c\\xa0.\\xab\\x00Pv\\x04\\x82\\xfe1V\\xf8\\xc7\\x80\\x01\\xf0on\\x00\\xacL\\xac\\xff\\r\\xf7o\\xef\\xdf\\x81l@\\xffr657w\\xb0w4\\x05y\\xd9\\x80\\xac\\x00\\x966v@\\x80\\xb2\\x94\\x02\\x93\\xab\\xa7+\\x03\\xc0\\x14d\\xf1\\xdb\\xd0\\xd4\\xce\\xc5\\x01\\xeco\\xeanjcgj\\x066\\xf8W\\xe5\\xa6\\x00)QU\\x80)\\xb8\\xc1\\x7f\\xb7\\xe7b\\xeel\\xe3\\xe8\\xea\\xc2\\xe4bc\\xf7\\xbbE\\xe6\\xdfa\\xc0,K\\x82,\\xc4\\x1d\\xec\\xed\\x81 W\\x17\\xa4\\xdf\\xf5I\\xd88\\x03\\xcd\\xc1\\xb4{1\\xff3\\xd9\\xf7 \\x07\\x0f\\x90\\xcf\\xbf\\x81\\xa5\\r\\xc8\\xc2\\xf2w\\x13\\x16n\\x8e\\xcc\\x9a \\x1b\\\'7\\xa0\\xac\\xc4\\xbfM\\xc0"\\xa4?2+\\xa0+\\x80\\x93\\x85\\x85\\x85\\x9b\\x97\\x1d\\x00t\\x02\\x00=\\xcd\\xad\\x99\\x7f\\x87\\xd7\\xf0r\\x04\\xfeK\\xc9\\xfa[\\x0c\\xee\\xc0\\xcf\\xc7\\xd1\\xc1\\x11`\\tn\\x02\\xe8gc\\t\\x04\\xffA\\xf2q1u\\x07\\x02\\\\\\x9d\\xdd\\x80~>\\x7f+\\xfe\\x17!\\xb1\\xb2\\x02,l\\xcc]\\x01f@+\\x1b\\x10\\xd2\\x9f\\xe8`1\\xd0\\xf2\\x1f\\x0c\\x1e\\xbe\\xb3\\x8d\\\'@\\x9f\\x05\\xbc{\\xac\\x00\\x96\\xdf?\\xff\\xfdd\\x08^/\\x0b\\x07\\x90\\x9d\\xd7\\x1f\\xf3\\x7f\\xcd\\x97YWZ[BB\\x92\\xfe\\x9f\\x8e\\xff\\xab\\x13\\x13s\\xf0\\x04\\xf80r\\xb0\\x00\\x18\\xd98Y\\x00\\xac\\xbf\\x97\\x8c\\x1b\\xfc\\xc1\\xef\\x7f\\xc3\\xa8\\x98\\xda\\xfc\\xbb\\x8c\\xbf|eA\\x96\\x0e\\x00\\xde\\x7f\\xaa\\x05\\xd3\\xf4\\x9f\\x8a\\xdd\\xff\\xbd\\x004\\xff>\\x0eZ\\xc0\\xff\\xc6Rr\\x00o-\\x10@\\xf3g\\xc9\\rX8Y\\xcc\\xc1\\xbfX\\xff?\\xaf\\xfa\\xbf\\\\\\xfe\\xffm\\xf8\\xef(\\xffoK\\xfe\\x7f\\x0b\\x92r\\xb3\\xb3\\xfb\\x97\\x9a\\xe6_\\xfa\\xff\\x1f\\xb5\\xa9\\xbd\\x8d\\x9d\\xd7\\xbf\\r\\xc0K\\xeb\\xe6\\n>\\x00E\\x07\\xf0\\x19\\x80\\xfe\\xaf\\xa96\\xf0\\x9f\\xa3U\\x04Z\\xd8\\xb8\\xd9\\xff_\\xad\\xac\\xab)\\xf8\\x10DAVv\\xff\\xa5\\xd1\\xc6E\\xca\\xc6\\x13h\\xa1b\\xe3jn\\xfd\\xcf\\xb6\\xfc#\\xd7\\xfc}ev6 \\xa0\\x8a\\x83\\x8b\\xcd\\xefg\\x05\\xc0\\x08\\x1e\\xcd\\xff\\xd1\\x81O\\xcb\\xfc=\\xf8\\xe9p\\x01\\xaf\\xe4\\xbfT@\\xf0\\xe5\\xfcoJI\\x90\\xb9\\x83\\xc5\\xef\\x13c\\xe3\\xe4\\x02\\x98:;\\x9bz!\\x81\\x87\\x0cF\\x9c\\x00\\x1fV\\xf0-Z\\x00=\\xff\\xb5\\xc4\\x00f&\\x90\\x83+\\xd8\\x05\\x00n\\xcf\\x0f`\\xe9\\xe0\\x8c\\xf4{\\xa2\\\\\\x9c\\x00f\\xd1\\xdf\\xa2\\x7f\\x10\\x17\\x80Y\\xec\\x0f\\xe2\\x060\\x8b\\xffA<\\x00f\\x89?\\x88\\x17\\xc0,\\xf9_\\xc4\\xcd\\x02`\\x96\\xfa\\x83\\xd8\\x00\\xcc2\\x7f\\x10;\\x80Y\\xf6\\x0f\\x02gP\\xf8\\x83\\xc0\\x19\\x14\\xff p\\x06\\xa5?\\x08\\x9cA\\xf9\\xbf\\x88\\x07\\x9cA\\xe5\\x0f\\x02gP\\xfb\\x83\\xc0\\x19\\xd4\\xff \\x0e\\x00\\xb3\\xc6\\x1f\\x04\\xeeO\\xf3\\x0f\\x02\\xe7\\xd3\\xfe\\x83\\xc0\\xf9t\\xfe p>\\xdd\\xff"^p>\\xbd?\\x08\\xecg\\xfa\\x07\\x81\\xfd\\xcc\\xfe \\xb0\\x9f\\xf9\\x7f\\x11\\\'Xg\\xee`\\x07\\x1e\\xe7\\x7f$\\x1c\\x1c\\xbf%\\xf6\\xf6\\x7f\\xfc\\x7f\\xcf\\x99\\xd9\\xe2/\\xc8\\n`\\x06\\xfe\\x89\\x00f\\xe8\\x9f%\\xfb/\\xd7\\xbf\\xf5Nn\\xe0\\xdb\\xf8\\x8f\\x84\\x1d\\xdc1x\\xa8v\\xa6\\xf6\\x7fE\\x01sb\\xf9\\x07\\x82},\\xff\\x82\\xbf\\x956\\x7fr\\xb0\\xff\\x86\\xee\\x7f%\\xfd\\xadwps\\xfe+\\x1c\\xd8\\xc4\\xea/\\x08\\xee\\xc2\\xfaOO`V\\xad\\xbd\\x1c\\xad\\x81\\xa0\\xbf,\\xc02\\x9b\\xbf \\x98\\xb2\\xf7\\x7fA0/v\\x7fA0i\\x7f\\xd5\\x0e~\\xaf\\x98\\xff\\x84\\xe2\\x04\\xbb\\x82\\xc0\\xdb\\xff\\xa7]ph\\x90\\x9b\\xbd\\xd9\\xefg\\xc7\\xea\\xaf\\x94\\xbf\\x9bt\\xf8S\\x148\\xa6\\xc3_^\\xac\\xbf\\x9bv\\xfc\\xa3\\x06\\xe7p\\x04\\x7f\\xd7\\x81\\xec\\x80\\x96\\x7f\\xb8\\xe5`\\xfd\\xb7\\xd4\\xf9\\x7f(\\xe7\\x00\\x0f\\xc1\\x11\\xfc:9\\xfc\\x19\\x13\\x07\\x98\\x10G;7\\x97\\xbf\\xe2\\x83%N\\x7f\\xa6\\xf4\\x1b\\xb9\\x01]\\xfeu\\xcb\\xff\\xad\\x9c\\xf7\\xb7\\xd0\\x01\\xfc\\x9e\\xfcOxVV0\\x9d\\x7f\\x91\\xcd\\nn\\xf0O`N\\xb0\\x93\\x0b\\xd0\\xde\\xe6\\x7f\\xf7\\x88\\xf3\\xb7\\r\\xd0\\xfd/\\xca9\\xc1A\\\\\\xc0\\xdf\\x12\\xff\\xad\\x10\\xcc\\x9b\\x8b\\x9d\\xa9\\x8b\\xf5_\\x81\\xc1}\\xfcI\\x0b~~\\x99]\\xad\\x9d\\x81\\x7f\\xcd\\x1dL\\x8a\\xab\\x87\\xc3_\\x0e\\xe0\\x18n\\x7fA\\xf0\\xd8\\xdc\\xff\\x82\\xe0\\xca<\\xfeZ*\\xb0\\xb7\\xe7_\\x10\\x1c\\xde\\xeb/\\x08\\xa6\\xdf\\xfbOq\\xe0H\\xde@\\xe7\\x7fR\\xfd\\xcf\\x13f\\xee\\xe6\\x0c\\xe6\\xdf\\xf5__2\\xe0\\xf7\\xed?\\xf8_\\xff2\\x00\\x81\\x9e@s\\xa4\\xe5\\x05\\x07s\\xfeP\\xdb\\xda\\xd0\\xf6\\xbb\\xaf\\xa2o=\\x18\\xf7\\\'\\x04g)\\xf7\\xb5\\xbf\\xd02\\xfa,;w\\xb8=\\xa0\\xc1\\\'\\xd1Vg\\x04o:\\xdf\\x8a&\\x8d\\xf4b\\xac\\xedJ\\xd2\\xdc\\x88\\xac\\x90>\\xfb\\x1c\\xb7\\xd4\\xc3G\\xb4&\\xaa\\xb6=\\xfa>\\x19\\xc7\\xabM\\xef\\xb7!-M\\xe1\\rN\\x16\\x1c\\x8b\\xd6\\r\\x10#\\x121j\\x88\\x1c\\xf8>;\\xf9j\\x05\\xbd\\x87n\\x81\\xec\\x92\\xa3\\xccqr\\xe3AS\\xc9\\xc3\\xbe\\xf3\\xe8\\x97\\xf6\\xac\\x1b([\\x1d\\x0b_\\xd8W=\\xa8\\xe6\\x92G~*\\x9ba\\x8c\\xd1\\xfch\\x10T<G\\x99k\\x969O@\\x0e\\xe7\\xcaH\\x8c@\\x87u\\xe1\\x89>ws;\\x8b\\x95=\\xf9J*\\x17O\\x8f\\xe4w\\x12\\xc3^\\xe8\\xa3\\xb7\\xc5\\x16{?\\xef\\xbd^\\xa1\\xc1\\xe6\\xd2MHA\\xa8G@\\x0c}\\x8356M\\xe5#v\\x98,\\x87\\xbf\\xe8SR\\xb86\\xb8\\xe4\\xd9"PH\\x9a\\x8d\\xca\\x90\\xb2\\xc6\\x88\\xc1t\\xc8\\x96^m\\xa3\\x16\\rj\\xea\\xabq\\x1f[\\xeed\\xdd\\xcbI\\x02\\x84R\\xbf\\x1d\\xc4\\xdeK\\xac)m\\xc21v&W\\xc6\\xadn3\\x8e\\xc6v\\xada\\x7f\\x0f$>\\xec\\xb4\\x14[o\\xbf\\xd5\\xea\\xb1\\xb4M!Z\\xe1\\x9d\\xa9{\\x05\\xcc\\xa1\\xeaZ\\x1f\\x076\\xf7\\xf8<\\xd6;\\xad\\x8f\\x8c\\x0e2\\xfe\\nOi\\xbd\\x1bi\\x1a\\xdd\\xed\\xf1\\xd3.\\x16\\x1e\\x10&\\xb2\\xf2`\\xa5\\x93\\xb4\\xd6\\x8fZ[\\xe5K\\\'N\\x81-s\\x1d\\x87\\xea\\xd6\\x06\\xca\\xe2`0\\xac\\xb8\\\'\\xf1<\\xc1\\x9a\\x86\\t\\xf8\\x04\\xff\\x14{x\\xc3\\xbaS\\xc0\\xc2\\xa2\\xc7\\x03\\xdb\\x079Ft\\xc6\\x99\\xe3\\xfb3\\xd6\\xaf\\xb2\\xe1B\\xa9sk\\x0es\\xd1\\xce\\x03\\xcb0\\xe45\\x84K\\xe9\\xd5\\xac+\\xe5\\xe2\\xa2\\x80\\xd0\\x9a]\\xd2$#\\x9c&7]\\xb2\\xe7C\\xeeF\\x1c\\xb5*\\x7f-\\xb0a.\\xa4\\x8c\\xf9b\\xab\\x12\\x8fI\\xa2\\xd4\\x8bT!a\\x87s\\xe9\\xe7\\x10E!\\x87\\xact\\xdf\\xfeb\\xd5H\\x94A\\xb0\\x97\\xed=o>\\xd3\\x99V\\xa5f\\xdb\\\'\\xce|U\\xb2\\xbd\\x93h\\xc6\\xf1\\xc3\\x86\\xa0a\\xb1\\x90\\xb0~\\xde[\\x8b\\xc3\\x9d\\xdb\\xf2r1#\\xdc#\\x07\\xad\\xfb\\x8bJ\\x8fH\\xb1\\x91\\xd8m\\r\\xee\\xd0\\xdc\\x0f\\x9dj\\x81\\xd9\\xdd.\\xca\\xa9\\xd2\\xa2\\xd1PE\\xbfv\\xe7\\xfb\\x10\\xcd\\xde\\x9dj\\x88\\xb9\\x93\\xd97\\xc5\\xa1kk\\x08>\\xec\\x8ew\\x17=y0\\x94\\xc9JPR\\x17.+\\x0e\\xc8\\x1f\\tD\\xf8.\\x1b.I\\x14\\xf6\\x11~\\r\\x14\\xc1\\xfbp\\xd3\\x14\\xc8V\\xdb\\xa1|G\\x03\\x81\\x92\\x81\\xb1\\x1eK\\x99q\\xb0\\n\\xfd\\xce\\xb8c\\xa4I\\xeb\\xe7\\xcb\\x1b\\xb1\\xb7\\xea\\x1awy\\xef\\xbc\\xb7 \\xfa\\x16g\\xc6w\\xc9\\xbeM\\xefR\\xf8\\xd8U\\x1a\\x14s\\xf47\\x03\\xf89?\\xa6B\\xdb\\xc5S\\x91-\\xee\\x06\\xa6]m\\n\\xd2|\\x8cz\\xb1\\x8cj\\xde\\xd0\\xf4\\x10\\xad_!\\xaaI\\x9f\\x1b\\x04n\\x9e\\x0c\\x8f\\xc1\\x88\\xbd\\x83\\xef`g\\xc1\\x11\\x9a8\\x91\\x01\\x14\\x94Rgl(\\x14\\xd2\\xe3\\xbc.$f\\xd9\\xeexg\\x8a<\\x90\\xc65\\x0bV\\xb9\\x18\\xd4n\\xe0\\xdc\\x08\\x84\\x95\\x0b\\x1at\\xebBRlJ\\x08Gj\\xfe@\\x9c:x\\xe2J\\xca\\x9e\\xf1\\x94\\xceU\\x05\\r\\x95\\xbfM\\x8b"\\xdc\\xb3\\xa9\\xa6\\\\\\xf8\\x9cE\\xb68\\x8d\\xa4\\xc0\\x06\\x81_\\xa3\\x9f\\x95\\x86y\\xbd[\\x18@K\\xf6\\xd12L\\\'\\x18\\xc1\\xfc\\x103\\x1a\\x01bW`\\x9e\\x1ag\\xb86.\\xf9\\xa7\\x1a\\xb6\\n\\xbbd.Y(#_\\r&5\\xe6\\xd6\\xcb\\x94(\\x9a\\x1cz5\\x13\\xecr\\x7f\\xad\\xb8\\xdc\\x04\\x84\\x9ck\\x19\\x04U\\x9f\\x0f7\\xdc\\\'\\xae\\x1a\\xa4wAZS}S\\xdd\\xc7\\xf3\\x0b2\\xf3o\\x13\\xaf\\xa2\\x99KG\\xd1\\xa4\\x16\\xad<\\xc8\\xa58?\\xc7y\\xfcT\\x8f\\xa4\\xf0\\xad~\\rrP\\x15\\x98\\xf8>\\x91\\x82\\x8c<m\\xe2\\xdf(\\x90I\\xc2\\xcaR\\xea\\x8b\\x90\\xfa*\\xd0vd\\x7f^\\xdft\\xbf\\x94\\xb11b}\\xb1\\x91\\x13\\xbaYy\\x14\\x88\\xd0\\xd0\\xf0\\xf5k\\xba\\xf0\\x08\\xa1\\x89\\xf0\\x15w\\xf21\\x1e\\xb2\\xf1X\\x0e\\xac~R\\xe7\\x15\\x8f\\xa7\\x8a\\x00\\x07\\xeb<\\xf1\\x95\\xa0\\xeb\\xe4\\x9d\\x0c\\xc4\\n:*?WjK\\xb3\\x9f\\xb3\\xbc\\x1b\\xeb\\x11\\xfbc\\x9a\\xa68\\x04\\xacM\\x1a^\\xbd\\x8cke\\xed\\xf4\\xac\\xdf\\xad\\x17\\x01\\xc9\\xc2\\x8b\\xbf9\\t\\xa5\\xc1\\xa6\\xd3y\\xa0Ak\\xeb\\x01\\x872\\x87;\\x99~\\xba\\xf1/\\xd9\\xd6\\xbc\\xaf\\xe7u\\xd5O\\xb8\\x83\\x07\\xe6\\xd1oX6\\x89\\xcb/\\x15\\xe5\\xee\\x15\\xb3uY*\\xc6\\xe2\\xdc}\\xb86\\t>/\\x18\\xdc\\xf5\\x01\\xa0\\x9c\\xb3\\x9dF\\xd2\\xc8\\xd9\\t\\x05\\x7fA\\x7f\\xce\\xd4\\x98\\xd1\\x95gZ\\x93\\\'\\xf81B\\xdb\\xc3\\x80/=*\\xefc\\x1a)\\xae\\\'&\\x9d\\xd5\\x81DB\\xec\\xb5J\\x83\\x16%O\\x1d\\xde\\xc7\\xa6\\xcc2\\xab\\x95R\\xc5%\\xabBAa\\xf7x\\xf4P\\xd1\\xcc\\x98\\x88\\xbf\\xa5\\xdfMp<\\x07\\x1c\\x1f\\x89\\xbe\\x1bz\\x83@(?\\xb6H\\xc5Fi\\xf5\\xd9\\xac\\xda;\\xe2\\x97\\xdc\\x18a*\\x83\\x9b\\x83\\xbfb\\x05[?\\x81\\xf7\\x86[BjN\\xc4\\x1c\\x17]Z\\x1b]\\x11\\xea@/j\\xf9\\xf4+o\\xd7D\\xc9\\xa6p\\x7f\\xbe\\xfcg<sZ\\x82o\\x93\\xbf\\xb6\\r.\\xac\\xb2]+\\xa9\\x84Kwc\\\'\\xfb\\xaf\\x1fAp\\x1a\\xc7\\x1e\\x1d\\x89\\x07\\xed\\x149\\x16J\\x06\\xe2\\xcd\\xe9\\x05\\x13+\\xca\\xb7\\x0b\\x93"\\x85\\xdal\\x9e\\xa4\\x87<Nd\\n\\x163U\\xbbo\\x1d\\x8e\\xfd\\xf7X\\xb5\\x98?\\x0e\\x8b\\t\\x8a\\xd4\\\\?\\x9c\\x92\\xb1$\\xf4\\xe8\\xe6:x\\xdfS\\x9c\\xdeO\\xfd\\x1a\\n\\xa4\\xec\\xaf\\xec\\x9a\\x1e\\xc1\\xf5\\xd8\\xde\\xd8f3t(\\xeb\\xdb\\x04T\\x19?\\x0b\\xcbZ\\x7fCw;\\xcc\\x15\\xb3?\\x93\\x82\\xc3\\xe7k`ECXJ\\xb6@(\\x1d\\xf6\\xe2\\xfa\\x15\\xdc\\xbd\\xb2\\x01 \\x96B-\\t%P\\x00q\\xaa_zP\\x952\\x1e\\xcf~\\xad\\xce\\x92\\xf6\\xbe+\\xe1\\xfdA 8L\\x9d\\xb0G3\\xf6\\xdc.\\xfbd\\xad\\xf4P\\xbf\\xe0\\xb3\\xa7\\x8c\\x05@\\xfb\\xc2\\n\\xad\\xe0n>o\\x8f\\x0bk\\xd3P\\xd4M5L\\xaex\\xf2\\xc3\\xbe_\\xa4I{>\\xbc\\x92\\xa0\\xa0\\xd2~\\xcd\\x8c\\x92e\\xf9\\x0b,\\xdd\\x83I\\xda1|\\x7fn\\xe2f"\\xb3\\xe5M_\\xa6]\\x07\\xa5\\x8a$[.\\x1f\\x89\\x96(\\xad\\xba\\x98\\x02\\xf3\\x81@\\x19\\xde\\x19\\\'v\\x99x\\x96h\\xfe\\xe6\\xafL;\\xfe*\\x9fo\\xdd\\xc84\\xefZ\\x97t`ARp\\t\\xe4\\x08\\xd1\\x10_ By|\\xd4\\x96\\x1c\\x120{\\xfa5\\xf0i\\xf6\\x8c\\xb5/\\xa0\\xccD_\\x02\\xe4}\\x1d\\x14\\x91\\x8d\\xb1\\x17fS\\xb417_\\x88\\xe2;P\\xbd\\xf6\\x14\\x0f_\\xb9\\x02\\xcbsj\\x8c:~\\x99\\xbaf\\x91"\\x88(\\xb3\\x1e\\xe72gBH\\xfd$\\xfd\\xdc\\xc8\\xeeE\\xf2.u\\xd7\\x1c]QqqJz@\\xefy]\\x1f\\xda\\xbe\\xe2\\xb5\\xd5{\\xf2\\xa3T\\x00\\x1c"\\x96]\\xd9}9y\\xaf\\x9cP\\x15\\x10fIK,N[\\x8c\\xc8\\xef\\xbb\\x16\\xed\\\'\\x985\\xf5\\xe1U\\x1bB\\x86\\xdc\\xf3\\xa0\\x8d\\xe2s5,\\xbcf\\xbc\\xc2\\x8e6\\xa9\\x98!\\xe8\\xb2\\x0e\\x95L\\xa6\\xc3\\x0e\\x05\\x98\\xe9@\\xcf;\\x98"\\x02c\\xfd\\t\\x1d\\xadHL\\xfc\\xa1\\xabk\\xd5\\x9cjT\\r\\x95\\xd7\\x1b\\xf7\\x90\\x9c{$\\xe0(C\\x82\\xe3\\xcb\\xca\\x9b\\x10\\xe7\\x00\\xeb\\xc4\\x87\\xe6D7\\xbc\\x9f\\x9fB?\\x9a\\xd0\\xdb\\xf9\\xbcA\\xf8\\x05T\\xfd\\xb5\\xf0\\xc9X\\xc4\\x12\\x9f\\x8b\\xfd\\x8d\\xcc\\xa6\\x8a\\xa9\\xfb\\xb47\\xa1\\xe68\\xae\\xf1\\xd7\\xecq\\x9cA\\xbdrV\\x12\\xba\\xb2\\xbd\\xa1\\x18\\xac\\xea8E\\xfa!3\\xc7\\xc0p~\\x9f\\xf5\\xb21\\xc4\\xa0JUv\\xbcC--\\xfe\\xa5\\xdc\\xf6\\xf1\\xc8Y4T\\xac*e&\\xe5\\xac-\\x1b\\x86v\\x1e\\x9e\\xf2\\x05\\x92\\x90\\x93\\xbe\\xf00\\xablA\\x03\\xc1-\\x11r\\xa9\\xad\\x07y\\xa9;\\x8d\\\\\\xb3\\xc7/\\xf1\\x9dZA\\xb1v4vVU=\\x99+f3\\x951\\xebd\\xcd\\x87e\\xf3\\xc9\\xf3\\xdf\\x0c\\xb6\\x9f\\xefM9TY\\xf1\\xbf\\x8e\\xf9\\x03\\xcayw\\x9c\\xb4\\n\\x9b\\x8b\\xc7\\n\\x01\\t.F\\xefO\\xf3\\\\,b\\xd3Ah\\xde\\xf1=\\x08\\xf0\\x95\\xf9\\xdf\\x0b\\xf8\\x16\\x88\\x14\\xb2\\xbc\\t\\rc1/\\xca\\x9c\\x91\\xa3\\n\\xf3\\xcaB\\xdc\\x95$:\\xa3\\x15\\xa5\\xb9y)d\\x15l^\\xa8\\x12E\\x97\\xac\\xden\\x83\\xec\\xb8\\xbc #\\xe4\\x10\\xe3\\xa4\\x94\\x1b.\\x05\\xe4\\x11\\xf7\\x8fU\\xc6\\x0b\\x94cEE\\tF\\xdd\\xc3\\x13\\x036f\\xec\\xf2\\xa8\\xbe7\\xdc\\xe9\\xee/\\xd6S/O@h\\xafL\\xed\\x87Pu\\xe7\\xb1\\x04\\xc9\\x03^\\x08q\\xd3\\x98m\\x10m\\x96g\\xdc\\x10\\xcd\\xb2\\xde\\xf4\\x8a#\\xf1\\x0c\\xf5{\\x8b\\xca\\x14\\xceg\\xb3C"y1]\\xea\\xe7x\\xb6\\xec\\xac\\xbb\\xb2\\x8a\\xbaU\\x96e\\xa28\\x8aN2\\xe9s\\xe4\\xab/\\xb1\\x99y|\\xa67\\x07\\xb8\\x96\\x16\\x9c)\\x01\\xdf\\x10X\\x13I\\x8c\\xd5\\xae#\\x0f\\x90\\xa7\\x92\\x91\\xf8\\xef\\x95\\xf3\\xd3s;\\x1a\\x14xx\\x12b\\xe9\\xeeH#\\x19\\xadsJV\\x8d\\xaf\\x1d&\\xe2b\\x11e\\x1b\\xaf\\xb5$K7\\xfc\\xda\\xbe8\\n\\xa4!\\x11E\\xb1k\\xc2\\x9e>c5Y\\xe3qc\\xbar\\xa3?\\xdb]&\\x7f\\xb8\\x12\\xe2\\xbf`\\x08\\xf0\\x1e\\xa9\\x9f\\xa6Drh\\xab\\xde\\xcc\\xf1\\x84\\x1ef\\xf9\\xe2\\x12\\x8c\\xb90L\\x88\\xa5\\xcd*\\xe59y6w\\x98\\xb2\\t\\xb0z\\xb1\\x8f\\x8fi\\xf0\\xd4\\xf2\\xbaiX\\xc1\\x9c\\xce$7|\\xe7\\xedO\\x90R\\xec\\xe8~\\xd9\\x83\\x9aI\\x1c\\x1e\\x9fz\\xbb4P\\xc2\\xe4,\\xc6\\xfb\\x81\\x02\\x17\\xd4\\xac+^)\\xce\\xfa\\xd0\\xefZf!\\xf2\\xeeW\\t\\x0f\\xc4\\xd4{\\xa5\\x88\\xb9h\\xf9\\xaf\\x909\\xb3\\xfc\\xf9\\xdd?\\xe6\\x12\\xed\\x82\\xa4\\x1eh\\xe0\\x90\\x97>*]E\\x15A\\xf2om\\x17Z\\xbcT\\xf4>\\x9eB&Tb<m\\xd2\\xb5G\\t\\x0c\\x16\\xe5&\\xed\\x0e`\\x87b\\x97A\\xbbt\\x17\\xf1\\n4H\\xc7\\xa1\\x8aK\\x9a\\x84i\\x1d\\xe5You\\x8c\\xf4S\\xe2\\xaa&NH\\x15:\\xa8t\\xf4\\xefLc\\x86\\x04P\\x94}\\xea \\x9ffgo\\xff\\xa5\\xc2\\xbb\\xc8{\\xa2\\x17\\xe3\\xc2\\x1b\\x01Im\\xb2[I\\x82z\\xe2\\xbc\\xa2}\\xcf\\xa7\\xf4\\xb9\\xf0d\\xd8e\\xf6f\\xe8s\\x13\\xa9\\x08\\x9ce\\x08J\\x86\\x11\\xb1\\xf6z\\x18\\x15\\x1b\\x87\\x07V\\xa9\\x9d7\\xf2\\x01\\xc5\\x1c\\x9b\\xf69v\\xad\\xc7z\\xd8\\xe0\\x892\\xaf\\xd9k\\xfe>\\xb9rQ6\\xf6\\xe8\\xb8v\\x1f\\x9d\\x14\\x96\\xe1:s\\x91\\x89W\\xd9G\\xd5\\x1a\\xc4\\xc8\\x91\\xcf\\x06\\xaaI\\xbdo\\xa5\\xe8\\xca\\xd6l4\\xf0~\\xc6\\x1c\\x1a)\\x01n-\\x8c\\xf3\\x15MB\\n\\xc2\\xd5)5\\xea\\x94Z\\xe5\\xb9\\xe3\\xaa\\x11\\xe8\\xd5R\\x17N\\xf4\\x9d\\x0b\\xd3\\x9f\\x86uo\\x06\\xb0Ou\\x9d\\x80~\\xed5KD(\\x85\\xd1\\xbf\\x96t#T\\x1e\\xae\\x91&\\xa4 5%\\xf3N\\xae^>^\\xcc\\xca\\x87t\\xcf\\xa3\\xcb|\\xa4\\xaem\\x10\\x82\\xd4S\\x15\\x99@\\x97]\\xder\\xa5\\xcc\\xdf{M\\xce\\xe8\\xd6/\\xa1\\xe5\\xee\\xa7\\xea|\\xca\\xb1\\x9e\\x00e\\xa2\\xd4\\x10\\x1e\\xe9R\\xcf\\xad\\x9a\\xf66j\\xf4\\xfd\\xa4\\xd6q\\x0e\\x98\\xdbLe\\x06\\x19\\x83\\x92\\xa0\\xe5\\x14r\\xf1\\x90\\x11h\\x92E\\x90j\\xbf\\xe7|\\x9bJC\\xaalP"\\xf6\\x91\\x97j\\xd8\\\\\\xbd0z\\x9fn\\xb6\\xd1\\x0b\\xfa\\xe1\\x8fwj\\xa2P\\x9do\\x88\\xb0jZ\\xa0\\x99\\x0b\\xd92\\xe0\\xf3\\x14\\x89\\xe5\\xbes\\xae\\xb0\\xb9\\xd6z\\x90\\xc7\\x91x\\xcd\\xfa\\x85"\\x00\\xdb\\xd9^\\xf4\\xf5\\xcc%\\t\\xa7w\\xf0\\xea\\x12\\xa4\\xb7\\tM\\x97\\xda&X\\xfak\\xd4\\xe5\\xe6\\xc2!\\x1d\\xc7L\\xc4\\\'\\xdek\\x01\\x19\\x81L\\\\\\x9c4\\xda\\x07\\xdf\\x1c\\x81I;@\\xaf\\xf1\\xe4\\x9c\\xe4\\x80\\x05\\x1f\\x84\\xbce\\xe6\\x18f\\xe5\\xa2\\xf2\\xc5\\x82\\x82q\\xda\\xe0\\xb6zb.\\x9dJA\\xc0\\xb1\\x0b\\x06\\xab\\x19\\xdd\\x0e\\x1b\\xc5\\xb7\\xc5?\\xbd\\x9e\\xe7\\xf0\\x81i\\xa4?\\xb9\\x91\\xderb\\xc8\\xdb\\xab\\xc4=\\x84t\\xdb\\xb8V\\xcc\\xbbj4";\\xfc\\x9aM\\xd8}\\xae\\x1d\\x01\\x0e\\xea\\xc7U\\xfb\\xcdbD\\x9f\\x0e\\xa4i>\\x19\\x0f\\xe1|\\x81=R\\xf2j\\x04\\x81\\x95\\xc72\\x19<\\x12\\xc2\\x1d\\xf7\\xbe\\x14\\xa2\\xae\\x88\\x97\\xba\\xa1\\xff\\xcf\\xb0l\\xa8\\xd4\\xca{;\\x07\\xb1\\x85\\xa3\\x8aDD\\xd2\\xe4Lw2\\x96\\xfb\\xc3\\xa6(\\xa9\\xcf\\xc1(\\xeb\\x9b\\x0fg\\xa5\\x92\\x9b\\xa6\\xfa\\x91\\xc1\\x96w*\\x9e\\x1c\\x812a9\\xb8\\xbe?\\xe0\\xb5\\x9f\\xea\\xf9W\\xa5I\\x16p0t\\xb1\\xc9\\xd9\\xc5\\xae9\\x97\\xaf\\x9e\\x0e\\xee\\xb6e\\x0c\\xc8g\\xcb\\xf5\\xe1\\xeeX\\x93\\\'RO\\xcd9\\x95\\xeex\\xcb\\x1c\\x85\\xd8\\xb8\\xe5\\xda\\xc4\\x9e\\xaf\\x1a\\\\\\x98\\xa1\\xcf\\xa2\\x1a\\xadh\\xaeK=qU\\x19\\xd0\\\\\\x85\\xf4\\xabvx\\xc6\\x13\\xa5]\\x06\\x9a\\x83\\xf8H\\xd5(x\\r\\xb9p\\xa8"\\x1f\\xec\\xbd\\xaahm\\x1a\\x08\\xa3\\xdcG\\x8el{o\\xb5K\\xa2\\x15\\xfa\\xd5\\xc4\\x8c\\x88\\xd5\\xc4L\\xed\\xba\\x8e=\\xeb\\x8cs\\x16u3\\xf9j9\\x15\\x8b\\xaba6\\x0f\\xceVq\\xce\\xa3\\xe0\\xb1c\\xdb*\\xd1\\x1b\\xde\\x06\\x94<2\\xdb\\x16\\x84m\\r,\\xe7\\x92\\xf9m\\x98|>;\\x96\\xa0\\xd2&\\n\\x1c.\\xdb[P\\xd5i\\xa1\\x80\\x93\\xd9,\\xfe\\x8e>\\xe6*[P\\xd9\\x8e\\x180<\\xcf\\xb4\\xacK\\xf4Sd\\t\\x84[\\xee\\x9c\\x8ca|}\\x02Z\\x0b\\xeaE@\\xedT~\\xdau\\x15U\\x82eT@\\x05%G\\xa7\\x08\\xc3\\x1ao\\xe0\\x19\\x19\\x87\\xadZ\\xe1$4\\xf8g\\xe1\\r\\xc6\\xf1\\xc7\\x98\\x90|\\x9d:-\\x91\\x17\\x8b\\xd8\\xb8\\xe0\\x02\\xf67\\xf6\\xac\\x91V\\xc77#\\t}>\\xb4\\xebRu\\x8c\\x0f\\x7fS\\x9e\\x170K\\xdb\\x1d\\xde\\x98y\\xdfPx\\xc9\\x1c\\xc3\\x0f\\xafNH\\x8db\\xd4r\\xc3\\xb7\\xe7\\n#Wc+\\xf2\\x03\\xc7\\xb3\\xbc.D\\x92\\x86Ez\\x94\\x7f\\xa2\\x15wU\\xd5\\t*\\xb6t\\xe8\\xf3{\\r\\xea\\x96\\x8b,\\x0c\\xfe,\\x81ONoAK{nA\\xaev\\n\\xe2\\xac\\x89:\\xfd\\x00\\xce\\xf17)HN\\xf1\\x8b\\xfdN3\\x85A\\xc2{\\xd1S\\xde\\xac\\xe2\\xea\\xf4\\xddD\\xf9*\\xac}\\xfe$\\xc0\\x11(u\\xb6qd\\xf6r\\xb9d\\xc5\\x95\\xd1\\xd0$;\\x9a\\x9f\\xb3\\r\\x14\\x08$\\xad\\xc0\\x11\\xd5}f{G%NynH\\xedg`\\x94/m\\xdf\\xea\\xd2\\x86i\\x94Lr\\xe5\\x96^\\xcbl5\\x87[\\x8c\\xa6_\\xd7@\\xff\\xf7\\xbe\\xeb\\x128\\x1cM\\xc04\\xd9\\xb7d\\xdd\\xa4\\x93\\x1f\\x10\\xf7ds\\x90\\xb2\\x08s\\xba\\xfb%\\xb3\\xd9\\x84\\xf2\\x94\\x87\\xe6\\x85\\x92\\xd5\\xcd\\\'$\\x8f\\xe9\\x82b\\xcbc\\xb2\\x86o\\x03\\xd5\\xe1X\\x7f\\x01\\xde]\\xcd\\xb6bZ\\xa3\\x8d\\xe9\\xab\\x86+X\\x97\\xe92\\xee\\x07\\xfb\\xab;\\xbfx\\x99r\\x02\\x14Ut\\xa5K\\xe7\\xa7\\xf8Ixab\\x88\\x0caJ\\xa7\\xf1u!\\xf0\\xa2\\xc3D8\\x03\\x13\\xd67\\xa7i\\xde \\xdde\\xc4\\x0b!g\\xf6\\x854\\x8dH\\xc8\\xd8F\\xe4a\\xec\\xba\\xe0:\\xe3\\x06{\\xae%#\\x1d0\\xf5\\n\\xadL-TW\\xe7N\\xbeO\\xa9Z\\xb1\\xeb\\xe7\\xa7J\\xae~\\\'\\xf0}%\\xed\\xeb%\\xf0\\x13\\xad\\xe5\\xf4\\x9e\\x94w\\xbaI\\xd3P\\x93p\\xde\\xae\\xac9\\x84\\x88\\xba\\x0cU\\xb2\\xc0+l{\\xc2\\x19\\x0c\\xd0\\x1d\\x04\\xc1\\x83\\x1d\\x94)\\x15Ld\\xb0\\xabUS\\xc6>peZ)J\\xe6\\xe5\\xd5\\xbe\\xcb\\xf7s\\x96\\x1e\\\'\\xcb\\x9c,\\xdf\\xf3\\x0269\\xd8lR\\xf1e\\xe1\\xc36\\xb3\\xa5\\x1f\\xfbfr\\xfa\\xf1\\xb7\\xa2\\xa1]r\\xe9\\xd2d\\xcc\\xca\\xef\\xd4\\x96\\x8a.\\xd3\\xf0s\\xa4:\\xda\\x9a\\xcf~O\\xb7\\rM\\xcd\\xba\\xfd\\r1F\\xc8\\x81s\\x8b\\x94\\xb6\\xe3Cd2\\x9d\\xe7\\xd1\\xca2\\xaf\\x08#\\xe3\\xb1\\xa4\\xc6\\xf7\\x8d\\xd1\\xfc\\x87\\x11\\xb5\\x13\\x97\\x01\\xf1;r\\xcd\\xee\\xb9h\\xb5A\\x86k\\xef\\x90(\\x96\\xe1\\xcb\\xd0W\\xa9\\xc5\\xad\\x85\\x838S\\x05B\\xd5\\t\\x9e\\x89\\xdbN\\xbf}\\xed\\xf9)\\x92XI\\x90\\x89\\x98fZQ\\x1f\\xc8\\x88\\x93*\\x1a`\\x1e\\x15~d\\xe7\\xa0\\rY\\xafHs\\x19\\x07\\xe7\\x0c\\xd1T\\xfcn\\xd5dq\\n\\xa4\\xebc\\xbbj\\xc2\\xeek\\x07\\xe5N\\\\e\\xd2J-k\\x97\\xf3\\x1c\\xb0UC\\xb6_\\xff\\x94{3\\xab\\xd2;z\\xe2\\xf39\\x0fN\\xb2\\xfa\\xcb\\xb9\\xe0\\x84\\xa3\\xe9\\xa1\\x11r\\xd0\\x92\\xf5\\xb1\\xf2{h\\x93\\xcc\\xa6\\xb3\\xf4]\\xc7\\xbb\\x07\\x94J\\x1e7\\xaf5\\n\\xe7\\xcb\\xe4\\xf5\\xab$7$K?s\\xa7>z\\xce\\x1e/\\x7f\\xb2\\xe7u\\xc3\\xf9\\xcc\\x87\\xb7w\\xdd\\\'h\\x9a\\x0c\\x95\\x90\\x9d\\xae9\\xb4\\x076|2\\x979\\x9d\\xcaa\\xfd\\xab4U\\xc6@\\xe5\\xa0#b)\\xad\\xce\\x17\\xa7)8<\\xa1\\n\\xb7\\xc3\\xad~Fi\\xbe\\xc8\\xed\\x9f\\xfd\\xde!Ya\\xe92z\\x06\\x94q\\x9a\\xa7\\xeeK\\xdd\\x10$\\xa8S\\xde\\xbbF\\x04[\\xdf\\xc4b\\xbc(\\x03\\x954v\\x9a\\x1b\\xd9\\x05\\t\\xaat\\x8e\\xb7\\x84\\xdb\\xedq\\xe4\\x12\\xee\\xf0\\x18g\\xd9C\\x7f\\x11\\xdb\\xec.\\xca\\x88\\xac}\\n\\xb2\\x9c\\x0cy~\\xdf\\xac\\xc6t\\x9c~\\xf3\\xecN\\x1d8d\\xcf\\x84E=\\xae\\xbe\\xdb+\\xd16\\xb6l\\xe7\\xf5DJ\\xc0\\x9d\\x88\\x97\\x87\\xa2{\\xb3 ^W9`\\x7f\\xd4`\\xd4X-\\xed\\xc6i,\\x9d\\x0e\\x7f\\xd7\\xb0\\xccZ\\xf4\\x88\\xee\\xca\\xfcq\\x0e\\xf9e+fl\\xe7\\x02i\\x8b\\xe3C\\rk%(\\xd2\\xf8QB\\xc8\\xcf\\x11\\x8e\\xfe\\xc0\\xb2\\xcc\\x8a\\xd7\\x9a\\x82\\xf8\\xa1d\\x00\\xd2P\\xe4\\\\\\xf1\\xded\\xc9h\\xa6EZ\\xfe\\x96\\x9f\\xb3\\x1c\\xae\\xc0c\\xe8\\xb8\\rfO\\xd6\\xd9\\xe9\\\\\\xb4\\x84\\xddR4xS\\x17\\xd3\\xc6\\xad"\\xb0w}\\xaf\\xef\\xb2c\\xfa\\xfcd\\x06K\\xd7\\x19\\xe3\\x88X\\xe2\\xe6\\x96/.f\\xc5\\x82\\x04^\\xad\\x10z\\x1d\\x90(\\xea\\x8a\\x89r\\xccX\\xf6\\x89\\x01\\x87v\\xa7\\xd5\\xb4\\xac`\\xa4\\xd5zg\\x92W\\x7f\\xae\\xd8\\xed\\x15A\\xfd;\\x01\\xaf|\\x02a(f\\xbf\\x86|\\xa9\\xa9\\x0e\\xc5\\x9e\\x87\\xd5Hb\\xa3r\\x88\\xfe\\x0e\\x94g\\xf4[\\xa7\\xa1\\x90|/\\x18Y\\x9a\\xe4\\xd7v[\\x0cN\\x85\\xe22\\xd9n\\xf3\\x06?_k\\x92n\\x8axo\\x89\\x1dl\\xcd\\xc9\\xdeO\\x1em\\xba1\\xf4\\x1d\\xcf\\x15z|\\x13\\xe7\\xdf\\xfb\\\'\\x0b\\x062X\\xbb.\\x1b\\xec\\x02\\x96\\x81\\xddo\\x87 M\\xdc\\xeeD\\xa0\\xde\\xf8\\xc2T\\x9c\\x90\\xe2.\\xacE\\x1e\\xd6\\xa7\\r\\x1a\\xadp\\xbd=c\\xce\\xf2\\x9a~41\\xbd\\xc8\\xc5*\\x1aF\\x8d\\xd2\\xaf\\x9e\\x88\\xc20\\x99\\xe9\\x1c\\x93\\xcc\\xca\\xef\\xf5x\\xd3\\x03{bJ\\xf2\\x16%\\xd7\\xfb\\xc0\\xe6R\\xc14\\x14\\x1f\\xcb\\xcfv\\xf4\\xeb\\xf7\\x11\\x91\\xc7\\xfc\\xa8}\\xbf\\x81\\x00O\\xf4\\x83s\\xedFX\\xf8\\xd4}P\\x84K\\xec\\x17\\x16\\x10\\x1d\\x9a\\x0fZ\\xb5\\x9d\\xb0^\\xa9\\xf7Ut\\xd2(V\\xb4P\\xf3w\\x9eSRGF\\x85i\\xaa\\xe1\\xfcG\\xe8sy\\x13!\\x80I}\\te\\xafIr\\xde\\xd9z\\xd7\\x88K\\x99p\\xab\\xfb\\xb7\\xb6A#\\x83\\xa7\\x0ft\\t\\xb8\\x0b\\xcf\\xaa\\xa3\\xdb%Jf\\x96a\\xf4\\xab\\xed\\x9d\\x1b\\xa1Y\\x0e\\xe4\\x881\\xcb\\xc5\\x9a\\x88\\xed\\xde\\xd3WV?\\xac\\xc6M\\xf7b?\\xb9\\xd5K\\xe5L\\xa7\\n\\xf4a\\xeb<x\\xad7\\x97ULA=\\xd0\\xb5C\\r[\\xdd\\xber\\x08\\xeb\\xb0\\x19\\xf6~\\xe2(\\x91I\\x1b\\xcfK_\\xbcL3\\xea\\x99rR\\x00:\\xd4f|\\xd1<\\xbd\\xf2G\\xf9U\\x98\\x900\\xc5-tB;Xp\\x95*\\x03\\xfa\\x94\\x05\\xd5ZR)\\xcaM~\\xe4#\\x11\\xae&\\xc0\\xcc\\xe6\\xfa\\xac80t}\\xef\\xb2_\\x14\\xf8\\xf8\\x9eWV\\xe7:\\xc12\\xbf4c\\x1az\\xe7u\\xf2\\xf9\\x91\\x1e{\\xb9HG\\xf2\\xa48\\x19c\\x98\\xe9\\xc76Y\\xf7T\\x1f9\\x9d\\xdc\\xaa:7Z\\xf7\\x8a.I5\\x02\\xd1!\\xec\\xb9\\xed**1\\xd5\\xcc\\xb2\\xe8\\xa1\\x1c\\n}\\xf9AdWK\\x1b\\x02\\xd6\\n\\x96\\xe0M\\xb2R\\xee>\\x05\\x97{\\xad\\xfa\\x1b\\r]\\xcc\\x0f\\xefV\\t\\xaa\\x14R^9&\\x8a\\xcf\\xbe\\x0b\\xa7CLR\\xdf\\x9e\\xfc\\xea\\xbb\\x0f\\x90\\xc2\\xb7\\xd0\\x92VX`\\xa0\\xff\\x8e\\xe7\\x82[!\\xfdR\\xb0e\\xc4\\xdc\\\\\\xeaT\\xdf\\x073r\\x0bi\\xfdq\\x00\\xbd\\xe2\\xfe^\\x8f\\xa4\\xc2;T\\xa2\\xd4U\\x04\\x85\\xfd\\x17\\x10+-=\\xfbPqID\\xc8\\x96V@\\xdb\\xdadO\\xb1=R\\xe8u1o\\xe4\\xd5\\x7f\\x1b\\xb8u\\xaa%!7\\xef\\x9b\\xd2\\xda\\xaa\\x83\\xee7],\\xee\\x1c5\\x8c?\\xa81,:|\\x88lI\\xf0\\x0c\\xf5%?\\xe1\\xb3\\x8a\\x1f?l\\x14\\xf9l\\xbb\\xfc\\xed\\xec\\xbb\\x89x\\x8d\\x9c&4\\xa9_\\x0f\\x06\\xdf\\xdf<\\xff2\\x9aK\\x84&~\\x03\\x8d\\xcc\\x9f\\x8a\\xd8\\xed\\xfbC\\r a\\xd0\\x1f\\x8c*\\xe36\\xc7\\xf5\\xaa:\\xf0<\\xf5\\x85:S\\x95}\\xd8\\x8c\\xdf\\xf3]s,)\\xfb\\x15\\xa9\\xfa\\x18_\\x99\\xad\\x19\\xe6\\xe9*e\\xb3\\xab\\\\<<\\xb3\\xd0h\\xae\\xf2\\xebY\\x06\\xb1\\xb3\\xd6FP/\\xa1\\xa7\\xe1\\xd7\\x16\\xb8v!\\xda\\x9d\\xf3\\xec\\x9e\\x06\\xc3@\\xbb\\xcc{hN\\x87N\\x0c\\xfd\\xef\\xb9SR\\xfc\\x18\\x0cJT%\\xd4\\xd86\\xa5Q\\x065J\\xaa=\\xb2\\x972s\\xe3\\xd7S\\xa4\\xdd\\xc2\\x1a|\\xa7"KR\\xe7\\xf8\\xdf\\x95^\\x91\\xe1\\xd5uz\\xd6Yj\\x04*h\\xdb\\xac\\xb7\\xb4\\x17\\xe0\\x82:8,[\\xa4$\\x9a\\xac\\xe3V\\x99\\x96\\xea4\\xa0h\\x8d\\xd4a\\xa7\\x19I\\xc2@\\x1e~\\xcf\\x0c\\xc8\\x91zJ\\xcd\\x92\\xb8S\\xe2\\x90\\xd7\\xd5\\xbf\\x90u\\x91c\\xd4`\\x81\\r\\xde\\xbds\\xb7\\x17\\xec\\xed3\\x06H\\x8dK\\xae\\xa7//\\xba\\xdb\\x9c&q\\xf8R\\xfe\\xc6\\xe9\\x9e=1!\\xd0\\x9aY\\xbe\\xd1\\xd4:\\t\\rC\\x11\\xa1\\xd2"\\xe8\\x9a\\x0b\\x18\\\\\\xb2\\xc8\\x06\\xa4\\xa9\\xa1\\xdf\\xd7n\\x85\\x9e\\xf8F\\xb4\\x8c\\x1f\\xa1F\\x84\\xe6\\x8bx\\xe9dY\\xfc\\xf0f\\x1b\\x0c\\xc8}\\x96p\\x11\\xce\\xd95W\\xbc\\x07\\x7f\\x8e\\xb8\\xedIeXB\\x8f-\\x17\\x84\\xdd\\xa8l\\x96\\x8c\\xd2J~\\x8a\\xe4A\\x0f~\\xd2,\\xccx\\xf0\\xa0\\xad\\xba\\xb0\\xc2\\x8e\\xfa\\x86\\xeb4\\xc7\\xb7ea\\xfb\\xae\\xb0\\xa5z\\r7\\xd2\\x1a\\xdei\\x08\\xb90\\xa3\\xdd\\xc5\\x01\\x95\\xb1E$\\x01I\\x1eZ\\x9a;n\\x97\\xbc\\xd2Wu*\\x02\\xea\\xa0\\xeca\\x1f\\xa0w\\xe9\\xed\\xe2\\x1b\\x16\\xec\\x97\\xdf\\xaf0_\\xaf\\x8e\\x1dU\\xc8\\x17hY6o\\xdf^\\xdc+\\xca~\\x1e\\xb7p\\xa1\\x8e\\xcc\\xd6/H\\x18\\xbf\\xa0_g\\xd1\\xb4\\x94\\xf8$\\x97a\\xb0V\\x87GRIt\\x89g~\\xb2B\\x10\\xf8t\\x8f\\xee\\x0b\\xf7\\xcd\\xb5\\xd3\\x96uz0]\\xf4\\xbb\\xf3K\\x14nU\\xf7t\\xd5\\x0b\\xe1\\x98\\x9c{/\\x83<\\xa9/$\\xe2e}\\xd8d\\x92\\xd6\\xc6\\xa7O\\x19H_\\x9e\\xd2UC\\xeb\\xf5\\xd76\\x044{t\\xf8\\x88`\\x82WV\\x85\\xcd\\xe9o)\\xb7j\\x10O\\x95\\xda\\xd6\\xc4\\xd49y\\xc3\\xefBz\\xea c\\xca\\xb2\\xc8\\xfb\\x16\\xfa3\\xea\\xac\\x0e5\\x8e\\xda\\xd7\\xf7\\x8c\\xccJ\\xb5\\x07\\x10\\xe0Vij\\xe9(\\x00\\x1f=\\xe0*\\xee\\x0eiq\\xa3>&\\xee\\x86\\x19\\xe1(\\x919W\\xf6\\xe9z\\x17\\n\\x14\\x86S\\xe1;\\xa7\\xf0\\x8bZ\\xc8\\x8a\\xbf5a\\x8e\\x0c\\xf2Cb\\xb4\\x05@ry\\x1b|\\xb3\\xbbD\\x1f{\\x8e\\xca\\x90\\xe7xC7\\x1e$\\xcfH\\xb8\\xb8\\xae]\\xa8\\xbe\\xaf\\x12=^%Z&M\\x1d\\xd2\\x8f\\xd7\\xbf\\xf6\\x80_753&y\\xce\\xb64%\\xa3\\xc2\\xdd\\x83_Mr\\xaa\\xbb\\xa7=\\xc2X+5\\x82%\\xa9\\x18\\xbfh\\x986,\\xf6a\\\'\\x9b\\x02\\x0b\\xc2\\xf0\\\'\\x1b\\xa5\\x80j\\xcb\\xc1\\x8e\\xff\\x01\\xb4\\xb5\\xd16\\xc9\\xee\\xd1\\xd8\\xc9\\xd7\\x80\\xfc\\xa1w+C>\\x16E\\x8e\\x1e\\xd3\\xa1\\xc4\\x106\\x0f6?H\\x1d\\x10x\\x9d\\x13\\xc75}@\\xde\\xdf\\xfc\\xb8\\xd4\\r\\xaf\\x04U\\x8cwO\\xf1\\x82>4h\\x00\\xdaU5\\x1cU\\x0b\\x95\\xd4\\xf4\\x8b\\xa3~);\\x14<k+s\\x951Y\\x0cnW\\xbe\\x11!\\xfb\\xbe\\x98r(j\\xf4\\xa6\\n\\xff\\xbb<r\\xd5\\x9ax\\x13?\\xa5\\xeb\\xda\\xd8BX\\x1b3\\xec\\x81:}\\xb3v\\x0f\\xaa~3v.\\x00\\xf5\\x18\\xe5\\xfd\\x84\\x8c\\xd8;\\xb3Y\\x16$R\\x7f\\xe9{dI\\xfe\\xd82\\x92\\xe1T\\x18\\xa5\\x94\\x19\\xa9v\\xdc\\xee\\xeb=\\x0b\\x87\\xbb{\\xeb\\x01\\x89%/H\\xf1&\\x19vU\\xd0\\xce>\\xd2X\\xe0\\x1e\\xc3\\x18\\x9a\\xb5>\\x9e8\\x15*b\\xe3@6\\x84M\\xb6\\xef\\xcb\\xcb\\x15\\xf0\\xa8\\xdeE\\x90S\\xfa\\x8dx\\x7f\\x85\\x0b\\x7f\\x0b\\xbd\\x05"1k\\xc4\\xf0\\x8dn\\x1e\\xac.\\x16?s\\xd1\\x0c\\xac\\x0c\\x91\\xd1\\x9cy\\xd3\\xb0\\xbd\\xf5\\xe7 \\xa8\\xa0s~Mhw\\xb4A"=\\xe9\\xca\\xed\\x8e\\x9c\\xef\\x13\\x15\\xca\\xddG\\xf7\\x1f\\xcc\\x9f\\xb4l\\x0f\\x11\\xaa\\x00\\xa3U\\xae\\xba\\xc8\\x823hZ\\xd4\\xab\\xfd\\xacc$\\xd7F\\xce\\xa2s\\x0fW\\x9f\\xa7\\x95e\\x9c\\x0b\\xf8\\x1e\\xa4\\x12!\\xefU\\xde.\\\'7\\xafc=\\x10\\xef\\x9a\\x86\\x07\\x8d\\x96d\\x9a?S\\x07\\xe9\\x0f\\x96q\\x96\\xe5I\\xca\\x9c\\x87\\xf2\\x8b5\\xa6\\x0e\\xbc\\xf3rp\\xff\\xcaS\\xed\\x96xk|YKw\\xda\\xa0Ms\\xe4d\\xa5\\x8a\\xe0\\x03\\tQ\\xc3\\x93\\xf4%jf\\xfaz\\x8d\\xb9\\x1eA$g\\x94\\x8b\\\\%\\x11\\xc6\\x0b\\xa8Xu\\xed\\xe8\\x1d\\x9b\\xe89\\xa3<\\xfc\\xf9K\\xd2\\x82\\xf3l\\xb0#;p/\\xe8\\x91\\xb09\\xc2\\xa7\\xed\\x16\\xc7\\xe7\\x8b<!?G}n\\xfbg\\xb4jO:\\xc1e\\xff\\xcc\\x0c\\x9ez\\xcd\\xcf\\x95\\xd6g\\x92?\\xd6\\xb1\\xbb -M\\xa1?^\\x8e\\xf0\\x9f\\xa3\\x96\\xd8_\\x1ck&M\\xba\\xe0\\x84\\t.\\x13&\\xb3\\x94-\\x83\\xac\\xc5\\x93\\x15$\\x1b\\xfd\\x82\\xed\\xb3\\x95\\x16=\\x9f6\\x15\\xc8\\x1a\\xb2\\xdc\\xaf\\xf3E+\\x1ai\\xae\\x06_b\\xaa\\xca\\x11\\xdd\\xd8\\xe2\\x11\\x07\\x0b\\x19\\x14U\\xe9\\x03\\xdd\\xc8!Z\\xf3\\xa8\\xa9\\x1b;\\xbf\\x8d\\x8b\\xd2\\xf9\\xd9\\xa2\\\'\\x16\\xfa\\xf2\\xeet!\\xa5\\x1d\\xa1\\xc2\\xc9\\x0bg\\x1a\\xee}\\xcb\\\'\\x80e<\\xff\\xf9\\xd1\\xb1}\\xfb~\\xfai\\xbb\\xc0}"w1E\\x17\\xa1YLu\\x08&<\\xcc\\xe5\\x1c\\x01Q\\x07^\\x02j\\x06J\\xe6N\\xbb\\x8e\\x16P)\\xcb\\xa9\\\\\\\\,SL:\\xd2z\\xc0\\xc1/\\xe3l\\x1dO\\xfa\\xbe\\xfcj\\xef\\x8bmZ1\\xdc`\\xe6\\x06v\\xfa\\xb8\\xaah}2!\\x02H\\xd0\\x9d\\x18\\xb6\\x9aX\\x19V\\xe0\\xa4\\x9a\\x95\\x00}\\xc9\\x86\\xe92\\x95\\xc0s\\x9b\\x94\\\'\\x00\\x81\\xdac\\x7f\\xa6l;\\x08\\xc6\\xa6\\xad\\xcea\\xa9^\\\'0\\xea\\x13\\x15\\x1fd\\x95\\x8b\\xf7\\x04}\\xc9Wf\\x18\\xe95\\x9f\\xe7\\x92\\xc4\\xb4\\x92\\xa2Zy\\xf3\\x92\\xc7\\xd4G`\\x01A\\x81\\xe0\\xeb\\xf3\\xd1T\\xca\\xc6\\x18\\x81\\xed\\\'O\\x15z\\xbe\\xad8\\xbaO\\xb6L\\x9d(\\xc2\\xb1\\x92\\xd6\\x8e\\xc1Bo\\xb2\\x1e\\xf0\\x12|\\xf6Q^X\\nOy\\xc3\\xb2\\x84\\xcc\\xf6<y\\xbd)\\xc3\\xcc&\\x8d\\xbe\\xcbo\\xdf\\xa8\\xb3\\xdaz6\\xf6\\xc6\\xc1s\\xed\\xaaRn\\x13=\\xc6\\x99||\\xe1W\\x80\\xe4A8n\\xf4\\x18\\x8cC\\xd37)\\x13`aT\\x91\\r(\\xbed\\x9b\\xe2\\xaaz\\x0ej\\xa5\\x8bD\\x97NW\\xe8\\xe0\\xf8\\xe1c%\\x8f\\xaf88IRU\\xe9\\xc7S\\xa47\\x85|\\xbf\\xab\\xde\\xceN\\x14\\xde\\xef\\x8bkzl\\xc2\\x93t\\xc1\\xed#\\xbe\\xbf\\x96y\\x0f\\xab\\xac1\\xeamG3.\\xfe\\xe1\\xd5\\xdd\\x94(G\\x1c\\xbeD\\x93\\x1a\\x11o\\x1d\\xff[\\xf8\\xeedC5~Z\\xdb\\xabsrn\\x02\\xa6M\\x8dm\\x87\\xbf\\x1c[\\xe6\\xae\\xe6\\xc8>\\xad\\x0bs\\xeaZ\\x17\\x14\\r\\x9e\\x86\\x8c\\xd27b\\x18M\\xa7o\\x83\\xa8W\\xe7\\xa4\\x05k\\\\t\\x12\\x07p\\xf9\\x91\\xdd\\xc4\\x17\\xef)+b8\\x99\\x12\\x95xt\\xc5\\xba\\x82\\xab\\x85\\xc4\\xcd\\xccQ\\xeaP\\xf7%-q.\\x9a\\xe3Q\\xaa\\xc4\\x8f\\xbc\\x02J\\x9c\\x85\\xeeAH\\xc2\\xee\\xcb\\xb4\\x1f4\\xd1\\xcc\\x8f(\\xec\\xa2\\xb6!0m\\x00<\\xfc\\xae\\xa4\\xf9 {\\x94\\x96\\\\\\x9c\\x1b5\\x8d7\\xa4\\xd9\\xcda\\xfc\\t\\x9b\\x05\\x86_\\x9f\\xef[\\x94\\x91u\\x02D\\x90\\x15$M\\x966ECf\\xa9\\x03\\xbb,Z?V\\xc7Y\\xa5\\x89\\x04\\xe94\\xd5\\xbe\\xe1\\xc7\\xb3?\\x11\\x9afQ\\xd7\\xe8`I\\xb8\\xf5\\xf2\\x18\\x81\\xbe\\xad\\x1f\\x95\\x8c\\x9c\\x17w\\xd9\\x87\\x01\\xa5\\xd8!\\xff\\x82*H\\x82\\x0f\\xe8W\\xa0\\xf4\\n\\x8a\\x18\\n\\x8bG9\\xec$\\xb8\\x94%\\xffjUP\\x89\\x159t\\xedF\\x8c;M\\x1a\\x08+\\x80b\\xbd\\xcf\\xf9Q\\x0f\\x89P\\xc8\\x1e\\x06nU\\xc1?p\\xf1\\x8d\\x8c\\xb2\\xa4\\xa0\\x94n\\x03b\\x94\\xf5\\x17/\\xb4\\xe3\\x8c\\x1a+]\\xd7\\x10\\xa5j)\\\'\\x0fef\\x85\\xd3q\\xad\\x14+b^l*\\x85|g\\xdd\\xc9\\xaf\\x95\\xfc\\xbd\\xa6Sd;9M\\xcc\\xc2[T[K\\xa0\\xb1\\xc1ylD"b\\x92\\xec\\xa6>5\\xe8\\xa6@&x9[\\x87\\x02f\\x16\\xdcr\\xf8\\xa15\\x9a0\\x18\\xdc\\xe5\\xea\\x9e\\xe1\\x12\\xeb\\xc0\\xb7\\xa9(;3\\x0eg&\\n\\x03\\x10T\\xcf\\xe8\\x85i\\xa8\\x89\\xf7\\x18d\\xdf\\xf3\\n\\xd83\\xb6f`\\x04\\xbci<\\xd8\\xa1\\xf1\\xdd\\xe3\\xe9\\xbf\\xcc\\xc9B|\\x84\\xaa\\x9c\\x07T\\xf0\\xa1k\\\\j<K\\xbbk\\x0c\\xb24)Y\\xa2\\xcd\\xe7\\xec\\x92ST\\xfb]\\xea%\\x99\\x12e\\x98t\\x1d\\x00?\\xdc\\x0e\\xe5O\\xec\\x1f\\xbeG\\x96\\xd22CN\\xf4\\x02\\x88\\xb1\\xd6P\\x9eV\\x9f\\xdc\\xe5h\\xfe\\xb0\\xee\\x86\\xf4_\\x9d\\xd9\\x8d0\\xccBV\\x8e\\x9e^\\xa0\\x8cc*n D\\x03\\x05\\x90F\\xb0d\\x9a\\x82\\xee\\x8c3\\x1f{\\xa3\\x00\\xa8vt\\x1d\\x03A0X\\x15y\\xd7\\x1e\\x8d\\xb4\\x9f13\\x9c\\xbe\\x7fa\\x7f\\x8e^:\\x83\\x9f\\x19\\xab<\\x88G+\\xf7O\\xf3\\xc8\\xb5"\\x18\\xe1\\x7f\\xb8\\x14z\\xed\\xd3\\xcf\\x8fF\\xbb\\x19\\xcd\\xca\\xb4Ax\\xbd\\xa8&m\\xcb\\xe6\\x95\\xb4\\xab~\\xf5\\x0c\\xe4\\x8f#`\\n\\xe5>h4\\xba\\xc1\\x16\\x0c&\\xa5i\\x81\\x98R\\x90O\\x05\\x8aT\\x96U7uI\\\\\\xf7K-\\xf6\\xf6J{pR\\xad\\xe0*3\\x0fv\\x1e\\x8fn\\xd2=io\\x19\\xe2xS\\x97\\xe5\\xe1e\\xfe@\\xe5\\x8d\\x9a\\x85a\\x9e!\\xaf)\\x92\\x0b\\x9a\\xa8\\xbf\\xb4l\\xb5R\\x18\\xba\\xe7\\xf1\\xcc\\x0f\\xe1\\xe2\\xba\\xab\\xe3G\\xb1<\\rqr\\xef<8(\\xb9\\xed\\xb4\\xe2\\xfd\\x18\\x92\\xb5\\xb4\\xa4S\\xa9\\xe0\\xc1\\xea\\xe6\\x95n\\xad\\xffa\\x0e2u\\xa4<\\xd6\\xbd@q\\xfd\\xeb\\xcd\\x96\\x91\\xf5\\xeb]\\x928,;4\\x88|\\xaeQ\\xf1\\x99\\x02I\\xcd\\xd9\\x02\\xffC\\xfcq["\\x8f\\xbb\\x03\\xacj\\x96\\x0cgH\\x9au]@\\xe4\\x92\\xc5`\\xd2\\xebM=\\x80\\x89*A^\\xfc\\xb9\\xae567\\x81\\x82)\\x1dQ \\xa1\\xb0\\x06!\\x82)\\xd2\\xa4\\xdc\\x01(\\xa0\\xd4\\x02\\xdd\\xf4RlSi\\xdf,\\xdd\\x86\\xab\\xbeX\\x83Ns\\x8c:\\x93\\xe1J\\xac\\xfe\\x88\\x8e\\xf42;\\xaa\\xb3\\xf0^u\\xc66"\\x9e\\x80\\xd1\\x132\\xd4r\\x95jG\\xb3\\xa5\\xbb\\xeff9v\\\\p\\x0c;\\xe9\\x814=0G\\x9e\\x88\\xf3\\x1c\\x13\\x9a\\xb8{\\xd2\\xbfG\\xb6(\\x0f\\xa3k#\\x80\\xb1\\xb1q\\xccg)\\xc3\\xe0JX\\xe5\\xa2\\x9f\\xa5WX\\x11\\xae\\x1d\\xc0\\xd4\\x88g\\xee_\\x8f\\xbf\\xf6#\\xb6Tz,\\xad\\x87\\x8c\\xbcJ\\x83\\xb3Pl\\x98\\xe7\\x8bz\\xdd.\\xde\\xf4M\\xc2\\xe34{\\xa48|K\\x9bd6j\\x81\\x05\\x1b\\xb2_\\xa9\\x1a\\x93@\\x96\\xd0a\\x8c\\x03K\\xbd\\xd9R\\xd8\\x19[\\xdc1\\\\B\\x99K\\xbd\\xa8e\\x92%\\xaeu \\x856\\xca@.G\\x19\\x8d\\x98I\\no\\xb5\\x99z\\xd0(\\xec\\x1c\\xf1=4\\x94\\xb0H\\x1a}\\x13\\xb6\\xb8,\\xc9\\xa9\\x00\\xaaHF\\x8d\\xf9\\x8f\\x81\\xa7Jq\\xdb\\xcf\\xa6a\\xae\\x868\\xd0I\\xfc\\xdev\\x8a\\x8b\\xf3\\xb2\\x8e\\x8d\\xeag\\xcf>\\x87/\\x96\\xb8\\xbb\\t\\x8e}E?Y\\xf0\\x16u\\xe2\\x85)\\xbf\\xa7\\xfb\\x1e\\x1c!`Z\\x98\\xd7\\xff2j\\x96\\xc9.\\xbd\\t\\x82\\x87\\xf6\\x16\\xc2.\\xc0\\xe5\\n\\xd0Y1i~\\x8c\\xab\\xd4\\xc8\\x9e\\xae\\xc8\\xfe!$a\\xea\\xa1\\xce\\xb2\\x85Y\\xa0\\n\\xc22\\xefA\\x0bby3.\\xdf\\xa4J%\\xea,\\x04\\x9f\\x1f\\xc6.\\xf0c\\xe7\\xb8\\x91I\\xf9\\x12\\xcd{\\x93\\xbc*\\x19\\xeb\\xf2Ba\\xf8\\xfeK9\\xf2b\\x7f\\x94\\x07k\\x97~sx\\xcc\\x84\\xbd\\x9b\\xec)\\xe8\\xa9-\\xd2wi5\\x18!$\\x7f\\xa8\\xc3]\\xea\\xa9Q\\x96G\\x82\\xc0\\x08\\xe6\\x03\\x1d\\x017qk\\xb4\\xcf\\xe1"\\x0e\\x88\\x14\\xa2!\\xeb\\x92\\xa3\\t\\xe3]m\\xca\\xf3\\xb1c\\xcb\\xf2\\x8f\\xcd\\x9cy\\x0c\\x0f\\xea\\xa0\\xb64\\x15\\xdc\\xe0G\\xe0pn\\xb0\\x06\\xff\\xdaH\\xeb=Z\\x05^\\x8a\\xf6\\xf2\\xac\\x98\\x1c\\xfccJ\\x1d\\xfe(\\xf7\\xc9YA\\xd9\\xed\\x13\\xe7g\\xf1\\xc9\\xd0\\x0c\\x86\\xbb\\x93\\xb7\\xa4\\x9c%J\\xb6ZW_\\x14!^\\xda\\xd9E\\x92\\xc6>\\xef\\xdc\\xa9\\xc7\\x8f\\xe8\\xc4\\x9e\\xac\\x8cS\\xaa\\xb3\\x9c7\\x10M\\xa7+\\x86\\xc6\\x89\\xc6\\xe7\\x90\\x85ZW\\x9eT\\xcc\\xe3\\x8eB\\xf5\\x8e\\xc4@U\\xdc\\x9f^\\x1a ke\\xe6O,\\xbd\\x8c\\xadl\\xc0c\\xcc\\xdc\\xc5Fn\\xf8\\x8cS\\xb0\\xb2\\x0c\\x19\\xebK\\xe7\\xe1\\xd8i\\xb3\\r\\xa6\\x97G\\x9c\\x91c\\x05\\xdf\\xf1\\xe2^+\\xe0D\\x94\\xe4\\x98}\\xc5oY\\x86\\xcc\\x0f\\x90\\x19_\\x9b\\x9c\\rK\\xd9\\xa6\\xdaZ\\xbf\\xfa\\xb6\\x0b\\xaf\\xa5av\\xf0\\xc6<\\xa2+\\x85\\xe3=\\xe6\\x9b\\xca\\xe8\\xfa\\xdb_l\\xee\\x86Vnm\\xd6\\x83)\\xd7\\xd7\\xcd\\xee\\xa5\\xa3G\\xbd\\x10\\xb8>\\x12*j/y\\xb8\\x1f!\\xd42\\xb9\\x8bxD4\\x9f\\xb9\\x07\\xdc\\x9c-\\x98\\xeaY\\xe3\\xed\\xf5\\xefj\\xe5\\xae\\x82e\\xfa\\x16\\xd5"\\x05=\\xd8oI4]\\xb2:\\\'\\xb5\\xb1\\xf6\\x1a\\xdc\\xd5\\xef\\x97XM\\x95\\x9f\\xf1\\\'T\\xa7\\x9e4\\n\\xa1\\xd1\\xcb\\xbfM\\xad0F\\x8b\\xf6H@\\xee\\xee\\xc5"L\\xc6E\\x8e\\xbe\\\'B]\\x15\\xe3\\xa6\\x87I\\x86\\xd8\\x81\\xe8\\x9a\\xa8\\xdc\\xee\\xfbI%"\\xb4\\xc7\\xe9-\\x86\\xebF\\xa6H\\xd1g\\xa6W\\xa3l\\xf0K\\xe0\\xb5\\xe4\\x10*f\\x8c\\x85m\\x8f\\x07tDA\\xc1\\x9cm\\xd8\\xc4\\x10\\xc1\\x18\\xb1\\xa5\\x12\\x7f\\x19\\x8e\\x08E\\xb0$\\xc0\\xed\\xaa_\\xe6p\\xb3\\xc5\\xed\\xf8\\xa3o\\xfcJh8\\xf8\\xad\\xd6jV\\x91\\xeb\\x18\\xf4\\xfb\\xdc\\xb5\\x18\\xcft8Uc\\x95\\xf4\\x8e\\\\\\xd7b\\x9f@\\x8d,\\xf4j$\\xef\\xf0\\xbabT\\x12I7\\xa7\\x8f?\\x99\\xc2O\\xed\\x00s\\xa7]"\\x12\\x17;Ce\\x07H+i0\\xc8\\x9c\\xdbk\\x87\\x84\\xd2\\x96\\x99i\\x82.\\x08\\xab\\xa2\\xb1\\xb6\\xc2\\xa3\\xa0\\xb5\\xdb\\x06v\\x918A\\x176+\\x942\\xd3\\\\\\x01\\xa4\\x9a\\xf3\\x18\\xf5h\\x83\\xd6\\xb0\\x92\\xaf\\xe9\\x06B)\\xc26g\\x92\\x1e\\x16f\\x83g\\x1f@\\xc3a\\xf5\\xfc&?~$\\xb6\\xae\\xf8\\x89\\xba/\\xb3\\x8d\\xe0\\xc1\\x1b%z\\xc4\\xfa\\xe30m+\\xf9bu\\xe8V\\xc7\\x1ft\\x84\\x94\\xf2\\xc3\\x12\\xee8\\xb1\\xa7\\x93\\x08\\xb2\\xe1\\xc4Zq_\\xb2\\xab\\x0c\\xe2\\xf4J\\\\\\x1f\\xf9r|\\xdb\\xc2q:\\xfa"\\xd0B\\xb9uGMNu\\xfc\\xb5&\\xe3\\xcd\\xec\\xf4\\x8d\\x8cR\\x8dr+$o\\x0e\\xdb\\xb1\\x8dI\\x1c=\\x9d\\xc1\\xe6\\tT2\\x12\\x06\\xd6\\xe7\\x93\\xef\\xc6\\x97\\xfc\\xdc\\xd1\\x07.\\x86\\\\"\\xafX\\xd6\\xd2\\xe4\\x15\\xf1w\\xd6)\\x82\\xb5kC\\xd9=\\xbf<\\xf3\\x10\\x19\\x05\\xfd\\x8a\\\\\\x9c\\x15\\xbf\\x90\\x84c\\xeaQ\\xd5\\x84\\x99#\\xb9\\xd9\\xe5\\xa5\\x90-x\\x8eJ\\x97\\x13g\\xe0\\xdf\\xe7\\x9d\\x1d\\x9aZst"\\xce\\xc1\\xa3\\x03;;4;\\x81\\x03\\x97\\xcdh@)\\xe2*\\x90v\\xc3\\xc8\\x12\\x99\\xf4\\x07\\xc4\\x99"\\xf1NYeq\\xa1N\\xccw\\x82\\x85i"\\x00\\x95\\xf5\\xc9\\xb6_\\xed\\xe9\\xda\\x15\\xdd\\x93\\xca\\xb4}\\xac2\\xe8\\xd5\\x81g\\xbb\\xce\\xeb\\xbd\\xaa\\xaa\\xc4\\xc8\\x82\\xf2\\x04\\xe2\\xeb7k\\xadc\\x0c\\xb5z\\x08\\xe3\\xb2Y?\\x8e\\x16i!\\xce\\xcc\\x05?\\xe7\\x9c\\xe2\\xbb7\\x19\\xe8qh\\xc6\\x08Da\\xd9\\xac\\xbbi\\xcb\\xd3o\\xcc\\xe8\\xd9k\\xb8Q\\xeeT\\xd3fP\\xad\\xcd\\x99\\x7f\\xf4\\xa0\\xc9\\xe9\\x93\\xdb\\xa5\\x11\\xf8\\xf5E\\\'\\xf5e\\x93\\x1b\\xddrc#\\x82s\\xc1]7\\xe1\\x947?\\xff\\x03K\\rD\\x96\\xb9r\\x83\\xab}\\x0f$}\\xbd\\xdb\\xb7\\xb5\\xcc\\xb6\\xd50\\xfd\\x1bx\\x7f\\x91\\xc3\\xec\\x84$\\xb82\\xc1\\x98^t\\xbb\\xf7I\\xdd\\xa3.e \\xbb\\xb7\\xd5\\x85\\xd0\\x10-\\x8a\\xc1n\\xc3\\xa5V\\xf4\\x9b\\xeaZ\\xae\\x96\\xfd\\xf8\\x86\\\\\\xef\\xe9\\x0c\\x97\\x1b\\xcc{\\xa89b\\x88*/\\\'\\xedMYg\\xbe\\xe4\\xbf\\xa3\\x87h\\xa6?\\x98u\\xd7\\xb8X\\x9d=2[\\x99n\\xa6MF\\xec\\x16\\x15\\xf9d\\xc2\\xfb\\xb49q\\xd7&\\x1e\\x0c\\xc1\\xaa~\\x00\\xd3+\\xc8\\xcaJV}\\x04\\xe7\\xa2\\x96\\xb0\\x84\\xf4\\xa3wR\\xe7\\xe4\\xe7\\x9eXZ\\x10\\x94\\xf2p\\x02\\xff\\xc7\\xb7>f1\\xef\\x89\\xa5[\\xfa\\x88\\x9b\\xf9QZ\\xce\\xdd]\\x0c\\xe4\\xaa\\xb8\\x0e>\\\'r\\x16\\x1dD\\xf0\\xec?\\x7f\\xe2<\\x00bwU\\xd3\\x82f\\xaf1\\x85\\x89Y\\x07\\xba\\xe8\\x1e\\xdf\\xa5\\xab\\x88wT\\xc0\\x8a\\x1d\\x00\\xe8\\x01\\xac\\xb4\\xc9YJ\\xde\\x89e\\x90\\x1aOO\\xfb\\xb2\\xd7\\xd8\\\\\\x1e\\xafp#.\\xf7\\x1f\\xda\\x18\\x87\\xeff.\\xead\\x0f5\\xdd\\xe4\\x87!\\xbe\\xe8i[ \\xd3\\x9b\\xc2\\xd6\\xce\\x8c$\\xdfn\\xd4\\xe6_\\xe3\\x0bw~7"\\xfa0q\\xf9Z\\xdb\\xd6\\xc8\\xef\\x9e\\xf9\\xb5\\xe3\\x92\\x04\\xf70\\xab\\x97\\x15\\xfa\\xa0\\xaf\\xff\\xdb\\xa4\\xa8"\\x9b\\x7f}{\\xe4\\xc3\\x07\\xe2\\xb2\\xd4a"\\xef\\xc4\\x93\\xec\\xbe6}<\\xf2\\xe5\\xe4is1\\x9f1$_\\x06\\xd7\\x915\\xb4\\xaes+\\x06\\x8cM\\xa5\\xa6\\x8c\\x02\\xc2\\xfe\\xd2I\\xee\\xc1\\xe4\\x0cv\\x14h\\xcd\\xd7\\xfa.6\\xb3\\x98\\x0c\\xad\\x93\\xc3\\xde}\\x01\\x0c,\\xfeW\\xe4\\x8bN\\x88xmZ\\xd8\\xfd\\x17\\xbc\\x17\\x15:9\\x1a\\xb8\\x89\\x19:\\xf5\\x93\\x13\\xf1\\xdbkZ&\\xaa\\x8dit\\xb5e\\xc6|\\xcex\\xaf\\x9c\\xf9\\xd2\\x07E\\x82\\x1c]*\\xed\\xa8\\x99n\\xd3\\xed\\xa5\\xb3\\x10\\x8axf\\x8f\\xfd^\\xecE\\x82\\xa1\\xa2\\xe2\\xf4l\\xd9\\xfaF\\xd8\\xa2\\xb6\\xf2rS\\xff\\x15\\xceZ\\xad\\xb4y\\xbe*\\x95\\xbe\\xf3\\x0c\\x95\\xa6\\xb8\\n[\\xb3E\\xd6\\x9fG\\x8c~\\r\\xa6;\\xd5\\x9d\\xbc\\x8a\\x9a\\xc1U\\xaa\\xec\\xd7\\xd0\\x98\\x8d#\\xe7\\x1b\\x05\\xaa\\xd0G\\x02J\\x88\\x9b\\xe21rh,g1W\\x11\\x1f\\xbaW\\xae\\xbb\\xf9\\n\\xe2\\x8d!\\x7f\\x1aBn\\xb6R\\xb8\\xff\\xd0*\\x8d\\xaa3\\x9d\\x8a\\xf8Vt\\x9d\\xc7N \\x01\\xc1\\\'lk\\x01=U\\x9c\\xa4\\x06\\xff\\xd9\\x8eC\\xff\\xd7\\xc3p\\n\\xa0\\x13\\x05\\xaa\\xe9\\xdd\\x9c\\xb3a/\\xaaC\\xda\\xf7\\xaf\\xdb\\xb0T&\\x93B\\x9f\\xf3\\x7fL\\xfa\\xd5R\\xfa\\xa3\\xc7\\x13\\xcf\\x13/@&9h\\xe2|\\xe4X\\xe5\\xba\\x8c\\xe4\\xc2R\\x99\\xb7\\xc5\\xack\\xc6\\xdc(mT\\xf0=\\xe6\\xfb:s\\x83\\r\\xfd\\x18\\xfd\\x18i\\xea\\xff\\x01\\xc0\\x1f9\\xddv\\xc9\\x91\\x87\\x108\\x16\\xd0\\xec\\xccL\\xd6\\x0ci\\xaeV\\x15\\x82\\x9b\\xffa\\xba.\\x97l\\xd0\\xfd\\x96OG\\x89>\\x81\\x91$E\\xd6ei\\x87L\\xc5\\xf5\\x13\\x8c\\xa63\\x8b\\x83(GN\\xa6\\xed\\x07`\\xefp6\\x911/<g\\x02w\\xef\\x97\\xc2\\xc5\\x06l&\\xf6\\xe2\\xb7q6\\x0cc\\x03r\\xeb\\xd5\\xab\\xfb\\x1e\\x83b/.:\\xdd\\xb06?\\x9d2\\x85\\xf0g*\\x9aXV*Ii\\x94\\xe0\\xb1\\xfc\\x1c\\xfd\\xd0wuT\\x10\\xa9\\xe7\\x81\\x18\\xe6j&\\xbc\\x92\\x14Qs\\xc4*Y\\x06C\\xec"\\xfa>T\\xb4\\xf6\\x19\\r\\x1a\\xe1\\xeb\\x9a-\\x07\\x0b\\xfa\\x95\\x8f\\x8b\\xab\\x9a\\xda \\xdf2\\\'G<(\\xa7\\xe7\\xf4v\\xf6JC\\x06\\xf5\\x82\\x03\\x0bt\\xf9r\\x9d\\xfer\\n\\xa4a\\x96\\x0b\\x10\\x89\\n\\xc9lG\\x1e\\xa7\\x15"{9\\x05>\\x9c\\xf9\\xd7N%E\\xbf\\x9cP\\xd8\\x9d^\\xdb_UV\\xe2\\x18\\x9f\\x8f\\xa5\\x9d\\xc3\\x8f\\xbdp\\x9a\\xba\\xbe;\\x14C,\\xe8\\x07,\\xf9\\x8e\\x94K0\\x16jCl\\x10\\xfc\\x80\\x9c\\x8b_\\n<\\xd3\\x01mt\\xb0(\\x8f\\xee\\xf1\\xf8k\\xd5m2\\xe8\\x16G{\\x87_\\xc0\\xa2\\xa8\\xa5\\xb5\\xbdK)S5/\\x8d\\xb5\\xa5\\r\\xd4{a8\\x0e\\xc8jy\\x94\\x8f/\\xee"\\xf6Ag@\\xae\\x1e\\xf2\\xfbD~\\x10\\x90\\xe5\\x91\\x90\\x89B\\xe8\\xf5\\xc9\\x97rU\\xf5U\\xac \\x87\\xad\\x0f\\x9ed\\xd5yF\\xc9\\xe2\\xe1\\xf0\\xd5\\xff\\xeb\\xe9G\\xbeZ\\xaew\\xda-\\xee\\xee\\x061\\xd3\\xfe\\xf0\\xa8\\xb9\\xc1{\\xe7s?:\\xf1\\xa4\\xa4\\x1f\\xb70l\\xbe!\\x94\\xe2-\\x0f\\x94\\xf7\\x1e\\xca\\\\@\\xea\\xf3W\\xf3\\xe7\\xc7\\x87\\x887\\xfa\\xf7\\x13U\\x8eeO\\xf9\\xf0b\\xa6\\xca\\xd9\\xc7bo\\x17%\\xe8\\xc3h\\xf2\\x90}hzw\\x1b\\xa9h\\xb4\\x7fZ\\x9b\\xcf\\xe6\\xd4\\xa2\\xe3\\xafO\\xcd\\xac\\x9b\\x88\\xd8\\xf2\\x8c\\xb1\\x9c\\xe6\\xc0\\x9bjq\\xed"\\xd3Y\\x9c5\\xbaX\\x7f\\xb9\\x80Z\\xf4\\x8ad\\x9d\\xee;\\x1e2\\xe7<Z\\xe5.#F8.\\xcb\\xd5\\x86H\\xe3\\x85AQ"j\\xa9\\xcb\\x7f\\xe3\\xff\\xf0j\\xdd\\xd9)>x\\x8d\\xe2\\xf2\\xe3\\xa8\\xb9\\x95\\xcb\\xfd\\x9by\\xdb+s2\\xcbP\\xe5x\\xeeb=\\xee\\xa2\\xfa\\x08\\x8e\\xff\\xfb\\xe1\\x1e\\xb5\\xca\\xc8\\x94\\xfb^\\x8cO\\xe3\\xd8\\x99\\xb8X\\xdeo\\x9dH)\\xf7\\x1e\\xab:\\xf6`\\xc8o3Q ]s:\\xfaU\\x10\\xad\\x9fM\\x9f\\x89p\\xd5\\x8c\\x14\\xcd\\xf8\\xc4\\xb1\\x1e\\x06lk\\xa4\\xc5b(z\\xcb-\\xb1\\xf1\\xda\\xe2\\xb0!\\x9e\\xfdD\\xce"\\xf5\\xd6 n\\x86s$\\x1b\\xa6\\x12\\x95}o\\xf4M?b\\xbc^8\\xe6\\xa7\\x95F\\r\\x940}\\xdd*\\xcaok\\xa4\\xc0\\x1f\\xe71E\\xb2\\x16\\xc3\\xc0\\x87m\\xef+\\xfce\\xf7R\\x1d\\xda\\x13\\xc5W\\xce\\x15|\\xa3\\xc7v\\x06\\xb5\\xd3l\\xc6L\\xf5\\xd0\\x9b\\x87\\x99-<\\xb5\\xabXe\\x1e\\x87\\xca%\\x87Pb\\x96/\\x1b\\x12+\\xe4\\x06\\xf9\\x81\\xc3\\xa1UI4F\\xce`\\xcf\\x1a\\x08o\\xe3r\\x8a\\xb5\\x1d\\x814\\xea\\x8d(\\xb2\\xbc\\xe5\\xea\\x00c\\xec"\\xd6\\xd6p6\\x9e\\xdc:\\\'\\x91Cnt\\xee\\xe9\\xf93c\\xcc\\x1d{\\xef\\xfeS\\xcbBHX\\xe3\\xbd\\xb4\\xcf\\xd5{\\x9eGa\\x8c\\xca\\xfeJ\\x17\\xd1&B\\xf4\\x91\\\\\\x18!\\xb4l\\x121\\xbd\\x15*\\x1b\\xb1$/!\\xd1K@\\xd7\\x97c\\xce\\xde\\xcc\\xf2_\\xde\\xd0L\\x9fq\\n\\x84\\x91\\xf6;\\xe5\\xd6&\\xf4\\x07\\xe9\\xe6(\\xe1\\xfa\\x8d\\xb4\\xa4\\xae\\xe4\\xac\\x85nm&\\xa2\\x89Se\\x96U%\\xea\\x83W("\\xaf\\xa3#Z\\xf8\\xab\\x8b\\xe6g\\x0b\\xe1\\xdem\\xf3\\xf8\\\'\\x11?\\xb0%Am\\x92:q\\x92\\xa8:\\xcd\\xf2\\xbeOb\\xb3e\\xc1\\xb2\\xe24<\\x17r\\xe6o3\\xdd\\xb6\\xa1\\xca\\x9f\\x94n\\x0e4\\xcb\\xa6\\xd6\\xb6\\xd5\\xfbd?6s\\x80\\xa9u=\\xdc_\\x98l\\xab\\x04\\x95\\xb1\\x1a\\xb9^Z\\xf3\\x8e\\xd0q\\x1d\\x07+3\\xe4\\x1a\\xe5\\xa19\\\'\\xc8\\x8c\\x89\\x8e"\\\'\\xc6\\x9e\\x89\\xecWi\\x93\\x9d\\x1c\\xbf\\xd4gg\\x82\\xe4\\xed4&\\xb2\\x88s\\x0bVy\\xab\\x9e+_\\xef\\x0f5iC\\x9f\\x83\\x96\\tp\\xfa\\xbd\\x91\\xf89\\x99S\\x14G7l\\x1e\\xacF\\xf9WtV\\x15\\x97\\xdf\\x96^\\xca^\\xa5\\xcb\\x9a\\x1d\\xc5}\\x1d\\xd1\\xd9\\xebZS\\x01\\xca\\xef)h\\x96t\\xc0\\xad\\xb5\\xb7\\xdbxHh~\\x81\\x1a\\x9e\\xffp\\xc2.\\x9c\\xd0\\xefv\\x91\\xa6\\x94iA\\x9dZ\\x88b;~j\\xec\\x07\\x1f\\xc5\\x0e\\x05\\\\\\x84\\x00pt\\x92\\xb4\\x9b\\xbf\\x11\\xce\\x18\\xae<\\xd2\\xf2\\xaf\\xb2\\x87\\xd8\\x102y\\xad\\x0bQ\\x85s\\r\\xbc/+\\x81\\x1eaiqN\\xea*@\\xcc\\xc4\\xd12KZ\\xa0\\xabP\\xf1K)\\x11m#\\xd3\\x98\\x8d\\xf2K\\xa1t\\x14>\\xbd\\xc8\\xca ~\\x16\\xd6\\x14G\\x8dh\\xaf\\xed\\xae\\xce]\\xd7\\x9f\\xd2`X\\x81\\x1c\\xe3\\xe3N{\\x86\\x00\\x85\\x9e\\x87\\xa1\\xf9\\x98fq\\xa7\\x0bs\\xc4e\\xb1\\xd1\\x15e=\\x88\\x98\\xa9\\xa88\\xd7R\\x05\\x07,\\x18e0U\\x85\\x13\\x15\\x9a\\xee\\xd8S\\x16\\xc0@\\x8e/\\x13w\\xf4\\x18\\x1a\\xb2mSm\\x80\\x96\\xa9\\x97\\xb1Gn^\\xbf\\xf8I\\x8dkw.I\\xd3\\xf4\\x8eD\\x89\\x93J}\\xb5g\\xc8\\xb7\\x8cqdt\\x1b\\x85\\xaf}\\x85)\\xf6K\\xa7u\\xe4\\xe3\\xde[\\xc3\\x94y\\xd7c\\xf0\\xc61f\\xb1Mt\\xb5J\\xa0\\xa8\\xfe\\xee\\xd2\\x90\\x95\\x98S\\x857bY\\x8f\\x8a0\\xd9^\\x91\\xa1\\xfd=\\x8c)m\\xf0\\xcc\\xc3OG!\\xbe\\x9c\\xed\\x1f\\xadC\\xee\\x84H\\x95\\xd6\\x9e5\\xc6-1\\x06evCQ\\xaf8\\\\\\x97\\xf9\\x14q\\xd7\\x11\\xce\\x81\\xde\\x91\\xf7\\xb8i\\x95X\\xfa\\x97\\xce\\x8c\\xc4\\xd4\\xf8\\xfd\\xad\\xa9\\x80\\xc8\\xaf\\xec\\xec\\xa1T\\r\\x97\\xe25\\xe4\\xfe\\xbd\\xfa,\\xcb\\x8f\\xeb\\x97u\\xa1\\xd6\\xd0&\\x96\\x13fW\\xc2(\\xbaT\\xc26\\xd9m\\xaf\\xcbyg\\xc2 q\\xba\\x1cr.w\\xf8\\xca\\xe8i&\\xac\\xeb\\xdc;/\\xe6\\x96\\x1f\\xf2\\xe6\\xd9\\xd9\\x871z\\xd8\\x1f\\x1703H\\xddk\\xd4SP\\xe8~`\\x18\\x98\\x8b\\xc2@\\xac\\xccu}\\xc9\\n6%MxR\\x96\\x03\\xe6\\x7f+r\\xb8\\x8b\\x19K\\xac\\xb2\\x86\\x1b=\\x80yG"d:\\xed\\xac\\xaa\\x97[\\xad#\\x9b\\xc9\\r\\x95\\xb4]eA\\x01\\xc5Y\\x12\\x84\\xd5\\xe6O5\\x1f\\xa4\\xe1V\\x13\\xe1 \\xecB;\\xefK\\xfdF[\\xa2\\xef\\x13\\x0cwJ\\xe2\\x8e6M\\xaeQ\\xf8\\x15\\xde-\\x80\\xb3\\x04*#%\\xad\\x95\\x19\\x1dv\\xc8\\xd8\\xab\\xe8\\x85\\xd2i\\xc7;\\x8f\\x7f\\xfa$\\xf6\\x8cq\\xd5\\xd1\\xd0\\xd9\\x89\\xa0g\\x98\\xd1#g\\xaeT6X/W??,!\\xba\\x9aG\\x13"^\\x1a\\x97J\\xf5c\\xe1\\x0b\\x02=c@h(S\\xe2\\x8b\\x97\\xcb!\\xd4 \\xa6M7\\x063\\xa9\\x0b\\xbcN\\xe4G\\xa9\\xb1H\\x12C!\\xa0A\\xfa\\xeaQ0\\xdf\\x02\\xaf\\xcb\\xb3n}\\x15\\xa7=q\\x1d~-\\xf9$\\xa9\\x01e\\xe3\\xa5\\xfb.\\x91,/\\x95\\x17\\xc3F\\x90l\\xe2\\xd7F\\xd2\\xa2y%\\xf6\\xd7a\\xd1\\xc3\\xaa\\xea\\xd1\\\\\\x88\\x06\\xdbJ\\x80\\x9e\\x95!^\\xffG\\x0e\\xbb\\x8f\\xa8\\xf2B\\xe9x~\\xbf\\x04j\\x1e\\xfb\\x10\\xf3iepV\\xee\\xe54\\x0c\\xca\\x9a\\xcf\\x19D\\xabq7\\xcfF\\x86w#\\x7fT\\xdfb"\\xa9\\xf8\\x16|\\x98\\xe9.\\x17\\x14\\xccn\\x02&\\xd53\\x8a\\xad\\xe3\\x1b\\xda\\xcbqC\\xdd\\\'\\xaf\\x96\\xa9\\\'\\x96-%\\xa4\\x7f:\\xe8\\x12\\xd4\\x13>x\\xab\\x9f\\xcb\\x95\\t#g\\xa8\\xc62\\xf8S\\x02\\x9d\\n\\x9a\\xa2i\\x1f\\x05%\\xf4V\\x8czQ\\xf3\\x05\\x9dQ=@\\xb3!\\x9a\\xea1\\xa6Og,+\\xfb\\xaa\\xd1]y\\xd0\\xfd\\x94\\x1a^8\\xcf\\xc8\\x1e\\xda\\x11\\x9b\\x85Z\\xb0\\x1c:q\\xb75\\x9c\\x7f\\xa0GZ\\x8e\\x9c\\xfc\\xe4^\\xf4S\\x18\\xbd\\x9fc\\xe9\\xa8XiA\\x9f\\xb9\\xe0\\x8f\\x90\\x8e\\x1foQU^/\\xb2\\\\\\xce\\x1c\\xe9\\x89\\xca\\xf8\\xb3\\xe5\\xc9Gt\\xa4F\\xbe#\\xaf\\xee\\x04\\xbc+g\\xc5\\xa4\\x06<\\xfaK-\\x7fJ\\xdb\\x81\\r\\x15\\xc8R\\x99F(\\x81:\\xca+$\\x89\\xbe\\x8e\\xc7*\\x06Qp\\x90/\\x06\\xeb]{\\x0fF\\xb4\\x1e/\\xd0\\xb8\\x04\\xc3\\xc4.e\\xc4)\\xc4L!\\xe3\\xf4\\xdb\\x91\\xd9|\\xc6\\xfe\\x84\\xf1\\xa1b|"\\x9a\\xdbN\\xbd~\\x95VS\\x81$wZ\\xb2F%w\\xc3\\xe8C[:\\x942I\\xea\\x13\\xa0a\\xf3$\\x15Te\\x0c\\x9d-L\\xa9^\\xff\\x80wE\\xb5P\\xfa3T\\xe6Z\\x9d\\xbdS\\xc0S\\x8e&N\\xcd\\x10Mt\\x83\\x9bM\\xd4|!L\\xdf\\x9b\\x98\\x98\\xee\\x1e\\xc175\\xb9\\xd7wP\\xee\\xa4\\x85\\xad\\x08\\xaa\\x1e\\x171q{\\xd18\\x8b\\x1c\\xc0\\xff\\x92\\xd94Mc\\xfadq/\\xd9}\\xc9\\x83J\\xa7\\xd4F\\t\\xe1S>\\xc32\\x89\\x13\\xaa\\xfd\\xd0:\\x11\\x9f\\x06\\xe9TD\\x8d\\xcb"8\\xbe\\xa7\\xcc\\xfdj\\xfdv\\xba-q93+\\xe6\\xcd\\xb7\\xa9\\xcd\\xcdi\\x8a\\x99\\xbd\\x96\\x83\\xb0\\x88>b\\x0b\\xc6\\xd8\\xd35;\\x8c\\xab\\x8a\\x04\\xfb\\xa8\\x90\\xc1\\xa1\\x98l\\xdd\\x9f\\xb1X\\xef\\xa6\\x84\\xe3X\\xb3`.\\x10\\xdaH\\x8e\\xc81\\xb4{*J\\x7f\\xb9\\x8c90f\\x1e\\xa5\\x1e\\xba\\xebN\\xb1\\xdbh\\xfcZ GX\\x13^1\\xc9\\xebX-\\xa1\\x9d\\x07\\xf1}\\xa0-\\xa6?H\\xb0<\\x97T\\xd0\\xc6.ss\\xe2\\xb3F\\xd9 \\xd6v\\x13\\xad\\x9d\\x14\\x11\\xf4\\xd2\\xdfx\\\\\\x87\\x0c\\xff\\xce\\x07\\xd5\\x04\\xe97\\xe4\\x11\\x9alUP6\\xf2-\\xd0o;HW\\x9b\\xb5\\xa9\\xfd\\x00\\x9d\\xe1&\\xa5\\xdc\\xe0\\xc1\\xb9E\\xb1F\\x1dS\\xe5\\xe3C\\xbf6\\xc3p]l}wb`d\\xf5\\x8c|\\xb1z\\xe6a\\xd1\\xdb\\xbeq\\x9eS\\x9ea.f\\x11\\n\\xa6\\xa3iOk\\x15L~u\\r\\x8d\\xa3\\xc1nG\\xf3Z\\xe3.\\x9a\\xa9\\x8f?\\xe6\\xf1w\\x84\\xcfm\\xc5 \\x0cc\\x8b7\\xaej\\xebo\\x01\\x1fOW~l\\xfb\\xe0\\xa2\\xc4\\\\\\xa9\\xb1\\x1f\\x87)t\\x04yK\\xe6\\xb3\\xa1S\\xf1\\xe4\\xb7\\x1b\\xcfIz\\xa4W&W\\x1a\\x9cdF\\x98\\xc7\\xd6O\\xf9-\\xa8\\xd7\\x06\\xb7\\x12\\x02\\xb0T\\xd6\\xa5\\x96r\\x18o\\xe6\\x98\\x8e\\x1f\\x9a\\xa5\\x87VxV\\xcb\\xea+F \\x13\\x12\\x9bh\\xd3\\xceF=\\x0b3{\\xa7\\xdf6\\xc4w\\xf5`}g\\xa0\\xdb\\xf8VA\\x8aZ7JZXv\\xc1\\xae\\xda\\xe7>\\x93\\xa5\\xcej\\x91bsL\\xc9;\\x177\\x05\\x15\\x8ex\\x87\\xfcj\\xd3m,L\\xc6\\xfdC\\x7f\\xf2\\xfb\\xfd\\xaa\\xea\\xb8\\x12\\x8c#K\\x16\\xfe\\xd0-\\x95\\xcb\\x97\\xea\\xc9\\xc5\\xee\\xdd-\\x19\\x0b\\xa0\\x8eG&\\xa3\\xcf/PA\\xf1\\xbb!_\\x8b\\x87\\xd0-i\\xf9\\x88\\x97\\xdc\\xef;R\\x19\\x11\\x98\\xd8A\\x19X\\xb5K:\\xe1\\x96S\\xe2\\xa0\\xe2\\xdc@w\\xea\\xb8v:\\x84\\x89`\\xb12\\xe6\\xcck\\x91\\xf1\\xfc7\\x01\\xc1\\xbc\\xfe\\\\.\\x0f\\xaf\\x1b\\xa6cY]q\\xd0\\x1f\\x1f\\xdf\\xb3\\r-:nh\\x95\\xc1\\xda<\\xc4M\\xf4^\\xdf\\xbb\\x1d\\xed\\x86\\xb0\\x0c\\xc0\\xdam\\xfa\\xc4~\\xae\\xb8\\x1f\\x07\\xf4}\\xc1\\x8b\\xa8k\\xab\\xce\\x99\\x84\\xd8/\\xaemc\\xe0\\xa7up\\xcc\\xe5\\xc5\\x00Z\\xbc\\xc8&+I\\xb4\\xe4k\\xed/j\\xa3\\xd3\\x87a\\x8c\\x1c\\x00\\xbe\\xf6\\xb0\\x8f\\xbe\\xea\\xb8\\x9c\\x95\\x0b\\x7fx \\xb8\\\\\\xce>\\x84R\\x18~J\\xa8\\xa9\\xc5\\xafQ\\xee\\x10\\xca\\x0bJ\\x92\\xc1:\\x08\\x1eP\\x83\\tQm\\x14\\xdcA\\xc6$\\x92\\xca\\x00\\x88\\xa3|\\xa1\\xb3*xK\\xb9\\x89U\\x1d\\xf1\\x1cq@-\\x1e\\xd3\\x9f\\xff&\\xd7+\\x1c\\x7f\\x8a|p\\x9b6\\xa7\\xbb\\xc6\\xa1\\x83\\x11%\\xba\\xd7\\xe7\\x03BO\\xc9\\x9cr\\xc4\\xa7O\\xb8\\x96w\\n\\x94\\xdcl\\xfcHj\\xe2-\\x1f\\xb0\\xb7\\x86#\\xbe\\x0c9\\x9c\\x15F3\\xae\\x9f\\x91$\\xec.\\x1bS\\xc4l\\x1a\\xe2M\\xdd\\xbd%s\\r\\x7f-\\xc4\\xe8\\xac\\xa2\\xb3\\xd6\\xf9A\\xc6N]\\xb4\\n+g\\xcc\\xa5\\x0bk\\xdbbna\\x8c\\xf2\\xf6\\x8d\\xfe\\xa7\\xab\\x1e\\x059\\x87\\\\3a\\x1c\\xfd\\xaaH\\xfa\\xc3\\\\\\xa34\\xcfl\\xd8s\\x86\\xeb\\xc5\\x15\\xae\\xb2\\x80\\xa3\\xdb`\\xc8\\xf3\\xae\\xe2\\x10\\x8a\\xc3[N\\xca\\x8dw(\\xa2}\\xb6\\x8f\\xe4w8\\n\\x8e<\\xe7\\x1f!\\x89\\xa3;\\x90)5\\xc3\\xe7\\xda\\xd31\\xc5\\x86\\xaf\\xf9\\xc8\\xfd\\x9f\\xb2N\\xf9+\\x07\\xb0^\\xab\\xf3\\xe6\\xb7\\x91\\x11mo\\xe2\\xe0\\xf4\\xdc\\xe4]\\x7f\\x00\\x1d+\\xdb\\xdf\\xdb\\x1f\\x8d\\xb9\\xaa\\x9010\\x1ea|k\\xaes\\xbd\\x07\\xc0\\x19$\\xe4\\xca\\xeb\\xf0\\r\\xfe\\x98\\x84&[9i\\xbf\\x9c\\xbf\\x0b\\x12G\\xa4\\x19x\\xbd/\\x1a\\x10tV\\x90\\\\N|\\x9d\\xd0\\xd3Lh\\xdb\\xef\\x99\\xd45\\xb0\\xbb\\xabM\\xf9\\xa0\\xe7\\xfc\\xc0\\x96\\x86\\xba@-\\xd84*\\x16\\xe1 \\xf1\\x90\\xaa\\xdf\\x18\\x18\\xaabr\\x9ci\\xecKm\\x16XX\\x89\\xff\\x92h\\x01\\x97w-?\\x99N>\\xe5f\\xe9\\x089\\x14\\xd6]\\xe0\\xe6^w\\x1d\\x06\\xef\\x8d\\xf0\\xd3\\x99WlxV\\xe2y\\xb2\\x9b0*N\\xea\\xdd\\x87\\x0cs\\xdfa{\\xdc\\xb7\\xab\\xfa\\x14L7\\x0f\\x9f\\xd5\\x1c?\\xe3\\xd1\\x15LRc8\\x12\\x96\\xa0?\\xafJ\\xf9\\xd2$\\x18\\x1b\\x8dz>\\xef\\xbfqt\\xfd\\xa2\\xaa\\xcbY8}naQ\\x11\\xbe\\xda\\xe7!d\\xf8L\\xb5~\\xfd\\xd2\\xfe\\x06\\xf1Bav1\\xeb2\\x16]|5\\x16~6\\xd3\\x8a\\xe9\\x86\\xbb\\xa5.5\\xae\\xe6\\x81\\xe1\\x152U\\x00\\x00a5\\x83}$,T\\x80N\\xb7\\xd9\\x0e\\xc3C\\xb2\\xb98\\xd3j\\xb1_\\x86\\x1b\\xc3\\xa0\\\\\\xc8q\\xa4\\xaaD\\\'\\x05w?\\xd1\\xc8i\\xf7\\xf8\\xfd\\xea]\\xffZ\\xda\\xd7v>5\\xd27\\xef!\\xc9pn\\xc7\\xd2\\x82\\xd6\\x13\\x1c_\\xac\\x87\\xbe\\x15\\x95\\x8f ,\\xe3\\x0e\\x10=\\xb7:\\xd5\\x9e\\xd0\\x11;\\x9cW\\xf50\\xa5\\xbcu+\\x01E\\xfb\\x1frR\\xaf:\\xaf\\xd43\\xbfQ\\x93\\xbe\\xb3\\xe4y\\xf0z\\xe6\\x89t9j\\xad\\xcb\\xcb\\xd5\\xc6\\x9fJ\\xf4\\x9f\\x8a_\\x84\\xc9\\xc8A:>`\\x81<l`\\xca\\xe4\\x8b6`_\\xc6i\\xe6\\xa7\\x02}\\x0e\\xa8\\xfdRj\\x9fW:\\xc7\\xa2\\x8f\\xf7\\xfa~[\\x84\\xac\\xeex\\x87j\\x96\\xab\\xae\\xb5%R\\xc2\\xa4\\xa2885x\\xebm.v\\xd2\\xd1n\\xde\\xf14\\xd5(\\x93h\\xe2\\t\\xa9)l\\xeb\\xfb\\xfbGT\\x8c\\xe9\\\'u,,\\xa2\\x82/nS\\x14g\\xd6\\x04.j\\xdd\\xc5\\x92\\x85\\x13\\x18\\x14\\xbb\\xe19\\x92\\xeb\\xd1\\xc1\\x8e\\xf2\\x1fC\\x8e\\x7f\\xe1\\xd9\\x87Kt\\x91\\xd2\\xc26Q\\xc5\\xbb\\xd7S\\xb7\\xa4\\xadp\\xdf\\x93l26\\xc7V\\x88\\x86bN8\\x1d\\xbf\\\'O\\xb6fn\\x07\\xdcZ\\xb8q=\\xf0\\x16\\xdbh:|\\xd5\\xe5\\x8c \\xbb\\x1do\\x9eS+\\x9eT\\xb4%\\x96}J$p\\xaf\\x1b\\x0cp\\xce/FZ\\x9bw2f\\xb6s\\n\\x16H\\x1c}\\xc7\\xf2\\xc2\\x10lKh\\xe8An\\x19~}I\\xa0\\xafY\\xf9\\xe3\\xaa\\x1e"\\x85unH\\xe0{\\xce\\xc7cB~\\xb86\\xff\\x9f\\xd2/[\\x1d\\xaf\\xb7\\x8d2\\x1a\\xb2\\xe7h\\xf8\\x11m\\x11\\x9f\\xd6\\xa3\\xad\\x98N\\xa5\\xc5\\xd2Q\\xdcX\\x9fG\\x84-3\\xbb\\xe7\\xe2\\xc3\\xd8|n\\xec\\x05\\xc7\\x98\\xae\\x0f\\x94\\xaf?M]\\xd7\\xb9\\x7f~rnF\\xfc\\xe2\\xd1\\xca\\xf8m\\xf1(i\\xa6\\x95\\xadW\\x97\\xdcc\\xc2\\xedd\\x8a\\xc93 <\\xfeRMj\\xfa\\xf5\\xf3\\xf7\\x94\\xf0\\x14[$\\xd9\\xd3\\x15\\x8a\\xa8\\xfe\\xee\\xbb8:\\x94\\x1a4\\x98\\xb13I?\\xc1~!\\\\\\xff\\x14\\x02MN)\\xbf\\xa3\\x15\\t\\xb2\\xe8\\x1f\\xbe\\xe3\\x9f\\xfdH\\xed^\\x0e\\xe1)l\\x9bt\\x03:\\xf5\\x16"\\xfdY\\xa9a^\\xf1\\xa1\\x16\\xc3E\\x86C?X\\xb7\\r\\xcd\\xa05\\rZ\\xf5\\xb1\\x131\\x90\\xb6\\xb7\\xb4\\x94#\\xf5\\xfa\\xbeF\\xb8&\\xbf\\\\#\\xc9=a\\xd4\\xa8\\xbf2fRG\\xf2g\\xc2\\xf3\\x13\\xb1\\xf6K?\\xce\\xed\\xd3\\x9d\\xfcLe\\x96\\x13\\xe7\\xba\\x06HHf\\xf0\\xa0^\\x1c\\x11S-?\\x9f\\x9f\\x80\\xfc\\xa0b9\\x15\\x13\\xefQ\\x8f{s\\xed\\x8a\\xad\\xb5\\x99\\x1d\\xe3\\xfc\\xf5cu\\x1b9y\\xda:sbvV\\xdf\\xe5s\\x86\\tE\\x89h4\\x01\\xa6\\xca5a\\x90\\xb65n\\xa1:\\xf4p\\t\\x8c_\\x02\\xd7\\xdf\\x87\\xf6]\\xd3\\xca#\\xcb\\xdd\\xd6\\xa8x\\xae\\t\\xd4qq\\xed\\xcc/\\xe6\\x7ff\\x8b\\xe4\\xda\\xafy\\x8bA\\xa8\\xb1\\x82\\xf5\\xae\\xc5\\xe2@\\x04r\\xe0\\xe7\\x96\\\\cGe\\xd7\\x8dlW\\xf5\\xc9\\x17\\xe6v\\xe7\\x86O\\xef{\\xbbE\\xf8\\xc6\\xd9\\xad\\xeb\\t\\x89\\xde1\\xf7\\xbd\\x9eOQ`\\xc9\\x8f?\\xd8\\x11\\xf9]\\x01j^\\x13WO+f-\\xbd\\x13]\\xe7?\\xb0\\x12\\x89d9a(\\n\\xb5\\x1f\\xbf\\x10$.\\x9f\\xed\\x16\\x89>\\x05jTvw\\x9d\\x82\\xa6w\\x86\\xee\\xfc\\x8d\\x1b\\xee\\xeb\\x97\\xdf\\xdd\\xa00\\xd2\\xa55\\xea\\r>\\xddm*\\xf7b[#\\xfd|\\xee2[UN\\xb5\\xe1\\x10JS"\\xccH\\xd9\\xc8\\xb8\\xd1\\xe6\\x9c\\xab\\xb1\\xa0\\xd9\\x1d\\xbb\\x92\\\\\\xc6\\x10c\\xf7[\\x18\\x12\\x82\\xe2K\\x92I\\xaf+)\\xf46\\xe5\\x1cn{\\xe5G\\xa3;\\xdb4\\xfa\\xd6\\xfeX\\xca5\\xd1d_!E.\\x85\\xfd\\xf6\\xf8G\\xea*\\x14\\x8f&q\\xcf$U8\\xd3\\x9a\\xbd\\xe1\\x9e\\xbd<\\x1bF@\\x86]}\\xdc\\x9a\\x02\\xfc\\xd7\\xd3\\x1eB\\xb8:\\xef\\\\\\xcc\\x90Q5\\xa9\\x00\\x17"\\x86\\x8e\\x8a\\xe6\\xf1\\x00e.\\x8c\\x81\\x1c\\xf6\\x8fM\\x9a5\\xc5\\xd2\\xfbt\\xa1v\\x93\\xeb\\r\\xd9\\x99\\xdc,\\xa6W>r\\xb8\\x84\\x00\\x91\\xd8\\x9d\\xd7\\xadTN5\\xd1n^\\x0f\\x12\\xf8\\x86\\xe0\\x95\\xed\\xe0\\x8a\\xfc=r7\\x1e\\xbe\\x01\\xf2\\xc6\\xb5\\xec\\x95P\\x9aD\\xeeH\\x03S\\xf4\\xbc\\x82\\x13\\xe3\\xf4^\\xdc\\xday\\x8cr\\x16\\xc1 \\xe1%Mw<\\xb6\\xb5\\xb7\\xc1\\x11\\x80(tN\\x12\\xc2[h\\xde\\xf7]\\x0e\\xd9\\xe2N\\t\\xc2\\xf8\\xf9i;\\xf0X\\xc6\\x16\\x14\\xfc\\x17M\\x8eg\\xcb\\xe1\\x10\\x89cf2\\xf4\\x08\\xa3\\xb1\\xeb\\x17?\\xfb\\x04\\xbc\\xcd\\xcd\\x1f\\x86\\xdf$4e9\\x98\\xc4\\x88\\xa8\\x16N?)\\n\\xbd\\xff\\xa00\\x1b\\x1a\\x8b\\xa1\\xf6}M\\xa7k~u\\xbc+\\xef\\xa6n\\xb0\\x86\\x1d\\x9b\\xbe\\x86A\\x90w\\xc5Q\\x8d\\xee\\x81\\x07"\\xa6\\xca\\x86\\x16\\xe6yzc@\\xfa\\xea\\x08\\xb51)D\\xc4\\xb9\\x1fzg\\x85\\xc3\\xe1\\xec\\r\\xbd\\xca\\xcc\\x95%j&\\x7f\\xd3&F\\x95!\\xb7\\x03\\x891\\xf5\\x19\\xf1\\x1a\\x93)GU\\xe5C5\\xed\\xc5\\xfa\\xd4\\xdbo\\x95\\xe6\\xe4v\\xa8\\xe8\\x8f;\\xa6\\xee\\\'\\xce\\xa2O\\xe4lv\\xc5\\xaa\\x0eA\\xc4+_\\x85\\xc0|\\xe8\\xbe\\xedV\\xaf^r9\\x1d\\xd6\\xe9\\xfe\\xb6\\xf09\\\'\\xb0\\xc9Q\\xb0\\xfam^st\\xd2\\x1af\\xe2\\xf7\\x955N\\xa1\\x1b\\x86\\xb1\\x89\\xe76_\\x07.\\x9e\\xc1X\\xb3\\xeb6\\x05\\x98`\\x1d\\x03\\xd1\\xcaj`F\\x04B\\xdb}\\xd4\\xe6c\\xfd{_:\\xba\\x00\\\\\\x98\\xae\\x05\\x90\\x0bc\\xea\\xfat\\xf3\\xb6\\xb6\\x1b\\xe2Qn\\xb8\\x03Y\\xda\\xf2\\x0c/\\xfd\\x8c\\x0f\\x85\\x89tf\\xbf\\x7f\\x0cK\\xab\\xb1K\\xea\\xfe\\xecy\\x83\\xb0\\xed\\x04\\xb9\\xb0\\xec&[\\xbfR\\xb2.\\xf4\\x1e\\x97f\\x94u\\x8c\\x1f\\xd63C\\xea\\xde/\\x13\\x1d^\\x1c\\xbc"l\\xda\\xd8\\xe0t\\xe1o\\xd8\\xa6|c\\t\\xde\\x04\\x01_t<\\xea:-\\r\\xd0\\x93\\xc8\\x9a\\x9e\\x14;\\x1c\\xd8\\xdd\\x98k1\\xceP8\\xbc\\xc9\\xf1\\xb8\\x14+\\x06\\xa4\\xabc\\xe4FF\\xc6\\xcb^B\\xe9&`\\xben\\xdb6)+\\x07i\\xb4=\\x01\\xda\\xef\\xc7+\\xf4\\xba\\xd7\\xd7\\x1a\\x0f7\\xc3{\\xd1\\xa09\\xda\\x00\\x8d\\x9f\\xd8e\\x05\\x13\\x1a\\x8c,3\\xc9\\xde\\x0f\\xb1\\xfa\\x85\\xcb\\x91\\x82~\\xeav\\xc6\\xa7\\x14\\x9b\\xcc\\xe6\\x9a\\x8d\\xc5X\\xd8\\x13\\xa0E\\x84:\\xcf\\x10\\x7f\\xe6?G`\\xbf\\x9c\\xbb>$N\\xb5\\xc3:\\x9b\\x8a\\xf0)\\x17\\xdd\\x9b\\xf8&\\x13\\x92\\x8b\\xd0\\x87\\x06\\xe5\\xd1\\xafe~\\xbb\\x99\\x17z~`\\xea\\xe0S\\xf12RB\\xd4W0tN\\xf7\\xed\\xcd\\xf2\\\'*\\xa9\\xfb\\x06\\xce\\xb2<\\x81\\x11\\xf5\\xf0\\x94\\xfa\\xa2\\xa7\\x97){\\xd5!\\x9d\\x85\\xad\\xc6c[\\xed&\\xa5Iii\\xa6\\x12\\\\\\x0fr\\x17\\x9fM\\x13\\\'\\xad\\xb3\\xa8\\xa1\\x06G\\xbdEV\\xa2\\x9bv\\x8c\\x9d\\xc0\\xed:y\\xe2\\x9f\\x14Z\\xd2\\x10\\x07\\x8d\\xddh\\x1c\\\\\\x97\\x8e\\xe7\\xe9\\x03\\x97Brh\\x84\\x97=\\xaf%\\xe1=\\xec6\\xf1\\xa7\\xa6\\xc8HG\\x13\\x91\\xeb\\x11\\x85\\xe9ZI\\x9e\\xaf\\x02\\xfe\\xaf4\\x80\\xab]>\\xd8HS\\x0e\\x05j)\\x8b\\x1c\\x90L\\xe6\\x06j\\x1c\\xab\\xd6\\x94\\xf3|\\x8f@k\\xe3j\\x8a\\xbe{C\\x02\\xfd\\xb1\\xe2\\xb8\\x8b\\xc6G\\xdc`qd|\\xf6\\x9ft"\\x0f\\xe2k%\\x92\\xb1c\\xcb~\\xc7p!\\x94\\x96?a\\xf5.\\xa8\\x8f\\xd6\\xe6\\x9c\\xa6rS\\xbc\\xe9\\xf9s&\\xba\\x8e\\xbeP$\\xc4/\\xaf\\x12&\\xc6$\\x8fsKf\\xf9P\\x94T\\xd7=\\xe58\\xb7\\x97\\xd7\\xe7Y\\xd1\\xc6\\x98\\xa4\\x84\\r\\xedV\\x0fnI\\x9cYl\\x92\\xd9+8\\x8c*\\xa0\\xd7;\\\'\\x85hy\\xbf\\xbb~\\x0f;\\xe9\\x92\\xbax\\xbf\\xe0!\\xff\\x88\\x87sR{\\xe8V\\x93c\\x97\\xd2\\xd9(?\\xaa\\xc1\\x05Hd\\xd2\\x1a\\xf9\\xa9\\xe7\\x8d\\x9bt\\x14j\\xb7E\\x82\\x89{\\x9ekCk}o\\xf0\\xce\\x9d9\\x83\\xc8\\x8fH"\\xdd\\xf9\\x9b\\xb8\\xc5\\xe6\\xb2\\xb6\\x85\\xb0X\\x97\\xf4\\xe0*\\xb0b\\x9b\\x90\\xa7\\x88\\xee\\xf2\\x0bd\\x1c\\xdaGXA\\xbbv\\x8e\\x93\\xf0\\x19\\xa7\\xee:\\x18\\x95\\xe6mZ\\xddu\\xf8\\xce\\xc0KK\\xc2\\x9a\\x0fG\\r\\xe7;2\\n.~\\xb3\\xbe\\x08\\xa2b\\x99\\xeb\\t\\xe9d\\xee\\xdc\\x12\\xc4\\x99]\\xcbX\\x10}\\x99x\\x18\\x90\\x0cps\\x81\\x90\\nFmU//]\\xca\\x00\\xc1\\xe3\\xa3&\\x15Rn,\\xe5\\x0b\\x7f\\xf2\\xa3Q\\x92A\\x87\\x1a\\x95w\\xfe\\xcd\\x1a\\xaa.g\\xb5%6\\\\\\xb2\\xa0\\x01>f15\\xd2l>\\xfd\\x037\\r\\\'\\xbd\\xc8\\xb8s6\\xeb\\xb27("Oi\\xfa=\\xacT\\xce\\x11=\\tF\\xf1K2*kta\\x88!g\\x0b3wC\\xef\\x17\\x04jr\\\'\\xcb\\xbc\\xf5\\xc4\\x16W\\xc6\\n\\xba\\xc7E\\xae\\x8e\\x9cT\\xa1j}\\x8e?)HM\\x84q\\xad\\x13\\x08@9\\x92M#\\xd8\\x0c&;\\x0eP1p\\x16\\x16\\xd6>;\\x96\\xa9t~\\xc3\\x0f\\xa5h\\x08To\\xe4\\xf2:g\\xbc9\\xfd\\xf2\\xe6cx8\\x02\\x02\\xd5\\xce\\xc6 /\\n>R\\xe4Q\\xff\\x11\\xba\\x0e+\\xe6ht2r\\x9ex\\x95\\x9cW\\x0f;5\\x0c\\xf3\\xfbJ8e\\xfc\\xd0\\xa1\\x97w\\xaeRn\\x02\\xdf\\xa4\\x12y\\xa9,\\xc8#\\x02\\x82\\xde\\x17\\xc19\\x91X\\xc8\\x9c \\xbb,\\xae6\\xc2\\xect6-\\xaa\\xb8\\x13\\xca\\xdf1\\x05\\x16\\x8b\\xe0LC\\xa5k\\xae\\xb9\\xb1\\xc51\\x1f\\r7N\\xcc\\xec\\x9b\\n8`\\x87+\\x10\\xe8\\x11\\xac\\xe7u\\xb3W\\x007\\x99\\x9f\\x99\\xab?.q\\xc0\\xe8sA\\x1f\\xd5\\x06M\\xd5\\xfe\\xb0\\xe8\\xd0:\\x95\\x92\\xf0\\xb98\\x86R91hxx\\xa6\\xcfq\\x0e\\x1bZA[-\\\'\\xdf32MH~\\x84\\x85mT\\x89\\xcc1\\x07\\x85n\\xc4\\x9e*\\xe8f\\xe4\\xe4\\xb6k\\x1b\\\'eUm\\x967\\xe9\\xc1\\xdc\\xacx\\x99d\\x89A\\x1eg\\xc0\\x892ql3\\x9b\\xf6C\\x984F\\x9d\\xdd+`\\xabS\\xa3&+\\x1c\\x88\\xab\\x13\\xfa\\xff\\xeaQ\\x90\\x88\\xcd5}\\x95\\x17\\xfe\\xb8\\xa4\\xf6\\xfe\\xc3iL\\x92=\\xa4\\xf0W\\x11\\xa6K!C\\xffE\\xfd\\xda\\xf3&\\xc4\\xfb\\xd3\\xf2y\\xd9\\x06\\xe21\\xb9\\xaf\\xbf6\\xd2?s\\x86\\xaaM^:\\x9c\\xcc\\x89\\x18<\\xec\\xb0\\xc7\\x00 \\xba>?y\\x8f,\\xb6\\x7f\\x87\\x8b\\xeam\\xfbU\\x13_\\x0f\\x0f\\xb8D0\\xfd\\xe6\\x04cAs\\x88T\\xcaM~>)\\xc9\\xd25,C\\x94\\x08\\x9b\\xd1\\xb7Z_C\\xa6y\\xf2\\x18\\x12-\\xee\\x11N\\x01\\x1f\\xbe|\\xb5\\xf1|\\xe1e\\xfb!\\xac\\xc3\\xa0\\xb4Z\\xc1\\xac\\xa8)M\\xf8\\x83\\xcfOBc\\xf3\\x11\\x1d\\x9d\\xb1\\nw*|Zm)\\xa7\\x8b\\\\,\\xfd\\x8f\\xf3\\n&\\xc9\\x8d\\x8c"\\x86\\xb2\\x9f\\x80\\x1cC\\x9c\\xaa\\x887\\x11\\xbf\\x82-\\xd9\\xa3\\x81J\\x8e0\\xeaF\\xfcxtB\\x08O\\x95]T\\xc2zl^!a=9\\xbdR<\\x07\\xa3\\xba\\xe3\\xf3"\\xb2\\xfbZ\\x8fyM=\\xfc\\x0e\\xf8\\xddkQ3\\xd2\\xdf\\xba>\\xd0\\xea\\x1c\\xbe\\x952\\xd2\\xc2\\x81p]\\xc5\\xab\\x08j\\x8a\\x14\\x9a\\xea\\xaf\\x8c\\tA\\xe0G+\\xde\\xff\\xf26\\xa2IP\\x0b)\\xf6[\\xd4A\\xb0\\x94\\x95\\xe4\\xa9\\xaf\\x02\\t\\xc5`\\xbc;M\\xc5\\xf2O\\xeax\\xbd\\x80\\xf6\\x1e\\x959H\\xf2\\n\\xf1\\x16\\xc7\\x1d(\\x0cD\\xe6\\xd0\\x90Dl\\x9b\\x9c<\\x14\\xed\\x00,m^\\xe0\\\'\\xe2r\\x128E\\xde\\xee\\x9b\\xfa\\x86\\xb2\\x17Q[\\xfd7\\xa6\\\'\\xe5E\\xbe\\xee\\xa8\\xd6[\\xefoL\\x01\\x11\\xb88\\x8d\\xe9\\xfaj\\xe4\\x87\\x1eR\\x0cs\\xc7\\x9f0\\xb6S\\xbf\\xe6Br\\xa3h\\x15\\x8a\\xd9\\x16\\xa2\\x8c4$|\\xf2v6I\\xf8Y\\xedBB@\\xc6\\xa5/\\xed\\x83Fy\\xf7\\x1eM\\xef\\xaaH\\xfef\\x9eL\\xd6t\\xe1\\x17D\\x95\\xa5\\xd9\\xac\\x93\\xc386\\x8c\\xd4\\xc0\\x175\\xf67 \\x8d\\xb4\\xed\\xb7\\xe9\\xa7\\x15\\r\\xbc[\\xb3w*\\xcfp7\\xfe=\\t\\x8ae(\\r"\\x06\\xdc\\x9ap\\xb1\\x98\\xca<W\\x92\\xede\\xb8\\xf1Q\\x8c\\xbd%\\xb8PdL\\x90>N\\xf3\\xac\\xd9\\xcbhA\\x97\\xf5\\x85\\\'\\xc6\\\'\\x9csJ\\x9d\\x1a|\\x99\\xc2\\xc5C\\xa6\\x0c\\xfb[r.\\x90\\xb4\\x18\\x14\\nK\\xed\\xc48\\xb2\\xd7N\\x1f\\xda1\\xda\\xb1M@\\xbc\\x9f`8%\\xdd\\xaa\\x82:\\xab2\\x80\\xae\\xef\\xf5\\xef\\xbf{\\x7f\\xa7V!\\xcc\\x90\\x00ayH\\xac3\\xf8\\x17\\x17\\x1c\\x04\\xe3\\xb4\\x96\\xd3\\x8c\\x0cl\\x10:\\xd2\\xe4\\xca\\xbd\\xcf\\xb7\\x95\\xd7z\\xa7!\\xb9\\x8e\\xaai\\x19\\x96\\xae^\\x87\\x91d\\xd6\\x80\\xa2\\x88\\xd2\\x927\\x0e\\xd3\\xff]h-\\xb6O\\x048{\\xff\\xb4\\x0c\\xdfCP\\x8d\\xc5\\x13\\r\\xb2\\x1eu\\xe0\\xbfk\\x17Ry \\xc9\\xa1\\xd2\\xff\\xbe5\\x1as\\x1b\\xb2\\x1et\\x9eZ\\xf4\\xe6A\\x1fo\\xd3\\x01\\xe2r\\xc4;\\xaa\\t\\xfa+7\\xe7\\xac\\xcbGV_\\x95)\\xfc= :\\xbb\\xf3\\xabNN\\x07\\xb4\\\\t\\xd6\\xa4\\xb7Z#\\x80\\xa8\\x1e\\x9b\\xe0\\xb8\\x99\\x9f.\\x0fwP\\xdf;~<\\x8f65Fa5 a\\x8b\\xe5\\xff\\t\\xcb\\x174\\xe8\\x15\\xc8\\xec\\xe0\\x00\\xba\\xd6\\xa53\\x115#\\xd3\\xeb%\\xdd\\x9a\\x80 5\\xfc\\x997@M:\\x7f\\xd3\\xd9\\xf2\\xd4\\x96\\x1e;\\xee\\x87\\x92\\x8e\\x04\\xd9\\xec\\xf1\\x96 ;-\\x1e\\xd8\\xc5\\xd4\\xa2\\x8aO\\xe6\\xa2I\\xf6\\xcaN\\x1b\\xdbb\\xd7\\x94\\x99\\xba]\\xf5\\xab\\x99q\\x83;\\xfc9\\xd2\\xd3\\xafm\\xb7mM\\xd8\\xd6h\\xba3\\x03a\\xbc\\xff\\xc8\\xbd\\x14\\xec2\\x18\\xca\\xd7\\x89\\xe2\\x12\\xa2\\xa7\\x8e@\\x15d\\xd6\\x0c\\x07\\xffw}\\x03\\xb4\\xf1j\\xed>\\xfbzt\\xbf"\\x05\\x12Jw\\xf4\\xb7,q\\t\\xf7n\\xe0\\xfe\\xffH\\x90\\x81\\x91\\x82\\x84\\xcb\\xea\\x97\\xab\\xc9\\x9f\\xfb\\x9d~\\xe547\\x1c!\\xc8\\x93?\\xe9_!\\x0e\\xdb\\xff&"\\xafc\\xb0\\xe2\\xfc\\xe3\\xf5\\xc9fT\\xab\\xe3\\t\\xda\\x04\\x875\\xbaGz\\x1d\\x1aCR \\xd6\\xadSQ\\x8c\\x91\\xe0\\xcb\\x15\\n\\x92\\xf8P\\xed\\x87Un\\xc0Q\\x10(\\xb7@\\xf8\\xb0\\xefG\\x9fS\\x07\\xef:\\x1fY\\xf0b\\xc5\\xc7{j\\x06b`[\\x1f\\x1at\\x98\\r\\xfc\\xe6_\\x14\\xe1u\\x86\\x80\\x17\\x86\\x9b\\xe5\\x10\\xac\\xe0\\x9cb\\xcd\\x7fK\\x14Y\\x91&NR\\x89\\xe8\\x11%\\xff\\xa7*\\xc3f\\x9b\\xf8\\x0bd\\\\\\xe6\\xbe7\\x8b\\x8e\\xa6n\\xf8\\xd1\\xd58\\xe1\\xeb\\xeb\\xc3l\\x8b\\xe1\\x04X\\xd1\\x0e\\xbd\\xb2\\x87\\x05\\x8a\\x05\\xf5\\xde0YP\\xea\\xd9\\x8d\\xa5\\x14`\\x8e_H\\\'\\xeeHS\\xc4Y\\r=h\\x99o\\x82\\x81\\x1a\\r\\x9d\\xf2G\\x85\\xad\\xedR|\\x80\\xd2_Y\\x0f\\x07QO\\xc7\\x15)\\xad\\x07a\\xc7\\tW\\xc6\\xcc<F\\xaa\\xbc\\xfd?\\x8a$Z%q\\xf0\\x86Eg\\xf8\\x86z\\xab\\x01\\x96<\\xcbt\\xcfif\\x0f\\xd9\\xb6\\t\\xee\\xda\\xd8\\xb8r\\xbcD\\xf8o\\xfd\\xfb\\x08I\\xd8\\x0c\\x03\\xfc\\xcf3\\xfa\\xde\\x04\\xa1\\xd6\\x88|nj\\xde&Q\\xee!\\xe4\\xf7pmH8Y6\\xd3\\xc1\\x8f\\x95\\x9c\\x03M\\x9e\\xbe\\x9c\\x03X\\x85_\\xbc\\xbb$\\xb9\\xe9K\\x84\\x84b4\\x83\\xd1\\xa5@\\xc8\\xa4\\xbe_\\x8a\\x19\\xf2\\xfar3\\xa16]\\x19\\xb4\\xfb\\x03\\xf5\\x16\\xd1\\x9eiwS\\t\\xc8\\xef|\\xfd\\xa5>.\\xaa\\xd3\\x0cn2\\x8a\\xe81\\xd12\\x84\\\\\\xe0\\xb49\\xff\\xb8\\xea\\xca\\xe8\\x93a\\xec\\xda\\x81bB\\xe7C\\xa6{s\\x0e\\x06$\\xc9t6\\xa9\\xccYE\\x0e4\\xd0\\x01\\xfa(\\xf8\\xab\\x8cH\\xf1 k\\xddA\\xaf\\x14\\r\\xcf|\\xacq\\x03L\\x18\\xd3\\xa7\\x977\\xe5\\x1f\\xe2Xa\\xd4M\\xe1\\x99L\\xce\\xb9\\x15`P\\x86\\x0c$\\x98sg<RR\\xef\\x83\\x17\\xb7\\x9b\\x9e\\xa5n\\x15\\x83Y\\xb9S\\x1d\\x85M\\xba\\xc0\\x9c\\xf5\\xf37\\x1em\\xbb\\xbeu\\xe8\\xa9\\x18U\\x02\\xb1\\xf9\\xe6T\\x8c\\x16\\x0f\\xc6\\xe3&\\xa9\\x18c\\xf5\\xfe\\xa4(\\xd6kN\\x1c\\xc3\\xb8\\xa9\\xd7C\\xaa\\x83\\xa4\\xdag\\xdd5\\x11\\xf0\\x95\\x8e;\\xabF1\\x83\\x90\\x03^\\xf98\\x81\\x16Nc\\xee\\x95Q\\x95\\x08\\xcf\\xd3\\r\\xed%\\xb3\\x94\\xef\\x88\\xf7\\xa6\\x125\\x1f>\\xfaz\\xc3\\xeaCv\\x97M\\xeex\\xb9%BQ-\\x91\\xaa7\\xeb\\x86\\t\\xbe\\x8f\\x10C5\\xa6\\xbf\\xc97O\\xa98\\x89\\x13\\x02K\\xc9\\xfd\\xfd\\xc54\\x1cQ6\\xba\\xab1\\xe0\\xf9`]\\xb6\\\'\\x15H\\xf7\\xb2\\xa1\\xf3\\x97D\\x1e\\xed\\xdc\\xd0\\x14\\x05!\\t\\x8d\\xbe\\xcenP6\\xafb\\xe1\\xbb\\xc7$\\xce\\xb4\\xec\\r\\x00oEF`\\xf7\\x88\\x9f\\xa8\\xbc\\xc4\\xdeE\\x1b\\x9c\\xcd\\xce_\\x1a_\\x867\\x95\\xcb>ZR\\xcc\\x80\\x00{\\x9a\\xae\\x19\\xaa\\xd2\\xcb\\xff\\xd3{\\x1a}\\xb1\\xed\\\'\\xe1%\\xb21\\xbf\\x98\\x01F\\xce\\xe5u\\xa8\\x1e%-\\x17.C>\\xf5e\\xad\\xf2Xb\\xe2\\xdd |\\x12\\xfe\\xc3.r\\xe27X\\x919\\x94N\\xf6\\x1e\\xd3BGK\\x9c\\xd8+\\x9b\\xfb`\\xf6\\x93\\x1a`\\x86\\x8e\\xec^x\\x98\\xd87\\xa5\\xf3!\\x98\\x9di\\x18TD\\x07\\xb9j\\x1d\\x1c\\xf1\\xb4\\xa0\\xd1\\x15h\\xb1`\\xa5\\xd1\\x8f\\xf2\\x89\\x07q\\x10\\x9c\\xed\\x02h\\xd4\\x87\\xbbu8\\xe8/\\xb0V\\xe9\\xfa\\x0b\\xa7\\xbb\\xc7i\\x02\\x00;0G>\\xd9\\xaaY\\xed\\xd0\\x92B\\xcb\\xab\\xef%\\xd7\\xdc\\x93\\xc7u\\x19O\\x01\\xe6@@\\xc4p\\xcf\\xc1\\x9b\\x95\\x08\\xb9\\x86\\x08\\x9f\\xac)\\x9a\\x87?)\\x9a\\xf1u\\xce\\xd6\\xafZ[\\xcf\\xc8\\xb6q\\x9b\\x0b\\x89\\x9a\\x12\\x8d\\x0e\\xe8p\\xa0b\\x03Ab\\xc5_J\\xe1\\xc6B\\x9c\\xca8\\xee\\\'\\xab:\\x93\\xc7\\xc7\\xe1/\\x9c\\x91mo\\x13\\x8a\\xa9E\\x12\\x11N\\x9a\\xd2\\x8b[\\nO5\\x8e~l\\xec\\x1c\\x94y\\x10\\x94\\x005\\x9a\\xd7\\x9b\\x98\\xc2C\\n\\xf8J\\xbd\\x8au\\x94\\xf9}\\x16\\xf0R\\xb1\\x08\\xea\\xec\\xf4\\xfd\\xc2\\x19\\xf4p\\xfc`F\\x9c\\x92\\x10Gb5\\x1d\\x04]\\xbe\\xcf\\xd7S\\xbcG-/0\\xbf\\xa6\\x03\\x86\\x01\\x10\\xe3\\xc1\\xe6\\xa7l<{\\x0f\\xf6\\xc7V\\xc1\\\\\\x06\\x1bc<7!)m\\r\\x84\\xe5\\x9d\\xb2\\xb6\\xdcV\\x9b\\xb09O"H\\xbd<\\xc0\\xae\\xb57\\x971\\xb4\\xac\\xb9\\xdfhw\\x83\\xde\\xa3S\\xfe\\xcd\\xc6Q\\xe8t\\x86\\x1f\\xedT\\x18\\x89-\\xdf\\x90f2\\xcf7\\xaa\\xa2o\\x0b\\x1e\\xcbU\\xc6\\xd4\\xdf\\x19l\\xf5\\x1b(\\xa1\\x91X0\\x94\\x812o|\\x93\\xe8\\x819\\x14\\r\\x02\\x9d\\xb1\\xc4R\\x9d\\xd2\\xec\\xc48\\\'\\xbc\\x02)\\t\\x13\\xe8+fl\\xbbx<\\xa3-\\x92\\xa3G\\xf2\\xc4=\\xde\\xd2\\xc5\\x96O\\xe4\\x08\\xfc\\xe0t\\xd3d\\xafJ\\xd7\\x85\\x7f\\xfaQ\\xe6\\xcf\\x9e8\\xe6[Z>i\\xbb\\x13\\xa7\\x11\\x1b\\xae\\xd8`\\xae\\xf1\\x98\\x1c{\\xf2\\x0f&\\x8c\\x92\\xab\\x9f\\xd2\\x98\\x14\\n,y\\x06\\xf2\\xc8\\x86\\xe3~M\\xd8vrv_\\xdb\\xc0\\xee\\xdcj\\x01\\x88h\\xd6\\xc0\\xdf;0\\x05\\xd3\\xf2\\x8a\\xefP\\xf0\\x87\\x1dy\\x0e\\x91\\xc9\\xa0\\xe7\\xe9\\xe9`u\\x9e"Y\\xfa#\\xc7\\x16\\xe8f\\x878\\x83\\x94\\xd1\\xbf[\\x0e3\\xe0\\xa0\\xda\\xc0\\xf4h6)\\x0f\\xea 9\\xa1\\xe0\\xba\\xea\\xa0\\xa5_\\x17\\\'s\\xa9\\xedV\\x99.:\\xdf\\t\\x7f;\\xf4g&\\xb6\\xf8\\xde\\xd5\\xce;\\xe5\\x00hX)\\xb2A\\x80h\\x9d\\xcfZW\\xeb\\xa6\\x10\\xdc\\xba`\\xb4\\x00\\xb9-\\xf3\\n\\x95G\\x93\\xf0i\\xe6^\\xbb\\xe9z\\xc6\\x8dp\\xea\\xe0RJ?\\xdc\\x8c\\xda\\x1f\\xc9\\xd88\\xf1\\xabVk\\xdc\\xdb9\\x90\\xc5\\xe9\\x8er\\xe8&M\\xfe\\xa7j\\xa6\\x8b\\x1fP\\xfb\\xda\\x01\\xd9X\\xd7Q\\xb0\\xd7\\x8c\\x83I\\xd8\\x13Hh0\\x8a\\xb1\\xa0,d\\xfb5\\x01\\x96\\xf3+\\x98\\xdd\\xa4n-\\x82%\\xc3\\xf8\\xb8\\xd7]\\x93?\\xfcZ\\x87\\x9bk\\x13\\xba\\xca^\\xd3\\xfeN\\x17]-\\xe4\\xfb0.\\x91\\x9d\\xa7\\x9a\\xcd\\xc4)\\t\\xb9\\xdeI\\x05\\xacK\\x81\\xdb\\x07\\xdb\\xc4S\\x86\\xc0>\\x1b\\xf7E\\x8d\\x92\\x8e\\x87\\xf2\\xf0+\\xe2:r\\xfe3t\\x1e4\\x16\\xcdg\\xd0\\xd2\\xf8\\xd2\\xd5\\xff*;{\\x82`\\xd9\\xa0m\\x9c\\xeeD5\\x87g\\x10\\\'\\xf4\\xc3\\xb7\\xdd$\\x1d:$\\xb8\\x0c-\\xbdD\\xa6<\\x1dgy\\xfcv.\\xd4$\\xaf\\xa9\\\'\\xbb\\x86r3v\\x05?\\x9e\\xa6_\\xd0\\x82\\x8c 5dI\\x1fp\\xe4#\\xc7\\x11\\x053:N\\x89\\xf1\\x99\\x0e3$\\xe4\\xffh\\xbb\\x91G\\x1b\\xa1a\\xa0\\xdcT\\x81Cd\\xe0\\xd9\\xab\\x0e\\x19\\xb4\\x9f\\x8b\\x00\\x82\\xe4\\xb6\\xce-\\x1b\\xea9D]\\xc9\\xe9\\x96\\xc2Y\\xc6)\\x98o\\x19\\xe6\\x82L\\xe0 \\x1f\\xe0\\xf7\\xb34\\x9c\\xc8\\x11\\x07i\\xc2\\xa2}HQ+\\xa9S\\xbe\\x93\\x9dR\\xf4lB\\xc9\\xc0\\xc7q\\xef,bL)\\xb0}\\xa4A\\xed\\x1b]Ep\\xe0\\xb3g\\xb6\\x00\\xfd\\xd9>\\xdf\\xc4\\x97\\x0cy}\\x81\\xfd\\x0feb\\xdf\\xcb\\x01\\xd96\\xecda>\\rO\\x0b9M|\\x83\\x16\\xa4\\xc1\\r\\xf5\\x97\\x1f\\x92\\x0c\\xc97\\xa6,\\x0f4wj\\xde:GW\\x15S,V\\xbb\\x99\\xf5\\xc0,3\\x16g\\x02\\xae\\x1fC\\n=[\\r\\xad\\xec~\\x15\\x81G.\\xc1\\x9e\\xb4fN\\xb4\\xc5\\xd4+\\x8c\\xc2{BU/x\\x1c\\xe2J\\xea\\x1ay\\xe5K\\x0b\\xd1.\\xcf6\\xa1\\x0er\\x7f\\xcbr\\x14\\xc8\\xb3^\\x94\\xf0\\xc5\\xf1$\\x9b\\xe6q\\x0bs\\x05\\xdd\\xe0\\xb4\\x98O-\\x1c\\xefUU\\xac\\xf7\\xc4\\x8e\\xb7Hw\\xee\\xb4\\x83\\x06\\x11\\xc9gT\\xb4;\\xf3`H\\xaeX\\xe7?\\xed\\xd6\\x83\\xbd\\xff\\x94k/\\xb7@\\xeb\\xc9\\xf5\\x0c\\x98>\\r\\x1d;[\\xb4\\xd8\\xee\\x93\\xceA\\x8be\\xc1jb(i*\\xb4?@j\\x7f\\xbeM\\xbco,\\xf44\\xc2f\\xdb\\x1055=z\\xed\\xa5\\x82\\x92~5\\x8d\\t\\x030\\x80^\\x00!X\\xef\\xc3\\xf9\\xe4\\xb0\\x8e\\xa1a =O\\xcd3\\xc2\\xdf\\x93!\\xe6\\xa8\\xadu\\xdb\\xdf\\xbeA\\xb22\\x9aD.\\xd0\\xd0\\x05\\x8a\\xf2M\\x18\\xda+\\xf2\\xda\\x03Cj\\xa6\\xfd\\x1bZ\\x00\\xd6\\x8er\\x7f\\xd8\\x131\\xebR\\xd3f\\xc8n\\x0bM\\xa0\\xbc\\xb1\\x1c\\xc5Z\\xf84E\\xf0\\xf6p\\xef?\\xa4\\xef\\xeb\\x7fo\\xdc\\xd7hf\\n[{\\xa0\\xa1\\xdf\\xa5\\t\\x8dq\\xeb\\x0e\\xe9\\x84\\xe6\\x93$3\\xd2\\xb0\\xd29\\x1d~\\xb5\\xa8j3\\xf3\\xec\\xe5\\xfa\\x15\\xd62\\xaa\\xc0D\\x99U\\x96\\x10\\x971\\x86\\x8b\\xe1%S\\x96\\x8b\\xe1I\\x80O~W\\xf3\\x0f]\\xbd\\x11\\x1d\\xbc\\xac3b\\x9c{]\\x8e\\x16\\xebO[&\\x01TI\\xb5N/\\x8fg\\xe7\\x86K\\xed\\xf2\\xb47\\xaeC\\x13\\\'.\\xe4\\xb2\\x1c\\x03\\x03\\x8a\\x1f^\\x9f\\xbd\\x06\\x0b\\xc1a\\x18\\xbd\\x15pB\\xce\\x1fJ\\xf1\\xb5\\n\\x9f\\x85YY\\x83B\\xb7\\xc9o\\x0f\\x12D\\xb3(8\\x92\\x80Q5\\xaa\\x8fB\\x16\\xb5\\xa6\\xac\\xa5n\\x7f\\xf5\\x8d\\xa4\\xccH\\xae)IK\\xd5\\xcdY\\xd3\\x0c\\xa5\\xe0\\x11\\x1f\\xedHV,\\x92\\x07^\\x1bxw\\xc5\\xfb\\xd9\\x926\\x8b\\xc1\\xd8x2\\xcas\\xfdmv\\x8er\\x8dX\\xad\\xbf\\xc9\\xd6\\xca\\xef\\xa6\\xa5\\xd5\\xd4j\\xc5\\xb5DB0Y\\xc4\\xbaEj\\x08\\x1c\\x93#\\xf6\\xd4\\x01\\xda\\x90\\xc1\\\\\\x9bY\\xe6F\\xdd=\\x05\\xf4\\xbe\\xc0\\xf7\\x02\\x9e\\x87\\x02o;\\xb8Q}\\xed~\\xf0\\x90\\x97\\x1a\\xfa\\x0fu\\xe74^u\\xa9\\xa7\\x11\\xcd\\xfa\\x19\\xb9\\xd8\\xbd\\rmt\\xf8\\x91\\x16\\xef\\x18;\\x1c\\x08\\xad\\xa4\\\'\\x13\\xf9\\x87\\xbfHOp9\\xf4\\xa2\\xfb)\\xb6\\xfc1\\x07\\xb5\\xd0\\x13W\\xf0\\x85)Et\\xa1\\xe9 )M\\xc5\\xa7\\xa9E\\xc7 \\x14\\xbb\\xed\\x1e\\x1e$\\xbd\\x07\\xed\\x968\\x87\\xf6\\x06\\xa4l\\x01\\x13\\xba/\\xbe2\\xe8i\\xacP(9\\xe2$\\x84\\x05>C!\\xb3s\\xac\\x9dP\\x11/\\x02\\x12<\\r\\xfeu:[\\t\\x07\\x86]UP\\x9ep\\xf1*\\xee\\xe8H\\x90!c\\x8a\\x18[\\xa1\\xd4F_e\\xf0\\xf16/O\\xabu:\\xef\\x11\\xe56\\xb3!QDe\\x87\\x10\\x81t5W&^\\xdc\\xed3\\x13\\xbd\\x07\\x11\\x19\\x89F\\xf5\\xfc\\xa9\\x87n\\xab+\\xb4\\xba\\x151\\x87\\xb6\\x99\\xbc\\x1aO\\x0e\\xe9\\xe3j\\xb9\\x9c\\xb3m\\xa3\\x90\\x8c\\xac\\\'<q^\\xa6\\xf2+c\\xa7\\xd5`\\xdfd\\xe4k\\xf1\\x91\\x8e\\xff\\x98\\xca\\xaeX\\xc9\\x174\\xe3c`u\\xffQX\\x98N\\xcc\\xa9K\\x16\\x9a\\xb7c\\x1b2\\x12X(\\xbd\\x14\\xdf-\\xa4cI\\xbb\\xadiJ\\x8d\\xb8\\xa6[\\xb9V\\x87\\x7f\\xb8\\x8c\\xd6\\x94u5\\xb4\\xdd\\xf5\\xff\\xf7\\x7f\\xbbQ\\x965b\\xfeLGftQ\\x18\\x04m\\x1e\\x12\\x12\\xa3\\xcdM.\\x15\\x19,&\\xa5\\x8b\\xc8u\\x12\\xce\\xe8\\xb1\\\\\\xd9\\x11&$\\\'\\\'\\xa5\\xcf\\xd7\\x9d\\xc6\\xa5\\x96\\xc4F\\xd2\\x03\\xe5\\xc5\\x08M\\xcdkT\\x03\\xcf\\xef|\\x0f~a.\\xc7|\\xc4\\x82N\\xea\\xa7\\x0ck\\x0c\\xf4\\x89\\xc38\\xdc\\xe4_\\x0b@\\xbb\\\\F\\xf4\\x9e\\n\\x88ap\\xcd\\x84\\xde\\xd32\\x89\\xc3\\xbd\\x8f\\xf3h\\xd4\\xc9\\x98$P\\xe9\\xe2^9VO\\x18\\xda\\xb9\\xbd\\x16\\x88\\xd0\\x0c\\x0e\\xa4\\xf9b\\xf7LY\\x95\\x1a\\xb1\\x83\\x17\\x8c\\xfa1\\x19\\xdf\\xcb\\xcf9\\xa0\\xcfP[\\x1d\\x04<W\\xb1![&\\x13|;\\xb6|\\xfd)\\xd0->ngq\\xa1|o\\xc8\\x96\\xb2\\xf1\\xf3\\x03\\xb5\\x06\\x10\\x01\\xc9[s\\xed\\xfbZ\\\\g-sy\\x85\\xcbTS\\xdc\\xedL\\x11\\x9b:\\xc4\\x1eQq5m\\xefL\\x7fWm\\xf7\\xa7 K?"\\xc58W\\x9bmo\\xcaRd\\xcfx\\xea\\xb2\\x92\\x03\\x9arFv\\xdc\\xa0\\x19o2\\xa8\\xd2)g(\\\'t\\x98xL\\xf5\\x08\\x18\\xcf\\xaf6C_\\xfb5/\\xc12g0\\xfd\\x83\\xed\\xe9,@\\xf4\\x88\\xb9\\x14\\xd3\\xdfF\\xb8%\\x97C\\x92\\xb6\\x14\\xa5\\xdeW\\x02\\x8b\\xa8\\x9f\\n\\xcb\\xec#\\x1a1\\xc5\\xa00\\xbe\\x144D\\x88|\\xfeI2\\x8a\\xcf*\\xbbv5?*Hq\\x01\\x1d\\x9c\\xfa\\xf8jV\\xb3\\x9f\\xd3\\xa2\\xdfC /\\xc8um"\\xfaYo[a4\\x14\\x1b\\xcau:m-\\xef+!{\\xef\\xd3E\\xc7\\tO\\xe6^\\xad+q\\x90N\\x13\\x8f\\x02\\n\\x8fV?:\\x0f\\xe4\\xf0\\xcb\\x9a\\xe5\\xdfak\\xad\\xdc\\xea4w\\x8dKz\\xf8\\x14\\x19\\xaep\\xe6a\\xc4\\xc9\\x96C\\xa6\\x8b\\x02\\xf2j<e\\xeb-_\\x0f\\xae\\xa0Dt\\x99\\xa1\\x05c\\xf9Z\\xbdZ\\x02\\xd2\\x19|\\x86\\xf0\\x10\\x07\\x13\\xc5eB\\xa8Uc\\xc2\\xacu\\x02-D\\x04\\xd5\\xbc"W\\xef\\xf9nJc\\xda\\xac?\\xa2\\xe6\\x7f\\x83GE\\xae\\xa3*\\x03\\xc2\\xff\\xd3\\x96|?Y\\x1b\\x17\\xccW\\xf2{\\xec\\xda\\xc2Z\\xfdG\\xffZ>\\x1dY\\xc5\\x00\\x85\\x03p+\\x8e\\x94\\x13,>\\x96\\x05\\x15\\xe8*U\\xa5\\x18vf\\xe9\\xd9\\x1aWK\\xa5\\xffP\\xda\\x9e\\xdf\\xc5\\x8a\\xa5\\x90\\x93C{\\x12xo\\xb6\\x06M\\x98\\xa3\\x84\\xc52\\x8e\\xd7!6\\xe3\\x9d\\x13\\x1e\\xa9k)\\xd9\\x10w\\xcefU\\x17\\xdc\\x8e\\xd9=\\x92\\x1a$\\x95,\\xa0\\x83^Ob\\xd6\\x94uJ\\x9b\\xdb\\xa9\\xad\\xe3\\xde\\x83*?h\\x91\\xf4^7\\xef\\x1f\\x05v\\x01Q\\x96D\\xe5\\xb1;\\x17\\x08\\xf5|\\xc1\\x96\\xbb\\xfc\\xfb\\xac\\xba\\x92d\\xf2\\xef\\xac<\\x99\\x07\\xbb{h0\\xa9w\\xc7<q\\rb\\xf8\\x04\\x11J\\x91Z^^\\xa2\\xc8\\xd4\\\\\\xc1Mo\\x1f\\x1f{6\\x07\\xef:\\xab\\x8daE\\x1dw\\xd0\\x86\\xb2\\x89\\x9d\\xf2\\xd6\\xb2xq\\x18\\x92\\xd1g\\xfb\\x82\\xb3\\x85\\x1b\\n\\xcfo\\x94-,M\\x00\\xf4Z\\x91g{L\\xef\\xc1h\\x16^1\\xc8Cow:\\xde\\x14\\t\\xeb\\x95\\xee\\xf2\\x19O\\xf5"\\xc0j\\x0e|\\xe9\\xd9.b\\xfd\\xadM\\x1b\\x8cf\\xc4\\xc4\\x17\\xf6\\xaaW\\x8eje\\x96\\xb8\\xae=|4wmDr\\xdd\\xecA\\xce\\xfb\\xaek\\xb3\\xa1yZ\\xfe\\xd6\\xe2\\xbd\\xb0\\xa4\\x81[\\x94\\xf2\\x10_\\x9a\\xc6\\x8e\\x04\\n<\\x97\\x0ei\\xd0\\x1e\\x07\\xf2\\x81\\x00\\x08\\x1d;,\\x9em\\xfe\\x0el\\xac\\xd9~T\\xdcDClc\\n\\x8a\\xc3Q\\xa2\\x90\\x82\\x1f\\n}\\xd4\\x9a\\xb4~q\\xc6\\xeeW\\xd0\\xcc\\xd1x\\xa0\\xc7&\\xd6\\xd3r\\xc0;\\xbfM\\xbc\\xdc\\xc4\\xc2\\xf7\\x0c\\x16\\x92\\xbdB\\xb9\\x04\\xb1~U<\\x1a\\xac\\x8a\\xcb\\x89\\xb3\\n\\xb9a\\x9b\\x9e\\xb0\\x14\\x95b`\\xa2\\xf6\\xb1\\x1a#@\\xa1\\x8c\\xb9\\x1d\\x1cRj\\x98\\x18E\\x1aC87e\\x93-\\xdbJ\\xf2j\\xf7\\x85\\xd2\\\'\\x81b\\xad\\x15\\x0f\\xdf\\xd7\\x99\\x9c\\xd9T~\\xfb\\xc1f\\xe98L\\xf3\\xc5\\x16@\\x87b\\xa1[~\\x8d\\xb1\\xbd\\xb9\\xe2\\x17\\xb9q\\x93\\xb4\\xcf\\xb6\\x17$!\\x7f\\xe8\\\\\\x82\\x1c\\xd1\\xb1b\\xd9\\xc0\\x83\\x87GS\\xd4xu\\xd6\\xa0\\xdb\\x03\\x11\\xe8\\t\\xc5\\xc6\\xbd\\xa7\\xfd`\\x0fz\\xeeo\\n\\xde\\x8a\\xd3\\x98\\x91\\xe4#+\\x14;\\xc2C"\\x00I0\\x88\\xa0\\x1ag\\x1c\\x06\\xf1\\xcc1\\xe5\\xc6\\xe7d\\xb9dE\\xd3\\\'\\xeb0\\x13a\\xc0ks\\xfe,\\xa1T\\x17\\xef\\x97\\xe6{\\x0f5?T\\xed`w\\xa8\\x11\\x03+\\xf5N\\xd9\\x04X\\x13|\\xc9\\x99\\x0c\\xa46\\x12]\\xdd\\xd0\\xa9c7\\x10\\x8e\\xa5\\xbcs\\x13S\\xae\\x84L!ZQ\\xde\\xd6\\x08\\xe8\\x84\\x0c\\xc2\\xe3%\\x97?\\xbd\\xdd\\xcc\\xa9a\\x1a_\\xef\\xe7\\x9f\\r\\xee\\x08p2\\x87\\xd0\\xfav\\x9e\\x99Q\\x1a\\xa2\\x11l\\xa8\\x982O%\\x8b\\xf5\\x8b?3\\xfeI\\xfe\\xd4`\\xa1\\x02\\x1e\\x7fD`>!9q\\xc8\\xc3"B\\xe7/\\xfa\\xad0\\x84\\x08\\xc0mN\\x14Z?\\xc0\\xec\\xf4%\\x00\\\\O+\\xa7\\xd2-\\xd2\\xc8\\x96n\\x0b\\xf9\\xc5U\\xf5\\x9c\\xb4]\\xbfDc\\x18<\\xcbM\\xb4\\x15\\xe0\\x8d\\nP9\\x04\\x91\\x96#K\\xce\\xf5&\\x89\\xed\\x8e\\x8f\\xdbs.\\xb0j\\xb6\\xe7m\\\'u;\\xb5\\x91mt\\x88Q>\\xc0\\xacQ\\x83p\\x19\\xc3P\\x00\\xf2\\xa8\\xbds\\xc5]:\\x99\\x98\\xa6\\xcd?\\x12x$\\xd0h\\xfd*0X\\xc9K\\xd7\\x19-\\x11\\r\\x088\\x04\\xed\\x07<\\xa1\\xb2\\xa3\\x95\\xe6\\x9f\\x8a\\xe6\\x80KWpA\\xaa\\x92\\xd3\\x89n\\x9f\\x80\\xe0\\xa7\\xff\\x8a>D1wf\\x94\\x8cd\\xecU\\xf8\\x1f&\\xdd\\xcf\\xe54\\xb2x,\\xe60\\xc3\\xb5\\\'\\x1dZ\\xf8X\\xb8H\\x80U\\xa0\\x82v\\xa9\\xa9wE6\\x90\\x1bR\\x12X\\x88\\xad\\x1a \\x8a\\x84\\xe7\\xa3\\xf1\\xd7\\x9e\\x16\\x1dv\\xf2\\x10NH\\xca\\x1bU\\xc8\\xdc\\x944\\xe5\\xf0F:\\xd5\\xdb\\xc6\\x95e\\xfdM\\x90\\xe4\\xf4\\xba\\x91\\xfc\\\'\\xaa\\x0ex\\xd0.^\\x92awdU|\\x02\\xad\\xfaa=D\\x15\\xaa\\xc4d\\x03\\xd5%4?<\\x16\\x0e\\xcdd\\xab=,\\xdc\\xf9\\x84\\xca\\xe3\\xc2\\x0c\\x83}\\xdf\\xaa\\xf4\\x16\\xe9Q\\n\\xdd\\xa6uCa\\x8e\\x95\\x07L\\xacq_\\x1f\\xaeI\\x03\\xd0\\x1c\\r\\x17\\x93\\x0cj%\\x133\\xa4CnIJ\\xf8\\xfe\\xa5\\x1e\\x14\\xb5\\x0biQ\\xa6#:\\xd3J\\x8f\\x98\\x83~\\xed\\xe7\\xb71^"<\\xf0\\xd0\\x98\\\\\\x16>\\xa0\\\'(\\x9bl27El\\x96*%\\xec\\x04\\x9d1\\xa0z\\xd9\\xdb\\xbd\\x9fQ\\x89\\x87\\x16Y\\x17\\xe70\\x82\\x95\\xd8+\\xa4<\\x01\\xb7\\xeb?\\x01g\\xe4\\x01\\x91$\\x1dq\\x8e_\\xe2b\\xdeIJp+C\\xde^\\x1cY<\\xdfO\\\':F\\xe4\\xf0\\x06\\xedE\\x18\\x93\\xae\\xd9wfy\\xe1#g\\x0f\\xfbT\\x10M\\xd0`^\\xe6\\xdfZ\\x06Uk>\\xc9\\xee\\xfb}=C\\x06d\\xaaQ:\\xa02N4\\xe4buT_\\x83\\xbb\\x06<n\\xc2\\xd2\\xb0\\xd7\\xbf\\xdeON\\xed\\x1d\\r\\xcdm\\\'p\\xb8;\\x92\\xde\\xaa=\\x8f\\xb3\\xaa6*\\x07\\xa1\\xf7\\xe2\\x18\\xda[Twp\\xa6P\\xb7;\\xbc\\xaa\\x86\\x9fU\\xfdnr\\xa6[\\x7f\\xe7\\x824\\xa0>\\x94\\x14\\xf1\\xf6\\x17\\xc6\\\'Z\\xdc#\\xdf\\xafA\\xe7x\\xc8\\xd6>8\\x0cD\\x81\\xc1\\x86\\x95\\xe2\\n \\x07\\xbf\\x81n \\x03f\\xb4\\x9f\\xcd\\x03]\\xba\\x92\\xdfo`/N \\x8b\\x07I1\\x12\\xfc\\x8fn,VG\\x7fE\\xa3\\x0f\\x9a9\\xd0a\\xbd\\xe0#v\\xc7\\x07\\xa8\\x97\\x0e\\xbb\\xe5**T\\x00\\xfb\\xdc\\xc8\\xecX8\\xe7\\x0bC\\xa2}\\xe9\\x92\\xf4F\\x11\\x0b\\xcb\\x10\\xbf\\x04\\x9d\\xe0\\xf6\\xdf\\x9f:\\xe9\\x9ac\\x80kU\\xa2S\\x9e\\xce\\xe2\\x01,\\x1d\\x95\\xca\\x146c-W|P\\xe6\\xef\\xdb\\x10\\x1b\\xd0\\x88Q\\xe6K\\xf2T-\\xa8P\\xd7J0p|\\x8a\\x9dS\\x8f\\xf6s;\\xa9\\x93\\x0e<\\xbb\\xcb\\xa5\\x1d!\\x08\\xf74`s"\\xfb\\x1a\\xfa:\\xb2]w\\x9d\\xb7A\\xa9\\xa6\\xd0t\\x11W\\xb2\\xf6\\\\\\x98\\xdb\\x90\\x86\\x80\\x91\\x02\\xe0 \\x1c\\x07\\x95z\\xf3\\x9b\\x84N{\\xe8\\x94Zq\\xc9#Rj\\x19se\\xa6\\xd4\\xcd\\xd3B\\xc3\\xf6I\\x86g\\xc4\\x9d\\xc1\\xe8.dc\\xed\\x80>&\\x8a2\\xc4\\xd6L\\xb2a\\xe8\\xc8FX,\\x02\\x9c\\x97\\xb1ie\\x0b\\xa1\\xde\\xc9|T\\xd9\\x04N\\xfd\\x0e\\x03\\xf7\\x19=f\\x84CP\\xda\\x8b\\x83k\\xc2\\x8b\\xdb\\xa8L\\xff\\xd6e\\xde,\\xe9\\x17\\xc7Q\\x87\\x04,\\xcb\\xb2G\\xcf\\xe8\\xac//\\xf4\\xf8\\xeb\\x0f\\xbe\\x85e\\xb3\\x90!p\\xfa\\xad\\xa7u<)\\xb7\\xe7N\\xf1m\\xb3]\\x1b\\xad\\xdf\\xb9\\xbdj=<\\x08,\\x88\\xaa\\xad\\x99\\x1a\\xae\\x13\\xf8t\\x067\\xd5!\\xf0\\xa7B\\xe6\\x810\\xcb\\x07\\x00)c\\x1d\\xd5b\\x98\\xc0"\\x00\\x04\\xf6t2\\x8d+h_\\xbda\\x04\\xa7g\\t\\xd9\\x08\\x16\\x1f\\x9c\\x82x\\x91&\\xf9\\xa9?\\x9a\\x83r\\xf1\\xff\\xfb8:\\x1f\\xf8\\x8ai/\\xd0\\x97z}p]\\x1f\\x8bm\\xcc0\\xa9uG;\\xe0\\xcd\\x94\\xad\\xaa\\xc8\\x0e`\\x83\\xba\\xc9\\x18~\\xfc\\xeeT\\x8a\\xcf\\xc8\\xdd\\xed\\xd1b\\x04\\x97\\x94\\xdf\\xe7k;\\xb7\\xd5\\xf5a\\xce\\x8c\\xe3\\xe6\\xbf},bJ\\xdd\\x97\\xd9}\\x83\\xbd \\xaf\\xa7\\x97\\xafe+)\\xb8\\xf5\\xbaT\\x97v\\xc5;\\x11\\xd1\\x81Q\\xe40\\xb4\\xa3\\x10&t\\x0f\\xb6\\x0b\\xec\\xd7\\xb9\\x9eX5\\xcf\\xd7(\\x07\\xf1\\x88Y/\\x9f\\x8b\\xffp\\x9b\\x99\\xc7D\\xa3l6\\xabM\\xf4\\xed\\x97=>\\xda2\\xad30\\x1d4\\xe7\\x83H\\x08\\xcc\\xf3\\\\\\x8f\\x825#\\x92\\xdb\\x8d\\x97\\xa5y\\xc4,\\xf0p\\x04h:D\\x06\\xf5\\xf2\\x0cA\\xd5\\xe2\\x04\\xd3@.\\x0evC\\x8bPk\\xaf\\xc6\\x91\\x92\\xbc\\x08D\\x8b\\x93|h\\xa7\\xe3\\xbb\\x15P\\xc4\\xc2;\\x9d~4{\\xaa\\xfdw\\x8adYlc\\xd7\\x80\\xdc\\x8e\\xe0O\\xea\\xa9C\\x91\\xfd\\x87\\rzc\\x9f\\xb9\\xfb\\x11\\x03\\x04O\\xf5\\xaf\\xb6\\x05\\x0c\\xcb7\\x86\\x17\\xd8\\x915goi\\xe6\\xc2\\x87\\x1b\\xc7\\x8e\\xed\\xbe\\xc5\\x95Y3\\xe1\\xa2\\x0e!,\\xe3<\\xb5kZ|\\xea\\xaf\\x9e\\x11\\xaa\\xc5\\xbaa{A\\x04\\x97\\xbeW$\\xf8\\x8ej\\xcc\\xe2\\x85\\xc8\\x14\\x1cy\\xae4\\x13D\\x94{\\xfc\\xd9\\xd4\\xf8\\x86zw\\x88\\\'\\x1aB\\xde\\x0c\\xd8\\x94\\x90\\xd31\\x02q\\x9dS\\x02\\xff\\xdb\\x1b]\\x96$8\\xe4\\xc0v \\xcc\\xf5.\\xc9\\x07N.\\xf1Q\\xbf\\xa8\\x85h#\\xe8\\x18P\\xf1\\x0b.\\xb7\\xf0%ST0\\x9d\\xf0\\x10y\\x18\\x03\\x82+G\\x18\\xb2i\\x8e\\xe9Ek\\x91\\x83t\\x98\\xf0=N\\xb7\\xa9\\x14p\\x83LU\\xbax\\xe6\\x9a\\t\\xb9G6\\xe0N\\x92.\\xee\\x9dV \\xbe\\xccm\\xd1\\xe9\\xe5\\x05$\\xc8%\\x8dq\\x9fj\\x15\\xcc\\xb3\\xfcI\\xbd\\xac\\x8db\\x03\\x18\\xef\\x8f\\xd6\\xa4\\xbf\\x02$\\xf5OO\\xd7:Y\\xe9\\x8f\\xd9\\xea\\xfaI.%\\xb1=\\xc2\\xc2t\\xab\\xdc]z\\x92\\x94*\\xaf\\xbc\\x07\\xc4[\\xd4G}\\x96!F\\xdf\\x1d\\xcb\\xf1n\\xearb\\x91\\xc8\\xf2\\x8f\\xdd\\x19\\x07\\x9c\\x00\\xf9\\x84I\\xe8\\x8e\\x1c\\x06N7\\x90\\xf5\\x96\\xb9B\\xb0\\xd2d\\xd5-Da\\xe7\\x89\\xe0\\xfa\\x8e9\\xf2ab~f\\xcfT@\\xd1\\x94\\t+\\x01\\xd3\\xb9\\x0e\\xe76\\x81\\xe2\\xc4\\x1a\\xc2\\xd1w\\xe1_\\x15\\xc7\\x98\\xd6\\x87)\\xbf\\xee\\xe0\\x80\\xdf\\x053E\\x85Vw.\\xed\\x11\\xfb\\xa3\\x8b\\xf6\\x96\\xd0\\x0f\\x94G\\x9e6\\xfd\\x959\\xbf\\xe3\\xd4\\xfd\\xb3\\x1b\\x01\\xee\\x0e\\xd5\\x00\\x18\\xdb\\xa4\\xe6a(Z\\xb0m0wYIL \\xd7\\xbea,\\xb5\\xee$\\x8d\\x05\\x93\\xed|\\x9e*\\xb4\\xb0\\x84v\\x88u~\\x9c2}w5c\\xd0)h\\xe7\\xb2\\xca\\x87\\xf9\\x8d{\\xb5\\r\\x07\\xa9\\x82t^\\xeb\\x8b\\xbd-H\\xcd\\x9e*\\xe9#\\\'\\x12\\xa1\\xd8\\xb2\\xa5s\\xec\\xc8\\\\k\\xcd]6m\\xc6\\xbb\\xa2\\xce\\x17j\\xabG\\xc4\\xed\\xacE\\xd3\\xfe\\xff\\x9bN\\x04mQ\\xd3(\\xa5\\xde\\xf4\\xb3\\xac[*\\xb8k\\x1edf4\\x94xT\\x17\\xdez\\xc2t=\\xca\\xcc\\x9b\\x0b\\x96\\xd6\\xf7\\xf3\\xc2\\xf6\\t\\x96\\x96\\x9bS\\xf6Av\\xe7W \\x1f|X0w\\x168)\\xf4O\\xd28\\xbd`\\xda\\x14\\xac\\xfc\\\'T\\x95\\x9ev\\xd9\\xf0\\x05%yS\\xce\\x0eP\\x90\\xab\\xd0\\xa9\\xbc\\x87||\\xa3\\n\\xed\\xaf!\\x0b*\\x0b\\xf8 \\x13\\xfe\\x01\\x0b-/W~x\\xce\\xbb\\xf4m\\xd9`X\\x1d\\xa3\\xe2-\\r%\\xaaKj\\xe7\\x9b\\xa2S\\xbf\\xb6z\\x9d\\xbbA\\xde\\x8d\\xaa\\xa0\\xdcHH\\xb1c*z\\xec\\x17l\\x84\\xdc\\x95n\\x05\\x00\\xe3\\r\\x93\\xbd.\\x03\\x90\\x18vf)\\x96]\\x1b\\xa7\\xea\\r*P2.\\x18{\\xbd\\xfa\\xd2\\x83\\x14h:\\xddY5\\xd2\\xe1\\xe9\\xc7p\\xd2\\x85\\x18f^\\xda\\x06\\xd9\\xb2v\\x8a\\xae8\\xbc\\x8c\\xa7\\xb66U\\x82!(\\xce\\x87\\xd7\\xb9m\\x7f\\xa3\\xe2\\xeb\\xbb\\xd6\\x82\\xb7\\x0e\\xd3"\\xa4\\x18\\xe6mf\\xc7\\xfbT\\xd0\\xe7a\\x85\\x0b\\x1b\\x16\\xb6\\x1b$@\\x93\\xa8\\x83\\xb2$\\xf4\\xff\\xbe\\x007\\n\\xee\\x95\\xbd;\\t\\x8c\\xceS\\xdff&,\\x1b3\\xdc\\x86\\x15\\xa2\\xbf\\xa2\\xc1\\xaf\\x9e\\x90SH\\x08\\x90U\\x1fi0j\\x06\\xbc[\\x01\\xe5\\x000\\xea4-\\x87\\x13\\xcbs\\xdb\\xf6\\xbd\\x8e\\xb9\\xd9\\xe7\\xd3|7\\xe8\\xe5\\x85y\\x99\\xd99\\x0fm\\xd8\\x0b\\xfb!\\xcc\\xd8A\\xf0%p\\x8e\\xbbT\\\'\\xd8* \\xfd\\x94\\xd3\\x9b\\xc6\\xd8@\\xc4n\\t\\x81\\xb5\\xdfP"<\\xda?/\\x03\\xf1x4\\xd6\\xa3\\x18aL\\xba\\x89;\\xd1\\xf2?\\xf5\\xb4\\r\\x89$\\xaa\\xfe\\xf1\\xc9\\xc9\\xfay\\xfb\\xa1\\xff-\\xf7\\x1b\\xf2\\xc9"3\\xdadX\\xde\\x1c\\x19!\\x96\\xd1?\\xed\\x94$F\\x04t\\xa7\\xa0\\r+\\xf7\\x99\\xe4a\\x9a5\\xdew\\xfa\\xc7YPp\\x15\\xf11\\xa2y~\\x8cO\\xe4\\xf8\\xaaQ#)\\x1dl\\x8f$\\x00}IKtKa6\\xbe\\xfa\\x17\\x05\\xcf\\x19\\x85o\\x9aW\\xaa\\xce\\xfd\\x89!O\\xba\\xaa\\xe4+\\rh/\\\\\\xca\\xfd\\xafN\\xe7\\t\\x11\\x0c\\x83\\x92\\x94\\xc0\\x12\\xa6\\x87\\xe1\\x80\\x1b\\xb0/B\\x18\\xf4\\x97\\xd3\\xb6M\\x07\\x9a;\\xa8\\x05\\xa2RX\\xa5Z\\x8a\\x9f=\\xc2\\x89\\xa7\\xa7\\xb3:\\x01Q)pK\\xdd\\xf4T^\\xb4\\xde\\xa0B\\xf3\\xe7J\\x96\\x1dv\\x80Ma\\xb90\\xaf\\x08sI\\xd1\\x13\\xad}\\x85\\xa7\\xbb\\xeb\\xfb\\x89\\x02\\xd9H\\xdd"\\xc6\\xf3\\x10wu\\x88\\xffXx\\x0f\\x9e\\x90R\\xcb\\xd4\\x1e\\x8e\\x18Z\\xddx\\xd6\\xd2\\xc7\\n>\\xf3\\xf3\\x94\\x86~\\xf7\\x96\\xd7\\xc0+{@\\xa0\\x81\\xed 5\\x85\\x10\\x8b\\xab\\xa1X\\xd3\\x87\\xe3\\xe3\\\\\\x99}\\x1e\\xeca\\xcb\\xe4\\x1aW\\x85\\xa8\\xc1!\\x04\\xf2\\x0c6\\xbd\\x9b\\xd0\\xa2\\x84zi\\x0e\\xab\\x8f{\\xa6\\x88\\xfb\\xb9p\\xbd\\xfc\\x0eZ\\xcfN\\x10\\x98\\n\\xd6\\xbfb\\xd6\\x1b\\x15\\x1bC\\xe4\\xd0\\xb8i\\xcc\\xc5\\n\\xe3C\\xc6\\x1b.\\x0b\\x07\\xef\\x9f\\xb8?r\\xf2uJ*W\\xec\\xff\\x17\\xf9\\xc3)\\nendstream\\nendobj\\n28 0 obj\\n<< /Filter /FlateDecode /Length1 1513 /Length2 7306 /Length3 0 /Length 8320 >>\\nstream\\nx\\x9c\\x8dw\\x074\\x1cj\\xd7\\xae.\\x88^\\x82\\x04\\xa3\\x8c^f\\xf4\\xdeK\\xf4N\\xa2\\x84\\xc1`\\x82\\x19\\xc6\\xe8\\xbdwA\\x10D\\x8f\\x92\\xe8\\xbdE\\xb4\\x88\\x12-:\\xd1%zO\\x10D\\xf9%9\\xdf9\\xff\\xf9\\xee]\\xeb\\xde5k\\xcd\\xbc\\xfb\\xd9}\\xbf\\xcf~\\xd7\\x1a \\xa3\\x8e>\\x8f\\x9c\\r\\xc2\\n\\xaa\\x8c\\x80\\xa3x\\xc0\\xbc q\\x80\\x82\\xa6\\x9e0\\x00\\x04\\x12\\xe0\\x05\\x81\\xf8\\xf1\\x81@\\x03\\x18\\xca\\x11\\xfa\\x07\\xc5\\x07\\x1aA\\x91\\xae0\\x04\\\\\\xfc\\x7f\\xe9\\x15\\x90P\\x08\\xea\\x16S\\x84\\xa0n\\xcd4\\x11p\\x80\\x9a\\x9b#\\x00,\\x00\\x00\\x0b\\x8b\\x83E\\xc4A \\x00?\\x08$\\xf6\\x1fC\\x04R\\x1c\\xa0\\x08q\\x87\\xd9\\x004y\\x01j\\x088\\xd4\\x15\\x1f\\xa8\\x80p\\xf6B\\xc2\\xec\\xecQ\\xb7Y\\xfes\\x04\\xb0[s\\x00\\xc0bb"\\xdc\\xbf\\xdd\\x01rNP$\\xcc\\x1a\\x02\\x07hBP\\xf6P\\xa7\\xdb\\x8c\\xd6\\x10G\\x80>\\xc2\\x1a\\x06Ey\\xfd+\\x04\\xbb\\xa4=\\n\\xe5,\\xce\\xc7\\xe7\\xe1\\xe1\\xc1\\x0bqr\\xe5E \\xed\\xa49\\xb8\\x01\\x1e0\\x94=@\\x0f\\xea\\nE\\xbaCm\\x00\\xbf\\xda\\x05hA\\x9c\\xa0\\xbf\\x1b\\xe3\\xc5\\x07\\x02\\x0c\\xeca\\xae\\x7f`}\\x84-\\xca\\x03\\x82\\x84\\x02n\\x01G\\x985\\x14\\xeez\\xeb\\xe0\\x06\\xb7\\x81"\\x01\\xb7\\xb9\\x01\\xfa\\xaa\\x1a\\x00mg(\\xfc\\x8f\\xb1\\xc6\\x1f\\x03n\\xc0_\\xa3\\x01\\x80y\\xc1\\x7f\\x87\\xfb\\xcb\\xfbW \\x18\\xfc\\xb73\\xc4\\xda\\x1a\\xe1\\xe4\\x0c\\x81{\\xc1\\xe0v\\x00[\\x98#\\x14\\xa0\\xad\\xac\\xc1\\x8b\\xf2Dq\\x03 p\\x9b_\\x86\\x10GW\\xc4\\xad?\\xc4\\x1d\\x02s\\x84X\\xdd\\x1a\\xfc.\\x1c\\x02P\\x96\\xd3\\x05@n\\xfb\\xfb\\xab;Wk$\\xcc\\x19\\xe5\\xca\\xeb\\ns\\xfc\\xd5!\\xdf\\xaf0\\xb7CV\\x82\\xdb( \\x9c\\x9c\\xa0p\\x94+\\xfe\\xaf\\xfa\\x14aH\\xa8\\xf5\\xed\\xd4\\xbd\\xf8~_\\xab\\x03\\x1c\\xe1\\x01\\xf7\\xf9s\\xb6\\x85\\xc1ml\\x7f\\xb5`\\xe3\\xe6\\xccg\\x08\\x87\\xb9\\xb8AU\\x15\\xff\\xb2\\xb8\\x85\\xf0\\xff\\xc1\\xec\\xa0(\\x80\\x10\\x08\\x04\\x12\\x11\\x15\\x03@]\\x00POk{\\xbe_\\xc1\\r\\xbc\\x9c\\xa1\\xbf\\x95\\xe0_\\xf0m\\xfd~>\\xce\\x08g\\x80\\xedm\\x0bP?\\x98-\\xf4\\xf6\\x07\\xdf\\xc7\\x15\\xe2\\x0e\\x05\\xa0\\x90nP?\\x9f\\xff\\xad\\xf8\\xb7\\x84\\x0f\\x06\\x03l`\\xd6(\\x80\\x15\\xd4\\x0e\\x06\\xc7\\xff\\\'\\xfa-\\x0c\\xb5\\xfd#\\xdf\\xde<\\x12\\xe6\\t0\\x05\\xdd\\x12\\x0f\\x0c\\x00\\xfd\\xfa\\xfc}2\\xbf\\xe5\\x96\\r\\x02\\xee\\xe8\\xf5\\x8f\\xf9\\xef\\xcb\\xe53\\xd0SU|\\xa4\\xcf\\xf5\\xbb\\xe1\\xbfU\\xf2\\xf2\\x08O\\x80\\x0f\\x0f?\\x08\\xc0\\xc3/\\x04\\x02\\x80\\xc1b\\x02\\x00\\x91\\xdb\\x83\\xdf\\xbf\\xa3\\xe8@`\\x7fU\\x01\\xfa\\xc7W\\x15n\\x8b\\x00\\x88\\xfd)\\xf6vJ\\xff)\\xd8\\xfd\\xaf\\xdbg\\xffk18\\x00\\xff\\x8e\\xa5\\x85\\xb8e,\\x14\\xc0\\xfe\\x0f\\xc1\\xcd@B \\xeb\\xdb/\\xf0\\xff7\\xcd\\x7f\\xbb\\xfc\\xdf\\xd8\\xfd+\\xca\\xff\\x83\\xe0\\xff]\\x8f\\xb2\\x9b\\xa3\\xe3o-\\xfb/\\xf5\\xff\\xa1\\x858\\xc1\\x1c\\xbd\\xfe\\xd2\\xdf\\xf2\\xd5\\ru\\xcb}M\\xc4\\xed\\x06\\xc0\\xff\\xdb\\xd4\\x18\\xfag]5\\xa1607\\xa7\\xff\\xd6\\xaa\\xa2 \\xb7; \\x07\\xb7s\\xfc{\\x880We\\x98\\\'\\xd4F\\x07\\x86\\xb2\\xb6\\xffC\\x95?\\xb8\\xe1\\xaf\\x05s\\x84\\xc1\\xa1:\\x08W\\xd8\\xaf\\x07\\x05\\xc0\\x03\\x06\\x81\\xfeKw\\xbbU\\xd6\\x0e\\xb7\\x8f\\x86\\xeb-\\x1f\\x7f\\xab\\xa0\\xb7K\\xf3\\xef\\x94Jpk\\x84\\xcd\\xaf\\xed\\xe2\\x17\\x12\\x06@\\x90H\\x88\\x17\\xfe\\xed\\x15\\xdfJB\\x00\\x1f\\xf0\\xed\\x1a\\xda@=\\x7f3\\x18\\xc0\\xc7\\x0bG\\xa0n]\\x00\\xb7\\xed\\xf9\\x01l\\x11H\\xfc_\\xf7\\t\\x06\\t\\x00\\xf8\\xec~a\\x7f\\x89\\xa2\\x00>\\xc7\\x7fD0\\x08\\xc0\\x07\\xff_"\\x18\\xc0\\x87\\xf8[\\x14\\x14\\xbb\\x95\\xe0\\xd0\\x7f\\xe4[c\\xe7\\xdb\\x87\\x04\\xee\\x08\\xb5E\\xfd\\x83\\x82\\xffB\\xff\\xf0\\xe0o\\xf86\\xaf\\xb3\\xa3\\x9b\\xeb\\xdf\\xc0-3\\xf8P\\xf6H\\xe8?\\xf1n{\\xe6Cy\\xfc\\xc9\\xf7\\xaf\\xa6\\xad\\xdd\\x90\\xb7\\xf1P\\xbfIy;\\x91\\xff\\xc8\\xbf\\xdf\\x17(\\xd4\\x13j\\x8d?;\\x85\\xb0\\x96\\x08}Z\\x13\\xdazV%w\\xdf\\x83gmXj\\x1c\\xb8f\\x9c\\xc6\\xc1\\xe33\\x8b|\\xe7vA\\x84\\x9b\\xc2Q\\x99\\x19\\xbc\\x84<\\x95K\\xe9\\xef"\\x99\\xff\\xa2\\xc4~"\\xfb\\x99\\xe1\\xcag\\xa7\\xb9\\x0e7\\xa2\\xe5\\xb9\\xee\\xdb\\x9f\\xbe\\x97\\x16\\x89z\\xa3ko\\xf1g>Q\\xf5\\x8c\\x14\\xec\\xc8\\xd5~\\xa0\\xc3{\\xc0c \\xbb\\xee{\\xe5\\xe2k\\x14\\xe4\\x80\\xd9\\x8c\\xde\\xae\\x06\\xccuq\\x13%\\xd2\\xc9\\\'?\\xf3\\xe8V\\xf1\\xac\\xfdP27\\x18>\\xb5\\xa6\\xbb^)\\xacNpY2\\xc6\\x13g\\x18k\\x16T<\\x01\\xcc\\xb3\\xca\\x9a\\xa4f\\xc2A\\xf1\\xd0\\xdd\\xe1$;\\xf4$\\x9e89\\x1d\\\'\\xcb\\x19\\xb9aPK\\xe4\\xc2\\xf7\\xdb\\x8d\\x13(\\xf41Y\\xe6\\x8f?\\x9f\\xf4^(3\\xe0w\\xed\\xa0a\\xa11\\xa1\\xa6\\xc3<!\\x1b\\x1ce\\xf5\\x91\\xdfLU\\xbb7\\xed\\xf3\\xbap\\t9\\xf8b\\x92\\xea\\xdd\\xd0\\x8aS2\\xd8q\\x93\\xdd{MK\\xef\\x0c\\xb9\\xf5\\xed\\t+pD\\x9c\\x9d\\x86\\x9a\\x0f\\x93B5&v\\xa9\\xe5a\\x92S1c\\x12\\x8e`\\xd6\\xe1\\xbc\\xda\\x92\\xa7\\xea7\\x91f+Wn\\xed$\\xd8\\x8d\\xb6\\xa3H\\rV\\xd9x\\x11\\xe3\\xba\\x15\\xc5\\x83}\\xaa\\\';K\\xeb\\xa3u\\xc3<\\xdbJ\\xd2D\\x02\\xc5(\\t\\x15\\xdcX\\xc95\\t\\xc7#\\xf1\\xf7xg\\x85\\xda\\xfa)$\\xf9+\\xfa\\x9c\\xda2\\xef\\xc5ZsG\\x96fW\\x96_\\x1cW\\x91\\xe5\\x9c\\xc52\\x8c>\\xe0\\xb9\\x8e\\xc0\\xfe\\xf9\\x06\\xe7\\xcc\\x03\\xe0eG-\\x8a\\xa6\\xe1\\xfa\\x185\\xd5\\xa4\\x94L\\xe0\\xf2\\xb0\\xca\\x19T =\\x10A\\xd4\\xbb\\x86\\xbf\\xc9\\xed\\xb2\\xbc=\\x17\\xdd\\x9cL\\xec\\x92P\\x15N\\x81W\\xe6Dj\\xa2h.\\xf2\\xb1\\xa5Y\\xdb\\x81G\\xc5b\\xc1lU\\x7f\\x80\\xbc\\xcaK%\\xf3D#\\xfb\\xf8*9#<A\\x8bV\\xf4\\xc2\\xee\\xe5.\\xbf.\\x8e\\x9f\\xf8\\xd6\\xfb\\x02\\x92u\\xdf\\x0b\\x05\\xbe\\x9b\\xdc\\xdc\\x9c\\xbaA\\xda\\x9f\\x13\\xfd\\x89\\x8ewG\\x9fw\\xc7)\\x1c.\\xf0[v\\x04\\xc6k\\xb8\\t\\x0c-\\x10/\\xbf\\xa5R\\x1c\\xc6\\xbe\\xc3I<\\xa9\\xd0\\xfbF\\x88\\xfe\\xddh\\xfa\\x9a\\xeb\\xc4\\xa8F\\x88!\\x8d\\x03\\xb5\\xd3\\xc3\\xd2\\xbb\\xca.s\\x06\\xb6\\x1fMX6\\x8f\\x0f\\xcb\\xc7|\\xd3\\xe7\\xd7\\x9b\\xf8\\x07=\\x1d?WhG\\xb8M{\\xb6%\\xd9\\xa9l\\xf2\\xf9\\xa2\\xe3\\x88\\xef\\xb2j\\xc1\\x03\\x0eY\\xd4\\xfa\\x95t\\xd7\\x0f\\xbc.7\\x16C\\x04o\\xbeOH\\xbfq\\xf6b\\xfbJ/\\x90\\x16r\\xf3\\x14\\xb6\\xc0;w9N\\xdb[\\xf4\\x08k@\\xcc?\\xfa\\xcb\\xf0\\x90\\x15\\x88\\xc0m=\\xcbJB\\xb9D\\x94]G\\xf91\\x86\\xef4\\x85\\xa2>0\\xc9K\\xea:\\xdc\\x0e\\xce\\xa8\\x1bd\\x92\\x1a\\xf1)-\\xbb\\xaaD\\x1b\\xf6:2\\xfct\\xbd\\xfcu\\xc2C\\xee\\xf0\\r\\x88\\x88\\xe5Ij\\xdc\\xba\\x85\\x89\\xe4\\x11\\xb9]\\xd6\\x91I\\xfb\\xd5\\xce\\xd0\\x10Y]I\\x1a\\x14g)\\\'\\\' `2\\\'\\xd8%%\\x92\\xcf\\x1f\\xe7)\\x9b\\xa9\\x12x\\x01\\xef~\\xbf\\x87\\x1dw\\x9fzy`\\xf21\\x11\\xc2iJZS\\xb4N\\xa2\\n\\xf9\\x06\\x10\\xad\\xf0\\x88\\x02\\x93\\xae\\x81>!\\xc2\\x88\\xd4\\x81\\x92\\xc2n\\x86\\x87/\\xb4\\xecx[Ov\\x8ca\\xd6\\xd7\\xf1\\xc8\\nM!\\x88\\xafu\\xc4;\\xb8J=\\x8f\\xde\\x02\\xab\\xa4\\x02\\x03\\xc6\\xcd6\\x05\\x1e\\xd1=J\\x17y\\xf2\\\\\\xa0E\\xa9\\xf9l\\xbc\\xe4`7 \\x86N\\x8c\\x05\\xb3\\xc3\\xe4\\x1b\\xf9\\xa4\\x8d\\x97\\xb9#\\x8a>\\x1eI\\x92K*\\x95C\\x9d\\x91\\xf1Q:\\x96\\x9cB=\\x1088\\x06!\\x01\\xbf3\\xdbgG\\x11\\x7f\\xa1\\xe2U\\xa2\\xf7~f\\xcc\\x1e\\xc9\\x1c\\xac\\xa95\\x98\\xd8 \\xfc\\xd9\\x9fsZIb\\xaa\\xfd\\xe6\\x93B\\x0fM~%\\xe4\\t\\xf8\\x87\\x97P\\xf1B;\\x9b}\\xb3\\x97-~\\xb5+)\\xc9g^\\xd1\\xa0\\x91*\\xa1\\x8a\\x0ek\\x18\\xa9\\n\\x8b\\xd0\\x80\\x1d\\xe8@\\xdd\\xc0\\xf1\\x1a\\xd3\\xf9rZvV\\xda\\x9c\\xe6\\xc6vu\\x16\\xc3xl#tND\\xf7\\x99\\x8a\\xd1N\\xf2r\\x19\\xbc\\x80\\xc4\\x7f G\\xca\\x1c{\\xcb$\\xc12\\x964\\x7f\\xffy8\\xe7:\\x86\\xbf\\x08\\xc1&S6q\\xee\\x9dg\\x9fc\\xad\\xd7g~x\\xd0\\x81\\x9a\\xf20\\x8a\\xa3\\xaf\\x0c}\\x1eg\\xc1y?Zx\\xaa\\xb6\\xeb\\xe4\\x96\\x17?.\\xd25\\xa7\\xb5\\xacO|\\x83\\xd5\\xa3\\xa9\\xc5\\xf8\\t\\xe79\\xd5I\\xe7\\xca#\\x8f-\\xf1\\xc3\\xf5Z=\\x89pTy\\xc6\\x0cu\\xe6s.s\\xbb\\xc4\\xaamr\\x93\\t\\x8a\\xfe\\xb0k\\xc2+\\x84\\xabG\\xc9\\xf3M]\\xc3 \\x8e\\xccF\\xd1\\x98\\x8a>H\\xf4\\xaa\\xdc\\x13H\\xaf\\xbb\\xb4gO\\\\\\xf7\\xc0\\xc3\\xe0V\\x0b\\xf8\\xc7Y\\x7f\\xb4\\xa0\\xf4\\x18?\\x9a\\x03\\x86\\x9b\\xf9\\x80\\x18}T\\xc6G\\x95\\xach\\x91\\xb2\\xbbc\\xea\\xad\\xd4"\\x91\\xfcm\\xb6Y\\xe5\\n\\xd930\\x90\\n\\xa5\\x13\\xd8M&8\\xe4\\xde\\xa4`\\x14k\\xaa\\xf9\\xce\\xc6\\xe7\\xb4J\\x9b\\xa1\\x1b\\xe5\\xc0yg\\xa7mr\\xdc&C\\xb2Jb\\xfb\\xa6\\xdc\\xf1\\x9a\\x9cN\\x1a\\x16\\x8fB\\xb3J5\\x1b\\\\Q\\xae\\x0e\\xfd\\\\%\\xa9\\xe2\\x8eGQ7\\xf0\\xc6\\x01\\xa3D\\xe0\\xf8\\x9c\\xccX\\xe5T\\x8e\\xcaGS\\xc1\\x90\\xd8\\xf7\\x8a#\\x1cs{c\\xcfp\\x12\\xfd\\xb6C$\\xe3\\xea9v\\x81\\xce7\\t\\x8a@\\x17\\xa4\\xc3(\\xe2[\\xe8#vV\\x9c\\xc4\\xb6\\xde\\x06k\\xach\\xca\\x04\\xc9\\\'\\x13-\\xda!\\x12\\xca\\xaa\\x98\\x05y\\x8dz\\n\\xe9\\x1b\\xea\\x17<\\x18\\xb6\\\'O[O\\xf6_\\xcc{\\x0f\\xe3\\xbem\\xcc\\x1b\\xfdD?\\x0f\\xc8\\xdc\\xd9\\xbd\\xb4\\xff\\x12\\xeb\\xca\\xb5\\xcc\\xf9\\x9c\\xc6\\x90\\\'\\xb3\\x92a\\x89\\xd8\\xac\\xfb\\x8a\\xfdA\\xa7\\x94\\xa2\\xa9\\r\\x87\\xec\\xe5"\\x10\\x0b\\x15x\\x92\\xca\\xc1\\xfcz6)Js\\xf6\\x85\\x9c\\xd4\\xb9\\x90\\x16\\xcbkj\\xb0\\xee\\x0b\\x87rb\\xfb\\xd2\\xf5n2\\xdf\\x07\\x95\\x01\\xef8L\\xfa\\xac\\x0f\\xe6)\\xa7[c\\xa4\\xfc\\x12RF\\x84;\\x9e`\\x0cz\\x14\\xb0A\\xdd&l\\xb1\\x1fV\\x12:3z\\xf2\\x1ew\\xe02\\xb92\\x9eO\\xe9\\xbfv\\x9e\\xa9q\\xd7B\\xbb\\xd3\\xf7\\xc2K4\\xc5\\xff\\x14\\x98\\x91\\x1d\\x11\\xf6\\x89\\x8a\\xc2b\\xcfiBQ\\xb4\\xb7)\\x12\\xb9U\\xd5_k\\x1f\\xe3a\\xecf\\xd1\\xf9eR\\xb8\\xcb\\x94\\xaa!I\\xaa\\x01?\\xde\\xa8\\xd7\\xfc\\xc1\\xe3\\xd2&~\\x19`+~y\\xcb\\x87m\\x8eh>u\\xbd\\xe4\\xe6\\x00_\\xa8\\xd4\\xfe\\xdc\\x10v\\tf^\\x94\\x15\\xbaE\\xe8M\\x03H\\x7f3\\xf4c\\xaaPKt\\x98\\x00x\\xa6\\xdd\\xa9\\xdfs]:\\xf5\\xeedZ\\x9dv\\xd6\\x05)eU\\x07\\xfd#F\\xd3/\\xc1\\xb33\\xb9X\\xf1\\x96\\xe7\\xfd\\xeeX\\xb6\\xdf|\\xfdV\\xf4.\\x12\\xf0\\x04\\x99b\\xa8p\\xfc9Hq\\xdc(\\xf7\\xdc\\xef.)\\xb1\\x18\\x96\\xa6\\xb7\\x99\\xc5\\xd4\\x1bK\\xec\\xc4f\\xd3\\x8e\\xa9\\x83\\xca\\xef\\n\\xbfe\\x99*,^\\x8fI(\\xd7q\\x90\\xf90\\xe4\\xf5\\xd6\\xeb&R0\\xac\\x85\\\\\\x12\\xfbta\\xf1p \\xc9EJA\\x85\\x05px/\\xb5I\\xd6f\\xb6\\xb3\\x1a\\xbb\\xd1\\xff{\\xbf\\x1cXW4X\\x8e\\xc7w)\\xca\\nl\\xe9]^\\xfd\\x14\\rP\\x97\\x90:WtibF\\x92\\xcf\\xdb\\x8b<xs7\\xd7\\xffk\\xafk{:S\\xbd\\xd5\\xf6=s=\\xaf\\xf4\\xf4tVd\\x9f"\\x88\\xc4^#C\\x7f\\x92c\\xbb\\xcc[Xs]j\\xf5\\x05\\xf95\\x13[\\xb3\\xb6\\xf6f\\xeau\\xcf\\xed\\xfc\\xf1|\\xf8\\xb9RXH\\xc6\\x8f\\xfd\\xaa$\\xa7\\x97\\xdf&}\\xfbhlyZs>\\xf1\\x1e\\xaf\\x1f\\\\#\\xc5v\\x98\\x90\\xc9=\\xb5`\\xff\\xe6\\xfd\\xb7\\x10\\x87\\x9eg\\xb3;\\n\\xb6J\\x99AB\\x17\\xca\\xe6\\xd1\\x9fb\\xbcR\\xe1\\xf6\\xbe\\x0f\\x06m\\xee\\xdc\\xc3\\xc5\\xf9\\xc4\\xc7\\xde\\xee\\xcfz\\xbd\\xd1\\xa1SU(/V\\xafp\\xe3\\x19\\x18+\\x86\\x7f\\xbe\\xb8\\x8d\\xf7\\x0cH\\xbd\\xf2\\x83[,\\x07\\x17\\x9dtD\\xfb\\x8e\\xfa\\xee\\xf8\\x9e\\x06u\\xda<\\x96\\xfb\\x03\\x8a\\x87\\xdc\\xb1\\x14\\xd2c\\xf1a\\xc7\\xb1\\x0f\\xb8\\x85\\xeb\\x921\\x98\\xb8\\x14{\\x9a\\xbe#\\xed5$\\xcdq\\xe5\\xb8\\x84\\xd7\\xd5\\xba\\xd4\\xea\\xc56\\xd6\\xe6\\xda\\x13\\xf6)\\x03\\xf8\\x7f<\\x95d\\xe4s\\xe4/}\\xf5\\xa2\\xeb\\xebv\\xbb\\x10mOJu\\x87\\xdd\\x8d\\x11zR/\\xde\\xbd5N<\\x8a\\xc5LQ\\xd5l\\xf5\\x11k\\xb3\\xe3\\xcc]m\\x86\\xcb\\xac\\xe2\\xf0\\xf1\\x04??\\x83\\xd4\\xed\\x1f\\x94\\x0b?\\xc9\\xc5\\xb2\\x1e(\\x8e\\xb1o\\rXc\\x8c\\x8b\\x1d\\xe4\\xa5\\xb9B\\xa7i\\xc2\\xb2<\\xf6\\xf4"DE\\x16\\x18k\\x86\\xab\\x10\\x89\\xaeI\\xcd\\xd4V\\xa8\\xe4\\xbb\\xfe\\xf2\\xf9Z\\x05:\\x0cg\\x9d\\x87\\x0f\\x1f\\xd9\\xf5\\r\\xe12\\xcb\\xd7\\x02\\x87)\\xe9\\x13E\\xcf\\xc3\\x0bR`\\xab9\\xc9\\xcd\\xc9\\xbb\\xc7\\x97v\\x85s\\x84*\\xc9\\xc9\\x89\\xc2\\xc9"\\xd7$\\xe0\\x17\\x92zLSql\\xb6\\xf0r\\x1e\\xfeL\\x03(Gc\\xef\\xfa+9\\xe3\\x1e\\xdf \\x01\\xc9\\x1f\\x8f\\xb9\\xb3S\\x1a\\xce\\x15\\xad\\xae<*\\xa2\\x02F\\x02\\xf9\\xc3@7F\\xfb\\xf3\\xd3\\xc0j\\x93\\x8a\\x0c\\x02):\\xda\\xb2k\\xd5\\xbe\\xb0\\xde<\\x87\\x0b\\x85\\xcb\\xbd\\x03\\xd1\\xaa`Yi]?z\\xab0\\xe5<S\\xacm\\xf2\\xefo\\xbc\\xbf\\xb39\\xe7\\xb2\\xea\\xbfC\\xe34\\xacc\\xa1\\xaf\\x9dI\\xa5\\x7f\\x85\\x16\\x1f\\x0c\\xb1\\xd4\\x1bU\\x95\\x9a\\xcc\\xb6\\xd9sO\\xb6`\\x981\\xa3\\x9f3\\xcez\\xf3C~\\xb9\\xe5\\xa4\\xda\\x82\\xfc\\x9dPC\\xf1\\x07\\xb8i\\xfa\\xd1\\x12\\xeb7\\xc3\\xed\\xab\\x86G\\xb0\\xf2\\xc3\\xd5D\\xad\\xb7\\x95\\xd6n\\xc3\\xed\\xc8Cw2\\xd5\\x17\\xe6F\\xaa\\xaf\\x97*\\xc2\\xcd\\xf4\\xf7\\xf7\\x99T\\xe3+p\\xd6\\xdd\\x89\\x02r\\\\\\xf1p\\x92\\\\\\x1e;g\\xe2\\x8c\\xe8\\x98\\xdf\\x08\\xf9\\xde`\\xfa"\\xb5?G\\xa1\\x07\\xa2[[o\\xc9\\x83(\\xbf\\xc7\\xa9\\x1b\\xf9N\\xe7\\xee\\x84\\x0b\\xfeX\\x04)@\\x9e:\\xaf\\x16\\xed\\xb8\\xf6\\x8b\\xca\\xf5l\\xbe\\xcdz\\xb1A\\xf4eh\\xbb\\xfe&\\xef1\\x86 \\xcf\\xee\\xf8\\x8eF\\xdd\\xda\\xc6\\xdd\\xda\\xa1\\xca\\xeeC\\x0c\\x18\\xc1\\xc1\\xc2\\xbe\\xb2Q\\xb5\\x0f\\xb0\\xc7\\x13\\xf3\\xbe\\x12\\xb6\\xc5\\xdd\\xf2LN\\xcbO\\x1a\\xda\\xef\\rw\\xbf\\xe3\\xf7&\\xab\\xb7\\x97\\xab|\\xec\\xa7s\\xf5\\r(qR{\\xd5\\x05\\x14\\xa2Y\\xa8L\\x1a9(\\xb2\\x91s\\\'\\x97\\xa4y\\xba\\\\\\xd1\\x16\\\\\\x83\\xcdc\\x8c\\x95\\xbd\\\'\\xbeD\\xcc-E)\\xffx\\xbb\\xec\\xda)\\xafd9m\\x17\\xca\\x84\\x14B\\x11\\x95\\x13W\\xe4\\x07\\xf6\\xef]|(\\xae\\xc1z\\xb0+\\xcd\\xbd\\xec1\\xeb\\xa9j\\x018\\x81\\xd6\\xbaF5\\x92\\xae\\x0c\\xcez\\xa6\\xea\\xa1\\xd0\\xf2\\xeb\\nu\\xa1Q\\xad\\xd8\\xf6\\x127\\x00\\x1eS\\xdaL\\x15[\\xba\\xe4\\xb1Ptv\\xcb<\\xce\\xf3#\\xbe/\\xad\\xaa5>\\x1e\\x87\\x82\\xb04m\\x08\\xd3\\xcf\\x9b\\xee\\xb8\\x033\\xf2\\x9c\\xe5f\\xa0\\x0f\\xcf\\x19W\\xde\\x85e\\xa9\\xe8\\xc2\\x8a\\xac\\xc4{\\x1b\\x93\\xbc\\x80#\\xda>z\\x8c\\xfb\\x8b\\xf7=s\\xbe\\x1b\\xb3Q/\\x1f\\xda\\xc9\\xa1\\\'.\\xb3`\\xbaw\\xb8|\\x02b\\x90?\\x97\\xa2\\x92-%\\x00\\xe8xQXx\\x14\\x7f\\xda*n\\x0b\\xf4\\x89.kv\\xee\\x14\\xce\\\\\\x1a\\xdd\\xbd&\\xd2\\xc0\\xc8\\xd7L\\xbdrJ\\xd0d\\xbe\\xc2\\xd7\\xc3\\x0f\\xdbz\\xfc2\\xa0\\xae5\\xb3t\\x94\\xe5S\\xeeny\\xe0A\\xf81\\xd6\\xfd\\x1e\\xdf"\\xe1\\xe6t_\\x86\\xb5\\xf4\\x84\\xbeg*\\xcf(T_4Zv\\xdb:\\xb8\\xdc\\x87\\xf8\\xc9\\xa2\\x9a\\xb0MX\\xb3\\xd8\\x12\\xbb\\xa4\\xbe\\xde\\x11(\\x0c\\x9d\\xb0\\xc2R-\\xb6{`\\x98-t\\\'\\x04\\x1aX\\xde\\xd7s\\xf5F\\xee]%\\xfa\\xd7\\\\?2\\xee\\xcb\\xe2o\\x1c\\x1bT\\xe20\\x9a;=\\xd6\\x87\\xf6&\\xe2\\x8e\\xed[\\x95c\\xc1w%\\x953D&\\xb0\\xf8\\xb8D\\xbfW\\xb6\\x9b\\xe5\\xedt\\x1a\\xf1\\xd6f>C\\x989<*\\xc0\\x85\\xa2\\xb7\\xe6\\xbe\\xaf\\xc0\\xe2"{\\xd53D+\\xecQ(\\xdf\\x00S\\xe8t\\xd6~IPMF\\xac\\xfc\\xb1\\xf3\\x85\\x96\\xa7\\xa2\\xf9P\\x8e$\\xfd\\xbd..\\xbc\\xc7&\\xa0\\x19\\xcf\\xe1t\\xba\\xbem\\xac\\x08S\\x13\\xff\\xa9\\xe0\\xe4\\xe2\\xafam\\xe9\\xce2g\\xdf\\xad\\x1a\\x85\\xc5\\x12\\x82\\xe4\\x7f(\\xbf\\xe6\\xa6V\\x89\\x17\\x81\\xec\\xdf\\xeb4\\xc2y<5\\x9f\\xf4s\\x07\\xf5\\x80\\xb0\\x0b3\\xf2T3\\xc0\\xddZ\\x9a\\x9f\\xca\\x98\\xf9\\xb5@\\x19hc\\x07\\xa9\\xc9R\\x0e\\xc1\\xbb!T\\xa5rr\\x7f\\xf9\\xe9\\xdb\\x85\\xf6v\\x1b\\xd3kn|\\xf2\\x10q\\xf6\\\\\\xa0\\xc2N\\xcb\\xe2\\xc1\\x1bMX\\xa3\\xec\\xc1\\x90\\xd9I\\x96i5\\xce1\\xfe\\xfcI\\\\\\x14*el\\x99Rj3\\xceP\\xf3\\x08n*oA\\xd9\\xc7\\x9fj\\x81\\x19G$\\x0bwK\\x93\\xd1\\x18\\xe3\\xa6T46\\xa4\\x18\\xbc\\x8e\\x9d\\xf0lB\\xa3\\x91r\\xf3KavjH\\x11\\xa6\\x1b\\xf7\\x94#\\xa4\\xf3|\\x82\\xadk\\xf2\\x93\\x0bH\\x81\\xf7l\\\'\\x8a\\xd3\\xe7\\xdeH\\xf4d#\\x12\\xa0\\xf7\\x10\\xcf\\x94\\xf3\\xb1\\xd7\\x8b\\x16\\xd0\\x1a\\xac\\xb7\\x1c\\x04\\xb1\\xc2\\xbe\\xba\\xaf#\\xf2\\xa6\\xdfk\\xaa-\\xca\\xd9\\x9d\\xde\\xa1\\xd8\\xe0\\xf3\\xe0\\xb4\\x81\\x1e\\x17\\xf0\\x83\\x08\\xda\\xfe\\xe5\\x1d\\x86\\x9ay\\xc6\\xa8\\xea\\xcf\\xd4\\xb6gu\\xca\\xc4\\x00;\\x95\\xc5e\\xb4,\\x9d\\x8e\\x18~\\x19} \\xb9o\\x83\\x15\\xb0\\xea\\xcb\\xf5\\xd5\\x8b\\xfc]-VT\\x8f\\xb84\\xb5\\x92\\xf6\\xc7\\xc7jj\\x07j\\xd87\\x05I&\\xf1\\xcfK\\xb6n\\xe4\\x1f\\xf20\\xa2\\xf9{\\xb5\\x8e\\xd18O\\x0eF\\x8f\\x95\\xa1\\x7f\\xc9\\r\\x8d\\\\\\x9e\\xaa\\xb4\\xd9#$\\xf5\\xe6\\xdb.\\xb8X\\x12(X~J\\x99X\\xc0\\xd9\\xc1N\\xa7\\x86\\xae\\xf3\\xf2\\x03\\x0b[eA\\xb9\\xdcW\\x83\\xb3\\x86\\xc6\\xfb\\x03%\\x9eL\\r\\x1f\\x8e\\xad\\xd2\\x04\\xfd\\x05\\xcd\\x1f\\x11M\\xb6\\xac\\\'\\xb5\\xfd\\xa0K\\x13\\xab\\x103\\x90|7\\x91\\xf3\\xf1\\xa5\\xfa6\\xe6\\xab\\xb0\\xbe\\x1c1*SU\\x9f4\\x9d\\x0b\\xe9\\x10\\xda\\x10!"=7kV\\xf6\\xfd\\x12\\xaa\\xd3q\\xd0|\\x89{\\x16i\\xcdQn\\x8e\\xc4\\xa1\\xcf\\x96\\xc0\\x95\\\'\\x96\\xdf[\\x0b o\\x1b\\x96U\\x0e\\xd48w\\x9f\\xb4$\\x9f\\x1f\\xaa\\xef\\xb9\\xab\\x88\\x1e,J\\xff\\xaa\\xf4>b7}s\\xc5g\\xeem\\xc7V\\xe3f\\xa6\\xdf\\x1d\\x9cv\\x0f8\\xb7\\xb1\\xcea.E\\x85\\xf7K\\x8c\\xd4\\xd8L\\x89).\\xbdHT\\x98\\xd1\\xd0\\xa3\\xa3/RC\\x04fcnE-\\xf2)\\xb8\\x1f\\xf6\\xbe\\x1b\\xb2+\\xb8\\xf7`z\\xc8<\\x9c\\xc6{\\x8a\\xba\\xf1GS\\xcc)\\xa0\\xf6D\\xed]\\x8c\\x87\\xb4\\\\D+\\xe9$\\x99\\xf6y\\x12\\xa3\\x95\\x8e\\xf3\\xc5\\xd5\\x84\\xe6\\xf17\\x06sT\\x8cr-\\xd75\\xa6\\x13\\xe7\\x10\\x8d~\\xac\\xee\\xf7\\x0c\\x1b\\x14Lh\\xfc\\xf1\\x86(AX\\xf5\\xa1]\\x15Bi\\x8a-"\\x7f\\x06^c\\xb5~\\xbf\\xdb\\xcc\\xb1|P#\\xc9\\xde\\x1ac\\xe7\\xd2\\x8a\\x8f\\xa8D\\xdd\\xcfa\\xdb(\\xe3zQ\\x11\\xcf-\\x97H\\x98\\x99kn\\x8bZ\\x0c\\x81\\x8b]\\xb6\\xdf5\\x04\\xab\\xa5"c\\xb7\\xf3\\x12r\\xd4\\x8f9\\x8ah\\xfa\\xe9\\xd3\\xd6\\x8bK`\\xf2n\\x98A7\\x8a0\\xb6\\x11\\x94Uos\\xe2\\x1ccl\\xc7\\xa3\\x91`U\\x98\\xe3\\xfc\\xe3\\\'\\x8d\\x97\\xd9\\x9c7\\x0e\\xbb\\x9d^\\xb1\\xf0\\x9de\\xe8A\\xefpG\\x99z\\\\\\xfd\\xb5\\xca\\xbd")1C\\xfe\\x85\\xe2\\xf5\\x95\\x10\\xaa\\xdaf\\x85\\xaa\\xab"\\xfa\\xef\\t\\x93\\x0f\\tV;\\x11\\xce\\xf1H\\xb6\\xf3\\xcfX\\xca\\xfa;\\xfd\\\\\\x84\\x86\\xef\\xfa\\x07\\xe6Y\\xce\\x1az\\x87[\\xc8i\\x08\\x9a\\xed%f\\xf1>\\xa9\\xa2\\xe7\\xf9\\xe3\\x06\\r\\xa7\\x16\\x04\\x8b\\xd3#\\x14\\xcf\\xfa\\x0c\\xdf\\x95S+\\x95\\x9e+7y!$@\\x9f\\xaf\\x03\\xe9\\x0ee\\x16\\xe7\\xc6\\xe6\\x9ct>I\\xd32\\r0\\xf7\\xa6\\xf4\\\\T\\x11R\\xc4\\x1b\\x08\\xa91r\\xd2\\x9e\\x05\\xac\\xdd;\\xd7\\xbf\\\'[\\xac\\xb9.\\xc2,\\xca:\\xb5\\xcbST|\\x9e\\xeb\\x15\\x04\\xbf\\xe8\\x16{\\xb9x|\\xfe|L\\xa8\\xb1J%\\xb4\\xda`qr\\xa2?\\xd4(\\x00\\xf7\\x98\\x0c\\xffG\\xe9\\x8b=.c\\xb4j}SZ\\xedm\\\'\\x01\\xcaD\\x1d\\\'\\x9b\\xa8-n\\xd2R\\xaed\\xfd\\xc0O\\xd4\\x9dW\\xc5G\\x06\\xbby\\xe1\\x0eg^\\\'$z\\x92,\\x04\\x94C_\\x17\\x02\\xf1V\\xf8o wX\\xc7N\\x9b\\xa8r\\x82f\\xa4\\n\\x15&rO\\x0f\\xaaV\\xb4\\x86\\t\\xc5\\xa8D\\x1a\\x98KjV\\xfd?\\xf6h\\xc6\\x9c\\x9cd\\xce\\x1bTw\\xc8\\xd4\\xc9{S~\\x9b\\xd6\\x1b\\x1dj\\xce\\xcd\\xd7\\xa5\\xa8\\xf1.}3mNF\\xee\\x1aSb\\xb0sx<\\xae#\\xab\\x13\\x9aN\\x84\\x17\\xa6\\xc2\\xd3\\xbb\\x08\\xd0\\x13\\xd3l\\x0f\\\\\\xf3._\\xfb\\x1e\\xb8\\xc6!@\\x9c\\x90\\xb1\\xaf\\xd9z\\x8a[\\xf8\\xb0<\\x1b\\xd7\\xf3~\\xd7\\x8d\\x11\\x1bnR!/\\xfb\\xb8k\\xd5\\x85\\xc4\\xf2\\x80\\xef\\x92\\x05\\x8e\\xb6A\\xced6\\xee\\xa3\\x9d11Kz\\x15\\xec\\xd0\\xbb\\x97,:\\xc6\\xb3\\x05\\xd0\\xc7\\x07!Gs\\xa3R\\xb6J\\xc0\\x89\\x02mZ\\x9axg\\x1b\\xc5\\xc2\\x05\\xa7c\\xef>\\xec7S\\xdd\\xe6+\\xcd\\x94\\xe15\\xf5S\\x85\\xd8\\xde\\x1d\\x11\\xea\\xc9\\\\X\\x9e\\xaa\\x94F\\x0e\\xf8\\x1e\\xb8\\xd5\\xe2\\xc7\\xc7\\x9a-\\xb8\\xb9N\\xa3\\xd3\\x82\\x03\\x97%\\x8f\\x8d\\xda\\x98\\xf3\\xceW[\\x9a2\\x9a5/\\xf3\\x0f\\xcd\\x8b\\xce8{\\xf3\\xa7_\\x89}!\\x8d\\xc4B\\x9dS\\x0b1#\\x9d>\\xaf\\xb2)MC\\x89\\x10,\\xc3\\x19\\xf9\\xc5)\\x0bc\\\\\\xde\\xa2p>)\\x19\\xf8\\xd3\\xd1Z\\xea\\xecQ\\xf6r\\xdc\\xe9\\xee\\x01vn\\xaa\\x8c"\\xed ~\\x0f\\x82-I\\xe1<e\\xb8u.\\x98qM\\xae\\xd9\\xfb\\xbe\\xd1\\\'\\xbd\\xfb\\x17\\x94\\xdd\\xaa\\xe9o\\xb7gj\\xb8\\x0c\\x1c:\\x10\\xf7\\xc4*\\xd2\\xe6\\xc4\\x89\\x97\\xfa\\x8d\\xcd\\xce#\\xdd\\x13xI0\\xbc\\x02\\xe5\\x84(\\x93\\xd7{\\xba\\xec\\xbe\\xa1\\xd9\\x9a\\xcb<\\x15\\xe6\\xb8\\xe9\\xf1|Y\\xe25\\xc7\\xa8\\xf5L(?\\xc6\\x8e{\\\\\\x9c?+&#r_9\\xae\\x95\\x14\\xb8\\xe16\\xa9d\\xb9_\\xb1\\x876.\\xbf\\xe9\\x19\\xe0\\xf1\\xe3\\x0e\\xfbBe\\x7fx\\x06k\\x1d\\xd1\\x93\\x8c\\xefC\\xc1Y\\xc1\\x141ZE\\\'F#\\x9b\\xd5s\\xd9\\x05#r}\\xf2\\x84\\x0e\\\\\\xac\\x18]\\xb2\\xfdl#\\xa3i\\xe1\\xae]!\\xe1-\\xe1\\x16\\x12-\\xb8\\xe9e\\x8d\\x14\\xd1.\\\'\\xec\\x16o\\xae\\x9a\\xb2\\xc4\\xf7Zyg\\xc59\\xf6\\x83\\xa9\\xe8MG\\xf1he\\xb0\\xac\\xaeQ\\x1fx\\xb5\\x0e\\x8bp|;&tf\\x9dz\\xfc\\xba:\\xf8"\\xdd*\\x97\\x99E\\xe4\\x98\\x0cK\\xdfs4\\x84\\x1a\\x98M\\x9bx\\xee<$D"\\xfc\\x10\\xfcs\\x8frF\\xbb\\x07 |\\xe7\\xeeG\\xef\\x82\\x14\\x05\\x1c\\x0cS\\x8eM;\\xc6\\xa6\\xb9h\\xb9wJk\\xa6\\xde\\xd3SSs\\x0f`\\xde\\xd1&\\xd8\\x13\\x04.E\\xb0`\\x93?d\\xbb\\xfcP\\xad\\x80C\\xcaGVw\\xdd\\x10\\x93\\x88u7\\xf62\\xbfs\\xd2\\x97;\\xdf]\\xaa\\xf9\\xc0o+<\\x93A!\\xb2$3\\xd3\\xcbR\\xf81\\x91\\x0eg\\xd3\\xfa\\xf13\\xcc\\xe7\\xc8\\xc5\\x0eQ\\\\ \\x85\\x0fB\\xd0:\\x19\\xbc\\xde\\xa2\\xad\\x7f$\\xdf\\xc0h#\\x87{Gx\\xa7\\xdc\\xdc\\x18h\\xd7a\\xbdf\\x90\\xfb-s1\\xa7\\xe1\\x8d\\r\\xd6\\x8d\\xb4f$\\x7fg\\xf3\\x13\\xad\\xa7\\x01\\xfbD\\x9d\\xa6Z\\x93\\xb2)\\xb9\\x9c&\\xf5\\xa7t\\xeb\\x12\\xcc\\xf6\\xf6\\xf3\\xea"\\x1b\\xcc\\xfc\\x12\\x95\\n\\x0b\\r\\xf9\\xc1?\\xab\\xf9\\t=\\x14\\xc8\\x9eU\\xc6\\\'2\\x8d3\\xf4\\x98\\xd6y)\\x96\\xaa\\xf5q3\\x0fY\\x05tE\\x99\\x84F\\x1aq\\x8a\\x00<I\\x97\\xd2\\xd4\\xbfJd\\xc7\\xc4\\x7fJ\\xf6\\x1ap\\x0fL\\x11\\x13V\\xe5Pe\\xc2caL\\xec\\x9e\\xe4{}^/\\xdav\\x82Hb\\xd7\\xc9\\xf7\\xd2\\xdb\\xee\\xac#\\r1\\xd4\\x7feID,\\xc9pN\\xc1\\xe8C\\x13\\x9d\\xa5R\\xf4\\xa9\\x13\\xda\\xca\\x15\\x1c\\xb2\\xce\\xae\\x10\\\\\\xeb&W\\xd5\\xe5\\x82E\\xf3\\xc9q\\xd3\\xc0\\xda\\xcd4\\x95\\xe0,\\xe5\\xe9\\x94\\xd43\\xa5\\x0c\\x9c\\xa3\\xc9\\x1c\\x1a\\xfe3\\x05A\\xe0\\xc0\\xf7\\xba\\x80\\xb2*J~.\\x1b\\xa4\\xee~\\xcb\\x18U>\\x05\\x9fDgbn\\xc2\\xe7\\xc4s?\\x85\\xdf\\x7fBe\\x03|oX\\xadC?\\xb4\\x1f\\xc4\\x81\\x7f\\xaa\\xf6a<\\xd0\\xf6kA\\x17Z\\xd9g%\\x0cf\\x94DjZ<\\xaf:rT\\x18\\x9d}\\xb9A\\x1cH\\xdb\\x8fM9\\xadE\\xcc\\\\\\xd4\\x9b\\x10_+H\\x94,\\xed\\xce\\xcd\\xa5\\xb9x\\x04\\xde\\xde\\xe8pv\\x8e\\xb2\\xf8R\\x19\\xbf[\\x0e:\\x84\\xe9\\x04^\\x0f\\xa5\\xa4\\x1c\\xc4\\x06\\xb7\\x96\\x1dE$4\\xd9\\x15\\xb6\\x99\\x80#\\x9f\\x89\\x07\\x86\\xf9\\xaf\\xc3\\xd8\\x93\\x1cc\\xa3\\xbfH9\\xb8T@*\\xcb\\x0ey;\\xc0\\xc4_3g\\x16\\xd9\\xc4%8\\xa6\\x16\\xcd\\x05\\x19\\x0e\\xb9w\\x84\\xef\\xb9yZoh\\xcc\\xcaUCBf\\x9f0\\xbe9\\xd6 B\\xab\\x89Jb\\xcau\\xa3\\xcafx\\xb9\\x8a\\xdf\\x9f\\xe9/U8\\xa2\\xf0I \\xd4\\xb4\\r\\xc0\\x0b\\x16\\xbdB\\x9f\\x7f\\xaaz~a\\xa0=\\xa3K\\x88\\xaf\\x1brC\\xc9\\x90\\x9d\\xec5\\xcf^\\xa8D\\xc9\\xd9\\xf1S\\xba\\xbd\\x8cm)b)D(\\x92\\x90\\xde\\x9e0 \\xd4(\\xf0\\xc5\\x82%\\xf7\\xe6\\x89;R\\xc0\\x80.\\xde`\\xdcg\\xe9\\xe6\\x9d\\x00\\xa5v\\xdb\\xdc\\xd5A\\x96EC\\\\\\xbc\\xe4\\xcep\\xe8\\xb8\\xe2.\\x17^\\xf1\\r\\xfa\\xa2=\\xe5"mT\\x8d\\x00=\\xf9\\xc7`r\\xc9\\x955\\x18\\xef\\xf6\\xa1\\xc7CZ\\xf1\\xaa\\xf1a\\x96\\xd6;\\xfc\\x8a\\xecA\\x8dWER\\xa5\\xe5\\xfb\\xa5\\xe3\\xf4\\xea\\x88\\xb2,\\x07\\x96\\xac>\\xb2\\xe2vN\\x89(\\xadOC\\xcf\\x01\\xcc\\xc6\\xca\\x04\\xac8\\x14\\xb4o~0\\x8f\\xfd\\xac\\xdd$\\xa5\\xc6\\x14\\x8c#\\xf2\\xcb\\xf7F\\x9a\\xc8\\xf4\\xdf\\xebg\\xfe\\xcel}t\\x92Kv4\\xf2\\x92\\xa1\\x0f\\xb0\\x86\\rY[O\\x8au\\xfe\\xe1\\x1f\\xe3\\x94q\\xec\\x9dX\\xbf\\xab\\xce^C\\xad\\x04=\\x06\\x86\\xdb\\xce\\xea\\xafy\\xd8\\x9c\\xbb\\xfb\\xbePk\\xcb\\n\\xba\\xfb\\x06\\x1a\\xf1\\x9c\\xfcR\\x1b\\xa1\\xd0\\x15xp\\xc9\\r\\xd2E%\\xc0\\xd0Xb\\xfd\\xa6\\x82\\x99|\\x99\\xec\\xba\\xb5_\\xaaV\\xe0\\xf3UGH\\xa6\\xd7(\\xe9\\x94p2L/\\xb1\\xae{\\xdb\\xaf\\xbf"n\\xccPlU\\x8b\\\\\\xa0\\xe4M8\\xfd\\x18bMC\\xab\\xd8kr\\xb4\\x8a\\x1f\\xda|c\\x02#\\x19\\xde\\xae\\xfe\\xb1\\xf4\\xfc\\x83}\\xc6\\xcf\\\\SIz\\x83\\x1eh\\x8d/ \\xf4s\\x9c\\x01\\xc70S\\x10\\xb6\\xdc\\xf6\\xbb\\x99\\x15\\xb01\\xa7\\xca\\xb2/\\x8a\\xc0h\\xcf\\x8c\\xde<\\xe7UJ\\x16z[\\xa1\\xcc\\xdb,\\xcd\\x07\\xcb\\x90H\\x92\\x13\\x1c\\xfa3\\xb7\\xb5Am\\xb7\\xb0\\n\\xb1(\\x9a\\xcf\\xb9_\\xb7\\xb6.K\\xbf]o\\x8a\\x8enk\\xf8\\xb3\\xc5=\\x9d;\\x9d\\xcb\\xdf\\xbf\\xee\\xc1z)]\\xe0\\xac\\x7f\\x15@b\\xc4\\xfc\\xbc\\xd3M\\\\\\xfa\\x9d\\xad\\xe5\\x08\\x11\\x93\\x85|\\x16\\x02\\x9e\\xcc\\xe8\\xa1\\xd5\\xf6\\x82`\\xc4\\x8bOA\\xe8\\xd5\\x08\\xd2J\\xe63\\xda3\\x91\\x9f\\xc3\\xb2\\xafd\\xb8\\xc2\\x8c\\x84b&\\xe9Gv\\xee\\xcfT\\x94\\xe7\\xe1\\xcb\\xc7\\x86\\t\\xb7|<\\xddC<~\\x7f\\xe4\\x12\\xd0\\xfd\\xa4\\\\(\\xd9\\xc4\\x19\\xd0\\x88\\xe4\\x9e\\x97O\\xba\\xf7dU\\x1cS\\xeb\\x83\\x1a\\x16EG]Z\\xe1\\r\\xe8\\xbb\\x88\\xdcH\\xf4R12q\\xb2\\xd8OI0\\xb7\\xdf[\\xae|s\\x91\\xc8\\xf8\\x19r\\xf0+\\xd0r\\xea\\xe1\\xac\\xb3I\\xcb\\x0fg\\xa9~\\x9f\\x1cD\\xc0{\\xde\\x0e\\x9f\\rf\\xb6\\x92\\x93Z7M\\xd2\\xcdx\\x83\\xea\\xe5o\\xefS>`\\x99\\x06\\xdb}W\\xf5yo\\xa3!\\xa7\\x95\\xd4\\x13\\x80\\xe7g\\x85\\xf9\\x00\\xba\\x1b\\xce\\xa7,C(\\xd7dn\\xe5\\x965\\xe5\\xde\\xdf\\x19TZ\\xe0\\xb2\\xf0<\\xc1T@rDPS\\xde\\xa0\\x80\\xd2\\x19\\xd2\\xb8\\x8c\\xd4zgZ\\x0e\\n[\\xba\\xd4\\x0e$\\x174\\x9b+\\xc0\\xd8\\xac\\x0c\\x97G\\xf44\\r~\\xc9P.#x\\xf6\\x1a\\x03-\\xebj\\xeeP:i\\x80\\xed\\x03\\xaeM\\x05\\xdc\\xb3U\\xebE\\x023\\x8c$\\xd7\\xc1Bn\\xf1e\\xc3dmHU\\xbe+\\xb3D\\xebg\\x8f\\xbe\\xd3\\xa1Dtt\\xfe\\xc2\\xf1\\xe3\\x19q\\xf8\\np{\\xc3YE\\xc9~\\\'XfI\\xbe\\xeb\\xd5\\x1e\\xc6S\\\\\\xff\\xd4\\x9eWQ\\x86?{\\xd2/C\\x03"\\x1e5\\x1cl62\\xed\\xe3\\xbfZ\\xa6\\xe1?F\\x0e\\xfb*\\xa4\\xb8[\\xa1\\xf5\\x1f\\r\\xd4"\\xf9^\\xe2\\x95:::\\x0eV^\\x90\\xcff\\xb6eNg\\xab`\\xc1\\x08\\t0\\x8d?s\\xbd^\\x8b\\xcb\\x98d\\xbatA\\xaek\\xe8\\x90\\x1e\\x0e\\xa7x\\xaf}\\xb3K#\\x11\\xa1FB~\\xea\\x95M`\\xc1]/q\\xef\\xb3y\\x9c\\xab\\xe1\\x9c\\x8e\\x0e/\\x86\\xbd|r\\x0f\\xb7\\xfe\\xedd\\xcc\\xea\\x86$\\xd8\\xb4\\xb6\\xad\\x9d\\xf9\\x9e\\x11\\x18\\xde\\xfeA\\xd5\\xb0\\xc3\\x10\\x1bC,\\xbc<\\xb8\\xe4%\\xe9C\\xcd,\\x84i\\xef\\xee\\xd3\\xdew\\x16n9\\x8a\\x84\\x89\\xd1K&\\xb2\\x18W\\x1a\\x11\\xfce\\xe27\\x93\\x89\\xc8\\x8b\\xf2fsN\\x9b\\xa3\\x8b\\xa0\\x95\\xc0~qC>\\xd9IV\\x7f\\xf7\\x1c$-\\x8e\\x8a4\\x85&@\\xa8\\xeb\\xfd<\\x81\\x9d|\\xc0\\xdb]oB\\xf9U\\x7fA\\xc6\\x01m\\x978\\x8aI\\xf3\\xfae\\x05\\xad6\\x9c\\xf8\\xa2\\x84\\xc7\\xcc\\xaa\\xc7_ttr\\x1a\\x166\\xc4\\xc8_\\x94\\x17\\xa1\\xeayY\\x83\\xb4w\\xc8<\\t|\\xa4\\xbe%N\\xd8\\xdd\\x1b\\x94\\x19\\x81\\xeeu\\xa1v\\xd8\\x06\\x02\\xd4D5\\xfar\\x96U!\\x85\\x91\\xc6.f4\\xe3\\xc3LFR\\xbcS6?\\xd4\\xd2\\x14q\\xef\\x1f\\x14qm_`D\\xd7\\xfa\\xdc\\x08\\xed\\xde\\xff\\xfejQ\\x90<(\\x1et\\x13m\\xe2\\x14&\\x102\\x82\\xb1\\x8d6/.\\x8fZ\\xa9\\xd62\\x1e\\xc2]\\x0f_H\\xe1C\\x04\\xd3\\x91\\xb9\\xf4\\xd5\\x863,\\xd6xG\\x14\\xefUW\\xf8Z\\xe6B\\xa3\\xe5E3\\xb2\\xd3J\\x02WI\\x89\\x12\\\\$\\xad\\xbf:\\x12\\xfb\\xaf\\x8d%\\x1ahe\\xeb\\xba-\\xb7\\xc1\\xcd\\x16\\x83\\x10\\xcc8\\x84\\x12\\xc65\\xea\\xdf\\xe2\\xda$\\x18\\xdd\\x94\\xbf\\x13+\\xc7\\xc6\\x7fs\\xc5\\x8f\\xa1\\xfdh\\xbc\\xba\\x92\\xdcUtUMzR\\xf8vZr\\xc0D\\x89C\\x9e\\x7f\\xbe[\\tS\\xdc^\\xbe\\x89\\x1eZ6_p\\xb7\\xef+:\\xbez\\xfaSa\\xc6\\xccgqk\\x17\\xbc\\xe2;*o\\n$\\xcc\\xc4\\x92\\xd3\\x11\\x87\\xcb>J-3\\xcb.\\xab\\xfc}H\\xcb\\xca\\xaf\\xb6\\xdbU\\xbd)\\xbb\\x9a\\xc8\\xd9\\x8d\\xf6\\xfbc\\xe6\\xe1\\x04\\x9d/gJ\\xe8\\x8f\\xad\\xd4mb\\xec\\xa4I|Y=\\xdal~\\xe2\\xe2Uf>H\\x94\\x1a\\xb5\\xa5\\t\\xbfh\\xaa=} \\xf1!\\xf0\\xc5\\x0f\\xca\\xd5\\x1b&t\\xe6\\xfa\\\'\\xe2!\\xaeF\\x1e\\x84\\xd5w\\x9e\\xa5XM\\xbc`\\xe0W\\xfeb\\x80\\xb2\\xf0\\xccT\\xe5D\\x1c\\xbf\\x92\\\'\\xdcX\\\\8\\xef\\xd9\\x13Q\\x16\\xb4\\x9cG\\x1d"\\xa1\\x0c\\xf3\\xaf\\x99\\x97\\xf3d[E\\xeb\\x97d5#\\xb8\\xd6\\xfa\\xc5\\xb04\\xcc\\x99\\x9e\\x10\\xbeZ\\xd7\\xf1/\\xb4\\x9e\\x1b\\xde\\\'1S\\xed\\x90\\x01w~\\x8c\\x084\\xcd\\xc6\\x08]\\xce\\xbf\\xc3%\\x8e\\xe0k9%\\xba\\x91\\xaa\\x9c@[\\x18\\x7f\\x86g\\xd8\\xa3\\x9f\\xf0\\x8e\\x12\\xba\\xc7\\x1b\\n\\\\Es\\x83)\\xbez\\xb35/\\xe6\\xc8\\xf1t\\x8b\\xf7\\xa3\\xe1sf_\\x91\\xd0\\x9e72m{\\x97v\\x93l\\xb1T\\x17\\x9b\\xb1\\xf3ZP\\xe9T\\xcc\\x00D\\xe2S\\xcby;\\xd2\\x16\\xb2\\xb9Wa\\x00\\xf4\\xfd\\xbdVA\\xe7\\x9f\\xa4\\x0b\\x91\\x19\\xc5\\xd0F\\x9fjc\\x16Q \\x86\\xeb\\x83G\\xdfc\\xdd\\xeb\\xe7\\x1c\\xa0O\\x1a\\x12O\\xbb\\x93\\x89\\xbf\\xf3\\x7fr\\x17\\x8f\\xce\\xdaB\\xd6\\xe3\\x15\\x7f\\xd3\\xd1\\xdav\\t\\xd0\\x197\\xb2\\xadv\\xdae\\xc8\\x11\\x84\\xb4\\x92\\xe8"\\xaegv$\\x17\\xd9\\t\\x83\\xaa\\\'9MM\\xe95\\x0f\\x88R\\xcf)Jb_K\\xb6(6\\x8e\\xe44\\xad\\\\\\x81\\xe0\\xfb4V]\\x1d\\xb8_}\\xf3\\xf8f\\xb87\\x9c?\\xe7D\\xe6\\xe2\\xec\\xc8Le\\x9fe\\x07\\x90\\x89\\x81/c\\x04\\x19\\xcap4m>\\xd0\\xd5\\xae\\xe6\\x06D\\xdb\\x8dN\\xc5\\x07\\x17\\x8d\\xe8\\x02Y\\xcc\\x9d\\xc3\\xaf\\xb3\\xc8\\x17\\xa8\\xa3\\x14\\x12\\x90\\xe3\\x96\\x83}\\xfb\\x8fcnJ^\\x01e5f\\xb3\\xd5\\x17\\x1f\\x07=+\\xb8|\\x94?\\xd7{\\xb4\\x82\\x16,I\\xcf\\x82\\\\\\x19OS\\x00B\\x07+0%\\xfah\\xdb\\x12\\xbc#\\xfad\\x1c\\xb8\\xfdO\\xfb\\xa56l\\x8e!\\x1e\\xcf\\x9b\\xb1\\xd7\\xda\\xb8\\x860J\\xa3\\xc3}d\\xbc\\xe8\\xe9\\xb9\\x8c!\\x89\\xaf\\xcb\\xcc\\n\\x9f$(\\x1e1\\xb2n;)\\x8c\\x10\\xc9\\xa5\\x88\\xd7\\x0c\\x86~\\xf0\\xe2\\xdc\\x03\\xf3k\\xa2=\\xe0\\xac\\x92O\\xa36uIm\\xcdg\\xa1\\xb4g\\xa3#\\xb5\\xd7\\xbf.\\xa0c\\xcc\\x19H<\\x7f\\x90\\x02T=?\\x83\\xcb\\x89W\\x16\\xbcFxX\\xe0(M\\x1f\\x10\\rb\\x07\\xc5\\xc8\\x8b?V5W\\xd1\\x98f\\xef\\xaft\\x0b\\x9ck\\xc1\\xc2M\\x15\\x8e\\xca\\xda\\xa2\\x8dm-\\x9c\\x0e\\\\\\x84l:h\\xdf\\xa5[\\x92\\xdd\\xfb\\xf6\\x10\\xb7\\xaf\\xfcs\\x91\\xb2\\x96R\\x9f}\\xe8\\x07\\x99\\xc6z\\x8d\\x10\\xa0\\xe8\\x80H\\xef\\x94N\\xa2\\xcc[+R\\x85\\x08\\xbb!\\xb5\\xd80+3\\x95\\xb5s\\x9f\\xac\\x0e\\xba\\xeb\\xd3\\xe3MV\\xf9\\xbd\\x9arS\\xb3\\xf1\\xf3\\xf5\\x0cx}\\x18A\\x82\\xd9L\\x1d_\\xa7K\\x06U6Y\\xab\\xab\\xcf:\\xb2\\xd2\\xb3+P\\xf1\\x8bz\\xb0\\xb8w0\\xa3\\xd9\\x03\\xef\\xafyDJwG[pO\\x1c\\xca\\xd2\\x97n\\xce1\\xba\\x0e\\\\D\\x8b\\xd9\\x1f\\x11\\xa6\\x11e0u2L3\\x9dIb\\xb7\\x9f\\xbd\\xbd")\\xff\\\\a\\xdc\\xfd\\xe4n~e\\x82\\x1a\\xee\\xf6\\x14g6S \\xd88[_\\xf7\\x92\\xfd\\x03\\xf3\\xbbk\\xf6\\x94\\x9e\\xeeb)\\xe5s\\xb2\\x94\\x13\\xe8\\xb6Q\\xa8|\\x18\\x95\\xc5\\\\\\xcf\\xf2P\\xb7\\xf1\\xfd\\xf8\\xad!\\xebr\\xd8\\xe1U\\xb4?\\x86yK\\xa6l\\x98\\xb9D\\xdc\\xc3\\xf7uu\\xee\\xfa\\x8a\\\'D\\x96\\x91\\x90Br\\xe6\\xd3\\x97\\x06\\x0f\\xc3\\xdcS\\x92\\xe4\\xea\\x93\\xdd#XN.Pe\\xa9a\\xd5\\xd2\\xe0f\\xbf\\xf8\\xaf\\xe7\\xcd\\xf66\\x1b\\xa5pN\\xc5/\\xf93\\xbb\\x9b\\x1a\\x9e,\\xdd\\xb1\\xd4Z\\\\\\xddB\\xef\\x9a\\x1fZ_<\\xa9Gf_\\xed\\xfcDG\\x7f[Q\\x91\\x8f\\xf7r\\xf5\\x98\\xb6\\x1d59\\xb3\\x86\\x87\\x1e}\\xe0\\xd3\\xc0,\\x9c\\xedf\\xf0c2\\xfd\\xdap\\x82\\xd4v\\xcc\\xdb;\\x86%;\\xce\\xcd\\xcbb\\xd6\\xd9mr\\x12\\xebT\\xef\\x87,\\xc8\\x99\\xa1I\\xaf\\xba\\x9f=A\\x82\\xb3\\xf6{\\xae\\x7f\\xb4\\xdeh\\x92a@\\xac\\xf4\\xaeZ\\x8e\\xc3]:\\x04\\x7f\\xfc\\xb8h;\\xc0\\x8c\\x83\\x8b\\x0f\\x86\\xfb<\\x92\\xbe\\xa5n\\xb0\\xc6\\x12\\x13\\xa33\\xaeB\\xb1x\\xbbl\\xd4\\xec\\xd8u\\xd2\\xc9\\xe5N\\xd9\\xdd\\xaeD\\x13t\\x92h\\xe8\\xeaVsT\\xbe\\xde\\xf6\\xcd=\\x82\\x14\\x02\\x0e\\xa36ta\\xdc\\xf5\\x10\\xf9\\x9b4o%v\\xf1\\xc6\\xa2\\xea4\\xad\\xd9>\\xfe<9-uf\\xe5\\x15\\xa0\\xc3J\\xbb\\x93\\xf7k\\xcd\\x18+\\x1b\\xa5Z\\xae\\x89\\xff\\x01y\\x1d\\x19\\x84\\nendstream\\nendobj\\n29 0 obj\\n<< /Filter /FlateDecode /Length1 1565 /Length2 7750 /Length3 0 /Length 8789 >>\\nstream\\nx\\x9c\\x8d\\xb7\\x05T\\x14\\xea\\x166L\\x97\\x80t\\x08\\xc8\\x00\\xd29tJw\\x87H\\t\\x12\\x03\\x0c\\x0c30A\\xa7Hw*\\x08HH\\xa7\\x804(\\xd2\\xd2-\\x1d\\x02\\x82\\x02\\xa2\\xa4\\xe47\\xea\\xb9\\xe7\\xdcs\\xff\\x7f\\xad\\xef[\\xb3\\xd6\\xcc\\xbb\\x9f\\x1d\\xef\\x8eg\\xbfk\\r;\\x8b\\x811\\xbf\\xa2\\x03\\xcc\\x0e\\xa4\\x06\\x83"\\xf9\\x81\\x02B\\xd2\\x00e]#I\\x80\\x90\\x90\\x88\\x80\\x90\\x900\\x11;\\xbb\\t\\x18\\t\\x01\\xfdA\\x89\\xd8MAp\\x04\\x18\\x06\\x95\\xfe/\\xbd2\\x1cd\\x8bDc*\\xb6H\\xb4\\x99.\\x0c\\n\\xd0BA\\x00@\\x11\\x00P\\\\\\x1a(!-$\\x04\\x10\\x16\\x12\\x92\\xfa\\x8f!\\x0c.\\rP\\xb1\\xf5\\x04;\\x00t\\x05\\x00Z0(\\x08A\\xc4\\xae\\x0cs\\xf7\\x81\\x83\\x9d\\x9c\\x91\\xe8[\\xfes\\x04p\\xd9s\\x03\\x80RR\\x12|\\xbf\\xdd\\x01\\x8an 8\\xd8\\xde\\x16\\n\\xd0\\xb5E:\\x83\\xdc\\xd07\\xda\\xdbB\\x00\\xc60{0\\x08\\xe9\\xf3\\xaf\\x10\\\\\\xb2\\xceH\\xa4\\xbb\\xb4\\xa0\\xa0\\x97\\x97\\x97\\x80\\xad\\x1bB\\x00\\x06w\\xba\\xcf\\xcd\\x07\\xf0\\x02#\\x9d\\x01F \\x04\\x08\\xee\\tr\\x00\\xfc*\\x17\\xa0g\\xeb\\x06\\xfa]\\x98\\x00\\x11;\\xc0\\xc4\\x19\\x8c\\xf8\\x03\\x1b\\xc3\\x1c\\x91^\\xb6p\\x10\\x00\\r@\\xc0\\xf6 (\\x02\\xed\\x80\\x82:\\x80\\xe0\\x00\\xf4\\xdd\\x00cM\\x1d\\x80\\xbe;\\x08\\xfa\\xc7X\\xe7\\x8f\\x01\\x1f\\xe0\\xaf\\xd6\\x00\\x80\\x02\\xc0\\xbf\\xc3\\xfd\\xe5\\xfd+\\x10\\x18\\xfa\\xdb\\xd9\\xd6\\xde\\x1e\\xe6\\xe6n\\x0b\\xf5\\x01C\\x9d\\x00\\x8e`\\x08\\x08\\xa0\\xaf\\xa6#\\x80\\xf4F\\xf2\\x01l\\xa1\\x0e\\xbf\\x0cm!\\x08\\x18\\xda\\xdf\\xd6\\xd3\\x16\\x0c\\xb1\\xb5C\\x1b\\xfcN\\xdc\\x16\\xa0\\xa6h\\x08\\xb0E\\xd7\\xf7Wu\\x08{8\\xd8\\x1d\\x89\\x10@\\x80!\\xbf*\\x14\\xfc\\x15\\x06\\xdddU\\xa8\\x832\\xcc\\xcd\\r\\x04E"\\x88~\\xe5\\xa7\\x02\\x86\\x83\\xec\\xd1]\\xf7\\x11\\xfc=VW(\\xcc\\x0b\\xea\\xf7\\xe7\\xec\\x08\\x86:8\\xfe*\\xc1\\x01\\xe5.\\xf8\\x00\\n\\xf6@\\x814U\\xfe\\xb2@CD\\xff`N $@LHHHB\\n\\x08\\x00y\\x00@\\xde\\xf6\\xce\\x82\\xbf\\x82\\x9b\\xf8\\xb8\\x83~+\\x7f\\xc3\\xe8\\xfc\\x03\\xfc\\xdca\\xee\\x00Gt\\t\\xa0\\x00\\xb0#\\x08\\xfdC\\xe4\\x87\\xb0\\xf5\\x04\\x01\\x90p\\x14(\\xc0\\xef\\xbf\\x15\\xff\\x96\\x88\\x80@\\x80\\x03\\xd8\\x1e\\t\\xb0\\x039\\x81\\xa1D\\xffDG\\xc3 \\xc7?2z\\xf2p\\xb07\\xc0R\\x08M< @\\xe8\\xd7\\xe7\\xef\\xd3#4\\xb7\\x1c`P\\x88\\xcf?\\xe6\\xbf\\x87+\\xa8\\xa1\\xf8P\\xcbH\\x8f\\xf7w\\xc1\\x7f\\xab\\x94\\x94`\\xde\\x00?~\\x11q\\x00\\xbf\\xb0\\x98\\x10\\x00($!\\x04\\x90@\\x1f\\x02\\xfe\\x1d\\xc5\\xc0\\x16\\xfcW\\x16B\\xff\\xf8jB\\x1da\\x00\\xa9?\\xc9\\xa2\\xbb\\xf4\\x9f\\x84=\\xff\\x9a>\\xd7_\\x8b\\xc1\\r\\xf8w,=\\x18\\x9a\\xb1 \\x00\\xd7?\\x04\\xb7\\x12\\x12\\x13\\xb2G\\x7f\\x01\\xff\\x9fi\\xfe\\xdb\\xe5\\xff\\x8f\\xdd\\xbf\\xa2\\xfc_\\x08\\xfe\\xbf\\xf9\\xa8\\xa1 \\x90\\xdfZ\\xae_\\xea\\xff\\x8f\\xd6\\xd6\\r\\x0c\\xf1\\xf9K\\x8f\\xe6+\\n\\x89\\xe6\\xbe.\\x0c\\xbd\\x01\\xd0\\xff5}\\x08\\xfa\\xb3\\xae\\xba \\x070\\xca\\xed\\x7f\\xb5\\x9aH[\\xf4\\x0e(B\\x9d \\x7f7\\x11\\x8cP\\x03{\\x83\\x1c\\x0c\\xc0H{\\xe7?T\\xf9\\x83?\\xf8\\xb5`\\x100\\x14d\\x00C\\x80\\x7f=(\\x00~\\xa0\\x90\\xd0\\xff\\xe8\\xd0[e\\xef\\x8a~4\\x10h>\\xfeV\\x81\\xd0K\\xf3\\xef+U\\xa1\\xf60\\x87_\\xdb%,&\\x0e\\xb0\\x85\\xc3m}\\x88\\xd0#FKb\\x00? z\\r\\x1d@\\xde\\xbf\\x19\\x0c\\x10\\x14\\x80\\xc2\\x90h\\x17\\x00\\xba\\xbc\\x00\\x80#\\x0cN\\xf4k\\x9e\\xe2@\\x80 \\xc8\\x03\\x85\\xee:\\x1a\\xfe\\x8d\\x88\\t\\x03\\x04\\x1da(\\xf8\\xdf\\x00PH\\x04 \\xe8\\xf4_\\xa2$@\\xf0\\x1fs P\\x08 \\x08\\xfd/\\x11\\x1d\\x10\\xf6\\xb7(*\\x85\\x96\\xa0\\xa0\\x7fd\\xb4\\xb1;\\xfa\\xad\\x81B@\\x8e\\xc8\\x7fP\\xe0_\\xe8\\x1f\\xaa\\xfc\\r\\xa3\\xefu\\x87\\xa0\\x10\\xff\\xa4\\x86\\xb6C:\\xc3A\\xff\\xc4C\\xb7E\\x10\\xe9\\xf5_\\xf7\\xa1s\\xf3\\x05\\xc1\\xff\\x00\\xffj\\x94=\\n\\x8e\\xbe\\x00\\xf9\\x9b\\xc8\\xe8.\\xfeG\\xfe\\xfd&\\x81@\\xde {\\xa2\\xb9\\x19\\x98\\xbd\\xccS\\x97\\xda\\xa7mg5\\x8a\\x0c^\\xfc\\x9b#r\\x93\\xec\\x9b\\x0f\\x9fs\\xf3\\xfb\\xcd\\xc1\\xdbQ\\xe7\\xa4\\xf8i\\xdc\\xd5YOV\\xe0\\\'\\x8ai\\x03\\xef\\xc9\\x16?\\xa9r\\x1d+\\xcc3_\\xf9}m\\xae\\xc7\\x8fhI1l\\xbd\\xf0\\xbf\\xb4I2\\x1a\\xdfl%\\xfa8F\\xd3;\\xfa\\xea\\xabb]\\x0f\\x13!#\\xbf\\x89\\xc2\\x96\\xff\\x95\\x87\\xbfi\\x88+v3\\xe6[-\\xf6\\\\\\x0f\\x94$\\xa9A>\\xe5\\x99W\\xb7\\xbaw]O\\xd9\\xc2P\\xf8\\xcc\\xa6\\xe1V\\xb5\\xb8\\xf6\\xad\\xcb\\xb2\\t\\xfe\\xb8\\x07\\xb1V!\\xc5S\\xecyv\\xd9\\xd3t\\xacxH~&\\x02\\x1e\\x8a\\x03\\xef\\xdbS\\xc7\\\'\\x93\\x14/Go\\x98\\xb5\\x92x\\x89\\x02v\\xe3D\\n\\xfd,V\\x85\\xe3\\x7fN\\xfb.U\\x98\\x08#\\xde\\xd1\\xdf\\xa3\\xb7\\xa0c\\xc2>\\xa6\\x18\\x1a\\xe7\\xf0S\\xdaN\\xd7\\xa2\\x9d\\xf5+)\\\\\\x81\\x0f=\\x9b\\xa6i\\x1f^sK\\x05B\\xb6\\xb9|7\\xf5\\x8c\\xce\\xe0;?\\xac9\\xd8G\\xa5\\xb9\\xe8\\xe9\\x04\\xb1\\xa94cbWZ4\\x92\\xdd\\x8aY\\x92\\xf1D\\xb3\\x0f\\x16\\xb5V\\xbc5\\x7fH4\\xdb!\\xf8\\xf4\\x93\\xc17\\xfa\\x10\\x89ZR\\x9b\\xeeC\\xa7\\xf1\\xba\\xe7\\xed\\x08q\\x99\\xad\\xb4\\xf7\\x06\\xcf\\x82\\xb3\\x9f\\xd57U\\x06 )\\xbc\\xeb\\xf9\\xdeizjE\\x8bt\\x9bc\\xe4\\xec~(\\x7f\\x84\\xf7\\x83\\xe8Bnq/\\xb0\\xac\\x819\\x83\\xfas\\xb6\\xc6:\\x1c"\\xa3A(=\\xc4\\xe5\\x9dd h0p\\x91z\\xa3\\x93\\xc1\\xf0\\xa3o8\\xce\\xf8L\\x93\\x13a\\xb7\\xcc\\xd0Z0\\x1b\\x18\\xf4\\x8c\\x01\\xcf\\xdf\\xe0-\\xb6{\\x1a\\x8d\\x9e\\xbd>uSU\\xa5\\xe2p\\xf1\\xf1\\xf1k\\xa5\\x1a\\xd3\\xdeO]\\xac\\xdc&\\xceIE\\xa3\\xd6\\xca\\xe4\\xb7\\xbd\\xb1\\xd2\\xe9\\xb8\\x8c>\\xf9\\xa4\\xf1\\xbdCp\\xf3j\\xac\\xc4\\xc8|r\\xc3x\\xcfC+\\xff\\xf9\\xbeFV;k\\xc4\\x10\\xbb^\\\\\\xab\\x8c$\\xa7\\xdd\\xe1<\\x81:\\x1ee\\x9cEW\\xda\\xbb\\x14\\xbb>\\x87U\\x12k\\xf0\\xee\\xbd\\xca\\xa6\\x83\\x96\\xa3D\\xf0\\x1d[2\\xd0I*"\\xb7\\xb1{y-T\\x8d\\x1b"\\x1dp\\xf7\\xa6Zd\\xc3\\x8c(\\t\\x97\\x84I\\xd7\\xf3\\x0c\\xbb\\x84]]\\xef\\xa0c\\xb6\\x87\\x96o\\xa2\\xa8]0\\xf0\\xf1X\\xd4)\\xeb\\x8b]l-\\\\\\xb2D}a\\x11\\xc9\\xf9D0\\x1e \\x96\\xff\\x91\\xa6\\xfa\\x13\\xfb\\x8dvG\\x89\\x8d\\xa9\\xe0\\xa2\\xa1\\x1f\\xc2\\xb3\\xc3w\\x92\\xe6\\x0b\\x02L\\x00\\xa4\\xd7\\x9f{IJ\\xbb\\x14\\x0e\\t9\\xbc\\xa9\\xa9\\x98hV\\xea($\\x9d\\x89\\x9eR\\xcf\\xf99\\xd9\\xd6\\x8b1\\xae\\xe8\\x04\\xf7M{q\\x06\\xe2\\xc8\\xe97\\x1f\\xe9\\xd0\\xd9;\\x9d\\x19\\xac\\xbf\\xfe\\xe2\\x99$\\xf5Zm\\xf0\\x85\\xef95;\\xd9\\x93\\xb23\\xf2\\xa7 \\xff\\xabH\\xfdg\\x82\\x93v\\xfb\\xa1\\xd5\\xf4\\x11\\x1d\\x1f/\\xbe|1%,\\x0f\\xd1&YO\\xb6nn\\xea\\x0e\\x97\\x9c\\x8ah\\x95\\xe5\\xd6\\xad|\\x17\\x16\\x1b\\xfeI\\x96\\x00\\xcbm\\x05\\\'\\xaeDf\\xe8sz\\x12c\\xf2\\xed\\xca\\x00}\\x07\\xe0#\\x0b\\xe3\\x11\\xaa\\xcfw\\xdd\\x0cB\\x1d\\x87Ek\\xa6Z\\xb8\\x99\\x9e\\x07\\xe8F\\xbd0(\\x1a\\xd8v\\x12\\x1e\\xab\\x85\\x00\\x9d\\xe2\\x86\\xd6\\xd5\\x8eGv2I\\xbf-\\xe7\\xbb\\x93<3\\xc5h\\x0c\\xf8\\x11\\xeb\\xd7P,kIN\\xcd(\\x06\\xd6\\xd27/\\xbb?<-\\x86Ma\\x16Ma\\xd1\\xc1\\x18|o\\xf7d\\x19(\\x96\\xfcM\\x02s5\\xb0\\x99\\x0e\\x7f\\xdb"\\x07\\x03\\x8b\\xb1t>mt\\xaf\\xe8\\xf6+\\xfe\\x07a*\\x9d\\xe3n\\xf2X"#\\xf5\\xbb\\xa5O9\\tv\\x7f\\xd2Gv\\x144\\xaf\\x97P\\x9a\\x92\\x8d\\xf2\\x1a\\xcd1\\x04\\xa9_\\xb9\\xe7\\xf8\\xa8\\xd02j\\x8czz\\xfb\\xb9\\x07S\\xd8\\xeb\\xd0\\xe0\\xe4\\x9f\\x02\\xbd\\xda\\xb6\\xdfw,MP\\xdc\\xe9\\xa6\\x8e"lR\\xdb\\xd1\\xd5s\\xe22\\xc6\\x8c^\\x07D\\xc8Oq\\xe3\\xec\\xb6\\xc8\\xcb\\xb4)\\xe8R\\x0e\\x15\\xec)\\xe9\\xadT\\xa8w\\x98\\x1d\\\'\\xa8\\x80o\\x7f\\x81\\x91`C\\x89I\\x0c\\xaa\\xe6\\x8c\\xdb\\xde\\x1b\\x9b-\\xa8\\xe0Z\\xba~=\\x89Mp\\xea\\xb3\\xdcGfuv\\x1dR\\xbe~`M/\\x9ft\\xf0a`\\xdcQ8\\xba)g\\xf0\\xbb\\xc4\\xe9I\\x14[\\xb0\\xf7\\xde\\x03\\x8c\\xed\\xaev\\xb7\\x96\\xf8\\xf6\\xe3\\xc7.\\x85\\xf6\\x03\\xae\\xf5\\xf7P\\xd2MxFeTsa\\xd1`\\xd5\\xcf\\x0fZ\\xc8Z\\xa7\\xf3F\\xc8^\\xca\\xee\\xb6\\xad7L\\x0bX\\x9bs\\xbc~\\xbe\\x10\\xce\\x98\\x08[f\\x90B\\xdc\\x7fE\\xf2s\\xb0\\xab\\xb5#\\xa9e\\x93\\xa8Z\\xd2\\xa5\\xc3\\x97^sraG\\xf9\\x19;\\xacu\\xf2\\xb2<>S\\x1f*\\xc9\\xf0\\xc3\\xc8\\x89-]F\\xa5-}\\x90!g\\x8cL8\\x89K\\x8b7t\\xf0\\xd0\\x7fn\\xbc\\x93@=+\\xa5x{z/\\xeb+\\xd5\\xaa\\xab\\xd4|\\xedL(\\xd5!\\xc8\\\'\\xff\\x0e\\xf9U\\x89`\\xbf\\x14/\\x1f\\xbf\\x9d\\x88W\\xb3\\xd4\\xc3\\xc43\\t\\xac\\x80\\xec\\xd9/\\x0b\\x00R\\xf2\\xbd\\xaf\\xbe\\xd3k\\x05\\xcd\\x8cM\\x85\\xd7\\xc3\\x93\\xa5w\\x1e\\xf8\\\\\\x99\\xb8\\x9f\\xbfC\\xce^4\\xc5G}\\xb7\\xb9L\\x13\\x16-\\xf9l+>\\x81(I\\x8e\\xf8L\\xc3\\x827\\xa5\\xff\\x02\\xc06\\x04\\x9e\\x8d\\xbd\\xb7\\\\g\\xb5\\xaax\\xe8\\x0e\\xbf\\x97\\xe8%\\x96Zbu{\\xd0\\x1d\\x12\\x99\\x1bi\\x0e\\x05\\xa2^\\xb9;X\\xee\\x0f\\xeeA\\\\;qY F\\xbb\\x1b\\x9e?\\x82cDcm\\xbc\\xc3(\\xda\\xb6m\\xee\\xde\\xbb\\x83gj\\xf9\\xed\\x02/E\\xc3\\xe2*\\xe7T\\xbb\\xfa\\x02n\\xe5u\\x9c\\xd7\\x96\\x1c\\x84b\\xdf\\xb7\\xa9\\xcdT#\\xb1\\xbe\\xd5\\x82-W\\xb0\\x81\\x91\\xb4M\\x956\\x95\\xdd\\x1f\\xae\\x1c\\xee\\xd8\\xfe\\x9c\\x9d\\x7fv\\xa1\\xf1m\\x9d\\xd1\\xfd\\xb6\\xf5hCl\\xac\\x91\\xdbH\\x85\\xa3\\xc1\\xben\\xd9\\xe6\\x08ex\\xfd%\\xdd\\xea\\xbeo\\xc1\\xd6F\\x8a\\xcax\\xd8s.\\xca\\x13P@\\xf5\\x17i:\\x02\\xd5Q\\x0cy\\xd5\\xe0\\xb0\\x8ec\\\'\\x1ab9\\xf2\\xc3\\xce\\xf9m&\\xbb\\x13!\\xd6\\xb0\\xb1\\x1a\\x0f\\x13}\\xccG:xV\\xc1\\x1dDT\\x8aC/\\xce\\xc6+\\xf0&\\xbau\\x87S\\x8eu\\xe3\\xd3\\xc2`\\xe5\\xcc/\\xbduZ:b\\xa2&\\x02Q\\x03w\\x1f\\x85\\xb6\\xda\\x8c\\x8f\\xcf\\x7f&\\xc1\\xa4\\x92\\x1a\\x13\\x18(S\\x98l\\xbc\\x9b\\xc9\\x10\\xd3\\\'\\x08;\\xc3\\xec\\xcd\\xd1\\xbc\\xc7`\\x99\\xbfh\\xce\\xa7\\x11\\x1eMQ\\xd8\\xd1\\xa39\\x7f_8s\\x8e\\x98\\xfbk\\xeeeKi\\x15\\xed\\xdb\\xc2\\xfa\\x9e@\\xdf\\x18\\xefX\\xf1\\xb7EAn)a4\\xf8f\\\'j\\xa6\\xd1\\xa9\\\'\\xca\\xaa\\xfa\\xdeZ\\xe1\\xe7D.jnEO\\x9d\\xb9\\xe9\\xcd\\x06\\xda\\xb1\\xf3\\x18\\xa7\\xc7"b$\\x1bB\\xfb\\x98b\\xe6w\\xd2\\xfd>\\xa1\\xf0\\xbbHb\\xc2\\xec\\x0bx6eJ\\x06A\\xf2\\xf3v\\x9b+}\\x18\\x10\\xd3\\x8ak\\xff\\xd3\\x11r\\x85W\\xdd\\xe3\\xfc\\xe4\\xf9\\x8c._\\x15\\x1d\\xd7\\xa5\\xdet\\x98^\\xda\\x1d\\xe5\\xd5\\x11RHb\\x99\\\\,8\\xd4\\xba\\xd0\\x89\\xb2\\xec\\x98\\xb6\\xb5<\\xdf\\x00\\xd5\\x1e\\xc3\\xa3-<\\xa7,\\xf8@\\xa6E\\x13\\xe18\\xf2BD\\x16XK{\\x0f{\\xd4_\\xe1\\xfd\\xf4\\xbcY\\x80\\xd4S\\x06\\xee\\xec\\xf7\\xceE\\xd6X\\x8a\\xc1u"\\x02<\\x08L\\x0e<\\xdd\\\\\\x94g6\\xcb\\xedt\\xbb)\\xa4\\x9dr\\xd6\\xf6:\\xbb"N\\x08\\xbbM\\xf5\\xbfR\\x81G\\xb6>\\xa7\\xcc\\x97\\xdd\\xbe[\\xc9\\xe6?\\xee\\xe3v\\xca/:\\xcc\\xcf7\\xf8=\\xeb\\x96c\\x98\\xda\\x89\\xf7\\xc3s\\xd2\\xb8\\xf6\\xf2\\xf67q\\xee\\x88&3\\x968q\\x0f\\xfe\\x84\\xa7\\xba\\xb79\\xf7)\\xaf\\xf2z\\x12\\xe6WX\\x81}\\xbd|\\x87-\\x08\\xef\\x817\\x9a\\xc6\\x05\\xcfp^tg\\x9dQ\\x98\\xde\\xb0Z\\xef\\xb9Hl\\x8ad\\xa9~\\xf04\\xc5\\xcb\\xc8\\xe0\\xc2\\xc97\\xb1\\xde\\xd7>\\xe1\\xcfw\\x95\\x8f\\xfd>\\xf0-s2Y`M\\xc6\\xc1\\x8f{z\\xcd\\x9d@\\xc9\\x99\\x96\\x80W\\xb4b;\\x01\\xf5\\x80\\xf0\\x16Om\\xf96\\xd6\\x9a\\xf4\\xb9[J\\xa1\\x8c,\\x13;\\xe2\\xc9k\\x16~\\xa2\\xc2\\xf5\\x01I\\xb3\\x17\\xc3\\xbc\\xee\\x1c\\xa2\\\'.\\x19\\xd4\\x1b\\xf4\\r\\\'\\xfa\\xd6m\\xc0\\xd7\\x85&\\xee\\x9eq*a\\xd6\\xcf\\x12\\xa9\\xba\\xbb\\xf1\\x99c3\\x17H\\x8e\\xbc\\xef=\\x7f\\xb3\\xc7\\xeb\\x089\\xda\\xf0NN\\xa2\\xcf\\xdb\\x92\\xe8\\xac\\x96[\\xa7\\x07\\x1a\\x8b\\xdfg8\\x80S\\x9f\\xeb2D\\xf8\\x02DWW\\x84\\x1e\\xdd\\x90<+\\x186\\xcb\\x08S.Z\\x1e\\\\d\\xa6\\xfc\\xd2I(L\\x1f\\x84\\xdb\\xdbb\\x83\\xb8\\x11C\\xa9TX\\x9fs\\xca\\x7fZ!\\xbcr\\x01y\\xd0\\x9cm\\xe3w\\x9e\\x1f\\x17\\xe3\\x12\\xd7\\xb4qQ\\xd2\\x12\\xb4\\xff\\x9cL\\x993TE9\\xb2{\\xbf\\xdf\\xe6rc%\\xc0\\xc4T\\xba\\xc5e\\x07\\xf70\\xf7\\xa0Ga>\\x1a)\\xd7`r\\xea\\x9b\\xeb\\xc6\\xa0{\\xe5.\\x91\\x9b\\x92_)\\xfdZo\\xceP\\x91\\xda\\x01\\xb3m/|z\\xda<\\xed{\\xc87CW.\\x7f\\xea\\xb1\\xf76\\xa7A\\xc6\\x05\\x82\\xfd\\x83\\xa7\\x92\\xb6)\\xa6?\\xfb\\xd99a\\xf3\\x9e\\xac\\x0f\\x84\\xe3Y*v\\x8b]\\x99\\x9c\\xc5\\x0c\\xe5\\x13\\x0e\\xf3\\xca\\xb8\\xb7\\xa2\\xd3\\x9c8\\xb4\\xf2\\xee\\xed3\\x17S\\x91\\x07O\\r\\xf2\\xad\\xf6-\\xb8\\x18?\\xa2\\xe6\\xf8\\x00\\xdcU\\xf3\\x18\\x1b\\xe2\\xe9\\xff\\xc2\\xb30`\\x96\\xc9\\x13\\x9f\\x00.\\x83D\\xfc0v\\xd4K\\xa5|\\xe6\\xe7a\\xc1HX\\xcd\\x89\\xad\\xd0\\xb7\\xea\\x80s\\x06\\x8505\\xf9]\\xb1jw\\xab\\x1c\\xe5c\\xde\\xf4d\\x12\\xce\\x88"\\x17L\\xcc\\x13n\\xd3Je\\xde\\x98\\x05\\x88:\\x83\\x0c\\x89!\\x9d6\\x12\\n\\xa9\\xe4\\x16\\x8c\\x0f\\xbaK;\\x04\\x0b\\x15\\xed[x\\xc6(1J\\x15;\\xadD\\x99d\\xf4&\\xfd\\xea\\xf1\\x98Eo\\xf6\\xf2.q\\xc4\\x8e+6\\xde\\xe9Tw\\xce\\xc9\\xb1\\x98\\x8a\\t\\xdc\\xea\\xc8\\x0e\\x80cj\\xaf]0\\xd1\\x14z<\\xd90\\xce\\xc0\\xe6\\xe14:\\x97\\xcb!\\r\\x96\\xee\\x18@\\xaaa\\xda\\x04\\x84\\xe8\\x9b\\xf2\\xd3\\xed\\xd3\\x07\\xcf\\x91]e\\xaa%\\xc9}_\\x8fg\\x92\\xe1\\xb1x\\xd9\\x1a\\xf7t\\xb937\\x9aL\\x1d\\x16\\x0b:%R\\x8d\\x9fU\\xe1S\\xbc\\xb7\\x0b\\x18=|>\\xf5\\xf3\\xcb\\xdem\\xf4h\\xbaz\\xe8\\xd7o\\xbf\\xef\\xca$\\r%\\xd0\\x0c\\x96Z\\x94f\\xce\\xadV\\x1b\\x8dj\\xbc#\\xc8\\xfe\\x98\\xcf\\x8d\\xa6\\xbc\\x0e\\x9c\\xb3K\\xb6e\\xbc\\xba\\x8e\\x00b<\\xd3\\xbd\\x0f9\\x1c^\\xdaJ,8\\xb7X\\x9f~I\\x83\\xb7k\\x83\\xd4\\xca.\\xa7\\xf6\\xe8\\xcb\\xe8\\xc4\\xd7:\\xca\\xc9KuE\\xf5+\\xf9\\xd4\\xb2\\xf1\\x96\\xd5\\x94\\x025vul\\xbf\\xda}\\xd0\\x89\\x07\\xa4nFed~\\x0f=\\xde\\xec\\xbd\\xf5\\xd0\\x8e\\xb9\\xe6\\x11\\xb7a\\x1c\\xf9\\xac\\x8b#\\x14?a\\xd0\\xdd9\\x84l\\x13Y\\x99!3b\\x95\\xb8\\x18{")\\xfd\\x85\\xcf/\\xb2\\xb6V\\xee\\n[\\xeb\\xb6j\\xa8\\xb0\\xe5\\xc3*\\x95\\x16?\\x95\\x1e\\x89\\xc5V&\\xa9\\xce\\x13\\x06N\\xad\\xe0\\xe5\\x9c\\xd3\\xb1\\xcd\\x0b6\\xe0\\xd1(\\xd0\\xe5\\x99\\xf48\\x94\\xf7\\x18W=\\x9fo\\xb6g\\x94/\\x8dz\\x932\\x08\\x82\\xb8\\x16i[z\\xa2\\xa6yc\\xa2\\xb1\\x9a\\xa0\\xc1\\x18\\xf68\\x19\\xe3$\\xd33\\xab#\\xedk\\xe9\\xa6\\x1c\\xfb\\xa4\\x80\\xed\\x96\\x0f\\xa6vxBT\\xa5\\x8f\\xae\\xd2O(K\\xbb1\\xca\\xd5\\xc7\\x93U\\xec\\xf5\\x82\\x8a/\\xd1L\\xf1"\\x03\\xa7\\xe8\\x9d\\x81\\xd3\\x95\\x11\\x8c\\xa7\\x86\\xfe$\\x1c3%-\\xfd\\xef&\\x1b[\\x8c\\xe8\\xecE\\\\9&\\xdb\\xe6\\xb4rs\\x89E\\xddFH\\x0e-?\\xbe\\xb3L\\xe9w\\xf6\\x1fy\\xc4\\x94E)\\xb6\\xb12D$\\xa5\\xd5\\xd0\\x1f\\xd7|\\xb7\\xffxzf\\x92H\\xa8\\x92t\\xfa\\xd3K\\xa7\\x1f\\x1b\\xf4\\x9d6D\\x8c^\\xd0\\xb5\\xb7~;m\\x86\\x8a\\x8d\\xb8P\\xec\\xe2\\xd2fu\\xa7\\x14M\\x8d\\xf4\\xd8G\\xf8\\xaa$?kH\\x0f\\x93`A=\\xa6\\xd97\\x8d\\x9b\\xc1m\\xa2\\xd2\\\\\\x11\\x04\\x83V\\x9fL^\\x993\\xe3#d\\xdf\\xd6\\xe56\\xad\\xa6w\\xe95\\xcb\\xaf\\x12\\xe9\\xbe\\xec\\\'\\xde#\\xd9\\xe1\\xac\\xf9`\\xd3\\xc0\\x9fi\\xc2\\x81\\xe3\\xa6l\\xe5\\xe9\\xbe\\xc6tV&\\xd6P\\x9da3C\\xafIB~#\\x80R\\xd4\\x1b\\xa4}\\x9f Z5\\x8eT\\xb8\\xdc.De\\xe6o=6_\\x99\\xa2\\xe9o\\xfd\\xa0x\\xb3\\x16|\\x08-\\xe8\\xf6X\\xabx\\x97P\\xa5>\\xf4\\xed\\x95\\xc4(_\\x85[-\\xd6\\\'\\xd5\\xe2/M\\xe2R\\xf7\\xd3&/K$4\\xc2\\xef(>\\x9b\\xa6k\\x07\\x8d\\x1fU\\xfa}\\x1a\\xab\\xca\\x8d\\x937\\x9d\\x1c\\xd4+\\xe0s781IY\\x86\\x8c\\xbc\\xbc\\xe5\\xe8\\x94#\\xa3y\\xdd\\xbe\\xd2\\x99&\\x9f\\xcf\\x9a\\xb1\\xa0493\\xa9\\xe23VK\\xac\\xb3\\xab{\\x9fHu\\x89\\xafG\\xd4\\xbeh\\xa6\\xd3\\x7f\\x87\\xe8N@\\x12i$)\\xee\\xa6\\xdc\\xf9\\xe7\\x1a\\xaa\\x86aoj;\\xed}\\xe1\\xcb}\\xac\\xb6\\xe8\\x0b\\xeb\\xcd}\\xeb\\x87\\xa78\\x0f\\x14M%\\xaa\\xbc\\r\\x03A\\xd4l\\xfb\\xaaZC\\x8e\\x82b\\x98F\\xc2\\xc5\\xc4./\\x96\\xfbH\\xeb\\xa7\\xa0\\nXj\\xb7\\xa7259\\xa8\\x1d\\xfc[\\xd2x\\xd1\\x0f\\x9a\\x9du\\xf8@\\x8b^\\tW\\xb61`\\xde\\x95\\xfc8s\\xeb#\\x95\\xec,}\\xf4\\xd3P\\x92\\x8a\\xe0\\x96L@\\x85\\xc7\\xb8 .Y#M\\xf2\\xb2\\x88\\xfclBof\\xe0[|\\xdc\\x19J\\xcaW\\x0c\\x88\\xc4\\x9a\\xec\\xee\\x04\\xe3\\xa0\\x00\\xd3,\\t\\xde\\xe4\\x0b\\xd2\\xf3\\xc3\\x10\\xcfQ\\x02\\xc9\\x8d\\x88%\\xd7\\xb5\\xc5\\xd2\\xef,\\xfdo\\xe9^~\\xd8\\x0b\\xf0\\x06\\xc8IX\\xfc\\x08\\x08\\xa5\\xe8\\xcb\\xaa\\xdf\\xc9yd\\x9f^\\xf4\\x95e\\xc6%\\xb0,N>\\x80\\x83\\x8a\\xcc\\xce\\xec\\xd5\\xf3&\\x8fY\\xb0j\\x8c\\x08-6\\xa5w\\x92\\xdb\\xd5H\\xc2\\xcf\\x0b\\x0b\\xf1\\xe9"\\xd5#\\x89\\xfc:\\xe5M^i\\xed\\xa4\\xa9/Q)\\xaf\\xd7~.\\x05\\xaa9\\xe0\\xe89\\x95\\x01\\t\\xd4GZ\\xb6\\xd8O\\xb0\\x931\\x86gCJR\\xdf\\xec.\\x8c.o\\xf4,\\x84\\x02}\\xd6\\xebh\\x977\\xf1\\xca\\xa9"\\x87B\\xbc\\xda\\x95!\\xb8{[e\\x15\\xafs\\x86<\\x80j\\x9d\\x86\\x8e\\xb9@\\x9c\\xd5\\x9e\\xd6\\x984)\\xab\\xb4o_\\x14\\xde\\xb7\\xbd\\xf8\\xcc\\x8c5\\xbf\\xc9\\xd5\\x13\\xc9\\xd8`\\x1d\\x9b\\xc9\\xa8\\xca\\x843Vw\\xc5\\xde\\xf4\\x9a\\x8b\\xd8Q\\xcb7j\\xe8\\x93\\xf5\\xdd[/\\xea9\\xd3\\xeaj\\t\\xb0\\x0e\\x1aI\\x8c\\x00\\xf5\\xc2\\xc3\\t\\xe1\\xb6O\\xdbh\\xfaB\\xf3\\xf7\\xcd)Hg\\xc2-\\x9a\\xf2\\x8e\\xae,\\x18C\\\'\\xc7\\x9d\\xc2\\x1c\\xba\\x08\\x1fHM\\n~\\xf2\\xcf;\\x9a4\\x1dm7\\xb1\\xa1\\xa0Y\\xe2\\xb8s\\xcf\\xe6E\\x05M\\x98\\x1c0\\xe3\\xc2\\x97rD}V}\\xcd\\xbbo\\x9bX\\x10+\\x8a\\xb5\\xb6\\xa1\\xa8Z\\xed\\xf4\\x18\\x86[R\\\'\\xcb\\xc7\\x93\\x14WM\\xfb\\xf1\\xe4\\xf6\\x1c\\xdb\\xac\\xf9w\\xd8\\xac\\xf4\\x8a-G\\xa2\\x8b\\xf2\\x12]H\\x7fuO!j\\x8f\\xeeX\\xbb\\xfdqY\\xcd \\xea}<\\xee\\xfc8\\x00[\\xf0$\\x0bu\\xeee\\xab\\x8a\\x8c\\xcbi\\x03\\xb0AX\\x82\\x03\\x9e\\x1c&\\x96\\xdfZ\\xbb\\xcai\\xc6\\x8c\\xbd\\x0cs\\xf9\\x18\\x11\\x9e\\x15IS\\xcc\\xc9\\x032r\\xde\\xe4\\xbf\\x1d\\\'p\\xd7\\x99\\xaaD&\\xce\\x19O\\xb7\\x10\\xd6\\xfb\\xb1\\xc2\\xbe:\\xe1\\xf6\\xe8I\\x8f\\xf79\\x17\\xf3\\x01\\xf8\\x1d]\\xb4\\xd7\\xad&\\xea\\x9fzCM\\xa8\\xf5\\xb4\\x8f$\\\'wM\\xf6\\x8f\\t\\x12\\xe5J0[\\xc4\\xad\\x01\\xa6\\x19\\xcf\\xaf_\\xdd\\xab\\xc5\\x8b=\\xb0dLvL\\xdc\\x18\\xd9\\x9b\\xd9M?W\\xb0D\\xcc\\xb8b\\x04\\x9d\\x8a\\xbaj\\xb5\\x1e(\\x08V\\x19\\xeb\\x97\\x8dB\\xcd\\xb5\\xacX\\xdd\\xfa\\xefl\\xee\\xfb\\xfa\\x01\\xf3\\xeap\\x19\\xe2R\\xdf\\\\\\xe3fm\\xf2`\\xe3Fj]j\\xef\\xcf%\\xfb\\xe3pu\\xe4C;\\xbc\\x94)g\\x9a\\x00\\xfd\\xa2\\x03\\x1cX.6\\x1d\\xed\\xea\\x15\\xe4\\xcb\\x02\\xd5\\xe6\\xf1\\x95\\x97v\\x96\\x07\\xcdZ[\\x92\\xc5it\\x07\\x12<\\xac\\x1c,\\x18\\xc1##\\xd9\\x15\\x14gq\\x1c\\xf7\\xbe\\xfb\\xa9\\xff\\xdc/J\\x90\\x7f\\x0ci\\\'{\\xd9U\\xc6\\x1d\\x1a+\\xc3\\xe1\\xef\\x19\\xaeKJ\\xd7\\x82\\x7f\\xf6\\xae+\\xc7\\xea$\\x87\\xd4\\xd8\\x98@\\xb5\\x80T\\x07v\\xe0\\xba-p\\x15\\xd9=\\xae\\x97\\xc3\\x10\\xc7\\xa1\\xf0\\x18\\x93l\\xc283V\\xea\\x18T0x\\\\\\x9f\\xfe\\xbd&\\xbc\\x7f|4\\x86\\xe6YC\\x9a}\\xd6\\x8b\\xa0%p{\\xce\\xad>(\\xf1Q4f\\x07fG\\xfb>+\\x13\\xcf\\xf1u\\t\\xb6/\\x15\\x97\\x1eW\\xceH\\xd7E\\x19v\\xc6\\xe3\\xfdL.r\\xbc\\xd6\\xb2\\t\\x97\\xf4\\xfb\\xca\\xd1\\xcf\\x80<\\xca\\x03\\x99%+\\x9a\\x14\\xd9\\x89\\x04Tv\\xc8\\x0bx\\x84\\x0b\\x96\\xfd\\xb3\\x87\\x1e\\x1d\\xa7\\xc8`yKM0\\xb3\\xac\\x87\\xc3\\xdad\\x81\\xb9\\xd7\\xfe\\tYf}\\xfd"5\\xb07\\x94W\\xa1l#\\xf4q@\\xd1\\x04\\x94\\xd7\\xb5\\xbb\\x99pwR\\xfb\\x05\\xc9\\x18\\xef%\\xa2\\x05\\xc1\\xcbu\\x81\\xa9Z\\x99\\xd6\\x0f\\xe4\\r\\xd7M\\xd9\\x0b\\xaca\\xdf\\xe4\\x84\\x95\\\'\\x0c\\t\\xf8\\xf5\\x1a%\\x93\\xf0L\\xb0\\xabT\\xd2\\xf3\\x8d\\xd4u<\\xf8\\xb2A1g\\xd0\\xdb\\x19\\xc1P\\xe4\\x82\\x97\\xaa&=T\\xb7\\x94\\xe8x\\x07\\x87\\xd0\\xd2\\xf5\\x9b\\xdf\\xe3\\xd0\\x87\\x83\\x97\\xb3-\\x9b$\\x0c\\xe2\\xb6\\x1c\\xa31\\xb44;\\x8e\\xc8kOV5\\x1a\\x03\\xc9o\\xfeT\\xc9\\xbc\\xd8\\xbe\\x81z!\\x1d\\x0b\\xbcrJAQ\\xba4\\xe4\\xa7^\\x8eG\\xf8\\xa7\\xf7\\xc5.\\xd6\\xae#b\\xc5\\x99V\\xca\\x83\\x14\\xe735\\xb5b8\\x13\\xfc\\xf8\\x15!\\xb5\\xf7\\x9ce\\xbe\\xb9\\xb1U\\x1a6\\xdd\\x15cvp\\x10\\xba\\x83\\x12\\xe1-c\\x9eQ\\xb6\\x0f);\\xb6\\x98$\\x1d\\x8f\\x99\\xf2\\x07\\xbeU\\xea~$\\xb3u\\xbba-\\x97\\xc4$\\xf2nM\\xcbx@G\\xccRH\\xdb\\x97C?\\x9e\\xa3\\xc4\\x97\\r,\\xf8\\xfa\\xd6\\x03b;$2E\\xef\\xc4Wz\\xa7\\xba5\\x07\\x93b3\\xdc\\xf8{\\xbd\\x15\\x0e\\xb1&\\x17>$ &,\\xdf\\nc\\xb4E\\x11\\xc6\\xea1&(\\xcf\\xd9\\xa5?\\xe7-\\x00o\\x05\\xb5\\xbe\\xc8\\xe7\\x1d\\x88=+\\x9f\\x87\\x92\\xa3\\x02V\\xb3_\\xc6V\\x1d\\xc4\\xee\\xbb@\\xda\\xa8RSU\\xde\\xc8\\r\\xd8`\\xe7\\x10\\x04D\\xcd5/\\xf2\\x00\\xa3E\\xe4\\xd7\\xa5J\\x07\\xe0b\\x13\\x07\\xd5)\\xb2\\xc6>o\\xac\\xec\\x1e\\x0cXb\\xef\\x82\\r:z-\\xde\\x19\\x88\\xfb\\xc67\\x1a\\xe7Nh|\\x0e\\xd9\\x06\\xc7\\xac\\xb4\\xbf\\x12:\\xf2\\xae\\xf2O49\\xe9\\xa6\\x9fd\\x1b\\xe9_\\x88\\x9d3\\xfc\\xc0X-o\\x03@i\\x15}R\\xfeQ\\xd4$\\xeev\\xf0\\xf8\\x87\\x18r\\x1c\\x94pNi\\x95\\xc0\\xc0\\xd2\\xf0\\xb6\\xe6\\xb4\\xed\\xfa\\xa8\\x8d\\xd00\\xf4\\x86\\x9a^\\x1fR\\x11\\x19\\xb9\\xd9m\\xf7JS\\xbf\\xbf\\x9arl\\x89\\xfb\\xa3+\\xc8\\xc5UHQ\\xe2\\x0e\\xe4\\x1b\\x99\\x84\\x9f\\xe0\\xcc\\xd3[c\\x8ci)\\xf8\\xd0\\xacE\\x03\\xd9\\x99\\xaeNH~\\xe5Q\\x0c\\xab\\xf1\\xf6\\x89\\xb5p\\x9c\\xb6W\\x84\\xe7\\xd4OE\\x19\\xcd\\xe5\\x899\\xb9\\x86\\xa7]w\\xb0@\\xea%\\x01\\xb3\\xdd\\x0b\\x84\\xa1s\\xbb\\xb6\\x13:\\xe9\\xa3\\x1c\\x14\\xf2I\\xa1\\x83\\xfcHb\\xdd\\x8d\\xab,\\x01\\xbc\\xca\\xe7\\xf9\\x80N\\x88\\xa3?\\xc9\\xdez\\xc6\\x9a\\xd2\\xbdl\\x0c\\xeeG\\xb8Y\\x148\\xdbo+-\\xeb*\\xdb\\xb7\\xe5\\xc4\\xeeoX}(|\\x1d\\xde\\x8f\\xa9\\x94\\x7f\\xc3\\x18\\xb5",:\\xc0\\xfaM\\x8d\\xed\\xd5\\xb2vV\\xa5\\xce\\x8d*\\x8f\\xd2\\x8e[)\\xe3\\xa2\\xd7\\xad\\xfc%{\\xbe\\x81\\x1ag\\xbe\\x97\\xb2l\\x8e\\xad\\xde\\xec\\xd7\\xbcwWt\\xc4Ds\\xd3|.v\\xde\\x1aa\\x10\\xc4\\xb1\\xc5?;4F4\\xc5\\x87\\xf1\\x8e\\xe1\\x1f\\xb9\\x94\\xb1\\xb7\\xf7\\xf6\\xaf\\xcd\\\\\\xccnw\\xc1=6_j\\xd5d\\x87\\xbcM\\xac}Rs\\xbb3d\\x83\\xf4\\xc3)\\xfd&\\xfe\\xa9\\xc6\\xee\\xb3\\xaa\\x90\\xc7\\x8bx\\xe4\\xc6\\xfei\\xc7\\x9c\\xb6\\xd4,\\x12\\x96\\\'3\\x16\\x1c\\xc1\\x02J\\x9e\\xdaR\\xa1\\xa2~\\x81\\xc3\\xd5\\x9c\\xaa\\xa9\\xb4\\x90\\x8d\\x93\\xa2\\x95\\xa5\\x9fJR\\xc4\\xe2N\\xef\\xa3\\xa1\\xc6\\xb79\\x02\\xf6\\x86\\xd4t^\\x88\\xc1\\x81\\x01f\\xdb\\xd9\\xad\\xf22\\xa3\\x1a}\\xd5+L\\x06\\xfa<\\xaa\\xa2\\xec6\\x93\\xc38!\\x86>Q\\x94\\x02\\x80\\x10^`;f\\xe8\\xc1\\x87\\x80\\xe5\\x90c\\x99\\xe1\\x11+\\xe3\\xe7\\x10mU\\x85\\x8a\\x0f\\xec\\xb4x=\\xaf\\x0cY\\xa7\\xf07\\x96\\x0f\\xf7\\xd8MU\\x0eK\\xa3*b\\xe2[^P\\x87Ol5\\xfb\\xec\\xb1D\\xca\\x08\\xd1\\x14\\xbb<\\x16(enL\\xfb\\xc2\\xf5S\\xaavq\\xfd\\xd2\\x81\\x90\\xa58UH&!!]\\xd0\\x12\\xb3;\\xe6\\xf0>\\x9b\\x07l\\xdd!\\xfeQ\\xb6\\xfe\\xfdwxr\\xbe\\xfc\\xdc\\xe57\\xe5\\r\\x0eLgEN\\x0f!\\xfe\\xd0`\\x02\\x9d\\xe9Z\\xc2\\xef\\x9f\\xd4\\x12T5&^X\\x05B8\\x19nH\\\'\\x9e&\\x0fR5\\xaf}\\xff6\\xb2\\x99\\x88\\xba\\xf8$\\xfe\\xa0\\x14T\\xd4s\\x19\\xb4\\xaf^\\xa5\\xd4\\x01mLx\\xaf\\xad;\\x14\\x95}\\xa9\\xcft\\x11\\x9b\\t:\\xba\\\\\\xc2\\xcd\\t\\x9e\\x0cI\\xfa\\xdae*\\xef\\x0c3\\x12\\xf3y*\\xbf\\x94\\xe1\\x99\\xdb\\xdddq\\xad\\xc0Y\\xbf\\xcf\\xfb\\xce\\xcd\\xe7\\xb9\\xd8\\x86\\xc2]i\\xf7\\x9c\\t\\xea\\x9e\\x83\\x1d\\x02\\x8f\\xd6\\x07\\x8f}\\x86\\x89\\x84W\\t\\xf2\\xae\\x03\\xe99\\x14\\x86\\xeb\\xf5\\x902\\xa1\\xb1\\xb9\\xd7gr\\xd8#5\\xb7\\x0e\\x12\\xe6\\x8fa_;\\xdf\\x9a\\xf3\\x96i\\xf7.\\xbc\\x08I\\x88V\\xeb\\xeaA\\x86\\xf9v\\x0b6\\xfa\\x1a\\xb9\\x06\\x07\\xfd|\\xe4\\xcb\\x97\\x03\\xe9\\x92\\x12y\\xcfQ\\x7f\\xcb:\\x9e\\xb8\\x9c*\\xee\\xc6\\xe7\\xa2\\x9b\\xa3\\xa9\\xc2\\x8a(/\\xa2\\xde\\x93\\xb7\\xc0\\xd3\\xec\\x0be\\xcbW\\x94\\xb2\\xf09\\xb6fU.\\xe9.^\\xe0\\xcb\\xa3;N\\xa1\\x19\\xc9\\x08\\xb93V.\\xf7M\\xc3\\xb6\\xe2\\x93\\\\V#\\xc3w;\\xc5\\xc6\\x1e@\\xef\\xa8\\xa1"\\xbe\\xcf;@\\xc7\\x81HK\\xf5\\\'\\x1d\\x8f\\xbc9\\x98\\x87\\xd3\\xc8\\x83\\\\_>o\\x11S\\xbd,\\xe1$\\xbe\\xf4\\x8dWs{v\\x9e\\xf1\\xa82\\xea`\\xd1\\xcd\\xa4\\xcbo\\xf4\\x89s\\x060\\xa8\\xdb":\\xe99W\\xef\\xddj\\x8a+\\xcf,\\xa4\\xfe\\xbb;w\\xa5\\xf3\\\\\\xc7\\xf2\\xe9\\xe8_\\x88\\x06\\xc1\\xe8\\x0f:\\rn\\x02\\xa7\\xf2\\x89\\xcb\\xb7_\\xbf\\x84\\xc8\\xac\\xc7\\x9c.\\xd5-]\\x0f\\x02\\xfb\\x1f\\xd7\\x1d\\xf9h*dF\\xc7\\xb38\\x1e4\\xea\\x84\\x1f\\x15\\xab\\x8a\\x17\\xcc\\x92\\xcb\\x86\\x8e\\xf0.}\\xf2\\xca\\xca\\xcd\\x14\\xb4\\t)\\xe45\\xd3;\\x0c7\\x1d\\xd1\\xd9yg\\xa2)o\\xde\\xbf\\x95E\\x8fr\\x15g\\xee\\x85\\xaf:\\x95\\xb4\\xd8\\xa6F\\x10\\xd2 =\\xe4~\\x92}\\xd6\\x95\\xab\\xbe\\x96?G}\\x16\\rt\\x96\\xb0uQ\\xbf)\\xf5\\xc2\\x9cI\\x0f\\x7f5X0\\x9dQse\\\'\\xf9\\xd1_b\\xa7+h\\xfb\\x8b\\re\\x1aE7\\xa6\\xe2\\x8f\\xbe7\\xc2\\x88\\xfb\\n{\\xf0\\x8f\\xae\\xf1\\x1c\\xf7\\xa0\\x9bS#\\x11\\x0c\\xd0\\xca\\xb9\\xb7\\x8f/\\xa8bF\\xdb\\x1c\\xb4U\\xf4\\x1c\\xc3r\\x99\\xab7\\x82\\xc4\\x85z\\x83E\\xd9Z9\\xc4S\\x8e\\xebD\\xa5V\\xaa\\x86&\\xaf\\x8f\\x87W)>\\x99\\xa9W\\xe9?\\xb81\\xae6\\r\\x95*\\xcd\\xe1\\xcc\\xe4P\\x8be;x0\\xba\\xa6`\\x1a{\\xd4\\xde\\t\\xc7\\xf9\\t\\xd2\\xe3^F\\x16g~0+\\x1b\\x1e";\\xcay\\x8b\\xe1\\xc7d\\xb7\\x16w\\xbc\\x05\\xadc\\xca\\x9e\\xec]M\\x1dj\\\\`\\xf6\\xa7_S\\xe6\\xd4\\xb7\\xbb\\xb2\\x1e\\xd5:\\xa4t\\xbfW\\xd6x\\xb5.\\x1d)\\x1cC\\x1e\\x00C\\xd0\\x14P\\xc3w\\xc2\\x07@W\\xb76i\\n\\xbbE\\xbe\\x84D\\xb6ds|\\x8b}\\x85S\\x97\\xe1\\xb9[\\xd7MU\\x14IT\\x1c*6Z\\xdd\\xbcV.Y\\xc2\\xf7V\\xad\\x10\\xbf\\xe5\\x14\\xf9\\xdck"y\\x1f\\x1b\\xf0\\xba\\xa1\\xfaa\\xfb3y\\xd6\\x83!\\xd2Z\\x10l \\x96\\xef\\xf8r\\xeb\\x05h\\x95\\x8e\\t,\\x9e\\x01\\xe8iv7#^5\\xf6\\xfe\\xd1\\xbb\\x7f@\\xb9m\\xfd\\xe5s\\x99\\xeckhP\\xa6[\\xfc@`\\xd4\\x9e\\xd5\\xa4\\xef#*\\xba\\xe8"\\x9f\\xf5\\x8f\\x1a\\x01\\x19\\x8dc{\\xd7Y\\x01\\x1a!\\r\\x97S\\x83ku\\xbc#\\xa1J\\xe5\\xda\\x0c\\tL\\xb4S\\xd9,\\x8d\\xcfU\\xb2\\x8a\\xef\\x9a#\\x02\\x9f\\x81\\x95\\x0bl>\\xe9\\x98\\xce\\xdc\\x8b\\xdd\\xbe\\x7f\\xab\\xf3\\x9e\\xc0Y\\xf6I\\x12T\\xfad\\xfbf\\xa6\\xcd\\xee\\x94\\xd3\\xcc\\x81Kc\\xbam\\xbd\\xc1\\xa2U\\x9eP\\xd5\\xdb|\\xafz\\xe63q\\\\\\xa0\\xd8\\xc8\\xa7\\xcb\\xbc,\\xe1\\x05\\xd7x\\xe2\\xe6\\xaa\\xcc\\x9bQ\\x1d\\x07\\x08\\tK\\x84\\xa7,\\x89\\xa23Y\\x8cJP\\xcb\\xf0~\\x8dan\\\\\\x83v,\\x0b6\\x9d\\xe5\\x92\\xf8\\xc7\\xf3\\xb5MI\\x97\\xda\\xb4;\\x12\\xdf\\xa2X\\x9c!\\x8b\\x16E\\xf3/\\x95\\xbf;\\xd6\\x8d:\\x81\\xcc4B\\xca\\xb3\\x07pS\\xb0\\xe6fi\\x88\\xc2\\xea\\xa3\\x03\\xfa0^\\x14\\xa8s=M=\\xc3\\x03r\\x9c\\x04t@\\x1c\\xc0\\xc88\\xc6\\xef\\xc1\\xaeL\\xab!w\\x1d\\xdd\\xaeR?\\xb9-\\x9blt\\xee\\xa8\\x9c\\xc5\\xa8H\\xdb<&\\xf2\\x19\\xa8\\x8aj\\xdc\\x1d\\xc1\\xa0\\x95\\x15\\xa7a+\\xe8X\\x84w\\xd5\\x02\\xa5\\xf4\\x1c\\xbd\\x1b5\\xcc\\xbaf\\xa0\\xbb\\x1b\\x95S\\x07\\xa5]?\\xedl\\xb36\\xad\\x90@\\x89\\xac\\x9fT?H\\xbb\\xbf\\xc2\\x0f\\x82\\xf1v\\xb3;\\x9b\\x07\\xb5\\x03\\x90\\x92tcT\\x8fD\\xd8\\xee\\xb9\\x91\\xaf\\xed\\xc4\\xaf\\xb8\\xa4\\xb7\\xd8\\xd7E\\xbd\\x9eZ\\x9acd\\xbf\\xe9\\xa4y\\x94)_~\\xf04x\\x06YB\\xe6\\xce(\\xcf#X\\x97\\xe8\\xad\\x88\\xba\\xf5\\xd6\\xff\\xc9\\xc3b\\x8a\\xb6L\\xeeW\\xdf\\xf3\\x18\\xc5\\x7f\\xcc\\xaf\\x9e\\xb3\\xd2\\xd4\\x03\\xeb\\xf8\\x03O\\xf2n\\xf8"\\xd5N+u\\xf51\\xd5s\\xcfOt\\x8f\\xcf\\xef\\x1b\\x96SFi\\x07\\x1f\\xe2E\\xe7O b\\xcd&\\xa5\\x8bz\\x98\\x98\\xfc5\\xe4x\\x03\\x88ht\\x92\\x94\\x1b\\x1c\\xf2\\x84\\x16\\xc3c\\xcdtLp\\x007s\\xf1@\\x86\\xc3\\x05\\x92D!\\xd7\\t(0\\xa3\\xb9s\\xc5\\x13X\\xff\\xa1\\x1c\\xd5\\x9e\\xcc\\x03\\xb3\\xb3\\x0eJ\\x11\\x04\\xf7\\x16x\\xa7\\xfb\\xf4\\xda\\x13\\xad\\xbc\\xb1\\xf6\\xa4\\xc4=q\\xb9\\x04\\xdd\\xbb\\x9cH\\xbe\\xabE2\\xb5\\x1c\\xe7\\xbc\\x80\\xe3\\x96"\\x08!\\x17\\xa3\\xee\\xaeWT\\xb2\\x86\\xebI\\xcc\\x9fd!\\x1a\\xed\\xf5\\xdc\\xa8N\\xb8\\x8c}G\\xf2\\xf1n\\x1ddh\\x8aPjP\\xde]\\xf4\\xe7?\\x0ba\\xd2T>\\xb5\\xd3\\xb6\\x7f\\xf5e7B\\xd9.h\\\'!\\nl\\xbdh\\x1cZ1y\\x04]\\xa5\\xd4\\xe5\\x8e\\x10|\\xba:\\r\\xe3F\\xddZ\\x8e\\x92\\xad\\xb1a\\xb1@\\xff5\\xa0[\\xc5gu\\x8d\\xea\\x8f\\x00\\xeaV\\x80\\xda\\x91;y\\xe3\\xf2,M\\x8e\\xc0`-\\xcc\\x85\\xaa\\xf7<\\x13-\\xbd.78\\xe9\\xec\\x97?\\x1cx\\x08\\x0b\\xc6\\xb0&\\x9b5\\x1c:\\x865\\\\\\xc4\\x89\\xfd%\\xbd\\x0b\\xed\\x86?)\\xc9\\x9e1zH\\x9fk\\x9c!;L#\\x987\\x06\\x85^\\\'\\xdd\\x1b\\xd4[\\xabZ\\xa1\\r\\xc20W>}\\xd9\\xfa\\xf0\\xb6\\x82W\\xd8C\\x9d\\\\\\xd4\\xc11\\xb3\\x1bk\\x841B\\t\\x0c\\x930\\xb9n\\xd5\\x08\\xb4\\xfb\\xb1\\xdc\\xd1\\xc5gW\\x9a\\x07\\xe8z\\xbf\\x05\\xf6\\xee\\xbd&k\\xdcl\\n\\xdd85#1\\xf4k\\xbe\\x05\\xc9Z\\xa4\\\'\\xe5E`\\x12\\xd0%\\xd7\\xda\\x0f<\\x97\\x87_\\x7f\\xdfU\\xa3\\xa3\\xd9\\xb1|\\xd0/\\x8f\\x82\\x86\\xd6\\x99\\xd5\\xb6\\xeeb\\x9f\\xcd\\x90>\\xb0\\x85\\x1d\\xfb\\xcb\\x85\\x96\\x9bX\\x83\\xa7p\\xfa\\xb1\\x0e\\xb0\\xbd\\x08_\\xb9,\\xf2\\xaa:Gj\\x16\\x9e\\xec\\xa5\\xe1\\x05zqT\\xc8\\xa2NA\\x89\\xb2\\xdeO\\xe9\\xaa\\xa8?\\xc8yd\\x8fDe\\xea\\xed\\xcd\\xe6\\xbe/#\\x98V\\xa3;\\xb3\\xda-b?\\xc09\\xd0\\xc1~\\t\\x11\\x06\\x14\\xf7[6\\x93z\\xd4\\xd4u\\xbe\\xec\\xed\\x85I|\\x13\\x8d%\\x19\\xa6\\xf9a5\\xb7\\xd7\\xfa\\x9d\\xe4\\x98\\x0e\\xeag\\xee\\xe8i1;\\xd0*\\x9e\\x0b\\rS\\xea-q\\xedh\\x1f\\xab\\x0c\\xccw#\\xcd\\xc3\\x0by\\xdd\\xd6"\\xdd\\xba\\xd9\\x1dM{\\xf7\\xe1\\xed\\x87\\xb6*\\xdc\\xf6\\x15\\xb8\\x89\\xe4\\x85\\xfe\\x8a\\x9bm\\x97\\x99\\xe3\\xe0b\\xe5T(\\xd1F[)u\\t\\xd6\\x8d\\xbd\\x8c\\xbf\\xe7q\\xdbt\\x157\\xfc:q\\x84=\\xb0\\xf5a\\x9b4\\xe2\\xca\\x13\\x8fz)1\\xb5,\\xfa3\\x95rG3Qd H\\x85SC\\x07$\\xde\\xbe\\xe1J\\x1fX\\xd14v\\x1dk\\xfau=\\x1d\\x97~z\\x8c\\n ,\\xdf\\x1b\\xfe#\\xfb\\xca\\xf3\\xfd\\xb2;h\\x83V\\xce\\xf7\\t \\xba\\x9b\\xc0\\x07v&5\\xf0}24\\\'\\x85\\xa0m\\x9e5\\x1be[//i~\\xf8\\xa4\\xa6\\xa2\\x18=\\xe0\\xcb.\\xad\\xcf\\xf3\\x1d\\x1e\\x1c\\x0cKZp\\xa1\\xc7\\xd1_\\x0f\\xaa\\x8f\\xa0\\t\\xb5\\xaf\\xbe\\x9d\\xae\\xfa\\xbb\\x1b\\xd0\\xeb0\\xb1s\\xd6T\\x8bp\\xbc\\x99\\xf9\\xa9:\\xd3\\xb6}\\xb8\\x86\\xb9\\xa9\\xe2p\\xf4\\xf58u\\xb0\\xdb\\xe6hlh\\xd6\\xb2\\xd5#\\x98\\xf7f\\xc8\\xbe/\\xbd\\xb3\\xf4\\x8a\\xc9\\xb7\\x98\\x96_\\xd1\\x97\\x80=\\xfcu\\x87i8\\xce\\xf0E6%MS\\x19\\xe9\\x95\\xf1\\xa2\\xd4%\\x91j*\\xa5\\xa0_Yf\\x10\\xff\\xfd\\xf0\\xfcvE\\xf8\\x84U\\xd4\\xfb\\xc6\\xf1)\\n\\xf0M\\x1a\\xddt;\\xce\\xdb<h\\x9a\\xf5Wz%\\xe2\\xfdx\\xd7\\xd3C\\\\k3\\xacVq<\\x05\\xac\\x0e\\xbf\\x0ci\\xa1\\xc7\\xfe>\\x1d\\xa2\\xc3l\\x0b\\x16_\\xb4\\xec\\x0f\\xde\\x99\\xcc\\x14.o\\x9d( \\xaeaO\\xaa1 9\\xdc\\xebqz]UG?,121\\x02\\xf4\\x8b\\xf0j\\xd40p\\\'`\\xf85\\xf9"t\\xb1\\x8b$Q*\\xf5\\x18\\xf4\\x19\\xe6\\x99"\\x8f5\\x84\\xea\\xa4\\xbf\\xcd[+\\x04\\x9c+H\\xa8<)M\\n\\xbd(\\x95\\xed\\xcd\\x9e\\xc7q+}\\xbd\\x1c7k@-\\xbb\\xd7\\xd0\\x96\\xc9q\\xd0\\x82Y\\xe4\\xa8t\\xf9a\\xe6\\xa6\\x81\\xaa\\xc9\\x08\\x1f\\xaf\\xa9\\xc0>\\xb8l\\xb1 :\\xdb\\xa1\\xc5j\\xacg1Y\\xc0\\xb1`\\xf6\\xacS\\xa2a\\xf7x\\xd0\\t7\\xba\\x0b!\\x9b\\n+\\x8e\\x8f\\xbes4\\xc2J8\\xa5wYx1\\xc5\\x11f\\xbcI%x\\xe3G\\xd9\\x1d\\\'\\xadh \\xe0\\xb9j\\xfcy<\\xbc\\xfax\\x80\\x95\\xf1\\xe54\\x92\\x04\\xd1}\\xa1y\\xc6\\x11}\\x83c\\xfb\\x93\\x9cp\\xe0\\xab\\xa8\\x85\\x80\\xb2\\xc4\\xb9\\x9e\\x04ezbu\\xe16qj\\xdcb4/V\\xd5\\x83\\xbb6\\x91\\x12O\\x9f;\\xd6G&\\xfb\\xbe9s\\xf7\\xea\\xe1\\xbcEY\\xe3\\xbf\\xc8\\x9e\\xfe\\xea\\xea\\x02\\xdfx\\xab\\xf0N\\xb6\\x0c\\x1d~m<lu\\xf9\\xeb\\xa8\\xe1\\x932\\x8b\\\'OV[+`&j2l\\x1f\\xe3w\\x08\\xb1\\xcd/5^\\xecA\\xf1\\xee\\x93\\xb7\\xa6-;Y\\x8e\\xf1=\\xea\\xf7\\xb6\\xccI\\x07\\x88c\\xea\\xc2w\\xc9\\x8a\\x9fK:\\xe7H\\xbfI\\x8a\\x0c\\x17%\\x13\\x87\\x17\\xc6\\x0b!Lp\\xa7\\x08\\xd8l\\xcaF\\x04UG^xGU\\x90\\xc9\\x13q\\xc9\\xc7\\x86\\xb5\\x03L\\x0e\\xd8\\x1f\\x86\\xf4\\xf28q\\xe6F\\x14=n\\xe7\\xe1W\\xf7\\x8c\\xfa\\x98]A\\x8bkc\\xd1aQ,\\xacz\\xc7\\x88\\x9a\\xdax\\xbc#\\xcb/)\\xd0\\xaeBR.\\xcfH\\xe3\\xa4\\xacLG)\\x8b|H[7\\x93\\x87M\\t\\xf2\\xfe\\xfaKZh\\x05\\xfb\\xe2\\xe7\\x9c<\\xec3rLj\\x81o\\x9asG<\\x0f\\x08y\\x9bg\\xe5\\xa8d\\xa4\\x18\\xbf\\xe8\\xf7\\x86\\xb1\\xd7<V0\\\'\\xc6x\\x13\\x87\\xbd"\\x08\\xf2\\x80\\xd3\\xae\\xb2\\xc6\\xae,:\\xbc\\x97\\x17\\xd0W\\xaa\\x89\\x15jT\\xd8\\x9f\\x1b\\x07S\\x92wy\\xa5\\xc4\\xaf\\xdf\\xce!2H\\xbe\\xa8\\x12Z0\\xe2\\xf0,j\\xacz\\xef\\xf0YS\\xf9\\xeb~\\xf0\\x07\\xa2\\xa1\\x03\\xe6\\xde\\x97[r\\x0f\\x8f\\xecJl\\xf4i\\xd7\\xc54\\xd8c@\\x0eo_\\xc2Z \\x1bzF=\\xfb\\xa2\\xd4\\xb4\\x15\\xdf\\xb2L\\x97K\\x95\\xf0ER\\xcdgl(. [[#\\xf7\\xa5\\xd2\\xd2\\xea\\xa6\\xcd\\x11k\\x12\\xf4G\\xfe\\x8d\\xd9M?x#\\x90&(\\x0f\\xadCku\\x9f4\\x80P\\xd4Pp\\t\\xca\\x10\\xf1\\xe4\\x88\\x06s_\\xbes\\xb6S\\x82\\xef\\xfb\\x8c\\xcfq[\\xa4@#\\xa4\\x9f\\x84$\\x04\\x8f\\x8c\\xc8\\xe1\\xb3\\xdd\\x81\\xd7\\x9b \\xec\\xd0\\x9d\\xb7RFOX\\x1f\\xd7\\xdfOw\\x97\\xe2\\xe0\\xbf{u\\xff\\x96\\xc3\\x19\\xb1\\xe4.\\x83$\\x85Q\\xd0\\xa2L\\x88\\x05*\\xfam\\x8f\\x14\\xa3^.\\x92\\xa0\\xe1I*X\\xbcM\\xcba\\x05\\x121\\xdc\\x07i\\x0e\\x10\\xbb\\xcc<\\x14\\xc7\\xfc\\xd6g\\x10\\xb6 \\xf8\\x06\\x16\\xe0{\\x85`~\\x1a\\xb7{:\\x1eqv\\x8c\\x82\\x92\\xb8\\xd2\\xd4\\xea0\\x140\\xcf\\xdaP&\\xf7\\x19-\\x8eB\\x0e\\xddc\\x1b\\xdf$\\n\\xfa\\xe7\\x05y\\x8c~\\xe7W\\x96\\x1b\\xd6\\xd6\\x184\\x93\\xa0[dJ?^zqt\\x1a3q\\xd7\\xae\\x99\\x96g\\xd5\\xc4Yf\\x93\\xa5\\x9e9\\x8f\\xcea$A.\\x83\\xea\\xc9;\\x05\\x9e)\\xe4v\\x83?U\\xb1~\\xf4j?\\xc1^\\xf4\\x910\\x857\\xa9d*4>~oI\\x08\\xbf\\x89\\xed\\xff\\x00\\xbd-&\\xf2\\nendstream\\nendobj\\n30 0 obj\\n<< /Filter /FlateDecode /Length1 1560 /Length2 7112 /Length3 0 /Length 8163 >>\\nstream\\nx\\x9c\\x8dx\\x07T\\x93\\xdb\\xd26\\x02\\x02\\xd2{/\\x01\\xe9\\xbd\\x17\\xe9\\xbd\\xf7\\x0eR\\x93\\x00\\x81\\x90\\x04\\x08\\x1d\\xa4w\\x94\\xde\\x11\\x04\\xe9\\xa0\\xf4*E@@\\x8aTA\\x90&E\\xe9E@@\\xa5|\\xd1\\xe3\\xb9\\xf7\\x9e\\xfb\\xffk}\\xdf\\xcaZ\\xc9\\xbb\\x9fyf\\xf6\\xcc\\x9egv\\xb2\\xc2\\xc6l`\\xcc\\xa7\\x08\\x82;\\x82\\xd5\\xe00$\\x9f\\x10\\xbf\\xe0\\x03\\x80\\xb2\\xae\\xb1\\xa5\\x90 @PP\\x84_PP\\x18\\x97\\x8d\\xcd\\x04\\x82\\x84\\x82\\xff\\xc6q\\xd9\\xcc\\xc0\\x9e^\\x108\\xec\\xc1\\x7f0\\x94=\\xc1\\x0eH\\x14\\xa6\\xe2\\x80D\\x11u\\xe10\\x80\\x967\\x14 $\\x02\\x10\\x12\\x7f $\\xf1@P\\x10 ,((\\xf57\\x11\\xee\\xf9\\x00\\xa0\\xe2\\xe0\\x03\\x01\\x01t\\xf9\\x01Zp\\x18\\xd8\\x0b\\x97M\\x19\\x8e\\xf0\\xf7\\x848\\xbb Q\\xfb\\xfc\\xfd\\x08\\xe0\\x04r\\x01\\x84\\xa4\\xa4$x\\x7f\\xbb\\x03\\x14\\xdd\\xc1\\x9e\\x10\\xa0\\x03\\x0c\\xa0\\xeb\\x80t\\x01\\xbb\\xa3v\\x04:@\\x01\\xc6p \\x04\\x8c\\xf4\\xffG\\x08N\\x19\\x17$\\x12\\xf1@@\\xc0\\xd7\\xd7\\x97\\xdf\\xc1\\xdd\\x8b\\x1f\\xee\\xe9,\\xc7\\xc5\\x0b\\xf0\\x85 ]\\x00F`/\\xb0\\xa7\\x0f\\x18\\x04\\xf8U2@\\xcf\\xc1\\x1d\\xfc\\xa74~\\\\6\\x80\\x89\\x0b\\xc4\\xeb/\\x831\\xdc\\t\\xe9\\xeb\\xe0\\t\\x06\\xa0\\x00(\\x04\\x08\\x86y\\xa1\\\\\\xbca \\xb0\\\'\\x00\\xb5;\\xc0XS\\x07\\xa0\\x8f\\x00\\xc3\\xfe"\\xeb\\xfcE\\xe0\\x05\\xfc9\\x1c\\x80\\x10\\xbf\\xd0\\xbf\\xc2\\xfd\\xf1\\xfe\\x15\\x08\\x02\\xfb\\xed\\xec\\x00\\x04\\xc2\\xdd\\x11\\x0e0\\x7f\\x08\\xcc\\x19\\xe0\\x04\\x81\\x82\\x01\\xfaj:\\xfcH?$/\\xc0\\x01\\x06\\xfaEt\\x80z\\xc1Q\\xfe\\x0e>\\x0e\\x10\\xa8\\x83#\\x8a\\xf0;u\\x07\\x80\\x9a\\xa2!\\xc0\\x01U\\xe1\\x9f\\xfa\\xbc\\x80\\x9e\\x10\\x04\\xd2\\x8b\\xdf\\x0b\\x02\\xfdU\\xa3\\xc0\\xaf0\\xa8cV\\x85\\x81\\x94\\xe1\\xee\\xee`\\x18\\xd2\\x0b\\xf7W~*\\x10O0\\x10u\\xee\\xfe\\x02\\x7f\\x9a\\xeb\\x06\\x83\\xfb\\xc2\\x02\\xff^9A` \\xa7_e\\x80\\xbc\\x11\\x02\\xa60\\x88\\x877XS\\xe5\\x0f\\x07\\x05\\xe1\\xfe\\x1bs\\x06#\\x01b\\x82R\\xe2\\xe2bB\\x00\\xb0\\x07\\x00\\xec\\x07t\\x11\\xf8\\xb5\\x81\\x89?\\x02\\xfc\\xdb\\xf8\\x1bF\\xd5\\x10\\x1c\\x88\\x80#\\x00N\\xa82\\xc0\\xc1\\x10\\\'0\\xea\\x037\\xd0\\xcb\\xc1\\x07\\x0c@zz\\x83\\x83\\x03\\xff\\xd3\\xf0\\xcf\\x15\\xae\\x90\\x10\\x00\\x04\\x01"\\x01\\x8e`g\\x08\\x0c\\xf7\\xdf\\xd1Q0\\xd8\\xe9\\xaf5\\xaa\\xff\\x9e\\x10?\\x80\\xb5 J~B\\x00\\xc1_\\xaf\\x7f=\\xd9\\xa0\\x14\\x06\\x82\\xc3\\xa0\\xfe\\xff\\xa6\\xffn\\xb1\\x80\\x96\\x9a\\xae\\x8a\\x92"\\xcf\\x9f\\x92\\xffeTR\\x82\\xfb\\x01\\x02\\xf9\\x84\\xa5\\x00|R\\xe2\\x82\\x00!!!q\\x80\\x84\\x84\\x18 \\xf8\\x9fq\\x0c\\x1c \\x7f\\xf2\\xf8\\x0f_M\\x98\\x13\\x1c \\xf5W\\xba\\xa8s\\xfa;e\\x9f?\\x1a\\xe0\\xfc3 \\\\\\x80\\x7f\\xc6\\xd2\\x83\\xa3\\x94\\x0b\\x06p\\xfe[\\xe8\\x0f\\x05\\xc5\\x04\\x81\\xa87\\xa1\\xff\\xb3\\xdc\\x7f\\xbb\\xfc\\xffT\\xfe+\\xca\\xff*\\xf4\\xff\\xceH\\xcd\\x1b\\n\\xfdm\\xe7\\xfc\\x8b\\xf0\\xff\\xd8\\x1d\\xdc!P\\xff?\\x0c\\x94r\\xbd\\x91\\xa8)\\xd0\\x85\\xa3f\\x01\\xf6\\xdfTs\\xf0_\\xa3\\xab\\x0b\\x06A\\xbc\\xdd\\xff\\xdb\\xaa\\x89t@M\\x83"\\xcc\\x19\\xa5h>!Q~A\\xd1\\xbfp\\x88\\x97\\x1a\\xc4\\x0f\\x0c2\\x80 \\x81.\\x7f\\xa9\\xe6/\\xdc\\xf4\\xd7\\xbcA!0\\xb0\\x01\\xdc\\x0b\\xf2\\xeb\\x86Ay\\t\\n\\xfe\\x97\\r5d@7\\xd4-\\xe2\\x85\\x92\\xe6o\\x13\\x185C\\xff\\xdcW\\x15\\x06\\x84\\x83~\\r\\x9b\\xb0\\x988\\xc0\\xc1\\xd3\\xd3\\xc1\\x1f\\x17\\xd5k\\xd4J\\x0c\\x10(\\x84\\x9aJ\\x10\\xd8\\xef\\xb7\\x98\\x01\\x02\\xfc08\\x12\\xe5\\x02@\\xd5\\x18\\x0cp\\x82{\\xe2\\xfej\\xac\\xb0\\x18@\\xc0\\x01\\x81\\xf0\\x84\\xfb\\x81=\\xbcQM@\\x19\\x7f\\xe3""(\\xdc\\xd3\\x13\\xee\\xfbW\\x1b\\xff\\x86Qi\\x08\\x80\\xa1\\xe0_\\xf3\\xf7/LJ\\x12 \\xe0\\x04\\x85\\xc3=\\xa1`\\xa7\\xff@\\xa5\\xfe\\xa0\\xff\\x0c \\x8a\\x82!0\\xd4XBP\\x9d\\xfe\\x1b\\x14FE\\x85\\xa2\\xaa\\xfcg\\n(\\xd0\\x1d\\x02\\xf3\\xf6\\xfa\\x17 \\x04\\x10@\\xa0\\x84\\x03\\x07\\xa1.\\x1dT\\x9bP\\xed\\xffe\\xf9\\xc7q\\x00\\xbd==Q\\xc6\\xdf\\xbaE\\x9d\\xd5\\xdf\\xeb\\xdf\\x17\\x11\\x18\\xec\\x07\\x06\\xe2.\\xcc\\xc1\\x81\\xd2\\x91\\xae\\r\\x91\\x9d\\x97u\\x8at\\xbe|\\x9f\\xdfa\\xad\\xaeu\\xc7%[\\x0e\\xc4\\x8a!\\xd9?<\\x0bt\\xd1\\xc1\\xceU\\x9f\\xf6P\\xb2\\x07\\xbd\\xa0\\x1e\\xcd2\\x98\\xaf\\x8c\\x9e\\x9a\\x0b\\xa2\\xe3>\\xbc\\x1c\\xf7{\\xd8\\x9b\\x1f\\xb6\\x92\\xa9Q\\x88DS\\x1d\\xd8P:\\xe6+\\x1a\\xfe~\\xda\\xeb\\x0cf\\x04\\xc1i\\x9d\\\'$\\xb2\\xe26H\\x8eR\\x0c\\x19\\x88\\xec\\xad1\\xad9\\xd2\\xcc\\xe7\\xae\\xa2$\\xfaD\\xb6^~)\\xb9\\xee\\xf6\\xda\\xb2\\x92\\xda\\x03\\xb8\\x03\\xca\\xce\\x89\\x993\\xe9\\x90\\x8f\\x15\\x0b\\xba\\xf7\\xd0\\x13,\\x99Y\\xd7\\x90#\\x96\\x0f\\x89\\x9f\\x90zZg{\\x9bh\\x9aN\\\\\\xa3\\\'@\\x9e\\\\(u&\\xd2|\\xf7\\xdf\\xb0~\\x923\\xb2\\xbc\\xfc6\\x7fp K\\xe4\\xa4X\\xbb\\xbfV\\xfcE4\\x19\\ry\\x80\\x16s\\xc1h\\xea\\x10\\rEJ\\xbeV\\xab\\x17\\x1a\\xbb\\x92\\xd8\\xb9reF2\\x0bM\\xa9{4\\xfb\\n\\x86\\xbd\\xc4\\xca\\xcf\\x99\\xe2\\xc1W)C"\\xde\\xcd\\xcez\\xcaax\\xfa\\x8f\\xc6Z\\xbc\\x1b\\xe1bs\\xb2\\x05}+\\\'\\xf4v\\x9by&\\xdf\\x05\\x08\\xa8\\xdbR\\xe3\\\\x\\xeb\\xb2X\\x95\\xd8jAh\\xe7#\\xd9G\\xb5"\\xd0\\xc2~LJF\\x00Vc\\xf7\\xe2\\xad\\xee\\x0c\\xbc\\xbc\\xe2\\xc2R\\x07\\xfdcK"\\xf6\\xa3\\x08\\x11\\xdb/\\x93\\xd4\\x97\\xf6\\x8fsS\\x84\\x84m2d\\xa1\\x92C\\x9f\\x9e+\\x89\\x1b@\\x19\\x11\\xa3N\\xe6\\x1f\\xafd2\\x00d\\xb4ld\\x06\\x9a\\x18z\\xcc\\xaek\\xde\\xa3\\xf7y\\xf9\\xbf=\\x1f\\x80T[0\\xa5\\xc1\\xce\\xb6\\xdb\\xdev\\x8e\\xf4\\xc5\\x1c\\xc3Y\\x0f\\x19(\\xa6\\xc3\\x92-\\xbar\\xf7\\xde\\xec\\xa6\\xb4j\\x8a\\x9d\\xbf\\\'1\\xe3V\\x15G\\xd6k\\x7f\\x80\\xf7\\xd8q%\\x15$\\xcd\\x84\\x18\\x15\\x16`\\x1a\\xbc\\xeaV\\x97\\xb6R\\x90\\x9a\\x9fdI2\\x13!*2!\\xf9`\\xa2\\xb3\\x85\\x96\\xadw\\xcf\\xf2A\\x94b\\xe8\\x0c1!\\x99\\xdba%\\xc3\\xcb\\x8f5\\xe2c\\xcfd\\xc3\\xdbd3$C\\x05\\x1f-N\\x1e\\xdfQ1\\xdcO"\\xae\\xdf\\xc03\\xec\\xfb~\\xd76\\xd9\\xd1\\xf3X@\\x18\\xc7V\\xbb\\xb0\\xdb\\xca\\xc5\\xbe\\\\\\x8fC\\x0b)\\x9a\\x0ci\\xd9K\\xbe\\xdaV\\xb2\\x9c\\x0e;\\x96\\x98[)T\\xba1\\r\\xb1#\\xabx\\xf4\\xb0\\xd0\\xe9\\xf1\\xcf\\\'\\xdf\\xb6\\xce\\x9a\\x8f\\n-\\x14\\x1bc\\xad\\xa0q\\xe9=\\xd3!\\x1bv\\xcf\\xc7\\x18\\xba\\xac\\x06\\x9f\\xd0g\\xbf\\x9e\\xdc\\xef\\xef\\xe2\\xc8\\xd8\\xf2\\xd3h\\xfeq\\x8eyL\\xe68\\xa2\\xfe`\\x88%\\xb2\\x14Z\\xdd\\x92$\\xd6\\xa1\\xbc<H\\x11gj=\\xe8\\xa0\\xd3y\\xd6\\x86\\xe3\\xd97\\xe6\\xd4r\\xf6\\x1d_\\xc8\\xfaBZt3\\x0ca\\xbb\\xdd\\xacw\\x84\\xf8Y\\xe5\\xa1\\xa4\\x02 %\\xe2\\x98\\x8f\\x92\\x12\\xd9x\\xa1\\x1b\\xca.\\x15\\x88\\x89\\x1fk\\x16\\xa2B\\xf0M\\x92\\x94\\xc0a\\xb29\\\\x\\x0e\\xc6\\x8f\\xe6\\xe2\\xd4\\x82\\xbb\\t\\x95\\xd7\\xfeHY\\xbcg\\xcd\\x9a\\xd0\\x16O\\xd2\\xf8C\\x1dq|\\xdeO\\xbfL\\xd6QO/\\xa05\\x14\\x00\\xbc\\xc0(\\rW\\x93\\xfc\\xe9c \\xb2\\xf4I\\xc0B_\\xfc\\xad\\xbf"\\xbc\\xa7\\xfe\\xf0\\xd1\\xde\\x96\\x8d\\xb9\\x07\\x9dJ\\xb8n;V\\xac\\xa5\\xe8j\\xf9it\\x1bI\\xb1e\\xd2\\xecX\\xb1\\x85\\x81\\xea\\xb1\\xce\\xb5\\xf0\\x86\\x9dp;\\xde\\x8b\\xf6J\\xb8FF \\xae\\x10\\x95\\xdf4\\r\\xf9\\xf0.GO\\xa77M\\xd0+8\\xc1\\xe5\\xf9\\x0fs=&\\x06\\xa3\\\\\\xd5\\xf4\\x93\\xb2\\x83\\x9c\\xf6\\xa4\\x19\\xf4\\xb3\\x9f\\xec\\xe9\\x1b\\xd9P&\\xb5[\\xca\\x87!:$\\xe8F.B/\\x19\\xd5\\n\\x1c\\xbf\\x96\\xbd\\x98\\x08\\xe6\\x89\\x81\\x12(_\\xda\\x00\\xcaJ\\x17\\xfb8q"\\xe9}\\x9cf\\xe1\\x11<N\\x13\\xd4\\xf9\\xba{\\x07L\\x8d\\xc1\\x17Pyz \\xf7J,\\xcb\\xe1\\x0b\\xdb\\x10\\xa3\\x9a/6U\\xee\\xd1\\x9b\\xc4\\xef!\\xe5\\x91\\xdaU\\xfa\\xc3\\xd3O\\x985\\xf1\\x12\\x1bf\\x1a~nQ\\x7f3"\\xb9\\xb1C\\xce\\x98K\\xe7\\xf4\\x8c}\\xcd\\x1e\\xf2V\\xe0\\xbc_\\x85\\xe4\\x1e+\\\'\\x9b\\xc13}\\x96\\x1f\\x18\\xb4\\xf1\\xed\\x9ba\\xb0\\x83\\xc8g\\xb5\\n(FF\\xf7\\xa9\\xa4\\x1ff\\r\\x1dv\\xc942U\\xc3\\\\\\xb1\\xa2\\xef\\xc5\\xbat#\\xf3G\\xb3\\x95\\xc9\\x1b\\x02\\xe5\\x8e\\x11\\xf2\\x083xc\\xd6\\xa2OG\\xc1~\\xaa|_c:\\x93tz~\\xbd\\xec\\xe8\\x92\\x1co\\xe4\\xe0Fyu\\xf7C\\x96\\xea\\xef-\\x19\\xb9TSF\\x07w}\\x8c\\x943\\xe6K1\\xf3\\rU\\\\pi\\x08g\\x14\\xecx\\x0b\\x86(G\\xf3\\x89\\xba\\xdcH)\\x1f;:A\\xb7\\x145/\\rl\\xd1\\xab\\x1as|\\x17r\\xc9\\xca@\\x9a\\xc3\\x1a\\x01n\\x9c\\xc0\\x0b\\x91\\x08\\xbf\\x9f\\xc9\\x8c\\xf1\\xc3a\\xfb\\xc6#\\xa6\\x06\\x9a\\x8dN\\x81\\xda\\xe3\\x95\\xef\\xbch\\xa3\\xf0\\x0f\\xdfY\\xd6v\\x16\\x1d\\x08\\xec\\xfb\\xf4&MX\\x17\\xb5\\xff\\x9cgl\\xd3a\\xd3/R\\xd8\\xcb\\xd1\\x88\\x88N#\\x95Y1\\xe0x\\xa2\\xf5|t1\\xc4\\\'e\\x96w\\x90\\xb5\\x89\\xc5\\xc5\\xb4\\\\W\\xfe\\xacqO~-\\r\\xc1=\\x17)\\xe1C\\xf8\\x81Jv\\xd1@\\xc8+xC\\x9d(M\\xa1D/U\\xcc\\xf6X$#\\xce\\xe4s\\xa3\\xa4SG4\\x80\\xd6\\xdf\\xb0,&\\xa2]\\x9f+\\xb2\\x89\\xa0FPb\\xe6\\xcb4\\x1ba\\xd4\\xbdHu\\xfc\\x92\\x1f\\xa9F\\x01\\xcf\\xc9NO\\x9dv\\x02c&mIT\\\\\\x96\\xced6\\x8b\\x03sr\\xd6\\x952Fw\\xe7\\x82\\x7f\\xbc\\x1e\\\\(\\xf0\\x12v\\xe2P>\\xf5_Y\\xaf\\xb3\\x1bz9\\xf3R\\xc1\\x06\\xc8(\\x99V\\x0f\\xa3\\x95\\xf0\\xe0\\x88\\xa0\\xf9rG;\\xf6J\\xd4M_\\x96\\xea\\xe0\\xa6Za\\xce\\x14\\x90Z\\xb1\\x04\\xe5]6\\x80\\xab&\\xacP}qC\\x7f\\x9f\\xc3M(\\x81\\xe3\\x81a\\xfd\\x91\\x19k\\xff\\xe2G\\xeb\\xf8\\xfc\\xf6\\xccC\\xf8\\xabp\\xdb\\x0f\\xac\\xad\\xec\\x89\\x9fOOlH$\\xa1\\x19I\\x9b\\xad^\\xed\\xec\\x91\\x91\\xbd\\x02\\xc9\\xeb\\xeb\\xb6\\\\\\xb9\\xcc&\\x9f\\xdf\\x84:\\x10\\x9c\\xa2\\xaf\\xd5\\x1c.L6\\xaeQ\\x86u\\x19\\xb3\\x14I\\\'mg\\\\y\\xdb\\xa2\\x19\\xc7\\xe1*\\x8a\\x9d\\xe4\\x88+\\xc9\\x92,\\x16\\xfb\\xc0\\x16sL6p^\\xe4$\\xd5Ot\\xb2DM]T\\x92\\xd9\\x08`\\xbd\\xe3\\x0b\\t\\x0e\\x8c\\x9d\\x1a\\x1cV(\\x9c\\xc9\\xe4I\\xa0\\xcf\\x85\\x10\\xde\\xb9\\xae\\x04:\\x8c#`\\xc3\\x8b\\x1bM3\\x9ff\\x03\\xab\\x08\\xf4*\\xc3\\xd1\\x8e\\\\\\xd8\\xbc\\xbeW\\xed\\x1c\\x17\\x00\\xd0\\xda?\\xac\\xe9\\x95P\\x86o~\\xae1\\xfb\\xb89>\\x14\\xd1\\xe3P\\x99ks\\xb6-?\\xcb\\x8b\\x8f~p\\xe2\\x88,\\x82\\xa6e\\xbb\\x10\\x8b\\xa7\\xdc\\xea\\xc7\\xfa\\xf4\\xd9\\x95c\\x19\\xed\\x8c5J%\\x1b\\x03l1\\x0c\\x0e\\x98\\r\\x11\\x17\\xf7z\\x93\\xe9.\\xda=\\xc5/:{\\xa5K\\x1b\\xad2\\xb7{\\x067}\\xe6\\x19\\xa5\\xdc\\xf0\\xfdI\\x9eP6k\\xa4\\xfa#\\xa4iU\\x86?l\\x00\\xd2\\\\i\\x0e\\x84\\xf2\\\'\\x1f\\x1c\\x1bE\\xda\\xd4,\\xe79\\x06\\xa8+\\xcb\\xb3\\xb0\\x85\\x07\\x81\\x97K}\\x99\\xb7\\xeb3\\xdf\\x89?\\x1e-52\\xd8f\\xfd\\xd2\\xda\\xfe\\xe0\\xb6\\xeb=\\xd7p\\xd7\\x13\\xd5\\xfb\\xf3\\xdb\\xa5 \\x8e\\x9a\\xfe\\xcf=t|\\xed-\\xf8o\\x85\\xd1\\x04\\xe8\\x06\\x00l_\\x9f\\x04\\xc7,\\xf4\\xd0%\\xce/Q\\xe1\\xbb\\x8fF\\xd5Z]\\xd1\\xbe)\\xd6!\\x94\\x9cx}\\xb6\\xf0\\x188z\\xda<\\x01\\\'_@\\xaf\\x89\\xcf\\xd3\\xd1(}\\xdf\\xa1\\xbdtv\\xdaR\\xc0\\x95\\xfd\\r\\xdb\\xa3\\x80\\xe7\\xc3"\\xd0\\xd2?c\\xe0\\xdd\\xab\\xd2\\xc2\\xbc;\\xb8dv\\xbac\\x89\\xd7\\xf6|\\n\\x8d\\xd8\\x82\\xa4fX\\xd7t\\x1cg\\xf9\\x13\\xf5\\x93\\xe7\\x95H\\xe3\\x8a\\xe1\\x12"\\x90\\xfcr\\xbd\\x05\\x05&\\x19g\\x84eD\\xd4\\x9b\\x0b7=\\xf3f\\xcb\\xd7\\x07j\\xf32\\xdbJ\\xc1\\x8d\\x99;n\\x8d\\x8b\\xfd\\xd8\\xabF\\x07\\x9c\\x1fg\\\'l\\x85\\xe7\\xd9\\x88\\x05\\xd1\\x15\\xaf\\xae\\xf7\\xdd#_\\xa1%\\x8e\\x13\\xed@\\x83\\xdc#\\xe03o\\xf7+Ei\\x0c?wP\\xbc\\x88,\\xf2\\x7fJ\\x16\\x94\\x96\\xf4\\xd1\\x87\\x89\\xf4\\x88\\xe7QrI!\\xe3\\x9bt\\xd5f\\xe0\\x93\\xf7\\r\\x0b\\x18\\xa9\\xba\\x83{\\x1f\\x04^\\x9c3P\\xee!\\xe7\\xa30\\xae4\\xc0\\xb9\\xd1\\x0b\\x06\\xcaM;>z\\x87[,\\xea\\xe2\\xc1\\xf8e\\xfb\\x04\\x87\\xd8\\x85\\x056\\xcdBE\\x8aT\\xc9\\xaf\\x13\\xd3y\\x82\\xb6\\xea87\\xdb\\xcdf\\xbf\\xae\\xc6\\xabW\\xd4@%\\xc2\\xb5\\x9d\\xe8\\xcc\\xc9\\x03V<\\x0b\\xed\\x0ed\\x7f\\xaa\\xb3\\x04rT\\x89\\x8eF[\\xe8\\x02\\xca8{\\xa8\\xfb3\\xea\\xa3\\x8fh\\x02\\x04\\x96\\x1a[\\x16\\x02\\xa6u\\xfa\\xad"\\x83\\xda\\xe3T\\xee0\\x0e\\x8a\\xf2\\x11}_\\x13T=@\\xb4\\xc4\\xd3Z\\x19\\xffh;U\\x1cZ\\x8b\\xa9\\xc1\\x89m|\\xbbF3\\xdf\\xa6\\xb8\\x99\\xde\\xde\\xdb\\x85\\x84v\\xd7\\x8fk\\\\\\x17Y\\xa3\\x99\\x84\\xf9y\\x8d\\xeb\\x163D\\x19\\xc4q7=\\x03\\x83+\\x93\\xca\\x9c\\xca\\xba\\xd1|\\xdd>\\xc6P3^j\\x08qI\\xe0T$AX\\x1eO\\xf6\\x1f\\x85\\xb3\\n2\\xcc\\xdf\\x845U\\xf7\\x9b\\xc9CzHI\\xe3\\x02N\\xb7$\\x07\\x07\\x82zJ\\xe5@\\xb7\\xae\\xfe&\\xb9\\x8f\\xc3\\xfa\\x9b\\xcd\\xdc\\x87\\xbed\\xad\\xd1x\\x94\\x8f9+\\x8f\\xd0\\xa4\\x9c\\xa6\\x1c\\xcd\\xbf\\xee\\xc8\\xbd#\\x15p\\xf7\\xd5g\\x93X\\xe5\\x95\\x10\\x817\\xc8G\\x1d)\\x03\\xd9\\xd1w\\xcb\\xe1\\x0c\\xdc\\x07YR\\x89\\x83\\x9e\\x13\\xb3\\x9a\\tEp\\xd7Z\\xd3\\x03\\xeds2?\\xd7\\xa2\\x0e\\xfe{\\xbcX\\xef.y\\x1c\\x85\\xea\\xe6\\x1a\\xbe\\xe2\\xf7k\\xe6AUt\\x8e\\x0c\\xad0D\\xc2.Z\\x0c\\xf8`\\xf0\\xb3\\xce\\x93.\\x0e\\x99I\\xcb\\xaeU,0\\xdf\\xbe\\x90\\xc0%ab\\xa1DX"\\xb7\\xaa\\xd8\\xfd,P\\xcc\\xd7\\x12\\xf8\\x93\\xcc@\\x1b\\xe5*9\\xd6\\x1b\\x0c\\xb5{\\x01\\xce\\xcc\\x93\\xb1\\xdc\\xcf\\xe1\\x1dh3w]\\xe3\\xdf\\xf3\\xe9\\xfd\\x0c;xW\\xfa\\xee\\x05\\xfcD2i@\\xdb\\xd7\\xd0y\\xf91"\\x9f[\\xc8\\x96\\x8c0\\x9c\\x7f.>\\xf6\\xe9x\\xdf^=\\xbe\\x8eY\\xdc\\xa3\\xb3\\xb7\\xb7W\\x97\\xee\\x04\\xe4P\\x87q\\x02\\x1b6\\xf2}~\\x962\\xfb\\xe4W\\x95v/\\r[!\\xf4!\\xb4\\x9b\\x88\\xd7\\xe7\\x03O\\x18G\\xb0\\xb1\\xbdR\\xd1\\xc5\\xfc\\xf9-"\\x920\\xe8\\xa7\\xdf\\xbd\\xe4\\xfa\\xfa\\x85\\xbe\\xd8\\xa4\\xe8\\x00\\xad\\xec\\x1c$\\xa4]X\\xecV]=\\x16\\xef\\xba\\x1cR]\\x8cC\\x07\\x13\\x0c\\xa0\\xaaR\\x7f\\xc9\\xb0\\xc6\\xe4\\x11\\xd7\\x9a\\xb4\\xe7Pin\\xb8\\xc3\\x16\\x109C\\xad\\xd5\\xd0>oQB[\\xdc\\\'\\x82\\xd4\\xf4\\x17|\\xd3\\xfd\\x9c\\x1fs\\xe6~\\xdc\\x80u\\xda\\xfd\\x12\\x86\\x08\\x95\\xfb\\xaa\\xef\\xc3S\\x11\\x88Z5\\xee\\xea\\x8ao\\xf5+\\xd9>G\\x9e\\xfa3\\xa0q\\x98\\x04\\x0c\\xaf\\x84d\\x1a\\xc3I*\\x82\\xbb\\x96n\\xdf\\xe2\\xc1\\xb7\\xee-\\xb9\\xa1\\xce\\xdc\\x07\\xdc\\xefVt\\x18\\x9c\\xd0\\xdf=\\xa6\\xe8\\x97JewHu\\x95\\xe6a\\x08\\xa4x%\\x18s\\x8fk\\xf2\\xa3b\\xaas\\x7f\\x9d6\\xf7n\\x98\\x85v\\x1f\\xfa\\xa2Y\\x0bG\\xc0\\x82\\xd5\\xe9\\x98"\\xc3G\\xae{\\xb0\\xc3\\xf3\\t\\xbc\\xc6Y\\x93\\xcet\\x92\\xfe\\x9c\\xe4E\\x9d\\xf1UB\\xad\\xbd\\xa3\\x93\\x1d[\\x15H\\xc5\\xb5u\\xd9\\xf1\\x03/\\x99\\xa7Km\\xc2}\\xcc_\\xc9WLc~\\x04\\xe5\\xa1e\\xde\\xc7\\xfa.f\\x16\\xb9\\xe74e\\x1a\\xbf\\xeba\\x10\\x16|q5\\x1d${\\x9b\\x98\\x8b\\xfa=\\xd3\\\'\\xa6\\x1fd\\xd0\\x8f\\xb5\\xed\\x95+\\xf5\\xb5\\x9c\\xf1I\\xf0\\xe6\\xe74n\\\\\\x06\\x1eg\\x84b(o\\x1do\\xafl\\x90k\\xb5\\xb0\\x18\\x89\\xf2p\\xb8D\\xde\\xb7Y\\xfc\\xd4\\xa3\\xcc\\xda\\xe6\\xacyz\\xe2\\x10\\xfe\\x1d\\x01\\xb5\\n:\\xba\\xe1\\xf6Q\\xc1\\xe2L\\xa4Q\\xfeZG<:?\\x0b\\xbd/\\x18\\xdf\\x85\\x96\\xa6\\x87\\xd0 \\xf4\\x19xs\\xce\\x1dqr\\xa8\\x15\\x03oR\\xa8\\xab_\\xcf\\x0c\\xbb\\xb5;\\xdeU\\x9c\\x0e\\x11)_7\\xa4\\xd8\\xe9Qb4;{\\xc4z,\\xa5Z\\xdcA\\x99\\xec*\\x8b\\x9b`#\\x0f\\xa8\\xde~\\x1a\\xe8{\\xb7\\xd6\\x8eHL\\xe4\\xa2T\\xed\\xd0y\\xa6\\xa7Q\\xf4\\xa9R\\xce\\xf6f\\xde\\xbebE5\\xe9Z\\x97G\\xc3\\xc4\\xf1(\\x11\\xd3\\xea\\xeb\\x95)\\xd1f\\xecx\\xc6\\x98\\x92\\xe4\\xc9C\\xa1\\x97\\x06N\\xd4\\xef\\xef\\xd5\\x9c\\xf2\\xce\\x19\\x0f\\x14\\x8a\\x9fmt\\xde\\xa5\\x7f\\xe6YRn\\x9d\\xb2\\xdc\\xebc\\xff\\t\\xbf\\xb3\\xb9\\xfe\\xe7c\\xaa\\xb3\\x9e\\x10\\xbf\\x0bu\\xd6\\xdbB\\xba\\xc8\\xd2\\xdd\\t\\xfe\\xe0\\xa2\\xf6q\\xbc\\xb1\\xf4\\xd6\\n\\xaa\\xa5\\x89n\\xb5w9\\xe9\\xc0\\xba\\xfa\\xdc\\x94pY\\xea\\x17\\xbdN\\xccTw\\x98\\xb8G\\xbb\\xaa\\xf8\\xb1\\x04\\xb6|\\xb1\\xde\\xc4\\x19Ivp*,,$\\xe4\\x06\\x10\\x00\\xdb\\xba\\x14\\xfa\\xf5\\xd85\\xdd\\xb3\\n\\x96\\x9f\\xcbY0\\xbfu\\xcf\\x00\\x7f\\x1dQ\\x18\\x87R\\x12\\x9a\\xdf\\xb2L\\x9b)kl_>\\x95|\\xefF5\\x9brW\\xc6\\xff2_\\xcf\\x9b\\xc0!\\x1d{\\xb7\\xb4\\xa2k\\x80\\xbfl\\xf0\\x08\\x1d\\xa9\\xd7T\\xfa&\\x16*\\xdc@\\xdc\\xe6\\xa6\\xa8i\\x13\\xc3E\\xa5{I\\x14\\xd2b\\\\\\xfc\\xe5\\xd62s\\x01\\xd6L\\x1b\\xfe\\x18\\x0b+\\\'i\\x96\\xbd\\x82\\xdb\\xf6\\t\\xc3P\\n\\xc7\\x15P\\x01\\x8dh\\x9d\\xfa\\x8a\\xbdu8Hfu|\\xa0$\\xeb\\xa2\\x9bq\\x8a\\xf6\\xa0\\x8e\\xf4vw\\xa1\\x8a\\\'\\x1dH\\xf8"\\xb4E\\xa6\\xe8\\x91?\\x87\\xfb\\xbe\\x97L\\x8e\\xe9N\\x98\\x14\\x82\\xd9\\xae\\x1b\\xbd\\xdc\\xb0\\xf3\\xe3\\xb7M\\x8e2\\xbd<\\xf5\\xa6\\xa3\\xb5\\xbb\\xd9r\\x84\\xe8\\x03\\x15\\xef^\\xbb\\xda4\\x91\\xc2NE,\\xe4\\xb4\\x8a\\x02\\xe4\\x17T\\x0eBe\\xf5.\\xa3\\xeet9\\xc2\\x08\\x18\\x1e\\x07zP9Zr\\xca\\xb1,Hro\\\'t\\x0f\\xbfs\\xab\\xf0\\x17\\xb9\\x84\\xaf\\xc7_\\xa2-\\x01BO\\xe346\\xfa\\x08\\x92T|\\xd7\\xdb/mJB\\xf1\\xbb\\xe8\\x92)\\xf6@\\xcf\\x02US)FJ\\xfb\\x13|\\xc3\\x16h\\xd6rH\\xf8Y)\\xcc\\xd6\\xb6\\\\h\\x91\\xf9\\xe7\\x01n\\xacnn\\xac6\\xa2{\\xb5\\x14\\x98\\xc7@\\xa7\\xb6\\xa2\\x1f\\xb5\\xc4\\xaf\\x941\\xcd3\\x15NFO\\x7f\\x8a<=\\xcfB0A\\rk\\x9f\\xa5\\x19~\\xc9\\x89\\xc3t\\\\\\xab\\xa0\\x10@\\x9c\\xdei>}Fo\\x92\\xe6\\xd1\\xad6%\\x89iw3\\xabH\\x92\\xda\\x03\\xdb#3|\\x8f}[\\xec\\xae\\xfd$\\x90=@Zf\\xb6\\xa7\\x00+\\xcc\\xfdd\\xc3\\x1a"16A\\xd9\\xb4\\x97\\xff\\xfc+\\x077\\xe5\\xb5\\x87E\\xa8\\xc9\\x1d\\xd8\\tR\\x86n6\\xd1\\xedD\\x00G\\xbeR\\xd8\\x9d\\x86\\xab`t\\xc2\\xe9\\xac\\xbd\\xf6 cm\\xbd\\xf8\\xd2\\xff>\\xe7F\\xad=\\xdb\\xc7\\xc0*:\\xe2r\\xe6NC\\xc6|\\x01Av\\xafU\\xbf\\xf63\\xa7-\\xa5j\\x9e\\x9aY\\xcf\\x84#\\xd5\\xd5#k\\xe4\\xd4Gg}m\\xfa\\xc7\\x86\\xcfY\\x7f\\xb06\\xc8\\x92\\xd3~\\n\\xff\\x90/\\xbf\\x0bR\\x10\\x01r\\x11\\xdb\\x88T\\xd1f\\x12\\xee\\xce\\xd2\\xcf\\xa2\\xb1q\\xeb\\x06k\\xd0\\xf7\\xd3\\xe6\\xec\\x94\\x16H+\\x83\\x9e\\xafe\\xdf\\x1d\\xf6Dt\\xd1\\xd4\\t\\x91\\xbb^\\x17\\xaa\\x91\\xd0\\x12\\xf7\\xc4\\x02\\xa3\\xbc\\x18\\x90\\x19\\x07\\xea\\x1c\\x17\\xeb\\xca\\x0f3;\\x10\\\\\\x98/\\xb8\\xce\\xb1n\\xf2\\xed\\x98rI\\x8a\\xb9\\xeag9\\xdb\\x7f\\xe4\\x956\\xe3\\xe9\\xeav\\xe067F\\x12x\\x0c\\xfa\\xb0\\xb7\\xd4\\x8e\\\\(\\xaf~\\x16\\xd1Ck\\xd1\\xb1\\xf2j\\xf451\\xf0\\x0eL\\xa1\\xf4\\xea\\xec\\x98\\xa8\\xbb4(H\\xe0\\xe1{\\xfa\\xa2\\xb2\\xc84!\\xab^\\xed\\x9b\\xe9\\xa5\\x01\\xcb+\\xed\\xf1\\xe8h\\x9e\\xea\\xcei\\xcbn\\xb0\\x04\\x99\\xbc`5g\\xc69\\x0e\\x04DG\\x97\\xab\\xd3$\\xed\\xec\\x86-\\xd5K\\xcai\\xa9\\xc9\\x97\\x9c\\x08\\xb5\\x7f\\xf9\\xedP\\xda~\\x96b\\xeb\\x8b\\xe2$\\x8e\\xc6\\x83\\xa6\\x97\\xcf\\xd6,5\\x18\\x1c\\x85\\xd2\\x9a\\xd7_i\\x0c\\x05\\xb6\\xf9F\\x0c\\x19\\xd9ZN\\xe5\\xd2\\x10\\xf2\\xe2>cU\\xabx\\x9f\\xa9\\xa1\\xb2pbF+\\x8f8\\xc1\\xf6\\x9f\\xcaj\\\'7XaS\\x93}\\x15\\xde74\\xa8\\x14\\x83u\\xbep^\\xa4\\xae=o\\xe0\\xd2\\xf8H\\xaf\\xc9\\xba\\rSs\\xc4n76T\\x19\\xe7\\xd8\\x842`e\\xda\\xe9\\xde\\xd6=\\x99\\x99\\xcc\\xf4\\xc4\\xab\\xb0;\\xf6\\xa2\\xa8oeU\\xa19-\\x8e\\xce\\xeb\\xb5eV\\xfb`\\xa3{XD\\xe1\\xd8\\x1fC\\x1eV\\x84\\x92\\xac\\xeb\\t\\xbb9\\x15;\\x9c\\xc2\\xbd\\xb5$D\\x9e\\x86\\x10\\xef6\\x9d\\xf8\\xac\\xed\\xf6\\x9c\\x85h/\\x9a\\x07\\xe6\\xeb\\xce\\xac\\x88\\xc8\\x7fHz\\\\\\xa9{b\\xf3\\xfd\\x819\\x8d49\\x89\\x0fSr\\x14q\\xf6]\\x8bu\\xe9\\xbb\\x91JL\\xa9\\xf7\\xe2\\xca-\\xc8\\x92\\xf8\\r\\xd64\\xa5\\xe5\\x0b\\x99MJb\\x01\\xfcx\\xad^\\x94\\xfb\\x18\\xe7\\xa66\\x9b/#Re\\xa7,\\xe2o\\xf0\\xaeS\\xc5\\x9a^\\xc7\\x87z\\x86\\xea"\\xe5\\xfcek\\xa3\\xb97\\xc2\\x1c\\x951\\xba\\x1f\\xd9\\x12t!\\x07\\xe8\\x14=\\xeb\\x8b\\xa0\\x1c-\\x97\\x03e\\x19W\\xa7w\\x1e\\x9e]\\xcc\\x17\\x0e\\xd3\\xeb\\x84\\xa1\\xefE\\x14\\x19\\xa4\\xb1K \\x91D\\xe8\\xe7\\xde\\xea\\x01\\xd2\\xda\\xce\\xa2\\x1fO\\xa7\\x1e3J\\xb7zs\\xb1\\xec4J\\xffX2\\xce\\xc8\\xec\\xf3\\xe9\\x1a=\\xbe\\xfa\\xa6\\xfc\\xa8Q\\xbeG+\\xe2\\x95@\\xaa\\x1a\\x8b\\xb8)\\x7f\\x9d\\xa0\\xdc\\x16\\x16\\xfa\\x19\\xcf\\x92\\xb6\\xe1L\\xa4 \\r\\xcb\\xc8L\\xf5\\x94\\xec^\\xd8W\\xaf\\x9d\\x95\\x83\\x08?\\xb8\\x96\\xcd\\xda\\x87*\\xe61\\xdf+q\\xfde\\xfe\\xe0\\x84\\x82P\\xe4\\xdeh\\x88\\x18\\xc9q\\xb1\\xd9\\xfahe#O\\rIik\\xcd\\x8b\\xd7W\\x0c\\x12\\xf1\\x8d\\xa6^\\xe1\\xb9/\\xe7*\\x07\\xfd\\xb7>\\x8f\\xbcI\\xc36)LT\\x16\\xbbR\\xf7t^7\\xc5zC,6\\xc6\\x9a\\x14\\x93\\x95\\xc8\\x1eT\\x97\\xd4\\xdc\\x13\\x8f\\xf3(cY\\xbdjs^\\xb2 k\\x97\\xa0\\xa8\\x16K\\xd7\\xe7\\xf3*\\xa7+\\x15\\xb2<bc\\x15@\\xf0u\\xa2\\x18\\xf6\\xf5 \\xcff\\xdcf\\xc0\\x10}\\xcc\\x9c:J\\x7f>\\x856\\xd6\\x9d\\x90?\\xf1\\xf9\\x93\\x17\\xc7\\xf7\\x8c\\xac\\xbb\\xa9&\\xb3\\xe1z2\\xae\\xf7\\xbf\\xe0\\xdcp\\x84o\\xbd\\xe9\\x14zA6O\\xf8Z:\\x98\\x89\\xe88\\xea\\xa1n\\xc8S\\xe0\\x1c\\xe7\\x83ypR\\xbd\\xfcyT\\xf4\\x06\\x99U\\x8e(\\xa3v\\xacs\\x0cf\\xe5\\xc0vI_\\xe5\\x16\\x11\\x99Bb\\xbeIM:`\\x96\\xc3\\xe1\\x9c\\x85mP;\\xc8\\xdeP;\\xf8S\\xf1\\xdb\\x8d\\x13o\\x95\\xe8\\xfc\\xb48\\xc2\\xe0S\\xf6\\xd0\\xeb7\\x92R\\xfc\\xd7s\\xe5\\xaf\\xb6\\x1ci}\\x94\\x80<!\\xaa=<\\xf2\\xf8\\xc3be\\xb1\\xecP\\xa93\\x8bv\\x03\\xb9I\\x98\\xf3\\xd9=M\\xb5\\xad\\x07\\xf2}\\xc8\\xf4\\xf9d,cS\\xfdq\\xe0 \\xa1\\xab\\xb0\\xb2\\xbbu\\xe9\\xa7j}\\t\\xb907\\xf3\\x1fn\\xa5\\xc5\\x95]\\xe8\\xa3\\x16\\xb5\\x1c\\x11\\r\\x87\\x0ce\\x94\\xf9D\\x14}2\\xa6\\xe5\\r\\x1f\\xf4\\x16%u\\xe0 \\xd7E\\xaf\\x0f\\x84"\\xc41r\\xf89\\xf7\\xe9h\\xbffN!9,2@\\x14R<\\xaa\\x12\\xf5\\xc7z\\x9bX89\\xa0D\\xc9\\xc0\\x01\\x9b\\x93D\\xf7\\xf6\\xa7\\x0214x\\x83_\\x89\\x0b^}xBQ\\n\\xa2\\xf5\\xa1I\\xb0D\\x8f\\xc6\\xb2\\xcc<\\xbfa\\xf2\\x85#\\xc8\\xcevr\\x98sT\\xdf\\x18<\\x95P\\x93\\x87SO\\xbcq5 \\x92Z?y\\xc1\\x92\\xd7\\xeb\\x9c\\xa6\\x14\\xff4q|`\\xc1\\xe0\\xf0\\xc9\\x99\\xb4\\x92\\xada\\x92~e\\x9a\\xc8\\xf7\\x1en%<\\x91\\xc6\\x08o\\xd8+\\x0c\\xd6\\xd6U\\xcdA\\xc2\\xdd\\xdbB;},\\xf0\\x8d\\xfd{\\\\\\xa6l\\xd6\\xd7\\xab\\xf6\\xe1\\xc1|R\\x14\\x86\\x02oJ?\\xeb6\\x82C\\x0b\\xe4\\xe7{\\x87\\x86w\\xa7\\xeb\\x9a\\xef0\\x12\\xef\\xbblb\\xd8\\xc4\\x979\\x1e\\xf7\\xdc\\xbb\\xdey\\xb5[m\\xb7+,3u\\xf9.s\\x90\\x07\\x93x\\x1fI\\xdfWUg=\\x91_\\x1fK\\xa3UtS\\xa9\\xafP\\xc2\\xa6\\x9b\\xa2\\x19\\xbe\\xb2C\\x80,k\\x9e\\xf7\\xc1\\x8a\\x88\\x9e}H\\xdb.\\xe0\\xb81\\xd5\\x7f\\xa2k\\xa6F1"(v;\\xce\\xe3\\xa6\\xf9Y\\xd8\\\\J\\xce)3\\xb8\\xb2\\x15@<y\\xf9\\xa6\\xe5L\\x04\\x19\\xd3R}\\xdbQ\\xe4Z\\x15]\\xd6\\x1f\\xc4R\\xde\\xf4\\xe5\\xec0y\\x0e\\xb7ph\\xd8\\x9abF\\\'\\xde\\xa5\\x10\\xfd\\x89%)E#\\xd7<\\\\L\\xc2\\x8db\\xf5&\\xed>[\\x08\\xb6F\\xeaC4\\xde\\x1a\\xbf\\xf1\\xa03\\xafZ/\\xbf\\x83R\\x8d\\x02\\x195m\\x92\\x8d\\xcd\\x98\\xf9\\xbb\\xef\\x0e\\\\\\xca\\xf1\\xda\\xad\\xc4\\\'\\xa9\\xa3\\xd0\\xdcyW\\xa6\\\\\\x8c\\xf9\\xcc\\xadH\\x93\\x081\\xc6\\xb5\\xa89Z\\xeb.Fd+6\\x97|\\xf5>?mt\\x80V=\\x88c\\xbd\\xd4\\x17[5\\xd8\\x8c\\xf4\\xed\\xb7\\x9b\\x8cS\\x15\\x8cg\\xd6^\\x11\\x89\\x9b\\x1ce\\xb1\\xfd<\\xf5\\xdd\\xd9\\xe3FJ\\xb0\\xdeIu\\x90S\\x1a\\xc1"{3\\xe2\\x04\\xfc\\xc0\\x9f\\xe7\\xa6\\xeeu0\\xab<\\xba\\x17\\xb6\\x11\\x7fO\\xff\\xfb\\xd7={\\xd2\\x11\\x9crDjv`\\xdbj\\x85\\xa68\\x95r\\xa6\\xf6\\xb52\\x86\\x80o\\xddSwr\\xec\\xea\\xa5\\x11\\xe3\\xf7\\xac/\\r\\x7f2N)\\xeb\\x9c\\x15\\x9f\\xa6\\xb4Q\\xfae\\xfb\\xde\\xfb\\xd4]\\xc6\\x10\\xa5\\xd6\\xb6\\x92w\\x97\\x9d\\xe0\\x11K\\xe4\\xa6j\\x9a\\xdc\\xbb\\xe8\\xa0\\x16i{L\\xa2\\x01|\\x9f\\x9fl\\x97L\\x1fkM\\xac\\x0f\\x80sX6G\\xe1`\\xf4x\\x16\\xf5,SZ\\xd7\\xc7\\xab\\xd5X\\x91\\xfe\\xf1\\xc7H\\x1f\\xbf\\xd9\\x07\\xde \\xc3\\x14Jo+\\x7f;\\xf2\\x06\\x13\\x10KZ\\xd5sG\\x9e\\xad^\\xfdh\\x9byh\\xad\\xdf\\\'\\x0eq\\xdf\\x93\\rq\\x8b\\x06e\\xe2\\x1e\\x15mF}l\\x9a\\xde\\x18\\xa7<Ng\\x05_\\x1b\\xa72\\xb3\\x9c\\xd1>\\xeb\\xdd\\x90G{\\x89Bj\\xdfw\\x18m\\x89\\x14E|j\\xee\\r\\xad\\xeb\\xe7\\xf9L\\xd7\\xd2\\xb7\\x08\\xdf\\xf1\\xc1\\xc7\\r\\xf8\\xf1\\xd9\\xa4m\\xe5\\xc7\\xa8\\xe0\\xc22\\xb9\\xe3\\xfd\\xf3\\xbc;\\xd6y\\x01\\xfe\\x13\\xa9\\xb3\\xac\\x98`\\xa1\\x9aE\\xb7Y\\xb1,\\x90\\x91\\xe2\\xbe=\\xe7@\\x94B`\\xb2\\xec]\\x7fs\\xb9\\x9e\\xe3\\xd8M\\xb9\\x1f)\\xb5[\\xfe\\n_\\x06n\\xdbM\\xd7~\\xe0\\xfc\\xfeK\\xa1_Cz\\x08\\x18\\x98y,\\xe3\\xaf\\xe4(Q\\tef\\xf7K\\xea8\\xbe\\xabP\\x19\\xf3\\xfe(\\x03\\x87\\x0fT\\x84\\xb9\\xd8\\xe5\\xbd\\xb9\\xfb\\x10\\xad\\xef\\x1d\\xfa\\x17\\x96\\xec\\x90\\x0b\\x0e\\xef\\xc3\\x91 \\nf\\xb9E\\x91\\x9f\\x82M\\x8f\\xa9\\xfa;\\x9f\\xdb\\xce\\xbeL\\xa7\\xe6\\x9a\\xcd\\xe1\\x0bl\\xd5Oj\\xaf\\xd3\\x9f\\xfb!LlT\\xd1\\xd7D\\xe4\\xf7v{\\x0f\\x87)\\xd6p\\x00\\xe7\\xccW\\xc9y2e\\xbd\\xf3\\xda\\xf8\\xfaUA\\x1e\\xcb\\x87*h\\x9e\\xe3\\xf1y\\x80t{}\\xb6\\xa6\\xff\\xecC\\xd5\\x0fw{Gw\\xe3\\x10\\x9e\\x15n\\xba\\xf8\\xad\\nX\\n}`\\xf6\\xd7\\xcfD2\\xb2\\xa1\\xfd#qH\\xe3\\x8b/o\\xd8\\x18\\xc2\\x0e\\xb8\\xb6\\x05\\x10FC\\x97+\\x0b\\xaf\\xabX\\xa8\\x85\\x9b\\xbdq\\xb3U\\xc1\\xa9b\\x97<o\\x16\\xea\\xbc\\xca\\xadN8hq\\xc8\\xeb\\xdb\\xcb\\xbfe\\x7f\\xdar\\x8c5l\\xa0=;\\xae3\\x86\\x92\\x16\\xba\\x0e\\x9c\\x03\\x92ih\\x03\\xb0}h\\xd0\\x88WB\\xd7\\x1f\\xb1\\xf1\\x93i\\x07<\\xd4#/\\x8a\\x8f\\xdc\\xba\\xda\\xb8\\xa0T\\xdd\\xc5\\xe6\\xdd\\x00\\x9b\\tO\\x93\\xc8\\xeaR\\xc1\\xc9\\xb8\\xc8\\xf9\\xc2\\xb4\\x80Cf\\x9fJ\\x1eL\\xd3\\x9a.\\x08O\\xb5\\xc9\\r\\x0b\\xc5~x\\x9b\\xc6B\\xd4ch\\xde\\xf1,B\\xff\\xfa\\xdbT\\x8a(\\xb7~\\xc0\\xcf\\x0e~`\\xdb\\xa9+0\\xbd\\xda\\x92\\xfdjui~~\\x82,i\\x7fWvO\\x824\\xdd\\x92:\\xa7\\xe9\\xfc\\xf2\\xed\\xf1.\\xaf\\xa2\\x18lDsU->C _\\xfej,>g\\x8d\\xc0\\xc6\\xc1\\x8b\\xbfIO\\xe0Fy\\xf6\\x15:!\\x92j\\xe9Z#J]L\\xd0/\\x18\\xcc\\xe0(\\x85\\x93eL\\xc3\\xfe=\\xbf\\x06g\\\'L\\xf0\\xb3g\\xf7\\xa7j\\xadrF\\x8d\\xd0\\x94\\xbbag\\xe8z/\\x1e\\xf6\\xc8\\xdb\\x8ar\\x1c\\xe6o;V\\x0e\\xbf\\x9a`z\\xcd\\xf1@{\\xda\\xde\\x17\\x01\\x9c0!\\xcbLb^Z\\xb4\\xbb\\xc5?\\xd7\\xc8\\xa6\\xab\\xbb\\x8co\\x7f\\xbc\\x1c\\x1f\\x9drz\\xc3\\x10\\x989@\\xf91\\xf8F\\xa3\\xc7\\xdd\\n\\tO\\xff\\x94\\xbc\\xb2+1R\\xdd\\xbd\\x9aRhX0\\xd4\\xda\\xbd\\xe0\\x08\\x91[\\xca\\xb7\\xd2/)g|\\x16\\x19\\x9f\\x06\\xea\\x00\\xa9\\xcd\\xf6\\x00\\x81\\xb8\\xac,\\xd5\\xd9xA\\xc7d.\\x8cZ\\x86>8J\\x1c\\xb4\\x0f\\x9fb4\\xbe#g\\x1b\\x13\\xef\\xdbl\\x10\\xd9\\xae\\xd5\\xe2\\xc2V\\x0cw\\xa6j\\xe01\\xe9;\\x89\\xabz}X~\\x89\\xd6\\x19=\\xf2\\xd8\\x13\\xb6J\\xb4\\xa1\\xb3\\x9f\\xa6\\x9f\\xd3\\xab\\x97\\x9c\\xae\\xd0\\xac\\x1a\\xb0\\xa5\\xe1\\xc9Z\\t\\xe2\\x0c\\xea\\xb8\\xe8m\\xe6\\xc6\\n\\x88]BB\\xd4\\xba1\\xf0\\xb1gc\\xf3:\\xd8\\xab\\xe7n\\xaa\\x13\\x03g\\xc4<M\\xac\\xeb\\xb8\\x18\\x94/\\x08d\\x91\\xd12\\xc5\\xb00\\x87\\x04\\xb2\\xa6P\\xcc#\\x91\\xcfY\\x8d\\x8e\\xd54\\xee\\xf7\\x1e\\xa1\\xf3:\\x8c\\x8d\\xee&13\\xbdL#\\x1a\\xa7N\\x80d\\r\\x93h\\xba\\xe6j\\x91a\\x7f\\xa0\\xa5d\\xda\\xa0\\x14);(\\xca\\x16\\x8dIP`R\\xe2<o\\xdc\\x0f\\xc0\\xae\\x91^\\xa8b\\x1a\\x8030\\xf6\\x19\\x9d\\xc0\\r\\xeaOTW\\xa0\\xd1FG\\xd4\\xd1\\xbar\\x8dw^p%L\\xf7\\xaa\\xe1\\xe9 4\\xe6\\xd4\\xccW\\x8c\\xfbg\\xc4F\\x08\\xdc\\x10b\\x86\\xb1L\\xcf\\xb1\\x0fLK\\xa4$\\xb3\\x07R^\\xca\\xfb\\xffxm\\xb9>3\\xf8b\\x1f\\xbb-\\xe0\\x0ez\\xa3e\\xfd\\xdd\\xf0\\xb2fYA\\x84\\xed\\x84Pl\\xa1\\x92\\xd3\\x82\\xdd\\x1e\\x08S\\xe0\\xc7\\xa0\\xf6\\x96U\\xd5Q\\xa5\\xd5\\xe6\\x8e)\\xf8#\\x12\\xd7\\xbf\\xb0\\xd5\\xe1u\\x17o_\\xd3S\\xf3D\\x8b\\x92\\xc8o`\\n\\xea\\\'6\\xb9\\xf4tR\\xbea\\xc2\\xd9V`K9\\xa4\\x86\\x93\\xf6`\\x08\\x9c\\x01\\xda\\x1a\\xe3\\xa4\\x18}[\\x084\\xf30\\xab>\\xdd8v\\xbe\\\'<\\xca(1xq\\xc6\\xe6\\xbf?\\xa3>\\x1fH\\xd4t\\x02\\xf292\\x836+\\xbefX\\x84\\x9f\\xb0m\\xeb\\xe0.\\xdb\\x7f\\xf5p\\xc21\\x1f\\x93\\xe1+\\xf3\\x89\\xf6\\x83\\tw;\\xbb\\xe7\\xa5\\xcaE\\xe1\\x1bLL\\x11D\\xf5&\\xe2\\xbf\\x89\\x15\\xad\\xdd\\xef\\x0f\\xb9U\\t\\xe6~\\x9f\\xfb\\x93\\xab\\xbb\\x87\\x87\\xd4B\\xc3\\x8b<\\xcc2T\\xf8\\xeaS3~+A4C&\\xcbj\\xda\\xad\\xfe\\xd7\\xc9/\\xd0P\\x85\\x05\\xdd\\xfd4\\x0eYb.\\xbd\\x1aE\\xad%\\x7f\\x8fyi\\xe3S\\xbc$\\xc1Y\\xc1\\x1e\\xe4\\xe08\\xce\\xd1\\x97\\x9db3\\x9e\\xe9\\xee\\xd4n"\\xd1\\x10\\xa09\\x86a\\x0c\\x89\\x80rO\\xa88N\\x86\\xd5\\xa1\\xda\\xed\\x0f\\xd9\\xe7\\x92\\x06/\\xeb\\xdf\\x07`\\x18\\xa7f~\\x97=\\x9b\\x0097e\\x8d\\x03\\xbeWR\\xf5G\\x98<\\xd1!\\xb1\\xa0\\xd7^\\x90\\x16\\xca\\xa0\\x963\\x18\\x17\\xfd)?*c\\xe4\\xaf%\\x1bE\\t\\xcc\\xa0\\x88\\xc96O\\xd8\\x19\\xa0\\xffY$\\xb7\\x08\\x89\\xc8a7\\x9e)\\xa7D\\xd0\\x90\\x85\\x86\\x0fY\\\'d\\xd4\\xe5\\xd5\\xc1;z\\xc5\\x1a\\xb6\\xf7k\\x9c\\x9euLv\\xf08\\x8f\\r,0\\x80\\x1e2\\xdb\\x95SR\\x087as\\x8c\\x17\\xb6\\xd5\\xaa=W\\xa4\\x95<\\x1f\\xc8]Zm\\x91hxi[6\\xfb\\x19\\x1c{\\x0e\\xf0\\xf96Q"\\x00\\\\\\xdd\\xff\\xa6\\x8f#y\\x91\\xe0\\xdd#a\\xdf\\xb3\\xad\\xec\\xd6\\xb0Ath\\xf6\\x83\\xd2\\xedQ\\x9ca\\xaf\\xf5-\\xa1\\xb3r\\x1f\\xafA\\x8b\\xd9\\xea\\xcd\\x1cx\\xdf9-n\\x82g\\xd9>\\x87\\xfc\\xf1]\\x0e\\x11\\x8f\\xb5\\xb9\\x87\\xecC\\xcb\\n\\xd3\\xab\\xf3\\x1fKc\\xb0H\\xd6f\\x0bpFI\\xad\\xcaVumH;\\xdeg5\\xd4D\\r><\\x17\\xfb\\xa03\\x8aw=\\xa12\\xfb\\x96\\xdc\\x13T\\xce\\xec\\xa6\\x9b~\\xb5\\xec\\xde\\xc3\\xef,\\x8c\\xd0q\\x91\\x83Z\\xe2\\x9d\\xb0\\xcbF\\xa4\\xd7F\\xafF\\x0e0\\n\\xf1\\xc8\\xac\\x9ba\\xe2\\r\\xcfC\\xa2\\xc6\\xab\\xb4J\\x07J\\xce\\x16\\xec\\xf8\\x84\\x8f,\\xd9l8\\xa8\\\\\\xf6\\xf0\\xc2>\\xf1\\x1b\\x1f0f\\xd6\\xaf\\x07b\\xa8\\x87$N\\xb1\\x8b\\x050\\xd3\\x1b\\xdd\\x8fg0\\x8bk\\xfa\\xaa\\xbca!m\\x1e\\x19U\\xe9"2\\xd9.\\xb4\\x95\\xa3\\xa4\\xb5"\\xa7\\x0f\\xd9 \\xad\\xcel&\\x85\\x00\\xb7\\xab\\xf9\\xb2\\xca?\\xa3a\\xb6=\\xef\\xf4\\xf3\\xf0\\x9c\\xa1\\x7f\\xf6\\xbc\\x8bh\\x01\\xb1bi\\xe0\\xe5\\xaf\\x9ac\\x19\\xb6\\xa8\\x1df\\xd4\\x1b\\x8a\\x0e\\xb59\\xc6\\xab\\x92y0\\xfc\\r\\xaf\\xdeE\\xf5\\xc3\\x06P~\\xef\\xf0\\x1d\\x19\\xb2\\xd4\\xadE\\xb6c \\x0e\\xed\\xdba\\x18\\xadj\\x85\\xbd\\t5\\x9dJ\\xcfa\\xc4\\x97\\x95[\\x88\\xb4\\xfe\\xf3\\x06\\x96v]\\xe1\\x88V\\xab\\xd8\\x99W\\r\\xbeVKyEE\\xd8\\x9a\\x90v)\\xbc\\xf6Q\\x9c\\x1fL/\\x89\\x83}c_\\xcep\\xc5\\xfb\\xb9\\xb6f\\\'\\xae\\x07\\xc4Z\\xb7\\xa9l\\x89\\x84F\\xe5\\xa8\\xb8{\\x05s\\xff\\xe4g\\x11A\\xbc\\xb1\\xb2\\xe4~?\\x86\\xef\\xff\\xfe\\xe6M\\x83\\xab\\x97\\xfb\\x9ep\\x08k\\x19\\xfaY\\xdd\\x84\\xe7\\xc9r \\xf1\\xb1\\x98{Z\\xc2\\xd47\\x90B\\\'w\\xfa\\xd3\\xc4x\\xd1\\x99\\xfboq<\\x92\\x8d;\\xcep\\xd4\\xa9)\\xc9\\xe1\\xab\\x1d,\\x91c\\xa39\\xb9z\\xb9}te.\\xf3\\xd2j\\x02\\xaf\\xbb\\x88\\xd5/\\x86\\x16;?:VGtn\\x1e\\x1c\\xa5\\xd4?\\xf1\\xc7<7\\xc0Yz\\xc0C\\xa1hC\\x95\\xd4\\xbd\\xdc\\xfc\\x85\\xc0\\xd9\\xf1\\xe6h;U\\xfes\\xc2\\xc5 /\\xeb\\xce\\x8a\\x98\\xe8\\xc6D\\xdcE\\xa2\\xc2\\xf0s>\\xd2 (z\\x9eE\\xc3\\x90\\xf9\\xc3\\xeb,\\xff\\xdc\\xd6\\xa2evW[/M\\xf23\\xa6\\x0f\\xa3\\x1d?k\\xe4\\x9c\\x1d5%v\\xae\\xd6\\xecd\\xcb\\xa7\\xb6\\xee\\x0cP_VOk\\xf3\\xdd#\\x99T\\x9e{\\x8b?\\xcb\\xb23\\xd5\\xccb\\x199\\x7fSA\\xd41f\\x88@\\xb7g\\xa0\\x11\\x95o\\x90\\xf8\\xceN\\x86\\x7f-\\x11\\xbb\\xb0@\\xa6\\xb6\\x82\\x9e\\x19\\xb3\\\\IZ\\x89pd\\x1a\\x845C\\x9f+e\\xe9[m\\x83\\x9c2/\\xb4W\\xc0\\xee\\xd4\\xe4\\xc6Xr\\xe4C:\\x81\\xdf\\xef\\xac\\xf6\\xc6n\\xae\\x12\\xed0\\x0b\\x04u\\xde\\x9f\\x83\\x10\\xfc\\xf4v\\x06\\xa4\\x04\\xbeM\\xa3#\\xf2]\\xca6\\x0b[\\xf2/\\xc4\\xbdn\\xa6\\x1c\\x98u\\xf9\\x1f(\\x01\\xdar\\nendstream\\nendobj\\n31 0 obj\\n<< /Filter /FlateDecode /Length1 1461 /Length2 6425 /Length3 0 /Length 7422 >>\\nstream\\nx\\x9c\\x8du\\x05T\\x94m\\xd7.-\\x0e\\xd2%\\xa02tw\\x87\\x08\\x03HK\\xe7\\x10\\x8e3\\x03\\x0c1\\x033Cw\\x83  \\xd2"JHI\\n\\x88\\xbct\\x83tH\\x88\\x84\\x82\\x84R\\xd2\\xed?\\xc6\\xfb\\xbd\\xff\\xfb\\x9d\\xb3\\xd69\\xebYk\\x9e\\xe7\\xbev\\xdc{\\xdf\\xfb\\xba\\xee\\xe1b30\\x16R\\x81\\xa1\\x1e\\xc0\\xef\\xa2\\x90X!1aQy\\xa0\\xaa\\x9e\\xb1\\xa5,PTTBXTT\\x1c\\xc0\\xc5e\\x82\\xc0\\xba\\xc0\\xff\\xc0\\x00.38\\x1a\\x83@!\\xe5\\xff\\x97\\x83*\\x1a\\x0e\\xc1\\xe205\\x08\\x16\\xe7\\xa7\\x87B\\x02\\xb5=\\\\\\x80b\\x12@1iy1\\x19yQQ\\xa0\\xb8\\xa8\\xa8\\xdc\\xdf\\x8e(\\xb4<P\\r\\xe2\\x89\\x80\\x01\\xf5\\x84\\x81\\xda($\\x1c\\x03\\xe0RE\\xb9\\xf9\\xa0\\x11\\x0e\\x8eX\\xdc6\\x7f\\x7f\\x02y\\xa1|@199\\x19\\xc1_\\xe1@\\x15W8\\x1a\\x01\\x85 \\x81z\\x10\\xac#\\xdc\\x15\\xb7#\\x14\\xe2\\x024FA\\x11p\\xac\\xcf\\xbfR\\xf0*:b\\xb1n\\xf2""^^^\\xc2\\x10W\\x8c0\\n\\xed\\xa0\\xc4\\\'\\x08\\xf4B`\\x1d\\x81Fp\\x0c\\x1c\\xed\\t\\x87\\x01\\x7f6\\x0c\\xbc\\x07q\\x85\\xff\\xeeL\\x18\\xc0\\x054qD`~\\xe3\\xc6({\\xac\\x17\\x04\\r\\x07\\xe2\\x00\\x17\\x04\\x14\\x8e\\xc4\\xe0"<\\x9008\\x1a\\x88\\xdb\\x1ch\\xac\\xa5\\x0b\\xd4w\\x83#\\x7f;\\xeb\\xfev\\x10\\x04\\xfe9\\x1b\\xa0\\x98\\xb0\\xd8\\x7f\\xd2\\xfd\\x89\\xfe\\x99\\x08\\x81\\xfc\\x15\\x0c\\x81BQ\\xaen\\x10\\xa4\\x0f\\x02\\xe9\\x00\\xb4G\\xb8\\xc0\\x81\\xfawu\\x85\\xb1\\xdeXA \\x04\\t\\xfb\\xe9\\x08q\\xc1\\xa0p\\xf1\\x10O\\x08\\xc2\\x05\\xf2\\x00\\xe7\\xf0\\xabr\\x08\\xf0\\xae\\x8a!\\x10\\x82k\\xf0O{\\x18(\\x1a\\xe1\\x86\\xc5\\x08c\\x10.?[\\x14\\xf9\\x99\\x06w\\xca\\xeaH\\x98*\\xca\\xd5\\x15\\x8e\\xc4b\\x00?\\xebSC\\xa0\\xe1P\\xdc\\xb1\\xfb\\x88\\xfc\\x9e\\xac3\\x12\\xe5\\x85\\xf4\\xfb\\xb3\\xb0G a\\xf6?\\x9b\\x80y\\xb8\\x89\\x98"\\x11\\xee\\x1ep-\\xb5?.8\\x08\\xf0\\x0f\\xe6\\x00\\xc7\\x02\\xa5D\\xe5\\xa4\\xa5%\\xe5\\x80pw \\xdc\\x1b\\xea(\\xf23\\xbd\\x89\\x8f\\x1b\\xfc\\x97Q\\xec\\\'\\x8c\\xeb \\xc0\\xcf\\r\\xe5\\x06\\xb4\\xc75\\x01\\x0f@\\xd8\\xc3q/\\x80\\x1f\\x06\\xe2\\t\\x07b\\xd1\\x1e\\xf0\\x00\\xbf\\xffm\\xf8\\xf7\\n &\\x06\\x84!\\xa0X\\xe0\\x03\\xb8\\x03\\x02\\t\\xf8\\\';\\x0e\\x86\\xdb\\xff^\\xe3\\x86\\x8fFx\\x03\\xc1\\xa28\\xee\\x89\\x01E\\x7f>\\xff\\xf9\\xb2\\xc1\\xd1\\x0b\\x86B\\xba\\xf8\\xfc\\xe3\\xfek\\xbe"*\\xba\\xc6z\\xfaV\\x02\\xbf;\\xfe\\x8f\\r\\x04By\\x03\\xfd\\x84$D\\x81BrRR@11Y)\\xa0\\x8c\\x8c\\x1c0\\xe0\\xdfi\\x0c \\x88?e\\x88\\xfe\\x13\\xab\\x85\\xb4G\\x01\\xe5~W\\x8b;\\xa6\\xbf+\\xf6\\xfcC\\x00\\xde?\\xe2\\xe0\\x03\\xfe;\\xd7=\\x14\\x8e\\xb5p \\xef?$\\xb7\\x16\\x95\\x12\\x85\\xe2~\\xc4\\xfe\\xbf\\xa9\\xfe+\\xe4\\xff\\xc6\\xf0\\x9fY\\xfe_$\\xff\\xef\\x82\\xeez\\xb8\\xb8\\xfc2\\xf3\\xfe\\xb2\\xff\\x1ff\\x88+\\xc2\\xc5\\xe7\\x8f\\x03\\x8e\\xb4\\x1eX\\x9c\\x00\\xf4P8\\x19 \\xff\\xdb\\xd5\\x1c\\xfe[\\xb4zp\\x18\\xc2\\xc3\\xf5\\xbf\\xadZX\\x08N\\x08*H\\x07\\x1c\\x99\\x85\\xc4$\\x85E%\\x7f\\xe3\\x08\\xcc]\\x847\\x1cf\\x80\\xc0B\\x1d\\x7fS\\xe67n\\xfaSj.\\x08$\\xdc\\x00\\x85A\\xfc\\xbc[pQ\\xa2\\xa2\\xffe\\xc3\\xe9\\x0b\\xea\\x8c\\xbb?08^\\xfe2\\xc1q\\xf2\\xf9\\xf7\\xbe\\xeaH(\\n\\xf6Sg\\xe2R\\xd2@\\x08\\x1a\\r\\xf1\\x01\\x88\\xe2\\xe8$\\x8e\\x9b\\xb7\\x9f\\x18N\\x900\\xb8\\xf7/&\\x03E\\x84\\x91(,.\\x04\\x88\\xeb1\\x00h\\x8fB\\x03~\\x8eU\\x02(\\x02\\xc1\\xe0zF`\\x9cqSp\\xfci\\xfc\\x85\\xcb\\xc9\\x02E\\xec]P(\\xb4\\x0b\\xdc\\x1e\\xfb\\x0f*\\xf7\\x07\\xfd=\\xda\\xbfaQ\\xa0\\x88+\\x02\\xe9\\x81\\xf9\\x0f &&\\x0e\\x14AC`\\xbf\\xa6\\xfa\\x13\\xfcW\\xcdP\\x0f4\\x1a\\xa7\\xdd_\\xd4\\xc25\\xf4\\xf7\\xfa\\xd7E\\x01\\x87{\\xc3\\xa1\\x80\\x99I\\x14T!\\xdc\\xe9ux\\xe3q\\xa5\\n\\x8b\\x97\\xd0\\x97A\\x92\\x85O\\xcd1\\x89\\x96]\\xd1RX\\xee\\xa9\\x17~\\x8e\\xbaW25\\xc6\\xdcA\\xf7ae\\xd7\\xfb\\xd3\\x0c\\xa6\\x8b#G\\\'\\xfdY\\xf8\\xb7\\x8e\\x87\\xbc\\xad\\xdb\\xb2B\\xe6S5\\x9fc\\xf1\\xd4\\xbb\\x96@;B9}\\\'{m\\x0e\\xf0[0\\x14\\xb3\\xc3\\xb0LZ\\xcc\\x12\\xf5\\xf6c\\xc3\\x9b\\x94\\xf7\\xc1D`\\x9e\\\'\\xe6\\x93\\xe7\\x112\\xed\\x12\\xab\\xe5+\\xf9\\x17\\xcd\\x98U+\\xb9o@W`\\xc1!\\x15[*\\x0b\\xf6\\x91Jv\\xf37\\x82XK6\\xceO\\xd8w\\x96\\xd6T\\xf14hp\\xba\\x87\\x89\\x96\\xe9\\xf0\\x05A,"\\xfe\\x08\\xd4\\x18\\xc7t\\xe2\\xb3\\x04\\x8e\\xcfx77\\xd7\\x9b\\xd5\\xdd\\x95&\\xb1\\x9b\\xab\\xd3Q!]\\x16I\\xcbD\\xe7\\xab\\xcd\\x96\\xdd\\x9f\\xd4\\xc3D\\xff8K\\xbb\\x0e\\x83\\xc7\\r\\x92:T-NIdgz\\xe9\\x1a\\xc9=O\\x08\\xe9\\xea\\x98\\x01\\xcb\\xd5\\xb7\\xaec!LYW\\x1em?\\xde\\xbf[w\\x97\\x8dH\\x99\\x05\\xdc<=\\xa6-\\x04\\x0bx\\xb0\\xd3\\xf5zN\\xff\\xaas\\x08\\x8dX\\xe3ft\\x0e4\\xe9tn[{\\x9d\\xb7\\x96\\xe4\\x8b2\\xa0Y:\\xde\\xbfOR/?\\xbeqoQ\\xd2\\xde\\xec\\xc6c\\xa5\\x1eUJR\\xf2\\x1cf\\x85\\x0f\\x03\\xf5\\xde\\rmNFM*\\x0e\\xb0he!\\x8e\\xa0\\x12\\xf9W}e\\x1f\\xe3\\x9f\\xc6\\xdc\\xf0U\\xe98\\xf2\\xf4\\xae: \\xa1\\xac\\xa4\\x8d\\x8c\\xbdcd\\x017\\x89\\xac\\xc8\\xa5\\xe6fix\\x0f\\x99J+\\x9diq\\xaa\\x1a`"\\xa1\\xf0Q8\\xb0\\x12\\xbe\\xb7\\xef]\\xfb\\x8a:\\xd5,JW\\xd1\\xcd\\xdd\\xf5\\xc6\\x01\\xd4+n\\xad\\x03nH\\xe4\\xc3\\xfe9\\xa6\\xe3\\xb4O\\xe2\\xdb,+\\xdeJ<\\x91~\\x80\\x14\\x92\\xc38\\xd8\\xba]\\x8c!~\\xa7\\xd8E\\xcd\\xa9\\x9fY,\\xec\\xb0\\xb0\\xb4-\\xa9{\\xad\\x89\\xfb\\xc5\\x97\\xc1\\xeeB\\xeb\\xdbq\\xf5\\x9esNO_\\xc6\\xd7}\\x879O\\xf5o\\xf5\\x93\\xa5\\xde\\xee\\x16\\xf94\\xcenU\\xc3\\x97\\x9b"u\\x99\\xc6p\\xebC#a@\\x07\\xa3\\xed\\xe0b\\x8aP\\xd0\\x9d\\xaf\\xbe#\\x1d\\xd3d\\xe1Ov\\xd1\\xbe\\x15\\xdf\\xb6\\xdd\\xf1\\xedDD\\xa0\\xb3\\x8a\\xe4\\xf5S\\xc7\\x02\\xf3/\\xe3(\\x07\\xed<!\\x97\\xca\\x96\\xb1\\x8b\\x1f\\xc4\\x05\\xd7M\\xdf\\x06\\x13wT\\xf9\\x049\\xb4\\xab\\xd0\\x146G\\xf1\\x82H\\xb2\\xeea}\\x1f\\x11\\xbc~\\\\x\\x98\\xdf-:\\n\\xf4\\xfd\\x1c\\x9e\\xab\\xd9\\xee8\\xc8%\\xc5\\xca\\xbd\\xf5\\xbd;\\xa44\\xe8!q\\xa8c\\xa2x\\x97\\x92\\xa2\\xec\\x96\\x08A\\x99\\xf8\\xc1\\xd8\\xbb\\xbf4_\\xec\\xa9\\xf6W-\\xf4\\xd9\\xb1V\\x1f\\xad\\xb3TG~)\\xdc\\x12~g\\xda\\\'@4\\x84,\\x1c\\x8f\\xe0x\\x8a\\xa5\\x8e\\x9f9Y\\xa2O P\\xffFS\\x0c\\xf6\\xd8A\\xbe\\xccA\\xee\\x9a\\x8d8j\\x13\\xc8If\\x91\\x07\\\\D\\x12d\\x10\\xba%q\\\'i\\xf0n\\xb8>\\\\\\x91\\xc9\\x9a!\\x06\\x87\\xba\\xb2\\xd9\\xdeN\\x8eS\\xfa\\x06\\xady\\x08`\\x0f\\xbd\\xcdN\\xf6\\xe1\\xbd[wp\\xf9\\xf4\\xaa\\xe6\\xad\\xf3\\x8b;\\xe8;@\\xdb\\xc0\\xc4\\xd8\\x14;p\\x05SS\\x0buF\\x98\\x9a\\xef\\xd36O\\xc0\\xd3&\\xe3MSV\\x9b\\x9aP$\\xb5\\x99 \\x0f\\x9d\\x19\\xa4/G4\\xec\\xbbcR~\\x97\\x84\\x8dB\\x83c\\xb5\\xd7\\xc1e\\x02+l\\xad\\xe9\\xd1\\x89k\\xa6T\\x8coa\\xb4\\xb3\\xc1\\x10\\x15s\\xbe\\xa4\\xfc\\xa7dF\\xeaC\\x99\\xe1H\\xe9\\x03a\\xd2\\xd0m\\x90t\\x13\\xbd\\xe1D4\\xd3\\xd0\\xf9\\x0cQ\\x88\\xe2\\x99\\xfb\\xa7\\x1bmT\\x0fy\\xe2\\x8fh?\\xb9\\x06\\xbd\\x0ev\\x91\\xf1\\x11u\\xe0\\xac\\xfe\\x1a\\xa2\\xa0i\\xda+|\\xe2\\xd2G\\xcd\\xcf\\x95**9&\\xf0T\\x0c\\xcc\\x03\\xf2\\xb2$\\x90u\\x90\\xb8fc{\\x7f\\xe2\\xdaP\\x1au\\xf0;fR7\\xcd;\\x9c>a\\xd5\\x07\\x86\\x06\\xc1\\x9d\\x12\\xac\\x0e\\xe70tv\\xf8F\\xa2\\xc1-y\\xe9L\\xbd\\x1f\\x99-W\\xe4"\\xde\\xabv\\x9a\\xb1\\x06\\xa9.X\\x05\\xc5\\x8b\\n;\\xa2\\xaf;iI\\xd1\\xa2\\\\@\\xc1\\xcfS{\\xe9\\x89\\xfd\\x80\\x94\\x87\\xa1O:]\\\'2\\x97\\xfds\\x19K\\xa3e\\xd6{\\xdd!~>0\\xf8\\xf8\\x88\\xad\\xe3\\x91\\x9e\\xd4\\x11R\\x03\\x03\\xad\\xe10)|#\\xfc\\x84\\xa9\\xc0\\x7f\\x0f\\xcc\\x94j0\\xb7\\x17\\xb6\\xda`\\xa6\\xb1\\xd4\\x8dO\\x13\\x9a\\xab\\xfd\\x81\\xbaJ\\xd1k5\\xe4;R.\\x8b\\xdfI/\\x18C\\x04V\\xa4\\xb8~\\xbd\\xd3\\xc6\\x06\\xbb\\x8e\\xc9#\\xcc1\\xf48\\xf1{\\xa6\\x1dP\\xf2\\x8440\\x87\\xa6t\\xe6\\x19[\\xd1\\xaa\\xdb\\xab\\xd5p\\xbd\\x12\\x12)\\xd3A\\x0fA<\\xa5\\x18D\\x07>\\xd8!\\xc4T\\xd9q@\\n.l]\\xbf\\x08x\\xacs\\x82gXh$\\x8d&\\xb3\\xfa\\xf8\\x90\\xe3\\xbc\\xa7\\xff\\x9bo\\xf7\\xa9I\\xc7>\\x9bb\\x14\\xbf\\x0f\\x83\\rh:\\xe7\\x8d\\xf7Y\\xbfh\\x91\\xc5\\xadFBwN\\xab\\xe6\\xc1c\\xd6l\\xe8>\\xe9laQM~\\xc2\\xa7b\\xcf\\xab\\x9a\\xc1\\x99b\\xfc\\t\\x04m\\x89\\xe8/\\x17Q\\xf3\\xe1<\\xa1\\x9f\\x08m\\x9b\\xa4\\\'\\x87\\xcd\\xfb\\x87ZRh6\\xc9\\xad-]\\xbf[\\x1a\\xddy\\xe9\\xd3\\x90\\xc9\\xa6\\x01\\x94\\x82q\\xe5$Qo\\xe8\\xcc\\x1e<\\x98\\xfcQxP\\xfb\\x1aL\\xa8I ?\\xa4\\xc1\\\\\\x13\\x08\\xb49\\xef$\\x08n\\t\\xc2+\\xd3e\\xca$\\xdb/\\x81f\\xdf\\x1b\\xaf\\x8d[%\\xb7\\n\\xc9\\xf7\\x1d\\xb9&\\x06>R\\x90\\\\\\x0eq\\xb3]\\xab\\xbd\\xb7\\xedvV\\xe2\\x0eR\\x03\\xd2P\\xf2L\\xc7\\x1c\\xcf\\xd2\\xf3<\\x8a\\x9a\\x1f|\\x1aDm\\x91t\\xd2\\xf9\\xc8\\xb9\\xc6?\\x7fE\\x03\\x8f\\xc80\\xa5\\xdb\\xa0&x\\xfd\\xc3Ee\\xa7:\\x8bdt\\x8bm\\x02e\\xd3Z\\xfdhz\\xec\\xe2\\xed\\x1f\\xfe\\\\sV\\xe3|\\xf7\\x1f*A;b\\xf2\\xfd\\xd3\\xb5\\xd7\\x9a\\xf8\\xec\\\\\\xbc\\xa28\\xc1\\xac_\\xb6s\\xcc\\x1e\\x9bPW\\x1cK\\xdf\\x8c\\xb6\\xa7\\x05\\xbc\\xed\\xba\\xfd\\xf1\\xf93\\xa2s\\xc2\\xa5%\\xfe\\x84\\xcf_\\xae!\\xdc\\xcat\\xd5\\xd1\\x80N\\xa3;\\xa1\\xcb\\xee\\xc9\\x9e\\xd8\\xa6\\x91\\x9dG\\xc9dhc\\x8a\\xa3L\\x93=\\x8e\\xb0\\x86)\\x9a\\xd2\\x93&\\xd1\\xe5\\x94\\x01\\xe6\\x0b\\x87\\xfc\\x1a=\\x9b/\\\\~7\\x1dh\\x9b\\x8b\\xd2-\\x9f3\\xbd\\x8f,\\x81H|&|Jk\\x9e\\xf5\\xb6\\xbfgaW\\xedE\\xf1\\x94 \\xf7kG\\xb6\\xee\\x99\\xb0\\xe2\\x98\\xb8\\xe9\\x11\\xe6M\\xf7\\x1f\\xb6\\xc0*b\\x00K\\xad\\xce\\x19\\xb9\\xca\\xd2K\\xe2@\\x19\\xb3\\xfe\\x89\\x89\\xaeTP\\x8a\\xf7\\x11i\\xe8X\\x1f\\x91\\x9e\\x9a\\xb8\\xf4\\xe8\\x8d\\xb3\\xe5|f\\x9fJT\\xc6[\\xf9\\xec\\x88!\\xb6\\xa88jv\\xb5%\\xa0\\x02\\xad+\\xc7\\xee^f;\\x0f^C\\x86\\xb9*\\x80\\xd1\\xda\\x07\\xc3}s\\xc4y \\xc0\\xaa$HEco)\\x96\\xb1\\xde\\xe9\\xe3I\\xc8\\xf2\\xc6\\xf2bd\\x9a\\xd1a\\x08kE\\xf9\\xce[\\xd7\\x1d\\xee\\x84\\xd7\\xaf\\xbbm\\xbeE\\x15 \\xcd\\xc3B\\xaf\\xf7@\\xf3\\x96_Jq7RH\\xb3_\\xfc\\x98z\\xbc~\\xa86U~x&Zp4=Ze\\xf9\\xfd9\\rg\\xf7t\\xdfly\\xf6\\xae\\x1a\\x83\\x92\\xd7\\x8c\\xd1yHO\\xb0U\\x14\\xe4\\xafl\\xba/\\xb2\\x9dKm\\x06\\x98\\xa2Yy\\xbe\\xe38\\xf6\\x17\\xea\\xd2\\x83\\xd2\\x1co\\xbd\\xda\\x8b\\x1c\\x1a\\x03\\x8f\\xb39\\x03f\\xa5\\xcf\\xb50,E\\xe4\\xae]\\xb2&\\xad:\\xe1\\x9d\\x9c$|I\\x8bc\\xeda\\xbc\\x97d\\x96;\\xc4^\\xca\\x9f;\\x9a%\\x1c\\xc1\\x9d\\xa6\\xc9\\xdd\\xf5MW9"[\\xf6\\xc3\\x0f\\xaf%>\\x80f\\xd4\\x01\\xf8\\x9a\\xd9\\x84\\x17o60\\xaf\\xbd\\x1f5\\x8f\\xa8\\xbb\\xff\\xe9!%t\\x88\\xa4/Me\\xbe=\\x94\\x93\\xd0\\xab\\xf0\\xce\\xf5\\xad\\xca\\x18\\x06\\x95\\x1b\\x80<\\xce\\xd3\\xe2\\xd2x\\xea2\\xfdv\\x92Z\\xe5U\\xa8\\xd2X\\xa2\\xba8\\xc5\\xec\\xa4\\xd6S\\x9b7F\\xcb=-\\x02\\xbd\\x89\\x1d\\xba\\xe9\\xf6\\xf2Ws\\xc50WY\\xf4\\x9b\\xa5\\x10\\xe6@\\xdd\\xb9>\\xc2\\x0b:{E+\\xca\\xe4\\xd3\\xcc\\xbb\\xc9D\\xf0,\\xcdH&\\x9eCC\\xaa\\xebNr\\xd6\\xed^\\xeeS\\xcf\\x9f\\xcfQ?\\x1f9\\\\>t\\x87{%E\\xdcX\\x81dl\\xc7\\x81\\x84ghn-\\xb1_\\xe33\\xea\\xe0\\x14k\\xcd^\\x92\\xfc\\x14\\xf3\\xbc<\\xe2ey\\x9a|\\xbb\\x85\\xc7\\xc5\\xd8\\xf2\\xab\\xca\\x95\\xd6\\xb7\\xbe\\xb5w\\xd9o\\xcc6\\xb03\\xbc\\xe4\\x195\\x93\\x10\\xfa\\xea\\x860>j\\x11\\x12\\xcc\\x18\\xb9\\x14\\xfc^m\\x13\\x1e\\xca\\x92\\x1a=\\xc8\\xbbD\\xa4$\\xe6ip\\x8b[\\xdc%\\xff\\xc6\\xc3]7\\x06q-\\x86\\x9b:\\x179 \\x9eY/\\x8d\\xb0n\\xe6\\xa8\\xfbu\\xe8d\\xad\\x94\\x95}\\xba\\x84\\x11\\xf0\\xd9V\\xc9\\x9e\\xae\\xd3{\\xde\\xb5-\\x1f\\x02\\x92\\x07\\xf4\\xf0\\xf2T\\x83\\xf6Q\\xd7n\\xde\\xed\\xd7\\ri\\n\\xf0\\xc6g6X\\xd9\\xac\\x156S\\xce\\xa8\\xf5\\xe86\\x08J\\x95\\xc1\\xff,\\x0cM\\x1cy\\xc7I\\xaa\\xc9\\xd1U|XV\\xdfc\\xa4\\x16\\xf6\\xca\\xd5\\xb3\\xca.\\xed{\\x11\\xe3\\xbcX\\xf7\\x9bj\\x88z\\xc6k\\xba\\x07SdU\\x18\\xc1\\xd7GP\\x99\\xe4H\\x9fi\\x03f\\xda\\xe9\\xa3\\xc4\\x0c\\x88\\xc5b\\xb3a\\xaa\\xfes\\xde[\\xb1\\xfd\\x97\\x949\\xde\\x87\\xb1\\xcem\\xee0\\x16C\\x99\\x13\\xa8\\xe7w@\\xd1c\\xc6}R\\x9bF\\xbf\\xb7Ie\\x8a+\\xc3\\xe4\\xfe7\\x1d\\xd6\\x98\\xbe\\xe9X\\x8c\\xdcB\\x15\\xb9ElN=\\xcc\\xab\\x0c\\x9a\\x80\\xfa>\\x9d\\xf1\\xa3\\xe90\\\'\\xb9\\x06\\x96\\x7f\\x19jT\\xc8\\x96\\xa2\\x9d\\xbb/\\xdaM\\xe0\\x06\\x15\\xcb\\x85>\\x03u\\x9a\\xe9\\x10\\x9a\\xb1=%5)k_q\\t\\xeb\\x8c\\xb0|S@\\xa5E@}\\x16\\x1b\\xed\\xf2\\xe6\\xab\\x0f\\x7f\\x8c\\xf8\\xd5\\xf17\\xa3\\xda!\\x1f\\xe1\\x91\\xb0\\xc6o\\xd2\\xaa#\\xf3\\xbcI\\xe5VG\\xa7\\x9ft\\xe5\\xc6\\xed\\x94\\xa9\\x99,\\xdd\\x95^\\x041yw\\x12\\xdd\\x14\\xc9NY\\xcbM\\xd3\\xff(\\x9bUQr\\x8b\\x84])\\xf3\\xf3\\xe9~pi\\x89\\xb1\\xbd\\xd0k\\xfd`\\x1e\\xda\\xeb\\xdcz\\x8c\\x96O\\x8d\\xce\\xdf\\xc1\\xcc\\xcf\\xcb\\xab\\x0f\\xd8X\\xb27F\\x94\\x0fE\\xb6h\\xd8\\xa2\\t\\x02\\xbb\\xdd\\x039\\x8a,\\xba\\x84\\x9a=4\\x9e\\xd5?\\x1a\\xc3.<\\xdfF|\\\'\\x12lCp\\xe3\\xa1,j\\xe4\\xbe\\x0b@\\x940\\xd6b\\x87\\x86\\x91\\xc0\\xb8\\x9c\\xc4\\xf1{s\\x9b_%;#\\x86\\xe0)\\xa2\\x9a\\xb5\\x9f\\x8f\\xb1O{\\x177b\\x93Z\\xee\\xd3\\xadj\\x02\\x88\\x12\\x0e\\x15*\\x86\\xef\\xff\\xc8*+\\x8dT\\x87&\\xb0\\x9d\\xa5Q\\x95.<\\x966\\xa0\\xfe6s8H\\xaf\\xc7Q\\x9e#\\xcb\\x9c\\x118l\\xde\\x86\\xaeii\\xa5=v\\xf0`\\xf0PU\\x87u\\x0c\\x97o\\x99\\xf0\\x8e(\\xa9\\xa7\\x9f\\nK/\\x7fs\\xbc\\x12\\xcf0/1W\\xaa\\x8b\\xe2\\x00\\xf3\\xd4\\xd3-\\xb5=x\\x94p{\\r\\xdfX\\xa9\\xc4m:T})\\xff\\xe1-j\\xc9\\xa4\\x0f\\x13\\x8dv\\x1c\\xfc`\\x85g\\x9fWw4\\x07\\xa5\\xe7\\xce\\x1d\\xca\\xce\\x0bLN\\xf3o\\x05,\\x8fnF\\xf9\\x0c$\\xb9,\\xde@\\xc5\\xbeLJT\\xfc\\x1c[\\xd7\\x84\\xa7\\xb5\\x987{;\\xc3\\x1054\\x14U\\xec\\x0f+R?m\\xdf\\xe0\\x89[\\xe2O*\\xb5q\\xb8\\xdf\\x1f\\xa0\\xfc\\xc2@\\x948!\\xb8\\xc4$\\xec\\xca\\xb5\\x94\\xb2"Y\\x87\\xc4\\x0b\\x02y\\xe0A\\xfc\\xc8r\\xed\\xe4k!\\xb59\\x99\\xdc\\x93\\xb1A\\x82\\xaa\\x19\\x1d\\x1e\\n\\xb6\\xaf\\x93\\xf7w\\x83[N\\xf4\\xd2\\xa2\\xacW\\xeb\\xf2dQ\\xeb\\xe1\\x8f\\x98E\\xda.\\x1b\\xed5\\x0e\\x1c\\xa7\\x96\\x9a\\xa3\\x13\\xab\\xb2\\r\\x83s\\xe2\\xc9i\\x12\\x88\\xe8/?\\xfa\\xe6+\\x9d\\xf7\\xbf\\x19\\n\\xd7lI\\xca\\xcc?\\x04#CI\\x9e4\\x10\\x9aW\\xf7\\x10\\xcd\\x96\\xe5\\x05bT\\x85\\xc72\\x94+MO\\x1b\\xab\\xf4\\x9ci\\x07\\xde\\x0b\\xbcp\\xd8[\\x88:t\\xaa^q0\\xc4S\\xc5\\xabuCZ\\xcdFY/\\x14\\xf9V\\xda\\xa2\\x08\\x86\\xeb\\xa4F\\x15M\\x9b?3\\x8e\\x96\\x8d*\\xde"7\\xb2\\xcd5\\xc5\\xfd\\xe1]\\xf4#\\xf6\\xca\\xc8u4Nj\\x93\\xdf\\xf9\\xa5E\\xb3\\xaf\\x83G\\xd4\\x0f\\x9e&\\xdb:\\x12\\x08n\\x9ek\\xc1\\xf3\\xe2\\xb8i\\xd8\\x90\\x8c\\x9c!\\x17{fJ6^;\\xcdWl\\xd9\\xcb\\x96\\xb8;r\\xd5|s\\x1fN\\xbb\\x94L^pF\\xc0\\xa0\\x9c\\x9d<\\xf0\\xee\\x85\\xa0\\xe0\\x90R\\x88\\x86\\x8f\\xa5\\xcam\\xf7\\xe8b\\x0b\\xd2l\\x19\\x1d\\x93\\xe8;\\x9f\\xf8lg^\\xf9\\xeb\\x1f\\xf1.K\\x8a\\xb3N!-\\x9c\\xe5\\xdc\\xbe\\xab\\xbf\\xbe\\xad\\x8fX\\x14\\xa9\\xf5\\x91\\x12\\x90]\\xcd\\x92\\xd61\\xb7\\x8d\\x96\\xf6,\\xd9Q\\xc1|^a\\x9e\\x1cI\\x15y\\xd5Q\\xdf[\\x98^\\xc3b\\xe4\\xdd\\x17a\\xe0\\xac\\xbc\\xa5&\\x1f\\xf8^\\x87\\xf8\\x86\\x1dP:[7\\x1c>\\x133\\x91@iH\\x9e\\x03\\xf2\\xed\\xe3\\xd4\\x8d.v\\x0f\\xd00}\\x98\\xe6\\xb0\\x84\\xec=\\x07|\\xaa;[;XP7\\xd9T\\xdc\\xee\\xf7<\\xbb\\rz\\x8e\\x9c\\xdeG\\x17\\x06\\xb0\\x03\\x08"W\\x0c\\x14I\\xff\\x9a\\xcf\\xf8t\\x94\\xe5q\\\'|\\xaeo\\x8f\\xcf\\x80\\xfe\\xd0\\xa6\\x7f\\xad\\xe0\\xc1\\xd3\\xb7\\xe5M\\xc8O\\xd1_\\x18o\\xbe\\x8c\\x1f;\\xc0gY\\x98\\xea\\xea*\\xd9g0\\x01\\xb9\\x8do\\x00\\xc4CP\\x18\\x1f#\\x19)&5\\xea\\xd1\\x03\\x1d}\\xd9\\xd3r\\xaeM=\\xeb\\x07\\xdd\\xf3k\\x8d\\x1f\\xba\\x9a\\x053\\xeb\\x8e\\xe1kdl\\x1e\\x9e\\xaf0\\xa9~%\\xb4\\x98#\\xd6\\xd4\\xd8\\xf2\\x19K\\x8b\\xee\\xb6b\\x01\\x8d\\x95`\\xbc<\\x07jG\\xb5\\xb4!\\xae\\xdaj\\x95\\xbbxIO\\xc4\\xd9\\xdf\\x0b\\x88\\xde\\xac\\xa5\\xcb"k>\\tW\\xca\\xc8\\x9f:&5Z]V\\xa4\\xf4\\x1ak|\\xee\\xcf\\xee\\xd9\\x83gta\\xb29\\x0c\\xb8\\xfc\\x91F\\xebz\\xd9p\\x85\\xf1\\xee\\x95\\xb4\\xe7\\xf5\\x83\\xf5\\x15\\x9a,\\xe7\\x93GO\\xab\\x1f\\xd1\\xa8\\xa9}\\xac\\xee\\xba\\xf36\\xbd\\xb0\\xe6\\x85\\\'\\\'k\\xc3\\x12a\\\'\\xe3\\x01\\xb8pzyAs\\xccr\\x84\\xd9\\xda\\xd7\\xe0G\\xa40\\xa2.,\\x89\\xb7.\\xe5,\\xf4\\xd9D\\xe2\\x04\\xa41S\\x86\\xae\\xca\\xa2k\\xe3\\xf3\\x82\\xc4\\x8f3\\x89\\xaa\\x9cG*4&\\x93\\x10\\x8a\\n[\\x9f4y{\\x94\\x8f\\xa9\\x80\\xd7;\\x85Q\\xca\\x84\\x95\\x02\\xb2\\xc86t\\xa4I(\\xf8\\xb4!C\\x92\\xfe\\x88\\xf6\\x86\\x1d#\\x07\\xe2\\xf4\\xc2\\xd3\\x12t\\xd3Bar\\xe3\\x9eS\\xb6g\\x97\\xf35\\xf9\\x08\\x93\\xa5\\xd9\\xfe|\\x02\\x8a\\x1f\\x0c\\x0f\\xe5\\r\\xad{\\xfdg\\xc9\\x97\\xa2?\\x98\\x86IT\\x0c\\xe4\\x1a"\\xf0\\xfd\\xc9#\\x17\\xb5\\xa3s\\x97\\xd4\\xb5zj!\\x04\\xf3\\x0e\\xf5\\x84\\x11\\xa3\\x10\\xbe\\x16j\\x1a\\xaeo"{+_\\xd4(^\\xde\\t\\x18\\xb6"\\xbeZs\\xa8\\xd4\\x95\\xea\\x91c\\x17\\xda(\\xfd\\xd6A\\xf0\\xeaR}\\xbd\\x9e\\xa9[W?\\xb3P\\x95\\xf0\\x87\\xc2\\x08\\xd7<Y\\xd7\\xbc\\xd7\\x97\\xe2r\\xf2g\\x90-\\xbf\\xf1\\xaa\\xd2\\xa0}\\xaf\\xe1mK\\xcd\\x9c\\xca\\xc5\\x88\\x9a\\xa4\\xd0\\xf9\\xd4\\x9cD\\t\\x0e\\xa9\\x06\\xddp\\x14\\x9d\\xb3)\\x87y\\xfc0\\x946\\x99\\xbe)TY\\xff1\\\'\\x01\\xfa9\\xc9\\xc7\\xaag\\x15-}B\\x1cn\\xdb\\xdd\\x03\\x1b\\xe5i\\xda%t@\\x9aUu6\\xd2\\xea3\\x81\\xe9\\x1f\\x92\\x96\\xe9\\x1f\\x86y\\x84$\\xadm\\xef\\xe0\\xcf\\xd9\\xa7\\xc6\\xad\\x93\\x1f9\\x91r<Nnp\\xf1\\xf2K)6\\x18\\xa65G\\xd5\\xfaf\\xe5\\x84\\x11>\\x83s\\x1f(w\\x0b\\xe6\\x91\\xb3\\xb7\\x1f^\\xc4\\\\\\xa3\\xa2\\x19Fo\\x02\\x98a\\x7f\\xa1\\xb5\\xd0:\\r_\\x98\\x92\\xbb\\xbfK\\x88\\x9c\\r=.\\x02s/5I\\xc8\\n\\xa7\\x13r\\xabw\\xa7V6\\x06Z]\\x06\\x1b\\x07\\x0b\\x87<\\x08\\xd9\\xa8\\xaf\\xdaT\\x06\\x80\\xa4\\\'\\xbceCn\\xd7\\xb2\\x9f\\xe7$%M\\x07\\x0f\\xf8\\xcb\\xc9J\\x9a\\xfd\\xd5\\xb1\\xab\\xfb\\xeaQL~\\xa2;%k\\x84\\xc7\\xc9Y\\xdd\\x81\\x9d\\xb8\\xd1\\xe5y\\xff}D\\xc3\\xac\\x02p\\xf1LT\\xb9\\xdd\\xe1\\x98W\\x94\\xbfs$\\x9a\\xb9`\\xbd%\\xf7\\xe5\\xe9\\xc3\\xf0\\x8bCk\\x8c\\xb9\\xa4m\\x98\\xe9;\\xf9)\\x8a\\x04!\\xba\\x0c\\x95 \\xe8\\xc3\\xc8\\x8e\\xca\\xd4o\\x9f\\xb2U\\x98\\x03)u\\x88\\x92\\xee\\x11\\x1b\\xc3\\x87\\xf4\\xd7\\xa1t\\xcfB\\xc1\\xfc\\xca\\xe9\\xeba\\xa5|\\x8b\\x015\\x9e\\xb6~\\x99\\xd7\\x89\\x00y]\\xed-\\xd9\\xcf\\xea\\xeeCF\\xbdW)\\x95\\xe0p\\xcb\\x88oY\\x91\\xe4~m\\\\\\xfaf\\xeaGK\\x91\\x89kn\\x07\\x82(\\x06\\xa4tt\\xbfR3\\xc5\\x0eU\\x001\\xd1+z\\xdb=\\xf7fj7\\xb37\\x17\\xa67\\xe8\\x004=W\\xe3{z\\x8d\\xd5G\\xfa\\xf1\\xd1\\xad\\xa4[_\\x8dQ\\xe5\\x84\\xd7"\\xa52\\xb5\\xbb\\xf6\\xf9\\xf0SIt\\x8eeb\\x13\\xe4\\xb4\\x84\\xbak\\xf9]\\xce;9sM\\x8a\\xe3.!\\xd5\\xc3\\x8cXg\\x8e\\xef\\xfbT\\\\{R\\xae =\\x18\\xdd\\xd0L\\xcai\\x82\\\\\\xa94\\x94\\\'\\xcdl]A\\xe8G\\xd9DO\\xca\\x89\\x10\\x82A\\xd1\\xb6}\\xf5\\x01\\x95\\xbefOe\\xe8\\x12sb\\xde[p\\xcf\\xb0\\xf1J\\x91\\xd5\\xe7\\xe8o\\xcc\\xcaH\\xe7\\x12X\\xde\\xcb\\xbb\\xbbw:\\xcfY$\\xf1\\x9aS\\xa6\\xb2\\xe5\\x1d\\xbe\\x93\\x1e\\\'*\\xc5Po\\xdd\\xae\\xbc\\xcc\\xdcp]\\xcce\\xcd\\x1b\\xe8O\\xda*\\x8b\\xe8\\x0b\\x12\\x92~%\\xc3\\x04\\x9b\\xaf:\\xe3\\xae\\xd3\\x81du\\x82\\xbb\\xf4\\xb9\\xa4\\xd6"\\x1d\\x87"[&\\x07\\x8c6\\x05\\xb4\\xe5\\x85\\xc9gm\\x8e\\x12b\\xf9a\\xea%\\x8b\\xd1\\xa1\\xbd5I\\x12\\xd4"Y\\xaa\\x0e\\x87~\\xcc\\tw\\x9c\\xb1\\xc7\\xa5\\x8f\\xe7\\x92b\\xb7I\\xbe`\\xdb\\xf6\\x9f4~\\xe0\\x94~\\xfb\\xe1\\xc8j;\\x16\\xd4$g\\x89\\x98\\x98\\xda\\x13#\\xd3\\x1d\\xa2\\xc0pO\\x8e\\xb7\\xd6]4/+D\\xf9L\\xbc\\x8b\\xb3\\xb9\\xc1\\xd4j\\xc9\\x1a\\xc9sU\\xe6\\xa0W\\x88\\xa6\\xd5\\xd3M\\xff\\x8a\\xe1\\x11;\\xc0\\x1a\\xe2\\xf3\\xea\\xc3\\xd0f\\x8f\\xcd\\xda\\x13P\\xd9@\\x9a\\xc2\\xdd\\x98\\x0b&\\xd0\\xd2ae\\xf3_v\\xe6\\xef\\x1f\\xe6J\\xdar~\\x9b\\xbf^\\xcc^\\xb5\\xf9\\xb4\\x0c\\xd4\\x082b\\x1b\\x87\\x923\\xa63ACWg4\\xdc\\xfbs\\x8e<\\xf3\\xc2\\x18\\xaf\\xd8L\\x04Vw>\\xd1\\xe4\\x1f\\x90\\x03\\xa4\\xb6\\xd8\\xf4\\x90\\xa8\\xc6tM\\xe6\\n\\xa5}\\xbc5Ql4\\xe4\\x04~\\x7f\\xdd9\\xc49\\x90\\xbe\\x94-Y\\x84\\x9dx}"\\xe9\\x18_,\\xda\\x8d\\xe5Z\\\\\\xdc\\xc5~\\xcc\\xb3\\x9d>3.\\xfc]\\xeaW\\x80\\x93\\xa9f;}\\t\\x92\\xe5\\x83)QM~\\xb5\\xc7\\xa4\\x9f\\x0b\\xf7\\xdf\\tKS\\xfar\\x90`\\x9c\\xf8Gf\\xd9x{\\xc7\\x02\\xca\\xe2\\x82\\x1b94\\x1b\\xcf<\\xe3C\\xf7|\\x03\\xe2+\\x88i\\xc6\\xf3*5\\x9f\\xa5\\x98\\r\\xee_\\x06\\xaf\\xe2\\x9d\\x10c\\xbbn\\xbe\\x1b\\x15\\x14f\\x13p\\x99\\xce2\\x1a\\xed\\xfd\\x08\\x14F\\x89\\x98\\xc8\\x06\\xa7\\xadG\\x19\\xfe8\\x83+\\xf9\\x82\\xd9\\xac\\x9f\\xdcO_\\x92u6Q-H\\n\\xde\\xb0\\r|)\\xdc\\xd9X\\x9ds\\xb8qT\\x88\\x16\\xae\\x84Fq\\xae\\xa5\\xc4,i\\xe5p\\xf5\\x9e?\\x9b,r\\xbaP\\xe9\\x88\\xcb4\\xddIi\\xe0\\xcccS\\x16\\x0c0b\\x0f\\xa1,\\xf7k\\x99\\xa3\\xf7\\x13t\\xee\\x8e\\xd0\\xed\\x10o\\xa8\\xd9\\xd6>4\\xd33\\x17\\\'&\\xc7\\xd7^VI\\xb0\\xf7\\xbf)_\\xa0\\xd5I\\x03\\xa2\\x1f\\xe0\\xbf>M\\xac\\xd1\\x81!\\xceaR\\x1b\\x9b\\x13$d\\xb5\\x0e\\x14\\xde\\r\\x91\\x9bR{Q\\x01\\xee\\xa4eJ\\x85\\xbe\\xe1l\\xbdA,\\xc0\\x7f\\xb2\\xc7=\\t\\x0c\\xf4\\x1a\\xe0\\\'\\xb5\\x13\\xd6\\xf5\\xb0j\\xad\\xc0\\x1f\\xd3\\x1a\\x17\\xcc\\x19S\\xeba(\\xa1\\xcf\\xdah\\x8c\\x0eW\\x9c\\x07\\x84M=\\xadm\\\'\\xce\\x1e@\\x8cY\\x14\\xe4\\x8c\\xacDU\\xb4\\x8b\\xd8\\x9c,\\xf6\\xfbO\\x19b6\\xeb\\xf8\\x82P\\xc9\\x01\\x19\\xcb9\\xfa\\x02\\x1f\\xbdl\\xa8\\xea\\x18ig\\xc8<*J_\\x14\\xd5\\x88\\xe4\\x02\\x14\\x95C\\x08\\xacJ{\\xe76U@\\xc3\\xdbw\\x07k\\x060X\\xd6\\xfcU\\x95\\xa1\\x00R\\x86\\xde\\xaf\\xcd\\xc9r\\xf9\\xf2\\xc7\\xf3\\xe4?`\\xf3%\\x15\\xa78\\xd1\\xb4_\\x98\\xedNm+{\\x89C;\\x84\\xc7\\xde\\x98\\xe9\\x18\\xb3xS[\\x0c\\x99V\\xd5^\\x1d\\x01\\xe86\\xfc\\xf0\\xea\\x9c\\xa1_\\x08\\xf8\\x0bB\\xb7\\x99\\xf9\\x0e\\xf5~[\\\'\\xfd\\x9dc+\\xe3\\xb1\\xe0i\\xfd\\x84\\xae\\xc9\\xb7k\\xd2Wl\\x07U\\xff\\xea\\xdb\\xe7]\\x85G\\xf4d<\\xe0\\xc0\\xa6\\x10\\xbe\\xdbY/\\xbe\\xc3\\xe3\\x9a\\x1b\\xc2\\x03\\xc7\\xba\\x10\\xabKxu\\xb5\\xe8\\xa6\\xc7\\xcaH\\x84\\xc1t[t\\x9cy<\\x12\\xf7&\\t>\\xd3{~\\xaf\\x97&-\\xda?\\xd5\\xb5\\xc1\\xaf!Lv\\x96\\x0b\\xbc\\xc3\\x1e\\xd0\\xc8\\xc5R)\\x03\\xc0\\xaf8\\x94S\\x81H\\xe21\\x8d\\x1e\\x13\\xe6M\\x87\\x06\\xf8\\xdc>3\\xbf]\\xba\\xe8\\xc1\\xf4\\xe3\\xcb)\\xc9\\xad\\xdc)\\xea\\x93\\x01\\x0e\\x87\\xd5\\xacYF\\xee\\x16\\x8fg\\x98"K-LtB{\\xd0#)4\\xaf\\xf1\\x16\\x87\\x08\\xd4\\xe4\\x16\\x89\\xeaR\\xd9\\xec\\x1b\\xd6\\xe1\\xbe\\xdb\\x07\\xb2m\\xf8\\x95\\xfav\\xd1i\\x96\\xdea\\xe3\\x9e\\x8cR\\xc9\\x9c\\x85\\xd7\\xf6\\xd3\\x01\\x1e*\\xd1"\\xe7\\xebJ\\x03E]\\xe5\\x104\\x82\\x01b\\xab;o\\x95{o_\\x8b\\xaaV\\xa9\\xd0\\xb6\\xbb4x=] \\x9a\\xea\\x924\\xb2\\xea\\xda\\x81 \\xb1\\x7f\\xfe+%>\\xd2\\x95\\xb6\\xa1\\x07f\\xed\\x7f\\xd5|\\xd5\\xd2\\xed\\xf4\\xd0\\xd8\\x90oO\\xf2\\x11\\xce\\x95T\\x12\\x00L^\\xd2v\\xbd\\x0fx\\x9a\\x8c\\xe7[\\xbb\\xd5\\xa8\\xbbs\\xfb\\x92\\xf4\\xe1\\x96W\\xf2\\xb5`\\x83\\xb9\\xed\\xf5+\\x0fT\\x1a\\xf7j\\x0bI\\xf02\\xc8\\x94\\xc3,\\x9a\\xd8Q~U5\\xaf[\\xcf\\xba%\\x8c\\r\\xcc\\x17\\xa7\\x0f\\xe4\\xcc\\x9c\\xda\\xe7\\xa8\\xc0\\x8b\\xea\\xfb7\\xd2\\xab)\\xcb\\x83 \\xb2\\xad\\x96\\xa7\\x1dO\\x1e\\x8d\\x92\\x15\\\\\\x97\\xa5#\\xaa\\x0b\\xd2V\\xfc\\xee\\xd7~z\\xbd["\\xe7\\xd6\\xa2\\xc9\\x05\\xbb\\xd4F8\\x94jzG\\xe5+\\xad=\\x85ym\\xe7\\x15\\x8c\\x81OnRa\\xdb\\x839\\xea\\x91\\xbcq\\x90\\x03\\x1f\\xe5\\x8d$\\x9d!\\xe1Py\\xad\\xd5Q\\x1b\\xc3\\xb8r\\x05\\x9e\\xb0/\\x981\\xf6<\\x8e\\xcar\\xe7\\x1d\\xefW\\x8ao^\\xd4\\xceN\\xe9\\xdb}x\\xcf?\\xe7\\xf9\\x06V\\xb3\\xb9\\xf2nk\\xb0\\\'\\x7f=\\xe4s\\xcfV\\x0c\\x13?\\xa7\\x98\\xa8\\x0c\\xe1\\xbd\\x00\\xf5\\xfb\\\' <eN\\xe9I\\xf3\\xc3\\xf1\\xb7\\xe1o>\\xaf|G\\xdfU\\xb0\\xfa"o\\xa4N]v\\xcb\\x13&\\xf6*7@\\xeb\\xadA$\\xa9\\xb7\\x7fo\\xae\\xc3\\t\\xd6\\xf5u\\xfbz}W\\x8f\\x91\\xe9G\\xd3\\xd6\\xdaVOa]\\xd2\\x82\\x8a#\\xfa\\x89\\x1c)+\\xd0\\x93\\xeb\\xf6\\x04\\x07\\xbb\\xe4M}Q\\xd3\\xa8\\xaf\\xb5\\xe4\\x9c\\x1c:s\\xb0\\xab \\x02\\xb7\\xb8\\xf8\\x82\\xea\\xda\\xc7!X\\xda\\xe69\\x8ap\\xcc%E\\xb6\\xfb\\xf1\\x14\\x94\\x1cA~\\x85i>=\\x17\\xe4\\xaa\\xc0 5\\x85\\x94\\xa9\\xa3\\xb28\\xae\\xf7g\\x8eIEu\\xce-e8\\x9f\\xeeC\\x0b<\\xd4\\xa8\\xe8\\r]\\xf0o\\x1e4\\xf1\\x9a\\x85\\xed\\x06\\xd7\\x0e\\x07\\xf1|4xr-\\xe4$\\xfc\\xee\\xa8\\xa6.C\\xc0\\xd9\\x80\\xb5\\n3\\xa5\\xc7\\xab\\x9dDRE\\x05\\xeb\\x88\\x1d\\xa1\\xa7\\xe7\\xbe|\\xb0\\xb2h\\xdf\\xb1J\\xd22\\r\\x1a>o\\xef\\x0f\\xd9\\x8f\\xe3L\\xc1\\x1d\\x82\\xf4>\\xb1!#\\xe1\\xe5,<\\xe0\\xa6\\xb3e\\xd7\\xae\\xfe\\xfa\\xd9J\\xc2*\\xff\\x05\\x0b\\x03\\xf5(\\xbf\\x07\\x85(Co\\x89\\xb0\\xd6\\xa4\\x9e9\\xcbC\\xd5\\x9b\\xc7\\xb9\\xab\\xbb\\xd7voK\\x9b\\xb8~\\x19p{0\\x9e\\xa6\\xa7\\x19\\x9a\\xe3\\x1dQ\\xe9\\xbf\\xab]\\xe6T\\xffh|m\\x17\\xbf%\\xbb|\\x95\\x98|\\r\\\\qRz\\xcdc\\xef\\xd5\\x8d@\\xdb\\xb1|\\xb6U\\xca\\x84\\x05y\\xf2{\\xa2\\xfb\\x97NVT;"7{\\xc9D\\xf5\\xd2\\xa7\\xac\\xdd0\\xbc\\x84J\\xebTt\\xe0\\xc5\\x11\\x83\\x01\\xe3\\xf2\\xbb\\x8d\\x87\\x05\\x1a`\\x95$\\xfd\\x96\\x02\\xc9\\xbd\\x1f\\xde\\x9c\\xe6\\xb1@\\xbd\\xe5\\xbb\\x91\\xc7\\x0e\\x9fK\\xeePuL]\\xd9\\xe3{X\\x9f\\x1a\\xe75\\\\b\\xc0J\\xc7\\xcfS\\xd0@:\\x01\\xe4\\xa8\\xd7\\xb5%\\xad.\\xc2\\xeb\\x99=\\xa6-v\\x95\\xf0\\x92/\\x9d\\xc0\\xe3i\\xd95T\\xe9~\\xe4`\\xd2\\xbc\\xb3\\xd0 5Rq\\x83\\xbe\\xdcSC@8\\xff\\x8c\\xf2V\\x91R\\x92\\xd5\\xc2\\xf6\\x8fB=\\xd9\\x860\\x18P\\x82_\\x12\\xfa\\x86j\\x9d%\\xc1\\xd7\\xe1\\xe5\\xa3\\xe5W~\\x11L\\xcax\\xac\\\'x\\rA_\\xfej\\xed\\x8a\\xb1\\xd1\\xbf\\xf9\\xb5\\t\\x9d\\x15\\xd2h">\\x01~_fu9 j\\xc9\\x11\\xb3\\x9bq\\xfc\\x84\\xab\\xfd\\xf4Ey\\xeb\\xf5\\x80\\xc1j\\xd6\\xdb%\\xd8\\x90/al\\xf3\\xe6\\x9ew\\x90\\x8e-\\xd6\\xb08D\\xd8%\\xa4\\x8e\\xd9\\xc1T\\xc59\\xbf\\xdd\\xad\\xa0\\x8a\\xc4t+\\x9cw\\xd4\\x9a_\\xc3\\x89\\xd5\\x92,\\x18,\\xc9\\xf5\\xfa\\x81\\x19K\\xf0E\\xa9\\x9a\\xa7\\x9d;\\xba\\xa5\\x90\\x9e\\xde\\x1c\\x14\\x1fe\\xd0\\xe9J\\x87\\xe6hW\\x894~\\xf4~\\x8a\\xce?\\xc9\\xfc@~\\x90\\x13<\\xdc\\xd0\\xe5q\\xf1\\x9a\\xafDt\\xd6\\xbc\\xaa\\x83\\x82\\xccu\\x9a_+\\xeek@\\xaa\\x80`\\r\\x85\\xd9t\\xd1\\xa5\\xccC\\x06h\\x84K~\\xf3}\\x08+T\\x01?\\xdb\\x13\\xda\\xf6\\xa2E.Lbzlye\\xc9H\\xc6e\\xef\\x05VG\\xc4\\x9b\\xc6\\x94\\xb4\\xdb:\\xd4\\xa3:\\x9e8\\xf4\\xba\\xbd\\x9a\\xbaf\\xa2\\x19\\xb7 qC[3\\x0f \\x0e\\x18\\x18\\x88\\x11\\x1a\\xf2\\xe9k\\x98\\xbd\\xda`BW\\x14c\\xbbN\\xe3\\\\\\xbb\\xe3\\xdf(\\x15e\\x14\\xcf0\\x92]\\xbe\\xe2\\x01\\xe5+\\x08\\x1d\\x92e\\xdb\\x81~X\\xc8\\xef8\\xd4+Bk\\xa4+\\x85\\xe4\\xf4\\xeb\\x04N\\xee\\xdb|\\xb7p\\x9cX#*~\\x04~\\xc2\\xb7`\\x9a\\xbd|\\xd4\\xfb\\xe96\\xcc-R\\x9d\\xa8R |\\xbb\\x82\\xd8\\x96\\x9a\\x80\\x85O\\xdb(/\\x88\\xfbk\\x98\\xfeM\\xe0\\xa2\\xe9\\xa4N\\xb1\\x92u\\x85\\t\\xf8\\xaa\\xf3\\xd9\\xe7k\\xc9\\\\\\xa1\\xd9}\\x98\\xd9\\xa2\\xfb\\xe3\\xe9\\xf2M\\x925\\xd46\\x13\\x8d\\x1d\\x83\\xf9\\xe6\\xd9\\x9b\\xf5\\xdfW\\x13J7\\xcc\\x06\\x9f\\xc0\\xab79\\xbe\\xb0\\x8d\\xf6A\\xf9\\x17\\x8e`\\xf8\\xbc>\\xcc\\xa1\\x1e\\\'[\\x0c\\x89>I\\xa1\\x13h\\xef\\x89\\xbd)DH2\\xf7[\\x8a\\x8b\\xaa\\rwD\\xbeI\\xd0\\x1b\\t^\\x9b\\x16\\xb2%\\xe2\\x91j\\x86\\xf8T\\xb1\\x93\\xfb\\xc1\\x0eD\\x082mPT\\x1b\\xff\\xa7{\\xfe\\xd2\\x19\\x16\\x16\\x96\\x16\\x84z\\xcf\\x9f\\x81\\x94\\xea:\\xf2\\xbfU\\xa1\\n-_\\x1f\\xe8\\x88\\xd7\\x7f\\xaan4\\xee\\xfe\\xd49\\xb9+\\xbc\\xa6\\xe8H\\x0e~G\\xbb\\xe8\\xdeEd\\xf8\\x02!F\\xfa5\\xd6\\xb6\\x91:\\xc0\\xe4\\xc8`(B\\x1e\\x14\\xe4\\x9c[6\\xf3\\x02Hv\\n`\\x886\\xb3\\x1b\\xf3z\\xbc\\xceh\\xfc\\x16t]\\\\\\xba`k4h\\xdd\\x8dH.\\xb78S\\xf7%\\x1f\\xf0\\xaa\\xc5K\\t\\xc9^5f\\x12\\x01\\xfd\\x10\\xd7{\\xba\\xc4\\xb0\\x94\\x8f\\xa1A\\xe2\\xd9\\xe5eva\\x7f\\x19\\xde\\xa8im\\x0eb\\xa3P\\xa5\\xb0lh\\x95)\\x98\\x10\\xe3\\xb9\\xd9\\x1a,aKi\\x9a\\xbf\\xf5\\xf2\\x87\\xd0\\xa6\\x98\\x9cag /\\x8a\\x16\\xc9}:\\xec\\xfa\\xca\\xbb\\x00\\xef\\x87\\x1c\\xc5\\xf9*\\x9b\\xe0\\x0b\\xf6>\\x90\\xd5\\xd6\\xfa\\xfb\\x8e{\\xfdf\\xb4\\x1f\\xec\\xe8\\xba\\x8d\\x8c8@\\xdf\\xbe\\x8e\\x8b\\xe3o\\xd4?\\xcf\\xf9\\x1f\\x8dIb\\x96\\nendstream\\nendobj\\n1 0 obj\\n<< /Contents 2 0 R /MediaBox [ 0 0 612 792 ] /Parent 42 0 R /Resources 43 0 R /Type /Page >>\\nendobj\\n2 0 obj\\n<< /Filter /FlateDecode /Length 1929 >>\\nstream\\nx\\x9c\\xd5\\x19[o\\xdb\\xb6\\xfa=\\xbfB{\\xaa\\x8c\\xd4\\x0c/\\xe2E\\xc1\\x8c\\x83\\x15\\xa7=\\xcd\\xb0\\xb5[c`\\xb7.\\x07\\x8a\\xad\\xc6\\x82e)\\x93\\xe4\\xda\\xfe\\xf7\\xfb(R\\xb2\\xa4\\xd0v\\x92u\\x18\\xf6\\xd0Z$?~\\xf7+\\x83=\\xec\\x11\\xaf\\xb8\\x83\\x1f\\xfd\\xf1\\xe1\\x7fg\\xd8\\xd3\\x0b\\xfd;<y5=\\xbbx\\xc3`\\x81Q\\x88C\\xe2M?y\\x92z\\x12+Dd\\xe8M\\xe7\\xdeo\\xfeO\\x8b\\xa8\\x1a\\x8d\\x19c\\xfe"\\xba\\xbf\\x1f\\x8d\\xa9\\xf2\\xe3\\xac\\xbc\\x1c\\x8d\\x83 \\xf0\\x7f\\x19)\\xe6\\xe7ks~\\x17\\xd7\\x80\\x81\\x1fef#\\xfec\\x9d|\\x1eq\\xe1Gi\\x9c\\x8d\\xa8\\xf4\\xabv?\\xaa\\x92\\xdcBm\\x8a\\xa4\\xaab\\xbb\\x98\\\'\\x1f1aqa\\xe1\\xd3\\xdd\\xe8\\xf7\\xe9\\xb7\\xc0\\xed\\x98\\x08D\\xb9e\\xe9-\\x9c\\xbf(\\x81\\x15J}\\x80S\\xfez\\x15\\x8f\\xc6\\xc4/F\\xc4Of\\xfa+J\\xcd\\xe9g}\\x1a\\x17\\x1ai0\\xb34\\xf5~U\\x0be\\xbe\\xe2\\xdd\\x8b"n\\x17\\xfa\\x83\\xf9e\\xb4\\x8aAD\\xa6B\\x7f\\xa1QT\\xd5}yyq\\xb1\\xd9l\\xd0<.Wy\\x89f\\xf9\\xeab\\x16\\xa5\\xb3u\\x1aUyq!V\\x1alGbz\\xb7(\\x0b\\xcdt\\xabu\\xcd=\\xa3\\x88\\x13e\\xb8\\xff\\x889\\x9e\\xc1\\x7f\\xc4H|\\xbd\\xb6Z\\xcd\\xcb\\xd8\\xec`}\\x1d\\xcc\\x12t\\xcd"\\x14\\xa2\\x01\\x05\\\\5\\x8e\\xaf\\xe1\\x86T \\xf0\\x98a\\x0e+s\\xa1gGF\\x10U\\xa2\\xb9@\\x901Xc\\xcd\\xc0OJ\\x17\\x19\\x1e\\xe8\\xcf\\xe6\\xd6\\xaf.\\xc4\\x84 %X\\x03\\x129\\xd1\\x10\\x86X\\x1840\\x99\\x05\\x91]\\x90\\x10q\\xd9\\x12\\xfa\\xca\\xc8C\\\\\\xf4\\xa8B\\x81jq\\xfd\\xc7\\xeav\\xe8\\xc9\\xde\\x98\\x12\\x89$\\x97}W\\xb9\\xfa\\xd4\\xd7i\\x8f\\x05\\x12v\\xb9\\xfc\\x88i\\xe0\\x94\\x85\\x80\\xedx\\x03U\\xab\\\\\\xb8U\\x0e\\xf8\\xa4l5\\xfe\\xd2PN\\x93U\\xd2\\xc4\\x85[\\xe5\\x80_\\x8a\\x93\\xbaR\\x8f\\xd6U\\xcbkn\\x85\\xd7\\x1e\\xa7\\xff\\x11\\x17n\\xb8"\\x95\\xda+\\x01;\\xdd\\xcf|\\xee\\x95`@\\xb8\\\'Q(\\xb1\\x11\\x03Q\\xca=\\x86\\xc2F\\xf5\\x99\\x8bA\\x8e\\x04\\x13\\x10\\x0f{\\xb0:\\x12\\x1c\\x14\\x03\\xf0\\xf7\\xd6\\xcb&n\\\\\\x01\\xefX\\xef\\x80|\\x84"B\\xc9\\xf3\\xe4\\x1b\\x90\\xd3\\x02\\xe2\\x07\\\\\\xf7\\xa8\\t$\\x84|\\x1a\\xb1\\xcc\\xa5Mp:)\\xd9\\x17V\\\'=\\xa9N\\xfeO\\xaa\\xb3v\\xebI\\xdf\\xbb{X\\xe9\\xbf@\\x08\\x03D;\\xa64LwLD]\\x98\\x14b"\\xecY\\xf2\\xd6\\xd4\\xdaY\\xb4\\x86\\xc2\\xe0\\xb2(\\x86+\\xc1\\xa9\\x90\\x0c\\\\>$\\xfb\\x94\\xb5\\xcbv)\\x7f\\xe5Ln\\x00\\xc0Zm\\xe0~\\x89\\x83\\xda\\x82\\x11\\xa7\\xb4\\x9f|\\xb5\\xfe\\xe7\\xfbJ\\xf7.\\xd75r\\xa3\\xeb\\xb3\\xcd\\x8d\\x9b\\xb6\\xb7pW#\\x15 \\x86\\xdb$\\xf0\\xcb\\x81j\\xd4I_\\xad\\xf7\\xd4\\xe5\\xfc\\xdc\\xfc0\\x17j\\xc6\\xebbq\\xcc\\xb8\\x12\\x89\\xa0\\x15\\xd8\\xe2\\x12NG\\x11.K\\xd0c\\xc9\\xd1\\xe9\\x03\\x12\\x11\\xde\\x8ffK\\x958\\xfd\\x93B!&\\xeaId\\xd9!\\xb2r@\\xf6d8\\\\^^\\x1e0G\\xa7X\\x9e;x\\xd2\\xb1\\x87\\xb9\\x8e\\x8a\\x90\\xdbJY\\xfb\\xd2\\xeb\\xe9\\xd9\\x1fg\\xc4\\x16t\\x06\\x1dh(=AC$\\x08\\xf5f\\xab\\xb3\\xdf~\\xc7\\xde\\x1c\\xce\\xa0\\x19D\\x01\\xe4\\xbcM\\r\\xb9\\xd2x\\x98V}\\xea]\\x9f\\xfdh\\xfb\\xd9.\\xb9\\x16\\x13\\x83\\x90\\xa7G\\x94\\x0f\\x99C\\xe7[)\\xe8\\xdeyO\\xd6%gR\\xd6\\x04\\xe9\\xc0o\\x88\\x0e\\x83C(!\\xaf\\xa9@\\x9d\\xc4\\xc9\\x068\\xe9\\xa1\\\\O1\\x12X<+3\\xf4\\x88\\x86\\x88\\x02\\xd1\\xaecl\\x16M\\xa3\\xee\\x14\\x84\\t\\xad\\xeb\\\'\\xf6\\xa8\\xad\\xb7\\xd84\\x11es\\\'n\\xdc\\xcd\\x05\\x7f\\xb1M\\xd2\\no]\\xf9pK\\x19p\\tY-\\xe8g\\xb5\\xe9\\xfb\\xff\\xbe\\xbf4\\xac\\xbe\\xd1\\t\\xed\\xfd\\x87\\xef\\xbf\\xd1c\\xd0\\xd4\\xecM\\xdf^]\\x9bv\\xef\\x9bw\\xd7?\\xbd\\xfe`v\\xaf\\xdeM\\xdf\\x9b\\xaf\\xef\\x0c\\xf0\\xeb\\x9f\\x1f\\x0c\\tT";"\\xfcP\\xe4\\xb7i\\xbc2\\x17\\xd8\\xc3\\xf0\\x00\\xf7\\xe2\\nt\\x17\\xaa\\xa3\\xa1a\\xec\\xd7\\x8f\\x8d~\\xb4R\\xd3\\xeesE\\x91\\xa2|\\xef\\xf8o4\\x8fEn9xUDe\\x19\\x15\\xf3\\xbd}j\\xf9`\\xbbJ\\xe3]\\xe3\\x85\\xde\\x98\\xd3\\x1a[O[ \\x8aV\\x92\\x19\\xc4\\xcc==|]\\xba\\xe6:M9\\xda\\xd7\\x8b4\\xbfs\\xb8.\\xf8L]\\xaf(d\\x06{/r\\xd9\\x18$\\x0b\\x85\\xd7\\x81:\\x16\\xd0m\\xb8nw\\x07\\xb2Z(\\x0f7+)\\xcc\\x9dn^A\\xad0\\xe4\\xb8x\\xed\\x0fw\\x90\\xc8\\x83.\\xaf[w\\x0e\\x10|X\\x8f\\xdc:\\x02S>\\x9d\\xe6\\xee@\\x18\\x0c\\xd9\\x18\\x13\\xc6\\x10\\x0eD\\xdfv\\xd7yQ\\xec`\\xc6\\xc4\\xd4\\x8fL\\xe7\\x92\\xaf+\\xbdff\\xaa\\xd6\\x07\\x9f\\xf2b\\x15UU\\x92\\xdd\\x99\\x83\\x05\\xcc\\xf1\\x08\\xa1+s\\x9a\\x17\\xc9]\\x92Eij\\xd1l\\x8a\\xbc\\x8a\\r\\xa0\\x19\\xae\\xed\\xa5|\\x15o\\xf4:/\\x96\\x060\\xc9\\xccI\\xb9\\xbe\\x85a+\\x86\\xde"\\xa0\\xd8\\xb8\\xa9>\\xbe2\\xa7\\xf3<{Q\\x99\\x9def;\\x11\\x87\\x0f&zf\\x12\\xc4\\xbfz\\x91\\xa6\\xfa\\x0b\\xfb\\x8b\\xc8:\\xb0\\xac\\x1d\\x18v\\xe2,_\\xdf-\\x0c\\\\\\x95\\xacb\\xfb\\xa5\\xbd\\xc0|\\xea\\xe7\\x86,)-HWl}\\xbd\\x1e\\x07\\x85~\\xa4\\xb0\\x14\\xee\\x8b\\x18\\x8eAn\\x08:\\x98\\xd39\\x15\\x9ai\\r\\xb2\\xce\\xe6\\xa0\\xa3\\x12\\x88DU<7{\\x8b\\xa6\\x8d\\xd2W\\xd3\\xdc`%\\xfa\\xf5\\xa5!Aj\\x95;\\x84\\xebq\\x02\\x11\\x06\\x1a7\\xcf\\x1b\\xf6I\\xc0\\xe6\\xf6\\x14\\x88mm\\x87Vkz\\x9d\\xda\\x90\\xaf\\xa2e\\x1d\\xc8`\\xb5\\x03\\xde\\xe2\\xf2\\x1fH\\xb5\\x1d\\xff\\xd1\\x99.@\\x12\\xefs\\xdd\\xe7X\\x0b\\xcdmb\\xa8?\\xc1\\xaf\\xff\\xafS\\x01\\xde\\xd6\\xf9e\\xb2_\\xeb\\xe5y\\xbb\\xdcg\\x9f\\x81\\xa8\\xfaY\\xa5~Q\\xd1\\xd8\\x96\\x93\\x01>\\xb3]\\xbb\\x88!\\xbc.\\xed\\xd6\\xcdr\\xb2u>:\\xf5\\x10\\xa6\\x1d\\x84f\\xe7\\x04\\xd6t\\xb2=\\x89t\\xb5G\\xba{\\x14\\xd2\\xd5\\xc4\\xc9\\xe9+;3\\xd4P\\xfa\\r\\xc0\\xdckX\\x8f6e\\xff(\\xde\\xde\\xe7Y\\x9cU\\xe5K\\xb3\\xde\\xee&u&\\xbeI\\x9b\\xa6\\x05H\\xd5V\\x88n\\xf4*=_\\x1d\\xd4z\\x92\\xcd,\\x9dM\\xa3\\xfb,\\xdftu\\xdbG\\xf2\\xb2\\x0f\\x0c\\xfe\\x15\\x0f\\xf9\\x85\\x0c\\xd7c\\xb7\\x0e\\x1b\\xfdQ&\\xf3\\xb8t\\x16\\x92V\\x8f@r\\xe0>\\x03w\\xea1\\xd3J\\x15\\xf0\\xba\\xb3\\xee\\xe1\\\\\\x1a\\xa2\\x0fPAJ\\x91\\x9a\\xcds(\\x96\\xd0\\xd8b\\xff\\x11\\xbe:v\\x11\\x98\\xeat\\x08\\x11\\x1a\\xbf|f\\x08\\xb4\\xcd\\xc40c;\\xca\\xec\\xed\\xc92KM\\xf3\\xf7\\xec\\xd2\\xd5E\\x06\\xc4Yo\\x0eqVY\\xd5k5\\\'.j\\xfd\\xf1\\xc2\\x89\\x05:6\\xde6\\x81n\\xd9H\\x804\\xf03e{T\\xd2;\\x9d\\x06\\xc7!C\\xacn\\xfax\\xc8\\x1e\\x97\\no\\x8c#\\xec\\xfa\\x9e\\xf0\\xa4\\xecw:\\xf9\\xb9\\xd0\\x01\\xe5I\\\'\\x9cn\\x9ci\\xe7\\xd1@&\\xe6\\x96\\x07S\\xf7\\x03\\x81\\x07\\xd1jn\\xd6\\\'K\\\'\\x91\\x07\\x08\\x96\\xbb\\x81\\nv.%>%~f\\\'\\xe3\\x87 ,\\x9e\\xedc\\x8eIL\\xb4n\\xdfD\\xc6`\\xaa\\x96\\x84\\x98!v\\xe0\\xf9\\x02vC)E3\\xc33\\xa5\\xb9\\xc2\\x81j\\x9e\\x99\\\\\\xe3!Q\\xcc\\xeb\\x00m\\x1f\\xce \\x04$T\\x1c~C\\xfd\\x0cqtF\\x87yT\\xa9\\xf0\\xc8\\x90\\xaeq\\x850\\x08\\x12\\xc5\\x11\\xa3_J\\x82\\xa0+A\\xf4%CW\\nD\\xb0\\x9eA\\x18R\\x8c<.x[O\\xbem\\x97\\x17\\xed2:\\x14\\x0b\\xafl\\\'0\\x8f?%Yb\\xfe\\x80\\xd5-\\x86\\x80\\xc1R\\xdaB\\\\\\x9dN\\x0c}\\x06\\xf6\\xfc\\x0c\\xef>\\xe1\\xfe\\xfe\\xd2iq\\x8e\\xca?LSG#\\xfbq\\xea|JH\\xcf\\x0f=\\xa7\\x10\\x05\\xce\\xb4\\x9f\\x10\\x1d\\xd1\\xf7\\xa0\\xbe}\\xd9\\xe8\\xfbK\\xd5\\xb2}\\x07\\xda9\\x18\\xe7H\\x06\\x7f\\x1f\\xdf[\\x17S\\xbcNe]\\xde/\\x0f\\x86\\xe6\\xa1?[C"\\xfa\\x13K\\xa5_+\\nendstream\\nendobj\\n3 0 obj\\n<< /Contents 4 0 R /MediaBox [ 0 0 612 792 ] /Parent 42 0 R /Resources 45 0 R /Type /Page >>\\nendobj\\n4 0 obj\\n<< /Filter /FlateDecode /Length 2057 >>\\nstream\\nx\\x9c\\xddYK\\x93\\xdb6\\x12\\xbe\\xcf\\xaf\\xe0\\xcd\\xd2\\xc6\\x84\\x8878\\xbb\\xde\\xaa\\xb86Ny\\x0f\\xa9<\\xe6\\xe6\\xd8)J\\xc2H,S\\xa4LR\\x96\\xf5\\xef\\xb7A\\x90\\x14AB\\xa3\\xc9d\\xcaI\\xf6"\\x82\\x10\\xd8\\xcf\\xaf\\x1b\\xdd@\\x14D\\x01\\x0e\\xca\\r<\\xcc\\xe0\\xe7\\xefo\\xa2\\xc0\\xbc\\x98\\xe7\\xf4\\x9f\\xeb3\\xaf\\xefn\\x16oX\\x1c\\xe0\\x08\\xc5Q\\x8c\\x83\\xbb\\xfb@\\x92@F\\na\\x19\\x07w\\xeb\\xe0\\xdd\\xec\\xc7\\xb2\\xf8\\xac\\xe7!\\\'|Vo\\x93\\xfa\\xd6\\x0e\\xbf|\\xc8\\x8a\\xcdo\\xcb_#\\x1e\\x9d\\xe0\\x07\\xbf:\\x9d\\\'\\xbe\\x98\\x89\\xf9\\xfb\\xbb\\xff\\x02\\x97\\x10\\x0bDxKj\\xf2\\xd1\\xf2\\x83\\x19\\xbb\\x1f\\xbaK.\\xd2\\xee\\x15_\\xbc\\xa1\\xd1P~\\xe0I\\x14"\\x98\\xf5\\xe2/3\\xbd\\x9b\\x87\\x94\\xd2\\x19k\\xbe\\xfc\\xee\\xee\\xe6\\xd3\\rn\\x8d\\x00\\xea\\nA\\x1auW\\xbb\\x9bw\\xef\\xa3`\\r\\xf3 :bT\\x04\\xc7f\\xd5.`1"\\x92\\xc20\\x0b~\\xb9\\xf9\\xc9\\x9a\\xcdek\\xe80\\x89\\x18\\x93\\x96\\xef/\\xe9n\\x9f\\xa5\\xf7\\\'\\xcb\\xd8\\x88\\xfeCQk\\xb0\\x1ec|\\x96m\\x8c @\\x82\\rI(\\x85`-0i\\x08\\xe4\\xed\\x12\\x87K\\x8c8\\x08\\xda\\xaex5\\x0f\\x89T3\\xb0M\\xbb\\x14<\\x87b\\x195+\\tG"\\x12`\\x0b$pk~\\xe2c*\\x10\\xe7\\xc1`\\x91\\x97-,b\\xaack<p\\xdb\\xb87\\xc4T\\xc0\\x97\\xc2\\xf5\\xb2\\xd15\\xe9\\xdc4f\\x87%h \\xc6:\\x0e\\x05\\xb7\\xbc(\\x8a;z\\x1d\\x1d>X\\xc4\\x10\\x01\\xba\\xbd\\x1d\\xa6T@{\\xd6\\xb3\\xe9\\xcd=$\\x01\\x10\\xc7\\xdc\\x11\\xe4\\x8914\\x0e\\xa0\\x90\\x01\\x9c\\xc0\\x9c!5\\xb0\\xa2-\\x83\\x06\\xe9x\\x91m\\xcc3\\xef\\xa1\\xdd\\xcf\\x03\\xc0\\x89\\xfb\\x17B\\xc8\\x17D0\\xfd\\x8a\\xf4qs\\xfe\\xe6"\\xa1\\xa7\\x10{\\x92<v\\x19\\xb9\\x16\\x9dc\\xac,/b\\x05\\\\\\xa4\\xc8\\x18+\\x14|\\x1bK\\xc0\\x90\\t:$\\x19\\x85\\xa0\\xc0\\x80\\xe1\\xce\\xd3!!\\xf1\\xd9\\xe3b\\xb0\\x1a\\x03j\\xb8K\\xcf\\xcd\\x051\\xa0\\x83\\xf0\\x803\\x8ehL\\xc7\\xf9\\x80\\x82\\xd0]>\\x00\\xd1\\x14\\x1f\\xe7\\x83\\xa1d8\\xc2\\x88)\\x05\\xb4"\\xc8\\x1c|\\x84C\\xe1\\xe8\\x80\\x89\\xb8\\x86\\xc3\\xb1\\x19\\xc3&\\xf0\\x18<\\x19\\x08\\xc2\\xdd\\xf8\\x1e\\xca\\x01\\xcb8\\x18Hu\\xe1m\\x0c\\x84Ec\\xf7\\xc1\\xd0g,\\xc8e\\xe2A\\xe33H0x\\x98\\x14\\xfa\\xd4\\xec&XeD\\xe0\\x98"\\x12\\xc9\\x87lJd#\\xe6e\\x9b*\\x86\\x18\\xe8\\xcaaw\\x8a\\xd4T\\x1f\\x8f\\x12\\nI\\x8a\\xaf\\xe80\\xd4\\xc0\\x97\\xfb@p\\x06\\x82\\x9bD*\\xe2A\\xc2\\x01\\xdb\\x03\\xf0\\x00&\\x0e\\xa0\\x897\\x175b#\\x19\\xb3\\x81\\xd0\\xfc\\xec\\x046\\x94\\x7f\\x98\\xa3p\\x8c\\xe2\\x98\\x8d\\x15pic\\x1a\\xfb\\x9c0\\xc6#C\\xb0\\x1b\\xd0\\xb3\\xa0\\x1eOa\\xd0\\x9aJ\\xd8\\xeb\\x04\\x8a!\\x05?\\x04\\x7f\\xd0\\x18?\\x84\\xfe\\x8e\\x12F\\x8a~-GI\\xc0#\\xf1\\xf9\\x89\\xc7\\x88F\\xff\\x87~R\\x11\\x12jR\\xb6<\\xc5O\\x92\\xc3\\xae\\x8c\\xffdG\\xc1>\\xea\\xe6\\xb8\\xceo\\x90\\x89\\x08\\xe9HF\\x91\\x8f$\\x0fB\\xc8\\xc8T^s\\xee\\xa0\\xac\\xf8:\\xcee#\\xcd#\\xc5\\xc0DJ\\xaa^\\x1f/\\n\\x08b\\x12\\xf6BH\\x99\\xf42\\x0cH\\x84\\x94P\\x01\\x13\\xa0\\x1b~0\\xb5^\\xc5AO\\nv\\xab\\xf8\\xd9R\\xab\\xbb=\\\\\\x82\\x02\\x86L\\n[\\x84pbV\\xc0\\x9ee\\xfe\\x81mH:{\\x97\\xc2C\\x89\\xdcz\\x01X\\xc6\\xf2\\xc1\\xfayR\\xc8\\xfa\\x8c\\x8f\\x81\\xa5\\x80M3\\xe2\\xe4\\xa2\\xf1c\\xd8\\xd5 \\xb51&`\\xf1\\x1f1}O\\x08#\\x1e\\x93\\xafg\\xf9\\x10\\n\\x93\\x08\\n`\\xb0(\\x14=m\\xe0\\xfcGW\\xbb\\xa22-\\x9e"\\xb3\\xed\\x9c\\xa8Y]\\xef\\xab\\xdb\\xc5\\xe2x<\\xa2u\\xf3\\\'Z\\x15\\xbb\\xc5*\\xc9V\\x87,\\xa9\\x8br\\xf1i]\\xe3\\xea\\xd3\\xe9\\xf3\\x91Bk\\x13\\x91F\\xe8\\xb4\\xb6\\xe3\\xa3\\xa1\\x90T\\xf6E\\\'U\\xaaK;\\xae\\x8bvA\\x99\\xd6\\xda\\x0e\\xf3\\xa4>\\x94If_\\xa0\\xfal\\xbfJs_\\xcdiEyi{\\xab\\xe5\\xa16\\x036[\\x15{\\xc3\\xf0\\x14\\xee\\x93\\xaaN\\xf3\\x8d\\xfd\\xfb\\xbe,\\xda\\xee\\x0f\\xbe\\x02\\xbb\\xce\\xe0K\\xfb~Ju\\xb6n\\xc7\\xa0\\x8c\\xfeb\\xc9\\xe8O\\x87\\xa4N\\x8b|\\x8eg\\xcd\\xfaI\\xc7\\xe9+bW\\xcd\\xaa\\x86\\x94/\\xfb\\x10\\x08h\\xc2F\\xe9\\xc7W\\xad\\xc9\\xc8\\xac\\x8a\\xbadL<\\xf9\\x08r\\xb5\\xa0&f\\xfaU\\x8f\\xaf\\x1aM\\x84@TA\\xb8\\x13\\xdc\\xa6\\xa0o\\xcb\\xcd!Yf\\xa7\\xb9\\xa23\\xb0(\\x03\\xe0\\xd5\\xdb\\xd4\\x98%\\x8egi\\xe3\\x86h\\x96d\\xa5N\\xd6\\xa7v2\\xb7\\x93\\x95iquU\\xdb\\xd9\\xfb\\xa2\\xdc\\xa1y(\\x18\\x9d\\xbd6f;\\x80\\xfdj\\xbb\\xb0\\xde\\xeaR\\xbf\\xe8H\\xe5v}\\x92\\xd5\\xba\\x04\\xaf\\xeb\\x96\\xa91{\\x06b\\x0cHO\\x08\\xbf1B\\x16eK\\xc8\\x87\\x8c\\xdc \\xe0\\xb0\\xd3e\\xba2`2\\xfe\\xacA\\xc4\\x16*\\x95\\xd6v\\x00\\xd8\\x96\\x06\\xdb\\x9d\\x8f\\x1f\\x84\\xf8a\\\'\\x12Q\\xae?\\x9e\\xbcX|\\xdcfS\\xf8\\xdcm\\\\C\\xd5\\xc4\\xdf\\x86\\x03GD\\x89\\xcb\\x0c\\x18\\xb4<\\x18\\xdav\\x82\\xf9\\x19\\x83\\x1e\\xac@!\\x11ON\\x14\\xc6[\\x97/!\\x8e\\xb2\\xa6\\x82\\r8\\x1c\\xe8\\xd3U\\xc0\\xa6X\\x92\\xcfm\\x0f\\xa8\\x0c"\\xa6\\xae+\\xdf/z>\\xe5a\\xbf\\x91\\x97\\x843G\\n\\xf4Y\\x85\\xbbZT<\\xca3x\\xea\\x99I)%\\xa0\\xac4.4\\xa5\\x14}T)\\xf5\\x00\\xf8\\xfe6\\xde\\xf4X\\x82\\x02`IS\\x81\\xc9I\\x05\\xe6\\x10k\\xe4\\xe6\\xec\\xaf\\xa6`\\xfcHD\\xc0N\\xa2\\x88{<\\xe6\\xd4J\\xa1\\xa4\\x08G\\xf18y>\\xe28\\xee\\xab\\xd9\\xe2\\xf7G\\xc7\\xc5S\\xa7\\x90B\\xb1\\x03\\xcd\\x86\\xb3\\xf1\\x19\\xd6\\xeb\\xf3\\xb6\\xddo\\xc8j\\xb8o\\x839a=\\x83\\xb0\\xc1=^\\xa8\\xcf\\xee\\x0c\\xaa2\\x080g%\\x8f|6\\x88\\x9b*u`\\xd1n\\x91pj8B\\xcd\\xb9\\xac\\xc2\\xd45\\x82\\x1b\\xabP3\\xca\\xc6\\xd9\\x92L`!]X\\x081h\\xcc\\xfc\\xa1o\\x87\\x93S\\xd3\\xa1A\\xa0Z5\\r\\xe3S\\xed\\xe1\\x83"\\xa8\\xca&\\x07M\\x93\\xaa}\\x02|\\x800o\\x1a\\xa9\\x10\\x9c\\x14\\xa96\\x9c\\x7f\\xd6;\\xbd35\\xc0r\\x1e\\xc2\\xaf)8\\x9b\\x1a\\x006z{y\\xe1\\x1c\\xbf\\x0f5\\x8b\\xa1\\xdb\\x82\\xfc\\xeeWmzd>\\xd4\\xec\\xfaQ\\xfd\\xad7-C\\xc3\\xc2\\x197\\xc5!\\x15m\\xa6Q]\\x0108\\xb3\\xfbW_v\\x00t\\xba\\xc4|\\xeb\\xe7i\\xa0ev\\xaa\\xae\\xa0\\x88\\xa0\\x96\\x97\\x8a\\xcd\\xd2{\\x9f&R\\x81*\\x93\\x9c#\\xc7j\\x0c\\x02\\x8d0/p\\xa0y9\\x1f\\xa6\\xe3\\x7fZ\\xff\\xc4qs\\x08o\\xc4\\xe6\\xb8\\xeb\\xa4BB\\xc8\\xec\\x1b\\xfb\\xf0\\x87\\x9clJec\\xde\\xeb\\x08\\xa3\\xd6\\x0fg\\x80\\xf9oV\\x9a\\xcepr\\xebp\\x05c!\\x860\\xb9`8\\xc2\\x9bD\\xd6\\x13l.b\\xfe\\xed\\xa3K0\\x8a\\xcei\\xbdKS\\xcfr\\xcf@\\x98B8\\x16M\\x00\\xf0\\xa8\\r\\x80\\xb7/v\\xf6\\x86.\\xa9\\xaa\\xc3\\xae\\xe9\\x82\\xcc[\\xb6\\xf9\\xc7\\xf9\\xfa\\xac\\x991\\xa5\\xbd\\xbd\\xd4ko\\xf7\\xa0\\x15+\\xa1\\x1c_\\xb7\\x1f\\x14\\x9b\\x04\\xba\\xb3mK\\xad\\xb8\\xb7O\\xf2\\xd2>\\x8f\\xdbt\\xb5m\\x87\\xe9\\xc7t\\xaf\\xd7i\\xd2\\xd2K\\xb2\\x8f-\\xe9dY\\x98\\xde\\xcc\\x0c\\r\\xf3m\\xdbL\\xea\\x1c\\xf5\\xdf\\xa0\\xa2\\xdc,\\xcc\\xdb\\xe2\\xade\\x0f\\x81\\xba\\xfe\\xadg~\\xe9&\\xf1\\xdb\\xfb\\xda\\x84\\xb6\\xa1l\\x1a\\x93^\\xcd\\x01\\xc7\\xb4~\\xd9\\r\\xda\\xff\\xf6{\\x9d\\x94\\x9d\\xd6\\x85}.\\xf5\\xd8\\n\\xf9g]V\\xda\\xd5\\xba\\xd6ui{Bw\\xfaX\\xf8\\x84{\\xadW\\xc9\\xa1:\\x13\\xb6\\xbd\\x8fy\\xc9[\\xae\\x87<5\\\\l\\xbf\\xd3\\xc8\\xb6Z\\xe9}o\\xfbU\\x91C\\xffz(\\x0e\\x95\\x97\\xfdZ\\xdf\\xa7yj\\xde[\\r\\xdf\\xbe\\xc8\\xb2\\x81\\xd3\\xb5O\\xa8\\xb4\\xee\\x84(\\x93|\\xd3)\\xdbN\\xad\\xd3jU\\xeaZ\\x9f}\\x95Tgovb\\r\\x8c\\xdb\\x89\\xd2\\xfb\\xf1\\x92\\xa3\\xee\\xb6\\x1d\\x8f]R\\xaf\\xb6z\\x0c\\xbaR\\xaf\\x0ee\\x95v7\\xccV\\xb5\\x8e\\xfa\\x06\\xe6\\xf3\\xce-\\xa3\\x0f\\xf7\\xed\\xbd\\xae\\x87\\xe7\\xd9\\x1c\\x03/\\xf4\\xaaZ\\xe3\\x15\\xf9\\x85\\xeb\\xac\\xb7\\xf9\\xf8\\x8bUR\\xe9\\x97N\\x14\\x91\\x0f\\xcd\\xad\\xd8\\xab\\xf6\\xb5y\\xf9\\xe6\\x82\\xfa\\xe0}h`\\\'\\x04\\xce\\xbf\\xee=\\x9dC\\x92x\\xa1\\x9f\\xaf\\x07\\xc8\\xfa\\x1d\\xb4\\xc3!\\xed\\x11#\\xf7?/_r!m\\x809\\x93\\x0e}yu\\x84\\xb0\\x1cVb\\xe3\\xe7ww7\\xff\\x03\\xc7\\xa7\\xb7\\x9a\\nendstream\\nendobj\\n5 0 obj\\n<< /Contents 6 0 R /MediaBox [ 0 0 612 792 ] /Parent 42 0 R /Resources 47 0 R /Type /Page >>\\nendobj\\n6 0 obj\\n<< /Filter /FlateDecode /Length 2388 >>\\nstream\\nx\\x9c\\xd5Z[o\\xdb\\xc8\\x15~\\xf7\\xaf`\\x9e\\x96j\\xc2\\xf1\\xdc/\\x06\\x8c\\xa2\\x01\\x92\\xdd-\\x92\\xdd\\xd4qQ\\x14\\xbb\\x1b@\\xb6i\\x9b\\xa8$j%\\xba\\xb6\\xfb\\xeb{\\xe6B\\x91C\\re)v\\xd0\\xedCLR\\x9c\\xcb\\x99\\xef\\x9c\\xf3\\x9d\\x0b\\x83\\xb3\\x9b\\x0cg\\xdf\\x1f\\xe1p}{~t\\xfc\\x9e\\xe1\\x8c`d\\xb0!\\xd9\\xf9u\\xa6h\\xa6\\xb0FD\\x99\\xec\\xfc*\\xfb%\\xff\\x15\\x0b\\\\\\xc2\\x1f2)\\x18c\\xb9\\x9e\\xfcv\\xfeW\\x98\\x03\\xa3\\x90Q\\xd8M\\xa1\\x14q\\xca3\\x86\\x8c\\x08\\x93f7\\x93\\x82\\x18\\xea&\\x87\\t\\xa27\\x81\\x10\\xc4\\xb1\\x01\\t\\xdc\\xe0EbI\\x81\\x08\\xd3\\xed\\x00\\xb7;\\x8c\\x01\\xb1A\\xd4lee\\xb77g\\xdfoI_0\\rk\\x90\\xac\\xa0\\x18Q\\xa2\\xfd\\xfc\\xf7\\x13\\xcd\\xf2z\\xe5\\x0f0\\xf5\\x97\\xc5\\x84\\xea\\xfcn^\\xae\\xaa\\xcb\\xe9\\xcc\\xfe\\xc4\\xf3\\xa6\\\\7o\\xfc\\xdbuY\\xfa\\xdfn\\xed\\xb0\\xa6Y\\xaeO\\x8e\\x8f\\xef\\xef\\xef\\xd1U\\xb9\\x9e\\xd7ktY\\xcf\\x8fa\\xde\\xe5\\xddl\\xda\\xd4\\xab\\xe3\\x7f\\xcd\\x16\\xd7uU\\xad\\xc4\\xcc\\x8a\\t\\xb2\\x15D"\\xda\\x82\\x91\\x82L .D\\x84X}\\x13\\x861xi\\x94\\x92\\x0e(8\\x19\\xe0PP\\x84y8\\x0cM\\xe0)\\x90\\x904\\xeb\\rj!\\x8d\\xb0\\xd1HJ\\x05\\x08u\\x9b\\x9e:q\\x0b\\x86\\x91\\xa44\\x16\\x9a\\xee#4\\x03-+5&\\xbbDB\\xb3\\xbddg{\\xc9.\\xb7e?~\\xcf\\x07\\xea\\x87#\\xd8C*\\xb0H\\xdaZ\\x0f\\xc6\\xa9%EVh\\xa4\\x99:\\xe0\\xbc\\xdfDI\\xf1\\t\\x04\\x92 \\x12GZ\\xe9\\x8d\\xf8$%\\x9b\\xdd\\x8f\\x1b\\xdd*"q@\\x85\\x14lXH\\xc4X\\x8c\\x19\\xe3\\x11f\\\\ &x\\xac\\xfe\\x94O\\x82>A\\xf4H\\xfd\\xde)=\\x97l\\xb9\\xa2\\x1f\\x1fy\\xa2\\xe5\\x83\\xebI\\xa1t\\xde1J\\x07\\xaa\\xeem\\x066\\xc9\\x8c\\xe5\\x14\\xcc\\xfd\\xd4\\xa5\\xdb\\xec\\xdd\\xf9\\xd1\\xefG$\\xf8?\\xc1\\x064D2I\\x18\\xd2\\\\d\\x97\\xf3\\xa3_~\\xc3\\xd9\\x15\\xbc\\x04\\\'\\x84C\\x99\\xec\\xde\\r\\x9d\\x83\\xec\\xca\\xd2\\xc9,\\xfb|\\xf4\\xb7\\xc0z\\x11!\\xb5+a\\x89\\x0ca~\\xc7\\xb7)\\xb4\\x0c\\xc2F\\x82X\\x8a\\x04\\xf3\\xfai_f\\xe2\\x16\\x0f\\x15\\xc3\\xfc\\xcd\\x99\\x89\\xdf\\xce\\xcc\\xd5|quQ\\xa5\\x98)\\r=\\xe1\\xc8\\xcal\\xa1\\\'\\xa3\\xd8\\x1b\\x86\\x08hWh\\x82\\x18U\\xbb\\xa0g@.l\\x07\\xf6\\xedJ\\x8a\\xc34\\xbf\\xdfE\\nyp8\\xb0c@^\\xa8\\x1dDa\\x90P\\x9b\\xc0q\\x9a\\xb0\\xe2\\x82\\x1aD\\xac_@\\x1022\\xa8z\\xb6H8\\xacF\\\\\\xea(H\\xc5\\x10(\\x10\\x1clAH\\x0e{\\xca!\\x04\\x9c\\xc9\\r\\x04\\x140\\xa7d\\x80A_\\xa8v)!!0\\xaa\\x81L\\x03\\xa7\\xc6\\x02\\x88\\x10#\\xd5\\x82\\xd5\\x8b\\xb1}-rD9\\x83g\\xc1\\xe8\\xb8\\x12\\t\\x12\\x82\\xc2\\t\\x18b@\\xd5\\xcfQbX\\xa9\\x7f\\x80\\x8b\\x94\\xfc\\xcc\\x87\\x9aX~Gp\\x0eo\\x03\\x9eJ,\\xad\\x8e\\xab\\xcf\\xab\\xa5 \\xc0\\xce\\xed\\x12\\xcfR\\x1f\\xe7)\\xf2\\xe8\\xab\\x8f\\x00\\x8aR\\x0cN\\xdf\\x8f\\x00\\xd6t\\xe1x\\x82\\x19\\x04\\xb9S+SO1\\xb27\\x18\\x18\\x04\\x10\\xc01F\\xfd\\xd5\\x18\\xa2\\x8am\\xe5>\\xb1\\xec\\xed\\x86\\nI\\xb5\\x93\\xf8\\x00&\\xa2\\xf8\\x0e\\xd95FD\\xd8\\xa5(hp\\x10\\x0c#\\xcd\\x01-h\\x00\\x18\\x1cL\\x92(}\\x80\\xf4\\xcfh\\xe9\\x88\\x9e\\xe9\\x1d\\xe1\\x14\\x14\\xa2\\xadY\\x9agi\\r2\\x01\\x91\\t\\xca\\x81\\xaf\\xf5\\x13J\\xa3\\x902\\xec\\xf09\\xbf\\x12\\x8c\\xd3T&t\\x16\\xc7\\x07\\xcbM\\x03\\x9d\\xf5\\x17k\\xfdc\\x98\\xaf\\x8e\\x84F\\x8a\\xdd\\xf8\\x02\\x8e\\xc1p \\xe3O\\xab\\xfabV\\xce=\\xcd\\x8b\\xc4\\xc9i\\xc6\\xc1\\xcd\\x8c\\xd9ujn\\x82\\xf1\\xf4O=\\xcc\\xef\\xb9\\x02lD\\xb0\\xd3\\xcf\\xd5|9\\xab\\xae\\x1fOR\\x01\\xc2\\xc2A\\xda\\xe3\\x0c\\t\\xd9\\xba\\x85\\x92\\xed\\xa1\\x1f\\x12\\xb0\\xc1J,J\\xa0\\xa6a\\x90\\x8a)\\x8d\\xd3(\\xb5\\xeb\\xa5<\\x83\\x08\\xc0\\x05?h\\xbf\\x8b\\x91\\xe0\\xbc\\xcf/\\x90\\x99\\x998\\x80\\x83\\x9d[A)xT\\x88\\x1b\\x0f_\\xa6\\x7fz\\xf8rq\\xfa\\xf0\\xc5"5}}\\xf1\\xa4\\xea\\x13\\x00\\xd3.\\x17\\xea\\x99_trJ\\x90&z\\xbf\\xa3\\xeb\\x18\\xeahw\\x0e\\xe6\\x13\\xd2h\\x1d\\xdb\\xea`9\\x1f=z\\xe3^\\x14I\\xa0-\\xba\\x81\\x92vH\\x00\\x9cV\\x9e\\x0e\\xd0\\xaf\\xc2\\x93\\xc5x\\xa6\\xa8\\x88*\\xe7&\\xbd\\xf3\\xd1\\x04S\\x03\\x08\\xa0\\x06\\n\\xd0\\xb3\\x1d\\x98\\n\\x84\\x99Mv\\x95"[\\x90Fv.]\\xfd\\x85\\xb7l\\x1c\\x0fm\\\\t\\x83:\\xf1\\xa3h\\x8b\\xa4Q)e\\xc7\\xd2\\xdb\\xf2\\xa0\\\'}2\\x1e\\xc3\\x19\\x95\\x97\\x9en\\x91\\xd7\\x8b\\xe8Z*D(wq\\x9b\\x92\\x90\\xcb\\xd3/\\x14\\x1c\\x07\\xfe\\x81\\xa6\\xa9\\xd34\\xdc\\xbf\\x86\\xa7\\xafQ7?H\\xdd\\xe6\\xe5\\xd4M\\xb7\\xd4M\\x93\\x1et\\xc8\\x96/KX +@^0\\xee\\x02tgR\\x16~\\xe7h\\xb4\\xaf\\x00P\\x88S\\xc0\\xa9}\\x7f\\x00\\x9f\\xf55\\x1b\\x051\\x99\\x0cbT\\x82\\xf9\\x82E<7\\x8aQ\\x01\\t\\x89\\tJ\\xf8q\\xe1\\xb7ln\\xab\\xb5\\xaf\\x8f\\x96 \\xc9\\x84\\xe43(\\x97H>\\x0f\\xd5\\xd3\\xa3-\\x9a\\xea\\xbbPJ\\xdd\\xd6w\\xb3+?z\\xba\\\\\\xc2\\xe0U=\\xa1*\\x7f\\xa8\\xe6\\xd3\\xa6l\\xd7\\x0b7\\xeb\\xbby\\x92\\x989\\x86\\xaan\\x13\\x04?$\\x13\\\'\\xdc\\x8f[\\xa9\\xa4\\x96P\\xa8\\\'I?7J\\xe4|\\x8c\\t7\\x8a\\nH\\xfa\\xc8\\xee,\\xc0\\x99\\xd5x\\xea\\xd3-EPky\\xc9\\x9c\\x0fr#a\\x8bp\\xdbHp\\xa3^\\xa7\\xa5\\\'P\\xa5?!\\xbd\\x10@\\x7f\\xe6E\\xa4\\xdf,\\xd5I?\\xd2\\x00\\xd9Wz\\xf1\\x94\\xf4\\n\\xb6\\xa4\\xfaE\\xa4\\xdf,\\xd5I\\xcf\\x0f\\x92\\x9e\\x0f\\x8c\\xcbt\\xad\\xd4\\x130v\\xa9\\xfcE\\xe6\\\'Ik\\x14.\\xdf\\xc7;\\x11\\xb1\\x95\\xc0nD8\\xa4$\\x92\\xab}\\x10i{\\xb9c\\xb5c\\xb7T\\x87H\\xb2\\xf6\\xb5\\x9d,\\xd6G\\x04\\x85\\xfe%\\xd4]\\x98\\x0f:X?T\\xae\\x91\\xd2\\x00\\x16\\x9c\\x8b\\xfc\\xef\\xeb\\xa1G_O/\\x9b\\xd0^\\xb9\\x9d6\\xa9^\\x1c\\xb1\\x9d\\x10\\x90Q#\\xa2\\xc3\\x8e\\x9f\\xd2\\xddlA\\x84\\xcd\\xaa\\x88\\x10=\\xf1-7\\x025\\x8a0\\xb5J\\x05&\\xa4\\xf5\\xa6l8u.h\\xeb,\\xe6\\x06\\xb5\\x13\\x13\\xe8SF\\\\2A9Alg\\xeb!e\\x8e}\\xe1)\\xe4`\\x0c\\x02\\x15\\x8cB\\xba\\xcd`ZQ\\x07i\\xba\\xd2\\x91=\\xfe\\x8a\\x19I\\xc3\\xe6\\xf0\\xd00>\\xa4\\\'g\\t\\xd4|H\\xde\\x06\\xad\\x00\\x7f\\xa4$+\\x0c\\x14\\x82"\\xcew\\xe3\\xf0\\xaa\\xbad\\xaaCN@y\\x04\\xea\\xa2j\\x1c:\\xf0?m\\xd8^\\xd0\\xf9-F\\xa1kW\\xeaC\\xf7\\x90rR\\xe1:M=\\xe8\\xae\\x1e\\x92\\xaeI\\\\\\xf3\\x11G\\xc6M\\xc1;\\x14\\xb0\\xddV\\xde3\\xed\\xf2\\x9e\\x7fX\\x03v\\xa6\\x0c\\xd1/\\xb5\\xbf\\x01\\x947=\\x87t\\x90"\\x08o\\xc2\\xd8\\x9f_2\\x0bQ\\xb6\\xffK\\xe34\\xe1\\xc3\\xa4\\x10TXi\\xdd\\xb5^\\x94\\xfefV\\xae\\xc3O\\xe0\\x93\\x8b\\xf6.\\xbc\\\\|\\xd7\\xdc\\x86y\\x8b\\xab\\xf2!L\\xbd\\x1e\\x8c\\xba\\x9d\\xae\\xe6\\xf5\\xa2\\xba\\xf4O\\xebrU\\x95\\xeb7\\xfea\\xba\\xb8\\n\\xf3\\x9b\\xef\\xc26\\x10\\xf7W\\xb5\\x0f\\xf8\\xb3\\xc7 C}3]U\\xcd\\xed\\x1c\\xd6\\x18)\\x89\\xd7\\xcb\\xf2\\xb2\\xba\\xb6\\xfd\\xd9\\xd9\\xe3\\x9b=\\x96\\xec\\x8e0m\\xeeV\\xb6\\xab\\x1bm\\xe4\\x1f\\xe7\\xd5\\xe2\\xae\\xc3\\xe3k2\\xe1\\x8b\\x83,B\\t\\xbd\\xbfEL\\x93\\xab\\x10\\xe6\\x9a\\xf4\\x83\\xefx\\x11kD\\xfd\\xd8W\\x93\\x82*\\x9d\\\'\\x0b\\x1f\\xdb\\xd7\\xd3\\xe2)\\x0b\\x84Cc\\xe1>hD\\xa7\\xffKZ<\\tL@\\xbf\\x85xoR\\xdbI\\xf7\\x8dj\\x00\\xa9\\xda\\xca\\x04\\xc5\\xe1\\xdbY\\xe5n\\xace\\x1d\\xbe\\x16\\xac\\xc2\\x87\\x80E\\xdd\\xf8_n\\xebU\\xf5\\x9f\\xdaG=k\\x99a\\xdc\\xfaq\\xbel\\xea\\xa6\\xba\\xdc2)\\xdb\\x03\\x87B\\xc6\\x16\\x80\\xa39\\xbcJ\\xe6\\xf0\\x04\\xb2\\x08\\xc9\\xe9\\xb3sx\\x82\\xe1\\x91lq\\x1aps\\xfe\\xa1lR\\x10B\\xe6JH\\xaf}J)N\\x7f.\\xb0-\\x06\\xb5S\\xf7\\xfe\\xfbT\\x18q\\xe9V\\xbaLD\\x1a\\xbfPA\\xdc\\x87\\xb9]\\xa92\\x03\\x8e\\xef\\x8djj\\x7f\\x90\\x0b\\xb8\\xe8\\xbc\\xf4\\x0f\\x8e\\t\\xec\\xcdl\\xba\\xba)\\xd7\\xb66i\\xfc\\x0fKk\\r\\xb9+@\\xee\\xad\\n\\xcb\\x95\\xff\\xdd\\x12\\x9c\\xbdR{\\xa1\\xf9z\\x0e\\xaam\\xdf9\\x92L\\x19\\xbe\\x86\\x12Kl9&\\x1e==\\x82$\\x89p\\xaby\\xbb\\xf5\\xbf\\\'}\\x81\\xa7\\x8d\\xdf\\xd92\\x8b\\x86\\x84\\xb1`\\xca\\n\\x13\\xee5$\\xaf\\xdd\\xbd\\x0e\\xf7)\\xdb\\\'\\x90\\xa4\\xb1^\\x8f\\x14\\x13\\x9f\\xac\\xb6wr\\xb4\\\'B\\xec\\x17\\xa2\\x8d\\xce\\x93\\xabk\\x88\\xc4\\xe6\\x0fi\\x15*\\xb6\\x8a\\xe4\\\'\\xd8\\x901\\x85M\\x7fN-\\xa4]\\xcd\\xdc\\xe3\\x83\\xd4:\\xb6\\xe7\\xb0\\xc5w\\xe3Z\\xb7\\xce\\x16\\xb2\\x0c.\\xb1\\\'\\x82>\\xab\\xfeT7\\xe5I\\xd2\\xff5sM\\x9d]\\x9f\\xbcD\\x080\\xa3\\xeeO0q\\xd1Cs\\xb0\\xd5\\xc0\\x01g\\xef>\\xbe\\xfb\\xf8\\xf6\\xdd\\x99\\xe7\\x9e\\xf3\\x1f~\\xfc\\xec9\\xee\\x13\\x14\\xe7g\\xd65~~\\xfb\\xe1\\xdd\\xc7W\\xaf^\\xd9\\xa4\\x9e\\xe7\\xfft\\x9fOC9\\x7f_\\xcdf\\xe1\\x0bjY\\x86\\xb2\\xbe\\n\\xd4X-\\xa2\\xe4\\x9f\\xe7+X\\xd0u\\x06\\xd6a\\x84u\\xb3^\\x87`\\xe5\\x87\\xad\\xcby\\xb9n\\xcaU\\x9b\\x8b\\x19\\\'\\xf1X\\xe0\\xa5\\x10\\xba\\xc7i\\x8bI\\xf1\\xbf5\\xd0\\x91\\x1a\\x99h\\xb5E[p\\x90\\x8e\\xb6\\xda\\x04\\xc6\\xdex\\xdaj\\xfc\\xc3\\xd2\\rq\\x94\\xd1QV\\xc8\\xc9\\xec\\x95\\xf9KGYm^\\x97\\xa4,\\r\\xe9\\x868\\x8c\\xb2\\xb0\\xeeQ\\x96\\xea\\x84\\x9d\\x06\\x01A\\\'\\xc22\\x93\\xb4\\xa2H{\\\'r\\x13\\xeedN\\x95\\x7f\\x9d"+H\\xbaiW%\\x1fDV\\x14\\xea\\x1e\\xf3\\x04Y\\xf5ZF\\x7f([\\xf8\\x7f \\xabd\\x15\\xd2\\xfe\\xb7\\xb6\\xe1\\x1b \\xae\\xff\\x02\\xd8%\\xc6\\x02\\nendstream\\nendobj\\n7 0 obj\\n<< /Contents 8 0 R /MediaBox [ 0 0 612 792 ] /Parent 42 0 R /Resources 48 0 R /Type /Page >>\\nendobj\\n8 0 obj\\n<< /Filter /FlateDecode /Length 1304 >>\\nstream\\nx\\x9c\\xedYKs\\x1b7\\x0c\\xbe\\xebWlo\\xd28b\\t\\x80OO}\\xe9L\\xd3i\\x0fm\\xda\\xfa\\x96\\xe4\\xe0WbMc\\xbbV\\x9d\\xf8\\xef\\x17\\xfb\\xd0\\x8ad\\xb0k\\xc5\\x8a\\x15;\\xe9%\\xab\\x9dE@\\x10\\xdf\\x87\\x8f \\xac+]A\\xb5|\\xcb\\x8f\\xfa\\xc7\\x9f?OtU\\xbf\\xd4\\xcf\\xf2\\xcb\\x8f\\x87\\x93\\xef\\x9f\\x93\\xaf@\\xab\\xa8#T\\x87o*\\x8f\\x95\\xd7A\\x81\\x8f\\xd5\\xe1i\\xf5rz<C\\xd4\\xfc\\xef\\xeb\\xc3_\\xd9\\xd4d\\xa6\\n\\xa3gW\\x8d\\xddeg\\x919s\\xca\\x9a\\xb0\\xb28i<\\x9dtv\\xbc\\x8c\\x8a^\\\'\\x8e\\xe6\\xa0\\x1c\\xb9\\xd6\\x16;+\\x9d\\xaf\\xe7\\x1dU\\x89\\xd5\\xc1l\\x8e>\\xf4\\xc6\\xa9Kp*\\xbaX\\x91\\x8a\\xb6\\xdb\\xc8\\xbb\\xab\\xb7\\x9d\\x1dU\\x96\\xed\\xbck\\xec\\xd8=\\xc5j\\x8eJs\\xa4\\xd9\\xda6qg\\x95uX%F\\xe2v\\x83r\\x8e\\xf7\\x91,\\xfaJ\\xa3\\x91\\xb6\\x02\\xa0,\\xd8Uf\\xa4\\rXe\\xacy\\xf8\\xf8\\xf5x\\xfc\\x07\\x12\\xeey\\xf0\\xa2\\xa79\\xa0Q.\\x1av\\x86l\\xdc-\\xfa|\\x16h\\xba\\xbc\\xba\\x98\\xcd\\x89hzs~\\xd6\\xfe8\\xbb~\\x7ft\\xb3\\xb8\\xba\\xac\\xdf\\xcc\\xf4v\\x86a\\xda}9=[.>4\\xef\\xa7\\xed\\xc7\\xc5e\\xfb\\xe1\\xfa\\xfd\\xd9\\xbf\\xab\\xffBSx\\xd6~\\xfdg\\x06\\xd3\\xa3\\xe5M\\xfbr\\xdc~\\xbb=?[v\\xde\\x96\\x07\\xb8_\\x07\\xcb\\x91ga\\xfd\\xf2F\\xdce\\xf3s\\xb5\\xcb\\xbf%\\xbc\\xa3\\xd2\\x96\\n\\x10\\x8d+\\x9c\\x90\\xeeM~\\x93Y\\x1d|\\xbf\\xcc\\xb3>5]6$0\\x89\\xb9\\xedSj\\x88\\xc1y\\xae=S\\x90Qk\\x91\\x8c\\xd9N\\xa1-\\xaa\\x0ey\\x93Y\\xa2f\\x8e@\\xc0\\xd6\\xf2\\x85\\x10[\\xc7\\r^\\x16\\xac\\xcd\\xa3\\x0b\\x89\\x19\\x93\\x03a\\xb5b\\x12WZ\\x01,\\x1e\\xc1\\xaf\\xa3\\xfax\\xad9/\\x86:T\\xf3\\xa0\\xd0v1-\\x04G\\xa8B\\xe818\\x90S`\\x18\\x05\\xcb9E\\xb4cUd\\xacM\\x13\\xbf\\x90\\xb9o8\\xa0X\\\'\\xc1)\\xe3\\xfd:\\xad\\x88\\xd3\\xbd\\xf6\\x81\\xf5\\x83Vof\\xf5M\\xa0\\xa1u\\x8a\\x9cYE\\xbf\\xbf\\xbf\\x7f\\xb7\\x9c\\xecIt\\xc8A~d\\xaa\\x8e#\\xaa\\x1e\\nU\\xcf\\x98\\x7f,\\xacK\\xec\\xb0O\\xd8\\x88j\\x86\\xfb\\xabf\\xc8\\x8c\\x80\\xe2:\\x1br<=\\xfd\\xf6@\\x04\\x87m\\x0cmS\\xacY\\xca2\\xdf\\xd8\\xb2\\xf6Q\\x00_\\x08\\x14X\\x97\\x02\\xbf\\xe9\\x96\\x05_s4\\xac8\\x06sa\\x7fT\\x9b-z\\x97\\xa43\\xd8\\xe0p-\\x8e\\x1d\\xeb\\xfb\\xc8\\xbe\\x133FMW\\xa0G\\x02z`V4|\\x1c\\xea~\\x10T`\\xac\\x8a\\xf0\\xcc`xO6\\x0b\\xbb\\xa9\\r(K#\\x0b=(\\x13z9\\xfca\\xf3f\\xf4A\\xe00\\xa9p\\xdd\\xfb8\\xec\\xd5\\xf4\\xeb8\\x0e\\xcd\\xa8Pl\\x03\\x99)\\x02\\xe73&\\x15M\\xb2\\xa8\\xc8\\xf8\\\\4_i\\x0b\\x03LKZ\\xd9\\xff\\xdb\\x99\\xcd\\xdb\\x99;U\\xfe\\xf7\\x81\\xcb\\x18\\xf6\\x16\\x0c\\x8a\\x96\\xfc\\x18\\x85k!\\x15ob\\xd9\\xeeV\\xd8\\xf6#\\x81\\xb6Y\\x8d\\xbc\\xd0\\x9c{+\\\\7\\x1fV\\x9f4\\xc6\\xcdu\\xe4\\xc5\\xf2j\\x86~\\xfa!\\xb9\\x99\\xdd\\x9c\\x1f\\xddt\\x97\\xaf\\x0c{\\xccxA9\\x13r\\x04\\x91Se\\x93\\xd04{\\x02\\xe7\\xfb_\\xae\\xfd%\\xf1\\x83{.\\x0b%?Fnobf2\\xc5\\xda=J\\xc5U\\x87AJ\\xba?\\x91ZFy\\xc2\\xa2I\\xb4\\xa0:@\\xcb\\xd9\\xceG-\\x12\\xc4\\xfa\\xbe\\x1ar\\xa4\\xbfL\\xe5\\xd0\\xa7\\x8cwHp\\xb9\\xc5xg\\xe5nw\\xe3\\x1di\\x03\\xf7\\x1f\\xef|R\\xfc\\xdf\\xd6x\\x87\\x9e\\xd2xG\\xb8(\\xa2\\xf2\\x00\\xb5ZD\\x9bc\\xed\\x12J\\xf0g\\xde\\t\\xaa\\x0046_\\xb1\\x9ej\\xda\\xf4V#C\\x16\\x97\\xf5\\x8f\\x93\\x9f\\x0e\\\'\\xd7\\x13\\xe8\\x84\\x84\\xefT*p\\xebg\\xacn\\xca\\xf3\\xe4b\\xf2\\xf2\\xb5\\xaeN\\xf9#\\\'Z\\x19\\x0e\\xed\\xb61\\xbd\\xa8 \\xb2\\x16\\xd6r\\xf0\\xae\\xfak\\xf2G7[\\xce\\x8a\\x96}X\\xd6mcx\\x0f\\xde\\x8c(\\x1d\\x977X\\xdf\\xdc\\x9c!c\\xaa\\x91\\xcal\\x93\\x91\\x94\\xfb\\nFRr\\xe5o8\\x92\\xe2\\x17\\x8bc#)\\xca\\xce\\xf1\\xf8YzpW\\x9e\\xd1\\x8f\\xae\\x87\\x1b<\\x89\\xc4\\x1e.c\\xf3\\xbaZ\\x0b_Q\\xacV\\xcc\\\'V\\xa9\\xca\\x13\\xd7Q\\xdf\\x1ft\\x07A\\xdd\\x9e\\xe8\\xba-S>\\xd2\\xb0\\x1a0\\xfe\\xc8\\xb9Z\\x1b]\\x8aA8\\r\\xeb\\xec\\xdc\\x11@?\\xa2J\\xab#*o\\xa0\\x15\\x14\\xdcNP"*\\xc3\\x9ai\\x80K\\xc4\\xd81A\\xe1\\xde\\x06\\xe2\\x88\\x9e \\xf7\\x81!0\\x04\\xcc5o\\xc7\\x9ar\\x02>F%=\\x91\\x10\\xb5\\x8a|Qq\\xb9N\\xd4\\x88\\xf6\\xa4%\\r=\\xa6ya\\x02\\x86\\x92\\xb3\\xe5\\xdc0\\xa1l\\xedG\\x82\\xa6\\xf6\\xd3P\\x16\\xb4\\x1f\\x0b\\xaan\\x88\\x13\\xa3\\x8d\\x05,G\\x07\\x1dK4\\xc6M\\xd0!>c\\xe2(<\\xde\\xb6\\x15"\\xc1SL\\xef45\\xa6s\\x0ck\\xd3\\x1d\\x0bB\\x91\\xdd\\x81\\xe9]\\x9f\\xde\\x9dM\\xef\\xc4\\x80\\xbe\\xe4\\xdc\\xea\\xaeD\\xe1@\\xa2F\\x8e\\x07\\x92b\\x97\\x06\\x18\\x1b\\xa42\\xef8\\xb8\\xc8lS\\xd1\\xe6[\\xadh\\xcet\\xe4\\x0e\\x94\\x02W#\\xaf\\xbbUE\\xf3\\x95\\x1d\\x18_\\xf2\\x91SV\\xfc\\xe1$\\xc3\\x0eI9\\xbe\\xf2RC\\x87M\\xc7X\\x83,\\xf8\\xbc\\x05\\xb5U\\xdb\\xf3\\xd4GW\\x05\\xe3\\x06\\xda\\x1e\\x7f\\xd7\\xf5\\xb0\\xaf\\xdc\\xc1\\xa1H\\x9f\\xa8\\x87\\x1a]\\x95Of\\xfd\\x7f\\x95\\xc4\\xbb\\xb7\\nendstream\\nendobj\\n9 0 obj\\n<< /Filter /FlateDecode /Length1 1398 /Length2 6004 /Length3 0 /Length 6962 >>\\nstream\\nx\\x9c\\x8dv\\x07P\\x93\\xed\\xd6-\\x02\\xd2\\xab4\\x11\\x90\\x00\\xd2!$\\xf4\\xaa\\xd2{\\xaf\\x02\\x02\\x81\\x04\\x88\\xa4\\x00\\t%\\x14A\\x91^\\xa5+\\x1d\\x04\\x94.\\x82\\xf4\\xaaHG@\\xba\\xd2T:(\\x1dD\\xca\\x1f\\xcb9\\xe7\\xff\\xce\\xbd3\\xf7Nf\\x92\\xf7Y{\\xed\\xf6\\xec\\xb5\\xdf\\t/\\x97\\x91\\xa9\\xa82\\x14\\xed\\x08\\xd3@\\xa3\\xb0\\xa2` H\\x1e\\xa0\\xaaozG\\x1a\\x00\\x02I\\x00A q\\n^^38\\x16\\x01\\xfb\\x0bS\\xf0Z\\xc0<1p4J\\xfe\\x7f\\x11T=a\\x10,\\x1eS\\x83`\\xf1<}4\\n\\xa0\\xe3\\x85\\x00\\x80%\\x00`iy\\xb0\\x8c<\\x08\\x04\\x10\\x07\\x81\\xe4\\xfeED{\\xca\\x03\\xd4 \\xdep(@\\x1f\\x08\\xd0A\\xa3`\\x18\\n^U\\xb4;\\xce\\x13\\xee\\xe2\\x8a\\xc5\\xa7\\xf9\\xd7#@\\xc0I\\x10\\x00\\x96\\x93\\x93\\x11\\xf9\\xed\\x0ePF\\xc2<\\xe1N\\x10\\x14@\\x1f\\x82u\\x85!\\xf1\\x19\\x9d \\x08\\x80)\\xda\\t\\x0e\\xc3\\xe2\\xfe\\x11B@\\xd1\\x15\\x8bu\\x97\\x17\\x13\\xf3\\xf1\\xf1\\x01B\\x90\\x18 \\xda\\xd3\\xe5\\xa6\\xa0\\x08\\xc0\\x07\\x8eu\\x05\\x98\\xc000Oo\\x18\\x14\\xf0\\xaba\\x80\\x01\\x04\\t\\xfb\\xd3\\x19\\x90\\x82\\x17`\\xe6\\n\\xc7\\xfc\\xc1M\\xd1\\xceX\\x1f\\x88\\\'\\x0c\\x80\\x07\\x10p\\\'\\x18\\n\\x83\\xf7\\xf0BAa\\x9e\\x00|r\\x80\\xa9\\xb6\\x1e\\xc0\\xd0\\x1d\\x86\\xfaC\\xd6\\xfbC\\x10\\x01\\xfc\\xbd\\x1b\\x00\\x18\\x08\\xfew\\xb8\\xbf\\xde\\xbf\\x02\\xc1Q\\xbf\\x9d!NNh\\xa4;\\x04\\x85\\x83\\xa3\\\\\\x00\\xcep\\x04\\x0c`\\xa8\\xa1\\x07\\xc4\\xfabE\\x00\\x10\\x14\\xf4\\x17\\x11\\x82\\xc0\\xa0\\xf1\\xfe\\x10o\\x08\\x1c\\x01q\\xc4\\x13~W\\x0e\\x01h(\\x1b\\x03 \\xf8\\x06\\xff\\xb6\\x87q\\xf2\\x84\\xbbc1@\\x0c\\x1c\\xf1\\xabE\\xb1_a\\xf0\\xb7\\xac\\x8e\\x82\\xaa\\xa2\\x91H\\x18\\n\\x8b\\xa1\\xf8U\\x9f\\x1a\\xdc\\x13\\xe6\\x84\\xbfv\\x9c\\xd8\\x9f\\xc9\\xba\\xa1\\xd0>(\\xff\\xbf\\x07g8\\n\\xea\\xfc\\xab\\t\\xa8\\x97\\xbb\\x989\\n\\xee\\xe1\\x05\\xd3V\\xfbK\\xc1C\\x14\\xff\\xc1\\\\`X\\x80\\x14HNZZR\\x06\\x00\\xf3\\x00\\xc0|\\x9d\\\\\\xc5~\\x857\\xc3\\xb9\\xc3~\\x1b\\xc1\\xbf`|\\x07\\x81\\xfe\\xeehw\\x803\\xbe\\tX \\xdc\\x19\\x86\\xff\\xa1\\xf0\\xc7@\\xbca\\x00\\xac\\xa7\\x17,\\xd0\\xff\\x7f\\x1b\\xfey\\xa2\\x00\\x83\\x01P\\xb8\\x13\\x16\\xe0\\x08s\\x81\\xa3(\\xfe\\x13\\x1d\\x0f\\xc3\\x9c\\xff\\x9c\\xf1\\xc3\\xf7\\x84\\xfb\\x02l@x\\xed\\x81\\x01\\xa0_\\x9f\\x7f?\\xdd\\xc5\\xcb\\x0b\\x8aF!p\\xff\\xa1\\xff\\x9e\\xaf\\x98\\xa6\\x81\\xb6\\xb9\\x91\\xba\\xf0\\x9f\\x8e\\xffmSQA\\xfb\\x02\\xfcE%\\x01\\xa2r\\x92\\xb2x\\xb9\\x8a\\xcb\\x01dd\\xa5\\x01\\x81\\xff\\x8cb\\x04\\x81\\xff\\xad\\x02\\xf4\\x1fWm\\x943\\x1a \\xf7\\xa7X\\xfc-\\xfd\\xab`\\xef\\xbf\\xf3\\x17\\xf8\\xbb\\x1b\\x82\\x80\\x7f\\xc62@\\xe3E\\x0b\\x03\\x08\\xfcG\\xe3\\xb6 )\\x90\\x13\\xfe\\x0b\\xfc\\xff\\xad\\xf4\\xdf.\\xff7\\x81\\xff\\x8a\\xf2\\xff\\xd2\\xf8\\x7f\\x17\\xa4\\xe1\\x85@\\xfc6\\x0b\\xfc\\xb6\\xff\\x1ff\\x08\\x12\\x8e\\xc0\\xfd%\\xe05\\xeb\\x85\\xc5\\xeb_\\x1f\\x8d\\xdf\\x02\\xd4\\x7fS-a\\x7fvV\\x1f\\x06\\x85{!\\xff\\xdb\\xaa\\x8d\\x85\\xe0\\xf7@\\x19\\xe5\\x82\\xd7\\xb2(X\\x12\\x08\\x92\\xfc\\x83\\xc31\\x1ap_\\x18\\xd4\\x08\\x8eur\\xfd\\xa3\\x98?\\xb8\\xf9\\xafMC\\xc0Q0#4\\x06\\xfe\\xeb\\xd5\\x82\\xf7\\x02\\x81\\xfe\\xcb\\x86_/\\\'7\\xfc\\xeb\\x03\\x83\\x97\\xe5o\\x13\\x0c\\xbf=\\xff\\xcc\\xab\\x8erBC\\x7f\\xad\\x99\\xb8\\x944\\x00\\xe2\\xe9\\t\\xc1Q\\x80\\xf0j\\x12\\x97\\x92\\x02\\xf8\\x83\\xf1\\xfb\\x08\\x85\\xf9\\xfe\\x162@\\x0c\\x88Bc\\xf1.\\x00|\\x8f\\x81\\x00g\\xb4\\\'\\xc5\\xaf\\xb1\\xca\\xc9\\x02\\xc4\\x9c\\x11h\\xb4\\\'\\x02\\xe6\\x8c\\xfde\\xfa\\x83\\xca\\xfdE\\xff\\x8c\\xf0\\x17\\xfc\\x8f\\xacN^\\x9e\\x9e\\xf8\\xe5\\xfb-\\x0e|I\\xff:\\xff\\xdet\\x18\\xcc\\x17\\xe6D1=\\x81vRxt\\xaf\\xfaQ\\xf3q\\x952\\x9b\\x8f\\xe8\\xd2 \\xc9\\xfcbkd\\xc2\\x9d\\xae\\x08),\\xdfd\\xae\\xbf\\xab\\x1e\\xe9S\\xcdQ\\x0f\\x15\\x07h\\xf9\\xd5\\xfe4\\xa3\\xa9\\x17a#\\x13\\x01lB\\xdf\\x8e\\x87|m;2\\x1f\\xcc\\xa5j\\xe5`\\t\\xd4\\xbb\\xbe\\xa8l\\x8b\\xe6\\xf5\\xfe\\xd8\\xebp\\x81]\\x87\\xa2\\xaf\\xb9\\xbc\\x97I\\x8b\\xfcB\\xff\\xfd\\xb11\\x07\\xad\\x83\\r\\xb1\\r\\x7f\\x92\\xe5\\xc4i\\xa8L\\xa7\\xc4J\\xc5\\xf2\\xb3\\xb3V\\xcc\\x8a\\xb5\\xdc\\x06\\x00\\t(:\\xa4\\xe3Je\\xc3\\xc6*g\\xb7n\\x10F\\xdf\\xe1\\xba\\xb1\\x88\\xed\\xbbcK\\x17w\\xc5\\xd3&\\xdd\\xcbL\\xdb\\xfc\\xfd\\x19a4<\\xeeH\\xa59\\x86\\xf5\\x07\\xee\\x8bM\\xdc\\x93\\xbe\\xd9\\xd9\\x9e\\xccw]i\\x12\\xbb\\xf9\\xbao*\\xa5\\xcb\\xc3\\x18X\\x19\\xfdt\\xb8\\xb2\\xfb\\x13\\xbbY\\x99\\x1eg\\xea\\xd4a\\x08\\xf8T\\xa4\\x0eU_\\xa4$p\\xb3\\x16"\\xc3\\xf8\\xe6\\x88\\x90\\xd5c`v\\xf6\\x1bqoYAH@1\\xfb\\xbd~ex\\xc4\\xa5DO\\xad\\\\\\xa5\\xeb\\x9b\\xf7*\\x94\\x9a\\x15\\x1f\\x0f \\\'\\x9e\\xef\\xfb\\xa5\\xac\\xad\\rg!\\xe6\\x19#\\xdf\\xcc<\\t\\xb5v:+\\xf4\\xf1\\xbf\\xcb`h\\xb3O\\xb8\\x04`Vm\\xbfeC\\x96>\\xc2r\\x07\\xce\\xacQ\\xc9\\xb3s\\xecW\\x1e\\xe4~\\x90J\\x901\\xd2Ew\\xb1A\\xd7\\x00)\\xe1K\\xc0N\\x9f%\\xd0\\xa30\\xc0\\x87\\x8a\\xf7\\x07k\\xfb\\rI\\xfc\\xbcZ\\r\\xc2\\xab;H\\xc8u3W\\\\\\xed\\x17G\\x0e-.\\xf6\\xf9\\x1bg<H\\x9c\\x97\\xf82|\\x9e\\x0b\\xf9\\xa2^\\xadc\\xad\\xdfVL\\\\\\xc9\\xa8\\xdf~\\xfd\\x8cP\\x9a\\xe7>Cj\\xb3Ii\\xee2\\xf2Xs1\\xb9\\x9d\\x1d\\x98\\x07\\xd1\\xa7N\\x89\\xaek\\x0c\\xe8\\xb6\\x9d#\\x12 _\\xb3\\x00\\xcf\\x8e\\xbb\\x02\\xef_.\\xdeS\\x8b\\x19\\xd2:\\xd4?\\x0f\\x1d\\x97!\\xcd\\xbce-\\xa5\\xf4"\\xc5VW?\\xdd\\xc0\\xa6\\xac\\xba\\x08#\\xfd|~\\xd5J\\x9e6b\\xb8\\xe5\\xb9Th\\xee\\xa0\\xf6\\xa2\\xa2\\xca\\xeb&\\xc74~ju\\xe6p\\xc3\\xb6\\xc6\\xf4\\xd6f!\\xcefq\\xd5M\\x05\\xb2\\xd5[\\xbc\\x01\\x9em!\\xb8\\xeb\\xc5[O\\xb4\\x858>\\x13\\x83GL\\xe3b\\xcbS\\xdc\\xbah2\\xb0\\xd5\\xf1\\x1b\\xd1\\xa6^T\\x07/\\x84\\t\\xe5\\xf2\\x86)\\x17R\\xa4\\xb5\\x91\\x0fmh\\xf2D\\xddH\\x80\\x0f-I\\xa3\\xe9\\x92v\\xe5\\x87>\\xf7W\\xbe`\\xad\\xa6\\xf9\\x96\\xc9\\xe5\\xbcOp%eSN\\xbf\\x87E\\x04\\x13\\x0e\\xdd\\xbf\\xdaV\\n1g\\xbf1\\xa7\\xc5\\xa7\\xb7\\xb9h\\xdf>\\xa1x5\\xa2\\x17"\\xfe3\\xb8\\x8bA\\x81eK\\xf0@Vd\\x8cW^\\xea\\xe5\\xb7B\\x83\\xafT\\x1b(\\x1b\\x8b\\t\\xfa:\\x95\\xc8\\xb8\\xafD-\\xb7B$\\x99$8k\\xdc\\xd4D\\xca\\xd8\\xda\\x969:\\x11\\xeb\\xbb\\x9e\\xc8\\x81\\xce\\xf5\\xc1\\xdd\\xdd\\xe5f\\xb9\\x9f\\xe9\\xbc\\xe5g\\x8fMrs\\xfa\\xad\\x89\\xf2\\x15\\x17\\x1c\\r\\xfd\\x82$+\\xaa,\\x84"\\xdf\\xb5\\x0e]/\\xd3\\xe4\\xf0k\\xd3\\xe4v\\xc8\\\\\\x04\\x1dd4s\\x7f\\xf0\\xdaLv\\xbfO\\\'\\xf8\\x80\\xff\\n\\x05\\x85\\xf2<\\x8c}\\xa7{[_\\xfd\\xd2\\x93p\\t\\x06B"\\xa7\\x84\\x99\\x04]\\xf5ye:O\\r\\xc6\\xd6\\xb1j\\x12\\x9a\\xf2\\xd7\\xea\\xa7\\xe9\\x0b\\xe0\\x8d\\xbd\\xa6y\\x01*\\xd9\\xf2\\x13\\xba\\x1e\\xc6s\\xb9\\x85\\xfe\\x91\\xe6\\xaa\\xe2\\t~0\\x05{\\xe1\\xa7\\xeb`1\\x9c\\xca\\xd2\\xa7`\\x7f{Wh\\xe8\\xe9\\xdd\\x97\\xe5f\\xee\\x97\\xa2p\\xe9=\\x89\\x8e)\\xa7&\\x8bB<@\\xcd$-\\xba\\xaf\\xf4\\x11 \\xe5\\xa7\\x1b\\x04\\x84\\xe4\\x0c6\\xf6\\xae\\x0c\\x02\\x97X\\xfa\\xde\\x98\\x9cF\\xba\\xfb3pmS\\x99\\xeb0\\xab\\xad\\xde![\\xba\\x18\\x16\\xd0\\xf2\\xecfck\\xfe\\xa0{\\x12\\xe8\\xc0(eU.\\xff\\xe4\\x9d\\xf0\\xbd\\x88\\x16N\\t\\xe9\\xf2\\x17\\x97\\x19\\x1av\\x94\\xba\\xddF\\x1euX2{\\xbd\\xda\\x92\\xb4"t\\xfd\\xbe\\xe21\\x82\\xc0jy\\x92-6\\xbcZ\\xe5\\xd0\\xf5\\xb8\\xa7E\\x1d\\xf0\\xd3\\x11Y\\xf4#\\\'\\xec\\x14\\x89\\xbc\\x19\\x98\\xb7\\xdd\\x9dE\\xa9\\x90\\x94\\x1e\\xd6Y?\\xa3\\x881\\xfe\\xdc\\xf4\\xba\\x1a\\xaa\\x96\\x95\\xf3\\x88\\xab\\xe1|\\x84\\x87\\x8a\\xbc*#J\\xb9\\xa5\\x8c/O.\\xe4\\xd0\\xa0jz=\\x8cK*3-\\xd1VEKH+l\\x058+qB\\x1f\\xd5\\xc9KEpQ\\x12\\xed\\xf2\\xba\\xc8p3d<KQ\\xd7\\xd1x:\\xde"\\xa3i\\x87s\\xdd\\xf8\\xc0W\\x1f\\xf4\\xf0\\xe9\\xd7\\xda\\xef\\xb9t\\xd3\\xd9z\\xb4\\x95\\x88\\x1e\\xba\\xfd\\x83\\xde\\xcd\\xa1\\xe0Y.\\xcaF\\xb1;\\xad+U\\x8ak\\x9e\\x82qZyP\\xe5\\xa2\\x1aJ\\x05\\x89\\x89\\x82\\x8d\\xd2(\\x0b\\xea\\xf37\\xa9\\xda\\x1c\\xc8\\xb0gq*\\\\\\x81\\xdf\\x8f\\x88\\x1e)%\\x9e,wD{\\xdbK>\\xadFb\\x16\\x97eJ\\xcb\\x16\\xd7.\\x0f\\x13\\xb2~\\xd0\\x7f\\xe4(a\\x0f\\xa8(\\xc40\\x8f\\xb0|\\x8c\\xa4\\xa2\\xbb^\\x03\\xb7\\x05_\\x18A\\xd9<\\xcd\\xbb\\x9b\\xec\\xbc:\\xc13\\x9e\\xdb\\xdf\\x1bD\\xd6"\\xa2\\x14\\xd7\\xa7\\xde<\\xcc\\xa0\\x84\\xd3]\\xc7Y\\xfd\\xb4\\xc4\\xda\\xa5~6RO\\x80<\\xe4.\\xc0pdh\\x11\\xc58Q\\xaf8\\xbdtk\\xc6\\xf6\\xff\\xe4\\\\1\\x92\\xdb\\xdc\\xe9O}\\x07\\x05\\xc6\\x96\\xd5Mkcot\\xdf\\xa5\\xd4=\\xbe\\xb9\\xb6\\x18\\xb5r,\\xeb\\x88\\xf8x\\x99}m\\xbf\\xe2S\\x94\\xb4~\\xe5&+\\x9fn\\x9e9\\x06\\x18K)\\x18\\xf7\\xc2HzZ=\\x9ed<\\xcd#?\\xbeW\\n\\r#f\\xd5j)\\x0e;\\xec\\xc2L\\x82\\xfb\\xfd\\xd8&\\xa5N\\x1e=\\x80\\xe8\\x82\\xea\\xa6\\xb1\\xa7\\xb2o79\\xae\\xab\\xd58\\x11=\\x1cQ\\x13\\xc8$Kw\\x0f\\x16y\\xb4\\x19?\\x11\\xcc\\xf2v\\xa8\\xfdS\\rKx\\x9e\\x84\\xf4\\x91\\xedk\\xc5\\xfb\\xf3\\xfe1g\\xbd\\x14"RUR$\\xdb\\x057\\x83\\x02\\xfaC\\xd8\\xbbz\\x935\\x19?\\xe9]$.VH\\xab\\xad\\xfb\\x9e\\xba\\xdd\\x0fz\\\\9\\x1eK\\xfb5L0\\x91gR\\xa8\\xcb4\\x99\\x10\\xac\\xf6\\xfd\\xde\\x9b\\xfb?\\x9b\\xc6f\\xa8m2|o\\xd3\\xb2UuP\\x88\\x17\\xa4\\\\\\x15\\x1e\\xc8\\x11p\\xb4\\xac\\x8c\\xe5\\x8e\\x9e\\xe6yJ\\xbe\\x9e\\xcf\\xf8\\x05q3\\x87\\x1a,I\\xd4;\\xf9\\xcc\\x1f\\xa9\\xca7\\xfaZyY*\\x0e\\xeeI.\\xff8R\\xd0\\xff\\xdb\\xc9\\xf7\\xd5\\x82\\x9f.\\rp{fa\\xfd\\xb0\\x03c\\xb2\\xbb\\xca\\xbd\\x9a\\\\C\\xca\\xec\\xfb\\x14\\xcd\\xd7:\\x07\\xb2F\\xbf\\xabU\\xf7\\xe7|\\x92\\x95\\x0c\\xbc\\xca}s\\xbbD\\xe5\\x01Rq\\x15z\\xbc}\\x1e\\x08\\xbc\\x13\\xb6U\\x8c(\\x00\\x82\\xa3\\xc7tU\\xc1\\xa1\\xc7\\xca\\xebs\\xbb\\x97B\\xea\\xd93\\x97$\\x0b\\x85`\\x1aV\\xc1\\xc97\\\'\\x9c\\xe3\\x82%\\x05\\xddd)S>\\x9c\\xa6\\\\1\\x88\\xbb\\xe1 \\xf3\\xf3uZ\\xba\\x1dmr!\\x83\\x9e\\xf3E\\xde\\xe4\\x89|rt\\x9aC\\t\\xa2\\xf8\\n\\xe5\\xdb\\x87\\xc6P\\xa5\\xab\\\\\\xdd\\xcd\\xd9\\xf6\\xee\\x1e\\x9f\\xd2\\xa3|\\xcf\\t\\x0f\\x1b\\xea2\\xc9\\xa7m\\xd9\\xa2Wij\\xd8\\xe5\\xe8\\xfd\\x9fs\\x1b\\x8eJ\\xf9\\xcbu\\xcf\\xcb\\x96\\x1d3\\x88\\xe4\\xfb\\x0c\\xaa\\xf3\\xb1\\x9a]*B/wik\\xdb%\\x91,\\n0\\xb3\\x1d\\xadi3Q}\\xd9H \\xdf5pu\\x10\\x9cZ\\xb8}\\xee\\x18\\x10D\\x1d|I3\\xd1\\xde\\x8b\\xacq\\xf7  G\\xd9\\x98\\xfb\\xf3\\x03\\x9ft\\x12t\\xbd\\x1e)X\\xb4\\xad\\xeej\\xa6\\x0e_\\xec\\xe7\\xb6\\x1bC\\xdf\\xd9\\xe1\\x8c&\\x97\\xde\\x04\\xe5\\xad\\xach\\xe9\\x8dy\\x8f\\xd5\\x1f\\x86\\x1fvwY\\xdcd\\xb3m=X\\x0b\\x07\\x13\\xdb\\x82\\x88\\xcb\\xa9\\xc5\\x14GqZ\\x9b\\x01\\xd2\\xf3\\xc5\\xb7\\xfd\\x9fd\\x9d\\xbd\\x8dQh`\\xd9\\xba\\xf4\\xd9_\\x83\\x9aO\\x90\\x9e\\t\\x04\\xea\\x13U\\x93\\xbaa\\xd7U\\xdd\\xfed\\\\\\xe8\\x83\\x90\\xce\\xee\\x8dz{\\xd9\\xac\\xddB\\x9e\\xa3\\xeb\\x12\\x1c\\xe4\\r\\xf0\\xe2P\\xba\\xae\\x06f\\x8e\\xc5D\\xb3\\x14u\\xa7q\\xcar\\x91\\xba0\\xc7KU-\\x16\\xb8\\xd4|w\\xb7a\\xa1\\x0ca\\x88L\\x99QK\\xf5\\xe6%\\xa5F\\x1e\\x8ba\\x82\\xabd\\x07\\xe1\\xcaL\\xbcL\\x83s\\xb69\\x1d\\x0c\\xec\\t\\xe2ls\\xfd?\\xa7\\xd9\\xf7\\x14A\\x85w\\xfd\\xd0\\xc2\\xcd\\x1bG\\xa7\\x13u-\\xf5\\xa0\\xc3\\xd1U\\xaf\\xde\\x0by\\x9b\\xf3\\xf2\\xfc\\xcb\\xec\\xf5\\xb5\\x8f\\xb5\\x17\\xf4\\xbf\\x9e\\x18\\xa8\\x10UT\\xbeLbx\\xf3:uV\\xd3\\xb8\\xb3o\\xed[\\xde\\xa3\\xea\\xa6\\x88;\\x13\\x10\\xcb\\xda\\x08\\x8f\\x00\\xdd\\x89\\xd72\\x87k\\x1ade\\\\g \\xbb\\xf3\\xd0\\xaf\\x1c\\n\\xed\\x83|<\\x81e\\x17\\x03Cd\\xda\\xc5\\xd6\\xbd\\xcf\\x18w\\xe9:bYr\\xa8\\xfb\\xdb\\xae\\x86%v:\\xe9N\\x19\\xab\\xb7\\x94\\xeeu\\x91\\xb1\\x977\\x05\\x13\\xcb\\xcd\\x17\\xf4\\x85\\xd7\\xcd3\\xd0\\xf2\\xf0\\xc5\\x1e\\xf9P\\xd9\\xee\\xf5\\xfb\\x05\\xa2\\xe5\\x0cwe\\x7f\\xf6Ys`4nfk\\xbc\\x89U\\xfc\\x16\\xf0)\\xbb=\\xf2\\x92\\xe9\\x8c\\xd5\\\'\\xc9\\x8d\\xf3\\xb1\\xb4S\\xcb^\\xf6\\x9b\\x01\\xc7\\xfdS^\\xc3\\xe9_,v\\x17\\xd6Ie-\\xd1\\x85\\xad\\xe3\\xb2\\x96\\xa9n\\xaf\\xfac\\xa0\\xcd1\\nR|\\xc5\\x0e\\xbe\\x93\\x89\\xfbhVH\\x9e\\x8c5\\x92\\xa62;s_\\xd8(\\x83"y-\\x89T\\x89f\\xda\\x95\\x84\\x86B\\xe9\\xb9.$$\\xc2\\xc6\\xba\\xd1\\xa37\\xd9\\x83T#\\xdc\\xe9\\xba2\\xaf\\xd6T.\\xd1k\\xa8S\\x95t\\xd3\\x03\\x91\\xf5\\xbekD\\xddU\\xa1\\x1fYB\\xa3\\xb6}\\x8f\\xe6\\xde\\xd5\\xad\\x17\\xc4\\x9a\\xdd\\xe3A\\xe4\\xe7\\x0e\\xd7\\x989\\x84\\x17\\xc7>~\\xc6Y\\xbb[*\\xc08hyw\\x17\\x03\\xddg\\xa4\\xb4\\xd75\\xf8\\xc96\\xeb=\\xa8.s\\xa5\\x96\\xdc\\xb1\\x8a\\x8f\\xab 8"\\xe9+\\x84lE\\t\\xec\\xa5w\\xc9o\\x99>\\x91\\xbbM\\xf8 \\xbd@\\x1cG\\xd4Q\\xe8\\x90\\xad\\xc4\\x0b\\xf4\\x8do\\x189F\\x9c\\xe8\\xbb\\xbc\\x0b\\xa9e\\xd5\\x9c\\t\\xfc0-~\\xfbF\\xf6\\xfe\\xadG\\x0fe\\x9d\\xd7v\\xb72\\x16\\xc8\\x18_\\xedy\\x06\\xbb41\\x8e\\xc7\\xcew\\xa6\\x86D\\xde\\xa9\\xe1\\x8ar(\\t:"QD\\xa64z\\x11\\x10\\x843\\xe7\\xfd(\\xb4{J,7WM\\x0c\\xe2i+\\xb8G\\xf9v\\xc6\\xf0F{?*\\xdb=O\\xb3Nn\\xb7\\xa4\\x96\\x8a;\\xe8yY@\\xb2\\xc4\\xcf\\xd2@\\x12\\x81B-"\\x9b\\xac\\xb0{D\\xb3\\x15\\x8e\\xf9@\\xcf\\xe9\\x1f\\xcb\\xb5\\xd7\\x088g,\\xdf\\x11Y\\xebhJq8\\xa5l;{)\\xd4\\xb9\\xf3\\x88\\xe54t2N,=wQ\\xa0\\xbd\\xe6\\x18\\x16\\xe6*\\xb8\\xf1\\x04\\xe0\\xbcE\\xd5\\xe0\\xc0\\x98b\\xfc\\xc4/\\xbf8\\xe6\\xe7\\x00J\\x0b\\xfdV\\xf1\\xc5*1\\xfak\\xc5\\xacU\\xa1e\\xe8\\xd14\\xd1\\xce\\x85q\\xfb+\\xc5Y\\x17N&\\xeb\\x85I\\x83\\xd6\\xbdp\\xfd:\\xe2z.\\xceq.5\\xe9\\x87\\xa5\\xab\\xbcg\\xefp\\xd7f\\xef\\xe5\\xafy\\xdc\\xed\\x8a\\xc1V\\xea\\xe60@v\\x08g\\x8c\\x18\\xb8\\x9b\\xe8\\x99W\\xef\\x84,\\xaaF\\x98\\t\\xbcxt\\xa0@\\x17\\x9f\\x1f\\xd5\\x1a\\xe8\\xf3\\xb4\\xf3\\xa4/\\xc5gr\\xd0*b\\xc0V8\\x19VERr\\xa3\\xf6\\x95\\x9a\\xaaeYP\\xe5en\\xd5*\\xb3\\xfd/=\\xdbXE\\xc9\\x03\\xfe\\xb6I\\xd2\\xe4>\\x04\\x94\\xe0V\\xff\\x0e\\xc5Tq\\x14\\xcb\\xaa\\x9a8W\\xbd0z\\x85\\x96J\\xf1fl\\xe3\\xd8N\\xdei\\xc2\\xd6\\xd8\\xa3+~\\xf4\\xd8\\xfbjzi3&\\x1f\\xa8\\xe9ie\\xc2(=\\xb8\\x89\\xba$W\\x08\\xc4\\xdd\\xe3,\\xee\\x99\\x83(!\\x01TG\\x8b7\\xf2gy\\x08D\\x16*!\\xc5\\xb9\\xef\\xbc4\\xe8\\rN7\\xcb\\x89\\xd6\\xa4\\xfc\\xba\\xf2\\x1b\\xe9?\\x9a\\x14\\x06k\\xe4\\x88s\\xf0\\x88\\x0fL\\xabQ\\xb4^\\xbeg\\xe7\\xab\\xa66z\\xaa}\\xfc\\x1ei\\xe0\\x7f\\xb2\\xa6H\\x12U\\xce\\xd3\\xedh3D\\n:\\xa7\\xec\\xe7\\x8d:\\\\\\xd3\\x1e\\x8f\\xad\\xbe0d\\x9fO\\xeeV\\xc8\\x8f\\xbf\\xdac=\\xce9\\x93\\xf6\\xf5H\\x049W\\x87 \\xfd\\xb0\\x0b\\x1c\\xe7b*\\x8d\\xe4\\x8b\\xa0!\\xa0~\\xbc\\xc42a\\xbd\\xff\\xf8I\\x8d\\xa8\\xa9x\\x99F\\x85o\\xf9\\xc0\\xcbf\\xe7\\xaa:LX\\xe2\\xc5cT\\x03\\x00\\xf0\\x9c\\x90\\xb89\\xaf\\xfb\\xa4\\xc0\\xb4\\xaa&)\\xbb|Al\\xbf\\xf4\\x1cH\\x10$=\\xd3b\\x98\\x03$\\xf8\\x90kN\\x183L\\xe3\\x11\\xa4\\xf4,\\xa0\\x0b\\xba6\\xab\\xc9\\xe3\\x96P\\x06<ks\\xb0\\xb5}5\\x12\\x16\\x9c1@\\xe0\\xbd>\\xdf\\xd0];v\\xc7\\xe3\\xf4(\\x10\\xe4\\xb1\\x01\\xb2\\xc7]{Y\\xd4t\\x84<\\xc2\\xbe\\xb90\\x8d\\x14\\xfd^\\x1b7ol\\xf7\\xa2\\x1d\\xbdSX\\x95W\\xd8\\x9bEf\\n\\xeb\\xa6\\xb2\\xf0\\\'e\\x02\\xd0\\x8ex\\x0b\\xfb\\xc1}d\\x805\\xd6\\x15\\xf2\\x89\\xc21\\x8cnMY\\x99=RMA\\x89\\xf3wqr\\x89Y,\\xf7\\x97nY\\x82\\x154\\xa7\\x032\\x92\\x8f\\xc4b\\x88N\\xdc\\xac,m\\x19F!\\x16\\xa8\\xdaW\\x92\\xf22\\x0bC\\xc6\\x94[hM\\x06\\xffaaTSy\\xeeSh\\nRf\\xd6t\\xfa\\\\\\x8b\\xf32\\x84\\xfa\\xe7\\x8d\\xc1\\xd8\\x87\\xaf\\xf5\\x85\\n-30\\xcb\\x1d\\xd9e\\xef\\x89\\x9f\\xe9\\xa9\\xa0=\\t\\xe2\\x0e\\x95H\\t\\x1a\\x9d\\xf7\\xf5\\x92\\x9f.D\\xd9\\xda\\x8b\\xb6\\xdf+_Zh\\xeb\\x1e\\x12\\xc8\\xb5\\xe9\\xba\\xab\\xc0\\xdf\\x19By%\\x15\\xb8\\xf6\\xbc\\xe7\\xc7^\\xcd\\xea\\x9b\\x85\\xd8\\x0b]Q\\x01\\xa7\\\\d(\\xb6\\xb0Hs\\xa2\\xdda^\\xe9\\x9b\\xb7\\x92\\x93\\xde\\xcfF\\xbd\\xf7\\x11\\x98\\xf7O\\x9e\\x8c~B^Mh\\xc6\\xfc\\xa0\\x01\\x9a\\xb4*\\xf8_\\x89\\x9aHebZhbe}\\xa3h>N!\\x97\\x1a|v\\xf6M0ZG\\xa3>\\x90\\xc1$=\\xc5m,3\\xb2\\x05\\xe8:\\x83\\xd0*x\\xd0$9\\xb8g\\xe0\\xc1\\x81f`l\\xf0\\xd3\\xf9\\xd8\\x07\\xb3w\\x94\\xdf\\xe9\\xf4\\xd7\\x98Fe=\\xa7\\xae\\xbc\\xa3\\x06\\xf6\\x0b\\xae\\xb6\\xc1\\x95)\\x0c\\xd5\\x10_rL\\x1eL\\xfc\\x90S~\\x96\\xdc\\x1ce\\xc2F2\\xc1%M\\x19\\x1e\\x19E,Z[zZ\\xbb\\xbfT\\x16x/\\xec\\xd4F*\\x92\\xebs\\x12U\\xf3\\xb3\\x82o\\xb9\\x12o\\xd6\\xb3|cV\\xe9\\xa3\\xef\\x9c\\x95\\x1d\\xe7\\xb9j\\xbbK\\xc5t\\xa3\\xb1\\xb5\\xc2\\x1c\\xb3e\\xa2=\\xed1\\xa0\\xfd\\xd1>\\x1f\\xca\\xec\\x80\\x94\\tn#\\xaa,\\x93\\xe0\\xa7\\xe5\\x96f\\x81\\xafBJt\\xd2\\x06|<\\xf8X\\x9f\\xbe\\x13\\xc9q\\xd7J\\x83\\xf2\\x82\\xf9\\xf4+\\xd7\\xc7eG\\xf5\\xb2\\xb6g\\xdbW\\xfd\\x83\\x8a\\xfb>\\x8bv\\xb2\\xb6\\xde\\x18M=\\x0f8\\x15H\\x9f5\\n\\x97\\xd5y\\x02+M5*j\\xa7\\xfd\\xe8(\\x1c\\xfe\\x13:\\xd7\\x17au\\x81\\xf9\\xa4zU\\x97%\\xe2\\xc5g\\r\\x9c\\ri\\xb9\\xb64?\\xf3\\xf1z\\xf2\\x8ao\\x0b\\x13\\xc9p\\xe0\\xfb\\xef\\xdd\\x03\\xdev\\x12g\\xee\\xa1dm\\xc6V\\xe7w\\x8c4Q9\\xb3\\x1b\\xc4\\xf9zm\\xfd\\x03_ks\\x91\\x14\\xc7)%)f\\x14\\xf4\\xbb\\xdac\\xfd\\xae\\x824\\xf9\\xbc\\xe5v\\x9f\\x11\\x03\\xf6\\x14W\\xe6S\\xf3\\x03u\\xd7L\\x18a=\\xd2\\xdf;SJK\\xce2F\\xcf\\xbf\\xfa\\xed\\xa6D\\x90K\\x1fY\\xb8\\xbft_\\xaf\\xe5\\x9f\\x8f\\xda\\xe3y\\xbb4,52\\x17\\xf6\\xca\\x96_hv\\xf2DF\\xbc\\xd9N\\x87T2\\xe7\\xc6\\xeee\\xa0\\xd5\\\\\\xec\\xec\\x1b\\xc44\\xf9\\xb0\\xf6\\xa5\\xbc\\xfb\\x9c\\xb4\\x17\\xc8\\t\\xb7\\xe2\\\'J\\xa4sX\\xde[W\\t\\xa5\\x9eO\\xd0\\xd9\\xcdP\\xab\\xd6M"\\xc40\\xb6\\xc27&M\\x99}\\xb3g\\xdb\\\'H\\x85\\x98\\x93\\xe8\\x80\\xcb\\x8b\\x9f\\x9c\\xe3RS0\\x04\\xdd\\xd6Gf\\x08\\xd1\\xe9\\x83\\xdc\\x9e\\xdce\\x8e\\x90\\x1fB \\xa8\\xf9\\xb7\\r\\\\xI\\x06m\\xf5ze\\xf4\\xf7\\x80\\x98/\\xd7\\xfc\\xf8\\x90\\t]m9\\x0e\\xa9\\xa74m\\xc1\\xba\\xcdK\\x94\\xbdyq\\xc3\\xc3\\x8c\\xda\\x15\\x9fSZFU\\xbd\\x05\\x86\\xfcS\\x05\\x97\\xee>\\x14\\xd9\\x12H\\xec\\xccYM\\x80\\x9f\\xa2\\xb2\\xe4\\xfbxM\\xa98\\xf2\\xca\\xefOD;\\x82\\xd4*2}\\x8d\\xe3\\x0b\\xe1\\xfc~\\x85\\xb4o\\xb2V\\xb9\\xe8\\xce\\x0f\\nA\\x1b\\xe9\\xfa\\xd6\\xf9K5w\\x9c:\\xab\\xbe\\x19HM\\xee\\x95Q*\\xb0\\x85\\x95\\xb1\\xf7w\\xac\\x9c\\x9a-\\xce\\xe0X|\\xa3\\x95\\xb9Ei|\\x89\\xd5D\\x8a\\xfd+\\xbc?\\xbcW-\\xe9\\xb02Ke\\x12\\xf6\\xeb]\\xe6\\xfd1\\xb33Q`pE\\xda!\\x99\\xf4\\to\\xe2\\x0f\\x9af}\\xa0\\xdb\\x18B\\x96[\\xe9N\\xc7\\x87V\\xad\\xc3\\xb2\\xa8\\xae[\\xb5\\xd4\\xbc\\xa4\\xa1\\xe4Q~\\xb7\\xc9\\xed\\x0fM\\xbb\\xbf:\\x1b\\x80v\\x0e\\x1d\\n>\\x91\\xc9\\xcdVL|\\x95np\\x91\\x0b4U\\xcf\\x94\\xbb\\xda`\\x1d\\x84\\xcc\\xf7\\xfe\\x8a+\\xa5=\\x1a<\\xd8\\xc9\\xb2\\x9e\\x94\\xaa\\x84<`\\xca\\x0bB\\x99\\xcf\\xfe0\\xb9\\x1eYV\\xa8 `\\xbc\\xf4lW\\x0b\\x13&e\\x1e\\xcb,\\xdb\\xddO-\\xb4\\xde\\xe1\\x90\\\'\\xffh\\x8f\\xaf@:\\xd9\\xad\\xcb:\\xd8\\xba\\xfc\\xe3`ce~g\\xcafHQ\\xc9=j0)\\x0c\\xd9\\xd35G\\xd6\\xf7\\xc2\\x0eW\\\\\\x13%[\\xab\\xe5\\x16\\x8f\\xb2K\\xd1\\xfa\\xc2\\xd28neX\\xa0s\\xf9\\xc1K\\xd1\\xa9\\xcbis*\\xd7\\xb6}\\xd9O4x_\\xe9;\\x02\\xca#m\\xd3\\x88\\xda\\t\\xcc\\x93\\xf7\\xae\\xb15\\x179\\xde\\x12\\xe8u\\x82\\xeb\\xb5QC\\xcav$\\x0fvo\\x03\\xd4y\\xdd\\xc9=]\\r;@\\xcbf\\xb4\\xef\\xb3\\x13"H\\xd1~8\\xc9\\x07\\xa6\\\'&=O\\xdf\\x19\\x1c\\x9f\\x01\\xe7\\xcd\\xce\\xdc,;\\xb1\\xac&N\\xc9\\x1fxg\\x85$\\xe9\\x9f\\xd5\\xf2\\xb5\\xb1MDK\\xc6\\x9c\\x00\\xd9\\xbf5?\\xd1\\xa84\\xd3\\xc8\\x83\\t\\xb4|\\xd7\\xf52\\x9f\\x88l`\\xbe-K u\\xf0CF.dM~=zE\\xb1\\xdc\\xc0<\\xb5\\x12\\x17\\xf4\\xc8 #ye\\xc2\\x1c\\xa7B\\xd1\\xc7tz\\xcc\\xb3N.\\x97f\\xf7\\x11\\xc1y\\x9d\\xc4\\xa3\\xa6\\x899\\x9ck\\xba@\\xae\\xdf\\xd3\\x7fP\\xa6\\xa5{5\\xce^\\xfb\\xe9\\xc3s\\x00\\xab\\xd8\\xe3\\x1f\\xd0R\\x19\\xb2)\\xd3\\xe1\\xfe\\xce \\xb0E\\x15\\xd8\\x84\\x179F\\x98$\\ni\\xf2h!\\xf3\\x10\\x086M\\xafxL\\xc8\\xe1\\x05\\xfc\\x12AH\\x1fov\\xe5\\xc9\\x83j\\xf7\\xa2\\x82\\xcd\\x0b$\\xb3\\xe5!Q\\xe2\\xbb<\\xe1\\x0e}\\x05c\\xf4\\xc3\\xc6\\xc7\\x16I!w\\xd7\\xbcf\\xf9,\\xdb\\x14\\xa7\\x16\\xde\\x8aZ\\x9f\\\'\\xda\\x8f\\x87\\x8e\\r\\xac\\xc0\\xfc\\xe1\\xc3\\x92\\x0b:\\x1f\\xe6\\x85\\xae\\x7fx\\x9b)\\xfd\\xb5Y\\xd4\\x16\\xccy\\xf8\\xe5\\xd1\\x03\\x97\\xd5gf\\x8c\\x84\\xf2\\x93\\x8djdi\\n\\xf9=\\xb6t9\\\'\\xed\\x0co\\x99i]\\xdeG\\xa2\\xeb\\xf3\\n\\xa6f>@\\xac\\xc3\\x1e\\x12m\\x0e\\xabcBnKc\\x9dwi\\xb2\\xfc\\x1d\\xe4?\\x13`G\\x9b\\xc5K;xD\\xf7\\x8a\\xa0\\x94l\\x81q\\xcf"\\xc2\\xdbc\\xba\\r\\xb4J\\x99\\x86\\x00\\xf5\\xf7\\x0e\\xdf\\x86v\\xae\\xd5W\\xb5\\x90\\x12\\xca\\xba<\\xf1NG\\x9fo\\trR\\xd5\\\'\\xa9{\\x08u<x\\xf9Nm\\xf4\\x03\\x91\\x04\\xe9\\x1c\\x03oV\\x03\\x0f\\xd5\\xd6M\\xa0\\xab_\\xff\\xf2\\x9b\\xeb\\x037\\x89\\x11\\x19\\x994\\x98\\x8eT\\xb0\\xf5\\x05\\xf7\\x1e\\x88\\xef\\xa3\\x89~\\x10\\xd5\\xe9\\xf84P\\x97!i/cn;B\\x86\\xff\\xce\\x94Az\\xdec\\x9a\\x81 \\x1c\\x03\\x88\\xe5Sr6\\xa1\\x10}\\x05 )Xx],q&\\xbc\\x88\\xc6j\\x16\\xfe\\xd6@k\\xe2y=$\\xef\\x07\\xb9\\xf8c\\xe4A\\xb6\\x06\\xa0\\xb9\\xaa\\xc0\\xac\\x8e1\\xebm<\\xd5\\x17g\\x9ahz\\x91\\xfa\\x06\\xed\\xe7\\xb6\\xd6\\x83j\\xf7\\xf4\\xc8h\\xe4\\xe1\\x13\\t\\x017\\x1f\\xfb\\xed\\x84\\x1f\\xaeR,or\\x04kTc\\x13\\x92W*8]N\\x12\\x99\\xb6Lz\\x1d\\x97\\xeeAKp\\xb4s\\xc3\\x87\\xc8X\\xfb\\x9f\\xf1\\\\M\\xab\\xfc\\x91\\x99\\xc1\\x8ccB\\x00\\xb3\\x93+\\xac!\\x80\\xfb8\\xc1\\xc0\\xc3\\x9ef\\xf0\\x8a*g\\xdad\\x13O\\xea\\x9a\\xfc6#\\xbf\\xb8wm\\x94(K\\x863\\xc9w\\x92\\xea\\x17%\\xeen\\xb7\\x92\\xdf&\\x0c1ML\\xd1\\x0f\\xf9\\x9d^e|\\xbf\\x1c\\xba\\xb9\\xf0\\xae&_(\\x03\\xa7\\n\\xb1_\\xa6\\x8f\\xb8\\xf9q=\\xb9s\\xd3\\x82\\xfb`\\xd8\\xf0P\\x98d\\xcc\\x10\\xcd\\xe8}\\r\\xf0\\xd4[\\xc2\\xd7\\\'\\xfe\\xad\\x0fe_4\\x0c\\xa1\\xa6\\x93\\xaa\\xeb*u\\xae\\xd9j\\x19\\xc8NS\\x1b\\xa7*\\x12h{\\xfcl}\\x89/\\xdfh*\\xee=-\\xad\\xc6\\xbe\\x8b\\x9f\\x91Nx\\xd5a|\\xd9N\\xec<\\xfd\\xc7s\\x19/\\x8b\\xbe\\x92l\\xba\\xa2\\xe0\\xb8\\x19=\\x16\\xffa\\x1ee\\xa9\\x0c\\xecPF\\xe3\\xfd;Z\\xbcq/U\\xf4F\\xf5_^\\xc1\\x90\\x11\\xd3T\\x1ap\\r`\\xfat\\xcb\\xaea\\x9e\\x11\\x01\\xbe\\xe8%\\x99\\x02\\xc8)\\xac\\xa5\\xb3C\\xed\\xf9\\xa7t[n\\x93\\xee\\x95%\\xca\\xcfo(?i\\xa3\\xfc\\xd4\\xa4_\\x7fU\\xca9\\xfd\\xf1#\\x82!\\xbal\\x91%\\xee\\xe0\\xea\\xaaf\\ty\\xfc_\\x12\\n9\\x9d<)\\xb4\\xcc O\\x08{\\xb0\\x99\\xe5\\xf8d\\xf0P\\xa6\\xf2\\xa2rsNu\\x11L)\\xf0\\x1b\\xa3\\xab\\x86\\x85\\x0e\\xf3+\\xea\\xc4\\xe2\\xac.\\x90hs\\x1f\\xd9*It\\xfe\\x8fF\\xb3\\x03~\\x19\\x90\\x0f\\xaeE\\xbd[\\xb6\\xd5\\xaaw R.\\xa0\\x80\\x91>%N\\xc9\\xfb\\n\\x99\\xbc#\\xd2\\xda\\xf5:\\x8a\\xe6\\xa5\\x95q\\xba\\x98\\x8d\\xe8-q\\xc0\\xe7$\\xee\\xed\\xe2o\\x86/\\xdd\\x0e\\x97Za\\x0e\\xaf(Yb\\x89\\xa1\\r\\xeb\\x0b/K\\x8b\\xa7\\x84V=\\x817\\xaf\\xb1\\x06\\xa3j\\xb1:\\xe1\\xaf\\x1e\\xdc\\xcc\\x899\\xd5-`KW\\x8d?\\x9a%\\x99*\\x8cT\\xea\\xc9\\x19\\x9a\\xc0r\\xf9\\xbc\\x18\\x0c\\xcd\\x96\\xe07\\xf8\\xb9[\\xed\\xb2\\x9a\\x01\\x13\\x11P\\xcbp\\xcf\\xdb=1\\xfcV\\x80\\x9d\\xb2\\x191\\x12\\xec\\xa7\\xe9\\xef\\xec=:Q\\xf0\\xb3\\xa4\\x7fQ\\xb3\\xc5t\\\\sx\\x1b\\xdaPl\\xe6\\xa7\\xb2\\xb5\\xb7\\xd1k\\xe69\\xa7\\xb3eb\\x81vQ\\xa0/\\xaf*\\x19\\x13\\\\>\\xf4A]\\xb8\\x9d\\\'\\xae%\\xe9\\xf1*If!\\xbbY\\x8b\\xc7?\\x10D<\\xa5\\xb1\\x11\\x1f\\xa8\\xe7\\xda\\x18\\xb7\\nf\\xf5\\xcb*L\\xf82\\xd2\\xe7\\xb9a\\xba\\xa0\\x97+\\x82\\x8d\\rb\\xfe\\xf8e\\xd7\\xab\\x8c\\xfal\\x8b\\x14\\x19~~\\xe8KI\\x89\\xb8\\x9c\\xea$v\\x8d\\xa0j\\x94\\xcev\\x1d\\xbaR\\xf0\\xb1]\\xf1\\x86\\x89X\\xc7\\xa69y\\xedp\\xcb\\xe7\\x95\\x8cUJ\\x07\\xbf\\xcd/\\xb7<\\xbc\\xda\\x9f\\xbf/"\\x0f|\\xc5\\xda?\\xfb\\xca\\xbd\\x8c\\xbdM\\xa3\\xaf\\xaf\\xfa)\\xe7\\xad\\xd3z\\xaaE\\x0f\\xd6\\x0cA\\xa5(\\xe6Y\\xf9O\\xf6\\x8b\\xa6> C\\x81Wb\\xa1\\xad\\x1eF\\x9d\\x99&\\xe3\\xe7\\xef\\xce2[\\x8fb\\xb2j%\\xbb\\x1e\\xbd\\xc2\\x16\\xc4\\x06\\x1eF\\x9b>s7m\\xdfH\\xd0`\\xdd.\\xa9\\xd9\\xebi]bj\\x1e\\x99-\\xde6\\xaf\\xde\\xba\\x90)k\\xd6t`i\\x86\\xe6\\x98\\x94\\xb0\\x8b\\xab/,\\xe7\\x98\\x98\\xbd\\xb6\\xe9\\xb8\\x1b@\\x90"4\\xc2\\xb0`\\x97t\\x7fP\\x90\\x99aq\\xac\\xee\\xae\\xf8t\\x13\\xef7\\xf9\\xa1\\x9ap\\x9b\\xb3\\xc8\\xde\\x1f\\xf1)\\xfe\\x97\\xe7\\xf5\\xa4\\xdd\\xd36c\\x9al\\xee/8\\xe6\\x8b\\xabze\\x8fd\\xf2\\xe48\\xb9V~=K\\x1e~\\x101\\xcaU\\xb4\\xad\\x1d,\\xe5T\\xd3\\xe9\\x97d\\xac\\xce-\\x18\\xe6\\x9c\\xb0\\xaa\\x19G\\x01%\\xe9D\\xb8\\xa0&,Y\\x9d\\xde[\\xce.=Z\\xc0\\x96\\xe2\\xb8\\xe9\\xde\\x11\\xad\\xea\\xeb\\x87\\xe8.\\xa7~\\\'(\\xdc~a}\\xe3\\x07[/f\\x9eF\\x9e\\x8dS\\xe2\\xee\\x1a.3 TL\\x88{\\xfe\\xe0z$\\xd5c\\\\\\x98\\x9f\\x7f\\x82\\xc9]v\\xec@\\xd6H\\x9bV\\xe9Qm\\xf0;\\xbeo;\\x02{\\x87\\x1e\\x9c5\\xcf0i.\\xf2\\xfb\\xf0\\xed\\xf0\\x86\\x88\\xc6\\x9e\\xb3`\\xb0\\x9ef\\x92\\x91+\\xc1mK\\xcb\\xa7Q7\\xdd(,;\\xcc\\xd7\\xab\\xeav\\x1c\\xd8\\x047\\xdd}?\\x9b\\x96:6\\xc9\\xb2\\x86\\xd7\\x8fMI\\xe2\\xa4\\xca\\x12\\x88\\xc3\\xf3\\xf9eSn\\x81\\x9f\\xae\\xb2\\x88\\xb4o}\\xf0\\x17\\x12Q\\x16=%t\\x96\\x1b"\\xd8\\xca\\x193\\xa8\\xc6\\xb9\\xd9\\x11OZ\\x96\\xe5\\xcd\\xdd/\\xa8MRp\\xb9od\\x881tE\\xed\\xf2\\xc7.3g)K\\x0c\\x81\\x83B\\xc7\\xdfI\\x10\\x0bp\\\'\\n\\xd3t\\x8e\\x0f\\x8dii\\xad4\\xc9\\x05\\r\\xe8\\xb9\\x08\\xf6\\x10\\xfcL\\xa6l_\\xc3\\x88/}\\x06\\xa9\\xea+\\xa7\\xf0V\\xccp\\x10s&\\xeb\\xb3R\\xa8\\xa8\\xf7>\\xe4\\xaf\\xe4\\xaf\\xb6;\\xda.\\xf2v\\x87\\xae\\x1b\\xd8k8N\\xb9\\xa9Sn\\xca5\\n>4\\xcb\\x15\\xea\\xfd\\x18\\x0fZ\\xb5"\\xb6\\x19s\\xb1Bb\\xbe\\xb7\\r\\ng\\x19\\r\\xdcj\\x95\\xa5\\x0b^\\xa1\\x91q\\xef\\x8e\\xcf{{DZ"\\xfd\\x9c?y\\xc8O4\\xca\\xb2A77\\xb7\\xf2cY\\xe6\\xfc\\x10\\xb5\\xe6\\xc1A\\xd6\\x19\\xddKle\\x92\\x04_\\xe9%\\x8e&\\x8b\\xdb\\x02E\\xef\\xca,}\\x0c{\\xa6Z\\x9ah\\xc9\\x1a\\nE\\x176\\xb4\\xb7\\x14^\\\'8]\\xce\\xafM5A\\x04\\xdd\\xe6\\xcf\\x08{\\xaa_l\\xe7\\xeb|$\\xee\\x0f\\xbc\\xfc%\\x98\\xfd\\x92\\x15\\xa8sXb\\xfb\\xbb\\xd8\\xf3\\xa3l\\r\\xd6\\xe3\\xf0/D\\x13s;<\\xe2\\xf2\\xa4!\\x96\\xad{\\x9fr&\\x1el\\xe8\\xf4|\\xbc\\x875\\x8bt\\x11\\xff\\xae\\x8cm\\xb8m\\x9e\\xb3\\xad\\x0bi\\xef\\xf7)\\x1c\\xb5\\x98\\xf4\\x8f\\xb8A\\x87\\xcb\\xd7\\xde:\\xa5\\xe8*)\\xec].8\\xce\\x17B\\x975\\x91\\xc5W+k\\xe9u\\x98\\x0c\\x84Ff\\nR\\xfe\\x0f\\x841y\\x11\\nendstream\\nendobj\\n10 0 obj\\n<< /Filter /FlateDecode /Length1 1313 /Length2 6432 /Length3 0 /Length 7333 >>\\nstream\\nx\\x9c\\x8dw\\x05T\\x94\\xed\\xd66!\\xdd %\\x08\\x83\\xd29t\\x88 \\x8d\\xf40 R\\xe2\\xc0\\x0c0\\xc4\\x0c\\x0cC\\x83\\x80\\xd2\\xddHHJHw\\x97R\\xd2\\xdd"\\x1d\\x12\\x82\\x94\\x94\\xf2\\xa1\\xaf\\xef9\\xe7=\\xff\\xbf\\xd6\\xf7\\xadYk\\xe6\\xb9\\xf7\\xbe\\xae}\\xef\\xb8\\xf6\\xb3\\xd6\\xb0\\xb1\\xe8\\x80\\xf9\\xe4\\xa0Hs\\x982\\x12\\x81\\xe6\\x13\\xe4\\x07J\\x014\\xc1r\\x9a\\x82@\\x00\\x10(\\xcc\\x0f\\x04\\n\\x11\\xb2\\xb1\\xe9\\xc1\\xd1v\\xb0\\xbf\\xed\\x84lO`(\\\'8\\x12!\\xf5\\x1f\\x08\\x05\\x14\\x0c\\x82\\xbe\\xb1)B\\xd0\\xbf\\x80H\\x04@\\xcd\\xd9\\x0e (\\x0c\\x10\\x14\\x93\\x12\\x14\\x97\\x02\\x02\\x01B@\\xa0\\xe4\\xdf@$J\\n\\xa0\\x08q\\x81C\\x01\\x9a\\xfc\\x005$\\x02\\xe6D\\xc8\\xa6\\x80tpG\\xc1\\xad\\xac\\xd1R\\x80\\x7f=\\x028-\\xb8\\x00\\x82\\x92\\x92\\xe2\\xbc\\xbf\\xe9\\x009{\\x18\\nn\\x01A\\x004!hk\\x98\\xfd\\xcd\\x8d\\x16\\x10;\\x00\\x18i\\x01\\x87\\xa1\\xdd\\xff\\x11\\x82S\\xda\\x1a\\x8dv\\x90\\x12\\x10puu\\xe5\\x87\\xd8;\\xf1#QV2\\\\\\xbc\\x00W8\\xda\\x1a\\xa0\\x0bs\\x82\\xa1\\\\`P\\xc0\\xaf\\x92\\x01Z\\x10{\\xd8\\x9f\\xd2\\xf8\\t\\xd9\\x00z\\xd6p\\xa7\\xbf\\x1c`\\xa4%\\xda\\x15\\x82\\x82\\x01n\\x0cvp\\x0b\\x18\\xc2\\xe9\\x86\\xe2\\x8c\\x80\\xc2P\\x80\\x9b\\xdb\\x01\\xe0\\xc7\\x1a\\x00m\\x07\\x18\\xe2/\\xb0\\xc6_\\x00^\\xc0\\x9f\\xe6\\x00\\x04\\xf9\\x05\\xff\\x15\\xee\\x0f\\xfbW 8\\xe27\\x19ba\\x81\\xb4w\\x80 \\xdc\\xe1\\x08+\\x80%\\xdc\\x0e\\x06\\xd0V\\xd6\\xe0G\\xbb\\xa1y\\x01\\x10\\x04\\xf4\\x17\\x10b\\xe7\\x84\\xbc\\xe1C\\\\ p;\\x88\\xf9\\r\\xe0w\\xea\\x10\\x80\\xb2\\x1c\\x08\\x00\\xb9\\xa9\\xf0O}N\\x16(\\xb8\\x03\\xda\\x89\\xdf\\tn\\xf7\\xabF\\x81_an\\xda\\xac\\x84\\x80* \\xed\\xeda\\x08\\xb4\\x13\\xe1\\xaf\\xfc\\x14\\xe1(\\x98\\xc5M\\xdf\\xdd\\x05\\xfe\\x0c\\xd7\\x16\\x81tEx\\xfe}\\xb2\\x84#\\xa0\\x96\\xbf\\xca\\x80:;\\x08\\xe8#\\xe0\\x8e\\xce\\xb0\\xc7\\x8a\\x7f07&\\xc2\\x7f\\xdb\\xac`h\\x80(PXPRB\\x10\\x00s\\x04\\xc0\\xdc,\\xac\\x05~]\\xa0\\xe7\\xee\\x00\\xfb\\xed\\xfcm\\xbe\\xa9\\xc1\\xdb\\xd3\\x01\\xe9\\x00\\xb0\\xbc)\\x03\\xe6\\r\\xb7\\x84\\xdd\\xfc\\x10z:A\\\\`\\x004\\xca\\x19\\xe6\\xed\\xf9\\x9f\\x8e\\x7f\\x9e\\x08\\x05\\x05\\x01P\\xb8\\x05\\x1a`\\x0e\\xb3\\x82#\\x08\\xff\\x1d\\xfd\\xc6\\x0c\\xb3\\xfc\\xeb|3\\x7f\\x14\\xdc\\r`\\x0c\\xbc\\x91\\x9f \\x00\\xf8\\xeb\\xf3\\xaf\\\'\\xd3\\x1b\\x85A\\x91\\x08;\\xf7\\x7f\\xc3\\x7f\\x8fX@[\\t\\x04\\x02\\xab\\xf0\\xfc)\\xf9_Nyy\\xa4\\x1b\\xc0S\\x02\\xc0\\\'"v#WaaA\\x80\\xe0\\x8d\\xae\\x01\\xde\\xff\\x0c\\xa3\\x03\\x81\\xffI\\xe3?\\xa8\\x8f\\x11\\x96H\\x80\\xf8_\\xd9\\xde\\xb4\\xe9\\xef\\x8c]\\xfeH\\x80\\xf3\\xcf~p\\x01\\xfe\\x19K\\x0by#\\\\\\x18\\x80\\xf3\\xdf:7\\x01\\x8a\\x02-n\\xbe\\x04\\xff\\xcfj\\xffM\\xf9\\xff\\x89\\xfcW\\x94\\xffU\\xe7\\xff\\x9d\\x91\\xb2\\xb3\\x9d\\xddo?\\xe7_\\x80\\xff\\xc7\\x0f\\xb1\\x87\\xdb\\xb9\\xff\\x85Pr\\xb6\\x83\\xa1\\xfe\\x1b`\\x00\\xfbk_5aP\\xb8\\xb3\\xfd\\x7f{\\x1f\\xa3!7+ \\x87\\xb0\\xb2\\xfbW\\xfb\\xe0N\\xcap7\\x18T\\x07\\x8e\\xb6\\xb0\\xfeK%\\xbf\\xed\\xb0\\x1b\\xf1\\xff\\x93\\xab\\x84\\xb0@B\\x7fm\\x89\\x90\\xa8\\x18\\x00\\x82BA\\xdc\\t\\x817R\\x10\\x12\\x15\\x05x\\n\\xde\\xac\\x13\\x14\\xe6\\xf6[\\x85\\x00\\x01~\\x04\\x12}C\\x0188\\xa3\\xbd\\x01\\x96H\\x14\\xe1\\xaf\\x91\\x88\\x08\\x02\\x04n\\xba\\x87\\x82\\xdd\\x18`\\xbf\\\\\\x84\\xff\\x08o\\xe1\\x8cB\\xdd,\\xc9\\xef\\t\\xde\\xdc\\xfd\\xf7\\xf9\\xf7F\\xc2`n0\\x0b\\xc2\\xd9)\\xa4\\xc5\\x03\\x7f\\x9bJ\\xff\\xe6\\xb3r9\\x06W\\xbe\\xf5\\xa1\\x87\\xe3l\\xeb\\x06\\xaf\\xb9\\xf8<gQ-\\xce\\x17\\xa4x\\t\\\\ei/\\x17Q\\xa7r\\t\\xbd\\x1f\\xc8?\\xad*q\\x9e<\\x9ac\\xfe\\xe1\\xb9\\xd3P\\x8d\\x17\\xd4\\x18\\x07j\\xba\\xf4\\xba2\\x8b\\xd1\\x1d]o"\\x9c\\x19\\xa1\\xe9\\x1e~\\xbb#W\\xd5u\\x97\\x80\\x91O\\xef\\xd1\\x86\\xd7\\x0fG\\xaf\\\'~\\xb6\\xd8\\r\\x98mjl\\x99\\x8e\\xce\\x12\\xa4:\\xd9Tg\\xae\\x9d*nU]\\x85\\xf3\\x03\\x81S\\xeb\\xa0\\x8d21u\\xa2\\xab\\xc21\\xbe\\x08\\xfdp\\x13\\xbf\\xfc\\t\\xb6,\\xf37\\x93t\\xf7p\\xd1|w\\xf1\\xb9)\\x0f\\xdc\\xc8&NN\\xc7)3\\x86\\xaf\\x99\\xd5bx\\x08\\xbdw#\\x84s=\\x8d\\x96\\x84"\\xcf\\\'=\\x16\\x8a\\xf5\\x84\\x9c\\xda\\xe9Y\\xe9\\x8d\\xe8\\xeeb\\x9fP\\x0e\\x8c\\xb2{\\xcao%\\xaa\\xd1N{\\x16\\xe4~\\xea\\x9eq\\xabw\\xb2i&\\x9e\\xad\\x00\\xe4\\xcc&\\xbb\\x94l\\xbdJ\\xeeMr1\\x0f\\x0b\\x85%\\x18yE\\xee\\x93\\x84\\xaf`m\\xd6\\x8c\\xbc\\xc2$\\x91A\\r\\xaa`:\\x15\\xed}<\\xd3b\\x1b\\x82\\xca\\xa6-\\\\\\xa4\\xb5g_P\\x9aN\\xe2\\x13\\x89\\xa9\\xe5t\\x14\\x97\\rBY\\xf2\\xd4g\\xea\\x02\\xbaO[bI\\x8ak\\xd1@1\\xc7\\xb1\\xa0q\\xf7+\\xd8\\x8c\\xc2V\\xce\\x8c\\xbc/\\x17\\x96\\xa6\\x0bp|\\x8e\\xcf#:\\x86I\\xcaX-\\x9d\\xe1\\x12\\x10\\xd3k\\xd8\\xe6\\xc6\\xef|$+^\\x9e9\\xe9:\\xf7\\xb2\\\'\\xa9\\xe9\\xf4\\xc9\\x9bd\\x03\\x89^uo{ \\xd2\\xc7~u\\xdbj\\xe05yt8d\\x8c\\x99\\xfa\\x0e\\x11\\xd9\\x82\\xb6\\xde[\\xe2\\xd1\\x12\\xbc\\xaf\\xc8\\x04>%N\\xac\\xaaz\\x90P\\xa5\\x1cs\\x19v\\x89\\x99TP\\xb9\\xf9bV\\xcaQE\\xb0\\xe6:z)p\\x7fIX\\xa7hG\\x8a\\xca\\xe0\\xe7\\x11\\xb7F\\xd09\\xa6\\x14\\xdd\\xe0\\xd4]\\x90w\\x1d\\xf178\\x8fO\\x93\\xf1\\x80"G\\x0c\\x88\\x9d\\x83\\xb0\\x0b\\\'\\xf6\\x03\\xf8\\n\\xdf\\xcb\\xbf\\xad\\xa5T{\\xe0\\xe8N\\xee\\x8a\\r\\xc6\\xd7\\n\\xe3\\xbe\\xde\\x9de\\t!\\x9b~\\xa8\\x91J\\xfc\\xaa\\xe5#\\xc2\\x07\\x02X\\xb7\\xe9\\x17|\\xe8\\xee\\xb0v\\\\\\x03\\xcd\\x16\\xda\\xe5\\x98\\xc9\\xeb\\x8e\\x9b\\xc5\\xfb s\\xcc\\xb7\\x1f2\\x90\\xfa&\\x88\\xad\\xbfO\\x8d@\\xf1\\x17-;P(\\xcc\\xda\\x86\\xb1\\xbe\\x0f\\x93\\xf6\\x9b\\xe7\\x95/\\x06F\\xd1\\xaf\\x04\\xe7Zq\\xec~\\xfc\\xd2\\xa3\\xa3\\x03\\x97\\xb41\\xce\\xcb\\xf7\\xc5\\xcc"k\\x10\\x00\\xf5\\x83\\x04\\x02g\\xa2y\\xfc<\\xb0T\\xd7C\\r\\xefS\\xdc\\x1a\\xe7N\\xfb9\\x07\\x0e\\xd6%!\\xd3\\x94j%\\xe7\\xc2a\\xb4\\xb3\\xe6 \\\'e5\\x9d\\xf2\\xac\\t\\xdadO\\xf7\\x0b\\xdb\\xf6\\xba=\\xa2\\xd2\\xceAT\\xfc\\x86\\x8e\\x8e\\xe03\\x18\\xaf\\x1a\\x03\\x17)\\xfcM\\xb2q\\xb9\\x9e\\x15\\xfaHIqA.\\x8f\\xf6K>c_r7\\\'\\x98B\\xf3\\x9a\\x8f\\xfe\\x8c\\xf2[\\xca\\xc6\\x875\\xfa\\xe9\\x16\\x9d\\xfe\\x18\\xc3\\xef2J\\xda\\xec\\x9f\\xb80\\xe8\\x87\\x9e\\x11\\xe3L\\xf21\\x9f\\x96#O\\xc49\\xc5w\\xee\\x93Y\\x18\\xcf\\xf5\\x04\\\'\\xe4\\x9eW4\\xb3_[\\x1dM\\x98$\\xf6\\xfa\\xb1T\\x11<\\xac\\xd5\\x8ed\\xba0\\xb2\\xf9*\\x91\\x8e*\\xf2\\xa8m^!.\\x0bD\\x17\\xe4\\xbcR\\x16l\\xd0\\x92}m\\xb0GG\\xe1B\\xe6\\x10\\xa3<\\xc7\\x88-\\xce\\x8c\\\\,e)\\x8a\\xa2!\\xf8\\x81H%\\\\\\x18\\x1d\\xe8\\xfft_/ix\\x0b&rK\\xe2\\xc7\\xad\\xbc\\x18R,\\r\\x91\\x95:\\x91\\xc4\\x81Ud_:\\x0b.3\\x05\\xcf&\\x13\\x94\\xa6 \\xa1\\xa3\\x91\\xea~\\x0c\\xba6\\xcd\\x1d\\xf1cV\\xc4?_Y6i\\xd5R\\x02\\x7f\\x17}\\x0bw\\xf9\\xfdf;\\xa7\\x1e\\x98l4\\xde\\xc3\\x829+\\xf9\\x1c\\\\\\xcd:`uT\\x9b\\x9f\\xb3\\xa5~m\\x1c\\x93\\xaa\\xb9\\xc4\\xae\\xfd`=x\\x95\\x87\\xc3\\xe7Q\\xf3\\xd4!\\xcd\\xb5h$w\\x94\\xa2\\x10\\x8e\\x00j\\x88@\\xdd\\x83\\xe7\\xdb\\xa4\\x193u\\xe0\\xab\\xe3q\\x87;\\xd6\\x045\\xcfr\\x9e[\\xcf\\x0e\\xfe\\xfc\\xca]\\xc6D\\xfaqY\\xcbi~\\x18\\xb3;\\xe1q\\x15S\\xb0\\xec\\x93\\r\\xe7\\xbd\\x97\\xc1/\\xeep\\xf6\\xf8\\xc9et\\xec8\\x85wy\\xcc\\x1a\\xcb\\xecD\\xf1n|\\x07o\\xdc}I\\x021:\\xcaZ\\xd0\\xd6\\x16{<\\x8db\\xb2Y r\\xac \\xc8\\x97\\x19\\xaa\\xc3\\xbc\\xb6\\x8c\\xad\\x0fVYf}\\x85)T\\xec\\x1e\\xf9"\\x1bT\\xbe\\xa4\\xee3_\\xaf\\xbb\\xc4\\xf7\\xa5\\x89\\xcc\\x99\\xf3\\x9c\\xaf\\x8b\\xa9mM\\xea\\xb4\\x9a\\x90y\\x03\\xd3\\x05L\\xc0o\\x01h\\xac\\xdb\\xdfr\\xaf\\x8a\\xa3\\x9d\\xc5\\x07\\xfb\\xe2&gb\\xd0\\x0c5\\xb8\\xbc\\x97\\xa0\\x9f\\xf5\\xde7.?\\x8fo#\\x9f9!3i6\\xc0\\xff\\xc0\\xb8\\xa2\\x18\\x8ca\\x94\\xec\\xe9a\\x04=\\x1c\\x015`\\xcc\\xdaU\\x16\\xa2\\x82\\xbc|\\xb8\\x06\\xfc^\\x8b\\xa4LU\\xc1\\xa9\\x1b\\x83\\x9b\\xdf\\xab\\x88&\\x05\\xa9\\x8cK\\\'\\x86<\\xb5NT7.W\\xb3P\\xac 0\\xc1\\x11L\\xfd>\\xc6\\xa2\\xcc\\xff\\x1d\\xc78H\\x12\\xdbh\\x88[\\x91@\\tJb\\x8d\\xefZ\\x9e\\x1b\\x94\\xa2\\x1f\\xd9\\xae\\x83\\xcc\\xafb\\xf2v7J\\x01\\x02t\\x8cw\\xf5"Q\\x12a\\x84\\xdd\\xc2T\\xedQj\\x9a\\xe6\\xb2`.|\\xbb\\x0f\\xfb%\\x1e\\xebqB\\x01\\x8a\\x89\\x9e\\x14J\\n4\\x1f\\x88\\x87\\x1a:Z>\\xe1\\x9a[\\x8d\\xa2\\xca\\xc1\\x84&\\x9fi\\x93\\x82IcD\\xa8\\x1bjx\\xd7\\x06\\xf0n\\xb7-\\xbe\\xc4\\xf5wu\\x0e\\xb4\\xa2un\\xba_-\\xb9\\x8a\\xcd\\xa9\\x0e#Y\\x0b\\xc5\\xc3\\x95\\xc2qs\\x84sM\\x8c/\\xf9dM*\\xf7\\xd1<\\x93\\xaf\\xc3\\x8b9\\xd39r\\x83\\xf1\\x91Db#<\\xcb.\\xc3\\x94\\x156,\\xa6\\x9f\\xdf1\\x00\\xfb\\x8b\\xe6\\xff<\\xc6\\x08\\x04u$\\xfe\\x88\\x1d||W|I\\xa5*,mr\\x90+\\xd7\\x1d\\x13;V~-\\xa9N\\x05OH\\xcb5\\xca\\x98\\xd0\\x97Ud<M\\x03~\\x96aB\\xefwE\\xc0\\xdc\\xc1t\\xbe\\x94\\x13\\x92\\x11Y8\\xeb\\xedt\\xf1\\xb8\\x9b\\\'s! 0\\xe5\\xf9\\x0f\\xaa\\x80\\xf8\\x98k\\xa7\\xdcwW!djA\\x90i;^\\xc9\\x1c\\xd7&\\x02\\t\\xa9\\xb2\\xd4\\xdb\\xd5\\x19\\xd7\\x9e:dO\\x18\\xe4\\xeb\\xdf\\x16\\xd4\\xb4M\\xc5Q\\xf3\\xa2\\xe2.\\xd8\\xefb\\xfa\\\\\\xf2?37K\\x90\\xe9xn\\xf4\\xe0\\x18\\x14\\xa8\\x9b\\xf6\\x83\\xa4\\xf0*\\x82\\x16\\xcb\\xa6\\xfe\\x10\\xaf\\x92\\xf1\\x0eE\\xb9D\\xdbP\\xa8\\xa1\\xd4\\x1e\\xa9\\x04\\xc8\\x89\\x12uYqFx(6\\xf7m\\xa6\\xa8w\\xd3\\x08\\xf4\\xe1\\xcd\\x8ajN\\xbf\\xed\\x89N\\x90\\xe8QU\\xe6\\x03n\\x87\\x1d\\x95\\x99\\xd4\\xb3\\xe5\\xa6\\xa8\\xc3,DrrY\\x960/\\xaf\\n\\xfb\\xfc\\xfe\\xf1\\x18\\xb52FA\\x14c\\xe7\\xdcB\\x01\\xce^\\x9b;\\x81\\x99\\xb6!\\x95\\x08\\xa8\\xb4\\x92\\xfe\\xbc\\t\\xed\\xfe\\x89}5\\x9bO\\xc6\\xe9\\xd0\\xd8\\xef\\xc8xDn\\xc9\\x83\\xd5!U\\x7f?*o\\xa3\\xd8P\\xb3\\x81\\x8f\\x07\\x9b\\xee\\xea\\n1\\x0eM\\xc0\\xbb\\x0b\\xaeF\\x96\\x87\\x14\\xedli,\\xbf6S\\xadob\\xf3\\x15gJ}\\xc1\\xa9Xo0\\xbd\\xa25p\\xa5\\xe8k&@\\x10\\xf5\\x88\\xe5\\xb6<\\xedC\\xb05n\\xf6\\xbd\\x8f\\xab\\xedh\\xb2(\\xdf\\\\\\xb9\\x06N\\xd7\\xc1E\\xecw\\x13G\\xf6\\x19\\xb8&o\\xad\\xae\\xdf\\x14R=K\\xec\\xf3HjO\\xd6\\xfe\\x94R\\x1a ]\\xa2"\\x16\\xde\\x80*\\xc6\\xf8\\xa6\\x9a:J\\xa0m`f\\xe3 \\xa1\\xa2\\x8e\\xef}\\x08\\x9a\\n\\xe3\\x11\\xd7\\x92\\x8a\\x11\\xb8\\x84\\xe2\\xbbE\\xd4\\x90X\\xe5\\x8b\\xcc\\x7f\\xb2\\x92\\x00\\x99\\x17\\xc2\\xfaR\\x98\\x99\\xcb/t^\\xfc\\xb8u\\xb1\\xca\\x89\\xe5R`\\x94T\\xaf\\xdc\\x1dr\\xd9\\x96A\\xd7\\xcf\\xcec\\xa0g\\xff\\xd5CYq"\\xcb%r\\xcb\\xe7\\x01\\xdf;\\xd1\\x18\\xf5\\xcf\\x08q\\xaf9B\\xfcR\\xef\\xbel\\xa5\\xa8\\xfcp.o\\xe6\\x90^\\xedq\\xcbO\\x9a\\xd8\\x8c\\x07\\x1e$i\\xf4\\xd8;k$\\x8f\\xb3\\xbfs?\\xa2\\xf34\\x9a\\x16\\x84\\x98:\\xd4\\xc5\\xef\\xddz\\xadH\\xbf\\xf7\\xe1\\xec\\xdd\\xe7\\x87a\\xd4\\x14ob[\\xf4?\\xde\\x87\\x8e\\x9b\\xc8\\xbeb;l\\x85\\x18\\x1cJgF<\\xf3\\xd0\\x02mEI\\xbfG\\x10{\\xd2\\r\\x9a\\xe2\\xc275\\x98\\xd69\\x19Z\\x82w\\xbf\\xba\\x15\\xfa\\xb5\\xb5\\xa1\\x80\\xc3k?q\\x01E\\x99\\xbbf\\xe6\\x98\\x01Nv\\xde:\\xaa\\x97?R\\xec~|%N\\xcca^\\xf0\\xaf\\xb1rx\\xa7\\\'\\\'Y[!A\\xd1\\x96\\xd9\\xb4\\x1f\\xe6\\xb9\\xa8\\x89sa\\xe6\\xbe\\x0cx\\x18`\\x9b\\x044\\x8f\\xe6\\x19IA\\xe6t\\xce\\xdb]\\r\\xd8\\xecC\\xf1\\x99}\\xb5\\x8a\\x96\\x8e8\\x803\\xbb\\xac\\xbdO\\xa4le\\x9e3l\\xaeG\\xc8\\xaa\\x9f\\xf0<\\x14\\xa6\\x82M\\xe4\\x02(\\n-p\\x02\\x08\\x91\\x81}\\x93\\\'\\xeer\\xed4\\xd1\\x0fe\\xac\\xf8\\x1bJ\\x8f\\x7f\\xc8\\xa0\\xc3\\xf2\\xb9\\xf9\\xdeE\\xea\\xea\\xb7\\xd6\\x0c\\x89\\xb4o\\xa8Z\\x07\\xdf9\\xaf\\xb2Mg\\xc1 \\xa8\\x1c\\xd4\\x0e\\xb8\\xe5\\xc2x[\\x95wfi\\xe4\\x8c\\xb9\\x1b+\\xc7\\x81\\xa1\\xc77\\x82\\xd4\\xb0\\xa6"\\xdfR\\x9f\\x99\\x16\\xaf\\xd4r\\x81\\x8bP/\\xf6\\xa5X3\\x85\\xf6[[?g>\\xd9\\xf1`\\xce\\xb1\\x10\\\'#\\xd1Z+\\x1aI4e}U\\x9c\\xd5il/\\xafy{\\xbe\\xc4\\xa5N\\xdd\\xdc]\\xbf\\xed\\x8a,k\\xcbo\\x86\\x8bS\\xccg\\xd9\\xc9M\\x17\\x89[{\\xaeYu\\x89\\xe19#\\x92\\x95G\\xa6\\x1dw\\x88af\\xc2\\x07\\x1bM_\\xc2\\xc9\\x98\\x9b>_\\xf5\\xd5:C\\xddZ#(3\\x84\\xcb+\\xc9)\\x9e\\x06c\\xbb\\xcez\\xc1w\\x07\\xba\\x01#\\xcaQ\\xc2Ji\\xfa\\x8c_\\x87\\xc4\\xbc/v\\xf0;\\xc8)\\x83\\xdc\\xb9\\xd4N\\x0c\\xe2\\x01I\\x8f\\x13.\\x98uG|\\xfc\\x13b\\xa5\\xf5M\\xe0e\\xd7\\xcc<"\\xdf \\x9bR\\xad\\xfb\\xd7\\xc7\\x90\\xbcH\\xf9\\x15~\\xe1L\\xa0\\xff\\xc5\\x97\\x1d\\xfbg\\xb5^O\\xc2\\xaa2\\x15\\x88ONg\\x11\\x9d#\\xc6{D\\xaf\\x05\\x11\\x0b\\x182\\xcd\\xa5G(\\x85\\x00\\xad\\xd6\\xfau\\xe5\\x8f\\x90\\xf9\\xfc\\xb5\\xcaG\\x95(y\\x96\\x8d\\x19\\x1f\\x00\\xf0\\xb4\\x0c+\\x13\\xf7\\xc2\\x0f\\xa7N@o]\\xc8]\\xa8\\xf9\\x1bk\\xcbx\\x94\\xfd3{\\xb2\\x92\\xcf\\x07N1\\x96XQ\\x87+\\xa0y\\x12\\x87>\\x0c\\xa8\\x94\\xda\\xa3\\x18\\xc7\\x13\\xa7\\x98N\\xdb\\xba3\\x89\\xfb\\xa7\\xb3\\xdfZ\\xdc\\xf2\\xf4\\x1f\\xa4\\xb0\\x8b\\xe8\\x16\\x93\\x1c\\xef\\x86\\xc0u\\x8a\\x80\\xe2R\\xc5\\x18\\xbbxo\\x99\\xd9\\xb3\\xbdS\\x9d\\xb5\\xb6s\\xb52ZTW\\x12g\\xa4x\\xc0\\xc4\\x8aY\\xab\\xbar4Y\\xfa\\xbaHv\\xc9\\xf9\\xab\\xd3,\\x92\\xeb\\xe0N\\xffM\\xb4m\\xb94\\xca\\x07\\xf7\\xe2\\xab\\xe1\\xd4\\xe9\\xbd\\xc2\\xa8:\\x17\\x85c\\xf7\\xd2N\\xc5u\\xf1 \\x1dc\\xc5;\\x94\\x98\\x1ba\\xa5\\x84c\\x1d-M\\xcaXdViL\\x9ba$<\\xab\\xd5\\xa1C\\xd1\\x1f\\x1c\\xf2D\\xb6\\x86\\x9cS\\x97\\xfd\\xf1/\\x85\\x0e\\x14\\xe5\\x03-\\xd3M\\\'8\\xf2:\\xd1vx-\\xd5ALGR\\xc3\\x82\\xbb\\xd3\\xb8\\xab2\\x81\\xba@\\xf91\\x0b\\xaf\\xae\\x8e\\x8c\\x9d\\xb7\\xdc\\xa7o\\x93\\x0f/\\xe2\\xa4*\\xc9z\\xef\\xe1\\x7f\\x98|\\x10\\xa2\\\\~\\xb1L0\\x96\\xb2\\x1dZKH6\\x90*\\x10\\x12L\\xb8\\xd1\\xa5\\xf7\\xc9\\x81\\x1b\\xd7\\xb2\\r\\xabr\\xd3!\\xc8KK\\xf7)]\\xd8g|5IZY\\xe2`\\x02\\xd3\\x03\\xa1`\\xdd\\xaeJe:l\\xbd\\x81\\x91\\x92\\x8do\\x9b%\\xac</\\x8fX\\x98Kl\\x99\\xf7\\xa8\\x88#\\x02k\\xab6\\xa35b\\x87\\x1e\\xba\\x9f\\xd1\\xf2\\xf2\\xd9\\x08aMX\\xb7\\xe0\\xe09L\\xd6\\x8c\\x06\\x8b\\xe9K\\xe5\\x88+\\x07n\\x1fs\\xc8%Cw\\x12N\\xea&\\x86W\\x12.\\xe0\\x10\\xba\\xfd\\xa6L\\xa3\\xe9d\\x8c\\x06\\xade\\xef$\\xe0\\x90\\xf9\\xe7\\xa4\\xe5\\xdb\\xc6\\xae\\xe9\\x9f\\x0b\\x9f\\xe4\\xee5\\xa9\\xa2\\x8fC\\xabL\\x82\\xc8\\xbe\\x9a\\xb2\\xa9\\xa6d\\x86lwl\\xbfpnI{\\xc5a\\xe6)\\x95\\xfa!\\xa3>\\x96\\xc2w[\\xe1A\\xbc\\xd5\\xb8m@\\\'\\x0b\\x80in6U\\xdc6\\x06\\xce\\xa4\\xbb\\x13\\xb2~k\\xd16\\xb2@F\\x16N\\xb0@\\xc2%\\xc1Fw\\xc1\\xa1\\xfb\\x1e\\xc4%\\xe4Q*D\\xa5NBr\\xf1\\xd6F\\x17\\xfcf\\xcd>w\\xc9\\xb7\\x86$G~\\xcd\\x91os(\\xbe\\x99\\x04\\xf7g\\x9a\\xa5\\x01\\xcds\\xd5\\x07?\\xe6\\x08\\xa6\\xb8\\x8d4&2\\xd0&\\xcf\\x1e\\xdbZ\\xe9-\\xd1\\x1ah\\x06\\xd5\\xb9\\xe0\\xf71j\\n\\xe4\\xecF\\x8d\\xce\\xd3\\xc9\\xed\\x1bT\\xc5\\x04x\\xab\\\\B\\xce^\\nZ\\xed\\x07i*\\x19\\x9c\\xec\\xc1Y\\\'C\\x93\\xc6\\x89s\\xd2\\xf5\\x10\\x0bR\\xe5|\\xcd-\\xf9\\xfd\\x8c~N\\xaejR\\xbb\\x13W\\x8c\\x94u\\xc3U\\xc2\\x991[\\xf0dqV\\x8b\\xe0\\xb3I\\xbb\\xcf\\xc6v\\x890_\\xe9\\x91\\xc8\\xdd\\x90\\x8d\\x1fsV^v5/\\xb94\\xfd\\x89\\x94\\\'u\\x1eM\\x973\\xfa\\xcdJ\\x94\\xd6\\x84\\xbcc\\xac\\x9eU\\x035\\xd4\\xfat\\n\\x84%\\xa9\\xd1\\xe3\\xafB\\xc9\\x0eHe\\xcb\\xfd\\x0c\\x96\\x8a\\xd8\\xe2\\xca>Fq\\xcb\\xeb\\x8bN(\\xba\\xbb\\xdd^,.\\xb5\\x1bj<\\x998s\\xa38q\\xe6\\xa6\\xf9\\xd4\\xc3\\t\\x0bLr"!\\x93\\xd8S\\x10\\xa5(S\\xb6\\x92"\\xeau\\xa8\\xe8\\xa4\\xf9)\\xab\\xfa\\xaa\\xa8@#\\xfadSX$u\\xb1J\\xfb\\xf0\\xa9B\\xfb\\xa7l\\xf4-Z\\xc5\\x90\\xe1\\xc1J\\x8e)Z?]\\x95\\x95\\x8d\\xea[\\xb1\\x94o\\xdf\\xe0`>\\x94\\xb2dq7\\x04\\xc2K\\x8c\\xb1\\xe4:p\\x18\\x07\\x0ejL\\xc7\\xab\\x1d\\xc1\\x98\\xe5UD\\xe0\\x14\\x84\\x87\\x18A*\\xd7\\xe5\\xd7\\x1as\\xe0@\\x9e\\xa9w\\xf7\\xfbI\\xff\\x97\\x85>\\xeb\\x9cq\\xe1\\xad\\xa2\\x9bA:2\\xc9R\\xca\\xea\\xb9L\\x10R5F7\\xa2\\xd2`\\x0c\\xdb\\xa4\\x99M\\xafd*\\\\\\xf2\\xfe\\x81^Z\\xdf\\x9c\\x82\\x91\\xe0\\xe9\\xfd\\xb2~\\xbf\\x97\\xb9\\xabCTu*\\x8a\\xc3\\xe1kd\\xf9L\\xf7\\xd7\\xc3\\x04B\\xe2w\\xc5\\xf2\\xbb$\\x06\\xc9\\x13\\xf9\\xb3\\xabW\\xa4g\\xac2\\xac\\xb7V\\xe7\\x1dII\\xa2V>\\xc2\\xe2\\x9a\\xa8"\\xa7\\xc9\\xdf.5\\x0bY\\xdef\\x1a\\xfe\\x00\\xaa\\x9d\\xb8L\\xc4\\x06g\\x90\\xfd\\x04Q\\xc1/\\xd7q\\x1eV\\xad\\xb1X\\xbf\\xb8\\x1c\\xb0\\t\\x13>\\x11\\x89 2\\x19\\x16~\\xbf\\xbd\\x10,G:?\\xa02\\x9a\\x0f\\x97\\xb6\\xf7/\\xe6\\xb4\\x8a;\\x02;\\x95\\xb4_\\x88\\xb0n\\xbf\\xad\\x99zww(\\xf2!k\\x94\\x94\\xd7g\\xb5\\xeaJ0\\x04h\\xaf]]<\\x02\\xdax\\x9e\\xf4\\xb1\\xa7\\x8b \\xb66\\xc5"\\x15\\xcd\\xd6\\x12\\x7f<yo\\x93\\x0c\\xc7\\xe8q\\xda\\xa6\\xe8\\xf02\\x98\\xbc\\xc7\\xe5n?\\x8c\\t\\xd7$Wn\\xed\\x9c\\xb8j\\x11\\xc7\\x84-\\xfe\\xe7\\x82\\xbd\\xed\\t\\x86\\x8ey\\x92\\xaf\\xf5\\x1b\\x1a\\xd33\\xdf%\\xe8\\xb3\\xaaPc\\xb6-\\xd1\\x83L\\xac\\xf0m~\\x0e\\x8d\\xd7y\\x03\\xe5\\x1e^\\xc8;8_N/.\\x80\\x01*\\x10\\xdeLv\\x03\\x9d\\xf5\\x0fy\\xe0}\\x86c\\xf7x\\xec@\\xfcP\\xda\\x13\\xc7\\x9dP\\x16~#\\xf6\\xa2t\\x9c|"\\\'s\\x90\\x9b\\xc3\\xa7\\x00\\xb9/\\xfaNX\\\\d\\xba\\xb6\\xc1\\x0fh"\\xa77 \\xa0od\\xc5\\xf6o\\xd1\\xb8+\\xc0\\xde%\\x0f>C(\\xef\\x9b3\\xfe\\xd6\\xd3R\\x01\\xd3\\x90+%\\xb5R\\xe2\\xd1\\xd6S\\xc7\\x00<\\x95\\xc4\\xb9S\\xa5b\\xcf\\rj\\x12\\x02\\xe2\\x0b\\x8a)\\xa5\\xbbE*\\xd2B\\x9aw\\xd7Y\\xd7/\\xed\\x8b\\xcd\\x88\\xbe\\x18\\xbc7S\\xd5\\xef\\xf9\\xc8O?\\x9cZW\\xa7\\x9f\\xe5\\x1d\\x91\\x8dO^\\x16%\\x1c\\xedg\\x03\\x8c\\x03\\xb5\\xec\\xbb\\xe90\\xe7\\x91\\xd2\\xcfT#\\x18\\xc4qvY\\xe5\\x84z\\x172:\\xd6\\x96bl\\x08\\x95\\xa8\\x1b\\r;O\\xf9\\xc6\\xe3\\xbf\\x9aR\\xcd|+m-\\xbcg\\x1f\\x93\\xed\\xc4\\x1a6\\x14\\xbb\\xad\\x11\\xe6\\xe046r\\x8f\\x15\\xddS\\xf4\\xfa\\xbc-:Bg\\xd9\\x9a\\\'O\\xad\\xba\\xb56\\xee\\xfd\\xf6ekmX\\x1c\\xf6\\x04\\x83\\r\\xc1\\xbaqI\\x98\\x99\\xf1X8\\xb7\\xf8l\\x9f\\\'\\xd1\\x96\\x17,\\xfc\\x84\\xb0q(*5\\xa0k\\xa3\\x8dZ-"\\xc6\\x1fQ\\x9c\\xf8\\x8c\\x8d-A\\xe6AHmL\\xec\\x87\\x12&\\xb3R!\\x0c\\xd0v\\x84\\xc7x\\xb8\\xb3K@\\x01BV\\xbe\\xab\\x9b\\x9b\\x0b\\xf3\\x9d\\x90F\\xde;\\xdc\\xd1\\x1fF\\x1d\\xc2\\xad\\xf0{T\\x91\\x8ex\\xc6f\\x10\\xb6\\xc9B\\xc1\\xe3\\x9a\\xcc7oLg\\xb3\\xb6\\x13X\\x80\\xd8\\x12\\x91<9\\xe9\\xe9&\\xe2oA\\xb4\\x05\\x07\\xdcw\\xf1%\\t\\xa2;0WWD=\\x1aj\\xf8\\x89\\x0cN\\xa8\\xb4\\xdcP\\x97\\x06\\x8f%E\\\'\\xcb\\xda\\xaep\\xd0\\xe7\\xd7\\xce\\xd2\\x18T\\t\\x0cc\\xed\\xde\\xe6l\\x0e\\x0f\\x7f\\xbc\\x88\\xea\\xc7\\x9d\\x16j\\xf0\\xff\\xfc\\xc8\\x1a\\xda+\\xb5}\\x1d\\xddw^\\xcc\\x1c\\x87\\x9d\\xdc\\x1a\\xfaXU\\x9c\\xbb\\xed}A\\x07\\x96\\xa2\\x1e\\xa5\\x00\\x9f\\xda\\xfeP\\xea\\xf5\\xbb7\\xfc\\x85\\x993\\xa0\\xb8u|k>\\x8e-q?\\xdb\\xce\\x88g\\x81\\x99\\x04O\\xa67|F\\xd2\\x03\\xc9\\xa7/e_\\x90\\x16\\xc5\\xde7\\xdd\\xc6#\\xd9\\x7f\\xe8\\xf4J\\xba\\xc4\\xe9P\\x01\\xb3\\x007w\\t\\x98\\x17\\t\\xd5\\xabB>g\\xb1\\xb8\\xaar\\xdaO\\xba\\xf7\\x9d\\xaeF&~\\xede\\x90\\xc6L\\xa4\\x97\\xc9yzG\\x9a\\xd0\\x05\\xb6\\x02\\xbb\\xbc\\xebE\\xfd\\x17\\x12\\xad5\\x04\\xd6\\xf4F\\xb8\\x80T?6\\xbb\\xcf\\xc79\\x1d\\xed\\xce\\x89\\x97\\xe7xKG\\xcb\\x8bI-m\\xdaS\\xbck!"6c\\xdf\\xf4Z\\\'\\x05\\xc9^Q\\xa6\\xc1B\\xbf\\x81\\x06\\xb1\\xd3MU\\x90\\xd8\\x8fR\\xcc\\xde\\x0eM\\x04\\xe2\\xdf\\x1e\\x1d\\xc2\\x1b\\xb4\\xe9\\xe9\\xb5\\xadh.\\xcaSPo\\xfb\\xc4\\x8dAS\\x80\\xb2\\x8b\\xeb\\xbc\\xff\\xa5\\xa3_\\xb5\\xaa\\xdfv\\x94\\xfa\\xc2\\xec\\xd6\\xcfdr\\xb5o\\xc5\\xe6\\x9f\\xf0\\x1a%\\x19\\xc3\\\'\\xf4(\\x1d\\x87M\\xe7\\xab\\xd6\\x93hq\\xfa\\xc9\\x064\\xf4\\xee1p\\xbc&\\x9d/\\x9b\\x9b\\x9fxy\\\\\\xeagC\\x1f\\xc2}\\x16a\\xff`\\xf1\\x9c\\x08\\xb2Y6\\x86\\x93?!\\xe2L\\x95\\xf0\\xb4up\\x80\\xb4\\xa8\\xfc\\xe3C\\x02\\xc4\\x83\\xc1a\\x82\\x88\\xcd\\xdc\\x0e\\xcc\\x91\\xb4\\x80\\x85\\xa7Y^\\xed\\xe3f\\x85\\xf4\\x06O\\xe6\\xbc\\xcb^Na\\x99\\xe5\\xa9\\xde\\xae\\xa0t\\xa3\\xd8\\xafx\\x00l\\xde\\xca\\x96a\\x91\\xe5>\\xf3\\x15\\x92S\\xd3d\\xdd\\xda\\x9f\\x0f\\xb5K\\xb2ec@\\xca\\xa3\\x07\\xc4\\x19\\xee!\\xe8*?+\\xd9\\x8f\\xfb\\x97e\\xfb\\xf0r\\xabh\\xf6\\xa0\\x1fh\\xf8\\x86\\xb4"\\xa9\\xe5\\x8d\\x03=\\xed\\x02\\x03\\x15\\xa2]5\\xa0\\x8d\\xe6\\x08[\\xa8\\xe0\\xb9\\x9a\\x81\\x1c\\xb1Q\\x89O\\xe3\\xc5\\xed\\x99w&\\x1a\\xf1\\xe7\\xd1-\\xf5m\\xb0\\xcc\\xf6\\x89g\\xa5\\xd8\\xf7K5\\xc0\\x98R_Y\\x8bQO??\\t\\xa9]\\xbd\\xfdu(\\x11\\x9fRi\\x1b\\xed\\xa2\\x12\\x1b/W\\xaaH\\xd1\\xafb\\x1b\\x1f\\x7f\\x1f\\xf9%%\\x9b\\x99\\xbf\\xda\\xc6e\\xd8h\\xb5\\x86{\\xfe\\x99\\x08I|\\xa5\\xa8f\\xe5H\\x05{\\xa0\\xfa\\x99~\\x80V\\xd3\\xe7h\\xed\\xeb\\xb4\\xd8\\xb0\\xe5\\x86m\\\\6\\x99A\\xe7\\x1dv\\xf4r\\xf0\\x9a\\xb5\\x89\\x92K\\xc8\\xe7\\x89\\x02!y~\\x87\\xd4\\x83!w\\x86\\x84\\xce\\xfd\\x8ex\\xe8\\xc7\\x90\\x1e\\xec1\\xc8\\x13\\xf7\\xf1\\xe9\\xe7\\xd6Qm.z&\\x05\\xbb.\\x83\\x1d\\x188k~\\x12\\xae\\xc9\\xad\\xea\\xfdR\\xd8\\xc1Es\\x19\\xd2f\\xcd\\x08\\t\\xac\\x99/\\xc5dc"S\\x8ad\\xdbV%\\xa9\\x0fYB3\\xf2\\xda\\xd2\\xc9\\xcf\\x1d\\xe8\\x0c\\xd7\\xa7\\x8fvqm\\x9d\\x85\\xdaM\\xda[-%\\xfcH\\xea0\\xdelj\\xb3\\x1a6\\xe1\\x8d\\xf6\\xd4\\x01\\xdc\\x12>\\xe6\\x069Pqf&Ob\\x077\\x9e3\\x0c(v\\xc7\\xe7[\\xec|\\x0en\\xa02Sb;;\\xb4B\\x10\\xb7\\x17\\xda:ZHZ\\xd0\\\'S\\xb7b:{\\xcf-\\x1cD\\xd1\\xde\\x19\\xbeo\\xdemz9/\\xe2z\\xcb\\xa1K\\xcf\\x85\\xf3D\\xba\\xbcW[%\\x83\\x18R`\\x85:\\x89\\x19z\\x84i\\xb4M\\xb8\\xc1\\x89\\xa5\\xe8\\x14\\xea\\xd8$\\x99\\xd1\\xe1\\xec\\xf5\\x1c\\xcc#\\xe73\\xe3\\xaf\\x12\\x98\\x1c\\x00S\\xc6m\\x90\\x1d\\xce\\x08\\x17\\x17:a\\xa0\\xde/J\\xe9\\x1c\\x1dW\\xfe\\xd9htI\\xe4s `\\xd2\\xbd{\\x94,\\xf7\\xddg\\xb4\\xb0\\x9a%%\\xf5\\xa3G\\xfd\\xc6\\x96\\x07\\xa5\\xb0\\xc0}\\x07\\xba\\xd1\\x01\\xa7\\xf8\\xe9l\\x12\\x85\\xef\\xdf\\xc8M\\x06D\\xc3s|\\x15\\xb1\\xb9\\x02\\xd7\\xe5\\x1f\\x17\\xe3R\\t\\xa1\\xe77\\xbb\\xcaSj\\xfc\\x1c\\xd4\\xd3\\xa3]\\xfaw\\x823\\xac\\x18\\x93E\\xd0\\xc6\\xd7\\xb7k<P\\xa2nL\\x11\\x93\\xe9\\x98\\x99^\\xf8\\xd6\\xc4J\\xed\\x95i\\xfa\\xe1\\xdb\\xc8\\xfb\\\'\\xc1q\\x1en\\xa4o0\\xe9c\\xf9\\xfb\\x94\\x82{\\x7fr\\x0b\\x89\\xed\\xd5~\\x0fj\\xaep\\xba\\x97\\xe0\\xd3\\xf4\\n\\xa7>$\\xc1\\x87\\xd9\\xf7U\\x80\\xe0\\xa7\\xc3\\x18\\xed\\x18\\xcf\\x08\\x83\\xf4\\x84\\xb1g\\x1c\\xea\\xe6\\xd5\\xaf<\\xaf\\x16\\xf9\\x89I\\xab\\xe6S\\x0cy\\xdf\\xdc\\xc3\\xa9\\xca_\\xad\\xb1I\\xcfE|\\xb7\\xac\\n\\x8e\\xca5\\x82\\xdbv@\\xc7\\xb9\\r\\x8a\\xcf\\xe5L\\xbcU\\xed\\x14\\xc1\\x83{Lg\\xdfw\\xc6\\xb8\\x8e8\\xdb\\x9f\\xcf\\x93\\x7f)P\\x97\\x0f\\xfa| \\x06\\xeb\\\\\\xb1\\x9b\\xd0\\xa3\\xeds\\xdc\\xe7C\\xf3\\x81q\\xdf\\x13\\xd5\\x86\\x074\\xc8TS\\xcc\\x1dFM\\xcc\\xcbj\\x85Z\\x86K\\x0f\\x19\\x11\\x8bY\\xbbj\\x96>\\xa4Q\\xf5\\xb7\\xe6J\\xd0\\xda\\xbb\\x93=\\x10\\t{\\xb4\\xd2KVO\\xaen\\xeb\\n\\x83\\xbb\\xce\\x9c\\xe2\\x99\\xe5\\xdfzan\\xd4\\xc8\\xe6\\xe8\\x8e\\xd5\\xed\\x12w\\xa2a;a\\x13\\xc46\\xe8\\x15\\x1cy\\x8f\\xa0-B\\x98`\\xd3<\\xbdG\\xd9Z\\xeb.<\\x1bu\\xea\\xd7w\\x8f&\\x11\\xfd\\xf8\\xa9\\x95}\\xf1\\xdd\\x9a\\xf4Q\\xfe\\xf0\\x06\\x86-\\xf3W\\x86\\x0c*^\\x8e\\xae\\xfd\\xd5w[\\\'3s\\xdf!\\x9e\\x10Gs~<c_\\xc5ouQP(\\x02P\\x15<\\xd5_\\xbcc\\x12`\\xd7\\xdb\\xab\\xcdZ\\xdb[\\x16\\xa0\\x9es\\xcb\\xfc\\xfa\\xb2\\xae\\x85n\\x8a8/\\x98W[\\xbf3\\x89R\\xdd^+\\x90,\\x91t\\xc6V\\xb4>*\\x81eA<\\xff\\xdc9\\xeb\\xee\\xad\\x9e]\\x03\\x02<B\\xc2(\\xae \\xea\\xf2ET\\xb16j\\xd7\\xc6\\xb6\\xa7\\x9c\\x7f*S\\x97,x\\xae\\x90\\x80\\x1a\\xb4\\xf7j7\\\\3\\xd4:L&\\x1b\\x12\\\\\\xb0--\\xc9Qr\\xef\\xfdAi\\x85\\xd2x\\x1fe"\\x98\\xc4\\xbb\\xe6\\xf6\\xe3\\x1f\\x88\\xc6C\\xf9\\x1d\\xfc\\xe7\\xdc\\xf6@\\x11\\xecu\\xfa\\xf0\\xeeN\\x9a\\x14\\xa3\\x8fM\\xbc\\xa1\\xb9\\x85m\\x8e/\\xc9blGD\\xc2DW0A\\xcd{\\xac\\xb4\\xdb\\xc2\\xa0\\x9el\\x9d\\xe4\\xb9t6\\xac\\xe1\\xa2a0S\\xa3L\\x87\\x9e\\t:\\x10\\x05\\x9fh^h\\xec\\xea\\xef\\xb4\\xfbi1\\xf3U\\x14m\\xdd\\x94:\\x122\\xd4\\x0e\\xce\\xaa\\xb4\\x10\\xde\\xe73*\\xe4~\\x13G\\x94V\\xa9\\x94\\xed\\xd7\\xa5\\xb8\\xe1I\\xa9\\x88\\x7f?`\\x07\\xd0\\xff\\x14\\x9b\\xb1\\xa2\\xd1\\xc0\\xe7(&,\\xee6\\xbe\\xadR;\\xbf_\\x7f\\xae\\xdd\\xeb\\tA\\x90\\xe7`\\xc9N\\x8c\\x95a$C\\x8c\\x89\\x1c\\x1b<m\\xd1\\xc7D\\xc22\\x16{\\x9f\\xa2\\x81\\xaa`E\\x94\\xb9b\\xb3\\xe7\\xe6\\xadwf[\\xda\\xb3\\xc7\\xaf\\x84\\xf6=*\\xe2\\x15>x\\x9c\\x1bUu\\xdf\\x96s\\x98\\x83f\\xa1\\n<\\x93o8\\x17}\\xd8\\x90 \\xde\\x07\\xc7f\\xe7%\\x19\\x14S\\xab\\xacE\\xa8\\x03E\\xd2\\x82\\x98;\\xa1\\x1e\\xeb\\xfc\\xa5\\x02\\xe2L.\\xac\\xea\\xe6\\xfd\\xfb\\xd6a\\xdd\\xf5\\xa6%\\xef\\xeb\\xd5t\\x1f\\xb9\\x1c\\xca7\\x088\\xd2?\\x04h\\xc4\\xefDN\\xfcT\\x02\\t\\r\\xea\\x07\\xbb\\x06\\xe6bE$\\x1d\\x7f\\x1f9T\\xf2|T;\\x84\\xc1T\\xf3\\xf5B\\x8d\\x7fP\\xf285j\\xce\\xec$\\xc1\\x16\\xb5k\\x99r\\xc0\\xee\\x0f\\xd1\\x9a\\xcdi\\xf4c\\x06\\x95\\xd5l\\x19}?L\\xbc\\xf8Bs`@\\x7fqH\\xf6|}\\xd4\\xd8\\x82p\\x0e,?2\\xc4\\xc6\\x03\\x95\\x99&}\\x10\\xb6\\xb4\\xfbU\\xb2K\\xe9\\xc9\\xdbiS$H\\xa9kA\\xae\\xdc\\xa0h\\xc1\\xb0\\xeb$\\xd3\\x8b\\xb4.\\xeb[\\xa9\\xbdK\\x18-t7\\n:*>\\x13\\xbc\\xad\\x81ED\\xf6|X\\xa7\\xa0\\xf0\\xb5@\\xf3f\\xc2\\x1a\\xa1y\\xef\\xf6\\x07\\xea=\\xd2\\x1d\\x18\\x96\\xf9@W\\xe3(\\xdah\\x7f\\x8a74J\\x85\\xf4\\xdb\\\'\\xb6\\xf4\\xde\\xabx`"B,\\xc65\\xa2b\\x81G\\xcf\\xec\\xb8!.\\x82\\xff\\x0bV\\xea\\x14\\x8c\\xbd?\\xb3h\\xec\\xe1\\xce\\xf4\\x15\\xd8D\\xf9\\xbb+]^\\x82Y\\x9a\\xdf#f\\x14U`E\\xe3\\xdb\\x05\\x83\\x92/:\\x8f\\xee:-/]_|\\xfelVmc\\x00y6?\\xf3\\x8d\\xdfA\\xda<f\\xca\\xa6u\\x9a\\xf8Tz\\xc1l]\\xcd\\x88TC\\xf1\\xdaJ\\xa8\\xa6\\xc1H\\xc9\\xdf\\x9ba1@`/)\\\\l>\\xeaU2V\\x86\\xb9{\\x01\\xb9!4h\\xf3\\xd9\\xd8\\x96n3=\\x1b5\\xf9V=\\xf73\\x93-\\xdd\\xd1"|\\xb2H\\xd9$\\xff\\x07\\xb4\\x9c%b\\xb5M\\xde\\x86\\x01\\x10\\xc6\\x84\\xd5yUfx\\x17\\xad\\xb8\\nV_\\x18+{\\xee\\x1b\\xd2VL5\\xd9\\xc33\\x9f\\xed\\x15\\xc6@#\\xe9\\xe5\\x0f\\xf4\\xd2\\xc5/$S,_P\\x96{\\xc1\\xa6cP\\x8bw\\x84\\x82\\xba\\xdd\\xed\\xbe\\x92\\xaa>;\\x91\\xec\\xe1\\x9aO\\xbfg\\xf0\\xfd\\\\\\xfd\\xe4jX\\x8d\\xdeK8&z\\xe5\\x07u\\\'\\x83\\xbc\\x17\\xb4>H\\xe3\\xda\\xbc\\xe0\\xb1\\x85\\x1eC\\xde\\x02\\xcd\\xccK\\xc2n\\xc6\\x86\\xd9R\\xd79{\\x07,~\\x12\\xa3H\\xf0\\xb02\\x18Py\\xd5\\xdd\\x07"\\xa1I*f>\\xc8J\\x13\\xe7N\\x12\\x99\\xe6\\x93v\\xac\\xd9P\\xfa\\xc8\\x1f{`\\xb0c\\x16\\x90\\xfa\\xf5\\xfe\\xdc;\\xb33\\x8c\\xf6\\xf2*\\x8afN\\x13\\xd8@\\xaf\\xea\\x92-\\x8a5j\\xb5\\x9b:\\xb1\\xc5l\\x18\\xc75\\xac\\x90\\xd9\\xb1\\x12\\x87\\xb7\\x81\\xfb\\xad\\x01\\xcbb\\xd4s\\x99\\xd1\\x88\\x8cfI\\x16\\x05l\\xde\\xe8k\\xcb\\x0cE\\xb5\\xb2\\xa4\\xe6\\xbc\\x1f\\xfe/N0\\xe8\\x84\\x94\\x0f\\xc4\\x1dT;C\\xcbG\\x9e\\xc5f\\xca\\x0er\\xd6\\x90\\xab\\x1e\\xb1\\x9d\\x1b\\xd5\\x9cT0\\n\\xcf}\\xca\\xb9\\xc3;\\x81\\xbeTd\\x93%u\\x181\\x93\\x1f_u\\x04\\xca\\xfb\\x87\\x19\\xbf\\xb3y\\xe7"\\xb8X\\x11}\\x8c\\xeez\\x80\\x88P\\xb6\\x1f~\\xb8\\xc1}]\\x9a\\x9a\\xb3:\\xec\\xfb\\xb4\\x88\\xa4\\xc0(\\xe0\\xf5\\xb8\\xc4\\x9b\\xc2\\xf2Z\\x94\\xa0\\xa2;P\\\\"\\x13\\xce\\xb1\\xfc\\x18\\x15q2\\x98\\xf2A\\xb3\\x86\\x11\\x9e\\xa7<\\xf24\\xc3P\\x1cE\\xbd\\xa7\\xd9~e\\x19\\xecs\\xd4eA7U\\x9e\\x00\\xce\\xc1`#bCM\\xd6\\x94\\xfa\\xf2\\x8d\\x8e\\xe1\\xdeY\\x1a\\x87&\\xce\\x90\\xb5\\xac\\rr_\\x9f\\x12\\xb0*\\x1b\\xe0\\xe9\\xaa\\xc8r\\\'\\xed\\xdb\\xcf\\xc6\\xccNPP\\x0e\\xa6\\xf1w\\\\\\x8fA\\xbe\\x96h\\x8d\\xe0\\xbc\\x16\\xc9V\\xba<[\\xc4\\xa3\\xbe\\x93\\xad+}\\x0c \\xea^\\xfa\\x99q=\\x9f\\x0e/\\xf4\\x86\\xc1\\xd8\\x07\\xf6\\x029\\x08\\xa0\\xb8\\x1c\\xf7o\\xfeu\\x97\\x0fn/\\x93\\xf4\\xde\\xa7_^t\\xe7o\\xb7{\\xa98\\xe0\\xd3\\xb8F\\\\\\x9asLc\\x90\\xd1F563]\\xf4<[\\x98\\xcf\\xe3\\x16\\xf1\\xe4\\xa8l\\xe0\\xf7\\xf1\\xb5\\xdc\\xd0\\xb4\\xd7\\x90sz\\x9c\\xd0\\xae}\\xa3\\xe7Ij\\xff\\x03\\xaaf!"\\nendstream\\nendobj\\n11 0 obj\\n<< /Filter /FlateDecode /Length1 1306 /Length2 1591 /Length3 0 /Length 2438 >>\\nstream\\nx\\x9c\\x8dS\\x0b8Ty\\x1bO\\xb6\\xd2\\xa0O\\xb5\\xdb\\xaa\\xb0\\xff\\x94\\xa2\\x98\\xabQ\\x18\\xe5:\\xa8\\\\r\\xa9\\x14\\x9bc\\xe6\\x8c9\\xcd\\xcc9c\\xe6\\xcc\\x8c\\t\\x15I\\xeb\\xd6eI\\x94\\xee\\xb4\\x08\\xe9"\\xb5E\\xd8t\\x11\\xd6\\x92P\\xa9\\xafU.\\xa5",\\xd1\\xc7w\\x06\\xdd\\xf6\\xfb\\x9e\\xe7\\xfb\\x9ey\\x9e3\\xff\\xff\\xfb\\xfe~\\xef\\xff\\xbd\\xfc^\\xa3\\x05\\x9e\\xdefv\\\\,\\x08fc(nF#S\\xad\\x80\\x9b\\xb7\\xbd\\x1b\\x8d\\n\\xa8T\\x06\\x99J\\xa5\\x93\\x8c\\x8c|\\x10\\\\\\x08\\x7f\\xb4\\x93\\x8c\\xd6\\xc3\\x12)\\x82\\xa1V_ \\x1c$0\\x84\\x136G\\x08W\\x011\\x14\\xac\\x96\\t\\x01\\x8d\\x01h\\x16V\\xb4\\xe5VT*\\xa0S\\xa9\\x96\\x1f\\x81\\x98\\xc4\\n8Br\\x84\\x0b\\xdc\\xc8`5\\x86\\xc2R\\x92\\x91\\x03&VJ\\x90`>n\\x05>\\x1d\\x811\\xc7\\x04\\xd0,-\\x97\\x9b\\x8e\\xd1\\x81\\x9d\\x08\\x96 \\x1c\\x08\\x05n\\x10\\xce\\x87E\\xc4\\x8b\\x1cH\\x08\\xbc1\\x0e\\x02\\xe3\\xca\\xafB\\x18\\xb3\\xf88.\\xb6\\xa2P\\x14\\n\\x05\\x19\\x12I\\xc9\\x98$x\\xa5\\x89)P 8\\x1fx\\xc1RX"\\x87\\xb9@U2p\\x87D\\xf0Did\\x92\\x11\\xf0\\xe1#\\xd2q\\x877\\xc6\\xc3\\x15\\x90\\x04\\x06\\x84A\\x88p`TJPd(\\x17\\x96\\x00\\xe2u\\xe0\\xed\\xba\\x16x\\x88at\\x1c\\xbcv\\x1c`\\n&\\x9a\\x03hd\\xda\\xa7p\\x13lU \\x04\\x1d#C\\x1c\\x0e&\\x12C\\xa8\\x12A\\x83\\x01\\x0f\\x11\\xc2\\xc0\\x83\\xbd\\x96\\x8c\\x87\\xe2\\xa6\\x00B\\xb9* $\\x94b\\x04\\x1f\\x92C\\x88\\x10\\n"\\x00c\\xa9C\\x80m\\xb7\\x0e@D\\x85\\x13\\xf5I9\\x12D\\x8cK\\xc9RD\\xa8\\xaa\\x91\\xa2\\nC\\xb4\\xd9\\t\\xe5:`"\\x11\\x8c\\xe2R\\x92*?GD\\x02s\\x88\\xbe+)\\x13\\xc3\\x15\\xa0\\x98\\x02\\r\\xfbx\\xe3!(\\x97\\xa7*\\x83+\\x13S|Q$D\\x06\\xbb:N`\\x08\\x13\\xe9\\xb3-\\x18\\xc6\\x01\\x93\\xca\\xa0Y\\xae\\xa0\\x038\\x04\\xc0\\xa1\\x1c>E\\xf5\\x80\\x8fR\\x0c\\x8f9i*3QCD\\x98\\x18\\x13\\x03\\x1eQ\\x06\\x1c\\x81\\xf0`\\xe2\\x8f\\x14&\\x85\\xe40\\xc0%28"\\xecK\\xc7\\xd77\\x12\\x8d\\x06\\xb8\\x08\\x07\\x07Ap0\\x82\\x92>G\\\'\\xcc0o\\xfcN\\xcc_\\x82\\x84\\x82\\xcdTB~4@U\\xfd>\\x9d\\x02\\x08\\x85q1T\\xa8\\xfc\\x0c\\x1f\\x1b1\\xc5g\\x93\\x9f\\xaf\\x97\\xd3\\xb2\\x89\\x92?9\\xed\\xed\\xb1P\\x10f\\xc6d\\x023s:\\xa1S\\x869\\x03X\\x12\\x87\\x88\\xaf\\xe3xB\\xc8D\\x1e_p]Q\\x1e\\x06\\x96\\x8f\\xa7K\\xf4\\xe9c\\xca\\xf2\\t\\r\\x18O,\\x88\\t\\xf8:\\x96;F(\\x17\\x06\\xc6\\x9f\\x85\\xeeOeR9\\xc4\\x87\\xf6\\x7f\\xcb}\\x8c\\xf2\\xdfT\\xae\\x8a\\xf2?\\x85\\xfe\\xf7\\x8c\\xd82\\xa1p\\xcco<\\x0e\\xf8\\x0f?$B\\x84\\xcaq\\x84\\x93L\\x08K\\xfe\\x0e\\xd8\\x00\\x8f/\\xac\\x1b\\xccEd\\xa2\\xbf{]q\\x88\\xd8\\x01;4X\\xf8\\xa9}\\x88\\x94\\x8d\\x84\\xc2\\\\O\\x04\\xe7\\xf0\\xc7e2f\\x87\\t\\xf5\\x7f\\xcduB9\\x18W\\xb5&t\\xa6\\x05\\x80$\\x12HI\\xa2\\x12Z\\xa0\\x13\\x03\\x0b\\xa3\\x11\\xfb\\xc4\\x85C\\xc7d\\x08(d\\x14\\xc3\\t\\n\\x10\\xcb\\xf0\\x08\\xc0\\xc3$$\\xd5H\\x96\\xaf\\x00\\x14w\\x95\\x89\\xf4UX\\x8eL"!\\xb6clr\\xc4\\x9b\\x1f\\xefc\\xab\\x08\\xc3\\xa10\\x87\\xd4\\xfc\\x00\\xe3XGo\\xbd\\x10}}\\xb0\\xc0n\\xbe\\xc2\\xecE\\r\\xdd\\\\\\xfb\\xd6\\xbb\\xb8>\\x8d\\r\\xcf\\x9d\\xe6\\xca\\xdb\\xd7E9\\xb0\\xde\\xf72N\\xc77\\xd9\\x95\\xdeo\\x8b\\x7f\\xff\\xcfY\\xaf\\xe8Y\\xa3E\\x82\\x8ds\\xa8\\x82\\x1f\\x9f\\x86\\xa7\\xc5[\\xcdi\\xbet}\\n/\\xa8\\xd54\\xbcv\\x96\\xcd\\xd0+\\xe9Z\\x19\\xbdm\\xcd\\x8d\\x1b\\x9b\\x02\\x19(7x\\xce\\xdb+^w\\x14}\\xb6\\xf5&\\xdf\\x9b\\x86\\xf4\\xbchH\\xeftf-\\xbe\\x92?\\x90\\xc7\\x7f;m\\xc9\\xe5.\\xb2\\xd6\\xe4\\x9a\\xc4\\xf8i\\xba+V0\\xb4&G\\x17\\xdb\\xa5\\x17\\xe7\\xdb\\x9f\\xb7\\xab\\xbf_\\xe2\\xbaH\\xfa\\xce\\xb6\\xe6u\\x92>\\xbb\\xf3}Z\\xc5=:\\xf3\\xcf[\\x0fsL\\xd5\\x90gi\\xf3_\\xbe\\xd4\\x16\\xaf\\xe9K\\x7f\\xb92\\xb5\\xa3\\xdcb\\xde\\x9a\\xc0ZPo\\xf4\\xbc\\xdcIwx\\xbfqT\\xdf\\xf5\\xe8H\\xe3 i\\x95\\xb7\\x8d\\xf3\\x9b\\x90\\x8b7:~k\\x965\\x0c\\xd5G\\x86\\xb4\\x065g\\x8c\\xe8Fe\\xf6\\xfb\\xad\\xd6\\xces7p\\xb7\\x99\\xb3\\x92\\x11R/Xb\\xde4\\xed\\xd1\\xc6\\x1d[\\x93r\\x1a\\xeb\\xbe\\xad\\xbaT\\xe3o\\xae\\x95\\xfd\\xd890E\\xde\\xb8w\\xc7l\\x07,\\x9a,ht\\xa0\\x15\\x05\\xa5\\x1d\\xc9=\\xc2\\xcf:p\\x91=:\\xb5\\xc5t\\xb8b\\x99F\\x1a9\\x9e\\xa9\\xe1y\\x9e\\xccf9U\\xcdc\\xacn\\xde\\x1a\\xf7\\xac\\xf6\\xee O?\\xf9\\xa0e\\xf7\\x01vG\\xcbc)\\xef\\xe9H\\xe4<u\\x0bd[\\xcc\\xda\\xb7\\xccGY[j\\xd5I\\xe5\\x02\\x97\\xe6\\x9d\\x97\\x94\\xb1\\xe5\\xbd\\xc5\\xd9\\xcf~\\xbd\\xdd|\\xf3n\\x92\\xc1\\xf9%\\xec\\xaa{\\x19\\xd1\\xb8\\xc9\\xcfm\\x1e\\xdb]\\x1e>\\xfdkC\\xa0:\\x8e\\xcd-\\x1d\\xf4\\xcf:&\\xbc\\x1f\\x80\\x95\\x07\\xf9F\\xbaY\\xf6eZ\\xd4t\\x9d\\n\\xb9C\\xdb~\\xaai4\\x8a\\xad\\xeb\\x95r\\xb6\\xa5\\x0f:\\x9fp\\xf5\\xce\\xbc\\x13i\\x97{\\x98\\xc3\\xb9\\x9dW4\\n\\xc9\\xdb7\\xfd\\xd0\\x1f\\xf3\\xa2?\\xfc\\x17\\x9fJ\\x87\\x9d\\xb7Z2\\xba\\r\\x98\\xadE\\xf6a\\xe8\\xcb!\\x85\\x15yx\\xa3u\\xaa\\x97_\\x8df\\xd9\\xf0\\xce?\\xec\\xf47ag\\x8ag,b\\xd6O\\xd2`\\xb1R.\\x0c\\xba$\\xa4\\xcbO\\x84\\x1e\\xba\\xb6\\x97\\x11\\xc2\\xc72\\x99\\xc5\\xfc\\x94\\x91\\x80\\x96\\x0b\\xc7\\neQ&\\x8c\\xae\\x19\\x9e\\xe9\\xea\\xd6CW=u\\x0c]\\xcf\\\\\\xbb\\xb95\\xf0\\xd6\\xe4\\xb8?Z\\x02\\xb5#\\xdey-e\\xc7\\xaes\\xdd\\x96\\x85\\xf7\\xce\\x0fL\\xa9<|\\x8e\\xd3\\xaeE\\x899\\xdb6:8\\x0b\\x88\\xbd\\xcaf\\x97\\xef\\xaed\\xd5\\xed~]\\xd2Z\\xb0^\\xfbq\\xa2:%#\\xceY7\\xb1\\x9f\\xf5\\xc8\\xef\\xe5?\\xb4\\xb9\\xfb]\\x0e\\xf6\\xe6\\xff\\xd9\\xa6\\xf7k\\x89\\x17\\xa0/\\xf2\\xc9_\\xb2\\xef\\xdb\\xe5\\xd6\\xe4$\\xf5\\xe8W^\\xb7\\xcft<\\xcb\\x15Q\\\'\\x9f}V\\xa5P6\\xfcY\\x9b\\xafY\\xba\\xf0p\\xac\\x8bZO\\xddJ\\xba\\xd3\\x14\\xc3\\x01\\xaf\\xd9\\x9aON\\x95\\xf4\\xe8\\x91n\\xf3~\\x9f\\xee\\x99\\xb4\\x89\\x13\\xb3\\x7f\\x1eg\\xe9E\\xfd\\xd8\\xeb=\\n5\\x0b\\xbf\\xfc-\\x9ef\\xdb\\x1b\\xc3_+M\\xed\\xcbZ\\x04I\\xcf\\xafl\\x9e\\xec\\x959;\\xd9\\\\\\xd0\\x14Le\\xdd\\xf9\\xa6\\xb3\\xd8.R\\xa9q_\\x19Wh\\x1e!~1-\\x18.[\\xda\\xca3\\xf03\\xef\\xad>%\\x7fU]p\\xf1\\xca\\xf1\\xe7?.\\xc9\\x0b\\xb2\\xd9\\x8f\\xde\\xe6\\x98\\x16\\xc8X\\xcc\\x8e%S~\\t\\xe7\\xeahh\\x0c\\xd0<<`\\xf4\\x90C\\x82\\xfe\\x9b\\xef\\xab\\xd8#\\x1ajB\\x1b\\\'\\x87\\xe3\\xa4\\xe0\\x05y\\xb7K\\x91\\x9b\\x02\\xf6\\x8f\\x8f\\n\\xa6Uf\\xfb\\x05\\x9c3H\\xcc\\x9e\\xd4\\x9a\\xc4o\\xf7m\\xf5\\xbd?\\x9d\\xe9\\x1f\\xb5\\x8f\\xdb\\xc8\\x9eZ\\xd0\\t\\x0c\\xba+\\xf7\\x05W\\x15UMJ\\xdfg\\xad}\\xecda\\x85\\xf7)VxT\\xd9\\xc0\\xe5\\xd3\\xd6\\xf4\\xe5\\x1f2\\xcb+\\xb3\\xf3>\\x88.\\xe3&r\\xb3\\xe3\\xda\\x1a7o\\xc5\\x97\\xbf\\x19\\xee\\xd9#X\\xd1\\xb1K\\xb3\\xc5?&\\x85\\xd6\\x97\\xc9,}\\xed`Q\\xd6\\xf5\\x01\\xef\\x8d\\xf1/>\\xda\\xaf\\xe9\\xbb\\xde\\xa8\\x05\\xcf\\xcdq\\x1c\\x19\\x9d\\xd9+x2c\\xd9\\xfc\\x87\\x1b<\\xba\\xa1X\\xb5\\\'\\rv\\xe6\\xfb4\\x7f\\xd6\\xd9\\x9f\\xf9\\xf8\\xf7\\x8c-7\\xcan\\xd1X\\xdd\\xd5&\\xb9\\x07\\xea\\xeaq\\xa9\\xfd\\xce\\xbc\\xf3]k\\xccr\\xc8\\x98\\xe0\\xcd\\xf3\\xaeR\\x9f\\x81\\x879\\xb8\\xfe\\xde\\xc6\\xd2\\xd8K\\x16S\\x82\\xba\\x12\\xce\\xea9\\x8e\\xfe\\xbc\\xe7]_\\xdb\\xc2\\xf5~\\xbe:[)C#\\xf7>\\xa8\\x85\\xe5D\\xf2N\\x1fn\\x9a\\x19\\xd6\\xcb\\xbf:\\xd7\\xfc:\\xa6y\\xe97A\\xb3\\x7f\\xf1VN\\xef=\\x1b_{\\xbd\\xde\\xbb)i\\xabzd\\xa3\\x15\\x18vH\\x8d\\xe2\\xd1X\\x12s\\xb6\\xde\\xf6n\\xd3ff\\xc3A\\xc3\\x19\\xb6\\xa9\\xfa\\x0b\\x0f]\\xddl\\xb3\\xf71\\xa9zqb\\xdb.\\x9d>\\xef\\\'\\x0b\\xf2\\xc5\\xcc\\x17\\x97\\xdfU=}eK\\x9d\\xd4\\xa87)\\x9d\\x19\\xbeX/\\xf7\\xa4\\xa7\\xccw\\xd1\\xdc\\xa3\\x9a\\xdb|\\x9d\\x93\\xff\\x15{\\xd7\\xb9\\xec\\xaa\\xe8[V,\\x7f\\xaaN\\xf8\\xac2\\xd6\\x1ez\\x03{\\xd5\\x0e\\xff\\x8a\\xa4\\xef\\xb8\\xcd\\xc3\\x0b\\xb6\\xe4\\x8cVO\\xcf[\\xf8\\xa0\\xfc\\x1a\\xb2\\xc5\\xa5\\xf1\\\'\\xe34\\x875\\xa2\\x82?\\x8eX\\x1e\\xac\\x97\\xfb\\x8b\\x07\\x9a:\\xb2\\x0e\\x95\\\\\\xa8\\xde\\xa7\\xddsR#\\xa0\\x87\\x93w8\\xaa\\xdb\\x06\\x9cqH\\xac3\\x08\\t\\x9fZ:7\\xeb\\xbb\\xd4)F\\xabr\\xc3v_J\\xce\\x0b\\x10m\\xd7\\xcbf\\xb4\\x8f\\xc6\\xae\\xbc\\xb0*\\xb2\\xb6hW\\xf1b\\x88\\xb1\\xb2h\\x99{s\\xac\\x87K\\xbe\\xdcpW\\x8f\\xd8\\xd9\\xe5\\x8c\\xc1\\xb5\\xe9;*\\\\\\n\\x07\\x0e\\xff\\xb5\\x94Y\\rS\\xe7\\xb4\\xb5$\\n\\xbe_\\x16\\x18W\\x90\\xb0\\xa1V\\\\\\xd06\\xb3\\x1dv\\xb1JM\\x9d3\\xcb\\xf3\\xd4{\\xfb\\xc1d\\x8d\\x99\\xbf\\xfat\\xf2\\xce1\\xd7\\xce\\xe6\\x16=\\xabT\\x93<\\xcc\\x81\\xf7P\\xf9\\xe7\\xeb"\\xe2[^=\\x9d\\xf9\\xd0T\\x9a\\x11\\x96\\x1a\\xce=Z[\\x9c<u\\xda\\xd0\\xc5\\xd7V\\x8d\\xf2\\xb3\\xd9\\xea\\xc7-C\\xbaRG\\xee\\xe9n\\xca1t\\xcd\\xa4O\\xcd\\xb3\\x14{\\xa6\\xef\\xee\\xcb@\\xda\\x9b\\x87\\xae\\xf2|\\x96j\\x1b\\x9f\\x18\\xdc\\xd8\\x85\\xba_\\xe4k=zp\\xe0\\xc0\\xb6\\xc4\\xdb]\\xc7t\\xfa\\x03\\xa6_kP\\xc8\\xeb\\x9e\\xf4\\x9f\\xe46\\x06Pf\\xf8\\xed\\xd1\\xfai\\xd402\\xce\\xc8J\\x17\\xd8\\xd6\\xb6w#\\x85\\xb2\\x12\\x97\\x13eK\\xd3fs\\xf2\\xa87m\\xf3\\xee\\x18R\\x1a(7<,\\x1dO\\xa7$\\xcc\\x8c\\xaf\\t:\\xb7\\xbba\\xc5\\x93\\x84\\xef\\x06?\\x84\\xea\\x94j\\xbdE\\x04\\x85\\xefen>n\\xdbK\\x7fK\\xf9\\xe6\\xf7\\n\\xeb\\xf2y\\xa3\\xcbf\\xb5{\\x1e\\xfbF\\x91\\xfbW\\xe1\\xcd\\xb4\\x9c\\x07\\xeby\\x9d\\xb6\\xc9\\xe2\\xd5\\x8eG\\xa4oL~H\\xfa7~\\xc9\\xd0\\x1d\\nendstream\\nendobj\\n12 0 obj\\n<< /Filter /FlateDecode /Length1 1531 /Length2 6746 /Length3 0 /Length 7764 >>\\nstream\\nx\\x9c\\x8d\\xb4\\x05T\\x14j\\x1b-L7H\\x87\\x12\\x03\\x88t\\x0c\\xdd\\x9d\\xd2\\xdd\\xc20\\x0c0\\xc4\\x0c\\x0cCw7"\\xa9\\xd2\\xa5H\\xa7HK\\x0b\\x08\\x02\\x92\\x12\\x82\\x84tH(Rw\\xf4x\\xce\\xf9\\xbe\\xef\\xff\\xd7\\xbaw\\xcdZ3\\xf3\\xee\\xfd\\xe4\\xfb\\xee\\xe7ac\\xd63\\xe4U\\xb0\\x87\\xdbAT\\xe10$/\\x90O@\\x12\\xa0\\xa4\\xadb\\x06\\x14\\x00\\x08\\x08\\x08\\xf1\\t\\x08\\x08\\x12\\xb0\\xb1\\x19A\\x91\\xae\\x90\\xbfq\\x026\\x13\\x08\\xc2\\x13\\n\\x87I\\xfe\\x87\\x85\\x12\\x02\\x02B\\xa20e\\x10\\x12e\\xa8\\r\\x87\\x01\\x1ez\\xb9\\x02\\x80B\\x00\\xa0\\xa8$PLR@\\x00 (  \\xf1\\xb7!\\x1c!\\tP\\x06yC\\xed\\x01\\xda|\\x80\\x87p\\x18\\xc4\\x93\\x80M\\t\\xee\\xee\\x87\\x80::!Qy\\xfe\\xfe\\x0b\\xe0\\x00s\\x02\\x80\\x12\\x12b<\\xbf\\xdd\\x01\\nn\\x10\\x04\\x14\\x0c\\x82\\x01\\xb4AH\\\'\\x88\\x1b*#\\x18\\xe4\\n0\\x84\\x83\\xa1\\x10\\xa4\\xdf\\x7f\\x85\\xe0\\x90vB"\\xdd%\\xf9\\xf9}||\\xf8@n\\x9e|p\\x84\\xa3,\\\'\\x0f\\xc0\\x07\\x8at\\x02\\x18@<!\\x08o\\x88=\\xe0W\\xcb\\x00\\x1d\\x90\\x1b\\xe4Ok|\\x04l\\x00#\\\'\\xa8\\xe7_\\x84!\\xdc\\x01\\xe9\\x03B@\\x00(\\xc0\\x15\\n\\x86\\xc0<Q.^0{\\x08\\x02\\x80\\xca\\x0e0\\xd4\\xd0\\x02\\xe8\\xbaC`\\x7f\\x19k\\xfde\\xc0\\x03\\xf8s9\\x00 \\x1f\\xf0\\x9fp\\x7f\\xbc\\x7f\\x05\\x82\\xc2~;\\x83\\xc0`\\xb8\\x9b;\\x08\\xe6\\x07\\x859\\x02\\x1c\\xa0\\xae\\x10\\x80\\xae\\xaa\\x16\\x1f\\xd2\\x17\\xc9\\x03\\x00\\xc1\\xec\\x7f\\x19\\x82\\\\=\\xe1(\\x7f\\x907\\x08\\xea\\n\\xb2C\\x19\\xfc.\\x1d\\x04PU\\xd0\\x07\\x80P\\x1d\\xfe\\xe9\\xcf\\x13\\x8c\\x80\\xba#=\\xf9<\\xa1\\xae\\xbfz\\xe4\\xff\\x15\\x06u\\xcd*0{%\\xb8\\x9b\\x1b\\x04\\x86\\xf4$\\xf8U\\x9f2\\x14\\x01\\x01\\xa3\\xee\\xdd\\x8f\\xff\\xcf\\xe3\\xba\\xc0\\xe0>\\xb0\\x80\\xbfO\\x0eP\\x98\\xbd\\xc3\\xaf6\\xec\\xbd\\xdc\\xf9\\x8daP\\x0f/\\x88\\x86\\xf2\\x1f\\x1b\\x14D\\xf0/\\xe6\\x08A\\x02D\\x04$\\x04\\xc5DE\\x01\\x10\\x0f\\x00\\xc4\\x17\\xec\\xc4\\xff+\\x81\\x91\\x9f;\\xe47\\t\\xfc\\x05\\xa3z\\x08\\np\\x87\\xbb\\x03\\x1cPm@\\x82\\xa0\\x0e\\x10\\xd4\\x0fA\\x80\\\'\\xc8\\x1b\\x02@"\\xbc A\\x01\\xffI\\xfc\\xf7\\x89\\x00\\x08\\x04\\xd8C\\xc1H\\x80\\x1d\\xc4\\x11\\n#\\xf87:\\n\\x868\\xfcuF\\xbd?\\x02\\xea\\x0b\\xb0\\x14@\\xc9\\x0f\\x08\\x10\\xf8\\xf5\\xf9\\xe7\\x9f5Ja\\xf6p\\x98\\xab\\xdf\\xbf\\xe6\\xbf\\x9f\\x98_U\\xdfLE\\xed!\\xf7\\x9f\\x96\\xff!\\x15\\x15\\xe1\\xbe\\x80\\x00^Aa\\x00\\xaf\\xa0\\x84\\xa8\\x00\\x00(,"\\x0c\\x10\\x13\\x13\\x04\\x04\\xfdw =\\x10\\xf4O!\\xff\\xe1\\xac\\x01s\\x80\\x03$\\xfe\\xaa\\x17uQ\\x7f\\xd7\\xec\\xfdG\\x04\\x1c\\x7f&\\x84\\x13\\xf0\\xdf\\xb1t\\xe0(\\xe9B\\x00\\x1c\\xff*\\xddJ@D\\x00\\x8c\\xfa\\x02\\xfe?\\xeb\\xfd\\xb7\\xcb\\xff\\x9f\\xcc\\x7fE\\xf9\\xbf*\\xfd\\x7f+R\\xf5ru\\xfd\\xcds\\xfce\\xf0\\xff\\xe1AnPW\\xbf?\\x16(\\xe9z!Qc\\xa0\\rG\\r\\x03\\xec\\x7fMM!\\x7f\\xcd\\xae6\\xc4\\x1e\\xea\\xe5\\xf6\\xbf\\xac\\x06\\x12\\x84\\x1a\\x07\\x05\\x98\\xa3\\xeb?\\x17\\t\\xf5T\\x85\\xfaB\\xec\\xf5\\xa0H\\xb0\\xd3_\\x8a\\xf9\\x0b7\\xfe5k\\xaeP\\x18D\\x0f\\xee\\t\\xfd\\xb5]\\x00\\xbc@\\x01\\x81\\xff\\xe1P\\x03\\x06vAm\\x10O\\x94,\\x7fS\\x10\\xd4\\xfc\\xfcwJ\\x15\\x18\\x18n\\xffk\\xd0\\x04ED\\x01 \\x04\\x02\\xe4G\\x80zf\\xd4I\\x04\\x10\\x00DM\\xa4=\\xc4\\xf7\\xb7\\x90\\x01\\xfc|08\\x12\\xe5\\x02@\\xb5\\x17\\x04p\\x80#\\x08~\\xbd\\xa9\\x888\\x80\\xdf\\x0e\\x01\\x02C\\\\!\\x0eH;\\xe4/\\xf27\\x8e\\xd2\\xca\\xbf\\xb8\\x1bj\\x99\\xfdM\\xa0\\xb2\\xfcK \\xdd\\xff\\xc1\\xc5\\x05\\x01\\xfc(\\rA\\x1c\\x11 W$\\xc4\\xf7\\xdfH\\xa8@\\xee\\xa8E\\x03\\xfb\\x9d\\x00\\xea\\xf8\\x0f\\x0e\\xfc\\x83\\xff\\x96\\xc8\\x7f\\x12\\xe2(\\x0fO/7\\xb7\\xdf;\\xf7\\x9fP\\xff\\xd55\\xd8\\x0b\\x81\\xf2D\\xfeV&\\xeaJ\\xfe>\\xff\\xde5\\x10\\x88/\\x04L0?\\x03\\x07KE:\\xd7G\\xb6\\xff\\xa8U\\xb8\\xe7\\xc3\\xbb1&\\xf3\\x91m\\xc3\\xf4)\\\'o\\xc0<\\xa2\\xc3\\xeb\\\'\\tn\\x06gMN\\xf8g\\xc4\\xb9B\\xc6P\\x0f\\xe9\\xe2\\x9a\\n\\xc7\\x99\\xfc\\\'\\xa6\\xeb\\x80\\xdd\\x96F\\xdc\\x98\\xd64\\xfd\\xb6\\xcb\\xc0+\\x9b\\\'\\x06\\x13\\x1bm\\x04s\\xe3\\xd4\\x03\\x1fJv\\x15\\x1a\\xfa\\x19\\xf0\\xe9y\\x8d\\xe47\\x03\\xaf=\\x02M\\xc2\\\\0[\\xd0\\xbb\\x1e\\xb2\\x15xx\\x89\\x93\\xe8\\x15Q\\xfc\\xf0\\xe9S\\xf3m\\xe8/_x\\x1f=\\xb3\\xa1\\xbfY#\\xaaIxU>\\xc9\\x9bd\\x9ch\\x15\\xf6r\\x8a\\xad\\xd0.w\\x9a\\x96\\x05\\x07\\xc9\\xcb\\x80\\xc7E~\\xe4{g\\xea\\xec\\xfc#y\\xfe\\x87[\\xa6\\x87O\\xb8\\t\\x82\\xf6\\x92\\x84J\\x03,V\\x04\\x93/\\xa6\\xfd\\x97*\\x8d\\x04=\\xdf\\xd2\\xdd\\xa7\\xb3\\xa0e\\xc0<#\\x7f?\\xf1 @q+\\xf3!\\xcdl@Y\\xe9r\\xf1\\x14s\\xb2\\x83\\xfb\\xad\\x9a\\x9c\\xe5\\xb9Q\\x18\\xd2\\xc5+\\x87]\\x84Z\\x97H\\x0f\\x00\\xfc6j\\xc9W\\xad8\\xa4\\x98\\xb1\\xa7\\x08\\x17H\\x1f%~o\\x02\\xc7;R\\x93\\n+\\xfe\\xe6\\x93\\xbf{\\xef\\xacRI\\xdb^\\x13\\x97\\x1e3\\xfa\\x81\\x95\\xb9Q\\x00\\xabw%\\xb1\\xdb\\x10\\xa0\\x1dGED\\xacU-\\xf8s!\\x11w\\xb8\\x90e\\x7fi\\xd4s\\xb1D\\xa1\\xfe\\\\j\\xc9\\x07^:\\x85\\xd6\\x8a\\xeb\\xf8\\x0f!d\\x84%c7\\xde\\x97=\\x1c\\xe4_b1\\xc4\\x1e\\xa2i\\x90\\xa8\\xea\\xf2c\\xbbXp*a\\xbcp\\tK\\xf3\\xafx\\xc6%Vj\\xe6\\xe5\\xed\\xf3\\xbc\\x8f8\\xf1\\xe5|\\xf4\\x0f\\xc7\\x073\\t\\x95\\xc6W\\x07\\x94\\xdc\\xcaU\\xa6\\n\\xa5\\xfd+\\x9f\\xa7\\x1a\\x18\\xf7\\x19\\xd6\\x07\\xa7\\xf5r}\\xa5\\x8a\\xd9\\xac\\x11\\xb9d\\xf2%+\\xe8\\xb8\\xb7\\xc9\\xf9d\\x85j\\xb8\\x19\\xd5+\\xa1\\xfb\\x1b\\xc1\\x0e?\\x1f\\nG\\xee\\x8a\\xcf]\\x04x\\xa7\\xabj\\x9f\\x16\\xfd\\x08\\xf9\\xf1\\xa5\\x99%;\\xb8\\xf2+v\\xea\\x8e\\xcfs\\xef\\xca/\\x83S17T\\xc0\\xa6\\xdd\\x9b\\xbe]\\r44"\\xb7\\x87f.w\\xf1]\\xb0\\x92)\\xa7\\xb7\\xfbE\\x80T\\xcayI\\xb1\\xcb\\xb4\\x03\\x96#\\xa6pw\\xd7\\xb5G\\x1c\\xfb\\x87RT\\x93>\\xe1\\xab\\xd2\\xa6\\xd7\\xbaf\\x8b\\xa4\\xf8e\\xd4\\xee\\xa1\\xe6\\xcf\\x01\\x918\\x0b\\xd4>\\x85\\x83\\xb3\\xab\\xf2i\\x98\\xe0\\xacW\\xec\\x1aT\\x13\\xfb\\xe9?\\xbb\\xc8\\x8b\\xfc\\x9a\\xc3\\xea\\xfa9\\x97m\\xbd4\\x8a\\xc9\\x142&p\\x1d\\xe1{l\\xb8g\\xb0\\xcc\\x8d\\xc7\\xaclW\\xb4\\x9cZz5\\xd5\\x82\\xd4\\xb1o\\xec^\\xda\\xec\\xd1Zg\\xc1Lx\\xa6~~\\xa7\\xa0\\x8f\\xe8p\\xb6\\x9c\\xa2R\\xaf\\x9fj0\\x89\\xd2Nu\\xb6\\x13/\\x1d\\xd5\\r\\x99\\x0bF\\x9eY(n<\\xe7\\xf8\\xb1\\x05]-u\\xc8\\xe1m\\x0fk\\xb2\\xd4\\xc3W+\\xe1\\xec\\x0e\\xfd!\\x83eCp\\x98\\xb4\\xe2o0\\xd1\\xb9\\xc9>\\xcc\\xe4\\xac Kb\\xa5\\x8a3s:\\xa2\\xe1\\xff]=\\xeaU\\xad\\xdf\\xfd\\xac\\xa2\\xfb\\x08l\\xa2\\xc6{\\xf3|\\xfcu\\xbe\\xce\\xa3\\xe2B\\xd9\\xa4\\xb8g\\x0b\\x07\\xab\\xb2\\x11\\xfe\\xb2w7;\\xeeH|\\xd7\\x99\\xc8\\xf1\\xe6\\xfd\\xf4\\xcd\\xbbx\\x85\\xf3\\xca\\xc8\\xa8X\\x99\\x8b\\xa1MC+(\\xff\\xb5\\x07}\\xed\\x97\\xb2\\x05;\\xdfY\\xd9\\xef\\xe7\\x0c^$A\\x1d)\\xd5\\x0f\\xb6%\\xc7ve\\\\\\xad\\xa7\\x19\\xf7\\x9eM\\xc0%\\x9b\\x9b\\x1bcvJT\\xd2\\x12\\xaa\\xa0\\x0b/\\xf7-\\x1f+<\\xca\\xfcp}N\\x1c;h\\x99\\xc5\\x7fgC\\xc5`T\\xea\\xdd\\xb1\\xc1v\\x92T:\\t\\xcb\\x80(G\\xff\\xab\\x06\\xcd{rJ\\xcc\\xa3\\xb2R\\x8eN\\x9c\\x9d\\xd3Dj\\xa0\\x96C|\\t\\x98\\xfe+\\xa6\\xa5\\xb7\\xd2\\xe1\\xf24\\x9bG\\xd1\\xb9\\x1c\\x14L\\xd2\\x9f\\xd0c\\x93\\xb2\\xef\\x05rGs\\x06M\\xeb\\r\\x8c\\xc4P\\n>xUg\\xcf\\x98\\xe9\\xe1\\x06\\xbe\\xfa\\xcc\\xba\\xa6A\\xe2T\\xffz\\xabwC\\xf5\\x1c\\xa2q\\xc9\\x1bk\\xd8\\x80\\xc5\\x907O\\x14\\xc9\\x04[\\xff\\xfa>0\\xa0\\x14\\xcc\\x14\\xeb\\xe0\\xe7\\x9d$,P}\\xd9\\xb3k\\xed\\xad\\x1b#w\\xbc\\x94`A\\xfe!nX\\x87U\\xe3\\xa0\\x9a\\x1d\\xddJb\\xd1g\\xe8\\xb27J\\xaf\\x1a\\xd3\\xfd\\xf1\\xc9\\rv\\xab\\xedN\\x07\\xb4j\\x0f\\x8bc]pD\\x07\\x9b\\x0e\\xdd\\xdf\\xa1\\xb4\\xe8[M\\xa2B\\xfb\\xf0\\x13K\\xb9\\\'!\\x17\\xc3\\xb7AY!\\x1f\\xc5t\\x168\\xfby\\x91g\\x9c%\\x8f*T48\\x1e-\\xa6j[\\xde\\xf9\\x0c\\x98\\xecx\\xb3k\\xe4Pf\\xd9\\xb9\\xdbuo\\xc4\\x7fi;\\xa0`\\x91\\x10A\\xaa4#X\\xdde~\\x02\\xfe\\xa2\\xd4_2\\x88]\\xda_\\xc9X\\x85q\\xe1\\xb0qMs\\xe1=\\x02\\xab2:p4Rt\\x9c\\x7f\\xe4\\xd0\\x1a\\xa9KYbZI\\x18E\\xda)\\xa4\\xb9\\xe4\\xf8\\xb5\\x01\\xeau\\xb45\\x97\\x06\\x91\\xbdw~\\xa1\\xd3\\x12\\x952\\x9b\\xf1\\x83\\xbc\\xf2\\x05\\xd3w\\x8f2\\xe0\\x9c!\\xdf\\xc8L\\x11\\xf7\\xe3v\\x81wq!\\xd2\\xab\\xdf_Z\\xbf~\\xef\\x9dW=\\xe3\\x86k\\xf1\\xfd\\xa0\\xb4`\\x88(\\xbb\\x86\\xe9R\\xa6\\xc3\\xd4\\xc4\\xc9\\xfc\\xce\\x03\\x83\\x9b\\x80*f\\xc1\\x90\\x85\\xc5\\xf6-\\xf6]\\x1d\\x84(\\xc3P\\xddc\\xbb\\xa4\\x02\\x97\\x12\\x9b\\x08\\xdaO\\xaf&\\xd6\\xf0\\xb6ko\\xa8\\xf3i\\xde\\xbe\\xba;\\xba\\xba\\xcb\\xfeV>\\x96\\x0e8@\\xb5*\\xd4\\x14@r\\xa4\\xad\\xb9\\x94\\x12js~i3\\xdf\\xa7\\x06Z2\\xeaR\\xc0\\xb4C\\x1f\\x8e\\x1f\\x15\\xb0(S\\x0cX/)$\\xb6\\x9f\\xd9\\xe8\\xc0\\x11|x\\x9eY\\xbd.{\\t\\x103\\xf8\\x88\\x177\\xa6Y)\\x96\\xb8\\x8a\\xf5t\\xf6q\\n\\xde\\xc4\\x1cM\\xb7\\x11\\xa9\\xd4\\xbb\\xda\\xad\\xbd*nK\\xe1\\x14\\xc5\\x13.4\\xfa\\x8c.<\\x0f\\xe1`)\\xb1\\x82\\x06e\\x80\\x08f\\x94\\xa9\\x1c\\x86\\xe1\\xf7\\xb6\\x07\\xb3B\\x19e\\x13\\xcb\\xc7\\x96Z\\x1b\\xfb\\x17\\x15\\xe7G\\x8f\\xd8\\x03\\x12\\xaf\\xf48M\\xde7\\x06\\x17*\\xf2d\\x03\\x05,\\xac\\x19\\x8c.\\x93\\xa6\\x95\\x04)!R2\\xf2\\x1f\\xc5\\x96a?kD\\t\\x02\\xe9\\xf2\\xcf\\xa6\\x19\\x17yT\\xc8\\xc2\\n\\x9a~\\x86s\\x0f\\xb7\\xb1\\xd5\\x9c\\xd8\\x90(\\x12\\x8f\\xb5\\x8aqp\\x12F_F\\xf9Ri\\x8a>K\\xbf\\xf2\\xe8\\xe9\\xd5\\xbf>\\xa2p]\\x92\\xa4\\xa9\\xc6\\x7f1d\\xeb\\xb1?\\xe5w\\x08\\xcd?\\xb1\\xd1-\\xee\\xc4\\x12\\xdb\\xa6\\xfc\\xa2\\xad\\xc9\\xdc%R\\xcb\\xe1\\xb9C\\xeb =\\xac"\\x80\\xd7\\xa6\\xee\\xb3l\\xb1+\\xeb\\xd8\\xf8\\xb2oT\\x1d\\xa7\\x94Z\\x1f\\xc8\\xa4\\x93 \\xc1\\xbc!%N(\\xff\\xe9\\xf33\\xc9\\xd0\\x0f\\x95\\x0fvx\\x1fs(G\\x08\\x084\\x1f\\x95\\x1d9\\xb8(1\\xe0RZ\\x86\\xe5Wg.\\xfa\\xd2%.\\xb1\\xcb\\xf8Fw\\x9b\\x86\\xa8\\x7f{E\\x08\\r&\\xf0$y\\x19ONu]\\xe9\\x13s\\x91\\x94T\\xdc\\xa0[\\xd2\\x11j\\xb2S\\x1d\\x1b\\x05\\xcd\\x9ez\\x18\\xad\\xb5B\\xfb\\xf1\\\'[j\\x06]\\xc0\\xb4\\xdf\\xd2S\\x0cU4\\xba+\\x16I\\x82\\xea9\\xa0\\xe5\\xe2M\\xefa\\xee\\x1dKb\\xd8\\x8cg\\x14$o\\xd5\\x9aWy\\x83/\\xf3\\xdb\\xd3\\x1c0\\xf2\\x81M\\xa6R\\xff\\xfd\\xbc\\xb5\\\\\\rk\\xe5\\xb9\\xa7\\x03\\x15\\xe5\\xecE\\x8f#\\x9f\\x8c\\x1d\\x9e+\\xab\\xc5\\x18\\xe2\\xf4\\xe9\\xdf\\x9f\\x0cuG\\xbfW>\\x1d\\xd9\\x85+*}\\xfb\\xf5Gm0\\xee\\x11\\x8b\\xf2v\\x97\\xe3t\\x1e\\x90r\\x85\\x1a>\\x85\\xc5\\xcf-~R\\x1d\\xb6*\\xbbh\\x9e\\xdb\\x11\\x8eq\\xd7,\\x87\\xbb\\xfa\\xc3\\xf8Nm\\xd5\\xf9dTg\\\\g\\xb7\\xa4\\x03M\\x85\\x19\\x99v\\xf7\\xe2\\x1eIa8\\x07\\xf9\\xcb`$N\\xb0ob\\xdf\\xd6)\\xb8\\x8c\\xbb\\xdcV\\x1d\\xfcd\\xdd\\x9b\\x92%\\x87{\\x1c\\x93y\\xd3q-\\x19\\x93\\xc1\\x95\\x94V\\x8a\\xcdek\\xac\\x85\\x985<\\xf1\\xb9\\xf7\\x1e\\x0b~\\xf8\\x1b\\xb6\\x05\\xedW=X\\n\\xa9\\xa23\\xd1:\\x01!Q\\xef\\xd8Z3\\xac\\x93h\\x95/\\xebm\\xa56e5v\\xdb\\x1b6\\x8b\\x076\\x1c_3\\xe7\\x14*\\x19B\\xb7\\xe6z\\x9f\\xc2\\x1d\\xc6\\x07\\x1di\\xe2]i\\xbd$\\xe1B\\x05~\\x99\\x0c\\xc6GKE\\xb3GV\\xa0|l\\xean)\\xec=\\xf6\\xb4\\x958\\x87\\n\\xf9\\xd5\\xecg\\xdes_*\\xe3o,\\xaek\\x9c\\tu\\x14\\xeb\\xad#J)\\x8f\\xf8\\xfc\\xde@\\xcfL\\x85z/\\xf1E\\x02b\\x13\\xdf\\xddgA\\xa3\\x90\\xba\\xb7=k~e]\\x91l[\\xc0\\x0c\\x05\\x1e\\x07\\\\\\xd5\\xd7YD\\xd6\\xc2\\xee\\x04\\x9e\\xa0UF\\x9a\\x18\\xf2x\\xd7\\x88.\\xf6\\x7f\\xe1\\x1b\\x04\\xb9\\xdd\\x0f\\\\c\\xa3\\x9c\\x97\\x9d\\x98\\xfc\\xb2\\xcfi\\x14\\xa2\\xd4\\xf55s\\xca\\x85\\xa5\\xf8\\x89\\x10\\x13\\xe5\\x1a\\xbc^\\x9e\\xcb\\xc0x\\x96\\\'yF4v]\\xfa\\x1e\\xabp\\x8f0\\x9em\\xa2\\xaf\\xf2\\xc0Q\\x1f:\\\\Re\\x06\\xb9\\xc0\\x18\\xa0\\x1d)\\xca*\\x19\\x93\\x15]\\xfd\\xdc\\xda\\xe7\\xebr\\xdeY\\xb6\\x92By^\\x06\\xbb\\xb3u\\xa1\\xcc\\xe5\\xa5\\xa6p,\\xf6)\\xc3\\x81\\x8aB\\xafLI\\xdd\\x98\\xe4\\x88\\xb6\\xee\\x14h`\\x92\\xdb\\xc4l\\xc8r\\xed\\x85\\x1d\\xcf\\x12\\x83\\x1bh\\x9e\\xab%\\x9e6uTT"\\xcb"\\xbe\\xd6z\\xb8\\xa4\\xad=6"\\xb0\\xc6\\x96q\\xf8\\x83\\x1c%u\\x02\\xd2\\xfbXu\\xab\\xc8gn\\x0c!\\xc890\\xce\\xc0\\x14\\xc78\\xc3\\xbf\\xce\\xbb\\x86\\xa9\\xeb]\\\'\\x82\\xd9O\\xd6-\\xef\\x17\\xf2*!\\\\\\x02`\\xdd\\xca:~\\x8b>;\\xf1\\xee\\xe2\\x04\\xdd78:\\x00\\xed\\x90\\x19\\x7f\\xa4\\xd8\\x7fH\\xda\\x02\\xed\\x0c\\x9e\\xcc\\x87\\xb4\\x1bTth\\xbd{\\xa4\\xffz%8o\\xb8\\xa7\\xa8\\x96m\\xb2\\xd2 6\\xd0\\x8aH\\x11\\xaa\\xc9\\xa5\\xc3v\\x14\\xbc\\xcb@R\\x11`3\\xf9\\xc0n>\\xcf\\x01!M\\xbf\\x8e\\xc0\\x08\\xbf\\x7f\\x0f\\xe4`\\x90\\x926\\xd8\\xf7\\xb3\\xfe\\x13A<Na^\\x97\\x04\\x80\\x80\\x90\\x95)\\xf9M\\xcb)b\\xdc\\xd5t7\\x94\\xba\\xbd\\xd5T\\x80\\x0e\\xfbZ*\\xb4\\xf62\\xafAN=I\\x87\\xa69`ep\\x7f\\x13\\xd3\\xe9^\\xfe\\x80F\\xd6"\\xab+\\xb4\\xf1p\\xcb\\xaf!\\x8df\\x1e\\xef\\xfe-\\x82\\xe2\\xb3t#\\x92.;\\x1ej\\x86\\x0e\\xea-\\xd8\\xff@\\x89#\\x98/}\\xdd\\x90\\x99\\n\\x19\\\\x\\x1e\\x1e:\\x1a\\xf7Xc=j\\x82\\xf8\\xd5\\xca,Ub\\xe2\\x865\\x0e\\xc3\\\'\\xda\\xdan\\x1eL\\xd5\\x93\\xef\\x92\\xb5\\xea\\x85s\\xa93\\xae\\xe6\\xc4\\xaa\\x99\\xea\\x86!\\x07TP\\xfawO\\xee\\xc6\\xbf\\xa5\\x93\\xccP\\xa34_;\\xbd\\x8el\\xfd\\xa6\\xd6\\x80\\xee\\xbf\\x8f\\x16\\x17`j\\x81f\\x08\\xb4\\\\\\xef{\\x8do\\xc6RF\\x16i\\xf4i\\x98\\xaa\\xe9\\xa7\\xa4}\\xd7\\x9b:fH\\x8bv^\\xf8\\xec~\\xcdp\\x8d\\xb7\\x16\\x96\\x11\\xe1\\x0b:\\xf2\\x8c.+\\xb2\\xf5\\xd0\\x14:?~\\xb4\\xed\\xc5\\x93\\x1d\\x13\\x8f\\x19\\xb8\\xa9\\xbf\\x05\\xf8K\\xb0H\\x10\\xf3\\xd63#\\xea\\xd6\\x96\\x06\\x9d&|<\\x95\\xd4\\xf2\\xe4iB\\x13\\xf7g)\\xbbcn\\\'\\xa7\\xbc\\xeb\\xf8\\xab#\\x05\\x191I\\xf7\\xd6iTb\\x1a\\xa7\\x12\\xab$R\\xa6\\xa9\\xeb\\xf4\\x05\\xd6\\x92\\x19\\xc9\\x83x\\xf8\\x8bX\\xd2\\xebL\\x17\\xc7]\\xed\\xda\\x89J\\xf2\\xc9\\x1d\\x0c\\xe8\\xc4s\\x87\\xc5\\xe9L\\x12\\xe5\\xa8\\x8c\\xb4\\xad\\xa4\\x8cm\\xba7\\xb4\\xb2B\\xfa\\xf7\\x08\\x9d\\xad\\xe1\\xf3Q\\x8e\\x0cE}\\x08\\x9c\\x83\\x0f\\x93\\\\%\\x81?\\xba\\xda\\x9d\\xf1\\x9f;\\xa6\\x13\\x85I\\xe5C\\xb99\\xfc\\x1cV(\\x0e\\x9c,\\x94\\xd1\\x88\\xd0\\x8e\\xec\\xc3Z2[\\x05\\x8eX\\xf67\\xdb\\x88\\xbc\\x8as\\xedy\\x9ex\\xea}*s\\xe0t<\\x90\\x8f\\t\\xc7P\\xd3\\xd5\\xf4?\\xcb \\x08]\\xdf|\\xdb\\x82oX\\xf4\\xe8(\\xfdl2\\x95\\x87\\xc9`\\xda!e\\xef\\xf5\\x8dJ\\x8fUv\\xf5m!\\x14\\xbd\\x96\\xc5\\xfb\\x95q\\xd6\\x88\\x94\\xe4\\xc6\\xa1\\xa5\\xfe\\xb1\\xc1\\xc7\\r\\x899z\\x174\\xfb\\xce\\xe8\\x0b\\x9f\\xb7\\x19\\xc3\\xd6_\\xa1>\\x143t_\\xc4\\xe8\\x81z\\x1d\\xd7u\\xac\\xf6Ou\\xec?5\\x8d\\xbc\\x95\\xab\\x14\\x0b/\\xaeU\\x0c\\xcc\\xba\\xda\\xc9<\\x9c\\x1a\\n\\xf7iW\\xf0\\xf2z\\\'\\x1b`\\xd4\\xafl-\\xd6z\\xbb;td\\xbf\\xba\\x17\\x90vQ\\x857I\\xb7f\\x8a\\xa4\\xfa\\x16\\xa1\\xedN\\x11]\\x00\\xfd\\x14\\xc6AQ\\xf8\\x9d\\xdb\\x8a\\x87\\x86\\xd8\\xdd\\xc2Z\\xbc\\xb9\\xab\\xb7\\xa8\\xa5\\xca\\x07\\xecj\\xa3rwo\\xee\\xea\\xed\\x9b\\xb1P5\\x0c\\xd6{\\x17\\xb3S\\x1f\\xeb\\xba{^\\x93\\xefT=\\x97\\xb16\\x17#\\xe7\\xcaI\\x9eAD\\xe8\\xdf\\x00\\x98M\\xf5\\x17?F"\\xfa\\xcf\\xca\\xcf\\x1d\\xd1W\\xec\\xb5%\\x18\\xdf~\\x84\\xdd\\xe5j\\xd3\\xab\\x074v\\xd2\\\'c\\xe4\\xac\\xc4\\xdb}\\x16\\x8a\\xac\\xd8Vl\\xf5\\xc5\\xba\\x03!%:\\x97\\x07\\x1a8\\xe9:c\\xff\\x88\\xa2\\xc6\\x8b\\xba\\xb0\\xfa\\xfetT\\xd1\\x0f\\xecC\\xf2\\xd4\\x9f:\\x97d`\\xd8\\x19@\\nij\\xfa\\xf8Q}V.\\xa5\\x7f\\x9b\\xbc\\x11?\\xc38\\x03/\\x98\\xd2}\\xfb\\xbdJ8\\xfd\\x9d\\xad\\xf5\\x17T|\\x95.!\\x83\\x1ai\\xd5+`aG\\xe9\\x99\\xed6\\x9a\\xf5\\x05\\xc5\\x9d\\xd6\\x0b\\x8b]\\xab.\\x0cE*\\xc6\\x8a(\\x11\\xa7\\xf0\\\\\\xc4\\xeb\\xe8;t*\\xc5\\x05\\x91T\\xf6\\x8f(\\xfa}\\xca{\\xe21\\xe6\\xa1M\\xcdn\\x80")\\xdc3A"Z\\x16\\xb9\\xfe\\x1d\\x02k[\\x9b:\\xeaW\\x16\\x00Z\\\\q=Ft\\xab\\xed\\xb1S\\x9f\\xa79\\x9ca\\xf4\\x11\\x12l\\x12\\x05d4\\\'\\xd9\\xf6\\x91\\x86\\xa2!StfIrA\\xd1\\x89\\xdckyZC\\xe6e\\x0f?<\\xf2\\x93\\x07^\\x0co\\x910\\x01v9\\x9c\\x02\\x8c\\xeb\\xef^\\x8dC\\xea\\xe9\\xdc*\\xf6yT\\xf9\\xed\\xd7\\x9f2\\xc4O1\\xb0\\xa8\\x8b\\xdd\\x95\\xebq&\\xca1\\t\\n?\\xcf\\x14$\\xd8t%\\xd0mt\\xb5\\xe3P5\\x17\\x1fU#\\xfb\\xf9\\xb9n_\\xb8\\x96\\xaf\\x9f\\x18bH\\x82\\x87Vo]&]W\\x9fJi\\\'\\x1f\\xf0~\\xa8D\\x81\\t\\x9d\\xcf0\\x96x\\xc8A6\\x11\\xfe\\xf6\\\\\\xabx\\xa0P4\\x8b\\x7f\\xe9kWzo?\\x85\\xaez5Da\\xb5$\\x06k\\xf0t\\x8c\\x95T\\xd2\\xf9`\\x83\\xa0Q\\x8c\\xb0\\xf4\\xadh\\xd3\\x1dz\\xf3\\xf5\\xb7\\xe3\\x8f\\x0c\\xbc\\x19\\x10\\x8d\\xdbr\\xd8\\x8d4:?fL&5&\\xe6\\xfd\\x81M/|\\x1f\\xe5\\xea)l\\x8fM\\xdf~\\x0e\\xae\\xdc\\xfc\\x91\\xa7\\x99\\xcb\\x84\\xed\\x85L5\\xbc}bk\\x11\\xb1\\xa2f`\\xcbh\\x94\\xe1(\\xb4\\xa7\\xde-\\xbc\\x9a;\\xcb>\\x01\\xd14 \\xb6-_\\x0cs\\xc9\\xe5n\\xaeX\\xa6[]&%s\\x0e\\\\m\\x11[\\x84\\xaf\\xb4\\xa9\\xeb\\xe8\\xe1x\\x90\\xc7\\xa5\\x90=t\\x1c\\xc7\\x11\\x9e\\x0c\\xd9\\xdf^)\\x0e\\xb8`I\\xfc\\x8a\\xa1\\x83w\\x8c\\xbb\\xf4\\xf0\\xf0\\xd3\\x1c\\xdf\\xf6\\xf1\\t6\\xe6\\xe9\\xca8\\x93\\x1a\\xdc\\xf2\\xdc\\x8f\\xc2\\xbb\\xee\\t\\x9fF\\xaea;w\\xca\\xa0\\x04)\\x95\\xf3\\x98q\\xa3\\x96=wlS\\x9a\\x83Wz\\xfbHi_\\xb0\\x9b~a\\x9d\\x03c\\xaf\\xa7\\xda\\xb1\\xf6\\x98\\xdd8\\xe7\\x8e\\x81\\xb9\\xe0j\\x9fl\\xb5\\x9f\\xa0}\\x9c\\x0c\\xd6\\x9b\\x881\\xba6\\xe3;\\x19\\xc7X\\x85\\x90\\xfd\\xdd\\xb9\\xabo-h\\xe2\\xd1\\xf2\\\\\\xd2\\\\rM\\xeb\\x9b\\xccg\\x8fS\\xf8\\xf6\\xfc\\xf2\\xad\\xf5\\x9c\\x92itf\\xc6+&\\x80\\x14\\xef=B{\\x0f7\\x11\\xe6\\x14\\x8e\\x07\\xf5\\xb5\\xda\\xc9\\x8d\\x06\\x83_\\xf8\\x13H\\xc8w\\xba\\tNm\\xcc\\x86\\xe6\\xc6\\xd6\\xdb:w\\x11^\\xec\\n\\x9f\\xdd\\xbd \\x14\\xdc#wm\\xcdqe=\\xa2\\x01\\xa6\\xdf\\xcc\\xd4\\xdaE\\xed\\x0fc\\xbfwZ\\x90\\xa6\\x12w\\x1dSW\\x90@\\x88s6(bn\\xf1\\xc2\\xd3\\xcf\\x8e\\x7f\\xe6\\x18\\xb5\\xfc(\\x1a\\xda?\\xb4\\x89\\x89\\xeaq~\\x94\\xc0\\xbb9\\xc1n\\t+\\x81\\xf9Q\\xe9Z\\x14K\\xea\\xae\\xdfL\\xc9\\x19\\\'\\xa7\\x97\\x87\\xbcL\\xe9\\x14\\xf2\\x97RE\\x80V\\xcbI\\xb1^\\x06\\xa5\\xf0\\xdb\\x10g\\xf3\\xae\\x8c+\\xe7\\xb3\\xc3\\xeb\\x99\\xe9u\\xd7\\xf5\\xd9\\x13\\x86\\xeb\\xb4\\xc6\\xce\\xe5\\x9f\\x12\\xbd\\x9a\\xe3c6\\xf6\\x1d\\xff\\x16|\\x07b\\xe0,c,3V\\xaa\\xec\\xb1Y\\xa7\\xf9\\xe2s\\xea\\x83</\\x89\\xedK\\xacQ\\x8f\\xec1ei\\xc9\\xcf\\x80\\xa6\\x9a\\x04\\xb2U-\\xbb\\x0e>\\xa1\\xf6\\xe3\\xdb\\x90H\\xf0\\xfa\\r6\\xdb\\\'_\\xeb\\x8a\\xd98)\\xac\\xea\\xaa\\xee>L\\xa2#\\x9a\\x8e\\r\\xd0\\xfe\\xeb\\xa7\\x06~\\xd1\\xf9\\xc4\\x0b\\x16\\x9f$\\xa7\\x93z]\\x9f$w\\x9e?\\n\\xbb\\x80\\xcd\\xfa\\x93\\x920\\x8f\\xf0#\\xae\\x8c\\x13_`L\\xbf8\\x10\\xe6\\xecw\\xd2mN\\xd5\\xc6\\xd5\\xb6\\xef\\x1b%m\\xd9L\\r\\xb9\\x99!\\xda\\x05\\n\\x9f5\\xf2\\x9b]\\xc65{\\x82ji\\x05X\\x0e\\xb0\\x14*v+\\x9b\\x06\\xcf \\x88g\\xab\\xafS]\\x931\\x15u\\xee\\xc4\\x17 \\xf2\\xc5s\\\'\\x96j\\xcd\\xbf\\x06#\\xfc$\\x12\\x9c\\x12\\xfa\\xe5v\\xc0N\\xf3y\\x99\\xcc?#\\x99\\xc0\\x04\\x94\\xe6X_\\x13\\xa3t\\x13I;\\x16~\\x82K\\xc8\\xcf\\x16\\x83<\\xeet\\x8a`\\xe7geZ\\xbd\\xfe\\x99\\xc9\\xd1\\xea7\\xcdL\\xfd\\xf8\\xfa\\xc5\\xa3/\\xf3\\xbb\\x98\\x1cZ/_\\x13\\x02E\\x84\\xe6\\x9d\\xbdc\\xfcO\\x9d\\xe2\\\'\\xe9\\xa7\\xb7%\\xb6\\x9b\\xd3\\xab\\xe37\\xb3\\xee\\x89\\xcdPX\\x9c)\\x99\\x9f\\xe3\\xa0o$5\\x84\\xb6\\xbc\\xd7\\xed^)\\x97\\xe4anN\\xbd6\\xa6\\x8cR\\xba\\xcf\\xf5\\xc9\\xc9R-\\xac\\x87\\r]8iK7\\xfa\\xb4\\x93\\x95\\xbb\\xc4/-S\\x94e\\\\\\xd6\\xc0\\x80\\x97L\\x92u\\xc8L\\x8b\\xad\\xcb<\\x8f\\xaa(eH9\\xce\\xbe\\xa2\\x8a\\xc7r\\x19\\xe7\\xaa\\xb2\\xba:F\\xb5\\xc8h\\xa7\\xa0$,\\xd6q\\xc4\\x0c\\x1c>^\\xd7\\xd5!YB\\x07\\x97\\x18\\x8c\\xc9\\xb0\\n8\\x88\\xac:\\xbamwb\\xf3\\x968cGR\\xe3.\\x193*R\\x966\\x96\\xea\\xf7g<\\x88\\xf8\\xa9z\\xeb\\xde?U\\xba0\\xc5#n\\x9a\\xb0\\xb1\\x9b\\xf5\\xfa|W\\xb5\\xe5\\x83j~\\xd8\\xd3\\xb4\\xb7\\xbc\\xfa%*\\xa6\\xed\\xe3\\xca*\\xf5\\xfe\\x13"\\x9ey\\xac|F8\\xca@R\\x03\\x81\\xc8\\xa5\\xf8\\xca:\\xc9\\xcb\\xfbKA\\xdc\\x11\\x08\\xae\\xed*\\xd3\\xf4\\x90\\xbc\\xecs\\xec\\xd0\\xe5jc\\xbb\\xae\\x1c+k\\x952oO\\xdc\\xc0^9-\\x17x}I\\xb2nu\\xc9\\xd4\\rtP5).\\xde7c\\x94C<\\xce\\x1f\\xb8zAe\\x1f\\xd1\\xfbS\\xdc\\x07\\x17\\x9f/\\xf7\\xee\\x91](KN-\\x9b&\\xde#\\xa8HT\\xafD\\xb7R\\xe0wk\\x86\\x87_\\xd71h\\x84\\x0b\\xdd\\x91\\xce\\xfd\\xf1\\xbdO\\x94\\xd2\\x9f\\xbe\\x8bI\\x0fK\\x18%\\xe8\\xab\\xba;\\xa5\\xc6\\x04\\xd9\\x8a\\xdb\\xe0g\\x010b\\x85\\xb1~\\xa3\\xc4\\xff,\\xcf\\x0c\\xa2\\xd2f\\x8a\\xb6\\xfb\\xa6R\\\'p\\\\\\xd5\\x9d\\x8d1\\x89k,Wc\\x05X\\xb53/\\xf9\\xd8\\xb1\\x1b\\xf3]#\\xa2\\xc4m8\\xeb\\x8c\\x8f|\\xd0\\xd6\\x97\\xee\\x1b\\xf7\\x1cEx\\x9a\\xa0\\x87\\x85$\\x96\\xf3Z\\xdd\\x8bm\\xa4\\xa96mG\\xadf\\xb9\\xd4\\x80x\\xcd\\xc0\\x0b\\x85\\x1c"\\xcf\\xbd\\x07\\x1eWVp\\x8f\\xb2\\xd6d\\x13gl}\\x00\\x1b\\xb4Z\\xc8%,\\x15\\xed>\\xec\\xec\\xe4\\x8c\\x96\\x9d\\xb2W&Q\\x85\\x95\\xab\\x97\\xc0\\xd4\\xc4\\x84\\xa8\\xa3@cEO_|\\x976\\xf4t\\xed\\x1aSvj%\\x04J4-Lk\\xe7\\x86\\xdfCV\\xe2\\x06\\xbd\\x0c\\xd9x>\\xdc9\\xc1\\xa7g[o*0:\\xc1.x\\x12-\\xb09\\xb3\\x886\\xe6}\\xe9\\xe3\\xcag\\rIp}6\\x1e\\x1e\\xb2\\xcfp\\xb1\\xc4\\xd0\\xcf\\\\m\\x9e\\x95\\xe5\\x9f=\\xc32r\\x1d\\xa1\\xfa\\xd9\\xc5`\\xf4\\xd9\\xeb\\xe9\\xb1\\r\\x9e\\xaa\\xe7\\xb6.\\xabl\\tO5\\xbc\\xec@W0\\xab\\x1b\\x83O1^\\xb4\\xf6t\\xcb\\xd8\\xc4\\xa3\\x92\\xc8E\\xb9\\xe6\\xda=\\xf3\\x17\\x86\\xc9?/\\x0b\\xf9M\\xcd\\\\\\xa9u\\xb7\\x1f\\x93T[w\\x07\\x949\\xa7\\x10\\xbc\\xads\\xc8\\xca\\x88\\xb5\\x89s\\x0fL\\xdf\\xd8\\x91\\xb1\\xd0\\xcd\\x1e\\xe48\\xe4.\\xbf\\xb6\\xddU\\xc7\\\'h\\x15!\\x0e~\\x9e3\\xc1\\x18#f\\xef\\x84\\xf7\\x0e\\xa3k\\xa6\\xc2\\xdad\\x01\\xd88=\\x15\\xb9\\x97#XD6\\xae\\xcc1fj\\xd9\\xcbO\\x89T#0\\x05\\xa4s4\\x11\\xef\\xf9\\x17\\xe4k\\xfe\\xc0\\xaa\\x99I\\xda\\xea&+\\x17\\xb2`N`\\x90=M\\xd6z\\x99\\xf0\\xd9t\\x16D\\xa2\\xfaR\\xaa:\\xdc\\xa7H`y\\x1d\\xdc\\xd5\\xb0\\xc5\\xa0\\x90Y\\x9b\\xbe\\x18\\xbe7\\xba\\xa8E\\x06\\x0ekS\\x01I\\xad\\xd5\\x12I#\\xe6\\x0c\\x1fa\\x91<\\xc3zE\\xb08\\x03\\xe2\\xb1mH\\xc1\\x88\\xeb#{\\x1a-Qb\\xb5\\xf7\\xba\\xa7\\x9cb3\\xfb\\xee\\x14FAK\\x82\\x8cw\\xc8\\x18\\xef7\\xf6meURG;\\x19W\\xbaw\\x97\\xba\\xf4\\x9b\\xf8>\\xc3\\xfeR\\x8f\\xa55\\xf7_\\x98="\\x18\\x0f&\\xf9\\xf2\\xe0\\xb1\\xb9\\xfa\\x05\\xff =c\\x05\\xf3M\\xfc\\xcd\\x80\\x97\\xea\\x87\\xbd\\xf2\\xb5\\x1e\\xf4\\x93;\\xf5!\\x96L\\xa3\\xfd\\x9c\\x84\\x1aI\\x1f\\x14\\x1f\\xf3b(<\\xb0K\\x0eP\\xf4|\\xcb\\xb7\\x8d\\xbd\\xb8l\\x1a\\xd3\\xdb\\x13\\xa0\\x9e\\xbb\\xec\\\'\\x18L\\xda>}\\xf0\\xb2\\xeaC\\xf7"\\xdf\\xcc\\x85{J\\xe7\\xeb[\\xf4\\xf3\\x0f\\xfci}=O\\x05\\x19\\xa06\\xbc@\\xa5c\\xa5\\xee\\xbd^U\\x95\\x04\\xef\\xc1\\xa0\\xb1\\xa6\\x01P\\xc8\\x93\\xc4\\x83f\\xd1!\\x13\\xf2\\xb1\\x9ds|\\xea\\xadF\\xb1 Sd\\xc5\\xc6\\xcd\\xcb$1\\xb7\\xd3\\xf3\\xf9@c\\xe5\\xf8\\xe5ga/&\\x83\\xa1\\xc1\\x9e\\x15\\xa7\\x07M\\xd9q\\xe2 \\xeb5\\xdb\\xe0fI\\x97\\xfbG\\xb91m~)\\xed\\xdc\\xc8\\x18\\xabpj\\x90\\x0e\\x086\\xc5\\x86/\\x95\\xa7\\x14(1\\xbd\\xa9n\\xa5\\xa5\\xe4\\xfdUc+\\xd9%\\xfa \\x82\\xcf\\xb7s/\\x1enM{\\x9fD\\x07\\x96\\xaf4\\xe3\\x16\\xc8\\xae\\xc5\\xfeU\\x8b\\xd3#\\x81\\x1dm\\x03\\xb3\\xe3\\xeb\\xf2)\\x98,o\\xf1\\xae\\x88~\\xdb<6\\x1a\\rm\\x93s@\\xb9\\x9f\\n\\xff.\\xab\\xfcD\\xf0R>\\x19\\x9c<\\xfaR\\x93\\x1a\\x03\\xa2p\\x0f\\xb8RpB\\xdb\\xf2,\\xa61!?\\x16\\xa9\\r\\xfa\\xee:B\\x88f\\x06\\xbe\\xe5=\\x90\\xeb\\x06\\xd3\\xb9\\x90\\x93\\xac\\xea\\x89>k\\x0f\\x11\\xb7e\\xba\\xfd \\x0c\\xd1Gc\\xcb{\\xf7\\xe6\\xa2p\\xddvn\\xbcm\\xb0\\xdfD\\x8e\\xcfP\\x7f\\xef\\xf8\\xe85S\\x0c\\x05Z\\xd9fz\\xad*\\xf8\\xb9\\xb4c\\xf4\\xce\\xc3\\xe9/U&\\xb4\\x88\\x1f\\x8f\\\'&\\xad\\x9d\\xbe\\x7fZ\\xfd\\x8c\\xfc\\xec\\xa9\\\'\\xf4\\x1dn\\xfb\\xf2\\xfa\\x8eh\\xf1\\xb2\\xd0ct\\xde\\x8d\\xf2\\x0e\\xe2\\x1f\\rL\\x02\\x1ds\\xc31\\xcbb\\xc2\\xedZ7\\xda\\x87Y+t@.Y\\xae0e\\xb5&\\x91PuR\\xb3\\xc9\\x07\\x03\\x9eo\\x9e\\xd0\\xfa\\xbc\\xe3:\\xfe\\x91U\\x98\\xda3\\xb2.uog\\xdd\\x93\\xa3*\\x89UOq\\xbe\\x13\\xe0\\x04\\xd7E\\xb2\\xc5?|\\xdc\\xd6\\x8b\\xdfK\\xeb5\\x81vN\\xb2\\xcc\\\'yu|\\x9a\\x19\\xbb\\x10\\x11A|\\xfb\\x00\\xb2\\xb6\\xe1\\xc9\\xe8Y\\xa3R2\\xb0!\\x04z\\x9f\\xc1\\xf5\\xecFo\\\'\\xdb;\\x9d\\xab\\xd4\\xc5\\x1aO\\xe4\\x1cM\\xf9Rt3I\\xae\\xd2wSh%`\\x81\\xady\\xbcF\\xe5\\xa4\\xac\\tjr\\xfb\\xb6\\xe0\\xd6y\\xe0cYM\\xcb\\xcbt\\xbd\\xe2\\x08F\\x1d_\\xcb\\xe7\\xe7\\x84\\x87\\xe3\\xaf`\\xa7!dz\\xb3\\x9f\\x80\\x0c\\xac\\xa6\\xb8\\xe3\\xde\\xa5\\xd9\\n\\xe2\\xcb]\\xa2\\x85\\xf6\\xfeior\\xb5\\xf6\\x8f\\x91j\\x07v"zW\\xb9><|\\xb9\\x1d\\x8fY\\x1d\\xdbp*\\xa2\\x12o\\xc6U%\\xe7\\xdf\\x1e`\\x1e\\t_KzQ(\\x9a|\\x97\\x07\\xd1\\xebnd\\x08\\x96\\xfa?\\x871w\\x13\\xda\\xba\\xb79\\x1a\\xf9\\x80"\\xd5\\x16\\xc5n\\xd2\\x97d\\x88\\xed\\xb6\\xfdw<\\xa7\\xc6K:J2\\xcd\\xe5+\\x92^\\x07a\\n\\xc4\\x07H\\\\)\\x1e\\x88\\xde\\x1f\\xce\\x9az)\\xcd\\x1c\\x9f\\xbc\\xffzmeP&]j%\\x82\\xd60\\x18\\x9c;\\xa6\\xab\\xb0\\xbed\\xf6\\xb9\\xeaRM\\xf7\\xed\\xf1\\xe8\\xd3 \\x13\\xac\\x97\\xad2dh.\\xde\\xb2\\xe3\\t\\xb2\\x15\\xc3\\xd40a\\x19j\\xd6\\xc02\\xa7\\xeb\\xe0\\x8b\\xe5\\x0c\\xe1o\\x068625\\x93\\x1b\\xef\\xf1)\\xa2^\\xf9\\xaf\\xc5\\x9b\\xbf\\xe7)\\x93\\xe8\\x10s\\x86M\\x0f\\x0f-\\x9dJ\\xbc\\xde\\x196q\\xc7\\x17\\xfd:H,\\xd9\\x1f_o\\x13EV\\xbe\\x19\\t\\xa0\\xbe\\xf8\\xa8f\\x8f\\xa6\\xe55F|L\\xe8*%;`y\\xa3\\x9513\\x9bwg\\xc1\\xa5\\xf4-\\xfb\\x8a2=\\xd2\\xdd\\xaa\\xd9\\xacC+3Yv\\\\\\xb9\\xff[\\\'\\xba\\xe39\\xe6E\\x8a]\\x81\\x15?\\x90!H\\x85\\xb1\\x9c\\x83\\xb27\\xe9\\xf6\\x8d_\\x04\\xbe6H\\x10\\x91\\xa6\\xdf\\xf0T\\xe9\\xb9\\xc5T\\xa6dj\\xd4\\x8b\\xbe\\xe1sGI\\x99\\\'W\\x8bG\\xe9t5lx\\xa6\\x8e]\\xde\\x17\\x90\\x9a\\x93\\xca\\xb4:\\xc9\\xb3\\xb1\\xcd\\xfd7\\xcb\\xc4,\\x1815\\x1aJ\\xe3\\x1e\\xd0PG\\x1c\\xa7\\xbe\\xa9\\xe1\\x0cJ(\\xf8\\xa2\\xe9\\xe2Ls\\x198a\\xd4\\xbe\\xe4\\x1dO\\xc1X9Z\\xa8K\\x06\\xfd^t\\xcf\\xebDCj7\\xa7\\xcbTHj\\x13\\x88dxV\\xb4v|_}\\xc00\\xc7\\xa4\\xbc\\xefc\\xf9\\x81\\x19pg\\x93|c\\xe8\\xee\\xb2QpZ~\\x8d"\\xc5\\x8c\\x93\\xf5\\xd3L\\x02r\\n.[\\xa2\\xdb\\x1f\\xb8iER\\xc0\\x9aG\\x18h\\xb6\\xcf)3\\xd1K\\x8f\\xc8#\\x13\\xda\\xe9\\xf3\\x1a\\xf3M\\x07\\xb3m\\xe9\\xd2\\xb1m5\\x90vbu\\xd5%{\\x0b!\\t\\xa3\\xec\\x96\\xf5G\\xfe]\\xcd\\xc6\\xe6\\xe0\\xeb\\x92\\xca\\x1d\\x82\\xc9\\x91\\x8b\\xc5b\\x9d\\xb0\\xaf\\xd7\\x9c&\\xc1\\xe6\\x11\\t\\xc1\\x0b\\x06\\xb7\\xbd}a\\xd8$/\\xe8\\x8d\\x1b7a\\xb0\\x9c\\x13\\x17\\xacf&+i\\xc2W\\x8c\\xa4\\x1b\\xc8/\\x97,\\x97\\xb3K\\x1c\\xef)\\x04\\xe6v\\xfc\\xc7\\xd1\\xc3\\xa7\\xd0\\x18H\\xc3\\x9c\\x03\\xbf\\xe03\\xbe\\x05\\x11\\xa8\\xfb/A\\n\\xaf\\xe0\\xcb\\x12\\x9d\\xf8\\x02\\xad\\xa4\\x8eM\\xa2?\\x902\\x94\\xae\\xf7\\x0e^~`\\x98[\\xc3+\\xde\\x9fv\\xc1i\\xc9\\xda`\\xa9f\\x88\\x0b\\xc9\\xb7R\\xc9\\xce/\\x8f\\xaf\\xd7\\xf2\\xb7\\xbb\\x94\\xd5J\\x17!zRG\\xd4i\\xac\\xd5w\\xf4\\xee\\xdd\\xc7\\xa1\\x0f\\xf9\\xc3+\\x19\\x8eF,Ld-\\xe0\\xba\\x96\\xde\\xd6\\xf3\\xf2\\x84\\xce\\x9a\\xf3\\x03k\\xb7\\xc0\\x15Y\\xa78\\xd5$n\\xc2\\xa4\\xd2{\\xae\\x86\\xce\\xad^*\\xbd\\xe9\\xc8\\xf3U\\xcd\\xfe\\xf9\\xf8>-\\xa4\\x0b\\x8e\\x91\\x14\\xe1^s\\x18F\\xf6n\\x91\\x1a\\xbc\\x02s@\\x7f\\xd9\\xf9\\x00\\xed\\x8d \\xff@\\xa5\\xda\\xc3\\x9ecZ<\\\'\\xae\\x91Zg\\xa1U\\x8c\\x9e\\xebjN\\xca\\x9cg\\xc9\\xb8\\xdfH\\xd0\\x9f-\\xb0~x\\xb0d\\xfe>7\\xd2\\x07/I\\xd0\\x08@\\x18\\xd5O;kF\\xf6\\x9d\\x7f\\x00\\xb8\\xd7\\x1f,\\x9d\\x88\\x80\\xa47\\xd3\\xb4i\\xab\\xa5\\xc9\\xe8\\xcad\\xbd\\xb2~\\x93\\xbe\\xe7\\xb5\\xbb\\x9b\\xe8\\x7fM[\\xa7#)\\xe3\\x9bU@}\\xf6%\\xd4\\xd9P\\x9e\\x81x\\xc8\\x12\\x0f\\x17\\xbc\\xf0\\xbc\\\'\\xf3\\\\s\\xfcH\\xed\\xfe\\x0b?-\\xb7\\\'\\xfcS\\xdf\\t8\\xdb.\\xcd\\xc6\\xc6\\x1e\\x87ls\\xde\\xd5\\x906&\\xf0\\xd0\\xdee\\xb4\\x1c\\xf5\\xa1ytW\\xa4\\xbbsC\\xbc\\x84Q\\x03Gh\\xadt\\xb4,\\x02S\\xe9\\xbc6c?\\x8d\\xc1\\x1ek\\xe5\\x11[\\xc2xz,A\\xa6O7\\x8d\\x07[X\\xbe\\xd9\\x88\\x02bO\\x1f\\xf91\\xe50l\\x88EDu\\xea@g\\xb5d\\xb0\\xb9A\\xe4\\xe3\\xfb\\\'\\xe2\\xe8\\x1b4h\\xaf2\\xf0\\xfd\\\\\\xfb\\x9a\\x7f\\x06\\xa4k\\xbc!\\x83:`\\xf7\\x7fpO\\xfb\\x9e\\\\[F\\x03\\xec\\x1cOj<-\\n\\xadd\\x10\\x9b\\xa7\\x8b\\xf4\\xdb\\x8a)\\xcbX\\x1e\\x959\\x94&\\x83f\\x12\\xd5\\xb1\\xd7]dt\\xbdC\\xc3\\xef*#\\xddd\\xa8\\x18 \\x89\\x15N\\xcc\\n\\xd2\\xdc\\x1d\\xf3\\xaf*bh|Pl\\x82+.:\\xa3\\x93\\x12c\\x10\\x88K\\xc6\\xa6\\xe6\\xadz\\x18^\\xf1\\xb8\\x17`\\x1e\\x843\\xd5\\x1a\\xcf\\xf6\\x1c\\xe7\\x95\\xb3kG\\x81\\xe6$\\xc1\\xdc\\x96\\xa1\\xaa[\\\\tI\\xdb\\x0en\\xc5\\xfb\\xdc\\xc33\\xa0J~G5\\xc74\\xfeL\\n5\\xe6C\\x1a\\xaf\\xe8\\xfe\\x04\\t\\x8e\\xda\\xce7\\x0c\\x18\\x92\\x89\\xa5;\\xad_\\xa3\\x8b\\x0c\\xb8\\x0e\\xc34\\x07\\x93m\\xe9Tr&\\xc4f\\xed\\xa9\\xcca\\xaa\\x8d\\r\\x83l\\xed\\xe3\\x0f\\xd9\\xfd@\\xee\\xea\\x1a\\xe1pqw\\xc3\\xe1\\x84m\\x13~\\x9b6lR\\x9c\\xc3\\\'z\\xc2\\xdcw\\x89\\xf99{\\xdc?d\\xac\\xb2\\xc4\\xd9\\x1bW\\xe3\\xe4\\xaf\\xc05Eo\\x85\\x05\\xda\\xe3\\xac\\x84\\xa2H@Q%\\xd7\\xa6\\xbd&)\\xdd\\x8a\\xc4\\xe3I-b\\xcfl\\x84k/=\\x0c\\xd5\\xa4\\x16\\xe9GD\\x13nX\\xda\\xb4g\\xd0w\\xc3|c&fsT\\x17\\x04Vu\\xa3S\\x95\\xa3N.\\x07\\xda\\x15\\x8d\\xbb+\\xa9\\xdc\\xb5\\xfe\\x0f\\x7fQ\\r?\\nendstream\\nendobj\\n13 0 obj\\n<< /Filter /FlateDecode /Length1 2089 /Length2 13559 /Length3 0 /Length 14840 >>\\nstream\\nx\\x9c\\x8d\\xf7\\x05P\\\\\\xdb\\xd6\\x05\\n\\xe3\\x0e\\xc1]\\x1awwww\\x0b\\x16\\x9c\\x06\\x9a\\xe0\\xee\\xc1\\xdd\\xdd\\x82\\x07w\\xb7\\xe0\\xee\\xee\\x04w\\\'!h\\xe0\\x91s\\xcf=9\\xf7\\xfb\\xff\\xaa\\xf7\\xaa\\xab\\xba\\xf7\\x98>\\xe6\\x9as\\xedjJR\\x15uFQ3;\\x13\\xa0\\x94\\x9d\\xad3#+\\x13\\x0b\\x1f@\\\\QC\\x83\\x95\\x05\\xc0\\xc2\\xc2\\xce\\xc4\\xc2\\xc2\\x86@I\\xa9\\x01r\\xb6\\x06\\xfeW\\x8e@\\xf9\\x1e\\xe8\\xe8\\x04\\xb2\\xb3\\xe5\\xfb\\x97\\x85\\xb8#\\xd0\\xd8\\xf9M&a\\xec\\xfcf\\xa8hg\\x0b\\x90s\\xb1\\x06\\xb0\\xb2\\x03X\\xb9\\xf8X\\xb9\\xf9XX\\x00l,,\\xbc\\xff5\\xb4s\\xe4\\x03H\\x18\\xbb\\x82\\xcc\\x00\\x8aL\\x009;[\\xa0\\x13\\x02\\xa5\\xb8\\x9d\\xbd\\x87#\\xc8\\xc2\\xd2\\xf9-\\xcf\\x7f\\x1f\\x014\\xa6\\xb4\\x00V^^n\\x86\\xbf\\xdc\\x01\\xa26@G\\x90\\xa9\\xb1-@\\xd1\\xd8\\xd9\\x12h\\xf3\\x96\\xd1\\xd4\\xd8\\x1a\\xa0ng\\n\\x02:{\\xfcO\\x08\\x1a\\x01Kgg{>ff777&c\\x1b\\\'&;G\\x0b!Z\\x06\\x80\\x1b\\xc8\\xd9\\x12\\xa0\\x06t\\x02:\\xba\\x02\\xcd\\x00\\xbf)\\x03\\x94\\x8cm\\x80\\x7fScB\\xa0\\x04hX\\x82\\x9c\\xfe\\xa3P\\xb73wv3v\\x04\\x02\\xde\\x04\\xd6 S\\xa0\\xad\\xd3\\x9b\\x8b\\x8b\\xad\\x19\\xd0\\x11\\xf0\\x96\\x1d\\xa0.\\xab\\x00P\\xb6\\x07\\xda\\xfe\\xc7X\\xe1?\\x06\\x0c\\x80\\xbf\\x9b\\x03`eb\\xfd\\\'\\xdc\\xdf\\xde\\xbf\\x03\\x81l\\xffr665\\xb5\\xb3\\xb17\\xb6\\xf5\\x00\\xd9Z\\x00\\xccA\\xd6@\\x80\\xb2\\x94\\x02\\x93\\xb3\\xbb3\\x03\\xc0\\xd8\\xd6\\xec\\xb7\\xa1\\xb1\\xb5\\x93\\xdd\\x9b\\xbf\\xb1\\xab1\\xc8\\xda\\xd8\\xe4\\xcd\\xe0\\xaf\\xd2\\x8d\\x01R\\xa2\\xaa\\x00\\xe37\\x86\\x7f\\xf3s2u\\x04\\xd9;;19\\x81\\xac\\x7fsd\\xfe\\x1d\\xe6\\xad\\xcd\\x92\\xb6f\\xe2v66@[g\\\'\\x84\\xdf\\xf5I\\x80\\x1c\\x81\\xa6o}\\xf7`\\xfe\\xfbp?\\xda\\xda\\xb9\\xd9z\\xfd\\x17\\x99\\x83l\\xcd\\xcc\\x7f\\xd30s\\xb1g\\xd6\\xb4\\x059\\xb8\\x00e%\\xfe\\xb6y\\x13!\\xfc\\x91Y\\x00\\x9d\\x01\\x9c,,,<\\xecl\\x00\\xa0\\x03\\x00\\xe8nj\\xc9\\xfc;\\x81\\x86\\x87=\\xf0/%\\xebo\\xf1\\x1b\\x07\\x1f/{;{\\x80\\xf9\\x1b\\r\\xa0\\x0f\\xc8\\x1c\\xf8\\xf6\\x83\\xe0\\xe5d\\xec\\n\\x048;\\xba\\x00}\\xbc\\xfe\\xad\\xf8_\\x84\\xc0\\xca\\n0\\x03\\x99:\\x03L\\x80\\x16 [\\x84?\\xd1\\xdf\\xc4@\\xf3\\xff\\xe0\\xb7\\xf3w\\x04\\xb9\\x03\\xf4X\\xde\\xc6\\x8f\\x15\\xc0\\xf2\\xfb\\xf3\\xcf\\x93\\xfe\\xdb\\x84\\x99\\xd9\\xd9Z{\\xfc1\\xff\\xeb\\x88\\x99\\xc5\\x14%$\\xb4%\\xe9\\xff\\xa6\\xfc\\x8fRL\\xcc\\xce\\x1d\\xe0\\xc5\\xc8\\x01`dcg\\x07p\\xb2s\\x03\\xb8x\\xb9\\x00>\\xff\\x1bE\\xc5\\x18\\xf4w\\x15\\xff\\xf2\\x94\\xb55\\xb7\\x03\\xf0\\xfe\\xa7\\xd8\\xb7.\\xfd\\xb7`\\xd7\\xbf\\\'\\x80\\xe6\\xef\\xf5\\xa0\\x05\\xfco,%\\xbb\\xb7\\xb9\\x05\\x02h\\xfe\\x8c\\xf9\\x07\\x16N\\x16\\xd3\\xb7/\\xd6\\xff\\xcf\\xc3\\xfe\\x97\\xcb\\xff\\xbf\\x19\\xff\\x1d\\xe5\\xffu\\xcc\\xffoER.\\xd6\\xd6\\x7f\\xe9i\\xfec\\xf0\\xff\\xa37\\xb6\\x01Y{\\xfcm\\xf16\\xb7.\\xceo;\\xa0h\\xf7\\xb6\\t\\xb6\\xff\\xd7T\\x0b\\xf8\\x9f\\xc5U\\x04\\x9a\\x81\\\\l\\xfe\\xafV\\xd6\\xd9\\xf8m\\x17Dm-\\xac\\xffi$\\xc8I\\n\\xe4\\x0e4S\\x019\\x9bZ\\xfe5\\x1b\\xff\\x11k\\xfe\\xde3k\\x90-P\\xc5\\xce\\t\\xf4\\xfbf\\x010\\xb2\\xb2\\xb0\\xfc\\x1f\\xdd\\xdbr\\x99~|\\xbb=\\x9c\\xdeF\\xf2/\\x15\\xf0mw\\xfe7\\xa3\\xa4\\xad\\xa9\\x9d\\xd9\\xef%c\\xe3\\xe4\\x02\\x18;:\\x1a{ \\xb0\\xbcM\\x12\\x1b\\\'\\\'\\xc0\\x8b\\xf5m\\x1b\\xcd\\x80\\xee\\x7f\\r1\\x80\\x99\\xc9\\xd6\\xce\\xf9\\xcd\\x05\\xf0\\xc6\\xce\\x07`n\\xe7\\x88\\xf0\\xfbH\\xb98\\x01\\xcc\\xa2\\xbfE\\xffA\\\\oS\\xf4\\x0f\\xe2f\\x070\\xcb\\xfeAo:\\x85\\x7f\\x10\\x0f\\x0b\\x80Y\\xe5\\x0fz\\xb3T\\xff\\x838\\x00\\xcc\\x1a\\xff ^n\\x00\\xb3\\xf1\\x1f\\xf4\\xa63v2\\x05\\x81LA\\x8e\\xa6.6\\xff\\xc89\\xd8~\\xcb\\xdf\\xda\\x0er\\xfa\\xf8\\xc7\\x98\\x07\\xc0l\\xf2\\x07\\xf1\\x02\\x98M\\xffA\\x9co:S;\\xeb\\xb7\\xbe\\xfd\\x13\\x82\\xe3\\xb7\\xc4\\xc6\\xe6O\\xb2\\xdf\\re6\\xfb\\x17d\\x050\\x03\\xff\\x90\\xfd\\x8d\\x1c\\\\\\xdef\\xee\\x8f\\xc1[\\x15\\xe6\\xff\\x82o\\xb4,\\xfe\\x05\\xdf\\x12X\\xfeI\\xf7\\xd69K\\x0f{K\\xa0\\xed\\xbf,\\xded\\xa0\\x7f\\xc17\\xea\\x1f\\xff\\x05\\xdfJ\\xfew\\xb27>\\x7f\\x1a\\xc0\\xfa\\xb6\\xb2\\xcc\\xff\\n\\xf5vI0\\xdb\\xfdI\\xf6f\\xfb\\xf6\\x1a\\xf9\\x97\\xfa\\xadR\\xfb?\\xea7_\\xfb\\xb7\\x9b\\xdc\\xd6\\x1ah\\xee\\xfcG\\xca\\xfa\\xb7\\xf4?K\\xf8\\x8f\\xf8\\xed \\xed\\xdf\\x1am\\xf7\\xa73\\x1coD\\xed\\xad]\\x9c\\xfe\\x11\\xb0\\xbf\\xe5sp\\xb1\\xfb}\\x1e\\xffvee}k\\x81\\xe3\\xbf\\xe0\\x1b\\xdf?N\\x1cot\\x9d\\xac\\x8d\\x9d,\\xffe\\xf0\\x96\\xeb\\x8f\\xfb\\xdb\\x103;\\xbb\\xd9\\xfdK\\xfd\\xe6\\xe1\\xf2\\xe7\\x80\\xdf\\xa2\\xfd\\xf5\\xfaq2\\xb5s\\xfc7\\xd7\\xb7\\xbe\\xb9\\xfe\\x0b\\xbe\\xd5\\xe6\\xf6\\x07\\xb2\\xbd\\x05u\\xff\\x17|#\\xed\\xf1\\x17\\xfc\\x9f=1uq|k\\x84\\xf3_W\\xd9\\xdb\\x12\\xfd\\x17\\xff\\xf5f\\x02\\x02\\xdd\\x81\\xa6\\x08+\\x8bv\\xa6\\xfcAVuA\\x1d\\xf75\\xa2\\x04n\\x8c\\xfb\\x93\\x82s\\x94\\xfbZi\\xb4\\x8c^+\\x8e_]\\x1eQ`\\x93i\\xab\\xb3\\x026\\x1d\\x7f\\x8a&\\x8f\\xf4\\xa2\\xae\\xefJ\\xd2\\xdc\\x8a\\xac\\x92\\xfc\\xf2:mm\\x80\\rmKTm\\x7f\\xf2~6\\x8cW\\x9b\\xd9oGX\\x9e\\xc6\\x1e\\x9c*<\\x15\\xad\\x1f \\x82\\\'d\\xd4\\x109\\xf0\\xfe\\xe5\\xe0\\xfd\\xde\\xff#d+x\\x97\\x1ce\\xae\\x83\\x0b\\x0f\\x8aJ>\\xc6\\xbd[\\xbf\\xb4{\\xfd@\\xd9\\xdax\\xc8\\xe2\\xbe\\xeaA5\\x97<\\xe2s\\xd9,c\\xb4f\\xd4\\x07\\xff\\xe2y\\xca<\\x93\\xcf\\x0b\\xb8d0\\xce\\x8cDpt\\xe8W\\xee\\xef\\xe6o\\x7f\\xce\\xa1\\xe7L\\xbd\\x92\\xc8\\xc5\\xd3#\\xf8\\x9cE\\xb3\\x7f\\xf1\\xd2\\xddb\\x8byX\\xf0\\xdc\\xa8\\xd0`s\\xea\\xc6\\xa3\\xc0\\xd3\\xc5%\\x82\\xbcE\\x1f\\x9f\\xa1\\xf2\\x12;J\\x91\\xc3Y\\xf2*)\\x8a\\xda\\x14\\\\\\xcaf\\xa1e\\x02\\xdb\\x1c\\x1f \\xf1\\x1e\\xeb"=\\xe7\\xd3S\\x90E\\xc7a\\xb1v\\\\\\xe1\\x95\\x1e\\xa7\\xf0i\\xafg\\xf6\\xd7\\xeeC\\x82\\xcf\\xdaW7\\xb2\\xa7\\xab\\xb3?EY\\xc2\\xa57ws\\x93\\x92\\xceWn)\\xea78\\x18\\x0e\\x85\\xbf\\x0bs\\xa47St\\x8d\\x85U\\xf2\\xf0:\\xd8^\\x81\\xba\\xd59\\xbd\\x95?=\\xaf\\x9b\\xd2\\xf3\\x1c\\xd53\\xdf\\x81G\\xd8\\xc1Zo\\x16\\xdb\\x90\\xf8\\x15\\xea\\xe0\\x83\\xa9\\x08C\\xf8\\xe3\\x80\\xa7\\xdb\\xbb\\xd0*\\xb3\\x94\\xa2\\xd6\\xab\\xcfj\\xea\\xcc~\\xce\\xfd\\xc0]\\xfd\\xeb`\\xb9\\xe4\\x85\\x0b\\n\\x02lar\\xfa;T\\x8c\\xc2\\x8c&n\\xca\\x91\\xf8\\xdbZ\\x0c\\x8e\\x0f\\xf0\\xd5\\xbc\\xed&`\\xf0\\x1fzh\\xf5F\\xf0V\\xa54\\xd7\\x98\\x1c\\xae\\x0f^8\\xce\\xf3\\xc6u\\xd3x\\xe4\\x9f<\\xdd\\xdc\\x08\\x1b=\\xac\\x93\\xa6\\x8ad9M\\xd0\\x9bI\\xacL\\xe3\\xcfu\\xb1* P\\xd2#\\x18\\x12\\xb9s\\n\\x17G\\xca\\xe4k\\xf9\\xee\\xc9E\\xe4\\xd6\\xcc\\xaaDf\\xda\\xa5\\xce\\xc0\\\'\\x14C\\x0f\\xefz\\x0c\\xcb\\xf2\\x9e\\xcc\\xd0\\xc8-\\xe8\\xeb\\x1eO\\x05\\x9b\\x8f\\x84N#\\xa0\\xe6u?\\x87\\x1a\\x7fjiN\\xd5"\\x8cP\\xba\\xc5\\x8c\\x90\\xe1\\xd4a^\\xdd\\x15\\xd0\\xad\\x1b,<*\\xcc\\x0b\\x1dH\\x04\\xc7&\\x90\\x9c\\xf8\\xa276I\\x95\\x1b-\\x8b\\xd8\\xcbq\\xb4p\\xf7\\x139j\\x0f&\\xe5\\x1d\\xae\\xa5\\xfdG\\xf3\\xe60%\\xbd\\xca,Jl\\xb1\\xe7\\x91\\xd1\\x9bj\\xa9^a\\x0b\\xb5t\\xf9\\xd2z\\xfd\\xf0\\x898\\x01\\xf59\\x95\\x80\\x96\\xee\\xd7w\\xb1\\x15_\\x04o\\xcbv\\xf4\\xc6\\t\\xfb\\x12W\\xf4k\\xc8}\\xd3\\xc6u\\xe7zt\\x97=F\\xdd\\x87\\xab\\xa3\\xeaBk\\x87\\xfc\\xb5\\xa8$\\xf4\\xe2\\xe7\\x8e\\xc12\\xa9\\xd0\\x1b\\xf7\\xdb\\x16\\xf8\\xc9x\\t\\xdb\\x83U|\\x1e|:\\xe37\\xbb\\xfaf\\x8co\\x17\\xad\\x98\\x0c\\x7fMF\\xe7\\xae\\x8e\\xc9\\x904n\\xd8\\x1eD\\x1b\\x9c\\xdc\\x0f\\xba\\xc5\\x8e\\xcc)6\\xcf\\xd1\\xb9\\xdb\\xb4,`\\x1f\\xe8T\\xa5b\\x8e\\x0b\\x9d\\xad#39\\xeecT\\xc4\\xd9\\x9b{\\xb1Ht{s\\x89\\x94\\x1f\\xe6\\x1c\\x7f\\xe6\\xd7?a\\xae\\xee\\xb4\\xf4\\x9e\\x9af\\xba/V\\x13\\x85\\xfa6R#?\\x0fi\\x93e\\xfd\\xd3`\\x9dJk\\xdd\\x0f\\\'rc\\xc8\\x8b\\xb89\\xff\\xea\\x97\\x8dT?\\xfe\\xc6e9\\xd1\\xe7\\x86\\xd4.\\x82\\xd5\\x85\\xf4\\x11\\xf68)y_Y\\xec\\x90/\\xdc"\\xd8\\x1a\\xdc\\xa2\\xeb\\x8aO\\xca*(\\x11L\\xfc1\\x1bqQ2\\xa3\\xf4\\xa0\\x10\\xed\\xdal~\\x9f\\xba\\x84\\xfbl\\xcc\\x03\\xab\\x01\\x1d\\xed[\\xc9%\\x97r\\x92\\x8e\\x02\\xce\\xa1v\\xfb\\xb581\\xd9\\x8e\\xa2\\xed\\xbc\\x08u\\x00\\xf6si.\\xb7\\xbd\\xea\\xd7h\\x0e\\x16Sp\\x99\\xf4\\xf9\\x05\\x8e+\\x17\\xbd3d7\\x9d\\xaf})\\x19\\xd9\\xfb\\x9f\\xd9:\\xf4\\x9c\\xa7gGFSV\\x0b\\xa2\\x1a\\xb2\\x84-\\x7f\\xa4G\\xb4\\x98dm\\xbf\\xd0\\xad\\x10AP\\xf8!\\x98\\r~1\\x8a\\xa0\\x00\\xa8\\x04#\\x05g\\x86\\xf3\\xf9\\xa3\\x92\\x05\\xe4^\\x97\\xd2\\xc6\\x94zk\\xce\\\\\\x0e\\x96\\x9eF\\x99\\xe3\\xc0<\\x94cH4\\x16:\\xdf\\xa3\\xce\\x9b\\xa5\\xf6\\x16\\xe7\\nVdfqN|\\xef\\xf8DO\\xd0Txa\\xc5\\xddCy\\n\\x12yM\\xc5\\xde\\xc1\\x18F\\xa3\\xc5\\x03\\x9f\\t\\x1b\\xd3`\\x06\\x9bv\\x08\\xc3\\xd7\\\\\\x9f\\x96:\\xae\\xbd\\x8bkeMr\\x96\\x9c\\n\\x98m\\xde\\xc8\\x17A\\x9e\\xc9\\xf7\\xc3a\\xc5\\xeb+\\xa8\\x932P\\x13Na\\xfc\\x9c\\xfc\\xf9\\xa6\\xb7\\xc8\\x01;\\x08\\xd6 \\x8b\\xf4)\\n\\x82\\x8e\\xd5\\xc2\\xed\\xee\\x90\\xad;\\x8f\\x83\\xb9(7\\xa7\\x85\\xbdK\\xa4|\\xe7C\\r\\xb7\\xe7\\x9a\\xb1\\xe7\\xc9\\x0c+\\xe11mx3\\xd3V\\xfa\\xd5w\\xffHI\\xf7\\x00\\x1d\\xea\\xb6\\xe1\\xb2\\xbb\\x13\\xce0)\\xd3O\\x82\\xb6V\\x9dl;_\\x17`\\x16M1\\x8f\\xe2\\xdcX\\x91\\xa2\\x9f\\xef\\xc7\\x8f\\xd8\\xfdLrd\\xf5C\\xb3"z<Z\\xea\\xf8b\\xc6\\xf7\\x90\\xcd\\x17\\xf3J\\xd7O"\\x13\\xf7O\\xae\\x8b\\x9eJ\\xcc-\\xce(\\xbb\\xec\\xf3\\x9e\\x04@\\xd7$\\xca\\xc44\\xd4^\\xa5\\xb1\\x0buc(n\\xe5/\\xea\\x07\\xea\\xc0Lj\\x1e\\x89\\xd7\\xeb\\xb1\\x19\\x82\\x9dz\\xb6\\xa9\\xc9\\xee\\x03\\x1f\\xe2;\\xa9J?\\xb1\\x85\\x12\\xbb\\xb9\\xe8\\xb6\\xf8s\\x0c\\x03\\xa8\\xc0\\x9e\\xd4\\x0b\\xdd\\xa2\\x1c\\x18\\xc4\\xd3\\x95W\\xea\\xe4\\xb8\\xca\\x10\\x14pe\\xaf\\x19\\xa9\\xb4\\xf0>\\xe3\\xedL\\xada\\xff\\xa7\\xfb)~\\xce\\x8d\\xacB\\x15\\x1b\\xd1\\xf9a\\xfa\\xdc\\xf7K\\xa3\\x9e\\x1b\\xa3\\x05\\t\\x99\\xa6\\xd8$\\xa1\\xb8F\\xec\\x06\\x1a(\\x089*\\xae\\x08T\\xf855\\xbb=\\\'\\x15\\xf1\\xfawjj\\x99e\\xe2_\\xc4\\xa1\\x0c\\xaa9\\x7f\\xf1\\x92\\xff\\x10=\\xdf\\xa6\\x17\\x1e\\x12;\\xa58\\\\\\x1f\\xa2=\\x11I\\xa8\\xe3+\\xa6\\xd1\\xa2>`\\x80\\x0c\\x05{\\x11\\x1b\\x90.C\\xc2ctL\\x18\\xd7\\xc8\\x0bI^\\xc0\\xd6\\x01\\xf9A\\xbd\\x0b\\x12c\\xf8\\xf8\\x19\\xb2\\xe4\\x90\\n\\xf5\\xd3d\\xb9$Y\\xa6\\xcbu\\xfb\\x8a\\xce\\xd6c\\xa9\\xd1\\xa5\\x10\\xda\\x8c\\x81\\x111X\\x03Mr\\xe5\\x1c5\\x8cM\\xfa#\\x11\\xa2<\\xf5;\\xf9\\x9d9dj\\xa1\\x1c\\xb4,\\xc9-\\x15%\\x06>\\xc5#\\xaf\\x08uvi65\\x14\\x11\\xae\\x0f9[\\xc2\\x8cW\\x0b\\x06\\xd8\\xda\\xd1\\xd4~kG\\xb7\\x9f\\xa4\\xb0\\x99\\x1c,\\xd3\\xfa\\xa0\\xeft\\x08rn\\x9e\\xac\\x03\\x8c\\xcbJ\\xdc\\xc6W\\x94\\xaa4\\xed\\\'\\x8a\\x8d*+\\x7f\\xecd(\\xf2\\xd6\\xc2\\xec\\x19b\\xcaY\\xcc\\x9a\\xb8\\x91\\xee\\xa4"\\x8dw8\\xf5\\xfb\\x8fj\\xcc&\\x81UJtC\\x9a\\x04\\x8c\\xf0i9\\x90\\xea\\x7f\\x02\\r\\xe6\\xb9\\xb5\\\'\\x1a\\xbd\\x1e\\x15\\x96B\\xc1FQ\\xef\\xf7\\x1amY\\x1a\\xc0\\xf4"ih\\xc4\\xca\\x96\\xdb\\xca\\x84\\x03\\xad\\xf7\\x9a\\xf2\\xd1\\xbeN$\\xdc\\xc4\\xdc\\xf5\\xe5\\x1a\\xa1o\\xfc\\\\\\xdc\\xf5O\\xf3\\xfb\\xb9\\xb4\\x01\\xa0.!\\xb6\\x0f\\xdbD\\xa1\\x11\\x84*\\xd7am=\\xf8Y\\x1e\\x9e\\xab\\xd95SQ\\xc2|\\xa6\\xfc\\x08\\xad\\x81@iDuF\\xe8\\x15D\\x83+?\\xc0\\xc7$~\\x06\\x9a\\x90\\xe7\\xcd\\xefr\\x97\\x19`\\xc4p\\xdd\\x91|\\x9e\\xe7p7\\xe4$\\x0e\\xdb\\x8f\\xcd]i{\\x8e\\xc8\\xe8g\\xf8\\x91]l\\xb6c\\xcdIm2f\\xb2\\xe1\\xc0\\x90"\\xf3\\x93\\t\\xa0\\x9cXs\\xc43\\xb0\\r\\xaf\\xa4d{\\xa7\\xdb/}\\x03\\r\\xeb\\xe02A\\xdc<T\\xbb\\xa8\\x98\\x04\\xd1\\xf9\\xa3\\xc7\\xe2\\xe9x\\xde\\x8c\\x19\\x12\\x82\\t\\xd6\\xee\\xdc\\x97\\xae\\xffk\\n\\xfav[\\xe7\\xbb\\xd1. \\xa6\\xfd\\xfdX#\\x02\\xebE\\x9d\\x8f\\xdd;?y\\xb03\\x9a\\x94K/Q\\xfci\\\'\\xc5]"#a\\x00\\x1aRv\\xe3\\x98\\x0f\\x1e\\xaa7\\xfaM\\x16:\\x18z\\x89\\xc1\\xecj1\\xcd\\xd3*k\\x97k\\x8e"\\xb8\\xf6\\xf3\\xb2\\xa8U\\x1c\\xe9{\\xa8\\xef\\x81\\x1f9\\x05O\\x06\\xa92u\\xf2\\xce@\\xc4+n\\xdfC\\xc6\\xbcqJp?\\x87\\xb8\\x8aWG\\xaa\\x00=w\\xa5\\xa0j\\xbfE\\x1f\\x1bI\\x05\\xee\\xc8\\xc1*\\x93v\\x97\\xbfx\\x0e\\xe6\\r\\xf5\\x15H2\\xd1\\xf2\\x14\\x88f9\\x1b\\xd1\\xa7N\\xda\\x9d\\xac\\x9c$\\xc1UU"\\xfb\\x05zb\\x1a\\x1d\\x90z\\xbf|\\xaa4\\xa6\\xab\\x9a0;\\xd4D\\x8c\\x83\\x82\\xa5er\\x96%\\xb4t\\x88_z\\t#\\xa6c\\x81\\xccu\\xb8\\xf0k\\xab\\xf5\\xab\\x16:\\x0cR\\xc2\\x1a\\xd2\\x84\\x1f`\\x1f$\\x19\\x8e\\xdd\\xe2~\\xd7\\xef\\xc7\\xab\\xec\\xdc\\xa4\\xc7\\xee\\x1d}\\xc5\\xe9\\xc8\\x02\\xf9\\xbd\\xd5~p\\xf9\\xe5i\\x99\\x07v3Y+\\x8d\\xd0ABa\\xe0kG\\x8c\\xd7\\xfa\\xb9Q\\x1df\\xe2\\xb0\\x99[\\x12\\x81\\xf7R\\x10\\xb2\\xb4\\xdc\\xab\\\'ss\\xd6\\x91\\x0cu\\xa7.EP\\xf8\\nX\\xfa\\xb2\\xe2d!Ot\\xe1VL\\xec\\xa0.\\xeaxX\\x0cx!\\x9c\\x00\\xf7\\xa6W\\xb5\\x82\\xfd7\\xb4\\xbe\\xbb\\xf7\\xb4\\x94\\x18\\xe8\\xdbG\\x1fG\\xd7\\xd9\\x03\\x83\\xce\\xd25\\xec\\n\\x9f\\xc5m}8\\x84\\x9au_\\x1d\\x87k\\xbc\\xda\\x1dqz4u_y%\\xcbr\\x16\\xe7\\xa5\\xab\\xb6]\\xe29xW\\x85\\xb6\\x8c\\xec\\xf0\\x1c:\\\'\\x98\\x03\\n\\xb7}\\x8fQ\\xdcwRb\\xd5\\x83\\xbd\\xb3\\xccyI\\x96*\\x84\\xbb\\xb5\\xaf\\x99\\\\\\x86\\xc5\\xdc\\xcd\\xa5M$\\x9f\\x99\\xdc\\xb4\\xf8\\x9f\\x82\\xd3\\xed\\x18\\xba\\xe1q\\xbe\\x88)|\\xfc(\\xdf\\xe8\\x05\\xcbk\\x0ega\\xf1\\xcc\\x00n}\\xec]N\\xd5A\\xe07\\x8b\\x8b\\xa28lLW0O\\xf13\\x9c\\xa8\\xcb\\x95|\\xbdI\\xe8\\x8c[\\xf3\\xcc\\xf4\\xf8\\xd3D_\\x13l9\\x18u3\\x04f\\xa8m\\x8b\\xd2\\xbb\\xe9\\xf4I\\xd6\\xa8\\x8c\\xc3"\\xado\\x83\\xe5/\\xb0%+\\xaf\\xef\\xd7\\x91J\\xd3\\x94\\\\`\\xe8y_W\\xdfqp\\xa3EzH\\xbf\\xa3\\x99\\xe9}\\xd9\\xdcD.\\xf1G\\xee\\xed\\x8e \\xab\\xf4\\x1c\\xddA\\xb1S\\xee5L\\xf2\\xae0\\xd5}!\\xf4\\x14+<\\x08\\x14i\\xd6\\xf5\\x13%\\xd9\\xe8|\\xd8\\x121.\\x00\\xba\\xa7\\xec\\x13\\x98\\x08\\xc7\\x1d\\n\\x91Mb%\\x83\\xbf\\x8e\\xc0\\xeat\\x07_^d-\\xe2\\x84\\x1fk\\x14Y\\x885XCa\\xacD\\xf3j\\xfe\\x92:\\x91\\xab\\x16&C\\xd7\\xb3\\xd7\\xefE\\\\\\x85\\x1e\\xb5\\x9f\\xb4\\x8cZ\\xee\\xc9\\x9d\\xecN(\\xb9\\x0e\\xd1\\x84\\xe0\\xf1\\x9bZH\\xf4\\xcc;\\xfc\\xd6\\xa9\\x10"\\\\\\xef\\xf7\\x08\\x91\\x88\\xf3\\xccG,\\x1f\\xc9_u\\xfb\\x98\\xa7\\xf5J9\\xae\\x9d\\x14t\\x0bE\\xb1\\x1c\\xca\\x87c2\\xc2k\\xbf\\xdb e`\\x96!6I\\xbc(\\xa7F\\x03\\xce\\xa5\\xc7\\xa8Aw\\xceA\\x9a\\x15=\\xe3\\xa1\\x03fD\\xad\\xd8\\xf8\\x8b\\x06\\x12\\xb1\\x12\\xae\\xfa|T\\x11\\xa3\\\\E\\x94|\\xd0<\\xdeO\\x83\\xcc\\x9c0\\x8a\\x0cJ\\x18x\\x97\\xfa\\xa2]L\\x95\\xa0\\xd6\\xd9/9t\\x8a\\xa8_\\xc2\\xa6\\xe0w\\x12\\xd2\\x0f\\xc6\\x05\\x85t-lI\\xcbC5\\x8e\\xc5,f\\x8cj\\x1e\\xf83%\\x91\\x14\\xa7\\x8d%\\xac\\xf1\\xca\\x19\\xb5YQ` \\x12R\\x9b\\x05\\xdc\\xf3+\\xeb&\\x05\\x17\\x05V\\xb3\\xcf\\x93\\xbf\\x96\\xc0&\\xab\\xd5>h\\x87\\x9b\\xeb\\xf0\\x17E\\\'G-\\x10\\xbc\\xa6\\xa1\\x1epX\\xaa\\xb0\\xcf\\xe0:\\x99\\xa7\\xe1\\xa2zd\\xd7\\xca\\xb7q#x\\xedC\\xd4(\\xd90VB\\xb3\\xab>:6\\xc1\\xc2\\x94\\xd8U\\x1d\\xc3\\xfa\\x8d\\x16\\xd1\\xec\\t;2\\x90\\xfc\\xfb\\xa8,\\xcc\\x04\\x7f\\xbb\\x9f\\x8a>\\x0e\\xfa\\xd7\\x91\\xc6\\xebVl5\\xf0\\xae\\x97\\xe4\\xe7\\xa3\\xe46YH\\x86$\\xb2a\\xe1\\xcc\\xcf\\x89\\xfe?wM\\xc4r\\xa6&\\x87\\x9f\\x97x\\xbc\\xd7\\xd7\\xa4\\xa7\\xb2\\xbfm\\\\~\\xe0o\\x93AB\\xb0\\x1d\\xdc\\x861e\\x0b\\xdb\\xacv\\\'\\xd1\\x9e\\x84\\xc1\\xcce%\\x15\\xe6\\xdb\\xc2\\xdaFkM\\xd9G\\xc5v&\\\'\\xee\\xdb\\xc2\\x16\\xa6l\\x9d\\xb9K\\xb6\\x08\\x8aP\\xef\\x02\\xeayf\\xe4\\x00\\\'\\xc0\\x82}\\x00\\xa3\\x9b\\x96\\xb4\\xa9\\x8f\\x12gH\\x90V\\x8c\\x8f\\xc1pA\\xfdg\\xcaA\\\\\\xae\\xb7\\x9e.\\x85q"&\\x81\\xf0\\x91\\x03\\xf0 \\xf7\\x06\\xd3\\xc1\\r#\\xc75t*\\xc7\\xeeCBd\\x14\\xd9\\xb3\\x13\\x18\\xf4X\\xbc\\xd8\\xd5VC!48\\x7fdV\\xf5\\x13u3\\xe8\\x1f`\\xb8\\xfb:\\x14\\x17\\xc1F\\xb4\\x85\\xbd\\x95\\xb73\\xfd\\xb8K|\\xd0\\x11\\xd8\\x17]\\xc9h\\xfa\\x88\\xf7j\\xe8\\xfa\\xd3R\\xb2U\\x1a\\x1f\\xdd\\xaf2\\xad,L\\xb2e\\x12\\xcd\\xe0\\x98h\\xf8\\x10zv.\\xcb\\xb3\\x08\\x99\\xa2\\xa6!R)\\x0b\\xed\\x1d\\xba\\xca~\\x08a\\x7f\\xaa\\x1028\\xf6tgX\\xf52H\\x980\\xd5w\\xcc\\xdc\\xe1\\xb2\\xabj\\x0eil\\xbd\\xcd\\x1b\\xfeV\\xe1,\\x93\\xa8\\xb1.\\xfekj\\t\\x90\\xac\\xcc?\\xed\\xb0\\xe3\\xaf\\xcf\\xf3@\\x81\\xe9\\xd1\\xd2,\\x16f\\xa7\\xe0\\x88\\xec\\xe7%h\\xde\\xddTAA\\r\\x90\\xba\\x1f\\xf0\\xa1\\xbb\\r\\xa4|\\xa0\\x8bDA\\x7f,{t6s\\xca\\xc7\\xce\\x14\\x07W\\xf24mj\\xcf(~\\n\\xe0\\x94\\xf6\\x9d\\xf8\\xb4\\xdc\\xdb\\x92\\r\\x04\\x9c\\xb0E\\x12\\xcd\\x9b\\x95\\x13\\xa2\\x83G\\xec\\xea\\x9b8yRw\\r\\xf3\\xedO\\x19k\\x896\\x94\\xa5\\x0bq\\xe0\\xd2#\\xfc\\x82(\\xe2t\\xd9\\x14\\x94#\\xd6\\xb8y\\xacL\\x94\\t\\xc3\\x02\\xe7)\\xd1\\xd9n\\xc6\\xb6m\\xc1\\x98\\x9e\\xf2z\\xaee\\xf4\\x7f\\xd7q\\xff\\x08\\x97\\xed\\xfc:\\xeb\\xa3\\xf2|\\x96\\xe4\\xdc\\x8f\\x95_,\\xe7^\\x9f\\xcc\\xb34<\\xa7F\\xb8\\xb6\\xcd\\x84\\xf3\\xc1k\\xd4\\xc8e\\xe3U\\x0f+\\x8c\\x80\\xa4\\xb1\\xf8\\x07\\xe5q+{OX\\xecs0w\\xef\\x87\\x05G\\xdb\\x80\\x10%9\\x92\\xc6\\x93\\x97\\xc8\\xa9\\x9b\\xf4_\\xb9R\\x95\\x1f+\\xea\\x10\\xeb\\xa1o:\\x95\\xad\\xbaR\\xbf\\xe2Wm\\xae\\x1e\\xd07\\xc0j\\x01\\xf1\\x17\\xa6\\x9dJ\\x15\\x17\\xde\\xa7F\\xd2\\x96\\xdd\\xa7\\xa5|\\xef\\xd9\\x82-\\x93\\xbb\\xd6y\\x7f=\\x96\\xc9\\xd3p\\xd6\\xcd\\xda\\xf3\\x0b\\xc6\\x8c\\\\N\\x81\\x15[\\x18C\\xb1aX\\x18\\x83l \\xd3\\xa4x\\\\\\xb5\\x07\\x85\\xf0\\xb2\\xb3\\xd5\\xdc\\xb4yz.\\xc7\\xb1\\xe1k5\\xa2\\x80\\x85\\xb5o\\xf4ej<\\xa7N\\xb5\\xfc\\x94\\xa0\\xbf\\xfa\\xfe\\xb5\\xfe\\xa9\\x19\\x82HX\\xa1\\x9f!,\\xe7\\x82\\x8c\\xd3V\\xc0\\xd3\\xed:\\xd6\\xe0\\t\\xf3\\xcdN[\\xe4\\xf8\\xc7\\xf7\\x84\\x1b.\\x07\\x16{\\x9f\\x92~\\xe5E.^\\xa0\\xfaPsX\\\'O\\\'\\xed\\x8b<Tw\\x19*\\xcbn\\xb6r\\xe3eN1{\\xc5\\x19@yz0\\x9a9N\\xe0\\xba#\\x9b\\x13\\xe4}\\x1d\\\'yD\\xe7\\x96\\xdb\\x9cY\\xbc\\xbe\\x0fZ\\x9a\\xeb\\xbekP\\xff\\\\\\xbaK\\x9d\\x83O\\xe0\\xe9\\x85\\xd7zj\\xd2\\xf8e\\xce\\xf4\\xa3\\x8a\\t\\x9c\\xef\\xa0?\\xd82\\x02K^mo\\xdf}\\xd1\\x84\\\'\\xc1\\xae\\xec\\\\%i\\x10\\xb2F`K\\xa4Z\\x19\\xc5\\x1c\\xc3\\x17\\xe2\\x80\\x923\\xe6\\xdc#1\\xb0\\xc2\\xb3\\x1d\\x7f*\\xc94\\x18\\x9e\\x9e\\xfa\\xf4\\xa1gEx7\\xcd\\xbb\\xac3\\x8e\\xd4\\xe5\\xd5~\\x86\\xac-PQ\\xa8\\x8e\\xd1f+\\x1dpY_\\x87>\\xda\\xe1\\x87b|!]\\xf3g\\xdf6\\x82n\\xcf\\xf56\\x81o\\x1e\\xfe\\x9a\\x07\\xe2\\xd3"!\\xa9:\\x05!\\x049\\x12\\xfamc\\x9b6.\\x9fC&\\xb9\\x9e|\\x94\\x8f\\xf1$\\x994L\\x1au\\xd1\\x16Z}3\\xd0\\x0c\\xd9#\\xde\\xe77\\\\\\xe0\\xe5\\xc24\\x10p\\xa8\\x1d\\x93\\xc5\\x12a\\x17\\xd6M7\\x9e\\\\m\\xa3\\xa0 \\x97\\xda\\x85\\xc8\\xa5\\xc6h\\xf5Pua\\xb5zk\\xe9\\xd2<\\x04\\x9dL\\xcb(\\xc0\\x8f\\x88\\x1c\\x84Nr\\x9b)\\xf7\\x15\\x1c\\x8c\\x069hE\\x86\\x18\\xc7\\xdf\\xe0U\\xafW\\xe2d\\xf39\\xe1P\\xc2\\xba\\x12\\xd3\\x91)\\n\\x8c\\xc3\\x10\\xa7y\\x1c/\\xedX\\xf1*\\xc9~\\x80N\\x1b\\xe4\\x8c\\xb6\\\\\\xd8x\\xc7\\xf8!1\\xe2aO\\x81\\xd8d\\x1e\\xab\\x87\\xa1\\xdaB\\xd9\\x96\\x9a\\x07k\\xe4y\\xb8\\xac\\xb2\\x8a\\x14\\x07_r>\\x84\\x9a\\x9f\\xe8%\\x98\\x15\\x1b\\x10\\xba\\x1b\\x925\\xfa\\x89\\x1a\\xef\\xbb\\xb1\\xee \\xc0\\xfa\\x90\\xb0d\\xae\\xe2\\\'\\xf7\\x03Y\\xde\\xa4\\x89\\x9f\\xc6\\xacH\\n\\x99*A\\x92\\x9b\\xfd\\xa4U&V\\xe2\\x82\\xa56\\xeb]=?\\xf5m\\xc94t\\x83A\\x91\\xc3;\\x81)\\x9a\\xcb\\xef\\x9f\\x1e{8\\xa5\\xbb\\x11\\x83\\x80<\\xa8\\x86q\\xc6\\x93\\x06\\x88\\x04$\\x86\\xf0f\\xa9\\xf4\\xd6\\xe5\\x1ad^\\xc4 \\xae\\x1aCW\\xc7\\xf7\\xcak\\xd8\\xf9!p\\xe0q\\xe60)\\x879\\x01e\\x96\\x81\\x9b\\x16\\xcc\\xe9\\xee\\xedy5J3\\xe7\\x83s\\x9al\\xc27\\x16\\xe2\\x17\\x98\\xaa\\xfe\\xe5\\x98\\xe4\\xf6\\x08>:\\xb2\\xb0\\xf2z\\x01\\x0f\\x03a\\x0c\\x9dsw\\xa2i\\x97j*\\xe3$\\xb0*\\x1fA\\x02wZ\\x1a\\xe0\\xfb\\x89\\x85q\\xc8[\\xa7Fa\\xce\\x93\\xcaa\\t*\\x83\\x19\\xd6\\xe3\\xb1?5\\xbc\\xe8>\\xb0h N\\x10S\\x0e\\x8b\\xad\\xee\\xe7*\\xe5"\\xd5\\tC\\xb3$\\xa5\\xda\\xe3\\xbd\\x9e\\xbf(\\\\5$i7\\xd4"\\xaf~{\\x90H2V\\x82\\xd9\\x172\\xf6Gw\\xec\\xe0XJ\\\\\\x10\\xc1{0\\xeb,K\\xedI:t\\xad\\xe6\\xc4\\xac\\x878i\\xcb\\xe2\\x04b\\xf5K\\x98\\xab\\xd17\\x9b\\n\\xaa\\x80 ^\\x9d\\xca\\xd7\\xb4\\xe3y\\x88^2\\xe6\\xa7ml"\\xfd2\\xd6\\xf8%+\\xab\\x15N\\xfa\\xf5\\xb3d\\xbc+\\xd5\\x13{kjC\\x9b\\x01\\xe4\\xb7\\xc3]\\xb0]\\xc5W\\xf7cD\\r\\xc5\\xfb\\x875\\xdd\\xed\\x83\\xef\\xca\\xac\\x0fQn\\xeb\\x08\\x1e\\xd2w\\x01\\xc3w%7A\\xea\\\\(\\xd8\\x0f\\x11\\x07W\\xc0\\xc2\\x8b\\x9e.Rvp?81\\x1d\\r\\x0b\\xd44(\\x98U\\x98Z\\x1fl\\x8d<\\r\\xe3\\xb4\\xc9\\xb0\\x80\\xb0\\x9c\\xf2)\\x08s\\xac\\xccy\\x8b\\x9c\\xa2\\xf6\\xf9\\x97+\\xed"Cz\\xe7$\\xd6<6Z\\xd1E\\x14\\xaf\\xcd\\x92\\xfb\\xcb]\\xd3\\xc0\\xa5\\x9a\\xdc\\xf8\\xf2\\x12O\\x15:\\xd5\\xb1\\xd2T\\xf5%\\xb5}3:\\x92Ck\\xa5s\\x9c\\xe5X\\x13\\x0c\\xab\\x91\\xd0RL\\x08\\xb7\\xaf.\\x86\\x03\\xc5\\x90\\xb8\\x84,\\x9b\\xb8\\xec_\\x0c\\xbbl\\xfa\\x04!\\x99\\x8f6?\\xa9^\\xff\\xa8w1\\xff\\xb1\\x93\\x8fpM-\\x0b\\xaf\\x04\\x95\\xdf\\xbe#<\\x82\\xe1`Uv\\x9dN\\x8b0\\x1as\\x9a1WG\\x9f\\xdd\\x94\\\'\\x8a>4C4\\xed\\x98\\xbf\\xd3^\\xcaE%3\\x9d$\\xce\\xbbh\\xe3\\x08\\xed\\xdd\\xc7\\xedX\\x87\\xfe]\\xfa\\x81\\x92/\\xf4F\\xce\\xf1\\xa5I\\xe0\\x1bM\\xb9\\x85\\xb4Ao\\x7fC\\xbdo\\xb5\\xbb\\xca1\\x8c\\x81\\x9f\\xfc\\xce\\xb7y<\\x9c\\x9e-\\x9dG\\x9d`\\x89\\xb1D\\xb2\\xfb\\x96$\\nLa\\xf3fn\\xe2\\xd4\\xd5\\x8cM\\x1f\\xb4\\xd6\\x04\\xed\\xb1=\\xbb\\xa3\\xb0C\\xf6\\xe7,\\xea\\x1dz\\x8d`\\xa07\\xf7\\xado\\x8e\\xfb=\\xafTg\\xc2"\\xcch" \\x19\\xd3\\x05a\\xfc2-\\t\\xb4\\x0bg\\t\\x86\\xc0\\xab\\xe4\\x8c\\x86G\\x94\\x10\\xcc\\x1b\\xd0\\xee\\x022=p\\x9a\\xd8\\x93\\xf3sC0\\xd5\\xf5n\\xea\\xc1\\x84\\xa6\\x10\\x1f\\xd6\\x9b!\\x06E,\\x01\\xaf\\x02\\x11g\\xc9\\xee\\xc0\\x9e\\xea\\xb6:\\x07\\xf9\\xf1\\xd9\\xbdE\\xe3=\\xa5\\xb6u8~j\\xc1.\\xab\\x13\\xca\\x8c\\xa6\\xc9m\\x17g\\x1f\\xd3\\xfa\\xbebRf\\x15\\x9b\\xe8u\\xa1)\\x0b\\xf7]\\x0f\\xf0c\\xe5\\xa8\\xb9\\x85n\\xb6\\x0eIVr\\x16\\x08\\x93ek\\xed{\\xfb\\xf1/T\\xc9r]DC$iCP\\x7f0\\x8b8\\x92\\x7f\\xf8\\xe1\\xe4\\xc3\\x16\\x85\\xe7\\xa5*J\\xeb\\x86/w\\xe2\\x0c\\xab\\xbd\\x15\\x83\\x05bw\\x89RCg\\x87\\xd0\\xc8t\\xe0\\x8c7\\xf1&\\xf6=}L\\x108f{\\xea\\xe6\\xc63\\x11\\xf5\\t\\xf6\\xcfI\\xc7\\xff\\xa2\\xa0=\\xaf\\xccu\\xf8\\xc4\\x8cJ\\ra\\xc4G25\\x7f\\xfd\\x15\\xa2\\xa1\\xab!\\xbe\\x84\\xb8\\r\\x1c\\xeb\\x9a\\xc7"J\\x16\\x9c\\xe2V\\x9a!\\xf9u\\\\\\xd1\\xc8\\xc3G\\xfa\\xa4(\\x0bgT\\x98\\xd64a\\x1d\\xfa\\xdb\\xf7\\x94\\x8cW\\xeemyDR\\x1e\\xb1\\xd1\\xaf1\\xd6\\xe0#L\\xebH\\x10v\\xb7\\xc4S\\xd8\\x8d\\x0b.a\\xae\\x08\\xf2\\xcdA\\xea\\xc2\\x13,\\xba\\x02eD\\x1d7\\x8a\\x06\\xd9v\\x92\\x10\\xdb\\x8b\\x97I\\xc8\\x02\\xdaaf\\xc6@yd\\x03\\xdf\\xa1\\xadf?zxR\\x94\\xce-\\x01\\x1b\\xe9V\\xd7h\\x0f\\x0b\\x16^\\xa1\\xe2\\x062b\\xd6\\xe3\\xa2\\xf3\\x0f\\x95\\xc0\\xc9\\n\\xd9&$u\\\'\\xb4\\x111Y\\x8d\\xe6\\xa8\\x85y\\xd7\\x1b\\xf4\\x15\\xe0Qc\\x1e\\t\\xbcZ\\xfbGWk\\n\\xefJ\\xd0\\xdd\\x19\\x8b\\x83\\xfd\\xd5W\\x04Uw\\xb0\\x19G\\xbb]\\x99G\\xd5\\xb0\\xfatW\\xcf\\xeb\\xc3\\xcc\\x81\\xc0+`\\xd8\\xca5G\\xacQ\\xc9\\xd08\\xb0\\xd4\\xe4.\\xadM\\xb8\\xfc=u\\xb5\\xb1\\xfb\\x15\\x161R/\\xdd\\xf6\\x046\\xfcP\\x1ex\\xbbo\\xa4\\xe2\\xbe\\xb8\\xf8\\x8f\\xfc\\xf0\\xaa\\xa4[\\x96Y2\\xc7\\x0c\\x02\\xa7\\xccIu\\xf1\\xaa\\x03\\x08\\xc1\\xdeY\\x8fQ\\xa4\\\'\\xbd\\xf9\\xa7y\\x03\\x01R\\xc6"V\\x8a\\x1aN\\x85\\xa4o\\x8ahh\\xb2\\x8cB/\\xd8\\x0bI\\xb2\\x17`\\xac\\xa1f\\xe4Y\\xe8r\\xbc\\x17T\\xe9\\xb2\\xb1\\x90\\xc1\\xe4\\xb5\\x80\\xa9\\x01\\x8b\\x98\\xcd&S\\xbav14p\\xfa\\x92J\\xacu)-[\\xb3\\x10E\\x9f)5\\x1d\\x97t\\x13\\x15\\xc8\\xe6\\x80J\\xd7\\x8cCSaC\\x0b\\xc5\\x8f\\x9c\\xbav\\xfdv\\x1b\\x98{\\x84%9\\xf5\\x81\\xb3\\xe6\\xb9!\\x90\\xbe8\\x9b\\xe7\\xd2\\xbdB\\xf3\\xcf\\xcb\\x8d\\xa7\\x13a\\x0c9\\xa8\\xb9\\x15i\\xbb\\x16\\x1fG\\xf4!$y0\\x9a\\x85!\\xd3r\\x96\\x8d\\x8c\\xc3\\x94\\x98\\x8d\\xeca\\x8a\\xdf\\x1dN\\xee\\x1c\\xb3\\xb1\\x81 K\\x1e\\x9d\\xc7\\xe0i\\x98\\xf5\\xfaEv\\xbd\\xf9\\xc5\\x8b6\\xc1\\xf4\\x8d\\x1d\\xb9v\\x17\\xb4o\\x91\\x83\\xb4Z\\x18 :\\xc4##\\xc0\\xc0\\x94\\xb1\\x7f\\x86\\xab\\x9e\\x85\\xeb\\x18\\x95\\x1c\\x1a\\xc9\\x19\\x8aUo\\x11[\\x16\\xcf;\\\\\\x1fc\\xf0 \\x91\\xf2\\x8f0\\xddL\\r\\x11t\\xd1\\xf5w)(\\xdeU\\x0c]\\x1ef\\x9at%\\x15)\\xca\\xe3\\xa5\\x1a{\\x99\\xd8\\xc9g\\xca\\x1e\\xd8\\xceh\\x06\\xd9\\xb5\\x10\\xb8-X\\x10\\xdd\\xb0\\\'\\xf4,D{\\xc7\\xabu:\\x10\\t\\xa3]\\x95S?\\x96\\xbe;\\x00W\\x7f\\\\\\xb4\\x93]|\\xff\\xa1\\x1fvM\\x1f\\xb4\\xa8a1\\x1c\\x19\\xadg\\xb8\\xa9\\xdbhxf\\x15BXU\\xf0\\x92\\xc4YX]B\\xad\\xc4\\xe3\\xf6N1\\x8c\\x12\\x96^\\x92\\xcf5\\n!b\\x94,\\x08\\xb2e\\xae\\xec\\xb2\\xf4\\xd3v\\xa2q\\x91;6\\xff\\x94\\x0eR\\x8cQ\\xbd\\r\\xd2]\\xed\\xe4 0\\xfa\\xe6\\xf2\\xb2\\x94\\xcc\\xc4i\\x0b\\xe4 \\xc4\\xd0\\x8f\\xafk;J\\xd4W\\x92\\xc9~\\xd0\\x1b\\x05\\x9c\\x1e\\xa7\\xf9Rk1\\xb8l\\xf7T\\x84\\xd5\\x01\\x10\\xa48S{h~\\xcdi|Y\\xafx\\x84\\xae\\xce\\xa1\\x86\\xdc\\x91\\xe33\\xb5*c/\\n0gCPJh\\xe4c\\x17\\x17\\x8f\\xe3WF\\x1du%\\x13\\xf8\\x84=\\\\/*\\xcc+\\xd85\\x1fj\\x9c0\\x87;\\xec\\x85\\xf9\\xf8\\xa88\\xd6\\x1e\\xd1\\xf4\\x93\\xcaG\\xe1\\xc0\\xd6\\xe5s\\xd1\\\'\\xdc/\\x1ck9\\xef\\xf5\\xc6\\xb7\\xe8\\x99\\xf2\\r\\x83MNJ(\\x9c\\x7f\\x96\\xc7\\xb1\\x9e05\\xf9\\x8c,\\x0e\\xcd\\xf5\\x98\\xce<W{\\xed\\x95\\x0b\\x08d\\xba\\x9e\\xdd\\xad\\xb7lb\\x8f{.\\xfe\\x08\\x15xD\\x9c\\x00\\xbbN\\x19\\x9e.\\xd8\\x00\\xe3\\x1dw\\x84\\xf9\\x86\\xdb\\xe8O\\x96e\\x12\\xe0\\xdc\\x94>\\x9aF\\xe1q<]\\xb6\\x98\\xf7\\xfe\\x0c\\xa0\\xaf\\x95\\x82\\xdb\\xbb8;/T\\xb0\\xb1\\xcb\\x02\\x99\\x8dv\\xfb\\x89D\\xa5P,\\xa1Y\\x8b\\x8eHW|d03B9\\xfbD\\xdd\\xdf\\x0f\\xfe\\x94\\xa5\\xfe\\xd8o\\xc18\\x16\\xa7-`r\\xb1\\xbb\\rf_=\\xa8\\x96s2\\xf9\\x8e\\xd1\\x87;<\\x00n~\\x10{\\x85\\xb1\\\'\\x93\\x0e\\xa7EV\\xbc*\\xd6\\x8bu\\xb85D4"mSw\\xa0~\\x0f\\xb6\\n\\xcfQ9\\x9eF\\x1a\\x0e\\x11\\xdf6\\r\\x9dk\\x97\\x04\\xb3#6\\x9f\\x17\\xb4\\xcb\\xb9i\\x82&\\xf1K\\xe9\\xae\\x8e\\x84\\x98\\xdaM\\xa1\\x17\\x19\\x19|\\x9f\\x01\\xbd\\xce\\x8a,\\xf9\\x18L\\xcb\\xb5\\xdeCq\\xd2\\xc4\\xdc5\\xb3\\xb5\\xf0\\x81\\x90\\x8aa!D\\x06\\xb6*$\\x10u\\xa6\\xa9CZ/\\xc0<\\xf8\\xbc\\x1f\\x8b*\\xb1T\\xa5\\xdb\\xbd\\xa5\\x81J\\x16\\x1d7#\\xfd\\xf5\\xb40\\x16$H\\xf3n,5\\xf7\\xc8\\x93/@\\xcf\\x07\\x90Aq\\xf2(\\xb4\\x085\\xa3\\xdf\\x90w(k\\xedZ\\xe5\\xa1\\xf2c\\xe5\\xd9,jN\\x8f\\x182\\xc0\\x19\\xad\\xcds\\xc6m\\x8f\\x7f\\xc6\\x12\\xcc\\xf4\\x0boJ\\xf5\\xb16\\x92:\\xcf\\x19\\xba\\xd7\\xe7x\\x94\\x85\\xcf:\\x15r\\x1c\\x1f\\xb1\\x9cZ\\xaf\\xa8)\\x1c\\xe93\\x9d3~\\x85\\x1ep\\xd3\\x06\\xd1n\\xdaPE*h\\x8d\\xab\\xce#\\xef*p\\\'\\xd2V\\xd6[\\xfc\\xf4k\\xf6\\x0fY\\xfa\\x1e?\\x11\\xdfD\\xc6\\x14\\xd6\\xdd\\xf1j\\x0e\\x08C\\x95\\xcc\\xfcE\\xb7\\x83\\xf0\\xae\\x06Gq\\xf4g\\x00\\x1f7a\\xf5\\xad\\x15\\xbeMf\\x1a$R\\x19i#u\\x11T\\x17&{\\xab;f?\\x81\\x80\\x9e#\\xe0b\\xaf\\x1c\\xea"<\\x17\\xef\\xd46n\\xc3 \\xdd\\xa9m\\x84/\\xc7 U\\xd1\\xab\\x8fW2q\\xa0\\x19s\\x86\\x10b\\x9cgfCl\\xd7Y`U\\x8b\\xfc\\xb4^\\xcbi\\r\\x9e=\\xc1\\xa7\\x17\\xd5\\xff\\xc0W\\x7fJI\\xf4\\xd7\\x8c;i\\x11\\xd2\\xb9y\\xd2\\x15\\xe5\\xcblz\\xff\\xd0}\\x8d[\\xef\\n!\\xb2\\xdfY\\xd8i\\xdfX=\\xc3r\\x97\\xea\\xe2nT\\x83V_Ed\\x19\\xf8x\\xfb\\x97\\xf2Z\\xf6\\x86\\x1d\\xddf\\x96\\x869\\x10\\xe9\\xc46#\\x86+4+\\x12\\x805G\\x98\\xcd\\x13\\xe2\\xd0au\\xef~\\x9a\\x8b\\xb8>\\x0b\\x0b\\x80f\\xbeR\\r*\\xf4\\xf9\\xce\\xe7\\xee\\xc0I\\x86\\x87\\xd1y4\\x8a\\xf0a\\x1f\\x18\\x8b_\\xf5IJ\\xd8\\xce\\xf8\\xfbU\\x8dL\\x93Ew\\x11\\xaa\\xc6\\xfe\\xb1\\\\\\x97\\xdaF\\xfa\\xd3RA\\xb0\\xda\\xf4\\xf7\\x81\\xea\\xf0E\\xe9\\xc2\\xa0\\xa2\\x00\\xcdq\\xa3\\x18\\xcf2\\x9e\\xc8\\x05\\xd9\\xd85\\xe7\\xf7kZ\\xc0\\x9d\\x15:\\xa4\\xd0+-\\xaf+\\xc6\\x94>\\x13\\x99\\xb6\\x88%z\\x8b\\x800/\\x9c\\x1e\\x87\\xaa\\xd1\\\\XKzwZ^2dN\\xc2#\\x9c\\xec\\x03\\x95\\x9a\\x95\\x01h\\x18\\xfb\\xf2\\n\\x97\\xed_\\x930\\x92\\xee\\x934^\\x19-)`8\\x98\\x13\\x92\\xdc\\xaf\\xab\\xf8\\x95M;\\xdd0\\x1b@\\x89<>\\x1av\\xd3\\xc7v\\x87\\xaa\\x86\\xa2\\xa5\\x85\\x9fT8\\xba<S\\xa0&tv\\x9b+\\\'\\x16\\xb7\\x14\\xac\\x1a5bS\\xd8\\x94\\xf9yA\\xf2h\\x1dta\\x9dB\\xcb\\x1c\\x88\\x86X\\xfc8l\\xbbX~\\xe4\\xa7\\xf02\\xa2w\\x05\\x0e^\\xdf\\\'\\xd4\\x0e\\x9fC\\x86_\\xb7\\xa7\\x9dM\\x1cqy"1\\xa8\\x9b\\xaa\\xad\\xce\\x1e-\\xe2\\x18\\xc1U\\xce%p\\x88\\xbb\\xb9[\\xa6\\xf74\\xe4\\xa7[\\xaf\\xa8\\xec\\x99X\\xf0b\\xc2\\x84\\xf8>N\\x04\\xf0\\xd8U\\x1a\\x9e\\x97gP\\xacd\\xd72\\x9b\\xdfjeL\\x07+f\\x99\\xbfh\\xc77\\x04\\xf5\\x7f?\\x9b\\x8c\\x88\\xda\\x84I\\x0c\\xdd\\xfb\\xb5S\\xba\\x1fh/l\\xd3b9\\xf2\\x19\\xe7\\xea\\xcc\\x84\\x051iF\\xb7\\xe2\\x1b(\\x80\\xd6\\xd2\\xde\\xb6U\\x11\\x07\\xf0D\\xe3\\xb1\\x9f2W|\\x99Dc\\xeb-\\x16\\xaa\\xd4\\xd46\\x85\\xa6\\x90J\\x9f\\x147^\\xadPR\\xfc\\x83\\x03\\xb2\\x1a\\xec\\xe8K\\\\W\\xba+\\n\\xe3\\x805\\xcb\\xc7\\xe1\\xeb\\n\\xfdEok\\xbb\\x9f\\x87(\\xd2\\x8a\\xfdw\\xf0f\\xa4\\x04J\\xe4E\\xd3d\\x07\\xda\\xd3\\xd1\\xf8\\xdd\\xdc\\xc8\\x89\\x0cr\\xa2\\x00\\x93G\\xb2\\x82\\xd13d\\xbe\\\'\\xb8|\\xdb\\xab1\\xc9b\\x04\\x94\\xd6\\x8cG\\xc9\\x0f8\\x1d\\x05\\x0cs#\\xe4ZVj\\x82\\xec\\xd6\\xc1\\xe4e\\xe3a\\x01\\x1a\\x9e\\x83x\\xcdX<\\x9a\\xa1\\x14ON\\x84\\x82f\\x90\\xbb=\\x88#n\\xe5\\xe3\\x96\\xe7v|\\x94\\x93zr\\x10,9\\xe9\\x8e\\xcf\\xc6`\\x06\\xbe\\xba3\\x13\\xe9t\\xf85\\xb65 \\xefw?\\x11n\\xce0\\xc3\\xce~HE\\xe9-\\xbf\\xb6\\xda\\xe7\\xc5\\xd8\\x08u\\x04!e\\xd3\\xf7b\\x97\\x9d\\x17Jmp\\xbb\\x07\\x8a%\\x92\\xf0\\xdcni\\xe9\\xb7\\xe8ID\\xbb=\\xbc`\\xbco1@\\xaf\\x80c\\xc53\\xf7\\x92\\xcb\\xa9\\xdb\\x9aZI\\x12\\xbfd"\\xf9\\x02<z\\x81\\xef\\xb2\\xbe\\xa0\\xa0\\xfb\\x98*e\\xb6\\x06\\xd4t\\xd3\\x99\\xb9\\x98\\xd4x\\x1aj,\\t\\xed\\x93\\x8e\\xa9:rD\\xea\\xa1Y\\xaf\\xcaW\\r\\xdc\\x96Yv0l\\xd1\\xa6W2\\n\\x87V\\x10\\n\\xeas\\x9a\\x99\\xab\\xbfb\\xb9\\xee\\x8e\\x10\\x96\\x9d\\xdcm\\x97\\xc4O\\xafC\\xbb\\xa8\\x92\\xab\\xc8~\\x06m\\xfd\\n\\xc8\\x95\\xd6\\x99OS\\x0b\\xe1\\xd0R}\\xbc\\xef\\xb8\\x87)4\\xc5\\xdeD\\xa4\\xac\\xc3\\x80k\\x93\\xdbQ\\xbe\\xa4\\xb7\\x18\\x8b\\xe0\\xebyBr\\x0f|\\xc2%\\x15p\\x0b\\x16\\xe0\\xad\\x96\\x03o\\xcf\\xbd\\xbe\\xe4m\\xfd\\xb1\\xbd\\xb4\\x128"\\xedu\\xdf\\x15\\xe0\\xe4\\xdfj$\\xb1\\x7fU\\x92|>\\xcc\\x86\\xbc\\xc1\\xbd2\\xf8~,4\\xae\\x0f\\x8b\\xf7i\\x1d\\x9c\\xf4G\\x18\\x0b\\x0e\\xa9\\x7fDk\\x98.\\x91!\\x87h\\r\\xdf`\\x83U\\x10\\x0f\\x01\\xbf]\\x95\\xe7\\xe1\\x12Q\\x8f\\xa3\\xaa*\\xc3l\\x94\\xaf 4\\xfd\\xa3V/\\xaay#\\x85`\\x8e\\xdc~\\x88\\x03\\xee\\xa7~\\xc6\\xfd\\xc8\\x81\\xa0W\\xbee\\xe82\\xe7\\x9f\\x9aG\\xb3\\x0639\\x94#\\x17\\x1dw\\x84\\x8cp\\xca\\xe3QW@\\xe3j\\xae\\x1f=;\\xd2\\xc4x\\xac\\x1fE\\x10\\xf20\\x92eN\\xe0\\x1d\\x82\\xcde\\xb9\\x81\\xe6|:?\\xa9\\x13#\\x03\\x9b\\x03\\x93gs\\xfd2\\xe2\\xbe\\xb8<\\x0c_\\x94\\xedm\\x15\\x8e|\\xc4s\\xa4_\\xd43D(\\xe39\\x9d\\x81\\xeb1\\x90\\xb8f\\xf1R\\xcf\\xf9\\xdeT\\xd1\\xc1\\xbd\\x84\\x0f\\xbb\\x9e\\xf9\\xb5\\x98\\xdd\\xe2\\x97\\x97`\\xdf\\x97\\x1a\\x1cA\\xfb\\x0e\\xa8>q\\xc9\\x1e\\xae\\xc43\\xc5d\\xe3&\\xcf\\x8f\\xb2\\xf4\\x04z\\x86\\x0fW\\x0c\\xd6\\x15Z[\\xe6\\x93\\x84V\\xaa\\x19h\\x88\\xc3\\x03\\x89\\xf7\\x85\\xa4G\\xd7|\\x0e.<;\\xd8\\xddzM\\x96\\xcc\\xa4\\xf2\\ns\\xa9\\xd4J\\xb4\\xc3\\xe4\\xef\\x10V\\xc3S\\x15\\xa45\\xcc\\xb9`}\\xab\\x1c\\xe4\\x10\\xec\\xd6j\\xea\\x84\\xcf\\x9e\\x89\\xd3\\xe9\\x94=\\x14\\x13\\xd8\\xca\\x00\\xbd\\x99\\xd6\\xdfc\\x87\\xdf3\\x9dJ\\x9e\\x9f\\x91W=\\n\\xaf\\xe1\\\\x\\xda\\x0f\\x95]t\\x8c\\xb2\\x8d\\xc9\\x05D\\x00,\\xb2\\x99?\\\')\\xadA\\xfcl\\xd5\\xf0\\x9921\\xb6\\xa0\\x9d@J;&J\\x8a\\xbe\\xef0\\x13\\x9e\\xb1\\xbc\\xca\\xf2\\xd6\\xfe"\\xf1\\xd0\\nm\\xad\\xb3\\x0c\\xf4>\\xbb\\xbc\\x8a\\xd8`\\xfd\\x14\\xfe \\x1f/\\xd6a\\xb3\\x1f^\\xe0\\x86\\xdc\\xf7\\xe2\\xf3%\\x80\\x15\\xe5\\xe3\\x8f+\\x8d\\x13IT0\\x1d;\\xa2\\xd3\\xc3Ln\\xac\\xca\\xa48\\xe3\\x18\\xf8\\xae/\\x93\\xee\\x9fZE\\x9fDd\\xf61{\\x0es\\x8e\\x11\\xe24\\xc1X\\x7fV\\xf6(\\xe3\\xed\\xe2daE\\x97\\xae\\xaa.\\xe9QK\\x06\\\\\\x0e\\x05\\xd3\\xb3`\\x94\\xa1\\x0f=R\\xb1t\\x8e\\xe7\\xb2\\xc6&)\\xe4\\n\\x98\\xfaB\\x1b<a\\xab$\\xe2\\xbd\\xf8\\x1c\\xb8\\xea\\xe3\\xed\\x03e\\xe5 5\\xabJ\\xc0.\\xd6\\xfa\\x07g=\\xc6\\xe1jB\\x82\\xc3\\x8f\\xbe/\\xcf\\xe7\\xe7 `\\x05\\x06\\xd3\\xe5\\xf2q\\x04Z\\xd1\\xa08\\x10\\x99%8\\xf5z\\xc3G \\x16/(\\x13\\x88\\x06/P\\xf1\\xf5\\x16\\xba\\x10\\xdc\\x14V|\\xde\\xc5\\xf6\\x15a5Q\\x8eXip/`\\x9e$.\\x92\\xc4\\x8b\\xdd\\\'\\xa5\\xcbFc\\xaa\\xe6\\x8d\\xa13\\xba\\xc5e\\x8az\\xa5\\x93\\xf9I\\x8c\\xa8\\x16+\\xe3DI\\xae\\xb5fJRPJ\\xce\\x9c\\xce\\xdcO\\xee\\xb3\\xb5\\xe2\\x06\\x13\\xd1\\x132\\xa2hk\\xd4;\\xc9\\xbe\\xe9\\x80A\\xf2*\\xbd\\xa7^\\xff\\xd3\\xa0\\xcbh\\x84\\xf41\\x19\\x95\\xa4\\xa2F\\xec\\xee\\x15\\xab\\x10+\\xc7Lax\\xd3wa\\xfa\\x82\\x95\\xef\\x18u\\xca\\xa8\\xb8\\xf7H\\xeb\\xda5\\x1e\\xc1n<yg5v\\x01\\xdb5\\x19\\xdbs\\xea\\\\\\xc0\\xdeG\\x9b\\xfa\\xe7\\x04\\xf08)\\x8eNAL\\xaf\\xf4\\xe7=\\xa7\\xdaFDy\\x9b0\\xa6\\x885\\x0f)\\xfa\\xb1]2z\\xbehV\\r\\x04h\\xd1\\xac\\x92\\xbf\\x9c[\\xf5X++ ubU\\xddR\\xcbl\\x99\\x8d\\xa7\\xaa\\x9e\\xc02\\xcc\\xc6\\xb9R\\x1c\\xde\\xe9H\\xe6\\x97R\\x86%\\x9745\\xe1\\xc9\\x93\\x1f\\xf97l\\xa8_\\xa2C\\x1a\\\'!\\x01\\xbe\\t8\\xa2\\x857\\xcb"\\xd3w\\x12y\\xd2\\x08\\x9e\\x16e\\xef%N~9sVV\\\\m\\xd8\\xde\\xf9x2\\xfc\\xf2\\xd1|\\x02\\x12\\x80z\\xb5Li\\xf7hJ20!\\xe9w\\x9c\\x9b\\xd3\\x10\\xc1@9\\xde//\\xdf\\x81\\xc7\\x85"&\\xa9\\xf6\\xd0\\xe8\\x031\\x81?\\x08\\xbb|\\\\\\x07\\xc2a\\xc5\\x06\\xd3\\x83\\x84T\\xe9\\xfd\\xf8\\xb4~U\\x85\\xe9X\\xdbJ\\x06\\x9e/\\xcew$\\xed\\x8c\\xca\\x12\\xa7<~*\\xb6\\xb4\\xbeZ#\\x1cy\\x0f\\n\\xee\\xa1\\xb4\\x83\\xba\\xb8&,\\x19g\\xe8\\x7f\\x07\\xc2?v\\x8e\\x94)qVm\\x8f\\xe6\\x8b]y\\xf4\\xc5"+ \\xf3\\xb7>\\xf8\\x96\\xc8\\x13\\x8d\\xc2m\\xb1\\x1c\\x06\\xa9\\xb5\\x0f\\xee \\xbd\\xcf\\xcd\\xac\\xd1lV\\xf2m\\xea\\xd8rP\\xe2Y\\xdb\\xcc\\x89\\x07{[\\x05\\xed\\x9b\\x99cj3)\\x1c\\x8as\\x16-\\x92_\\x9c\\xc6L\\xf8{\\x17\\x02X\\x83F\\xf9z\\x96\\x11J4\\xc8}\\x0b\\xe9\\x95\\x13\\x95iX\\x04\\xa4\\xc9T\\x18\\xf5\\xd0\\x1d-&\\xaf\\xc4\\x14\\xb5\\x81\\xa2\\x82\\x0e*\\\\\\xb6\\xd3\\xb5\\x95\\xe9\\xb1#\\xaf\\x8f\\xa9*\\x0bG\\x8f\\x82\\xd7\\xdd\\xa1\\x8f\\x03\\x83\\x8a\\x0b.$=\\x1f\\xa8\\xc4iO.\\x97*\\xe8<\\xf0=\\xd9WT|\\xf8\\xa1#@1\\x8e\\xa7\\r\\x13\\xf4\\x86\\x8d$<\\xc37i\\xe6\\xe8\\xc7\\xb2\\xdf\\xb5\\xd3\\xad\\x80yF\\xd6(\\x18\\xb0(\\x8f\\xed\\x80A\\xf5k\\x19\\xf7\\xfe\\xbe\\x91\\xc6\\x0f\\x05i\\xd3\\x12QX\\xf7\\xb3\\xe1\\x02\\xb3\\r\\x02\\xf9[VP6}\\xacA\\xd0\\xdf\\xfb\\x80\\x14~_|-\\x90y\\x16\\xa9\\xafv\\xf5\\x82\\xbb\\x94d\\x9f\\x86>\\x0c`\\xde\\x1e\\xcc\\xc8hIm\\xf3\\x15>,;\\x96D\\xbd\\xebd\\x15#K\\x182\\x00\\t\\x94\\xdakyD\\xfdr\\x1d\\xc1aX\\x83v\\x18\\xa4E\\xfa\\x1c\\xa7\\xe2\\x85|\\xe0\\xd0\\r\\x7fr\\xb2\\xf8tM\\xcd\\xda`\\xc8\\x1cl.\\x85E<\\xf3\\xbc\\xe2:ApSf1\\x14\\x912\\x8eK\\xd2(\\xb6iN\\xd6^\\xe71\\x85\\xc4\\x9da\\xcd\\xa1\\x8afi\\xd2\\xf9\\x94\\xde\\x1b7CV\\xfa+;Bi\\x89\\xdd\\x91\\xd79\\x174/\\xcfV\\x1b\\x9aN[1~\\xfcx\\x96\\x0e\\x8eR\\xd0\\x99g\\xd5\\xf3\\xb9\\x05z\\xd3y\\x15~1\\xaf\\xcbx\\xb1\\t\\xe0\\x86}\\xa9\\xca\\xabE0F\\xe9M\\xc2\\xf2\\x0e\\xf4\\x91\\x97\\xa5\\xc6f\\xc9\\x85\\xd7;H*\\xae\\x13\\xee\\xe3-\\xa3SO\\n\\x85\\xb2e.]\\x82\\xb2\\x94C\\xd1w\\x9bu\\xd2wag(\\x96c;|Rc\\xce\\xc9\\xf6P\\xe8h\\xf4\\xcf\\x87z\\xf4\\xf9\\xc3j\\xdc\\xd7C\\xb7\\xfc\\xe5"\\x10\\xcc\\x02\\x9e\\x01\\xc6\\x19nFy\\x96{\\x1f{X\\x13(\\xac"\\xa6P\\x03/\\xb3 \\x83zC}8RJ\\xe7\\xa8],\\xac\\x85\\xa2\\xf6\\n\\xf0o{\\x05$\\xccX\\xf1\\xe0\\xd8\\xf2\\xfd}\\xfb\\xec\\xb3O\\x9ac\\xac\\xca\\xcc\\x8bF<\\xe5b\\xb8%(\\x0e\\x18F%\\x11-.)\\xd3U\\xddfQ\\xd4\\xceo\\xf8:\\x7f\\xd1\\x1c\\xf0\\x87J&\\xac:\\xe6U\\x93\\x86\\xeb7\\xa8D`\\xcc\\x98y\\xb1\\xbe3\\xce\\xd2\\x9f\\xbd<\\xbc\\x00=Uj\\x87F\\xf1{\\x11\\xaa\\xcf\\xe5O\\x12\\x82sk\\xd5g*\\xe1\\xf8\\x98\\x90:6\\xf0\\xab\\xa5\\x86D\\x94n\\xf8\\xd0\\x0fi\\xdc\\xeb&\\xd6A23\\xb1\\xa3\\xd4\\xde1\\x97\\x8c\\nx*\\xbd\\xee\\xdfC\\xefb\\xcf\\xd1sm\\x96\\xb9\\xf9\\xc4\\xc9\\xa6\\x84;G\\xa2\\x1e0\\xbd\\xe7\\xbc\\xde\\x8a\\x01\\xab\\xc6\\xae\\xba|\\xb1\\xfb2\\x10ZH9a\\x8f\\x9dG\\x13wE\\xbd\\xfb\\xbd\\xbf8\\xbb\\xd4\\xa0\\xac\\xdfip\\\\\\xa9\\xe8\\xa4\\xcc\\xaa\\xa7\\xaf_\\xc1&-\\xaaU\\x01N\\xa5\\x10\\x1d^\\x93* \\xdbux\\xe0\\x1e\\x19\\\'L\\xc8W\\x00v\\xa2\\xb6\\x88\\xea\\xfe3\\x19\\x1d\\xe2\\xf1\\xf3\\xd7\\xf1P\\xd2\\x0f"\\x8b\\tO8\\xc3\\xa6\\xbe\\xe5\\xach\\xd4l`\\xfd`\\xa3D&2\\x92\\xecj\\xe8\\xde\\xdeW\\x95\\x84\\xe1f\\x90\\xe7\\xf5\\xe1T\\x14\\xcd\\xcd\\xa9(\\xc8\\x8d\\xf7\\xb2\\x135\\xbc\\xdcq\\xb7[\\xf3\\xd0\\xa2\\x85\\xd5\\xaa\\x00\\x01\\xdb\\xb6\\xdd\\xceg\\x9dq!\\xd3N\\x91\\x83~\\xd5\\xc8\\xe2\\xb1\\xf6{\\xca\\xed\\x8cK]\\x8d\\x9e\\xc3\\xfbM\\x9ab\\xe8\\xd7=\\\\\\xcf\\r\\xdc\\xa7\\x1f\\xe1\\x99\\x1a\\xf1d%\\xd6\\xfc+2_\\x13\\xf9\\xa4\\xde\\xee\\xf1uUohV\\xfb\\xbc\\x1d\\xd3\\xf04\\xfe\\xec\\x82\\x94\\xd8fsf\\xc4\\x9c\\x9200\\xe8\\x96B\\t>n\\x81h\\xba\\x89\\xac\\x19j-\\xbf \\xd7d\\x1a\\xe1\\xcaY\\xa6\\xf8\\x10\\xa9\\xa1y_\\xcd\\xe2\\xde\\x1f\\xc03Vk\\xfa\\x1e\\x9c\\x0e\\xea\\x87\\x11\\x0fr\\xe4\\xbb\\x89\\x92\\xeb/\\xe6\\xdb\\xc1\\xed\\x19\\xaf\\xe9\\xcb\\x8e~\\x8d\\xa4\\x05\\xf4\\xd5\\xfe/\\xd5\\x92.\\xf4\\x85\\xc5"\\xefB\\xda\\xf5\\x1a\\xd1l\\xda\\xd4qE\\xd1V\\r\\x12u\\xb9\\xab\\xb0\\x0c\\xf2WaB\\x0c\\x11\\x87kC\\xc3\\xcb\\x85\\xa7*\\x98b\\x9d\\x146\\xca\\xf7T\\x0f\\xe3J\\xf5Tm\\n\\xd1\\x8a\\xe4`m\\n\\xa1\\xad\\xb1\\x97\\xa0,N9\\xa4?\\x04\\x17\\xc4\\x05\\x85\\xeaO\\\'Z\\xc4q\\xbc\\xe7\\xf1\\xa7\\x03\\x93v\\xefZ{oF\\t\\x82\\\'\\x93h\\xc3\\x1c\\xc4w\\x00\\x11\\x05\\xbd\\x1e\\x90\\xe2k\\xf0\\xe8\\xb6%\\xe4\\x8fI8\\xb2ei\\xac\\xa7\\x99\\xc6b\\x94m\\x87\\xed\\xe6t\\x1a\\x7f\\xa8\\x004\\xe9\\x87\\xcc\\xfa$$\\x07\\xb6\\xf2|\\xdd\\x0c\\xacK\\xa3\\xf7\\xb3xA\\x81f\\x94\\x06\\xc3Fi|7R\\xc5PU\\x073\\xf3\\xbd"\\x16HIbJ\\x9a\\xc8\\xfe\\xad\\xcc\\xe8p\\x9c\\xab\\xe88mGw\\xf3\\xe2\\xabh\\x1d\\xa9\\xc3\\xeaU2[\\x04\\xf3Bq\\xae\\xecq\\x06\\xb3\\xb3\\xaaj\\xac\\x0ci\\x15\\x17\\xb1B\\x9c\\xb5\\x87\\x85p"\\\'\\x0fU\\xe8\\xe0\\xf5\\xf0\\x07\\xb7w0\\x96\\xd11\\xd0pP.\\x14\\xaa@\\xa2\\xeb\\xfd\\xadA\\xf7B\\xef\\xb3\\xfb6\\xcfpr\\x88\\x1e\\xe7n\\xd7\\x02\\xb4X\\xcf\\xee\\xac\\xd7\\x82\\xcb\\x03$A=\\x82"\\x12\\xed\\xa3|\\xc3\\x0f\\xb2\\xd848m\\x9f\\x00J\\xcd\\xa2\\x84\\xda\\xb4\\x99+\\xed\\xca|\\x1a\\x9evB\\x17\\x9f<\\x925>m\\xbe\\x82\\xb7\\xd1\\xc39\\x98\\x95\\xd2<i\\xacxt\\x1e\\x06\\x02\\x1b\\x0e\\x14\\xcb\\x02\\xdb\\t\\xaa|\\x01\\xaf\\xdd!\\xc5\\xbe\\x8f\\n\\n3F\\x07\\xae\\xbb`\\x1dr\\xfb\\x170\\xf7\\xbbh\\xec\\xf2\\xe9\\xfdys*JZ\\x03\\xcb\\xd5\\x96\\x89\\xdf\\x03\\xf5N\\xa8\\xa0\\xce\\x1b\\xd9\\x8b&<!o4.R,\\xc2\\x8e\\x8d\\xb1\\xc5\\xf1\\xb3c\\x07)^%f\\xdf\\xe7\\x0b\\x85X\\xe0r\\x98\\x93|QL\\xec=g\\x833%\\x8b\\xea\\x88\\xb3@=o\\x91*\\xf7\\x9c\\xf6\\r\\xa7\\xf0\\xa8\\x90K\\xa5Z\\xa6\\x94\\xff\\x95\\x93\\xf3\\x85\\x97\\xe7d\\x99y\\xf2\\x06.\\xa3\\xf4Q\\xe6\\t\\xea\\xca\\x84\\x9enTf\\xb8"E\\x05\\xccr\\xb1=\\x05jm\\\'\\xd0\\x94\\x87pE| \\x18\\x90\\xfb\\xe4\\x9b\\xab0\\x1cL\\xa6\\xffC\\x1e\\x8e\\x82-\\xd7$\\x10O\\xd3\\xc1\\x1ff\\xb2l\\x1f\\xf4"4\\xcf\\x08\\xf3<\\xc7(\\xb6\\x91TD\\xeb)\\x90\\xee<\\xb1\\xb8I9\\x1f\\x1ep\\xad\\x98\\xa4\\xd6XH\\x97\\xcdv\\x17hu~\\x90k\\xfa\\xa5Q\\xee\\xbe\\x85|\\x04Z\\x1b6\\xeb\\x9a\\xc9w\\x8eh\\xb5\\xe7:\\xad[\\xb8R<\\xab\\x12\\x7f\\xccI\\x99\\xf3\\xa7-"\\xf3\\xf6\\xe2V5\\xde\\xd1\\xb8\\xc2\\xb6\\xbd\\xbeI_\\x1d\\x1d\\xa9.\\xee\\xee/\\x18\\xbd\\xca\\x191\\xdc\\xd5<Z\\xb3\\xf9\\x0b\\x1c\\xee9tx\\x83A\\xe3\\xfdv\\xb7\\xef\\xd2\\xbaX$\\xfe\\xe2\\x96\\xea0\\xf3\\xd7\\xec\\xaf\\xc8\\x86\\x8b\\x18\\x90\\xe4\\xef@\\xaa\\x9e\\x83\\x9e\\xf2\\xd7QJ\\x84\\x9e\\x07M0\\xd5T\\r$\\xec\\xa8\\x95\\xc1\\xb8|\\xf6\\xa4\\xbd\\xcal!\\xd2z{\\x13H\\x12\\xf0\\x04\\x16\\xc1\\x9d>\\x1aY`~\\x86\\xdc\\xa7?\\x1bb\\xe6\\xd6IO\\xe5\\xb5h\\xe6^\\xc8\\xdb\\xd7\\xbe\\x1d\\xc9\\xc7\\xd5\\x12k{w8\\x17,\\xdf\\x05\\xb6l3\\xd21L\\x03(=\\x10\\xc9\\xb1N\\x9c\\xf3\\x97\\xba\\xd3\\xef3/V\\x1b-\\xd3\\xdf\\x87\\xde\\xae\\x85\\xfbc\\\\\\xa1\\xb2\\x10\\x057\\xba\\xa1\\x93Zf\\xc1\\xed\\xc9(K%\\xbf[\\x9e\\x1bS\\x81\\xe2\\xfb\\xbc\\x9b\\x0cGm\\x83p\\xf7\\xc9\\x8e\\\'\\xb0\\xb1\\xee5c\\xce\\xd6|@\\x00\\x84\\xdb\\xf3-\\x04e\\xce\\x15!~p5\\xa8\\xc0\\x98D%i\\xe4\\xc8s\\xf7\\xee\\xb3B@\\xad\\xc3\\xa6\\x046\\xc6\\xc7_\\x15d\\x9e\\xd7z\\x86\\x86+O\\t\\x90OQ\\x87\\x16M\\xcaC2\\xeb\\x8c\\x8f\\xde\\x9e"\\x1c\\x80\\x1e\\\\\\x07\\xde\\xd0*\\xf4p\\x98\\xbb!\\xce\\xb5 []Y\\xbb\\xcc\\x0c\\xb4f}7v\\xa9%\\x96\\xd8)\\x1e\\xb7\\x12\\x1f\\xd6W\\x8f\\x9b\\x8b\\x948\\x8c\\xaf\\xe87\\xf8\\x93\\x10\\x13\\x83m\\xc35|6\\xad\\x9f)\\x7f\\xf8\\xd3?\\xed\\xb1\\x8f!Ax*\\n\\xf7\\xf6j\\xfd\\x82\\\'\\x90\\x16nB\\xa3\\xd59\\x9d\\xf3\\x10\\xa2y\\x80\\x18h`?\\x16\\x15\\x81j;\\xb1\\xb2\\xac\\x01\\xaa_\\xe6\\xe5\\x89e\\x19\\xa4\\x08/\\xfaG\\x01\\xddr\\xbf\\r\\xb2wHH\\x0c\\x9a\\xf1\\x13nK\\x8a~\\x18\\xd8\\xb8\\xb97\\xce\\xbbA\\xa7\\xd5\\xffA\\x847\\x9c\\\\0\\x8e\\xac_p\\xf6\\x80\\x96\\x9b\\xfd\\x92\\xef$E<\\xf5a6\\xab\\xba/Xn\\xb0\\x08\\x8b\\xc8\\x7f\\xb93\\xd8\\xedr8\\xa0\\x1c\\xa9\\xf2n!\\xa4\\x06h$\\x81\\x0e_V\\xedQ\\xc0\\xeb\\xb4\\x82\\xd1R\\x8f\\x99\\xc7\\xeak\\x1b\\xbd\\x8e\\\\CN\\x11\\x96w\\xa4P\\xf5!\\x84aB\\xfa\\xcc\\xaa\\x05%\\xa7\\xbe\\xed0\\xb5\\x802\\xff{_?Z&\\xa4\\xee{Bn3\\xa0"3^SS\\x861ZG\\xaf\\xd2\\xe1kD\\xe3\\xfb\\xb0\\xd9\\x06\\x1c\\xc4\\xe2\\xafC\\x08\\x91ty\\xa7?\\x0f\\x9f\\xdcVS\\x9b\\xe2\\x83e\\xba\\xba\\xe2\\xbeV\\x97\\\'N\\xc3\\xf9s\\x16T\\xf4\\x12\\x16\\x0f\\xd3Z\\xec\\xe2Y\\xda\\x89\\xac(\\xdan\\xf7ku\\x1b\\xd45*?\\xb4\\x0f\\x8a\\xef\\x04\\xde\\x96\\x8f\\xd9f\\x19\\x0f\\xe0\\xa98=Jef\\xae\\x0c\\xa9\\x0b\\xc4\\xd2\\x8e?\\x82sq,\\xd3n\\x1d\\xea\\x94}A\\xff\\x80\\x8eH#f\\xaa\\xfb\\x80\\xba\\xfd#3\\x83_\\xa8\\x86\\xe7\\x1aF%K\\xe8\\x18&\\xc36\\xdd\\x8dHd\\x92\\x8d{\\x0c\\xd5\\xa3\\xb2\\xb5.5\\xcf\\xaca\\xe9ad}\\x8f\\xe7\\xa2\\xeb\\xb4\\xf1\\x9d\\xf0R\\xefbl\\x1d\\xa4\\xcd\\xd7\\xbe$\\xea!\\xc2\\x8aM\\x94\\xdeoN\\xde\\x82\\x15\\x92{\\xcb\\xdf\\xdbY\\x10P\\xdd\\xa4\\xbfo5U\\xe0\\x081\\x04\\xfe\\xba\\xee_\\xe3\\xb4\\xa1\\x1b\\x19C\\xeb\\x85.\\x88C\\xad\\xb0,q\\xc7\\xb1Kn\\\\\\x13M\\xf8\\x86~\\xb1\\x93/\\x890\\x8c\\xd6\\xfe\\x8d\\xe1\\xc9\\xf2\\x16\\x9a\\xca\\x9a\\x9fU\\xbe\\x84\\xe9\\x03\\x0er\\xe5\\xd8\\x8dma6*\\\'\\x98m\\xfd\\x86.D\\xbe\\xbd\\x96\\xc878\\xacb\\x96\\xcelm\\xc3\\xe5T\\x81\\x1f\\xaa\\xd4=}\\x17;\\x8f\\xdb\\x9c\\xd8l\\xb6.\\xc9,\\x04\\xee\\xb9X\\x14C\\xcc8\\x16`\\xa9\\x16P\\xa9W?G\\xefA\\xd0)\\x8a\\xd4\\xeb.!#\\x9d\\xadX\\x1an\\x96\\xef\\xcbv\\x91\\xdc\\xaa\\xa3lYl\\x02\\x15\\x89\\x1e\\x8ft\\xc6e"l\\xb4Ng\\xd5"\\x11)\\xcb\\xfd\\xa4eD\\xbf\\xd5F\\xd9\\x99Ajo\\x86Ajb\\x10\\x98;\\xfdT?B\\xae\\xe7\\xe5!\\xad\\\\g\\xa88\\x97\\xa5a1\\x92\\xc0b\\x8b\\x06\\x10}\\xfe)N}\\xed\\xc0\\x87\\x82\\xf4\\xceR_\\xb0X\\x07Q\\xb3\\x14\\xa2\\xc9g\\xbe\\xc5\\xa7ImpR\\xbbp\\x06zj\\x89\\xfa\\xa70F\\x86\\x9a\\x1e\\x92\\x89\\xfa\\xfc\\xa9\\xcft\\xcb\\xfd\\xd5\\x91\\xd9l\\xc70\\xbdbIE\\x82\\xbf\\x06\\xf4\\x1c\\x1b\\x16\\x015}\\x1c\\xc0\\xa2>\\x90\\xc0\\x1e\\xe0\\xe4d\\xec\\xfd\\x184\\x04M^\\x9e\\x80R\\xf4\\x85\\x93B"heF\\x179(\\xf8\\xf2\\x1a\\xd8\\xe7\\x90\\xd9|`Xt\\xd1\\xd9\\xe6q|"\\xf9\\xac\\xd5\\x9d\\x84X\\x97\\x07\\xb5\\xef\\xe8\\xf5s\\x19\\xa1\\xff\\x83\\x06\\x19l\\x19L"\\x15\\xe7\\xb5\\x12r\\xc7\\xa6\\xb1k\\xd5\\xcd<\\xbb\\xe0;w\\xde\\x8c)EM\\x8aY\\x9c\\xce\\xfd\\x1e\\x1fg\\x18A\\xfa\\xb5O\\xb5\\x10\\xe1i!\\xf8\\x91\\x0e\\xaa\\x89f\\x8a\\x16:\\t\\xfa\\x1a02i:\\xa5\\xd1D\\x0b\\xf9\\x14\\xf4p=\\x0b\\xeb\\xc9\\xdca\\xf9\\xbfj]\\x9b\\xa6`\\r\\xc5\\xdc\\x08\\x99\\x90\\xa3\\n&\\xa2>W\\xe3\\xbc|\\xe1\\x93\\xb8\\x84I\\r)J\\xca\\xa0A\\xf5\\xa5\\xfe\\x88T\\\\zi\\xcd\\xef\\xb5\\xc8#\\x94F\\x18\\xadX\\xa5\\\\\\x96Z9\\x80\\xc9\\x86\\xdf\\xcd\\xea\\xdf\\x95\\xc0\\xc0p\\xa8\\x13${\\x10r\\x08\\xa7\\xed(\\x87\\x17\\xc2\\xae\\xba\\xf8\\xf1\\xe4F\\xa5\\xa2\\xbb\\xf80"\\xd0\\x88\\x18\\x16\\x8c\\xa6\\xc4\\xf4\\x17Qe\\x18\\xea\\xe5/5\\xf4\\xe6n\\x10\\x07\\xfc\\xec\\xb6\\xb1\\xfb\\x8b\\xb3\\xb3o@\\xb5Ob\\x9f>\\xcaz\\x0bq\\xed\\x88^\\xd7\\xa3\\x06\\n\\xdf\\xbc\\xdc\\x8f\\x12e\\xf2\\xadn\\xdc\\xb5XtF\\xa1\\xb8\\xed\\x8eU\\xb8\\x18\\xdd\\x85E\\x90\\xf6\\xda\\xc4\\x15\\x82\\xf2\\x03\\x89\\xfb\\xb8\\xe5\\xc7\\xae\\xe7,\\xf6\\xce\\xbe\\xc9\\xb4o\\xea_\\x97\\xc1\\xfa\\x11\\xa2\\xcbVv\\x81G\\x85K\\xf9&\\xc4t\\xd2e\\x1e\\x8d\\xb86\\xa2\\x02\\xa0\\xc3\\xe1\\xfb\\x11\\xe9\\x91\\x10\\xf4\\xca\\x81X\\xa7Y\\xb1\\xa4\\x82\\x8a\\x82\\xfb\\xc5\\xa2a=\\x83R>^H\\x12\\xc2\\x9f\\xe1)\\xae\\xa3\\x90\\xb7\\x18\\x9cz\\xf3\\xcfl\\x95u\\xc2Zi\\n\\x98\\x02\\x98\\xf1\\xb2\\xa7i\\x83\\nLX\\xfc\\x8fg\\x07\\xe0\\xe2\\xa0YA\\xfd\\x97\\xc6\\xe3\\x1ft\\xc8\\x96E\\xa6\\x86\\xf6\\xd0\\xca\\xe8\\xef\\x89\\xd3\\xd8=\\xe3\\x0eP7\\x98\\xad\\xedfK\\n\\xc9N\\x81\\xaf\\x80\\xc2\\x82c\\xf3\\x9c\\xcd\\xa8\\xfd\\xc8\\xe8\\t]T\\xf0\\x9a\\n@&\\xe9\\xd4{\\xe8M\\x9a\\\'\\xf5\\x95\\xf7^&\\xa51e\\xef\\xe4O\\xe1*\\xb5\\x89\\xedf\\x87\\x1e\\xb7\\xfa\\x8f\\xdd\\xf5\\x0b\\xd4d\\x9dx\\xf9\\x85\\xb3!\\xfd\\xeeZ\\x16\\xc1g\\x98\\x0e\\xb4\\xa3\\x05\\x99\\x8b\\xa9\\xe3\\xc5\\xbf\\xce\\x1f\\xf5\\x8c\\xdc\\t\\xf2\\xf4\\xc5\\xe6\\xbf\\xff\\x8c[\\x97\\xe1\\xeb\\x89\\xf0\\xd9\\x9a\\x91\\x0c\\xda \\xab\\xc1\\xf9\\x13-\\x93\\x9ax\\xadQ\\xa41\\xf5HQ\\\\Oi\\xcd\\x08\\x1e<X}\\xb6\\xb5\\xea\\xbe\\x0c~`TR\\x0e*\\xb2\\xb0D\\xeb*\\xef\\xe6\\x038\\xdd\\xbc\\x9d4k\\xd8x1\\xa8\\xbb\\xf1\\x92\\x8f\\x80\\x17\\x1e\\xf7\\x93\\xc5\\xe1\\x92\\xad\\xce@:F\\x16\\xa9\\x8eeK\\x00u\\x84\\x15\\x9evX\\xfe\\xba\\xeb\\x1e\\xfaD\\xa6o\\x12N!\\x0b\\x8b\\x98Dq\\x87O\\xba\\x18}a\\xa5\\xd3\\xe1\\x0e-\\xcf*\\rv\\xb32\\xf8\\xaf\\xec\\xe7\\xc7\\x1cZ\\xe5\\xf4\\xec\\xf40du\\xfc\\xf7\\x9f\\x80X?\\xe5\\xd0p\\x9btY\\x9f2\\x13\\xc4\\xabk+E\\xac\\x87h\\xe9\\xe2\\xe6T\\x0eA\\xf9\\x93D\\xf1\\x93\\xad{(d,pE\\xc5\\xbe\\xeb\\xdc\\xdb\\xb0\\xe0X\\x1c\\xf7\\xa4\\x8ej>-:j>O\\x82\\xa7\\x9c\\xa7\\xeb\\x81.\\xb2Q;lc\\xd8i\\xda8\\xfb\\x19\\x9fc\\xf4O]\\xdcE\\x88n\\xa7\\x90\\xb5\\x8f\\xc6x\\xbb\\xb1\\x92\\x1a\\xd0\\xd5\\x87\\xb9\\xfd\\xf4\\xbd*\\xc8\\xf3\\xda\\xc1\\xc4\\x90\\xc4\\x07T\\xb8\\xc6P\\xf3\\x9eD\\xf6\\xa4\\x88\\xa2\\xf6\\x92K,e\\xbd\\x87#\\xe59>\\xc5z"\\xe3A\\xd1\\x86\\n\\xab\\xb5O\\xcfn\\x19\\x9d\\x8c\\x1c\\x90\\x8a\\x8e<z@\\xeb\\x87\\xb6Z\\x0b?\\x8c\\x80S$\\rkVv\\x9a\\xcb\\xdb\\xf4SA\\xc60\\xaf\\xb7\\\'\\xa0\\xf8\\xbc ~6\\xf5\\x1av\\x98\\xf1"\\xdeY\\x8a*#\\x15Ed\\x81\\x1d\\x1d\\x9afj\\xe8\\xfct\\x8f_(\\x0c\\xe5\\xa4\\x8e\\xfa^\\xf7\\x92@\\xf0\\xd56\\x80\\xb0\\x97\\xfcpqH\\xd6\\xc4\\xd2\\x86\\x8b\\xe7c\\xa0\\xe3n\\xe8)I%Z\\xa8s\\xeeE\\x05k\\x92\\x91Df\\xe4\\\'\\x90\\x1a\\x06\\\'\\x19\\xdc\\x04\\xbe4\\xb5@{S\\xce\\xdab4\\x0bn \\xf1\\xdc\\x892\\xbf\\xd0\\xfe;\\x06d\\xfe\\x0cL\\x94\\x97L \\xa4\\xda\\xb7\\xfc\\x80\\xce\\x8c\\x98\\xdb\\x06\\r\\xdf\\x1f\\x94{q\\xfd\\t\\xfaj\\xc1\\x0eh\\x9b\\xf5\\x91\\xe9\\xeed\\x93\\xbc[\\x19\\xcc\\x8a\\n\\xb0\\xf4\\xa0c\\x13\\x9a\\xca\\xb8#\\xf6\\xef\\xa9\\x147\\x10z\\x0cs\\xe3\\xf00|\\xd1y\\x95Y/_\\x13\\x99\\x8b\\xfb\\xa8\\x1c\\x1eF\\xe6pHy\\xbe\\xa0\\xdf\\xd4\\xefh\\xcc#\\xcc\\xc2A~\\x999\\xd1Y\\xe2@\\x85\\xc7G~\\xee\\n3\\xeb>\\x84\\xcb_I\\xfb4%\\x19\\xde\\x1a\\xdb\\xdd\\xe9\\xd0)=\\xb2\\x01^\\x13N\\xadrz\\xc3_\\xc0@o/+\\\\\\x16\\xa8F\\xa5\\xfdZ3\\xb2u\\xe46a\\\\\\xe4=\\\'"\\x9dH\\xe0\\r\\xb2ho+|\\x8c\\x94`\\x9c\\xd2j\\x8cw\\xa8ej\\x80X\\x9e\\xb3k\\xfaP\\xab\\xdf\\x99_E\\x01V\\xc6[2\\x8a\\x97\\x14+-M\\xc2\\x14LWV!\\x1a\\xf1,\\x9b$c\\xfen"\\x0e5\\xd6\\xcc\\x91)\\x14\\xbe\\x8f3\\x9b\\x8f\\xe9\\t\\x983\\x1d\\xf2\\xa0\\xc9\\xe5\\x1ea\\xcbm:K\\xbc\\xc7\\x98\\x97\\x81\\xd8\\xfc*\\xf9R}1\\xe3F\\xe8\\xa4\\x87C\\x0ewkkb*\\xf1\\xab\\xec\\x00\\x17\\x93&G\\xb09\\x87]\\x89\\xd5\\x1fG\\xfc.\\xc7f\\xce\\xb4r\\xd5\\xee*s\\xdc\\x03M]\\x17u\\xde2\\xd52\\\'\\x94G\\xe0\\x02\\x1e/\\x8f\\xd4\\xfb\\xa9\\xc1\\xe7|\\xf3\\x88\\xd3\\x9a\\x1b\\r\\x02\\xfb{\\x17%\\xbc@6#\\xbc\\x17\\xb3C(Rs\\xff\\xec5\\x82\\xce\\x8f\\x18\\x10n\\x9cO.\\xb4z\\xa4\\xd3"\\xc7\\xfa|`\\x9c\\xdb\\xae%\\xea\\xd1\\x82\\xef\\xdc\\xbe^\\xc7\\x94\\x05\\xed\\x92|#\\x03\\x9f\\x85\\xd6\\xe7\\xd3\\xa4/\\xd8\\xe1\\xe1.\\xd0\\xaa\\x81\\x10\\xf3m\\x07\\x04D\\t\\xb8?\\xc4\\xc2kD\\x7f\\xd4>\\xac\\x89r\\xbdk?\\x06\\xed\\xe4]xR@\\xc7\\xb7(\\xbe\\xf7O\\xb6\\xbcz\\x8e\\xcc\\r8#\\x17\\xc0\\x8b\\xdcC\\xcd\\xaa\\xed\\xaed\\xbf\\xea\\xb7\\x0fw\\x9f\\xfe\\x01\\xb4\\xc8\\xca\\x96\\xbb\\x1aG\\x8d\\xe9\\\'V\\xabM\\xc8\\xb7\\x9d\\xec\\xae\\xea\\xc3\\xdaP\\xb0\\xef\\x8a5\\xf8\\xb2\\x1f\\x9e\\x82:Ts\\xc0\\xe4\\xc7\\x98\\xf7\\x00V\\xf6\\xad\\x82\\xa4"k4\\xf9\\xa4\\xf5\\x0b\\xf8\\x9e\\xa7\\xd2\\xe9\\xce\\xcd3\\xe7M\\xa3\\xd9.\\xb7r|\\x8bj\\x06{\\x8e\\xf4>\\x96\\xbf\\xb7\\xcd\\x17cMa|T\\x0c\\x9e\\xe6\\xbe_\\x9fg8-\\xca\\xa2\\x88W\\xb5\\xdd\\x93\\x05\\xdbaE\\x9d\\xfc\\x8d1\\xe2\\xa0\\x16\\xebnG\\xe8Xl|\\x19\\x86\\xef!\\xd0\\xe1&\\\\\\x8b\\xa8\\xb0\\xb37/Y\\x9b\\x00\\x94\\x03\\xfd}x\\x05\\xb1Oe\\xa4u\\xf9$;\\t\\xb9\\xd6\\x92\\x16\\xd1\\x1c\\xdf\\x84\\x87k\\xf6{u\\xc2\\xee\\x95\\xf0"\\xe3\\x077~\\xc1\\xfb&\\x81\\x98\\xc3L\\x0c\\xeb\\x91c\\xdb`\\xee\\x8fY\\xa5\\x17\\xe2\\x1b1\\xdfs\\x1bJk6bw{\\xd0\\xf5\\xdc\\xee\\xc6q\\r\\x9bp\\xbf\\xbftv\\x92x\\x90\\x8a\\xc2\\r\\x12\\x82\\x1d\\x1fn\\xb8t\\xb2\\xd8\\xcf\\x85\\xd6\\x0c"\\x9b\\xfc\\xdeO\\xe4\\x1c98\\x9a\\xa8\\xf6h\\xc6\\xd5U\\xa5\\xb1\\x88\\xe2\\x872\\xea\\xb3k\\x7fg\\x8f\\nEB\\xca\\xf1zo\\xc6.\\xee\\xb4\\x8e\\xb04l\\x01\\xc9\\xdd\\xed\\x91\\xdbD\\xac\\xc8\\x93\\t\\\'\\xc1\\xce\\xac\\xd1\\xc4b\\xc5\\x13\\xc0\\xaa\\\\\\xda\\xab\\xe11\\xf8e\\xd1\\n\\xc4\\x13\\xdcI\\xa3TD~\\xae\\xac\\xf1\\x8d\\x97\\xc0_\\x02E\\xf34\\xdaE^w\\x8aI\\xa43\\xa8\\x84\\x9fn\\x97\\xc7\\r\\x1a@\\xd6\\x97\\xf3@\\x829\\x84\\xd6N\\x91\\xf980UVj\\xf1\\xc3\\x1b\\x04\\xa0iw\\x9fZm\\xd6\\xb94\\x94\\xfd\\x90\\xacpy$\\xca\\xf2U\\x11\\xab}\\xfb\\xd2P\\xe5x\\xa9U\\x04\\xf5[L\\x84(M\\x8a\\xf8G\\x94QX\\x8c\\xb6\\xee\\xf5\\x100\\xb9\\x99\\x15\\xf9\\x04(e\\xe8\\xb9 e@"\\xa2)\\x90\\xeb\\xa1ToZq\\xe3\\xe9\\xe3\\xd7\\xce\\xc3e=M\\\\G\\t\\x0c\\xd4\\x01\\xc2#\\xd7\\xb8\\x17\\x99\\x9b/d\\x1e\\xcc\\xd6\\xe2\\x00\\x97\\xd5\\xde\\x11\\x82\\r\\\\\\xc2x}7K\\xde\\x13`h#\\xd6\\xed\\xa8Bo\\x07\\xc1\\x90\\xe8eFn8m?\\xe7\\x88\\xaatmu<{\\xcb\\xd7\\t\\xc5C\\xf7\\x8d\\x1c\\xe1\\xeaC\\x14\\xdd\\xe5\\x03\\xd4\\x1d\\x87\\x1f\\xf21\\xddS\\xe6\\xab\\xa1t\\x13G\\xe2\\x8dSJ\\x1f\\x00zC\\xdeM\\xb7\\xce\\xe8\\x05\\xda!/\\xfdIbH\\xe6\\xae\\x82S\\x0eg%p\\xa5\\x9f\\xda{\\x10\\xcf"\\x94b\\xa4]\\xe1\\x05mk\\xd3\\x7f~\\x90M\\x1e\\xca\\x8b\\x06\\xc2k \\x0e\\xf7z=\\xc2$\\x8c\\xf7\\x99\\x1e{i\\xec\\x1ev\\x03,!\\xac2mO\\xe4\\x842\\x80b\\r\\xb4D\\xca\\x90\\x11!\\xe7\\x112ba\\xea*\\xcc[\\x08TI>\\xc5]\\x99]\\xf3\\xf90yI~Gc\\\'\\xd1\\x0cZ^\\xce\\xa1\\xf3\\xd5ix\\xcd\\x98\\x82\\xdf7\\x1c\\x06\\x12LI\\xab\\xcf \\x1f\\xd5I\\xde\\xfe\\to\\xa7\\x08Hf\\xf9\\x7f\\x06\\xdd|\\xe7i-\\x06\\xa1.\\xe6t\\x9f\\x07\\xae\\x7f\\x90\\x1f\\x1e\\xac\\xdaZ^\\xc9\\x993\\xbdSy\\xe5G\\xf12\\xc2A\\xd1$\\xc8\\xd4\\xaf\\xda\\xac\\xc4S\\xedGg\\xf0\\x94f0Fz,\\xab\\xc2\\xaf67un\\xa1\\xa8\\x8d\\x7fe\\x9e\\xc9\\xd1\\xa8\\xcb\\xc0]?\\xba\\x0b,\\xfc\\xac\\xb4\\x06y\\xfa\\x806\\x93\\xe1\\xb6m*u\\xe1\\xedo3\\xfbA\\xce\\x8a1\\x1f`\\x98p\\xbc\\x0cY\\x18\\x81\\x87\\xdd\\xe21\\x07\\xb5\\xfb\\xde\\xceB\\xaaj\\xda\\xd0\\x91-\\xf5\\xd8\\xfe\\xda\\x80j\\x8a\\xd7\\xf1\\x91\\xfb\\xebD&\\xee\\x1c\\x9aJu\\x9b%2/t>\\x84\\xbe\\x9eU;f\\t\\xbbL\\xfe\\x89\\xba\\xfd\\xad\\xf4(\\x96\\x1d\\xd8\\xacv6I\\xbf\\xd2\\x07\\xec3\\xad\\xec\\xb6\\xed\\xaa\\xa1Y$\\xa1\\xe7\\xf8\\x00\\xe1tY+\\xab\\xfc\\x84/D\\x97|\\xde\\x15]\\x08y\\xd3\\x90\\xe7\\x1cY\\x0ek\\\\\\x9c$\\x16q\\xa3##\\xf1\\xf9\\xbb3})\\x8a1\\xa1\\x12\\xb5\\xe6\\xf4H\\xeaW\\xb74kw\\x84a\\xdd\\xb4\\x1f\\x84\\x16b2\\xa7\\xa64W\\x96\\xb1\\xe0\\xd5\\xc2M%\\xcb\\xf2\\xcb\\xcd0B\\x11\\xb3Q\\xaf\\x0e\\xcc^\\xb0_P\\xfa\\xbcye\\xd4\\xe0\\x81\\xcc7\\xeb@|\\xed`\\xef\\x07W\\xd5\\xac\\xed\\x85\\xb6F\\x18=#sA\\rH\\xe4\\xa6\\xden\\x8f\\x12\\xab\\x93\\xa2\\xf22ja\\xdba\\xb9qU\\xe5\\xcf6{;t(W\\x9f\\xa7I\\xf2#cN\\x85\\xabv\\xb8\\xda^\\xb1\\xc4g\\xc6\\xc4\\xc1\\x02cl\\xb9\\x17\\x1e\\x86F\\xd6v\\x99\\x1d\\xdd\\xadg;\\xa8\\x186\\x91\\xb3z8%dq6 \\x1fS\\x0e\\xcf\\xe1Q\\x1e\\xd5\\xd9\\xe2.\\\'\\xd7\\xad\\x0f\\xb61\\xee"\\x10\\x1a\\xa0\\x97\\xa5\\n\\xef1\\xc9G\\x04\\xc3\\x14b\\xc0\\x8b\\xae\\x1a:\\xb4+\\xaf\\xe3\\xd0\\x0c\\xbeogu\\x80\\xd3\\xc94`\\xbf\\x88z\\xfd\\xb8V\\x8a\\xe5%(a\\xf0\\xacB\\xe8\\x9c\\x1f\\xb07f\\xba\\xe7<O\\x16R\\x88\\xb7\\xa5\\xbd\\xa9p\\x18\\xe2\\rQ\\xb2^\\x96rs\\x0b\\xc9\\xecK\\xc5\\xc4.\\x91\\xd7E1n(\\x1dJ\\xdc\\xeb\\x12\\xb4\\x8a;{x\\x18#\\xda\\xc9E\\xe4\\x89\\xd02\\x86\\xc1\\x819\\xad#\\x9f\\x84\\x8e\\xd3\\x84I\\xcf^_lv\\xd5&H\\xed\\xe7\\x83\\x83\\xda^t/7\\xc0w\\xa9*\\x9a\\xbf\\x88\\xff\\xda\\xba\\x91\\x9fV(\\x0b\\x08\\x8aKfa\\x9eU\\xebE\\x90\\xc7m\\xd7\\xdc\\xbd\\x97\\x8d\\x7f\\xd1M2\\xaf\\xf2\\xd0z\\n6\\xb8$HM\\x93:\\x929\\x81\\r\\\'\\x161Z4\\x9d\\xbd:\\x05\\x84\\x1eE_\\xa7m\\x86\\xedX\\xda\\xc7u\\x8f\\xe8^l\\xa3\\xbe\\xa0\\xfa\\x90\\x85\\xacy/\\xae2\\xaa\\x99\\x12#\\xe3M\\x1f\\x93Q\\xd7\\xb2\\x1c\\x96\\xd7\\x0c\\xdd\\x05\\x8d\\xcdF\\x9fM\\x85\\xad\\xa3Nj\\xeb\\x9eQ\\xe1&\\x08\\xa6BL\\xf8\\xa4\\xe2>C\\x17\\x8b\\xe1\\xf2\\xa9x\\xa3e\\xd1)>aN9~\\xe5;\\x8e\\x92PQ\\xf2\\x83\\xc6\\xdf`\\x0b\\xb0^\\x99\\xd6\\xef\\x97O:U2,\\x08\\xf2Y=\\xa9\\x92C&\\xacwT/F\\x93\\xeb]\\x17\\xce\\xbeM\\x92h\\x15\\xa1pE!\\xafB\\xb4i\\xd2\\x85\\xcc4\\xba\\xb4+\\xc6u30\\xcaI\\xea\\x83\\xe8\\xa2\\xa4\\xcbon\\xc4\\xeb\\xd847%y\\xd9\\x9f#1\\xd6$\\xd6"\\x10Va\\x81*+\\xc3\\x1d\\x07\\x1b\\xed\\xf4\\x01R\\xef=X\\xc3.\\xb0O\\xa34\\xf0XnD\\x0cN\\xa9\\xba\\xba\\xcc\\xdc}\\xa0^\\xeb\\xe2\\xe3\\tW\\x87\\xc9g[\\xd8\\x0f\\xdb\\x1b\\xe8[\\x04\\xde\\xe4\\xc5\\xa3\\x8b\\xb1\\xb8\\x11\\x11\\xb8\\xc3\\xc2N\\xdc0n\\x16xa\\x87\\x9dF\\xba^\\x12\\x13\\x88\\xf9\\x7f!\\xd8\\x99\\xfc\\xe4.kT_\\xf6\\xa8\\xe1\\xc1\\xfb\\xeb%\\\\\\xb4|\\xc4<:\\xbae\\xf8[\\xbb\\xbe}\\xc6h\\x10\\xfbV\\x85N\\x13\\xa2\\xe0\\x18\\xdb\\xd7\\xf3\\xf5K-\\x16`\\x1b\\\\\\xa6\\xa7\\xa98\\x0eF\\x82\\x93tZ\\xc2\\xd34>e\\xda\\xe7E\\x18\\x9b\\x1e\\x93m:_tza\\xfbG\\xda\\xa9\\xbb\\xc8\\x13c\\xb0\\x1fM\\xdc\\xc9`\\xf7\\xe4\\x88\\xfe\\xb2\\x80h\\xc4dS)\\x8c\\xea\\xba\\xab\\xb6\\xde\\xb4d_\\xd1ug\\xa4\\x9e\\xc5\\xac\\x10\\xbaD\\x19.8o{\\xab\\xaf\\x13\\xf6\\t\\xfc\\xc6\\x0b\\xbc\\xd2\\xdf\\x16\\x18\\xdc\\xc0`nT\\\'\\x124\\x95i6\\xcd!J\\xc0\\x0f\\xa4\\xea\\x93!\\xf2\\xf8l\\xbf|\\xb5\\xa1\\xa2d\\xbd\\x9a\\x1a\\xab\\xc4\\xaf\\x1bk2\\xbb\\xd6\\xca\\xc7\\xd2\\xb5\\xb8\\xa98N:\\xff\\xfe~\\xa7\\xed5\\x8d\\xcbpV\\xf7\\xc5[\\xae\\xbd\\xff\\xe0\\xdaBb3b\\xc5\\xc5G\\xa0\\xaa\\xd9\\xc9\\x90\\xa6\\xda\\x7f\\x995\\x82|\\x0f# \\xe5\\xa1\\xb0\\xceO\\xa8\\n\\xb6\\xeb\\xf5\\xdcH\\xe5\\xf8\\x07\\xee\\x0e\\xf0<\\xfel\\xa7\\xceu1d\\x10\\xf9\\x10\\xddt\\xe0Pmn\\xcf\\x10\\x88.\\xc1\\xe9\\xf6}\\xaf\\xa7\\xbe\\xe1\\xdc\\x19\\xaa\\xc5mx>M6\\xa03\\x9b!\\x87(Kf[\\xe2\\xf3\\xe0gx\\xe8\\x92Dlu\\xdc\\xee\\xaf\\xa8n\\x18\\xbc0\\xc8lL\\xeb\\xb4\\xd4\\x85\\x17=\\xa9Jh\\xf0\\xf4\\x8b\\xe4VcU\\xfe| U]\\xcf\\xf6d\\xd6\\xe1\\xe8\\xd8N\\x03\\xb2\\x84\\xad\\xdc\\xd2~\\xe0\\xd4iU\\xfd\\x9eF6x\\x9f\\xb8\\xe6\\xff\\x03j\\xff\\xff\\t\\nendstream\\nendobj\\n14 0 obj\\n<< /CreationDate (D:20210904030153Z) /Creator (TeX) /ModDate (D:20210904030153Z) /PTEX.Fullbanner (This is pdfTeX, Version 3.14159265-2.6-1.40.21 \\\\(TeX Live 2020\\\\) kpathsea version 6.3.2) /Producer (pdfTeX-1.40.21) /Trapped /False >>\\nendobj\\n15 0 obj\\n<< /Type /XRef /Length 63 /Filter /FlateDecode /DecodeParms << /Columns 5 /Predictor 12 >> /W [ 1 3 1 ] /Size 16 /ID [<7243b591978ca7e952f5ffe8b35a3bc6><dc770cb1959140e82608306cbd49bf1e>] >>\\nstream\\nx\\x9ccb\\x00\\x01&F\\xc69\\xf7\\x18\\x98\\x18\\x18\\x18s@$\\xc7%\\x10\\xc9\\x00a\\x07!\\xc49\\xe7"\\xd8\\xac\\x89 Rf\\x11\\x88\\x94\\x15\\x03\\x92\\x8c\\\\\\xdfAl\\xf9\\xa3 \\xd2*\\x1b\\xac\\xf2\\x17\\x03\\x00\\xba8\\n\\x07\\nendstream\\nendobj\\n                                                      \\nstartxref\\n216\\n%%EOF\\n\''
ans=number_of_lines(ans)
ans='Download\n\n\nSource\n\nPDF\nActions\n\n   Copy Project\n   Word Count\nSync\n\n   Dropbox\n   Git\n   GitHub\nSettings\n\nCompiler\n\nTeX Live version\n\nMain document\n\nSpell check\n\nAuto-complete\n\nAuto-close Brackets\n\nCode check\n\nEditor theme\n\nOverall theme\n\nKeybindings\n\nFont Size\n\nFont Family\n\nLine Height\n\nPDF Viewer\n\nHelp\n\n   Show Hotkeys\n   Documentation\n   Contact Us\nMenu\nBack to your projects\nCSE548_HW1.tex\nReview\nShare\nSubmit\nHistory\nChat\nEditor mode.SourceRich Text\n \n\n458459460461462463464465466467468469470471472473474475476477478479480481482483484485486\n\\noindent\nFrom the equation we derived in question 1, part b where r=3: \\\\\n\\noindent\nIf $k \\in \\mathbb{N}$, then $\\frac{3^k-1}{2} = \\sum_{i=0}^{k-1}3^{i} $ \\\\\n\\noindent\n$1 + 3 + 9 + ... + \\lhfloor n \\rhfloor _3 = \\frac{3 ^ {\\lfloor \\log_{3}n \\rfloor + 1} - 1}{2} =\\frac{ 3 \n\\lhfloor n \\rhfloor _3 -1}{2}$ \\\\\n\\noindent\n$ \\lhfloor n \\rhfloor _3 \\le n \\rightarrow 3 \\lhfloor n \\rhfloor _3 \\le 3n \\rightarrow \\frac{3 \\lhfloor n \n\\rhfloor _3 -1}{2} < 3n  \\rightarrow 1 + 3 + 9 + ... + \\lhfloor n \\rhfloor _3 = O(n)$ \n% \\noindent\n% $\\lhfloor n \\rhfloor _2 \\le n \\rightarrow 2 \\lhfloor n \\rhfloor \\le 2n \\rightarrow 2 \\lhfloor n \n\\rhfloor _2 - 1 < 2n \\rightarrow 1 + 2 + 4 + ...  + \\lhfloor n \\rhfloor _2 < 2n$ \\\\ \n% \\noindent\n% $\\therefore 1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = O(n)$\n\\color{black}\n\\end{document}\n \n Add comment\nRecompile\n'
ans=" \\documentclass[11pt]{article}\n\n\\newcommand{\\answerColor}{blue}\n\n\n\n\\usepackage{graphicx}\n\\usepackage{amsmath}\n\\usepackage{xcolor}\n\\usepackage{spverbatim}\n\\usepackage{amsfonts} \n\\usepackage{amssymb}\n\n\n% Hyperfloors and hyperceilings\n\\def\\hyperspc{\\kern -0.22em}\n\\newcommand{\\lhfloor}{\\lfloor \\hyperspc \\lfloor}\n\\newcommand{\\rhfloor}{\\rfloor \\hyperspc \\rfloor}\n\\newcommand{\\lhceil}{\\lceil \\hyperspc \\lceil}\n\\newcommand{\\rhceil}{\\rceil \\hyperspc \\rceil}\n\\newcommand{\\lhhfloor}{\\lfloor \\hyperspc \\lfloor \\hyperspc \\lfloor}\n\\newcommand{\\rhhfloor}{\\rfloor \\hyperspc \\rfloor \\hyperspc \\rfloor}\n\\newcommand{\\lhhceil}{\\lceil \\hyperspc \\lceil \\hyperspc \\lceil}\n\\newcommand{\\rhhceil}{\\rceil \\hyperspc \\rceil \\hyperspc \\rceil}\n\n\\renewcommand{\\baselinestretch}{1.2}\n\\setlength{\\topmargin}{-0.5in} \\setlength{\\textwidth}{6.5in}\n\\setlength{\\oddsidemargin}{0.0in} \\setlength{\\textheight}{9.1in}\n\n\\newlength{\\pagewidth}\n\\setlength{\\pagewidth}{6.5in} \\pagestyle{empty}\n\n\\def\\pp{\\par\\noindent}\n\n\\begin{document}\n\n\\begin{flushright}\n         Ryan Burgert 110176886\n\\end{flushright}\n\\centerline{\\bf CSE 548 -- Graduate Analysis of Algorithms: Fall 2021}\n\\medskip\n\\centerline{Assignment \\#1 - Math Review}\n\n\\centerline{Due - 7/3/2021}\n\n\\newcounter{problemctr}\n\n\\bigskip\n\\textcolor{\\answerColor}\n{\n    All my answers will be in color, to easily distinguish them from the questions.\n}\n\n\\bigskip\n\n\n\n\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp In this problem, we will\nlearn some techniques for summing series.\n\n\\noindent (a) Show how to compute the sum\n    $ S = 1 + 2 + 2^{2} + 2^{3} + 2^{4} + \\ldots + 2^{n} $.\n \n    Hint: What is $(S+1)-1$ ?\n\n%%%%MY ANSWER START%%%%%\n\\noindent\n\\textcolor{\\answerColor}\n{\n    $ S=2^{n+1}-1 $ because you can chop an even power of two $k=2^i$ (where $i$ is some positive integer) in half over and over again until you're left with two 1's, of which one can be excluded leaving k-1. For example, $8 = 4 + 2 + 1 + 1$, and $16 = 8 + 4 + 2 + 1 + 1$\n}\n%%%%MY ANSWER END%%%%%\n\n\n\n\n\n\n\n\\noindent (b) Now show how to compute the sum\n    $ T = 1 + r + r^{2} + r^{3} + r^{4} +\\ldots + r^{n} $.\n\n    Hint: Consider the two quantities $T$ and $r\\cdot T$.\n\n%%%%MY ANSWER START%%%%%\n\n\\noindent\n\\textcolor{\\answerColor}{\n\\noindent    $ T = 1 + r + r^2 + r^3 + r^4... + r^{n + 0} $  \\\\\n\\noindent    $ rT =   r + r^2 + r^3 + r^4... + r^{n + 0} + r^{n + 1} $\\\\\n\\noindent    $T - rT = 1 - r^{n + 1} $\\\\\n\\noindent    $T (1 - r) = 1 - r^{n + 1} $\\\\\n\\noindent    $T = \\frac{1 - r^{n + 1}}{1 - r} $\\\\\n}\n%%%%MY ANSWER END%%%%%\n\n\\noindent (c) Suppose $0 < r < 1$. What is $T$ as\n$n\\rightarrow\\infty$ ?\n\n%%%%MY ANSWER START%%%%%\n\\noindent\n\\textcolor{\\answerColor}{\nIf $0\\le r <1$, limit as $ n \\rightarrow \\infty $ of $(1-r^{n+1})/(1-r) = (1-0)/(1-r) = 1/(1-r)$\n}\n%%%%MY ANSWER END%%%%%\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp In this problem, we will\nlearn two techniques for summing the following series:\n\n    $ Z = 1 + 2r + 3r^{2} + 4r^{3} + 5r^{4} +\\ldots + (n+1)r^n $.\n\n\\noindent (a) Compute the sum by using the fact that $Z =\n\\frac{\\partial T} {\\partial r}$. That is, we obtain Z by differentiating series T (from previous problem) with respect to r.\n\n\\noindent\n\\textcolor{\\answerColor}{\n$ T = 1 + r + r^2 + r^3 + r^4 ... + r^{n+0}$ \\\\\n$ Z = 0 + 1 + 2r + 3r^2 + 4r^3 ... + n r^{n-1} = \\frac{\\partial}{\\partial r} T $ \\\\\nTherefore, due to the fact that the sum of derivatives is the derivatives of a sum... \\\\\n$ Z = \\frac{\\partial}{\\partial r} (1-r^{n+1})/(1-r) = (nr^{n+1}-(n+1)r^n+1)/(1-r)^2 $\n}\n\n\n\\noindent (b) Now, evaluate $Z$ by computing $Z - r\\cdot Z$. What\nhappens ?\n\n\\noindent\n\\textcolor{\\answerColor}{\n$  Z=1+2r+3r^2+4r^3...     +(n+0)r^{n-1} $ \\\\\n$ rZ=  r +2r^2+3r^3+4r^4...+(n-1)r^{n-1}+(n+0)r^{n+0} $ \\\\\n$  Z-rZ=1+r+r^2+r^3+r^4+...+r^{n-1}-nr^n $ \\\\\n$  Z-rZ=Z(1-r)=(1-r^n)/(1-r)-nr^n $ \\\\\n$  Z=((1-r^n)/(1-r)-nr^n)/(1-r) $ \\\\\nWhat happens: You get an equivalent equation written differently\\\\\nHere's numerical verification that they're the same: https://www.desmos.com/calculator/6my1e2ghsr\n}\n\n\\noindent (c) Suppose $0 < r < 1$. What is $Z$ as\n$n\\rightarrow\\infty$ ?\n\n\\noindent\n\\textcolor{\\answerColor}{\nIf $ 0 \\le r < 1 $, limit as $ n \\rightarrow \\infty $ of $((1-r^n)/(1-r)-nr^n)/(1-r) = 1/(1-r)^2 $ because $r^n \\rightarrow 0$\n}\n\n\\noindent (d) Now, what is $Y = 1 + 3r + 6r^2 + 10r^3 + ... + \\frac{1}{2}(n + 1)(n + 2)r^n$ when $0 < r < 1$ and $n\\rightarrow\\infty$?\n\n\\noindent\n\\textcolor{\\answerColor}{\nTODO: FORMAT THIS ANSWER INTO LATEX\n}\n\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$ {(From Brassard and\nBratley)}\\pp Prove that:\n\n\\noindent (a) $\\log_{a}(xy) = \\log_{a}x + \\log_{a}y$\n\n\\noindent\n\\color{blue}\nSorry about the formatting here...I originally wrote my homework in sublime, and I don't know if I'll have enough time to finish formatting it all prettily. I underestimated how long getting the formatting right in latex would take...\n\\begin{spverbatim}\nProve that: log_a(xy)=log_a(x)+log_a(y)\nSuppose k=log_a(xy) and thus a^k=xy\nSuppose l=log_a(x ) and thus a^l=x\nSuppose m=log_a(y ) and thus a^m=y\nBecause of the laws of exponents, xy=(a^l)(a^m)=a^(l+m)\nSince we know a^k=xy=a^(l+m), we take the log of all sides:\n\tlog_a(a^k)=log_a(xy)=log_a(a^(l+m))\n\t        k =log_a(xy)=         l+m  =log_a(x)+log_a(y)\nTherefore, log_a(xy)=log_a(x)+log_a(y)\n\\end{spverbatim}\n\\color{black}\n\n\\noindent (b) $\\log_{a}x^y = y \\log_{a}x $\n\n\\color{blue}\n\\begin{spverbatim}\nProve that: log_a(x^y)=ylog_a(x)\nSuppose k=log_a(x) and thus a^k=x\nx^y=(a^k)^y\nx^y=(a^k)^y\nx^y=a^(ky)\nlog_a(x^y)=log_a(a^(ky))=ky\nlog_a(x^y)=ky=log_a(x)y=ylog_a(x)\n\\end{spverbatim}\n\\color{black}\n\n\\noindent (c) $\\log_{a}x = \\frac{\\log_{b}x}{\\log_{b}a}$\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nProve that: log_a(x)=log_b(x)/log_b(a)\nBy definition of log: x=a^log_a(x)\nlog_b(x)=log_b(a^log_a(x))\nlog_b(x)=log_a(x)log_b(a)\nlog_b(x)/log_b(a)=log_a(x)\nlog_a(x)=log_b(x)/log_b(a)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent (d) $x^{\\log_{b}y} = y^{\\log_{b}x}.$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nProve that: x^log_b(y)=y^log_b(x)\nx^log_b(y)=b^(log_b(x)log_b(y))=y^log_b(x)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\bigskip\n\\addtocounter{problemctr}{1}\n\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp Simplify (Note: $\\lg n = \\log_{2}n$):\n\n\\noindent(a) $n^{1/\\lg n}$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nn^(1/lg(n))=n^(1/log_2(n))=...\n...=2^(log_2(n)^(1/log_2(n)))=...\n...=2^(log_2(n)/log_2(n))=...\n...=2^(1)=2\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n    \n\\noindent(b) $n^{\\frac{\\lg\\lg n}{\\lg n}}$\n\\\\\n\\\\\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\noindent\n\\textcolor{\\answerColor}{\n$  2^{\\frac{\\lg\\left(\\lg\\left(n\\right)\\right)}{\\lg\\left(n\\right)}} =$ \\\\\n$ 2^{\\lg\\left(\\lg\\left(n\\right)\\right)\\frac{1}{\\lg\\left(n\\right)}} =$ \\\\\n$  2^{\\lg\\left(\\lg\\left(n\\right)\\right)\\frac{1}{\\lg\\left(n\\right)}} =$ \\\\\n$  \\left(2^{\\lg\\left(\\lg\\left(n\\right)\\right)}\\right)^{\\frac{1}{\\lg\\left(n\\right)}} = $ \\\\\n$  \\lg\\left(n\\right)^{\\frac{1}{\\lg\\left(n\\right)}} $ \\\\\nDesmos: https://www.desmos.com/calculator/qdt1sqyvw3  (it was easier to write natural logs in desmos, but copy-pasting from desmos yields latex equations)\n}\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\n\\noindent(c) $2^{\\lg^2 n}$\n\n\\noindent\n\\textcolor{\\answerColor}{\nArguably, this is already in simplest form. But there's an alternate, equally simple form. For a numerical test, see https://www.desmos.com/calculator/um6a6rdkyn\n\\\\\n$2^{\\log_{2}^{2}\\left(n\\right)} = $ \\\\\n$2^{\\log_{2}\\left(n\\right)\\log_{2}\\left(n\\right)} = $ \\\\\n$\\left(2^{\\log_{2}\\left(n\\right)}\\right)^{\\log_{2}\\left(n\\right)} = $ \\\\\n$n^{\\log_{2}\\left(n\\right)} $\n}\n\n\n\n\\noindent(d) $\\lg^*(2^{2^n}) - \\lg^*(n)$\n\n    Remember that:\n$\\lg ^{*}n:={\\begin{cases}0&{\\mbox{if }}n\\leq 1;\\\\1+\\lg ^{*}(\\lg n)&{\\mbox{if }}n>1\\end{cases}}$\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nI'm assuming lg*(x) is the iterated logarithm of 2, which wikipedia talks about (https://en.wikipedia.org/wiki/Iterated_logarithm)\nAfter reading about it, it appears to be the inverse of tetration of two\nBecause there's no universally accepted continuous tetration definition, I'll assume it's range is discrete (as talked about on wikipedia)\nThis matches the recursive definion given in the problem\nI'll use this definiton...\nIn this case, lg*(2^n)=lg*(n)+1\nTherefore, lg*(2^(2^(n)))=lg*(n)+2\nAnd therefore, lg*(2^(2^(n)))-lg*(n)=lg*(n)+2-lg*(n)=2\n2 is the final answer\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent(e) $8^{\\lg{(n)}}$\n\n\\noindent\n\\textcolor{\\answerColor}{\nFor a numerical test, see https://www.desmos.com/calculator/klnfoiir5l\n\\\\\n$8^{\\log_{2}n} = $ \\\\\n$2^{3\\log_{2}n} = $ \\\\\n$\\left(2^{\\log_{2}n}\\right)^{3} = $ \\\\\n$n^{3} $\n}\n\n\\noindent(f) $\\log_{\\sqrt{B}}{N}$\n\n\n\\noindent\n\\textcolor{\\answerColor}{\nFor a numerical test, see https://www.desmos.com/calculator/4hl9dmndbi\n\\\\\n$\\log_{\\sqrt{b}}n = $ \\\\\n$\\frac{\\ln n}{\\ln\\left(\\sqrt{b}\\right)} = $ \\\\\n$\\frac{\\ln n}{\\frac{\\ln\\left(b\\right)}{2}} = $ \\\\\n$2\\frac{\\ln n}{\\ln\\left(b\\right)} $\n}\n\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp Simplify:\n\n\\noindent(1) $x^a \\cdot x^b$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nx^a*x^b=x^(a+b)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent(2) $(x^a)^b$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\n(x^a)^b=x^(ab)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\\noindent(3) $(2^{2^a}) \\cdot (2^{a^b})$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\n2^2^a*2^a^b=2^(2^a+a^b)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent(4) $(2^{2^a})^{2^b}$\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\n(2^2^a)^2^b=2^(2^a*2^b)=2^2^(a+b)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp In this problem, you\nshould approximate the sum\n    $ L = \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\ldots + \\frac{1}{n}$.\n\n    Hint: Use the fact that\n    $\\sum_{i=2}^n {\\frac {1}{i}} \\approx \\int_{x=2}^n {\\frac {1}{x}} dx $.\n\n\\noindent (a) What is $L$ ?\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nL is one less than the n'th index of the harmonic series, and it's approximately logarithmic (specifically, it's approximately the natural logarithm minus one)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent (b) What is $L$ as $n\\rightarrow\\infty$ ?\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\nAs $ n \\rightarrow \\infty$ , $L \\rightarrow \\infty$ (logarithms are not horizontally asymptotic)\n\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$ \\pp\n\n\\noindent (a) Let $\\lhfloor n \\rhfloor_2$ to be the largest power of 2\nsmaller than $n$. Prove that $ 1+2+4+8+ \\cdots + \\lhfloor n \\rhfloor_2\n= O(n)$.\n\n\\noindent {\\underline {\\rm Note:}} REMEMBER THIS PROBLEM!!! You will\nneed it in the rest of your semester.\n\n\\noindent (b) Let $\\lhfloor n \\rhfloor_3$ to be the largest power of\n3 smaller than $n$. Prove that $ 1+3+9+27+\\cdots+\\lhfloor n\n\\rhfloor_3 = O(n)$.\n\n\\noindent\n\n\n\\color{blue}\n% Let $\\forall x,  h(x,y)=\\lhfloor x \\rhfloor_y = 2 ^ {\\lfloor \\log_{y}x \\rfloor}$ \\\\ \n\n\\noindent\n$\\lhfloor n \\rhfloor _2 = 2^{\\log _2 n} \\le 2^{\\log _2 n} = n$ \\\\\n\n\\noindent\nFrom the equation we derived in question 1, part b where r=2: \\\\\n\n\\noindent\nIf $k \\in \\mathbb{N}$, then $2^k-1 = \\sum_{i=0}^{k-1}2^{i} $ \\\\\n\n\\noindent\n$1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = 2 ^ {\\lfloor \\log_{2}n \\rfloor + 1} - 1 = 2 \\lhfloor n \\rhfloor _2 -1$ \\\\\n\n\\noindent\n$\\lhfloor n \\rhfloor _2 \\le n \\rightarrow 2 \\lhfloor n \\rhfloor \\le 2n \\rightarrow 2 \\lhfloor n \\rhfloor _2 - 1 < 2n \\rightarrow 1 + 2 + 4 + ...  + \\lhfloor n \\rhfloor _2 < 2n$ \\\\ \n\n\\noindent\n$\\therefore 1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = O(n)$\n\n\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n\\color{black}\n\n\\noindent (c) Prove that $1+2+3+ \\cdots + n = O(n^2)$.\n\n\\color{blue}\n\n\\noindent\n$\\lhfloor n \\rhfloor _3 = 3^{\\log _3 n} \\le 3^{\\log _3 n} = n$ \\\\\n\n\\noindent\nFrom the equation we derived in question 1, part b where r=3: \\\\\n\n\\noindent\nIf $k \\in \\mathbb{N}$, then $\\frac{3^k-1}{2} = \\sum_{i=0}^{k-1}3^{i} $ \\\\\n\n\\noindent\n$1 + 3 + 9 + ... + \\lhfloor n \\rhfloor _3 = \\frac{3 ^ {\\lfloor \\log_{3}n \\rfloor + 1} - 1}{2} =\\frac{ 3 \\lhfloor n \\rhfloor _3 -1}{2}$ \\\\\n\n\\noindent\n$ \\lhfloor n \\rhfloor _3 \\le n \\rightarrow 3 \\lhfloor n \\rhfloor _3 \\le 3n \\rightarrow \\frac{3 \\lhfloor n \\rhfloor _3 -1}{2} < 3n  \\rightarrow 1 + 3 + 9 + ... + \\lhfloor n \\rhfloor _3 = O(n)$ \n\n% \\noindent\n% $\\lhfloor n \\rhfloor _2 \\le n \\rightarrow 2 \\lhfloor n \\rhfloor \\le 2n \\rightarrow 2 \\lhfloor n \\rhfloor _2 - 1 < 2n \\rightarrow 1 + 2 + 4 + ...  + \\lhfloor n \\rhfloor _2 < 2n$ \\\\ \n\n% \\noindent\n% $\\therefore 1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = O(n)$\n\n\n\\color{black}\n\n\n\n\n\n\n\n\\end{document}"
a= ans
ans = 'Ryan_Burgert_CSE548_HW1_Writeup.pdf'
ans=__import__("rp"),open_file_with_default_application('Ryan_Burgert_CSE548_HW1_Writeup.tex')


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Sep 03, 2021 at 11:26:15PM    ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Downloads');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/SBU/Classes/Undergrad/CSE350');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop/AMS548_HW1_Ryan_Burgert_110176886');sys.path.append(os.getcwd())# CDH
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CD ..
ans="%% File history\n%% 7/16/13 Michael Bender created document\n%% 7/17/13 MB incorporated suggestions for improvement from Joe Mitchell\n%% 2/2/14 MB updates for CSE 350 \n%% 8/25/14 MB updates for CSE 150\n%% 1/26/15 MB edits for CSE 215 and incorporates suggestions from Steve Skiena\n%% 1/23/16 MB edits for CSE 350 and takes some of Don Porter's edits.\n%% 8/28/16 MB edits for CSE 150 \n%% 1/2/17 MB edits for CSE 373 \n%% 12/29/17 MB edits for CSE 350 \n%% 8/15/18 MB edits for CSE 350\n\n%% I'd love suggestions from students about how to update this assignment.\n\n\n\\documentclass[11pt]{article}\n% \\usepackage{times}\n\\usepackage{palatino}\n\n\\usepackage{enumitem}\n\n\\renewcommand{\\baselinestretch}{1.2}\n\\setlength{\\topmargin}{-0.5in}\n\\setlength{\\textwidth}{6.5in}\n\\setlength{\\oddsidemargin}{0.0in}\n\\setlength{\\textheight}{9.1in}\n\n\\newlength{\\pagewidth}\n\\setlength{\\pagewidth}{6.5in}\n\\pagestyle{empty}\n\n\\def\\pp{\\par\\noindent}\n\n\\special{papersize=8.5in,11in}\n\n\n\\begin{document}\n\n\\begin{flushright}\n   $\\copyright$  2021~~Michael A. Bender\n\\end{flushright}\n\\centerline{\\bf CSE 548 --\n\tGraduate Analysis of Algorithms:  Fall 2021 \n}\n\\medskip\n\\centerline{Academic Honesty Review}\n\\bigskip\n\\bigskip\n\nThe point of this assignment is to examine issues of academic\nintegrity and academic dishonesty.\n\nYou should hand in your problem set \\emph{online} using\nblackboard. \\emph{No late problem sets accepted.}\n\nPlease write up your assignment using latex. For the Macintosh,\ninstall Mactex and use Texshop.  For linux, install texlive-full, and\nthen you can use linux programs such as texworks or texmaker.  For\nWindows, install Miktex or texlive-full, and use WinEdt, texmaker, or some other\neditor. \nThe online latex program Overleaf is also excellent. \n\n\nThis writeup includes input from Joe Mitchell, Don Porter, and Steve\nSkiena.  I welcome further suggestions from other students and\nprofessors.\n\n\n\\section*{Academic Honesty}\n\nHere are bullet points about academic honest.  You should refer to\nthese points when answering the questions below.\n\n\\begin{enumerate}[noitemsep]\n\n\\item I take academic honesty seriously.  Infractions have serious\n  consequences---generally an F in the course (or worse).\n\n\\item It is \\emph{your} responsibility to ensure that you understand\n  what constitutes academic dishonesty.\n\n\\item Representing another person's work as your own is always wrong.\n  It is wrong in this course. It is wrong in your\n  profession.\\footnote{Plagiarizing can end your career, regardless of\n    your skill level, your educational credentials, or how hard you\n    have worked up until this point. } It is wrong in life. It is\n  wrong. Period.\n\n\n\\item Always cite! If you work with multiple people, cite with whom you worked.\n\n\\item Copying (or approximately copying) a solution from the web or\n  someone else's solution and putting in your problem set is\n  plagiarism \\emph{even if you cite your source}.\n\n\\item Sharing any part of your write-up (latex, PDF, postscript,\n  figures, or hard copy) is academic dishonesty and invites\n  plagiarism.  Your own write-up is private  and should not\n  be shared.\n\n\\item You may be able to find solutions to some of the homework\n  problems on the web or from more senior students. It is academic\n  dishonesty to search for and use such solutions in preparing your\n  own write-up for the assignment, and it is plagiarism to copy such\n  solutions and to submit as your own (even if you cite). \n\n\\item You can work together to solve problems, but you must write up\n  your own solutions, writing only those ideas and answers that you\n  personally fully understand, and stating in your write-up with whom\n  you worked to obtain the solution.\n\n\\item If you are in doubt about whether or not you are permitted to\n  use particular source materials, you should obtain written\n  permission from the professor, in advance of your submission. Such\n  permission is best requested and obtained by email.\n\n\\item It is academically dishonest to hand in a solution that you\n  don't understand.\n\n\\item On examinations you may feel inclined to communicate with other students or\n    find solutions online. It is academic dishonesty to discuss questions and answers\n    during exams. Likewise it is academic dishonesty to seek assistance for answering\n    exam questions from individuals outside of the class.\n\n\n\\end{enumerate}\n \n\\bigskip\\bigskip\n\n\\newcounter{problemctr}\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nIn this class I let students work together to solve problems, as long\nas each student writes up her/her own solution and cites all\ncollaborators.  Why do I let students work together?  Why is this not\nacademically dishonest?\n\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it important to your professional development to struggle with\na problem that you cannot solve quickly?  Why do I deliberately assign\nhomework that could take you days or weeks to solve?  What do you\nexpect to learn from this experience?\n\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it academically dishonest to copy someone else's problem-set\nsolutions?  Give an example of a collaboration that is honest.  Give\nanother example that is academically dishonest.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nExplain why it is academically dishonest to share your solution set\nwith another student.  Explain how you could get burned from just\nsharing your writeup even if you do not copy yourself.\n\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nExplain why it is academically dishonest to publish the course documents from this class (or any other class) on the web (e.g., in places such as Course Hero or your own webpage). \n\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nExplain why copying (or approximating) solutions from the web (or\nanother source) is plagiarism, even if you cite your\nsource.\\footnote{In this course I ask that you \\emph{not} to scour the\n  web for solutions to the homework problems.  But even I did let you\n  search the web to find solutions, this would \\emph{still} be\n  plagiarism.  Why?}\n \n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nExplain why being in a group chat where test questions and answers could prove to be problematic\nfor you? (even if you are not sharing any questions or answers)\n \n\\addtocounter{problemctr}{1} \\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it better for your grade to leave a question blank, rather than\nsearch for answers on the web?  (Hint: calculate approximately how\nmuch a homework problem is worth to your raw score versus an exam\nquestion. You can include the risk-benefit analysis of getting\ncaught.)\n\n\n% MAB: I'm commenting out this problem, because I'd rather students\n% not use the internet to help them solve problems at all.\n%\n%\\addtocounter{problemctr}{1}\n%\\bigskip\n%\\noindent\n%$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%Suppose that you are completely stuck about how to approach a problem. \n%Give an example of using the internet to help that is academically honest. \n%Give an example of using the internet that is academically dishonest. \n%\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nImagine that you are employed at a major software company, say Google,\nFacebook, or Microsoft, and commit code into a product that you copied\nfrom a website.  Explain the potential risks to both you and the\ncompany if this action is discovered by the owners of the code.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nWhy do I have this problem set on academic honesty?\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nHow much time did this writeup take you, including the time it took to\nlearn latex.\n\n\n\n\\end{document}\n\n"
import sys,os;os.chdir('/Users/Ryan/Desktop/AMS548_HW1_Ryan_Burgert_110176886');sys.path.append(os.getcwd())# CDB
ans='%% File history\n%% 7/16/13 Michael Bender created document\n%% 7/17/13 MB incorporated suggestions for improvement from Joe Mitchell\n%% 2/2/14 MB updates for CSE 350 \n%% 8/25/14 MB updates for CSE 150\n%% 1/26/15 MB edits for CSE 215 and incorporates suggestions from Steve Skiena\n%% 1/23/16 MB edits for CSE 350 and takes some of Don Porter\'s edits.\n%% 8/28/16 MB edits for CSE 150 \n%% 1/2/17 MB edits for CSE 373 \n%% 12/29/17 MB edits for CSE 350 \n%% 8/15/18 MB edits for CSE 350\n\n%% I\'d love suggestions from students about how to update this assignment.\n\n\n\\documentclass[11pt]{article}\n% \\usepackage{times}\n\\usepackage{palatino}\n\n\\usepackage{enumitem}\n\n\\renewcommand{\\baselinestretch}{1.2}\n\\setlength{\\topmargin}{-0.5in}\n\\setlength{\\textwidth}{6.5in}\n\\setlength{\\oddsidemargin}{0.0in}\n\\setlength{\\textheight}{9.1in}\n\n\\newlength{\\pagewidth}\n\\setlength{\\pagewidth}{6.5in}\n\\pagestyle{empty}\n\n\\def\\pp{\\par\\noindent}\n\n\\special{papersize=8.5in,11in}\n\n\n\\begin{document}\n\n\\begin{flushright}\n   $\\copyright$  2021~~Michael A. Bender\n\\end{flushright}\n\\centerline{\\bf CSE 548 --\n\tGraduate Analysis of Algorithms:  Fall 2021 \n}\n\\medskip\n\\centerline{Academic Honesty Review}\n\\bigskip\n\\bigskip\n\nThe point of this assignment is to examine issues of academic\nintegrity and academic dishonesty.\n\nYou should hand in your problem set \\emph{online} using\nblackboard. \\emph{No late problem sets accepted.}\n\nPlease write up your assignment using latex. For the Macintosh,\ninstall Mactex and use Texshop.  For linux, install texlive-full, and\nthen you can use linux programs such as texworks or texmaker.  For\nWindows, install Miktex or texlive-full, and use WinEdt, texmaker, or some other\neditor. \nThe online latex program Overleaf is also excellent. \n\n\nThis writeup includes input from Joe Mitchell, Don Porter, and Steve\nSkiena.  I welcome further suggestions from other students and\nprofessors.\n\n\n\\section*{Academic Honesty}\n\nHere are bullet points about academic honest.  You should refer to\nthese points when answering the questions below.\n\n\\begin{enumerate}[noitemsep]\n\n\\item I take academic honesty seriously.  Infractions have serious\n  consequences---generally an F in the course (or worse).\n\n\\item It is \\emph{your} responsibility to ensure that you understand\n  what constitutes academic dishonesty.\n\n\\item Representing another person\'s work as your own is always wrong.\n  It is wrong in this course. It is wrong in your\n  profession.\\footnote{Plagiarizing can end your career, regardless of\n    your skill level, your educational credentials, or how hard you\n    have worked up until this point. } It is wrong in life. It is\n  wrong. Period.\n\n\n\\item Always cite! If you work with multiple people, cite with whom you worked.\n\n\\item Copying (or approximately copying) a solution from the web or\n  someone else\'s solution and putting in your problem set is\n  plagiarism \\emph{even if you cite your source}.\n\n\\item Sharing any part of your write-up (latex, PDF, postscript,\n  figures, or hard copy) is academic dishonesty and invites\n  plagiarism.  Your own write-up is private  and should not\n  be shared.\n\n\\item You may be able to find solutions to some of the homework\n  problems on the web or from more senior students. It is academic\n  dishonesty to search for and use such solutions in preparing your\n  own write-up for the assignment, and it is plagiarism to copy such\n  solutions and to submit as your own (even if you cite). \n\n\\item You can work together to solve problems, but you must write up\n  your own solutions, writing only those ideas and answers that you\n  personally fully understand, and stating in your write-up with whom\n  you worked to obtain the solution.\n\n\\item If you are in doubt about whether or not you are permitted to\n  use particular source materials, you should obtain written\n  permission from the professor, in advance of your submission. Such\n  permission is best requested and obtained by email.\n\n\\item It is academically dishonest to hand in a solution that you\n  don\'t understand.\n\n\\item On examinations you may feel inclined to communicate with other students or\n    find solutions online. It is academic dishonesty to discuss questions and answers\n    during exams. Likewise it is academic dishonesty to seek assistance for answering\n    exam questions from individuals outside of the class.\n\n\n\\end{enumerate}\n \n\\bigskip\\bigskip\n\n\\newcounter{problemctr}\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nIn this class I let students work together to solve problems, as long\nas each student writes up her/her own solution and cites all\ncollaborators.  Why do I let students work together?  Why is this not\nacademically dishonest?\n\nMy Answer: You can learn a lot from another student\'s solutions. Explaining a problem\'s solution shows that we truly understand the subject, and honestly I even find it helpful to study by helping other students understand the material. In short, it helps us learn to help each other.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it important to your professional development to struggle with\na problem that you cannot solve quickly?  Why do I deliberately assign\nhomework that could take you days or weeks to solve?  What do you\nexpect to learn from this experience?\n\nMy Answer: By going through the steps to understand the problem ourselves, we build the necessary skills to make it through the course and generalize to more complicated topics.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it academically dishonest to copy someone else\'s problem-set\nsolutions?  Give an example of a collaboration that is honest.  Give\nanother example that is academically dishonest.\n\nMy Answer: It\'s academically dishonest to copy another student\'s answer because it means we didn\'t go through the work to understand it for ourselves. Here\'s an example of an honest collaboration: Me and my friend Jenny write up solutions on a whiteboard and talk about the solutions before we both make our write-ups. Dishonest: I sit back, eat popcorn and watch a movie, then come back and copy Jenny\'s results without having contributed anything or understanding how she got to the answers she did.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nExplain why it is academically dishonest to share your solution set\nwith another student.  Explain how you could get burned from just\nsharing your writeup even if you do not copy yourself.\n\nMy Answer: If the other student decides to copy my writeup, they might do it verbatim or without undestanding how I got to any of the answers. For this reason, it\'s not a safe thing to do. \n\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nExplain why it is academically dishonest to publish the course documents from this class (or any other class) on the web (e.g., in places such as Course Hero or your own webpage). \n\nMy Answer: It\'s academically dishonest to do this because it would let other students cheat their courses, and undermine the class I\'m taking. \n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nExplain why copying (or approximating) solutions from the web (or\nanother source) is plagiarism, even if you cite your\nsource.\\footnote{In this course I ask that you \\emph{not} to scour the\n  web for solutions to the homework problems.  But even I did let you\n  search the web to find solutions, this would \\emph{still} be\n  plagiarism.  Why?}\n \n \n\nMy Answer: Copying answers from the web under any circumstance is still plagiarism because it allows the student to bypass the process of figuring out the answers on their own. \n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nExplain why being in a group chat where test questions and answers could prove to be problematic\nfor you? (even if you are not sharing any questions or answers)\n \nMy Answer:  I\'m a bit confused on the grammar of this question (Explain why X where Y could be problematic). That being said, I\'ll interperet it as this: \n\n"Explain why being in a group chat where test questions and answers [are shared] could prove to be problematic for you? (even if you are not sharing any questions or answers)"\n\nIf you\'re in a group chat like that, somebody might ask "do you guys think this is right?" and show their answer in the chat. And then it\'s like a spoiler; you can\'t un-see it once you see it.\n\n\\addtocounter{problemctr}{1} \\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it better for your grade to leave a question blank, rather than\nsearch for answers on the web?  (Hint: calculate approximately how\nmuch a homework problem is worth to your raw score versus an exam\nquestion. You can include the risk-benefit analysis of getting\ncaught.)\n\nMy Answer: Let\'s say the problem is worth .5 percent of your grade, and you have a 10 percent chance of being caught (because you copy an answer from the web). It\'s not worth the risk of failing the class. Also, looking up the answer might mean you can\'t do things on your own during the test.\n\n% MAB: I\'m commenting out this problem, because I\'d rather students\n% not use the internet to help them solve problems at all.\n%\n%\\addtocounter{problemctr}{1}\n%\\bigskip\n%\\noindent\n%$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%Suppose that you are completely stuck about how to approach a problem. \n%Give an example of using the internet to help that is academically honest. \n%Give an example of using the internet that is academically dishonest. \n%\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nImagine that you are employed at a major software company, say Google,\nFacebook, or Microsoft, and commit code into a product that you copied\nfrom a website.  Explain the potential risks to both you and the\ncompany if this action is discovered by the owners of the code.\n\nMy Answer: The company could be sued. This happened to a company that was sued by Bethesda actually, (the game company that made skyrim). The trial was pretty funny - the evidence is that their game had all the same bugs as Bethesda\'s game engine...which means they copied their engine without permission. Their game company was shut down. (I don\'t remember the game exactly but I think it was an open-world star-wars game)\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nWhy do I have this problem set on academic honesty?\n\nMy Answer: This problem set is proof that we understand the consequences and reasons for the rules on academic dishonesty in this course.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nHow much time did this writeup take you, including the time it took to\nlearn latex.\n\nMy Answer: It took about 30 minutes.\n\n\n\\end{document}\n\n'
ans='%% File history\n%% 7/16/13 Michael Bender created document\n%% 7/17/13 MB incorporated suggestions for improvement from Joe Mitchell\n%% 2/2/14 MB updates for CSE 350 \n%% 8/25/14 MB updates for CSE 150\n%% 1/26/15 MB edits for CSE 215 and incorporates suggestions from Steve Skiena\n%% 1/23/16 MB edits for CSE 350 and takes some of Don Porter\'s edits.\n%% 8/28/16 MB edits for CSE 150 \n%% 1/2/17 MB edits for CSE 373 \n%% 12/29/17 MB edits for CSE 350 \n%% 8/15/18 MB edits for CSE 350\n\n%% I\'d love suggestions from students about how to update this assignment.\n\n\nRyan Burgert 110176886\n\n\\documentclass[11pt]{article}\n% \\usepackage{times}\n\\usepackage{palatino}\n\n\\usepackage{enumitem}\n\n\\renewcommand{\\baselinestretch}{1.2}\n\\setlength{\\topmargin}{-0.5in}\n\\setlength{\\textwidth}{6.5in}\n\\setlength{\\oddsidemargin}{0.0in}\n\\setlength{\\textheight}{9.1in}\n\n\\newlength{\\pagewidth}\n\\setlength{\\pagewidth}{6.5in}\n\\pagestyle{empty}\n\n\\def\\pp{\\par\\noindent}\n\n\\special{papersize=8.5in,11in}\n\n\n\\begin{document}\n\n\\begin{flushright}\n   $\\copyright$  2021~~Michael A. Bender\n\\end{flushright}\n\\centerline{\\bf CSE 548 --\n\tGraduate Analysis of Algorithms:  Fall 2021 \n}\n\\medskip\n\\centerline{Academic Honesty Review}\n\\bigskip\n\\bigskip\n\nThe point of this assignment is to examine issues of academic\nintegrity and academic dishonesty.\n\nYou should hand in your problem set \\emph{online} using\nblackboard. \\emph{No late problem sets accepted.}\n\nPlease write up your assignment using latex. For the Macintosh,\ninstall Mactex and use Texshop.  For linux, install texlive-full, and\nthen you can use linux programs such as texworks or texmaker.  For\nWindows, install Miktex or texlive-full, and use WinEdt, texmaker, or some other\neditor. \nThe online latex program Overleaf is also excellent. \n\n\nThis writeup includes input from Joe Mitchell, Don Porter, and Steve\nSkiena.  I welcome further suggestions from other students and\nprofessors.\n\n\n\\section*{Academic Honesty}\n\nHere are bullet points about academic honest.  You should refer to\nthese points when answering the questions below.\n\n\\begin{enumerate}[noitemsep]\n\n\\item I take academic honesty seriously.  Infractions have serious\n  consequences---generally an F in the course (or worse).\n\n\\item It is \\emph{your} responsibility to ensure that you understand\n  what constitutes academic dishonesty.\n\n\\item Representing another person\'s work as your own is always wrong.\n  It is wrong in this course. It is wrong in your\n  profession.\\footnote{Plagiarizing can end your career, regardless of\n    your skill level, your educational credentials, or how hard you\n    have worked up until this point. } It is wrong in life. It is\n  wrong. Period.\n\n\n\\item Always cite! If you work with multiple people, cite with whom you worked.\n\n\\item Copying (or approximately copying) a solution from the web or\n  someone else\'s solution and putting in your problem set is\n  plagiarism \\emph{even if you cite your source}.\n\n\\item Sharing any part of your write-up (latex, PDF, postscript,\n  figures, or hard copy) is academic dishonesty and invites\n  plagiarism.  Your own write-up is private  and should not\n  be shared.\n\n\\item You may be able to find solutions to some of the homework\n  problems on the web or from more senior students. It is academic\n  dishonesty to search for and use such solutions in preparing your\n  own write-up for the assignment, and it is plagiarism to copy such\n  solutions and to submit as your own (even if you cite). \n\n\\item You can work together to solve problems, but you must write up\n  your own solutions, writing only those ideas and answers that you\n  personally fully understand, and stating in your write-up with whom\n  you worked to obtain the solution.\n\n\\item If you are in doubt about whether or not you are permitted to\n  use particular source materials, you should obtain written\n  permission from the professor, in advance of your submission. Such\n  permission is best requested and obtained by email.\n\n\\item It is academically dishonest to hand in a solution that you\n  don\'t understand.\n\n\\item On examinations you may feel inclined to communicate with other students or\n    find solutions online. It is academic dishonesty to discuss questions and answers\n    during exams. Likewise it is academic dishonesty to seek assistance for answering\n    exam questions from individuals outside of the class.\n\n\n\\end{enumerate}\n \n\\bigskip\\bigskip\n\n\\newcounter{problemctr}\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nIn this class I let students work together to solve problems, as long\nas each student writes up her/her own solution and cites all\ncollaborators.  Why do I let students work together?  Why is this not\nacademically dishonest?\n\nMy Answer: You can learn a lot from another student\'s solutions. Explaining a problem\'s solution shows that we truly understand the subject, and honestly I even find it helpful to study by helping other students understand the material. In short, it helps us learn to help each other.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it important to your professional development to struggle with\na problem that you cannot solve quickly?  Why do I deliberately assign\nhomework that could take you days or weeks to solve?  What do you\nexpect to learn from this experience?\n\nMy Answer: By going through the steps to understand the problem ourselves, we build the necessary skills to make it through the course and generalize to more complicated topics.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it academically dishonest to copy someone else\'s problem-set\nsolutions?  Give an example of a collaboration that is honest.  Give\nanother example that is academically dishonest.\n\nMy Answer: It\'s academically dishonest to copy another student\'s answer because it means we didn\'t go through the work to understand it for ourselves. Here\'s an example of an honest collaboration: Me and my friend Jenny write up solutions on a whiteboard and talk about the solutions before we both make our write-ups. Dishonest: I sit back, eat popcorn and watch a movie, then come back and copy Jenny\'s results without having contributed anything or understanding how she got to the answers she did.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nExplain why it is academically dishonest to share your solution set\nwith another student.  Explain how you could get burned from just\nsharing your writeup even if you do not copy yourself.\n\nMy Answer: If the other student decides to copy my writeup, they might do it verbatim or without undestanding how I got to any of the answers. For this reason, it\'s not a safe thing to do. \n\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nExplain why it is academically dishonest to publish the course documents from this class (or any other class) on the web (e.g., in places such as Course Hero or your own webpage). \n\nMy Answer: It\'s academically dishonest to do this because it would let other students cheat their courses, and undermine the class I\'m taking. \n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nExplain why copying (or approximating) solutions from the web (or\nanother source) is plagiarism, even if you cite your\nsource.\\footnote{In this course I ask that you \\emph{not} to scour the\n  web for solutions to the homework problems.  But even I did let you\n  search the web to find solutions, this would \\emph{still} be\n  plagiarism.  Why?}\n \n \n\nMy Answer: Copying answers from the web under any circumstance is still plagiarism because it allows the student to bypass the process of figuring out the answers on their own. \n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nExplain why being in a group chat where test questions and answers could prove to be problematic\nfor you? (even if you are not sharing any questions or answers)\n \nMy Answer:  I\'m a bit confused on the grammar of this question (Explain why X where Y could be problematic). That being said, I\'ll interperet it as this: \n\n"Explain why being in a group chat where test questions and answers [are shared] could prove to be problematic for you? (even if you are not sharing any questions or answers)"\n\nIf you\'re in a group chat like that, somebody might ask "do you guys think this is right?" and show their answer in the chat. And then it\'s like a spoiler; you can\'t un-see it once you see it.\n\n\\addtocounter{problemctr}{1} \\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nWhy is it better for your grade to leave a question blank, rather than\nsearch for answers on the web?  (Hint: calculate approximately how\nmuch a homework problem is worth to your raw score versus an exam\nquestion. You can include the risk-benefit analysis of getting\ncaught.)\n\nMy Answer: Let\'s say the problem is worth .5 percent of your grade, and you have a 10 percent chance of being caught (because you copy an answer from the web). It\'s not worth the risk of failing the class. Also, looking up the answer might mean you can\'t do things on your own during the test.\n\n% MAB: I\'m commenting out this problem, because I\'d rather students\n% not use the internet to help them solve problems at all.\n%\n%\\addtocounter{problemctr}{1}\n%\\bigskip\n%\\noindent\n%$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%Suppose that you are completely stuck about how to approach a problem. \n%Give an example of using the internet to help that is academically honest. \n%Give an example of using the internet that is academically dishonest. \n%\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nImagine that you are employed at a major software company, say Google,\nFacebook, or Microsoft, and commit code into a product that you copied\nfrom a website.  Explain the potential risks to both you and the\ncompany if this action is discovered by the owners of the code.\n\nMy Answer: The company could be sued. This happened to a company that was sued by Bethesda actually, (the game company that made skyrim). The trial was pretty funny - the evidence is that their game had all the same bugs as Bethesda\'s game engine...which means they copied their engine without permission. Their game company was shut down. (I don\'t remember the game exactly but I think it was an open-world star-wars game)\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp\n%\nWhy do I have this problem set on academic honesty?\n\nMy Answer: This problem set is proof that we understand the consequences and reasons for the rules on academic dishonesty in this course.\n\n\\addtocounter{problemctr}{1}\n\\bigskip\n\\noindent\n$\\underline{\\rm Problem\\ \\theproblemctr}$\\pp \n%\nHow much time did this writeup take you, including the time it took to\nlearn latex.\n\nMy Answer: It took about 30 minutes.\n\n\n\\end{document}\n\n'
ans=" \\documentclass[11pt]{article}\n\n\\newcommand{\\answerColor}{blue}\n\n\n\n\\usepackage{graphicx}\n\\usepackage{amsmath}\n\\usepackage{xcolor}\n\\usepackage{spverbatim}\n\\usepackage{amsfonts} \n\\usepackage{amssymb}\n\n\n% Hyperfloors and hyperceilings\n\\def\\hyperspc{\\kern -0.22em}\n\\newcommand{\\lhfloor}{\\lfloor \\hyperspc \\lfloor}\n\\newcommand{\\rhfloor}{\\rfloor \\hyperspc \\rfloor}\n\\newcommand{\\lhceil}{\\lceil \\hyperspc \\lceil}\n\\newcommand{\\rhceil}{\\rceil \\hyperspc \\rceil}\n\\newcommand{\\lhhfloor}{\\lfloor \\hyperspc \\lfloor \\hyperspc \\lfloor}\n\\newcommand{\\rhhfloor}{\\rfloor \\hyperspc \\rfloor \\hyperspc \\rfloor}\n\\newcommand{\\lhhceil}{\\lceil \\hyperspc \\lceil \\hyperspc \\lceil}\n\\newcommand{\\rhhceil}{\\rceil \\hyperspc \\rceil \\hyperspc \\rceil}\n\n\\renewcommand{\\baselinestretch}{1.2}\n\\setlength{\\topmargin}{-0.5in} \\setlength{\\textwidth}{6.5in}\n\\setlength{\\oddsidemargin}{0.0in} \\setlength{\\textheight}{9.1in}\n\n\\newlength{\\pagewidth}\n\\setlength{\\pagewidth}{6.5in} \\pagestyle{empty}\n\n\\def\\pp{\\par\\noindent}\n\n\\begin{document}\n\n\\begin{flushright}\n         Ryan Burgert 110176886\n\\end{flushright}\n\\centerline{\\bf CSE 548 -- Graduate Analysis of Algorithms: Fall 2021}\n\\medskip\n\\centerline{Assignment \\#1 - Math Review}\n\n\\centerline{Due - 7/3/2021}\n\n\\newcounter{problemctr}\n\n\\bigskip\n\\textcolor{\\answerColor}\n{\n    All my answers will be in color, to easily distinguish them from the questions.\n}\n\n\\bigskip\n\n\n\n\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp In this problem, we will\nlearn some techniques for summing series.\n\n\\noindent (a) Show how to compute the sum\n    $ S = 1 + 2 + 2^{2} + 2^{3} + 2^{4} + \\ldots + 2^{n} $.\n \n    Hint: What is $(S+1)-1$ ?\n\n%%%%MY ANSWER START%%%%%\n\\noindent\n\\textcolor{\\answerColor}\n{\n    $ S=2^{n+1}-1 $ because you can chop an even power of two $k=2^i$ (where $i$ is some positive integer) in half over and over again until you're left with two 1's, of which one can be excluded leaving k-1. For example, $8 = 4 + 2 + 1 + 1$, and $16 = 8 + 4 + 2 + 1 + 1$\n}\n%%%%MY ANSWER END%%%%%\n\n\n\n\n\n\n\n\\noindent (b) Now show how to compute the sum\n    $ T = 1 + r + r^{2} + r^{3} + r^{4} +\\ldots + r^{n} $.\n\n    Hint: Consider the two quantities $T$ and $r\\cdot T$.\n\n%%%%MY ANSWER START%%%%%\n\n\\noindent\n\\textcolor{\\answerColor}{\n\\noindent    $ T = 1 + r + r^2 + r^3 + r^4... + r^{n + 0} $  \\\\\n\\noindent    $ rT =   r + r^2 + r^3 + r^4... + r^{n + 0} + r^{n + 1} $\\\\\n\\noindent    $T - rT = 1 - r^{n + 1} $\\\\\n\\noindent    $T (1 - r) = 1 - r^{n + 1} $\\\\\n\\noindent    $T = \\frac{1 - r^{n + 1}}{1 - r} $\\\\\n}\n%%%%MY ANSWER END%%%%%\n\n\\noindent (c) Suppose $0 < r < 1$. What is $T$ as\n$n\\rightarrow\\infty$ ?\n\n%%%%MY ANSWER START%%%%%\n\\noindent\n\\textcolor{\\answerColor}{\nIf $0\\le r <1$, limit as $ n \\rightarrow \\infty $ of $(1-r^{n+1})/(1-r) = (1-0)/(1-r) = 1/(1-r)$\n}\n%%%%MY ANSWER END%%%%%\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp In this problem, we will\nlearn two techniques for summing the following series:\n\n    $ Z = 1 + 2r + 3r^{2} + 4r^{3} + 5r^{4} +\\ldots + (n+1)r^n $.\n\n\\noindent (a) Compute the sum by using the fact that $Z =\n\\frac{\\partial T} {\\partial r}$. That is, we obtain Z by differentiating series T (from previous problem) with respect to r.\n\n\\noindent\n\\textcolor{\\answerColor}{\n$ T = 1 + r + r^2 + r^3 + r^4 ... + r^{n+0}$ \\\\\n$ Z = 0 + 1 + 2r + 3r^2 + 4r^3 ... + n r^{n-1} = \\frac{\\partial}{\\partial r} T $ \\\\\nTherefore, due to the fact that the sum of derivatives is the derivatives of a sum... \\\\\n$ Z = \\frac{\\partial}{\\partial r} (1-r^{n+1})/(1-r) = (nr^{n+1}-(n+1)r^n+1)/(1-r)^2 $\n}\n\n\n\\noindent (b) Now, evaluate $Z$ by computing $Z - r\\cdot Z$. What\nhappens ?\n\n\\noindent\n\\textcolor{\\answerColor}{\n$  Z=1+2r+3r^2+4r^3...     +(n+0)r^{n-1} $ \\\\\n$ rZ=  r +2r^2+3r^3+4r^4...+(n-1)r^{n-1}+(n+0)r^{n+0} $ \\\\\n$  Z-rZ=1+r+r^2+r^3+r^4+...+r^{n-1}-nr^n $ \\\\\n$  Z-rZ=Z(1-r)=(1-r^n)/(1-r)-nr^n $ \\\\\n$  Z=((1-r^n)/(1-r)-nr^n)/(1-r) $ \\\\\nWhat happens: You get an equivalent equation written differently\\\\\nHere's numerical verification that they're the same: https://www.desmos.com/calculator/6my1e2ghsr\n}\n\n\\noindent (c) Suppose $0 < r < 1$. What is $Z$ as\n$n\\rightarrow\\infty$ ?\n\n\\noindent\n\\textcolor{\\answerColor}{\nIf $ 0 \\le r < 1 $, limit as $ n \\rightarrow \\infty $ of $((1-r^n)/(1-r)-nr^n)/(1-r) = 1/(1-r)^2 $ because $r^n \\rightarrow 0$\n}\n\n\\noindent (d) Now, what is $Y = 1 + 3r + 6r^2 + 10r^3 + ... + \\frac{1}{2}(n + 1)(n + 2)r^n$ when $0 < r < 1$ and $n\\rightarrow\\infty$?\n\n\\noindent\n\\textcolor{\\answerColor}{\nTODO: FORMAT THIS ANSWER INTO LATEX\n}\n\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$ {(From Brassard and\nBratley)}\\pp Prove that:\n\n\\noindent (a) $\\log_{a}(xy) = \\log_{a}x + \\log_{a}y$\n\n\\noindent\n\\color{blue}\nSorry about the formatting here...I originally wrote my homework in sublime, and I don't know if I'll have enough time to finish formatting it all prettily. I underestimated how long getting the formatting right in latex would take...\n\\begin{spverbatim}\nProve that: log_a(xy)=log_a(x)+log_a(y)\nSuppose k=log_a(xy) and thus a^k=xy\nSuppose l=log_a(x ) and thus a^l=x\nSuppose m=log_a(y ) and thus a^m=y\nBecause of the laws of exponents, xy=(a^l)(a^m)=a^(l+m)\nSince we know a^k=xy=a^(l+m), we take the log of all sides:\n\tlog_a(a^k)=log_a(xy)=log_a(a^(l+m))\n\t        k =log_a(xy)=         l+m  =log_a(x)+log_a(y)\nTherefore, log_a(xy)=log_a(x)+log_a(y)\n\\end{spverbatim}\n\\color{black}\n\n\\noindent (b) $\\log_{a}x^y = y \\log_{a}x $\n\n\\color{blue}\n\\begin{spverbatim}\nProve that: log_a(x^y)=ylog_a(x)\nSuppose k=log_a(x) and thus a^k=x\nx^y=(a^k)^y\nx^y=(a^k)^y\nx^y=a^(ky)\nlog_a(x^y)=log_a(a^(ky))=ky\nlog_a(x^y)=ky=log_a(x)y=ylog_a(x)\n\\end{spverbatim}\n\\color{black}\n\n\\noindent (c) $\\log_{a}x = \\frac{\\log_{b}x}{\\log_{b}a}$\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nProve that: log_a(x)=log_b(x)/log_b(a)\nBy definition of log: x=a^log_a(x)\nlog_b(x)=log_b(a^log_a(x))\nlog_b(x)=log_a(x)log_b(a)\nlog_b(x)/log_b(a)=log_a(x)\nlog_a(x)=log_b(x)/log_b(a)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent (d) $x^{\\log_{b}y} = y^{\\log_{b}x}.$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nProve that: x^log_b(y)=y^log_b(x)\nx^log_b(y)=b^(log_b(x)log_b(y))=y^log_b(x)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\bigskip\n\\addtocounter{problemctr}{1}\n\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp Simplify (Note: $\\lg n = \\log_{2}n$):\n\n\\noindent(a) $n^{1/\\lg n}$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nn^(1/lg(n))=n^(1/log_2(n))=...\n...=2^(log_2(n)^(1/log_2(n)))=...\n...=2^(log_2(n)/log_2(n))=...\n...=2^(1)=2\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n    \n\\noindent(b) $n^{\\frac{\\lg\\lg n}{\\lg n}}$\n\\\\\n\\\\\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\noindent\n\\textcolor{\\answerColor}{\n$  2^{\\frac{\\lg\\left(\\lg\\left(n\\right)\\right)}{\\lg\\left(n\\right)}} =$ \\\\\n$ 2^{\\lg\\left(\\lg\\left(n\\right)\\right)\\frac{1}{\\lg\\left(n\\right)}} =$ \\\\\n$  2^{\\lg\\left(\\lg\\left(n\\right)\\right)\\frac{1}{\\lg\\left(n\\right)}} =$ \\\\\n$  \\left(2^{\\lg\\left(\\lg\\left(n\\right)\\right)}\\right)^{\\frac{1}{\\lg\\left(n\\right)}} = $ \\\\\n$  \\lg\\left(n\\right)^{\\frac{1}{\\lg\\left(n\\right)}} $ \\\\\nDesmos: https://www.desmos.com/calculator/qdt1sqyvw3  (it was easier to write natural logs in desmos, but copy-pasting from desmos yields latex equations)\n}\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\n\\noindent(c) $2^{\\lg^2 n}$\n\n\\noindent\n\\textcolor{\\answerColor}{\nArguably, this is already in simplest form. But there's an alternate, equally simple form. For a numerical test, see https://www.desmos.com/calculator/um6a6rdkyn\n\\\\\n$2^{\\log_{2}^{2}\\left(n\\right)} = $ \\\\\n$2^{\\log_{2}\\left(n\\right)\\log_{2}\\left(n\\right)} = $ \\\\\n$\\left(2^{\\log_{2}\\left(n\\right)}\\right)^{\\log_{2}\\left(n\\right)} = $ \\\\\n$n^{\\log_{2}\\left(n\\right)} $\n}\n\n\n\n\\noindent(d) $\\lg^*(2^{2^n}) - \\lg^*(n)$\n\n    Remember that:\n$\\lg ^{*}n:={\\begin{cases}0&{\\mbox{if }}n\\leq 1;\\\\1+\\lg ^{*}(\\lg n)&{\\mbox{if }}n>1\\end{cases}}$\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nI'm assuming lg*(x) is the iterated logarithm of 2, which wikipedia talks about (https://en.wikipedia.org/wiki/Iterated_logarithm)\nAfter reading about it, it appears to be the inverse of tetration of two\nBecause there's no universally accepted continuous tetration definition, I'll assume it's range is discrete (as talked about on wikipedia)\nThis matches the recursive definion given in the problem\nI'll use this definiton...\nIn this case, lg*(2^n)=lg*(n)+1\nTherefore, lg*(2^(2^(n)))=lg*(n)+2\nAnd therefore, lg*(2^(2^(n)))-lg*(n)=lg*(n)+2-lg*(n)=2\n2 is the final answer\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent(e) $8^{\\lg{(n)}}$\n\n\\noindent\n\\textcolor{\\answerColor}{\nFor a numerical test, see https://www.desmos.com/calculator/klnfoiir5l\n\\\\\n$8^{\\log_{2}n} = $ \\\\\n$2^{3\\log_{2}n} = $ \\\\\n$\\left(2^{\\log_{2}n}\\right)^{3} = $ \\\\\n$n^{3} $\n}\n\n\\noindent(f) $\\log_{\\sqrt{B}}{N}$\n\n\n\\noindent\n\\textcolor{\\answerColor}{\nFor a numerical test, see https://www.desmos.com/calculator/4hl9dmndbi\n\\\\\n$\\log_{\\sqrt{b}}n = $ \\\\\n$\\frac{\\ln n}{\\ln\\left(\\sqrt{b}\\right)} = $ \\\\\n$\\frac{\\ln n}{\\frac{\\ln\\left(b\\right)}{2}} = $ \\\\\n$2\\frac{\\ln n}{\\ln\\left(b\\right)} $\n}\n\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp Simplify:\n\n\\noindent(1) $x^a \\cdot x^b$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nx^a*x^b=x^(a+b)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent(2) $(x^a)^b$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\n(x^a)^b=x^(ab)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\\noindent(3) $(2^{2^a}) \\cdot (2^{a^b})$\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\n2^2^a*2^a^b=2^(2^a+a^b)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent(4) $(2^{2^a})^{2^b}$\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\n(2^2^a)^2^b=2^(2^a*2^b)=2^2^(a+b)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$\\pp In this problem, you\nshould approximate the sum\n    $ L = \\frac{1}{2} + \\frac{1}{3} + \\frac{1}{4} + \\ldots + \\frac{1}{n}$.\n\n    Hint: Use the fact that\n    $\\sum_{i=2}^n {\\frac {1}{i}} \\approx \\int_{x=2}^n {\\frac {1}{x}} dx $.\n\n\\noindent (a) What is $L$ ?\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\\begin{spverbatim}\nL is one less than the n'th index of the harmonic series, and it's approximately logarithmic (specifically, it's approximately the natural logarithm minus one)\n\\end{spverbatim}\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n\n\\noindent (b) What is $L$ as $n\\rightarrow\\infty$ ?\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER START\n\\color{blue}\n\nAs $ n \\rightarrow \\infty$ , $L \\rightarrow \\infty$ (logarithms are not horizontally asymptotic)\n\n\\color{black}\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ANSWER END\n\n%  \\medskip\n\\bigskip\n\\addtocounter{problemctr}{1}\n\\noindent $\\underline{\\rm Problem\\ \\theproblemctr}$ \\pp\n\n\\noindent (a) Let $\\lhfloor n \\rhfloor_2$ to be the largest power of 2\nsmaller than $n$. Prove that $ 1+2+4+8+ \\cdots + \\lhfloor n \\rhfloor_2\n= O(n)$.\n\n\\noindent {\\underline {\\rm Note:}} REMEMBER THIS PROBLEM!!! You will\nneed it in the rest of your semester.\n\n\n\\color{blue}\n% Let $\\forall x,  h(x,y)=\\lhfloor x \\rhfloor_y = 2 ^ {\\lfloor \\log_{y}x \\rfloor}$ \\\\ \n\n\\noindent\n$\\lhfloor n \\rhfloor _2 = 2^{\\log _2 n} \\le 2^{\\log _2 n} = n$ \\\\\n\n\\noindent\nFrom the equation we derived in question 1, part b where r=2: \\\\\n\n\\noindent\nIf $k \\in \\mathbb{N}$, then $2^k-1 = \\sum_{i=0}^{k-1}2^{i} $ \\\\\n\n\\noindent\n$1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = 2 ^ {\\lfloor \\log_{2}n \\rfloor + 1} - 1 = 2 \\lhfloor n \\rhfloor _2 -1$ \\\\\n\n\\noindent\n$\\lhfloor n \\rhfloor _2 \\le n \\rightarrow 2 \\lhfloor n \\rhfloor \\le 2n \\rightarrow 2 \\lhfloor n \\rhfloor _2 - 1 < 2n \\rightarrow 1 + 2 + 4 + ...  + \\lhfloor n \\rhfloor _2 < 2n$ \\\\ \n\n\\noindent\n$\\therefore 1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = O(n)$\n\n\n\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n\\color{black}\n\n\\noindent (b) Let $\\lhfloor n \\rhfloor_3$ to be the largest power of\n3 smaller than $n$. Prove that $ 1+3+9+27+\\cdots+\\lhfloor n\n\\rhfloor_3 = O(n)$.\n\n\\color{blue}\n\n\\noindent\n$\\lhfloor n \\rhfloor _3 = 3^{\\log _3 n} \\le 3^{\\log _3 n} = n$ \\\\\n\n\\noindent\nFrom the equation we derived in question 1, part b where r=3: \\\\\n\n\\noindent\nIf $k \\in \\mathbb{N}$, then $\\frac{3^k-1}{2} = \\sum_{i=0}^{k-1}3^{i} $ \\\\\n\n\\noindent\n$1 + 3 + 9 + ... + \\lhfloor n \\rhfloor _3 = \\frac{3 ^ {\\lfloor \\log_{3}n \\rfloor + 1} - 1}{2} =\\frac{ 3 \\lhfloor n \\rhfloor _3 -1}{2}$ \\\\\n\n\\noindent\n$ \\lhfloor n \\rhfloor _3 \\le n \\rightarrow 3 \\lhfloor n \\rhfloor _3 \\le 3n \\rightarrow \\frac{3 \\lhfloor n \\rhfloor _3 -1}{2} < 3n  \\rightarrow 1 + 3 + 9 + ... + \\lhfloor n \\rhfloor _3 = O(n)$ \n\n% \\noindent\n% $\\lhfloor n \\rhfloor _2 \\le n \\rightarrow 2 \\lhfloor n \\rhfloor \\le 2n \\rightarrow 2 \\lhfloor n \\rhfloor _2 - 1 < 2n \\rightarrow 1 + 2 + 4 + ...  + \\lhfloor n \\rhfloor _2 < 2n$ \\\\ \n\n% \\noindent\n% $\\therefore 1 + 2 + 4 + ... + \\lhfloor n \\rhfloor _2 = O(n)$\n\n\n\\color{black}\n\n\n\\noindent\n\n\\noindent (c) Prove that $1+2+3+ \\cdots + n = O(n^2)$.\n\n\\color{blue}\n$1 + 2 + 3 + ... + n  = (n+1)(n)/2 = (n^2+n)/2 = O(n^2)$\n\n\n\n\n\n\\end{document}"
def parse(djson):
    lines=line_split(djson)
    levels=[-1]
    cursor={}
    path=[cursor]
    for line in lines:
        if not line.strip():
            continue
        level, entries=get_level_and_entries(line)
        while level<=levels[-1]:
            path.pop()
            levels.pop()
            cursor=path[-1]
        for entry in entries:
            if ' ' in entry:
                key,value=space_split(entry)
                cursor[key]=value
            else:
                if entry not in cursor or not isinstance(cursor[entry],dict):
                    cursor[entry]={} 
                cursor=cursor[entry]
        if path[-1] is not cursor:
            path.append(cursor)
            levels.append(level)
    return path[0]
#The below helper functions can be implemented much more efficiently with regex, but this code is for simplicity and not performance
def tab_split(line):
    while '\t\t' in line:
        line=line.replace('\t\t','\t')
    return line.split('\t')
def get_level_and_entries(line):
    level=0
    while line.startswith('\t'):
        line=line[1:]
        level+=1
    line=tab_split(line)
    return level,line
def space_split(leaf):
    leaf=leaf.split(' ')
    key=leaf[0]
    leaf=leaf[1:]
    value=' '.join(leaf)
    return key,value
test1='A\n\tB\tC\tD\n\t\tE F\tG H\n\t\t\t\tI\n\t\t\tJ\n\t\tK\n\tL M\tN O P\nQ\n   \n\n\t\t\tR\n\t\tS\n\t\tT U\tV\n\t\t\tW\n\t\t\tX Y\nA\n\tZ\n'
ans=test1


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Sep 13, 2021 at 10:26:41PM    ###########
############################################################
import math
ans=math.exp(1)
e= ans
N=1100000
ans=1/2*(1-1/N)**(N/2-1)
ans=e**.5/2
ans=1/2*(1-1/N)**(N/2)
ans=1/2*(1-1/N)**(N/2)
def sqrt(x):
    return x**.5
ans=sqrt(e/2)
ans=sqrt(e)
ans=ans /4
ans=ans /8
ans=1/2*(1-1/N)**(N/2)
ans=1/2*(1-1/N)**(N/2-1)
ans=1/2*(1-1/N)**(N)
ans=sqrt(1/e)/2
ans=e
ans=1/2*(1-1/N)**(N)
ans=N
N=9186237
ans=1/2*(1-1/N)**(N)
ans=1/e
ans=1/e/2
ans=1/2*(1-1/N)**(N/2)
ans=sqrt(0.1839397)
ans=1/2*(1/e)**1/2
ans=((1-1/N)**N)**.5
def heavy_hitters(a:list,l:float):
    #First pass through the array
    from math import ceil
    N=ceil(1/l)
    c={} # Candidate -> counter mappings
    for e in l:
        if e in c:
            c[e]+=1
        elif len(v)<N:
            c[e]=1
        else:
            for x in c:
                if c[x]==1:
                    del c[x]
                else:
                    c[x]-=1
    f={x:0 for x in c} #Frequencies
    for e in l:
        if e in f:
            f[e]+=1
    return {x for x in f if x[f]/len(a)>l}



def heavy_hitters(a:list,l:float):
    #First pass through the array
    from math import ceil
    N=ceil(1/l)
    c={} # Candidate -> counter mappings
    for e in a:
        if e in c:
            c[e]+=1
        elif len(v)<N:
            c[e]=1
        else:
            for x in c:
                if c[x]==1:
                    del c[x]
                else:
                    c[x]-=1
    f={x:0 for x in c} #Frequencies
    for e in a:
        if e in f:
            f[e]+=1
    return {x for x in f if x[f]/len(a)>l}



def heavy_hitters(a:list,l:float):
    #First pass through the array
    from math import ceil
    N=ceil(1/l)
    c={} # Candidate -> counter mappings
    for e in a:
        if e in c:
            c[e]+=1
        elif len(c)<N:
            c[e]=1
        else:
            for x in c:
                if c[x]==1:
                    del c[x]
                else:
                    c[x]-=1
    f={x:0 for x in c} #Frequencies
    for e in a:
        if e in f:
            f[e]+=1
    return {x for x in f if x[f]/len(a)>l}



def heavy_hitters(a:list,l:float):
    #First pass through the array
    from math import ceil
    N=ceil(1/l)
    c={} # Candidate -> counter mappings
    for e in a:
        if e in c:
            c[e]+=1
        elif len(c)<N:
            c[e]=1
        else:
            for x in c:
                if c[x]==1:
                    del c[x]
                else:
                    c[x]-=1
    f={x:0 for x in c} #Frequencies
    for e in a:
        if e in f:
            f[e]+=1
    return {x for x in f if f[x]/len(a)>l}



ans=heavy_hitters([1,1,2,2,3,3,3],.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.3)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.334)
ans=heavy_hitters(shuffled([1,1,2,2,3,3]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,6,6,6,6,6]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,6,6,6,6,6]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,6,6,6,6,6]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,6,6,6,6,6]),.33)
ans=heavy_hitters(shuffled([1,1,2,2,3,3,6,6,6,6,6]),.33)
def heavy_hitters(a:list,l:float):
    #First pass through the array
    from math import ceil
    N=ceil(1/l)
    c={} # Candidate -> counter mappings
    for e in a:
        if e in c:
            c[e]+=1
        elif len(c)<N:
            c[e]=1
        else:
            for x in c:
                if c[x]==1:
                    del c[x]
                else:
                    c[x]-=1
    f={x:0 for x in c} #Frequencies
    for e in a:
        if e in f:
            f[e]+=1
    return {x for x in f if f[x]/len(a)>l}



def heavy_hitters(a:list,l:float):
    #First pass through the array
    from math import ceil
    N=ceil(1/l)
    c={} # Candidate -> counter mappings
    for e in a:
        if e in c:
            c[e]+=1
        elif len(c)<N:
            c[e]=1
        else:
            for x in c:
                if c[x]==1:
                    del c[x]
                else:
                    c[x]-=1
    f={x:0 for x in c} #Frequencies
    for e in a:
        if e in f:
            f[e]+=1
    return {x for x in f if f[x]/len(a)>l}



print(ans)
print(ans)
#Failed to load gist at specified url


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Sep 13, 2021 at 11:58:39PM    ###########
############################################################
ans=''
ans="\\documentclass{article}\n\\usepackage[utf8]{inputenc}\n\n\\title{CSE548 HW2 Part A}\n\\author{Ryan Burgert }\n\\date{September 2021}\n\n\\usepackage[margin=0.5in]{geometry}\n\n\\begin{document}\n\n\\maketitle\n\n\\section{Introduction}\n\nA preface: I write my homework in Sublime in plain text before I translate to LaTeX. During this homework, \nI ran out of time to translate it to LaTeX in a beautiful manner, so I'm going to upload my answers in plaintext. (I don't want to take a late day)\nform into this LaTeX document. All the answers are there and are completely legible, but I apologize for the lack of pretty \nformatting.\n\n\\pagebreak\n\\begin{verbatim}\n\nCSE548 HW2 Part A\nRyan Burgert 110176886\n\nCollaborated with Daniel Delayo, Julie Lee, Rama Shanbhag\n\n1.\n    a.\n        P(a given person speaks) = 1/N\n        P(a given person does not speak) = 1-1/N\n        P(nobody speaks) = (1-1/N)^N\n    b.\n        (Number of people)*(P(a given person speaks)*P(all other people don't speak)=\n        N*(1/N*(1-1/N)^(N-1))=(1-1/N)^(N-1)\n    c.\n        Step 1:\n            (Number of half the people)*(P(a given person speaks)*...\n            ...*P(the other people who attempted don't speak)=\n            (N/2)*(1/N*(1-1/N)^(N/2-1))=1/2*(1-1/N)^(N/2-1)\n        Step 2:\n            Calculate limit as N -> infinity of 1/2*(1-1/N)^(N/2-1)\n            Note: (Limit as N -> infinity of (1-1/N)^N) = 1/e\n            Let Q(N)=(1-1/N)^N)\n            Limit as N -> infinity of 1/2*sqrt(Q(N))/(1-1/N) = 1/2*sqrt(1/e)/(1-0) = sqrt(1/e)/2\n        Answer: sqrt(1/e)/2\n\n\n    Some python code I wrote for numerical verification:\n        from rp import *\n        def trial_nobody_speaks(N=10000):\n            random=np.random.rand(N)\n            prob_speak=1/N\n            speaks=random<prob_speak\n            not_speaks=~speaks\n            nobody_speaks=np.all(not_speaks)\n            return nobody_speaks\n        def empirical_probability(trial_func,num_trials=100000,*trial_args,**trial_kwargs):\n            successes=0\n            display_progress=eta(num_trials)\n            for _ in range(num_trials):\n                display_progress(_)\n                if trial_func(*trial_args,**trial_kwargs):\n                    successes+=1\n            return float(successes/num_trials)\n        print((1-1/3)**3,empirical_probability(trial_nobody_speaks,num_trials=100000,N=3))\n\n\\end{verbatim}\n\\pagebreak\n\\begin{verbatim}\n\n2.\n    a.\n        1/nCr(2n,n)\n    b.\n        Let our probability p=1/nCr(2n,n)\n        Suppose 1/Q is the upper bound of p: 1/nCr(2n,n) <= 1/Q\n        1/nCr(2n,n) <= 1/Q  <-->  nCr(2n,n) >= Q\n        A death bed formula: nCr(a,b) >= (a/b)^b\n        Plug in a=2n and b=n to get:\n            nCr(2n,n) >= (2n/n)^n = 2^n\n        Let Q=2^n. Therefore, nCr(2n,n) >= Q = 2^n <--> 1/nCr(2n,n) <= 1/Q = 1/2^n\n        Therefore, 1/2^n is an upper bound for p\n        With n=1000, p is no more than 1/2^1000\n    c.\n        I worked with Rama Shanbhag on this question.\n        nCr(n,k) assumes n>=k\n        Part 1:\n            Redefine nCr(n,k)\n\n            nCr(n,k) = n!/(k!(n-k)!) = \n                     (n)(n-1)(n-2)...(n-k)(n-k-1)(n-k-2)...(1)\n                ---------------------------------------------------  =\n                ((k)(k-1)(k-2)...(1)) * ((n-k)(n-k-1)(n-k-2)...(1))\n    \n                    (n)(n-1)(n-2)...(n-k+1)  \n                    ----------------------- = \n                      (k)(k-1)(k-2)...(1)     \n    \n                 = n/k * (n-1)/(k-1) * (n-2)/(k-2) ... (n-k+1)/(k-k+1)\n                 (There are k terms)\n\n        Part 2:\n            (n/k)^k = (n/k) * (n/k) * (n/k) * ... * (n/k)\n            (There are k terms)\n\n        Part 3:\n            Note that for integers n>k>1, (n/k) < (n-1)/(k-1)\n            For example, 3/2 < 2/1\n\n        Part 4:\n            Therefore, by induction,\n                n/k * (n-1)/(k-1) * (n-2)/(k-2) ... (n-k+1)/(k-k+1)\n                Is greater than \n                (n/k) * (n/k) * (n/k) * ... * (n/k)\n                Term by term,\n            And therfore,\n                (n/k)^k <= nCr(n,k)\n\n\\end{verbatim}\n\\pagebreak\n\\begin{verbatim}\n\n3.\n    1.\n        This is false. Counter example: Let f(n)=2^n and g(n)=3^n.\n        2^n = o(3^n) but log(2^n) != o(log(3^n)) because log(2^n)\n        and log(3^n) are both linear functions\n    2.\n        I believe this is True, but I don't know how to prove this\n    3.\n        I believe this is True, but I don't know how to prove this\n    4.\n        This is false. Counter example: Let f(n)=n and g(n)=2n.\n        2^n != O(2^(2n)) = O(4^n)\n\n\\end{verbatim}\n\\pagebreak\n\\begin{verbatim}\n4.\n    Worked with Julie Lee on this question\n    \n    Let v stand for 'square-root' (because v looks like the square root symbol √)\n\n    Original Ordering:\n        n\n        lg n\n        v(n)\n        3^n\n        v(lg n)\n        lg v(n)\n        3^v(n)\n        v(3^n)\n        3^(lg n)\n        lg(3^n)\n        3^(lg v(n))\n        3^v(lg n)\n        v(3^(lg n))\n        lg v(3^n)\n        v(lg(3^n))\n        5^n\n        5^v(n)\n        v(5^n)\n        5^(lg n)\n        lg(5^n)\n        5^(lg v(n))\n        5^v(lg n)\n        v(5^(lg n))\n        lg v(5^n)\n        v(lg(5^n))\n        \n    Sorted Ordering From Least to Greatest:\n        v(lg n)     = O(v(log n))\n        lg n        = O(log n)\n        lg v(n)     = O(log n)\n        3^v(lg n)   = O(3^v(lg n))\n        5^v(lg n)   = O(5^v(lg n))\n        3^v(n)      = O(3^v(n))\n        5^v(n)      = O(5^v(n))\n        v(n)        = O(v(n))\n        v(lg(5^n))  = O(v(n))\n        v(lg(3^n))  = O(v(n))\n        v(3^(lg n)) = O(n^.7925)\n        3^(lg v(n)) = O(n^.7925)\n        lg(3^n)     = O(n)\n        n           = O(n)\n        lg(5^n)     = O(n)\n        lg v(5^n)   = O(n)\n        lg v(3^n)   = O(n)\n        v(5^(lg n)) = O(n^1.1609)\n        5^(lg v(n)) = O(n^1.1609)\n        3^(lg n)    = O(n^1.584)\n        5^(lg n)    = O(n^2.321)\n        v(3^n)      = O(1.732^n)\n        v(5^n)      = O(2.236^n)\n        3^n         = O(3^n)\n        5^n         = O(5^n)\n\\end{verbatim}\n\\pagebreak\n\\begin{verbatim}\n5.\n    a.\n        Worked with Julie Lee on this question\n\n        We maintain an invariant: when we remove N distinct elements from list L,\n            if there are N-1 heavy hitters in L, they will be maintained\n        From this invariant, we modify the original algorithm and obtain\n        the following code (full, tested implementation written in python):\n        \n            def heavy_hitters(a:list,l:float):\n                #Given a list 'a' and a lambda value 'l', return all heavy hitters as a set\n                \n                #First pass through the array\n                from math import ceil\n                N=ceil(1/l)\n                c={} # Candidate -> counter mappings\n                for e in a:\n                    if e in c:\n                        c[e]+=1\n                    elif len(c)<N:\n                        c[e]=1\n                    else:\n                        for x in c:\n                            if c[x]==1:\n                                del c[x]\n                            else:\n                                c[x]-=1\n                \n                #Second pass through the array\n                f={x:0 for x in c} #Frequencies\n                for e in a:\n                    if e in f:\n                        f[e]+=1\n                \n                #Final answer\n                return {x for x in f if f[x]/len(a)>l}\n    b.\n        I don't know\n\n\n\n\n\n\n\n    \n\\end{verbatim}\n\\end{document}\n"


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Mon Sep 20, 2021 at 7:29:10AM     ###########
############################################################
#Failed to load gist at specified url


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Sep 24, 2021 at 7:30:58PM     ###########
############################################################
ans=r
ans=identity


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Sep 24, 2021 at 7:32:12PM     ###########
############################################################
ans=identity


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Sep 24, 2021 at 8:25:15PM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CD Desktop
import sys,os;os.chdir('/Users/Ryan/Desktop/DiffRendering');sys.path.append(os.getcwd())# CD DiffRendering
ans=[[[0,0,0],[1,0,0]],[[0,1,0],[1,1,0]]]
ans=as_numpy_array(ans)
ans=+0.0
ans=ans+0.0
ans=as_byte_image(ans)
ans=[]
import warnings as np
import numpy as np


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sat Sep 25, 2021 at 1:55:43AM     ###########
############################################################
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sun Oct 24, 2021 at 1:25:15AM     ###########
############################################################
ans=323452452345


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sun Oct 24, 2021 at 2:38:17AM     ###########
############################################################
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sun Oct 24, 2021 at 10:12:36PM    ###########
############################################################
ans=2**2
ans=2**2**2
ans=2**2**2**2
ans=2**2**2**2**2


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Oct 26, 2021 at 3:45:00AM     ###########
############################################################
ans=''
ans=load_image_from_clipboard()
display_image(ans)
ans=save_image_to_imgur(ans)
__import__("rp").open_url_in_web_browser('https://i.imgur.com/x8nngYz.jpeg')
ans='https://tandon-a.github.io/CycleGAN_ssim/'
ans=shorten_url(ans)
__import__("rp").open_url_in_web_browser('https://tinyurl.com/yhtl8qqb')


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Oct 26, 2021 at 6:38:25PM     ###########
############################################################
a= ans
ans=rp
import sys,os;os.chdir('/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp');sys.path.append(os.getcwd())# CD /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/rp
ans='./rp_ptpython/style.py'
string_to_text_file(ans,a)
ans='from __future__ import unicode_literals\n\ndef get_all_ui_styles():\n    """\n    Return a dict mapping {ui_style_name -> style_dict}.\n    """\n    return {\n        # \'inverted_1\': inverted_1,#Nothing special; this is teh same as default\n        \'default\'    :default_ui_style,\n        \'blue\'       :blue_ui_style,\n        \'lightning\'  :inverted_2,\n        \'stars\'      :inverted_3,\n        \'cyan\'       :cyan,\n        \'aqua\'       :cyan_2,\n        \'blew\'       :cyan_3,\n        \'seashell\'   :cyan_4,\n        \'snailshell\' :cyan_4__02__02,\n        \'cobra\'      :cyan_4__02__02__12,#cyan 4 with channels 0 and 2 swapped then channels 0 and 2 swapped then 1 and 2 swapped\n        \'eggshell\'   :cyan_4__02,\n        \'jojo\'       :color_1,\n        \'bizarre\'    :color_2,\n        \'adventure\'  :color_3,\n        \'jade\'       :pupper,\n        \'clara\'      :clara,\n        \'claranew\'   :new_clara_style,\n        \'emma\'       :emma,\n        \'dejavu\'     :dejavu,\n        \'anna\'       :newstyle,\n        \'spook\'      :sprice,\n        \'saturn\'     :splicer1,\n        \'atlantic\'   :splicer2,\n        \'hot\'        :breeze,\n        \'plain\'      :plain,\n        \'silver\'     :silver,\n        \'dark\'       :dark,\n        # \'trance\'     :trance,\n        \'chirpy\'     :chirpy,\n        \'jenny\'      :jenny,\n        \'random\'     :random,\n        \'darkred\'    :darkred,\n        \'nebula\'     :stars_2,\n    }\n\nfrom pygments.token import Token, Keyword, Name, Comment, String, Operator, Number\nfrom pygments.styles import get_style_by_name, get_all_styles\nfrom rp.prompt_toolkit.styles import DEFAULT_STYLE_EXTENSIONS, style_from_dict\nfrom rp.prompt_toolkit.utils import is_windows, is_conemu_ansi\n\n__all__ = (\n    \'get_all_code_styles\',\n    \'get_all_ui_styles\',\n    \'generate_style\',\n)\n\ndef randint(a_inclusive,b_inclusive=0):\n    # If both a and b are specified, the range is inclusive, choose from range［a，b] ⋂ ℤ\n    # Otherwise, if only a is specified, choose random element from the range ［a，b) ⋂ ℤ\n    from random import randint\n    return randint(min([a_inclusive,b_inclusive]),max([a_inclusive,b_inclusive]))\n\ndef random_index(array_length_or_array_itself):\n    # Basically a random integer generator suited for generating array indices.\n    # Returns a random integer ∈ ℤ ⋂ [0‚array_length)\n    if isinstance(array_length_or_array_itself,int):\n        assert array_length_or_array_itself != 0\n        return randint(0,array_length_or_array_itself - 1)\n    else:\n        return random_index(len(array_length_or_array_itself))\n\ndef random_element(x):\n    return x[random_index(len(x))]\ndef random_choice(*choices):\n    return random_element(choices)\n\n\n\ndef random_hex_color():\n    # return \'\'\n    return \'#\'+\'\'.join(random_element(\'0987654321ABCDEF\') for _ in range(6))\ndef random_style():\n    # return \'\'\n    style=\'\'\n    style+=random_hex_color()\n    style+=\' \'\n    style+=\'bg:\'+random_hex_color()\n    style+=\' \'\n    style+=random_choice(\'\',\'underline\',\'bold\',\'italic\')\n    style+=\' \'\n    style+=\'noinherit\'\n    return style\ndef get_all_code_styles():\n    """\n    Return a mapping from style names to their classes.\n    """\n    result = dict((name, get_style_by_name(name).styles) for name in get_all_styles())\n    # from rp import mini_terminal_for_pythonista\n    # exec(mini_terminal_for_pythonista)\n    result[\'win32\'] = win32_code_style\n    result[\'ryan\']=ryan_style\n    result[\'clara\']=clara_style\n    result[\'newclara\']=new_clara_style\n    result[\'viper\']=viper_style\n    result[\'stratus\']=stratus_style\n    result[\'snape\']=snape_style\n    result[\'plain\']=plain_style\n    result[\'random\']=random_syntax_style\n    return result\nfrom pygments.token import Keyword, Name, Comment, String, Error, \\\n    Number, Operator, Punctuation, Generic, Whitespace\n"""\nThe style used in Lovelace interactive learning environment. Tries to avoid\nthe "angry fruit salad" effect with desaturated and dim colours.\n"""\n_KW_BLUE=\'#2838b0\'\n_NAME_GREEN=\'#388038\'\n_DOC_ORANGE=\'#b85820\'\n_OW_PURPLE=\'#a848a8\'\n_FUN_BROWN=\'#785840\'\n_STR_RED=\'#b83838\'\n_CLS_CYAN=\'#287088\'\n_ESCAPE_LIME=\'#709030\'\n_LABEL_CYAN=\'#289870\'\n_EXCEPT_YELLOW=\'#908828\'\nryan_style={Token: \'\',\n            Token.Comment: \'italic #888888\',\n            Token.Comment.Hashbang: \'#287088\',\n            Token.Comment.Multiline: \'#888888\',\n            Token.Comment.Preproc: \'noitalic #289870\',\n            Token.Comment.PreprocFile: \'\',\n            Token.Comment.Single: \'\',\n            Token.Comment.Special: \'\',\n            # Token.Error: \'bg:#a848a8\',\n            Token.Escape: \'\',\n            Token.Generic: \'\',\n            Token.Generic.Deleted: \'#c02828\',\n            Token.Generic.Emph: \'italic\',\n            Token.Generic.Error: \'#c02828\',\n            Token.Generic.Heading: \'#666666\',\n            Token.Generic.Inserted: \'#388038\',\n            Token.Generic.Output: \'#666666\',\n            Token.Generic.Prompt: \'#444444\',\n            Token.Generic.Strong: \'bold\',\n            Token.Generic.Subheading: \'#444444\',\n            Token.Generic.Traceback: \'#2838b0\',\n            Token.Keyword: \'#2838b0 bold\',\n            Token.Keyword.Constant: \'italic #444444\',\n            Token.Keyword.Declaration: \'italic\',\n            Token.Keyword.Pseudo: \'\',\n            Token.Keyword.Reserved: \'\',\n            Token.Keyword.Type: \'italic\',\n            Token.Literal: \'\',\n            Token.Literal.Date: \'\',\n            Token.Literal.Number: \'#444444\',\n            Token.Literal.Number.Bin: \'\',\n            Token.Literal.Number.Float: \'\',\n            Token.Literal.Number.Hex: \'\',\n            Token.Literal.Number.Integer: \'\',\n            Token.Literal.Number.Integer.Long: \'\',\n            Token.Literal.Number.Oct: \'\',\n            Token.Literal.String: \'#b83838\',\n            Token.Literal.String.Backtick: \'\',\n            Token.Literal.String.Char: \'#a848a8\',\n            Token.Literal.String.Doc: \'italic #b85820\',\n            Token.Literal.String.Double: \'\',\n            Token.Literal.String.Escape: \'#709030\',\n            Token.Literal.String.Heredoc: \'\',\n            Token.Literal.String.Interpol: \'underline\',\n            Token.Literal.String.Other: \'#a848a8\',\n            Token.Literal.String.Regex: \'#a848a8\',\n            Token.Literal.String.Single: \'\',\n            Token.Literal.String.Symbol: \'\',\n            Token.Name: \'\',\n            Token.Name.Attribute: \'#388038\',\n            Token.Name.Builtin: \'#388038\',\n            Token.Name.Builtin.Pseudo: \'italic\',\n            Token.Name.Class: \'#287088\',\n            Token.Name.Constant: \'#b85820\',\n            Token.Name.Decorator: \'#287088\',\n            Token.Name.Entity: \'#709030\',\n            Token.Name.Exception: \'#908828\',\n            Token.Name.Function: \'#785840\',\n            Token.Name.Label: \'#289870\',\n            Token.Name.Namespace: \'#289870\',\n            Token.Name.Other: \'\',\n            Token.Name.Property: \'\',\n            Token.Name.Tag: \'#2838b0\',\n            Token.Name.Variable: \'#b04040\',\n            Token.Name.Variable.Class: \'\',\n            Token.Name.Variable.Global: \'#908828\',\n            Token.Name.Variable.Instance: \'\',\n            Token.Operator: \'#666666\',\n            Token.Operator.Word: \'#a848a8\',\n            Token.Other: \'\',\n            Token.Punctuation: \'#888888\',\n            Token.Text: \'\',\n            Token.Text.Whitespace: \'#a89028\'}\n\nplain_style={}\nfor key in ryan_style:\n    plain_style[key]=\'noinherit\'\n\nclara_style={Token: \'\',\n            Token.Comment: \'italic #51a6fb\',\n            Token.Comment.Hashbang: \'#5126db\',\n            Token.Comment.Multiline: \'#51a6fb\',\n            Token.Comment.Preproc: \'noitalic #3126ff\',\n            Token.Comment.PreprocFile: \'\',\n            Token.Comment.Single: \'\',\n            Token.Comment.Special: \'\',\n            # Token.Error: \'bg:#7cd1a6\',\n            Token.Escape: \'\',\n            Token.Generic: \'\',\n            Token.Generic.Deleted: \'#00f17b\',\n            Token.Generic.Emph: \'italic\',\n            Token.Generic.Error: \'#00f17b\',\n            Token.Generic.Heading: \'#2479ce\',\n            Token.Generic.Inserted: \'#003cf0\',\n            Token.Generic.Output: \'#2479ce\',\n            Token.Generic.Prompt: \'#004ca0\',\n            Token.Generic.Strong: \'bold\',\n            Token.Generic.Subheading: \'#004ca0\',\n            Token.Generic.Traceback: \'#862690\',\n            Token.Keyword: \'#862690 bold\',\n            Token.Keyword.Constant: \'italic #004ca0\',\n            Token.Keyword.Declaration: \'italic\',\n            Token.Keyword.Pseudo: \'\',\n            Token.Keyword.Reserved: \'\',\n            Token.Keyword.Type: \'italic\',\n            Token.Literal: \'\',\n            Token.Literal.Date: \'\',\n            Token.Literal.Number: \'#004ca0\',\n            Token.Literal.Number.Bin: \'\',\n            Token.Literal.Number.Float: \'\',\n            Token.Literal.Number.Hex: \'\',\n            Token.Literal.Number.Integer: \'\',\n            Token.Literal.Number.Integer.Long: \'\',\n            Token.Literal.Number.Oct: \'\',\n            Token.Literal.String: \'#00e690\',\n            Token.Literal.String.Backtick: \'\',\n            Token.Literal.String.Char: \'#7cd1a6\',\n            Token.Literal.String.Doc: \'italic #00e6bb\',\n            Token.Literal.String.Double: \'\',\n            Token.Literal.String.Escape: \'#0086ff\',\n            Token.Literal.String.Heredoc: \'\',\n            Token.Literal.String.Interpol: \'underline\',\n            Token.Literal.String.Other: \'#7cd1a6\',\n            Token.Literal.String.Regex: \'#7cd1a6\',\n            Token.Literal.String.Single: \'\',\n            Token.Literal.String.Symbol: \'\',\n            Token.Name: \'\',\n            Token.Name.Attribute: \'#003cf0\',\n            Token.Name.Builtin: \'#003cf0\',\n            Token.Name.Builtin.Pseudo: \'italic\',\n            Token.Name.Class: \'#5126db\',\n            Token.Name.Constant: \'#00e6bb\',\n            Token.Name.Decorator: \'#5126db\',\n            Token.Name.Entity: \'#0086ff\',\n            Token.Name.Exception: \'#00b1fb\',\n            Token.Name.Function: \'#0091bb\',\n            Token.Name.Label: \'#3126ff\',\n            Token.Name.Namespace: \'#3126ff\',\n            Token.Name.Other: \'\',\n            Token.Name.Property: \'\',\n            Token.Name.Tag: \'#862690\',\n            Token.Name.Variable: \'#00dc9b\',\n            Token.Name.Variable.Class: \'\',\n            Token.Name.Variable.Global: \'#00b1fb\',\n            Token.Name.Variable.Instance: \'\',\n            Token.Operator: \'#2479ce\',\n            Token.Operator.Word: \'#7cd1a6\',\n            Token.Other: \'\',\n            Token.Punctuation: \'#51a6fb\',\n            Token.Text: \'\',\n            Token.Text.Whitespace: \'#00d1ff\'}\n\nnew_clara_style=clara_style.copy()\nnew_clara_style_diff={\n            Token.Keyword: \'#D026B0 bold\',\n            Token.Name.Builtin: \'#008cf0\',\n            Token.Name.Function: \'#21d988\',\n            Token.Name.Class: \'#17ff9a bold\',\n            Token.Literal.Number: \'#55CDFC\',\n            Token.Literal.Number: \'#2196d9\',\n            Token.Name.Decorator: \'#8730ff\',\n            Token.Keyword.Constant: \'italic #008cD0\',\n            Token.Keyword.Declaration: \'italic\',\n            Token.Keyword.Pseudo: \'\',\n            Token.Keyword.Reserved: \'\',\n            Token.Keyword.Type: \'italic\',\n}\nnew_clara_style.update(new_clara_style_diff)\n\n\nrandom_syntax_style={Token: random_style(),\n            Token.Comment: random_style(),\n            Token.Comment.Hashbang: random_style(),\n            Token.Comment.Multiline: random_style(),\n            Token.Comment.Preproc: random_style(),\n            Token.Comment.PreprocFile: random_style(),\n            Token.Comment.Single: random_style(),\n            Token.Comment.Special: random_style(),\n            # Token.Error: random_style(),\n            Token.Escape: random_style(),\n            Token.Generic: random_style(),\n            Token.Generic.Deleted: random_style(),\n            Token.Generic.Emph: random_style(),\n            Token.Generic.Error: random_style(),\n            Token.Generic.Heading: random_style(),\n            Token.Generic.Inserted: random_style(),\n            Token.Generic.Output: random_style(),\n            Token.Generic.Prompt: random_style(),\n            Token.Generic.Strong: random_style(),\n            Token.Generic.Subheading: random_style(),\n            Token.Generic.Traceback: random_style(),\n            Token.Keyword: random_style(),\n            Token.Keyword.Constant: random_style(),\n            Token.Keyword.Declaration: random_style(),\n            Token.Keyword.Pseudo: random_style(),\n            Token.Keyword.Reserved: random_style(),\n            Token.Keyword.Type: random_style(),\n            Token.Literal: random_style(),\n            Token.Literal.Date: random_style(),\n            Token.Literal.Number: random_style(),\n            Token.Literal.Number.Bin: random_style(),\n            Token.Literal.Number.Float: random_style(),\n            Token.Literal.Number.Hex: random_style(),\n            Token.Literal.Number.Integer: random_style(),\n            Token.Literal.Number.Integer.Long: random_style(),\n            Token.Literal.Number.Oct: random_style(),\n            Token.Literal.String: random_style(),\n            Token.Literal.String.Backtick: random_style(),\n            Token.Literal.String.Char: random_style(),\n            Token.Literal.String.Doc: random_style(),\n            Token.Literal.String.Double: random_style(),\n            Token.Literal.String.Escape: random_style(),\n            Token.Literal.String.Heredoc: random_style(),\n            Token.Literal.String.Interpol: random_style(),\n            Token.Literal.String.Other: random_style(),\n            Token.Literal.String.Regex: random_style(),\n            Token.Literal.String.Single: random_style(),\n            Token.Literal.String.Symbol: random_style(),\n            Token.Name: random_style(),\n            Token.Name.Attribute: random_style(),\n            Token.Name.Builtin: random_style(),\n            Token.Name.Builtin.Pseudo: random_style(),\n            Token.Name.Class: random_style(),\n            Token.Name.Constant: random_style(),\n            Token.Name.Decorator: random_style(),\n            Token.Name.Entity: random_style(),\n            Token.Name.Exception: random_style(),\n            Token.Name.Function: random_style(),\n            Token.Name.Label: random_style(),\n            Token.Name.Namespace: random_style(),\n            Token.Name.Other: random_style(),\n            Token.Name.Property: random_style(),\n            Token.Name.Tag: random_style(),\n            Token.Name.Variable: random_style(),\n            Token.Name.Variable.Class: random_style(),\n            Token.Name.Variable.Global: random_style(),\n            Token.Name.Variable.Instance: random_style(),\n            Token.Operator: random_style(),\n            Token.Operator.Word: random_style(),\n            Token.Other: random_style(),\n            Token.Punctuation: random_style(),\n            Token.Text: random_style(),\n            Token.Text.Whitespace: random_style()}\n\nviper_style={Token: \'\',\n            Token.Comment:                        \' italic      #fb51a6\',\n            Token.Comment.Hashbang:               \'             #db5126\',\n            Token.Comment.Multiline:              \'             #fb51a6\',\n            Token.Comment.Preproc:                \' noitalic    #ff3126\',\n            Token.Comment.PreprocFile:            \' \',\n            Token.Comment.Single:                 \' \',\n            Token.Comment.Special:                \' \',\n            # Token.Error:                          \' bg:         #a67cd1\',\n            Token.Escape:                         \' \',\n            Token.Generic:                        \' \',\n            Token.Generic.Deleted:                \'             #7b00f1\',\n            Token.Generic.Emph:                   \' italic\',\n            Token.Generic.Error:                  \'             #7b00f1\',\n            Token.Generic.Heading:                \'             #ce2479\',\n            Token.Generic.Inserted:               \'             #f0003c\',\n            Token.Generic.Output:                 \'             #ce2479\',\n            Token.Generic.Prompt:                 \'             #a0004c\',\n            Token.Generic.Strong:                 \' bold\',\n            Token.Generic.Subheading:             \'             #a0004c\',\n            Token.Generic.Traceback:              \'             #908626\',\n            Token.Keyword:                        \'             #908626 bold\',\n            Token.Keyword.Constant:               \' italic      #a0004c\',\n            Token.Keyword.Declaration:            \' italic\',\n            Token.Keyword.Pseudo:                 \' \',\n            Token.Keyword.Reserved:               \' \',\n            Token.Keyword.Type:                   \' italic\',\n            Token.Literal:                        \' \',\n            Token.Literal.Date:                   \' \',\n            Token.Literal.Number:                 \'             #a0004c\',\n            Token.Literal.Number.Bin:             \' \',\n            Token.Literal.Number.Float:           \' \',\n            Token.Literal.Number.Hex:             \' \',\n            Token.Literal.Number.Integer:         \' \',\n            Token.Literal.Number.Integer.Long:    \' \',\n            Token.Literal.Number.Oct:             \' \',\n            Token.Literal.String:                 \'             #9000e6\',\n            Token.Literal.String.Backtick:        \' \',\n            Token.Literal.String.Char:            \'             #a67cd1\',\n            Token.Literal.String.Doc:             \' italic      #bb00e6\',\n            Token.Literal.String.Double:          \' \',\n            Token.Literal.String.Escape:          \'             #ff0086\',\n            Token.Literal.String.Heredoc:         \' \',\n            Token.Literal.String.Interpol:        \' underline\',\n            Token.Literal.String.Other:           \'             #a67cd1\',\n            Token.Literal.String.Regex:           \'             #a67cd1\',\n            Token.Literal.String.Single:          \' \',\n            Token.Literal.String.Symbol:          \' \',\n            Token.Name:                           \' \',\n            Token.Name.Attribute:                 \'             #f0003c\',\n            Token.Name.Builtin:                   \'             #f0003c\',\n            Token.Name.Builtin.Pseudo:            \' italic\',\n            Token.Name.Class:                     \'             #db5126\',\n            Token.Name.Constant:                  \'             #bb00e6\',\n            Token.Name.Decorator:                 \'             #db5126\',\n            Token.Name.Entity:                    \'             #ff0086\',\n            Token.Name.Exception:                 \'             #fb00b1\',\n            Token.Name.Function:                  \'             #bb0091\',\n            Token.Name.Label:                     \'             #ff3126\',\n            Token.Name.Namespace:                 \'             #ff3126\',\n            Token.Name.Other:                     \' \',\n            Token.Name.Property:                  \' \',\n            Token.Name.Tag:                       \'             #908626\',\n            Token.Name.Variable:                  \'             #9b00dc\',\n            Token.Name.Variable.Class:            \' \',\n            Token.Name.Variable.Global:           \'             #fb00b1\',\n            Token.Name.Variable.Instance:         \' \',\n            Token.Operator:                       \'             #ce2479\',\n            Token.Operator.Word:                  \'             #a67cd1\',\n            Token.Other:                          \' \',\n            Token.Punctuation:                    \'             #fb51a6\',\n            Token.Text:                           \' \',\n            Token.Text.Whitespace:                \'             #ff00d1\'}\n\n\nstratus_style={Token: \'\',\n            Token.Comment:                        \' italic      #a6fb51\',\n            Token.Comment.Hashbang:               \'             #26db51\',\n            Token.Comment.Multiline:              \'             #a6fb51\',\n            Token.Comment.Preproc:                \' noitalic    #26ff31\',\n            Token.Comment.PreprocFile:            \' \',\n            Token.Comment.Single:                 \' \',\n            Token.Comment.Special:                \' \',\n            # Token.Error:                          \' bg:         #d1a67c\',\n            Token.Escape:                         \' \',\n            Token.Generic:                        \' \',\n            Token.Generic.Deleted:                \'             #f17b00\',\n            Token.Generic.Emph:                   \' italic\',\n            Token.Generic.Error:                  \'             #f17b00\',\n            Token.Generic.Heading:                \'             #79ce24\',\n            Token.Generic.Inserted:               \'             #3cf000\',\n            Token.Generic.Output:                 \'             #79ce24\',\n            Token.Generic.Prompt:                 \'             #4ca000\',\n            Token.Generic.Strong:                 \' bold\',\n            Token.Generic.Subheading:             \'             #4ca000\',\n            Token.Generic.Traceback:              \'             #269086\',\n            Token.Keyword:                        \'             #269086 bold\',\n            Token.Keyword.Constant:               \' italic      #4ca000\',\n            Token.Keyword.Declaration:            \' italic\',\n            Token.Keyword.Pseudo:                 \' \',\n            Token.Keyword.Reserved:               \' \',\n            Token.Keyword.Type:                   \' italic\',\n            Token.Literal:                        \' \',\n            Token.Literal.Date:                   \' \',\n            Token.Literal.Number:                 \'             #4ca000\',\n            Token.Literal.Number.Bin:             \' \',\n            Token.Literal.Number.Float:           \' \',\n            Token.Literal.Number.Hex:             \' \',\n            Token.Literal.Number.Integer:         \' \',\n            Token.Literal.Number.Integer.Long:    \' \',\n            Token.Literal.Number.Oct:             \' \',\n            Token.Literal.String:                 \'             #e69000\',\n            Token.Literal.String.Backtick:        \' \',\n            Token.Literal.String.Char:            \'             #d1a67c\',\n            Token.Literal.String.Doc:             \' italic      #e6bb00\',\n            Token.Literal.String.Double:          \' \',\n            Token.Literal.String.Escape:          \'             #86ff00\',\n            Token.Literal.String.Heredoc:         \' \',\n            Token.Literal.String.Interpol:        \' underline\',\n            Token.Literal.String.Other:           \'             #d1a67c\',\n            Token.Literal.String.Regex:           \'             #d1a67c\',\n            Token.Literal.String.Single:          \' \',\n            Token.Literal.String.Symbol:          \' \',\n            Token.Name:                           \' \',\n            Token.Name.Attribute:                 \'             #3cf000\',\n            Token.Name.Builtin:                   \'             #3cf000\',\n            Token.Name.Builtin.Pseudo:            \' italic\',\n            Token.Name.Class:                     \'             #26db51\',\n            Token.Name.Constant:                  \'             #e6bb00\',\n            Token.Name.Decorator:                 \'             #26db51\',\n            Token.Name.Entity:                    \'             #86ff00\',\n            Token.Name.Exception:                 \'             #b1fb00\',\n            Token.Name.Function:                  \'             #91bb00\',\n            Token.Name.Label:                     \'             #26ff31\',\n            Token.Name.Namespace:                 \'             #26ff31\',\n            Token.Name.Other:                     \' \',\n            Token.Name.Property:                  \' \',\n            Token.Name.Tag:                       \'             #269086\',\n            Token.Name.Variable:                  \'             #dc9b00\',\n            Token.Name.Variable.Class:            \' \',\n            Token.Name.Variable.Global:           \'             #b1fb00\',\n            Token.Name.Variable.Instance:         \' \',\n            Token.Operator:                       \'             #79ce24\',\n            Token.Operator.Word:                  \'             #d1a67c\',\n            Token.Other:                          \' \',\n            Token.Punctuation:                    \'             #a6fb51\',\n            Token.Text:                           \' \',\n            Token.Text.Whitespace:                \'             #d1ff00\'}\n\n\nsnape_style={Token: \'\',\n            Token.Comment:                        \' italic      #51a6fb\',\n            Token.Comment.Hashbang:               \'             #5126db\',\n            Token.Comment.Multiline:              \'             #51a6fb\',\n            Token.Comment.Preproc:                \' noitalic    #3126ff\',\n            Token.Comment.PreprocFile:            \' \',\n            Token.Comment.Single:                 \' \',\n            Token.Comment.Special:                \' \',\n            Token.Error:                          \' bg:         #7cd1a6\',\n            Token.Escape:                         \' \',\n            Token.Generic:                        \' \',\n            Token.Generic.Deleted:                \'             #00f17b\',\n            Token.Generic.Emph:                   \' italic\',\n            Token.Generic.Error:                  \'             #00f17b\',\n            Token.Generic.Heading:                \'             #2479ce\',\n            Token.Generic.Inserted:               \'             #003cf0\',\n            Token.Generic.Output:                 \'             #2479ce\',\n            Token.Generic.Prompt:                 \'             #004ca0\',\n            Token.Generic.Strong:                 \' bold\',\n            Token.Generic.Subheading:             \'             #004ca0\',\n            Token.Generic.Traceback:              \'             #862690\',\n            Token.Keyword:                        \'             #862690 bold\',\n            Token.Keyword.Constant:               \' italic      #004ca0\',\n            Token.Keyword.Declaration:            \' italic\',\n            Token.Keyword.Pseudo:                 \' \',\n            Token.Keyword.Reserved:               \' \',\n            Token.Keyword.Type:                   \' italic\',\n            Token.Literal:                        \' \',\n            Token.Literal.Date:                   \' \',\n            Token.Literal.Number:                 \'             #004ca0\',\n            Token.Literal.Number.Bin:             \' \',\n            Token.Literal.Number.Float:           \' \',\n            Token.Literal.Number.Hex:             \' \',\n            Token.Literal.Number.Integer:         \' \',\n            Token.Literal.Number.Integer.Long:    \' \',\n            Token.Literal.Number.Oct:             \' \',\n            Token.Literal.String:                 \'             #00e690\',\n            Token.Literal.String.Backtick:        \' \',\n            Token.Literal.String.Char:            \'             #7cd1a6\',\n            Token.Literal.String.Doc:             \' italic      #00e6bb\',\n            Token.Literal.String.Double:          \' \',\n            Token.Literal.String.Escape:          \'             #0086ff\',\n            Token.Literal.String.Heredoc:         \' \',\n            Token.Literal.String.Interpol:        \' underline\',\n            Token.Literal.String.Other:           \'             #7cd1a6\',\n            Token.Literal.String.Regex:           \'             #7cd1a6\',\n            Token.Literal.String.Single:          \' \',\n            Token.Literal.String.Symbol:          \' \',\n            Token.Name:                           \' \',\n            Token.Name.Attribute:                 \'             #003cf0\',\n            Token.Name.Builtin:                   \'             #003cf0\',\n            Token.Name.Builtin.Pseudo:            \' italic\',\n            Token.Name.Class:                     \'             #5126db\',\n            Token.Name.Constant:                  \'             #00e6bb\',\n            Token.Name.Decorator:                 \'             #5126db\',\n            Token.Name.Entity:                    \'             #0086ff\',\n            Token.Name.Exception:                 \'             #00b1fb\',\n            Token.Name.Function:                  \'             #0091bb\',\n            Token.Name.Label:                     \'             #3126ff\',\n            Token.Name.Namespace:                 \'             #3126ff\',\n            Token.Name.Other:                     \' \',\n            Token.Name.Property:                  \' \',\n            Token.Name.Tag:                       \'             #862690\',\n            Token.Name.Variable:                  \'             #00dc9b\',\n            Token.Name.Variable.Class:            \' \',\n            Token.Name.Variable.Global:           \'             #00b1fb\',\n            Token.Name.Variable.Instance:         \' \',\n            Token.Operator:                       \'             #2479ce\',\n            Token.Operator.Word:                  \'             #7cd1a6\',\n            Token.Other:                          \' \',\n            Token.Punctuation:                    \'             #51a6fb\',\n            Token.Text:                           \' \',\n            Token.Text.Whitespace:                \'             #00d1ff\'}\n\n\n# ryan_style= \\\n#     {\n#         # A rich, colored scheme I made (based on monokai)\n#         Comment:"#00ff00",\n#         Keyword:\'#44ff44\',\n#         Number:\'#378cba\',\n#         Operator:\'\',\n#         String:\'#26b534\',\n#         Token.Literal.String.Escape :"  #ae81ff",\n#         #\n#         Name:\'\',\n#         Name.Decorator:\'#ff4444\',\n#         Name.Class:\'#ff4444\',\n#         Name.Function:\'#ff4444\',\n#         Name.Builtin:\'#ff4444\',\n#         #\n#         Name.Attribute:\'\',\n#         Name.Constant:\'\',\n#         Name.Entity:\'\',\n#         Name.Exception:\'\',\n#         Name.Label:\'\',\n#         Name.Namespace:\'#dcff2d\',\n#         Name.Tag:\'\',\n#         Name.Variable:\'\',\n#     }\n\n\ndef generate_style(python_style, ui_style):\n    """\n    Generate Pygments Style class from two dictionaries\n    containing style rules.\n    """\n    assert isinstance(python_style, dict)  or isinstance(ui_style,ChaosStyle)\n    assert isinstance(ui_style, dict) or isinstance(ui_style,ChaosStyle)\n\n    styles = {}\n    styles.update(DEFAULT_STYLE_EXTENSIONS)\n    styles.update(python_style)\n    styles.update(ui_style)\n\n    return style_from_dict(styles)\n\n\n# Code style for Windows consoles. They support only 16 colors,\n# so we choose a combination that displays nicely.\nwin32_code_style = {\n    Comment:                   "#00ff00",\n    Keyword:                   \'#44ff44\',\n    Number:                    \'\',\n    Operator:                  \'\',\n    String:                    \'#ff44ff\',\n\n    Name:                      \'\',\n    Name.Decorator:            \'#ff4444\',\n    Name.Class:                \'#ff4444\',\n    Name.Function:             \'#ff4444\',\n    Name.Builtin:              \'#ff4444\',\n\n    Name.Attribute:            \'\',\n    Name.Constant:             \'\',\n    Name.Entity:               \'\',\n    Name.Exception:            \'\',\n    Name.Label:                \'\',\n    Name.Namespace:            \'\',\n    Name.Tag:                  \'\',\n    Name.Variable:             \'\',\n}\ndefault_ui_style = {\n    Token.LineNumber:\'#aa6666 bg:#002222\',\n    # Classic prompt.\n    Token.Prompt:                                 \'bold\',\n    Token.Prompt.Dots:                            \'noinherit\',\n\n    # (IPython <5.0) Prompt: "In [1]:"\n    Token.In:                                     \'bold #008800\',\n    Token.In.Number:                              \'\',\n\n    # Return value.\n    Token.Out:                                    \'#ff0000\',\n    Token.Out.Number:                             \'#ff0000\',\n\n    # Separator between windows. (Used above docstring.)\n    Token.Separator:                              \'#bbbbbb\',\n\n    # Search toolbar.\n    Token.Toolbar.Search:                         \'#22aaaa noinherit\',\n    Token.Toolbar.Search.Text:                    \'noinherit\',\n\n    # System toolbar\n    Token.Toolbar.System:                         \'#22aaaa noinherit\',\n\n    # "arg" toolbar.\n    Token.Toolbar.Arg:                            \'#22aaaa noinherit\',\n    Token.Toolbar.Arg.Text:                       \'noinherit\',\n\n    # Signature toolbar.\n    Token.Toolbar.Signature:                      \'bg:#44bbbb #000000\',\n    Token.Toolbar.Signature.CurrentName:          \'bg:#008888 #ffffff bold\',\n    Token.Toolbar.Signature.Operator:             \'#000000 bold\',\n\n    Token.Docstring:                              \'#888888\',\n\n    # Validation toolbar.\n    Token.Toolbar.Validation:                     \'bg:#440000 #aaaaaa\',\n\n    # Status toolbar.\n    Token.Toolbar.Status:                         \'bg:#222222 #aaaaaa\',\n    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#222222 #22aa22\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#222222 #aa2222\',\n    Token.Toolbar.Status.Title:                   \'underline\',\n    Token.Toolbar.Status.InputMode:               \'bg:#222222 #ffffaa\',\n    Token.Toolbar.Status.Key:                     \'bg:#000000 #888888\',\n    Token.Toolbar.Status.PasteModeOn:             \'bg:#aa4444 #ffffff\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable: \'bg:#662266 #aaaaaa\',\n    Token.Toolbar.Status.PythonVersion:           \'bg:#222222 #ffffff bold\',\n\n    # When Control-C has been pressed. Grayed.\n    Token.Aborted:                                \'#888888\',\n\n    # The options sidebar.\n    Token.Sidebar:                                \'bg:#bbbbbb #000000\',\n    Token.Sidebar.Title:                          \'bg:#6688ff #ffffff bold\',\n    Token.Sidebar.Label:                          \'bg:#bbbbbb #222222\',\n    Token.Sidebar.Status:                         \'bg:#dddddd #000011\',\n    Token.Sidebar.Selected.Label:                 \'bg:#222222 #eeeeee\',\n    Token.Sidebar.Selected.Status:                \'bg:#444444 #ffffff bold\',\n\n    Token.Sidebar.Separator:                       \'bg:#bbbbbb #ffffff underline\',\n    Token.Sidebar.Key:                            \'bg:#bbddbb #000000 bold\',\n    Token.Sidebar.Key.Description:                \'bg:#bbbbbb #000000\',\n    Token.Sidebar.HelpText:                       \'bg:#eeeeff #000011\',\n\n    # Styling for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#008800  #000000\',\n    Token.History.Line.Current:                  \'bg:#ffffff #000000\',\n    Token.History.Line.Selected.Current:         \'bg:#88ff88 #000000\',\n    Token.History.ExistingInput:                  \'#888888\',\n\n    # Help Window.\n    Token.Window.Border:                          \'#0000bb\',\n    Token.Window.Title:                           \'bg:#bbbbbb #000000\',\n    Token.Window.TIItleV2:                         \'bg:#6688bb #000000 bold\',\n\n    # Meta-enter message.\n    Token.AcceptMessage:                          \'bg:#ffff88 #444444\',\n\n    # Exit confirmation.\n    Token.ExitConfirmation:                       \'bg:#884444 #ffffff\',\n}\n\n# Some changes to get a bit more contrast on Windows consoles.\n# (They only support 16 colors.)\nif is_windows() and not is_conemu_ansi():\n    default_ui_style.update({\n        Token.Sidebar.Title:                          \'bg:#00ff00 #ffffff\',\n        Token.ExitConfirmation:                       \'bg:#ff4444 #ffffff\',\n        Token.Toolbar.Validation:                     \'bg:#ff4444 #ffffff\',\n\n        Token.Menu.Completions.Completion:            \'bg:#ffffff #000000\',\n        Token.Menu.Completions.Completion.Current:    \'bg:#aaaaaa #000000\',\n    })\n\n\nblue_ui_style = {}\nblue_ui_style.update(default_ui_style)\nblue_ui_style.update({\n        # Line numbers.\n        Token.LineNumber:                             \'#aa6666 bg:#222222\',\n\n        # Highlighting of search matches in document.\n        Token.SearchMatch:                            \'#ffffff bg:#4444aa\',\n        Token.SearchMatch.Current:                    \'#ffffff bg:#44aa44\',\n\n        # Highlighting of select text in document.\n        Token.SelectedText:                           \'#ffffff bg:#6666aa\',\n\n        # Completer toolbar.\n        Token.Toolbar.Completions:                    \'bg:#44bbbb #000000\',\n        Token.Toolbar.Completions.Arrow:              \'bg:#44bbbb #000000 bold\',\n        Token.Toolbar.Completions.Completion:         \'bg:#44bbbb #000000\',\n        Token.Toolbar.Completions.Completion.Current: \'bg:#008888 #ffffff\',\n\n        # Completer menu.\n        Token.Menu.Completions.Completion:            \'bg:#44bbbb #000000\',\n        Token.Menu.Completions.Completion.Current:    \'bg:#008888 #ffffff\',\n        Token.Menu.Completions.Meta:                  \'bg:#449999 #000000\',\n        Token.Menu.Completions.Meta.Current:          \'bg:#00aaaa #000000\',\n        Token.Menu.Completions.ProgressBar:           \'bg:#aaaaaa\',\n        Token.Menu.Completions.ProgressButton:        \'bg:#000000\',\n})\n\n\n# HOW I MADE THE INVERSION THEME:\n#THIS CODE AUTOMATICALLY MODIFIES COLORS IN THESE THEMES WHICH LETS ME MAKE NEW THEMES\n# code="""{Token.LineNumber:\'#aa6666 bg:#002222\',    Token.Prompt:                                 \'bold\',Token.Prompt.Dots:                            \'noinherit\',Token.In:                                     \'bold #008800\',Token.In.Number:                              \'\',Token.Out:                                    \'#ff0000\',Token.Out.Number:                             \'#ff0000\',Token.Separator:                              \'#bbbbbb\',Token.Toolbar.Search:                         \'#22aaaa noinherit\',Token.Toolbar.Search.Text:                    \'noinherit\',Token.Toolbar.System:                         \'#22aaaa noinherit\',Token.Toolbar.Arg:                            \'#22aaaa noinherit\',Token.Toolbar.Arg.Text:                       \'noinherit\',Token.Toolbar.Signature:                      \'bg:#44bbbb #000000\',Token.Toolbar.Signature.CurrentName:          \'bg:#008888 #ffffff bold\',Token.Toolbar.Signature.Operator:             \'#000000 bold\',Token.Docstring:                              \'#888888\',Token.Toolbar.Validation:                     \'bg:#440000 #aaaaaa\',Token.Toolbar.Status:                         \'bg:#222222 #aaaaaa\',Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#222222 #22aa22\',Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#222222 #aa2222\',Token.Toolbar.Status.Title:                   \'underline\',Token.Toolbar.Status.InputMode:               \'bg:#222222 #ffffaa\',Token.Toolbar.Status.Key:                     \'bg:#000000 #888888\',Token.Toolbar.Status.PasteModeOn:             \'bg:#aa4444 #ffffff\',Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#662266 #aaaaaa\',Token.Toolbar.Status.PythonVersion:           \'bg:#222222 #ffffff bold\',Token.Aborted:                                \'#888888\',Token.Sidebar:                                \'bg:#bbbbbb #000000\',Token.Sidebar.Title:                          \'bg:#6688ff #ffffff bold\',Token.Sidebar.Label:                          \'bg:#bbbbbb #222222\',Token.Sidebar.Status:                         \'bg:#dddddd #000011\',Token.Sidebar.Selected.Label:                 \'bg:#222222 #eeeeee\',Token.Sidebar.Selected.Status:                \'bg:#444444 #ffffff bold\',Token.Sidebar.Separator:                       \'bg:#bbbbbb #ffffff underline\',Token.Sidebar.Key:                            \'bg:#bbddbb #000000 bold\',Token.Sidebar.Key.Description:                \'bg:#bbbbbb #000000\',Token.Sidebar.HelpText:                       \'bg:#eeeeff #000011\',Token.History.Line:                          \'\',Token.History.Line.Selected:                 \'bg:#008800  #000000\',Token.History.Line.Current:                  \'bg:#ffffff #000000\',Token.History.Line.Selected.Current:         \'bg:#88ff88 #000000\',Token.History.ExistingInput:                  \'#888888\',Token.Window.Border:                          \'#0000bb\',Token.Window.Title:                           \'bg:#bbbbbb #000000\',Token.Window.TIItleV2:                         \'bg:#6688bb #000000 bold\',Token.AcceptMessage:                          \'bg:#ffff88 #444444\',Token.ExitConfirmation:                       \'bg:#884444 #ffffff\',}"""\n# def changecolors(colors):\n#     return [np.clip((np.roll([x for x in c],1)*2+np.asarray([0,128,255]))//1.5-100,0,255).astype(int) for c in colors]\n# def codewithcolors(colors,code=code):\n#     x=keys_and_values_to_dict(tocols(allcols(code)),tocols(colors))\n#     print(x)\n#     return search_replace_simul(code,x)\n# def tocols(cols):\n#     return [\'\'.join([hex(x)[2:].rjust(2,\'0\') for x in y]) for y in cols]\n# def allcols(code):\n#     import re\n#     cols=re.findall(\'#\'+r\'[\\dA-Fa-f]\'*6,code)#Colors like 55aaff or 12abfg\n#     cols=[x[1:] for x in cols]\n#     cols=set(cols)\n#     return [[eval(\'0x\'+\'\'.join(x)) for x in split_into_sublists(w,2)] for w in cols]\n# colors=allcols(code)\n# ans=codewithcolors(changecolors(colors),code)\n\n\ninverted_3 = {}\ninverted_3.update(default_ui_style)\ninverted_3.update({\n    # Status toolbar.\n\n    # Token.Toolbar.Status:                         \'bg:#dddddd #555555\',\n    # Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#dddddd #dd55dd\',\n    # Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#dddddd #55dddd\',\n    # Token.Toolbar.Status.Title:                   \'underline\',\n    # Token.Toolbar.Status.InputMode:               \'bg:#dddddd #000055\',\n    # Token.Toolbar.Status.Key:                     \'bg:#ffffff #777777\',\n    # Token.Toolbar.Status.PasteModeOn:             \'bg:#55bbbb #000000\',\n    # Token.Toolbar.Status.PseudoTerminalCurrentVariable:\n    #     \'bg:#99dd99 #555555\',# RYAN BURGERT STUFF\n    # Token.Toolbar.Status.PythonVersion:           \'bg:#dddddd #000000 bold\',\n\n    # When Control-C has been pressed. Grayed.\n    Token.Aborted:                                \'#777777\',\n\n    # The options sidebar.\n    Token.Sidebar:                                \'bg:#444444 #ffffff\',\n    Token.Sidebar.Title:                          \'bg:#997700 #000000 bold\',\n    Token.Sidebar.Label:                          \'bg:#444444 #dddddd\',\n    Token.Sidebar.Status:                         \'bg:#222222 #ffffee\',\n    Token.Sidebar.Selected.Label:                 \'bg:#dddddd #111111\',\n    Token.Sidebar.Selected.Status:                \'bg:#bbbbbb #000000 bold\',\n\n    Token.Sidebar.Separator:                       \'bg:#444444 #000000 underline\',\n    Token.Sidebar.Key:                            \'bg:#442244 #ffffff bold\',\n    Token.Sidebar.Key.Description:                \'bg:#444444 #ffffff\',\n    Token.Sidebar.HelpText:                       \'bg:#111100 #ffffee\',\n\n    # Styling for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#ff77ff  #ffffff\',\n    Token.History.Line.Current:                  \'bg:#000000 #ffffff\',\n    Token.History.Line.Selected.Current:         \'bg:#770077 #ffffff\',\n    Token.History.ExistingInput:                  \'#777777\',\n\n    # Help Window.\n    Token.Window.Border:                          \'#ffff44\',\n    Token.Window.Title:                           \'bg:#444444 #ffffff\',\n    Token.Window.TIItleV2:                         \'bg:#997744 #ffffff bold\',\n\n    # Meta-enter message.\n    Token.AcceptMessage:                          \'bg:#000077 #bbbbbb\',\n\n    # Exit confirmation.\n    Token.ExitConfirmation:                       \'bg:#77bbbb #000000\',\n})\n\ninverted_3.update({\n        # Line numbers.\n        Token.LineNumber:                             \'#aa6666 bg:#222222\',\n\n        # Highlighting of search matches in document.\n        Token.SearchMatch:                            \'#ffffff bg:#4444aa\',\n        Token.SearchMatch.Current:                    \'#ffffff bg:#44aa44\',\n\n        # Highlighting of select text in document.\n        Token.SelectedText:                           \'#ffffff bg:#6666aa\',\n\n        # # Completer toolbar.\n        # Token.Toolbar.Completions:                    \'bg:#44bbbb #000000\',\n        # Token.Toolbar.Completions.Arrow:              \'bg:#44bbbb #000000 bold\',\n        # Token.Toolbar.Completions.Completion:         \'bg:#44bbbb #000000\',\n        # Token.Toolbar.Completions.Completion.Current: \'bg:#008888 #ffffff\',\n\n        # # Completer menu.\n        # Token.Menu.Completions.Completion:            \'bg:#44bbbb #000000\',\n        # Token.Menu.Completions.Completion.Current:    \'bg:#008888 #ffffff\',\n        # Token.Menu.Completions.Meta:                  \'bg:#449999 #000000\',\n        # Token.Menu.Completions.Meta.Current:          \'bg:#00aaaa #000000\',\n        # Token.Menu.Completions.ProgressBar:           \'bg:#aaaaaa\',\n        # Token.Menu.Completions.ProgressButton:        \'bg:#000000\',\n\n\n\n                Token.Toolbar.Completions:            \'bg:#000046 #bf954c\',\n        Token.Toolbar.Completions.Arrow:              \'bg:#000046 #bf954c bold\',\n        Token.Toolbar.Completions.Completion:         \'bg:#000046 #bf954c\',\n        Token.Toolbar.Completions.Completion.Current: \'bg:#f0ffff #6a5100\',\n\n\n\n        # Completer menu.\n        Token.Menu.Completions.Completion:            \'bg:#202046 #ff954c\',\n        Token.Menu.Completions.Completion.Current:    \'bg:#ff954c #202046\',\n        Token.Menu.Completions.Meta:                  \'bg:#000046 #ff684c\',\n        Token.Menu.Completions.Meta.Current:          \'bg:#000046 #ff7e00\',\n        Token.Menu.Completions.ProgressBar:           \'bg:#ff7ed4           \',\n        Token.Menu.Completions.ProgressButton:        \'bg:#460000           \',\n})\n\n\n\n\nstars_2 = {}\nstars_2.update(default_ui_style)\nstars_2.update({\n    # Status toolbar.\n\n    # Token.Toolbar.Status:                         \'bg:#dddddd #555555\',\n    # Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#dddddd #dd55dd\',\n    # Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#dddddd #55dddd\',\n    # Token.Toolbar.Status.Title:                   \'underline\',\n    # Token.Toolbar.Status.InputMode:               \'bg:#dddddd #000055\',\n    # Token.Toolbar.Status.Key:                     \'bg:#ffffff #777777\',\n    # Token.Toolbar.Status.PasteModeOn:             \'bg:#55bbbb #000000\',\n    # Token.Toolbar.Status.PseudoTerminalCurrentVariable:\n    #     \'bg:#99dd99 #555555\',# RYAN BURGERT STUFF\n    # Token.Toolbar.Status.PythonVersion:           \'bg:#dddddd #000000 bold\',\n\n    # When Control-C has been pressed. Grayed.\n    Token.Aborted:                                \'#777777\',\n\n    # The options sidebar.\n    Token.Sidebar:                                \'bg:#444444 #ffffff\',\n    Token.Sidebar.Title:                          \'bg:#007799 #000000 bold\',\n    Token.Sidebar.Label:                          \'bg:#444444 #dddddd\',\n    Token.Sidebar.Status:                         \'bg:#222222 #eeffff\',\n    Token.Sidebar.Selected.Label:                 \'bg:#dddddd #111111\',\n    Token.Sidebar.Selected.Status:                \'bg:#bbbbbb #000000 bold\',\n\n    Token.Sidebar.Separator:                       \'bg:#444444 #000000 underline\',\n    Token.Sidebar.Key:                            \'bg:#442244 #ffffff bold\',\n    Token.Sidebar.Key.Description:                \'bg:#444444 #ffffff\',\n    Token.Sidebar.HelpText:                       \'bg:#001111 #eeffff\',\n\n    #lili Sng for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#ff77ff  #ffffff\',\n    Token.History.Line.Current:                  \'bg:#000000 #ffffff\',\n    Token.History.Line.Selected.Current:         \'bg:#770077 #ffffff\',\n    Token.History.ExistingInput:                  \'#777777\',\n\n    #plp  HWindow.\n    Token.Window.Border:                          \'#ffff44\',\n    Token.Window.Title:                           \'bg:#444444 #ffffff\',\n    Token.Window.TIItleV2:                         \'bg:#447799 #ffffff bold\',\n\n    #ata- Menter message.\n    Token.AcceptMessage:                          \'bg:#770000 #bbbbbb\',\n\n    #tit  Econfirmation.\n    Token.ExitConfirmation:                       \'bg:#bbbb77 #000000\',\n})\n\nstars_2.update({\n        #ene  Lnumbers.\n        Token.LineNumber:                             \'#aa6666 bg:#222222\',\n\n        #hlhl Highting of search matches in document.\n        Token.SearchMatch:                            \'#ffffff bg:#aa4444\',\n        Token.SearchMatch.Current:                    \'#ffffff bg:#44aa44\',\n\n        #hlhl Highting of select text in document.\n        Token.SelectedText:                           \'#ffffff bg:#aa6666\',\n\n        # C  ##pl Ceter toolbar.\n        #enen T.Toolbar.Completions:                    \'bg:#bbbb44 #000000\',\n        #enen T.Toolbar.Completions.Arrow:              \'bg:#bbbb44 #000000 bold\',\n        #enen T.Toolbar.Completions.Completion:         \'bg:#bbbb44 #000000\',\n        #enen T.Toolbar.Completions.Completion.Current: \'bg:#888800 #ffffff\',\n\n        # C  ##pl Ceter menu.\n        #enen T.Menu.Completions.Completion:            \'bg:#bbbb44 #000000\',\n        #enen T.Menu.Completions.Completion.Current:    \'bg:#888800 #ffffff\',\n        #enen T.Menu.Completions.Meta:                  \'bg:#999944 #000000\',\n        #enen T.Menu.Completions.Meta.Current:          \'bg:#aaaa00 #000000\',\n        #enen T.Menu.Completions.ProgressBar:           \'bg:#aaaaaa\',\n        #enen T.Menu.Completions.ProgressButton:        \'bg:#000000\',\n\n\n\n                Token.Toolbar.Completions:            \'bg:#460000 #4c95bf\',\n        Token.Toolbar.Completions.Arrow:              \'bg:#460000 #4c95bf bold\',\n        Token.Toolbar.Completions.Completion:         \'bg:#460000 #4c95bf\',\n        Token.Toolbar.Completions.Completion.Current: \'bg:#fffff0 #00516a\',\n\n\n\n        #plpl Ceter menu.\n        Token.Menu.Completions.Completion:            \'bg:#462020 #4c95ff\',\n        Token.Menu.Completions.Completion.Current:    \'bg:#4c95ff #462020\',\n        Token.Menu.Completions.Meta:                  \'bg:#460000 #4c68ff\',\n        Token.Menu.Completions.Meta.Current:          \'bg:#460000 #007eff\',\n        Token.Menu.Completions.ProgressBar:           \'bg:#d47eff           \',\n        Token.Menu.Completions.ProgressButton:        \'bg:#000046           \',\n})\n\n\n\n\n\ncolor_1={    Token.LineNumber:\'#d47623 bg:#397300\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #7dfb00\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#ff0039\',    Token.Out.Number:                             \'#ff0039\',    Token.Separator:                              \'#ffdf94\',    Token.Toolbar.Search:                         \'#2eff1e noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#2eff1e noinherit\',    Token.Toolbar.Arg:                            \'#2eff1e noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#5cff4c #234600\',    Token.Toolbar.Signature.CurrentName:          \'bg:#2cfb00 #fff7f0 bold\',    Token.Toolbar.Signature.Operator:             \'#234600 bold\',    Token.Docstring:                              \'#fbfb51\',    Token.Toolbar.Validation:                     \'bg:#4c2000 #ffe97e\',    Token.Toolbar.Status:                         \'bg:#577300 #ffe97e\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#577300 #9dff00\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#577300 #d40900\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#577300 #ffbe7e\',    Token.Toolbar.Status.Key:                     \'bg:#234600 #fbfb51\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#d43500 #fff7f0\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#794824 #ffe97e\',    Token.Toolbar.Status.PythonVersion:           \'bg:#577300 #fff7f0 bold\',    Token.Aborted:                                \'#fbfb51\',    Token.Sidebar:                                \'bg:#ffdf94 #234600\',    Token.Sidebar.Title:                          \'bg:#79fbaf #444488 bold\',    Token.Sidebar.Label:                          \'bg:#ffdf94 #577300\',    Token.Sidebar.Status:                         \'bg:#ffe0c2 #234600\',    Token.Sidebar.Selected.Label:                 \'bg:#577300 #ffecd9\',    Token.Sidebar.Selected.Status:                \'bg:#9ba000 #fff7f0 bold\',    Token.Sidebar.Separator:                       \'bg:#ffdf94 #fff7f0 underline\',    Token.Sidebar.Key:                            \'bg:#ffdf94 #234600 bold\',    Token.Sidebar.Key.Description:                \'bg:#ffdf94 #234600\',    Token.Sidebar.HelpText:                       \'bg:#fff7f0 #234600\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#7dfb00  #234600\',    Token.History.Line.Current:                  \'bg:#fff7f0 #234600\',    Token.History.Line.Selected.Current:         \'bg:#fdff51 #234600\',    Token.History.ExistingInput:                  \'#fbfb51\',    Token.Window.Border:                          \'#009095\',    Token.Window.Title:                           \'bg:#ffdf94 #234600\',    Token.Window.TIItleV2:                         \'bg:#9dfb79 #234600 bold\',    Token.AcceptMessage:                          \'bg:#ffa851 #9ba000\',    Token.ExitConfirmation:                       \'bg:#a64c00 #fff7f0\',    Token.LineNumber:                             \'#d47623 bg:#577300\',        Token.SearchMatch:                            \'#fff7f0 bg:#4ca053\',        Token.SearchMatch.Current:                    \'#fff7f0 bg:#cbff00\',        Token.SelectedText:                           \'#fff7f0 bg:#9ece78\',        Token.Toolbar.Completions:                    \'bg:#5cff4c #234600\',        Token.Toolbar.Completions.Arrow:              \'bg:#5cff4c #234600 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#5cff4c #234600\',        Token.Toolbar.Completions.Completion.Current: \'bg:#2cfb00 #000000\',        Token.Menu.Completions.Completion:            \'bg:#5cff4c #234600\',        Token.Menu.Completions.Completion.Current:    \'bg:#2c8b00 #ffffff\',        Token.Menu.Completions.Meta:                  \'bg:#89ff4c #234600\',        Token.Menu.Completions.Meta.Current:          \'bg:#01ff00 #234600\',        Token.Menu.Completions.ProgressBar:           \'bg:#ffe97e\',        Token.Menu.Completions.ProgressButton:        \'bg:#234600\',}\ncolor_2={    Token.LineNumber:\'#1a1ea2 bg:#410040\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #c900c8\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#0094cd\',    Token.Out.Number:                             \'#0094cd\',    Token.Separator:                              \'#8876cd\',    Token.Toolbar.Search:                         \'#cd187f noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#cd187f noinherit\',    Token.Toolbar.Arg:                            \'#cd187f noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#cd3d91 #140014\',    Token.Toolbar.Signature.CurrentName:          \'bg:#c90087 #c0c1cd bold\',    Token.Toolbar.Signature.Operator:             \'#140014 bold\',    Token.Docstring:                              \'#8440c9\',    Token.Toolbar.Validation:                     \'bg:#00021a #8765cd\',    Token.Toolbar.Status:                         \'bg:#300041 #8765cd\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#300041 #b500cd\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#300041 #004aa2\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#300041 #6565cd\',    Token.Toolbar.Status.Key:                     \'bg:#140014 #8440c9\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#0028a2 #c0c1cd\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#151847 #8765cd\',    Token.Toolbar.Status.PythonVersion:           \'bg:#300041 #c0c1cd bold\',    Token.Aborted:                                \'#8440c9\',    Token.Sidebar:                                \'bg:#8876cd #140014\',    Token.Sidebar.Title:                          \'bg:#c96069 #c0c1cd bold\',    Token.Sidebar.Label:                          \'bg:#8876cd #300041\',    Token.Sidebar.Status:                         \'bg:#9b9ccd #140014\',    Token.Sidebar.Selected.Label:                 \'bg:#300041 #aeaecd\',    Token.Sidebar.Selected.Status:                \'bg:#3a006e #c0c1cd bold\',    Token.Sidebar.Separator:                       \'bg:#8876cd #c0c1cd underline\',    Token.Sidebar.Key:                            \'bg:#8876cd #140014 bold\',    Token.Sidebar.Key.Description:                \'bg:#8876cd #140014\',    Token.Sidebar.HelpText:                       \'bg:#c0c1cd #140014\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#c900c8  #140014\',    Token.History.Line.Current:                  \'bg:#c0c1cd #140014\',    Token.History.Line.Selected.Current:         \'bg:#8841cd #140014\',    Token.History.ExistingInput:                  \'#8440c9\',    Token.Window.Border:                          \'#633400\',    Token.Window.Title:                           \'bg:#8876cd #140014\',    Token.Window.TIItleV2:                         \'bg:#c960b1 #140014 bold\',    Token.AcceptMessage:                          \'bg:#4141cd #3a006e\',    Token.ExitConfirmation:                       \'bg:#000474 #c0c1cd\',    Token.LineNumber:                             \'#1a1ea2 bg:#300041\',        Token.SearchMatch:                            \'#c0c1cd bg:#6e344c\',        Token.SearchMatch.Current:                    \'#c0c1cd bg:#9000cd\',        Token.SelectedText:                           \'#c0c1cd bg:#9c5a98\',        Token.Toolbar.Completions:                    \'bg:#cd3d91 #140014\',        Token.Toolbar.Completions.Arrow:              \'bg:#cd3d91 #140014 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#cd3d91 #140014\',        Token.Toolbar.Completions.Completion.Current: \'bg:#c90087 #c0c1cd\',        Token.Menu.Completions.Completion:            \'bg:#cd3d91 #140014\',        Token.Menu.Completions.Completion.Current:    \'bg:#c90087 #c0c1cd\',        Token.Menu.Completions.Meta:                  \'bg:#cd3db6 #140014\',        Token.Menu.Completions.Meta.Current:          \'bg:#cd0067 #140014\',        Token.Menu.Completions.ProgressBar:           \'bg:#8765cd\',        Token.Menu.Completions.ProgressButton:        \'bg:#140014\',}\ncolor_3={    Token.LineNumber:\'#5ea28b bg:#202941\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #6482c9\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#68cd66\',    Token.Out.Number:                             \'#68cd66\',    Token.Separator:                              \'#a1cdc8\',    Token.Toolbar.Search:                         \'#7e72cd noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#7e72cd noinherit\',    Token.Toolbar.Arg:                            \'#7e72cd noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#8d85cd #0a0c14\',    Token.Toolbar.Signature.CurrentName:          \'bg:#6764c9 #c6cdca bold\',    Token.Toolbar.Signature.Operator:             \'#0a0c14 bold\',    Token.Docstring:                              \'#84bbc9\',    Token.Toolbar.Validation:                     \'bg:#0d1a15 #99cbcd\',    Token.Toolbar.Status:                         \'bg:#203241 #99cbcd\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#203241 #6691cd\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#203241 #51a264\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#203241 #99cdbd\',    Token.Toolbar.Status.Key:                     \'bg:#0a0c14 #84bbc9\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#51a275 #c6cdca\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#2e473e #99cbcd\',    Token.Toolbar.Status.PythonVersion:           \'bg:#203241 #c6cdca bold\',    Token.Aborted:                                \'#84bbc9\',    Token.Sidebar:                                \'bg:#a1cdc8 #0a0c14\',    Token.Sidebar.Title:                          \'bg:#b494c9 #c6cdca bold\',    Token.Sidebar.Label:                          \'bg:#a1cdc8 #203241\',    Token.Sidebar.Status:                         \'bg:#b4cdc5 #0a0c14\',    Token.Sidebar.Selected.Label:                 \'bg:#203241 #bdcdc8\',    Token.Sidebar.Selected.Status:                \'bg:#37616e #c6cdca bold\',    Token.Sidebar.Separator:                       \'bg:#a1cdc8 #c6cdca underline\',    Token.Sidebar.Key:                            \'bg:#a1cdc8 #0a0c14 bold\',    Token.Sidebar.Key.Description:                \'bg:#a1cdc8 #0a0c14\',    Token.Sidebar.HelpText:                       \'bg:#c6cdca #0a0c14\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#6482c9  #0a0c14\',    Token.History.Line.Current:                  \'bg:#c6cdca #0a0c14\',    Token.History.Line.Selected.Current:         \'bg:#86becd #0a0c14\',    Token.History.ExistingInput:                  \'#84bbc9\',    Token.Window.Border:                          \'#633157\',    Token.Window.Title:                           \'bg:#a1cdc8 #0a0c14\',    Token.Window.TIItleV2:                         \'bg:#9498c9 #0a0c14 bold\',    Token.AcceptMessage:                          \'bg:#86cdb8 #37616e\',    Token.ExitConfirmation:                       \'bg:#3a7460 #c6cdca\',    Token.LineNumber:                             \'#5ea28b bg:#203241\',        Token.SearchMatch:                            \'#c6cdca bg:#59516e\',        Token.SearchMatch.Current:                    \'#c6cdca bg:#66a3cd\',        Token.SelectedText:                           \'#c6cdca bg:#7b829c\',        Token.Toolbar.Completions:                    \'bg:#8d85cd #0a0c14\',        Token.Toolbar.Completions.Arrow:              \'bg:#8d85cd #0a0c14 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#8d85cd #0a0c14\',        Token.Toolbar.Completions.Completion.Current: \'bg:#6764c9 #c6cdca\',        Token.Menu.Completions.Completion:            \'bg:#8d85cd #0a0c14\',        Token.Menu.Completions.Completion.Current:    \'bg:#6764c9 #c6cdca\',        Token.Menu.Completions.Meta:                  \'bg:#858fcd #0a0c14\',        Token.Menu.Completions.Meta.Current:          \'bg:#7a66cd #0a0c14\',        Token.Menu.Completions.ProgressBar:           \'bg:#99cbcd\',        Token.Menu.Completions.ProgressButton:        \'bg:#0a0c14\',}\n\npupper= {    Token.LineNumber:\'#23d452 bg:#005073\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #00affb\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#6cff00\',    Token.Out.Number:                             \'#6cff00\',    Token.Separator:                              \'#94ffc9\',    Token.Toolbar.Search:                         \'#1e5bff noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#1e5bff noinherit\',    Token.Toolbar.Arg:                            \'#1e5bff noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#4c80ff #003046\',    Token.Toolbar.Signature.CurrentName:          \'bg:#005efb #f0fff4 bold\',    Token.Toolbar.Signature.Operator:             \'#003046 bold\',    Token.Docstring:                              \'#51fbd8\',    Token.Toolbar.Validation:                     \'bg:#004c10 #7effcf\',    Token.Toolbar.Status:                         \'bg:#006e73 #7effcf\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#006e73 #00d0ff\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#006e73 #21d400\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#006e73 #7effa4\',    Token.Toolbar.Status.Key:                     \'bg:#003046 #51fbd8\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#00d40b #f0fff4\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#247937 #7effcf\',    Token.Toolbar.Status.PythonVersion:           \'bg:#006e73 #f0fff4 bold\',    Token.Aborted:                                \'#51fbd8\',    Token.Sidebar:                                \'bg:#94ffc9 #003046\',    Token.Sidebar.Title:                          \'bg:#9479fb #f0fff4 bold\',    Token.Sidebar.Label:                          \'bg:#94ffc9 #006e73\',    Token.Sidebar.Status:                         \'bg:#c2ffd4 #003046\',    Token.Sidebar.Selected.Label:                 \'bg:#006e73 #d9ffe4\',    Token.Sidebar.Selected.Status:                \'bg:#00a084 #f0fff4 bold\',    Token.Sidebar.Separator:                       \'bg:#94ffc9 #f0fff4 underline\',    Token.Sidebar.Key:                            \'bg:#94ffc9 #003046 bold\',    Token.Sidebar.Key.Description:                \'bg:#94ffc9 #003046\',    Token.Sidebar.HelpText:                       \'bg:#f0fff4 #003046\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#00affb  #003046\',    Token.History.Line.Current:                  \'bg:#f0fff4 #003046\',    Token.History.Line.Selected.Current:         \'bg:#51ffde #003046\',    Token.History.ExistingInput:                  \'#51fbd8\',    Token.Window.Border:                          \'#7b0095\',    Token.Window.Title:                           \'bg:#94ffc9 #003046\',    Token.Window.TIItleV2:                         \'bg:#79b8fb #003046 bold\',    Token.AcceptMessage:                          \'bg:#51ff85 #00a084\',    Token.ExitConfirmation:                       \'bg:#00a62b #f0fff4\',    Token.LineNumber:                             \'#23d452 bg:#006e73\',        Token.SearchMatch:                            \'#f0fff4 bg:#4c54a0\',        Token.SearchMatch.Current:                    \'#f0fff4 bg:#00feff\',        Token.SelectedText:                           \'#f0fff4 bg:#78afce\',        Token.Toolbar.Completions:                    \'bg:#4c80ff #003046\',        Token.Toolbar.Completions.Arrow:              \'bg:#4c80ff #003046 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#4c80ff #003046\',        Token.Toolbar.Completions.Completion.Current: \'bg:#005efb #f0fff4\',        Token.Menu.Completions.Completion:            \'bg:#4c80ff #003046\',        Token.Menu.Completions.Completion.Current:    \'bg:#005efb #f0fff4\',        Token.Menu.Completions.Meta:                  \'bg:#4cadff #003046\',        Token.Menu.Completions.Meta.Current:          \'bg:#0034ff #003046\',        Token.Menu.Completions.ProgressBar:           \'bg:#7effcf\',        Token.Menu.Completions.ProgressButton:        \'bg:#003046\',}\nclara=  {    Token.LineNumber:\'#7bced4 bg:#3f3973\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #8a7dfb\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#7fffaf\',    Token.Out.Number:                             \'#7fffaf\',    Token.Separator:                              \'#c9efff\',    Token.Toolbar.Search:                         \'#ca8eff noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#ca8eff noinherit\',    Token.Toolbar.Arg:                            \'#ca8eff noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#d3a5ff #262346\',    Token.Toolbar.Signature.CurrentName:          \'bg:#b27dfb #f7feff bold\',    Token.Toolbar.Signature.Operator:             \'#262346 bold\',    Token.Docstring:                              \'#a6c8fb\',    Token.Toolbar.Validation:                     \'bg:#264b4c #bee3ff\',    Token.Toolbar.Status:                         \'bg:#394273 #bee3ff\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#394273 #7f81ff\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#394273 #6ad4ae\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#394273 #bef8ff\',    Token.Toolbar.Status.Key:                     \'bg:#262346 #a6c8fb\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#6ad4c4 #f7feff\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#4e7879 #bee3ff\',    Token.Toolbar.Status.PythonVersion:           \'bg:#394273 #f7feff bold\',    Token.Aborted:                                \'#a6c8fb\',    Token.Sidebar:                                \'bg:#c9efff #262346\',    Token.Sidebar.Title:                          \'bg:#fbbafa #f7feff bold\',    Token.Sidebar.Label:                          \'bg:#c9efff #394273\',    Token.Sidebar.Status:                         \'bg:#e0fcff #262346\',    Token.Sidebar.Selected.Label:                 \'bg:#394273 #ecfdff\',    Token.Sidebar.Selected.Status:                \'bg:#506da0 #f7feff bold\',    Token.Sidebar.Separator:                       \'bg:#c9efff #f7feff underline\',    Token.Sidebar.Key:                            \'bg:#c9efff #262346 bold\',    Token.Sidebar.Key.Description:                \'bg:#c9efff #262346\',    Token.Sidebar.HelpText:                       \'bg:#f7feff #262346\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#8a7dfb  #262346\',    Token.History.Line.Current:                  \'bg:#f7feff #262346\',    Token.History.Line.Selected.Current:         \'bg:#a8c9ff #262346\',    Token.History.ExistingInput:                  \'#a6c8fb\',    Token.Window.Border:                          \'#954a66\',    Token.Window.Title:                           \'bg:#c9efff #262346\',    Token.Window.TIItleV2:                         \'bg:#cebafb #262346 bold\',    Token.AcceptMessage:                          \'bg:#a8f6ff #506da0\',    Token.ExitConfirmation:                       \'bg:#53a1a6 #f7feff\',    Token.LineNumber:                             \'#7bced4 bg:#394273\',        Token.SearchMatch:                            \'#f7feff bg:#9376a0\',        Token.SearchMatch.Current:                    \'#f7feff bg:#7f98ff\',        Token.SelectedText:                           \'#f7feff bg:#a9a3ce\',        Token.Toolbar.Completions:                    \'bg:#d3a5ff #262346\',        Token.Toolbar.Completions.Arrow:              \'bg:#d3a5ff #262346 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#d3a5ff #262346\',        Token.Toolbar.Completions.Completion.Current: \'bg:#b27dfb #f7feff\',        Token.Menu.Completions.Completion:            \'bg:#d3a5ff #262346\',        Token.Menu.Completions.Completion.Current:    \'bg:#b27dfb #f7feff\',        Token.Menu.Completions.Meta:                  \'bg:#bca5ff #262346\',        Token.Menu.Completions.Meta.Current:          \'bg:#cb7fff #262346\',        Token.Menu.Completions.ProgressBar:           \'bg:#bee3ff\',        Token.Menu.Completions.ProgressButton:        \'bg:#262346\',}\nemma=   {    Token.LineNumber:\'#7b86d4 bg:#6d3973\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #ee7dfb\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#7fe8ff\',    Token.Out.Number:                             \'#7fe8ff\',    Token.Separator:                              \'#cec9ff\',    Token.Toolbar.Search:                         \'#ff8ed9 noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#ff8ed9 noinherit\',    Token.Toolbar.Arg:                            \'#ff8ed9 noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#ffa4e3 #412346\',    Token.Toolbar.Signature.CurrentName:          \'bg:#fb7ddf #f7f7ff bold\',    Token.Toolbar.Signature.Operator:             \'#412346 bold\',    Token.Docstring:                              \'#c8a6fb\',    Token.Toolbar.Validation:                     \'bg:#262c4c #cdbeff\',    Token.Toolbar.Status:                         \'bg:#5e3973 #cdbeff\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#5e3973 #e37fff\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#5e3973 #6aa5d4\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#5e3973 #bec4ff\',    Token.Toolbar.Status.Key:                     \'bg:#412346 #c8a6fb\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#6a8fd4 #f7f7ff\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#4e5579 #cdbeff\',    Token.Toolbar.Status.PythonVersion:           \'bg:#5e3973 #f7f7ff bold\',    Token.Aborted:                                \'#c8a6fb\',    Token.Sidebar:                                \'bg:#cec9ff #412346\',    Token.Sidebar.Title:                          \'bg:#fbbac6 #f7f7ff bold\',    Token.Sidebar.Label:                          \'bg:#cec9ff #5e3973\',    Token.Sidebar.Status:                         \'bg:#e0e3ff #412346\',    Token.Sidebar.Selected.Label:                 \'bg:#5e3973 #ecedff\',    Token.Sidebar.Selected.Status:                \'bg:#7350a0 #f7f7ff bold\',    Token.Sidebar.Separator:                       \'bg:#cec9ff #f7f7ff underline\',    Token.Sidebar.Key:                            \'bg:#cec9ff #412346 bold\',    Token.Sidebar.Key.Description:                \'bg:#cec9ff #412346\',    Token.Sidebar.HelpText:                       \'bg:#f7f7ff #412346\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#ee7dfb  #412346\',    Token.History.Line.Current:                  \'bg:#f7f7ff #412346\',    Token.History.Line.Selected.Current:         \'bg:#cca8ff #412346\',    Token.History.ExistingInput:                  \'#c8a6fb\',    Token.Window.Border:                          \'#956a49\',    Token.Window.Title:                           \'bg:#cec9ff #412346\',    Token.Window.TIItleV2:                         \'bg:#fbbaf4 #412346 bold\',    Token.AcceptMessage:                          \'bg:#a8b0ff #7350a0\',    Token.ExitConfirmation:                       \'bg:#535ea6 #f7f7ff\',    Token.LineNumber:                             \'#7b86d4 bg:#5e3973\',        Token.SearchMatch:                            \'#f7f7ff bg:#a0768b\',        Token.SearchMatch.Current:                    \'#f7f7ff bg:#cc7fff\',        Token.SelectedText:                           \'#f7f7ff bg:#cba3ce\',        Token.Toolbar.Completions:                    \'bg:#ffa4e3 #412346\',        Token.Toolbar.Completions.Arrow:              \'bg:#ffa4e3 #412346 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#ffa4e3 #412346\',        Token.Toolbar.Completions.Completion.Current: \'bg:#fb7ddf #f7f7ff\',        Token.Menu.Completions.Completion:            \'bg:#ffa4e3 #412346\',        Token.Menu.Completions.Completion.Current:    \'bg:#412346 #ffa4e3\',        Token.Menu.Completions.Meta:                  \'bg:#ffa4fa #412346\',        Token.Menu.Completions.Meta.Current:          \'bg:#ff7fcc #412346\',        Token.Menu.Completions.ProgressBar:           \'bg:#cdbeff\',        Token.Menu.Completions.ProgressButton:        \'bg:#412346\',}\n\nbase=   {    Token.LineNumber:\'#aa6666 bg:#002222\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #008800\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#ff0000\',    Token.Out.Number:                             \'#ff0000\',    Token.Separator:                              \'#bbbbbb\',    Token.Toolbar.Search:                         \'#22aaaa noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#22aaaa noinherit\',    Token.Toolbar.Arg:                            \'#22aaaa noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#44bbbb #000000\',    Token.Toolbar.Signature.CurrentName:          \'bg:#008888 #ffffff bold\',    Token.Toolbar.Signature.Operator:             \'#000000 bold\',    Token.Docstring:                              \'#888888\',    Token.Toolbar.Validation:                     \'bg:#440000 #aaaaaa\',    Token.Toolbar.Status:                         \'bg:#222222 #aaaaaa\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#222222 #22aa22\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#222222 #aa2222\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#222222 #ffffaa\',    Token.Toolbar.Status.Key:                     \'bg:#000000 #888888\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#aa4444 #ffffff\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#662266 #aaaaaa\',    Token.Toolbar.Status.PythonVersion:           \'bg:#222222 #ffffff bold\',    Token.Aborted:                                \'#888888\',    Token.Sidebar:                                \'bg:#bbbbbb #000000\',    Token.Sidebar.Title:                          \'bg:#6688ff #ffffff bold\',    Token.Sidebar.Label:                          \'bg:#bbbbbb #222222\',    Token.Sidebar.Status:                         \'bg:#dddddd #000011\',    Token.Sidebar.Selected.Label:                 \'bg:#222222 #eeeeee\',    Token.Sidebar.Selected.Status:                \'bg:#444444 #ffffff bold\',    Token.Sidebar.Separator:                       \'bg:#bbbbbb #ffffff underline\',    Token.Sidebar.Key:                            \'bg:#bbddbb #000000 bold\',    Token.Sidebar.Key.Description:                \'bg:#bbbbbb #000000\',    Token.Sidebar.HelpText:                       \'bg:#eeeeff #000011\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#008800  #000000\',    Token.History.Line.Current:                  \'bg:#ffffff #000000\',    Token.History.Line.Selected.Current:         \'bg:#88ff88 #000000\',    Token.History.ExistingInput:                  \'#888888\',    Token.Window.Border:                          \'#0000bb\',    Token.Window.Title:                           \'bg:#bbbbbb #000000\',    Token.Window.TIItleV2:                         \'bg:#6688bb #000000 bold\',    Token.AcceptMessage:                          \'bg:#ffff88 #444444\',    Token.ExitConfirmation:                       \'bg:#884444 #ffffff\',    Token.LineNumber:                             \'#aa6666 bg:#222222\',        Token.SearchMatch:                            \'#ffffff bg:#4444aa\',        Token.SearchMatch.Current:                    \'#ffffff bg:#44aa44\',        Token.SelectedText:                           \'#ffffff bg:#6666aa\',        Token.Toolbar.Completions:                    \'bg:#44bbbb #000000\',        Token.Toolbar.Completions.Arrow:              \'bg:#44bbbb #000000 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#44bbbb #000000\',        Token.Toolbar.Completions.Completion.Current: \'bg:#008888 #ffffff\',        Token.Menu.Completions.Completion:            \'bg:#44bbbb #000000\',        Token.Menu.Completions.Completion.Current:    \'bg:#008888 #ffffff\',        Token.Menu.Completions.Meta:                  \'bg:#449999 #000000\',        Token.Menu.Completions.Meta.Current:          \'bg:#00aaaa #000000\',        Token.Menu.Completions.ProgressBar:           \'bg:#aaaaaa\',        Token.Menu.Completions.ProgressButton:        \'bg:#000000\',}\n\ninverted_1= {Token.LineNumber:\'#aa6666 bg:#002222\',    Token.Prompt:                                 \'bold\',Token.Prompt.Dots:                            \'noinherit\',Token.In:                                     \'bold #008800\',Token.In.Number:                              \'\',Token.Out:                                    \'#ff0000\',Token.Out.Number:                             \'#ff0000\',Token.Separator:                              \'#bbbbbb\',Token.Toolbar.Search:                         \'#22aaaa noinherit\',Token.Toolbar.Search.Text:                    \'noinherit\',Token.Toolbar.System:                         \'#22aaaa noinherit\',Token.Toolbar.Arg:                            \'#22aaaa noinherit\',Token.Toolbar.Arg.Text:                       \'noinherit\',Token.Toolbar.Signature:                      \'bg:#44bbbb #000000\',Token.Toolbar.Signature.CurrentName:          \'bg:#008888 #ffffff bold\',Token.Toolbar.Signature.Operator:             \'#000000 bold\',Token.Docstring:                              \'#888888\',Token.Toolbar.Validation:                     \'bg:#440000 #aaaaaa\',Token.Toolbar.Status:                         \'bg:#222222 #aaaaaa\',Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#222222 #22aa22\',Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#222222 #aa2222\',Token.Toolbar.Status.Title:                   \'underline\',Token.Toolbar.Status.InputMode:               \'bg:#222222 #ffffaa\',Token.Toolbar.Status.Key:                     \'bg:#000000 #888888\',Token.Toolbar.Status.PasteModeOn:             \'bg:#aa4444 #ffffff\',Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#662266 #aaaaaa\',Token.Toolbar.Status.PythonVersion:           \'bg:#222222 #ffffff bold\',Token.Aborted:                                \'#888888\',Token.Sidebar:                                \'bg:#bbbbbb #000000\',Token.Sidebar.Title:                          \'bg:#6688ff #ffffff bold\',Token.Sidebar.Label:                          \'bg:#bbbbbb #222222\',Token.Sidebar.Status:                         \'bg:#dddddd #000011\',Token.Sidebar.Selected.Label:                 \'bg:#222222 #eeeeee\',Token.Sidebar.Selected.Status:                \'bg:#444444 #ffffff bold\',Token.Sidebar.Separator:                       \'bg:#bbbbbb #ffffff underline\',Token.Sidebar.Key:                            \'bg:#bbddbb #000000 bold\',Token.Sidebar.Key.Description:                \'bg:#bbbbbb #000000\',Token.Sidebar.HelpText:                       \'bg:#eeeeff #000011\',Token.History.Line:                          \'\',Token.History.Line.Selected:                 \'bg:#008800  #000000\',Token.History.Line.Current:                  \'bg:#ffffff #000000\',Token.History.Line.Selected.Current:         \'bg:#88ff88 #000000\',Token.History.ExistingInput:                  \'#888888\',Token.Window.Border:                          \'#0000bb\',Token.Window.Title:                           \'bg:#bbbbbb #000000\',Token.Window.TIItleV2:                         \'bg:#6688bb #000000 bold\',Token.AcceptMessage:                          \'bg:#ffff88 #444444\',Token.ExitConfirmation:                       \'bg:#884444 #ffffff\',}\ninverted_2 ={Token.LineNumber:\'#999955 bg:#ddddff\',    Token.Prompt:                                 \'bold\',Token.Prompt.Dots:                            \'noinherit\',Token.In:                                     \'bold #77ffff\',Token.In.Number:                              \'\',Token.Out:                                    \'#ffff00\',Token.Out.Number:                             \'#ffff00\',Token.Separator:                              \'#444444\',Token.Toolbar.Search:                         \'#5555dd noinherit\',Token.Toolbar.Search.Text:                    \'noinherit\',Token.Toolbar.System:                         \'#5555dd noinherit\',Token.Toolbar.Arg:                            \'#5555dd noinherit\',Token.Toolbar.Arg.Text:                       \'noinherit\',Token.Toolbar.Signature:                      \'bg:#4444bb #ffffff\',Token.Toolbar.Signature.CurrentName:          \'bg:#7777ff #000000 bold\',Token.Toolbar.Signature.Operator:             \'#ffffff bold\',Token.Docstring:                              \'#777777\',Token.Toolbar.Validation:                     \'bg:#ffffbb #555555\',Token.Toolbar.Status:                         \'bg:#dddddd #555555\',Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#dddddd #55dddd\',Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#dddddd #dddd55\',Token.Toolbar.Status.Title:                   \'underline\',Token.Toolbar.Status.InputMode:               \'bg:#dddddd #005500\',Token.Toolbar.Status.Key:                     \'bg:#ffffff #777777\',Token.Toolbar.Status.PasteModeOn:             \'bg:#bbbb55 #000000\',Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#dd9999 #555555\',Token.Toolbar.Status.PythonVersion:           \'bg:#dddddd #000000 bold\',Token.Aborted:                                \'#777777\',Token.Sidebar:                                \'bg:#444444 #ffffff\',Token.Sidebar.Title:                          \'bg:#770099 #ffffff bold\',Token.Sidebar.Label:                          \'bg:#444444 #dddddd\',Token.Sidebar.Status:                         \'bg:#222222 #ffeeff\',Token.Sidebar.Selected.Label:                 \'bg:#dddddd #111111\',Token.Sidebar.Selected.Status:                \'bg:#bbbbbb #000000 bold\',Token.Sidebar.Separator:                       \'bg:#444444 #000000 underline\',Token.Sidebar.Key:                            \'bg:#224444 #ffffff bold\',Token.Sidebar.Key.Description:                \'bg:#444444 #ffffff\',Token.Sidebar.HelpText:                       \'bg:#110011 #ffeeff\',Token.History.Line:                          \'\',Token.History.Line.Selected:                 \'bg:#77ffff  #ffffff\',Token.History.Line.Current:                  \'bg:#000000 #ffffff\',Token.History.Line.Selected.Current:         \'bg:#007777 #ffffff\',Token.History.ExistingInput:                  \'#777777\',Token.Window.Border:                          \'#ff44ff\',Token.Window.Title:                           \'bg:#444444 #ffffff\',Token.Window.TIItleV2:                         \'bg:#774499 #ffffff bold\',Token.AcceptMessage:                          \'bg:#007700 #bbbbbb\',Token.ExitConfirmation:                       \'bg:#bbbb77 #000000\',}\n\ncyan = {Token.LineNumber:\'#6663bb bg:#93d4e8\',    Token.Prompt:                                 \'bold\',Token.Prompt.Dots:                            \'noinherit\',Token.In:                                     \'bold #aad4a4\',Token.In.Number:                              \'\',Token.Out:                                    \'#aa2aff\',Token.Out.Number:                             \'#aa2aff\',Token.Separator:                              \'#2d5882\',Token.Toolbar.Search:                         \'#38be8d noinherit\',Token.Toolbar.Search.Text:                    \'noinherit\',Token.Toolbar.System:                         \'#38be8d noinherit\',Token.Toolbar.Arg:                            \'#38be8d noinherit\',Token.Toolbar.Arg.Text:                       \'noinherit\',Token.Toolbar.Signature:                      \'bg:#2da782 #aad4ff\',Token.Toolbar.Signature.CurrentName:          \'bg:#4fd4a4 #002a55 bold\',Token.Toolbar.Signature.Operator:             \'#aad4ff bold\',Token.Docstring:                              \'#4f7aa4\',Token.Toolbar.Validation:                     \'bg:#aaa7ff #38638d\',Token.Toolbar.Status:                         \'bg:#93bee8 #38638d\',Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#93bee8 #93be8d\',Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#93bee8 #9363e8\',Token.Toolbar.Status.Title:                   \'underline\',Token.Toolbar.Status.InputMode:               \'bg:#93bee8 #382a55\',Token.Toolbar.Status.Key:                     \'bg:#aad4ff #4f7aa4\',Token.Toolbar.Status.PasteModeOn:             \'bg:#7c63d1 #002a55\',Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#6690e8 #38638d\',Token.Toolbar.Status.PythonVersion:           \'bg:#93bee8 #002a55 bold\',Token.Aborted:                                \'#4f7aa4\',Token.Sidebar:                                \'bg:#2d5882 #aad4ff\',Token.Sidebar.Title:                          \'bg:#0090a4 #002a55 bold\',Token.Sidebar.Label:                          \'bg:#2d5882 #93bee8\',Token.Sidebar.Status:                         \'bg:#16416b #9ed4ff\',Token.Sidebar.Selected.Label:                 \'bg:#93bee8 #0b3660\',Token.Sidebar.Selected.Status:                \'bg:#7ca7d1 #002a55 bold\',Token.Sidebar.Separator:                       \'bg:#2d5882 #002a55 underline\',Token.Sidebar.Key:                            \'bg:#2d586b #aad4ff bold\',Token.Sidebar.Key.Description:                \'bg:#2d5882 #aad4ff\',Token.Sidebar.HelpText:                       \'bg:#003660 #9ed4ff\',Token.History.Line:                          \'\',Token.History.Line.Selected:                 \'bg:#aad4a4  #aad4ff\',Token.History.Line.Current:                  \'bg:#002a55 #aad4ff\',Token.History.Line.Selected.Current:         \'bg:#4f7a55 #aad4ff\',Token.History.ExistingInput:                  \'#4f7aa4\',Token.Window.Border:                          \'#2dd4ff\',Token.Window.Title:                           \'bg:#2d5882 #aad4ff\',Token.Window.TIItleV2:                         \'bg:#2d90a4 #aad4ff bold\',Token.AcceptMessage:                          \'bg:#4f2a55 #7ca7d1\',Token.ExitConfirmation:                       \'bg:#7c7ad1 #002a55\',}\ncyan_2={Token.LineNumber:\'#51bbb7 bg:#1b3381\',    Token.Prompt:                                 \'bold\',Token.Prompt.Dots:                            \'noinherit\',Token.In:                                     \'bold #0033d2\',Token.In.Number:                              \'\',Token.Out:                                    \'#00ff66\',Token.Out.Number:                             \'#00ff66\',Token.Separator:                              \'#95c8fb\',Token.Toolbar.Search:                         \'#884eee noinherit\',Token.Toolbar.Search.Text:                    \'noinherit\',Token.Toolbar.System:                         \'#884eee noinherit\',Token.Toolbar.Arg:                            \'#884eee noinherit\',Token.Toolbar.Arg.Text:                       \'noinherit\',Token.Toolbar.Signature:                      \'bg:#9569fb #003366\',Token.Toolbar.Signature.CurrentName:          \'bg:#6c33d2 #ccffff bold\',Token.Toolbar.Signature.Operator:             \'#003366 bold\',Token.Docstring:                              \'#6ca0d2\',Token.Toolbar.Validation:                     \'bg:#006966 #88bbee\',Token.Toolbar.Status:                         \'bg:#1b4e81 #88bbee\',Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#1b4e81 #1b4eee\',Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#1b4e81 #1bbb81\',Token.Toolbar.Status.Title:                   \'underline\',Token.Toolbar.Status.InputMode:               \'bg:#1b4e81 #88ffff\',Token.Toolbar.Status.Key:                     \'bg:#003366 #6ca0d2\',Token.Toolbar.Status.PasteModeOn:             \'bg:#36bb9c #ccffff\',Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#518481 #88bbee\',Token.Toolbar.Status.PythonVersion:           \'bg:#1b4e81 #ccffff bold\',Token.Aborted:                                \'#6ca0d2\',Token.Sidebar:                                \'bg:#95c8fb #003366\',Token.Sidebar.Title:                          \'bg:#cc84d2 #ccffff bold\',Token.Sidebar.Label:                          \'bg:#95c8fb #1b4e81\',Token.Sidebar.Status:                         \'bg:#b0e4ff #0d3366\',Token.Sidebar.Selected.Label:                 \'bg:#1b4e81 #bef1ff\',Token.Sidebar.Selected.Status:                \'bg:#36699c #ccffff bold\',Token.Sidebar.Separator:                       \'bg:#95c8fb #ccffff underline\',Token.Sidebar.Key:                            \'bg:#95c8ff #003366 bold\',Token.Sidebar.Key.Description:                \'bg:#95c8fb #003366\',Token.Sidebar.HelpText:                       \'bg:#ccf1ff #0d3366\',Token.History.Line:                          \'\',Token.History.Line.Selected:                 \'bg:#0033d2  #003366\',Token.History.Line.Current:                  \'bg:#ccffff #003366\',Token.History.Line.Selected.Current:         \'bg:#6ca0ff #003366\',Token.History.ExistingInput:                  \'#6ca0d2\',Token.Window.Border:                          \'#953366\',Token.Window.Title:                           \'bg:#95c8fb #003366\',Token.Window.TIItleV2:                         \'bg:#9584d2 #003366 bold\',Token.AcceptMessage:                          \'bg:#6cffff #36699c\',Token.ExitConfirmation:                       \'bg:#36a09c #ccffff\',}\ncyan_3={Token.LineNumber:\'#24d4ce bg:#000073\',    Token.Prompt:                                 \'bold\',Token.Prompt.Dots:                            \'noinherit\',Token.In:                                     \'bold #0000fb\',Token.In.Number:                              \'\',Token.Out:                                    \'#00ff46\',Token.Out.Number:                             \'#00ff46\',Token.Separator:                              \'#95eaff\',Token.Toolbar.Search:                         \'#7e1eff noinherit\',Token.Toolbar.Search.Text:                    \'noinherit\',Token.Toolbar.System:                         \'#7e1eff noinherit\',Token.Toolbar.Arg:                            \'#7e1eff noinherit\',Token.Toolbar.Arg.Text:                       \'noinherit\',Token.Toolbar.Signature:                      \'bg:#954cff #000046\',Token.Toolbar.Signature.CurrentName:          \'bg:#5100fb #f0ffff bold\',Token.Toolbar.Signature.Operator:             \'#000046 bold\',Token.Docstring:                              \'#51a6fb\',Token.Toolbar.Validation:                     \'bg:#004c46 #7ed4ff\',Token.Toolbar.Status:                         \'bg:#001e73 #7ed4ff\',Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#001e73 #001eff\',Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#001e73 #00d473\',Token.Toolbar.Status.Title:                   \'underline\',Token.Toolbar.Status.InputMode:               \'bg:#001e73 #7effff\',Token.Toolbar.Status.Key:                     \'bg:#000046 #51a6fb\',Token.Toolbar.Status.PasteModeOn:             \'bg:#00d4a0 #f0ffff\',Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#247973 #7ed4ff\',Token.Toolbar.Status.PythonVersion:           \'bg:#001e73 #f0ffff bold\',Token.Aborted:                                \'#51a6fb\',Token.Sidebar:                                \'bg:#95eaff #000046\',Token.Sidebar.Title:                          \'bg:#f079fb #f0ffff bold\',Token.Sidebar.Label:                          \'bg:#95eaff #001e73\',Token.Sidebar.Status:                         \'bg:#c2ffff #000046\',Token.Sidebar.Selected.Label:                 \'bg:#001e73 #d9ffff\',Token.Sidebar.Selected.Status:                \'bg:#004ca0 #f0ffff bold\',Token.Sidebar.Separator:                       \'bg:#95eaff #f0ffff underline\',Token.Sidebar.Key:                            \'bg:#95eaff #000046 bold\',Token.Sidebar.Key.Description:                \'bg:#95eaff #000046\',Token.Sidebar.HelpText:                       \'bg:#f0ffff #000046\',Token.History.Line:                          \'\',Token.History.Line.Selected:                 \'bg:#0000fb  #000046\',Token.History.Line.Current:                  \'bg:#f0ffff #000046\',Token.History.Line.Selected.Current:         \'bg:#51a6ff #000046\',Token.History.ExistingInput:                  \'#51a6fb\',Token.Window.Border:                          \'#950046\',Token.Window.Title:                           \'bg:#95eaff #000046\',Token.Window.TIItleV2:                         \'bg:#9579fb #000046 bold\',Token.AcceptMessage:                          \'bg:#51ffff #004ca0\',Token.ExitConfirmation:                       \'bg:#00a6a0 #f0ffff\',}\ncyan_4={    Token.LineNumber:\'#24d4ce bg:#000073\',    Token.Prompt:                                 \'bold\',    Token.Prompt.Dots:                            \'noinherit\',    Token.In:                                     \'bold #0000fb\',    Token.In.Number:                              \'\',    Token.Out:                                    \'#00ff46\',    Token.Out.Number:                             \'#00ff46\',    Token.Separator:                              \'#95eaff\',    Token.Toolbar.Search:                         \'#7e1eff noinherit\',    Token.Toolbar.Search.Text:                    \'noinherit\',    Token.Toolbar.System:                         \'#7e1eff noinherit\',    Token.Toolbar.Arg:                            \'#7e1eff noinherit\',    Token.Toolbar.Arg.Text:                       \'noinherit\',    Token.Toolbar.Signature:                      \'bg:#954cff #000046\',    Token.Toolbar.Signature.CurrentName:          \'bg:#5100fb #f0ffff bold\',    Token.Toolbar.Signature.Operator:             \'#000046 bold\',    Token.Docstring:                              \'#51a6fb\',    Token.Toolbar.Validation:                     \'bg:#004c46 #7ed4ff\',    Token.Toolbar.Status:                         \'bg:#001e73 #7ed4ff\',    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#001e73 #001eff\',    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#001e73 #00d473\',    Token.Toolbar.Status.Title:                   \'underline\',    Token.Toolbar.Status.InputMode:               \'bg:#001e73 #7effff\',    Token.Toolbar.Status.Key:                     \'bg:#000046 #51a6fb\',    Token.Toolbar.Status.PasteModeOn:             \'bg:#00d4a0 #f0ffff\',    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#247973 #7ed4ff\',    Token.Toolbar.Status.PythonVersion:           \'bg:#001e73 #f0ffff bold\',    Token.Aborted:                                \'#51a6fb\',    Token.Sidebar:                                \'bg:#95eaff #000046\',    Token.Sidebar.Title:                          \'bg:#f079fb #f0ffff bold\',    Token.Sidebar.Label:                          \'bg:#95eaff #001e73\',    Token.Sidebar.Status:                         \'bg:#c2ffff #000046\',    Token.Sidebar.Selected.Label:                 \'bg:#001e73 #d9ffff\',    Token.Sidebar.Selected.Status:                \'bg:#004ca0 #f0ffff bold\',    Token.Sidebar.Separator:                       \'bg:#95eaff #f0ffff underline\',    Token.Sidebar.Key:                            \'bg:#95eaff #000046 bold\',    Token.Sidebar.Key.Description:                \'bg:#95eaff #000046\',    Token.Sidebar.HelpText:                       \'bg:#f0ffff #000046\',    Token.History.Line:                          \'\',    Token.History.Line.Selected:                 \'bg:#0000fb  #000046\',    Token.History.Line.Current:                  \'bg:#f0ffff #000046\',    Token.History.Line.Selected.Current:         \'bg:#51a6ff #000046\',    Token.History.ExistingInput:                  \'#51a6fb\',    Token.Window.Border:                          \'#950046\',    Token.Window.Title:                           \'bg:#95eaff #000046\',    Token.Window.TIItleV2:                         \'bg:#9579fb #000046 bold\',    Token.AcceptMessage:                          \'bg:#51ffff #004ca0\',    Token.ExitConfirmation:                       \'bg:#00a6a0 #f0ffff\',    Token.LineNumber:                             \'#24d4ce bg:#001e73\',        Token.SearchMatch:                            \'#f0ffff bg:#7e4ca0\',        Token.SearchMatch.Current:                    \'#f0ffff bg:#004cff\',        Token.SelectedText:                           \'#f0ffff bg:#7e79ce\',        Token.Toolbar.Completions:                    \'bg:#954cff #000046\',        Token.Toolbar.Completions.Arrow:              \'bg:#954cff #000046 bold\',        Token.Toolbar.Completions.Completion:         \'bg:#954cff #000046\',        Token.Toolbar.Completions.Completion.Current: \'bg:#5100fb #f0ffff\',        Token.Menu.Completions.Completion:            \'bg:#954cff #000046\',        Token.Menu.Completions.Completion.Current:    \'bg:#5100fb #f0ffff\',        Token.Menu.Completions.Meta:                  \'bg:#684cff #000046\',        Token.Menu.Completions.Meta.Current:          \'bg:#7e00ff #000046\',        Token.Menu.Completions.ProgressBar:           \'bg:#7ed4ff\',        Token.Menu.Completions.ProgressButton:        \'bg:#000046\',}\ncyan_4={\n     Token.LineNumber:                                  \'    #24d4ce        bg:#000073                     \',\n     Token.Prompt:                                      \'                                     bold         \',\n     Token.Prompt.Dots:                                 \'                                     noinherit    \',\n     Token.In:                                          \'    #0000fb                          bold         \',\n     Token.In.Number:                                   \'                                                  \',\n     Token.Out:                                         \'    #00ff46                                       \',\n     Token.Out.Number:                                  \'    #00ff46                                       \',\n     Token.Separator:                                   \'    #95eaff                                       \',\n     Token.Toolbar.Search:                              \'    #7e1eff                          noinherit    \',\n     Token.Toolbar.Search.Text:                         \'                                     noinherit    \',\n     Token.Toolbar.System:                              \'    #7e1eff                          noinherit    \',\n     Token.Toolbar.Arg:                                 \'    #7e1eff                          noinherit    \',\n     Token.Toolbar.Arg.Text:                            \'                                     noinherit    \',\n     Token.Toolbar.Signature:                           \'    #000046        bg:#954cff                     \',\n     Token.Toolbar.Signature.CurrentName:               \'    #f0ffff        bg:#5100fb        bold         \',\n     Token.Toolbar.Signature.Operator:                  \'    #000046                          bold         \',\n     Token.Docstring:                                   \'    #51a6fb                                       \',\n     Token.Toolbar.Validation:                          \'    #7ed4ff        bg:#004c46                     \',\n     Token.Toolbar.Status:                              \'    #7ed4ff        bg:#001e73                     \',\n     Token.Toolbar.Status:                              \'    #d47eff        bg:#1e0073                     \',\n     Token.Toolbar.Status.BatteryPluggedIn:             \'    #aaff55        bg:#1e0073                     \',\n     Token.Toolbar.Status.Title:                        \'                                     underline    \',\n     Token.Toolbar.Status.InputMode:                    \'    #7effff        bg:#001e73                     \',\n     Token.Toolbar.Status.Key:                          \'    #51a6fb        bg:#000046                     \',\n     Token.Toolbar.Status.PasteModeOn:                  \'    #f0ffff        bg:#00d4a0                     \',\n     Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'    #7ed4ff        bg:#247973                     \',\n     Token.Toolbar.Status.PythonVersion:                \'    #f0ffff        bg:#001e73        bold         \',\n     Token.Aborted:                                     \'    #51a6fb                                       \',\n     Token.Sidebar:                                     \'    #000046        bg:#95eaff                     \',\n     Token.Sidebar.Title:                               \'    #f0ffff        bg:#f079fb        bold         \',\n     Token.Sidebar.Label:                               \'    #001e73        bg:#95eaff                     \',\n     Token.Sidebar.Status:                              \'    #000046        bg:#c2ffff                     \',\n     Token.Sidebar.Selected.Label:                      \'    #d9ffff        bg:#001e73                     \',\n     Token.Sidebar.Selected.Status:                     \'    #f0ffff        bg:#004ca0        bold         \',\n     Token.Sidebar.Separator:                           \'    #f0ffff        bg:#95eaff        underline    \',\n     Token.Sidebar.Key:                                 \'    #000046        bg:#95eaff        bold         \',\n     Token.Sidebar.Key.Description:                     \'    #000046        bg:#95eaff                     \',\n     Token.Sidebar.HelpText:                            \'    #000046        bg:#a0f0ff                     \',\n     Token.History.Line:                                \'                                                  \',\n     Token.History.Line.Selected:                       \'    #000046        bg:#0000fb                     \',\n     Token.History.Line.Current:                        \'    #000046        bg:#f0ffff                     \',\n     Token.History.Line.Selected.Current:               \'    #000046        bg:#51a6ff                     \',\n     Token.History.ExistingInput:                       \'    #51a6fb                                       \',\n     Token.Window.Border:                               \'    #950046                                       \',\n     Token.Window.Title:                                \'    #000046        bg:#95eaff                     \',\n     Token.Window.TIItleV2:                             \'    #000046        bg:#9579fb        bold         \',\n     Token.AcceptMessage:                               \'    #004ca0        bg:#51ffff                     \',\n     Token.ExitConfirmation:                            \'    #f0ffff        bg:#00a6a0                     \',\n     Token.LineNumber:                                  \'    #24d4ce        bg:#001e73                     \',\n     Token.SearchMatch:                                 \'    #f0ffff        bg:#7e4ca0                     \',\n     Token.SearchMatch.Current:                         \'    #f0ffff        bg:#004cff                     \',\n     Token.SelectedText:                                \'    #f0ffff        bg:#7e79ce                     \',\n     Token.Toolbar.Completions:                         \'    #000046        bg:#954cff                     \',\n     Token.Toolbar.Completions.Arrow:                   \'    #000046        bg:#954cff        bold         \',\n     Token.Toolbar.Completions.Completion:              \'    #000046        bg:#954cff                     \',\n     Token.Toolbar.Completions.Completion.Current:      \'    #f0ffff        bg:#5100fb                     \',\n     Token.Menu.Completions.Completion:                 \'    #000046        bg:#954cff                     \',\n     Token.Menu.Completions.Completion.Current:         \'    #f0ffff        bg:#5100fb                     \',\n     Token.Menu.Completions.Meta:                       \'    #000046        bg:#684cff                     \',\n     Token.Menu.Completions.Meta.Current:               \'    #000046        bg:#7e00ff                     \',\n     Token.Menu.Completions.ProgressBar:                \'                   bg:#7ed4ff                     \',\n     Token.Menu.Completions.ProgressButton:             \'                   bg:#000046                     \',\n}\n\n\n\ncyan_4__02={\n     Token.LineNumber:                                  \'    #ce24d4        bg:#730000                     \',\n     Token.Prompt:                                      \'                                     bold         \',\n     Token.Prompt.Dots:                                 \'                                     noinherit    \',\n     Token.In:                                          \'    #fb0000                          bold         \',\n     Token.In.Number:                                   \'                                                  \',\n     Token.Out:                                         \'    #4600ff                                       \',\n     Token.Out.Number:                                  \'    #4600ff                                       \',\n     Token.Separator:                                   \'    #ff95ea                                       \',\n     Token.Toolbar.Search:                              \'    #ff7e1e                          noinherit    \',\n     Token.Toolbar.Search.Text:                         \'                                     noinherit    \',\n     Token.Toolbar.System:                              \'    #ff7e1e                          noinherit    \',\n     Token.Toolbar.Arg:                                 \'    #ff7e1e                          noinherit    \',\n     Token.Toolbar.Arg.Text:                            \'                                     noinherit    \',\n     Token.Toolbar.Signature:                           \'    #460000        bg:#ff954c                     \',\n     Token.Toolbar.Signature.CurrentName:               \'    #fff0ff        bg:#fb5100        bold         \',\n     Token.Toolbar.Signature.Operator:                  \'    #460000                          bold         \',\n     Token.Docstring:                                   \'    #fb51a6                                       \',\n     Token.Toolbar.Validation:                          \'    #ff7ed4        bg:#46004c                     \',\n     Token.Toolbar.Status:                              \'    #ff7ed4        bg:#73001e                     \',\n     Token.Toolbar.Status:                              \'    #d47eff        bg:#1e0073                     \',\n     Token.Toolbar.Status.BatteryPluggedIn:             \'    #aaff55        bg:#1e0073                     \',\n     Token.Toolbar.Status.Title:                        \'                                     underline    \',\n     Token.Toolbar.Status.InputMode:                    \'    #ff7eff        bg:#73001e                     \',\n     Token.Toolbar.Status.Key:                          \'    #fb51a6        bg:#460000                     \',\n     Token.Toolbar.Status.PasteModeOn:                  \'    #fff0ff        bg:#a000d4                     \',\n     Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'    #ff7ed4        bg:#732479                     \',\n     Token.Toolbar.Status.PythonVersion:                \'    #fff0ff        bg:#73001e        bold         \',\n     Token.Aborted:                                     \'    #fb51a6                                       \',\n     Token.Sidebar:                                     \'    #460000        bg:#ff95ea                     \',\n     Token.Sidebar.Title:                               \'    #000000        bg:#fbf079        bold         \',\n     Token.Sidebar.Label:                               \'    #73001e        bg:#ff95ea                     \',\n     Token.Sidebar.Status:                              \'    #460000        bg:#ffc2ff                     \',\n     Token.Sidebar.Selected.Label:                      \'    #ffd9ff        bg:#73001e                     \',\n     Token.Sidebar.Selected.Status:                     \'    #ffffff        bg:#a0004c        bold         \',\n     Token.Sidebar.Separator:                           \'    #000000        bg:#ff95ea        underline    \',\n     Token.Sidebar.Key:                                 \'    #460000        bg:#ff95ea        bold         \',\n     Token.Sidebar.Key.Description:                     \'    #460000        bg:#ff95ea                     \',\n     Token.Sidebar.HelpText:                            \'    #460000        bg:#ffa0f0                     \',\n     Token.History.Line:                                \'                                                  \',\n     Token.History.Line.Selected:                       \'    #460000        bg:#fb0000                     \',\n     Token.History.Line.Current:                        \'    #460000        bg:#fff0ff                     \',\n     Token.History.Line.Selected.Current:               \'    #460000        bg:#ff51a6                     \',\n     Token.History.ExistingInput:                       \'    #fb51a6                                       \',\n     Token.Window.Border:                               \'    #469500                                       \',\n     Token.Window.Title:                                \'    #460000        bg:#ff95ea                     \',\n     Token.Window.TIItleV2:                             \'    #460000        bg:#fb9579        bold         \',\n     Token.AcceptMessage:                               \'    #a0004c        bg:#ff51ff                     \',\n     Token.ExitConfirmation:                            \'    #fff0ff        bg:#a000a6                     \',\n     Token.LineNumber:                                  \'    #ce24d4        bg:#73001e                     \',\n     Token.SearchMatch:                                 \'    #fff0ff        bg:#a07e4c                     \',\n     Token.SearchMatch.Current:                         \'    #fff0ff        bg:#ff004c                     \',\n     Token.SelectedText:                                \'    #fff0ff        bg:#ce7e79                     \',\n     Token.Toolbar.Completions:                         \'    #460000        bg:#ff954c                     \',\n     Token.Toolbar.Completions.Arrow:                   \'    #460000        bg:#ff954c        bold         \',\n     Token.Toolbar.Completions.Completion:              \'    #460000        bg:#ff954c                     \',\n     Token.Toolbar.Completions.Completion.Current:      \'    #fff0ff        bg:#fb5100                     \',\n     Token.Menu.Completions.Completion:                 \'    #460000        bg:#ff954c                     \',\n     Token.Menu.Completions.Completion.Current:         \'    #fff0ff        bg:#fb5100                     \',\n     Token.Menu.Completions.Meta:                       \'    #460000        bg:#ff684c                     \',\n     Token.Menu.Completions.Meta.Current:               \'    #460000        bg:#ff7e00                     \',\n     Token.Menu.Completions.ProgressBar:                \'                   bg:#ff7ed4                     \',\n     Token.Menu.Completions.ProgressButton:             \'                   bg:#460000                     \',\n}\n\n\n\n\n\n\ncyan_4__02__02={\n     Token.LineNumber:                                  \'    #d4ce24        bg:#007300                     \',\n     Token.Prompt:                                      \'                                     bold         \',\n     Token.Prompt.Dots:                                 \'                                     noinherit    \',\n     Token.In:                                          \'    #00fb00                          bold         \',\n     Token.In.Number:                                   \'                                                  \',\n     Token.Out:                                         \'    #ff4600                                       \',\n     Token.Out.Number:                                  \'    #ff4600                                       \',\n     Token.Separator:                                   \'    #eaff95                                       \',\n     Token.Toolbar.Search:                              \'    #1eff7e                          noinherit    \',\n     Token.Toolbar.Search.Text:                         \'                                     noinherit    \',\n     Token.Toolbar.System:                              \'    #1eff7e                          noinherit    \',\n     Token.Toolbar.Arg:                                 \'    #1eff7e                          noinherit    \',\n     Token.Toolbar.Arg.Text:                            \'                                     noinherit    \',\n     Token.Toolbar.Signature:                           \'    #004600        bg:#4cff95                     \',\n     Token.Toolbar.Signature.CurrentName:               \'    #fffff0        bg:#00fb51        bold         \',\n     Token.Toolbar.Signature.Operator:                  \'    #004600                          bold         \',\n     Token.Docstring:                                   \'    #a6fb51                                       \',\n     Token.Toolbar.Validation:                          \'    #d4ff7e        bg:#4c4600                     \',\n     Token.Toolbar.Status:                              \'    #d4ff7e        bg:#1e7300                     \',\n     Token.Toolbar.Status:                              \'    #d47eff        bg:#1e0073                     \',\n     Token.Toolbar.Status.BatteryPluggedIn:             \'    #aaff55        bg:#1e0073                     \',\n     Token.Toolbar.Status.Title:                        \'                                     underline    \',\n     Token.Toolbar.Status.InputMode:                    \'    #ffff7e        bg:#1e7300                     \',\n     Token.Toolbar.Status.Key:                          \'    #a6fb51        bg:#004600                     \',\n     Token.Toolbar.Status.PasteModeOn:                  \'    #fffff0        bg:#d4a000                     \',\n     Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'    #d4ff7e        bg:#797324                     \',\n     Token.Toolbar.Status.PythonVersion:                \'    #fffff0        bg:#1e7300        bold         \',\n     Token.Aborted:                                     \'    #a6fb51                                       \',\n     Token.Sidebar:                                     \'    #004600        bg:#eaff95                     \',\n     Token.Sidebar.Title:                               \'    #000000        bg:#79fbf0        bold         \',\n     Token.Sidebar.Label:                               \'    #1e7300        bg:#eaff95                     \',\n     Token.Sidebar.Status:                              \'    #004600        bg:#ffffc2                     \',\n     Token.Sidebar.Selected.Label:                      \'    #ffffd9        bg:#1e7300                     \',\n     Token.Sidebar.Selected.Status:                     \'    #000000        bg:#4ca000        bold         \',\n     Token.Sidebar.Separator:                           \'    #000000        bg:#eaff95        underline    \',\n     Token.Sidebar.Key:                                 \'    #004600        bg:#eaff95        bold         \',\n     Token.Sidebar.Key.Description:                     \'    #004600        bg:#eaff95                     \',\n     Token.Sidebar.HelpText:                            \'    #004600        bg:#f0ffa0                     \',\n     Token.History.Line:                                \'                                                  \',\n     Token.History.Line.Selected:                       \'    #004600        bg:#00fb00                     \',\n     Token.History.Line.Current:                        \'    #004600        bg:#fffff0                     \',\n     Token.History.Line.Selected.Current:               \'    #004600        bg:#a6ff51                     \',\n     Token.History.ExistingInput:                       \'    #a6fb51                                       \',\n     Token.Window.Border:                               \'    #004695                                       \',\n     Token.Window.Title:                                \'    #004600        bg:#eaff95                     \',\n     Token.Window.TIItleV2:                             \'    #004600        bg:#79fb95        bold         \',\n     Token.AcceptMessage:                               \'    #4ca000        bg:#ffff51                     \',\n     Token.ExitConfirmation:                            \'    #fffff0        bg:#a6a000                     \',\n     Token.LineNumber:                                  \'    #d4ce24        bg:#1e7300                     \',\n     Token.SearchMatch:                                 \'    #fffff0        bg:#4ca07e                     \',\n     Token.SearchMatch.Current:                         \'    #fffff0        bg:#4cff00                     \',\n     Token.SelectedText:                                \'    #fffff0        bg:#79ce7e                     \',\n     Token.Toolbar.Completions:                         \'    #004600        bg:#4cff95                     \',\n     Token.Toolbar.Completions.Arrow:                   \'    #004600        bg:#4cff95        bold         \',\n     Token.Toolbar.Completions.Completion:              \'    #004600        bg:#4cff95                     \',\n     Token.Toolbar.Completions.Completion.Current:      \'    #000000        bg:#00fb51                     \',\n     Token.Menu.Completions.Completion:                 \'    #004600        bg:#4cff95                     \',\n     Token.Menu.Completions.Completion.Current:         \'    #4cff95        bg:#009966                     \',\n     Token.Menu.Completions.Meta:                       \'    #004600        bg:#4cff68                     \',\n     Token.Menu.Completions.Meta.Current:               \'    #004600        bg:#00ff7e                     \',\n     Token.Menu.Completions.ProgressBar:                \'                   bg:#d4ff7e                     \',\n     Token.Menu.Completions.ProgressButton:             \'                   bg:#004600                     \',\n}\n\n\n\n\ncyan_4__02__02__12={\n     Token.LineNumber:                                  \'    #d424ce        bg:#000073                     \',\n     Token.Prompt:                                      \'                                     bold         \',\n     Token.Prompt.Dots:                                 \'                                     noinherit    \',\n     Token.In:                                          \'    #0000fb                          bold         \',\n     Token.In.Number:                                   \'                                                  \',\n     Token.Out:                                         \'    #ff0046                                       \',\n     Token.Out.Number:                                  \'    #ff0046                                       \',\n     Token.Separator:                                   \'    #ea95ff                                       \',\n     Token.Toolbar.Search:                              \'    #1e7eff                          noinherit    \',\n     Token.Toolbar.Search.Text:                         \'                                     noinherit    \',\n     Token.Toolbar.System:                              \'    #1e7eff                          noinherit    \',\n     Token.Toolbar.Arg:                                 \'    #1e7eff                          noinherit    \',\n     Token.Toolbar.Arg.Text:                            \'                                     noinherit    \',\n     Token.Toolbar.Signature:                           \'    #000046        bg:#4c95ff                     \',\n     Token.Toolbar.Signature.CurrentName:               \'    #fff0ff        bg:#0051fb        bold         \',\n     Token.Toolbar.Signature.Operator:                  \'    #000046                          bold         \',\n     Token.Docstring:                                   \'    #a651fb                                       \',\n     Token.Toolbar.Validation:                          \'    #d47eff        bg:#4c0046                     \',\n     Token.Toolbar.Status:                              \'    #d47eff        bg:#1e0073                     \',\n     Token.Toolbar.Status.BatteryPluggedIn:             \'    #aaff55        bg:#1e0073                     \',\n     Token.Toolbar.Status.BatteryNotPluggedIn:          \'    #ff55aa        bg:#1e0073                     \',\n     Token.Toolbar.Status.Title:                        \'                                     underline    \',\n     Token.Toolbar.Status.InputMode:                    \'    #ff7eff        bg:#1e0073                     \',\n     Token.Toolbar.Status.Key:                          \'    #a651fb        bg:#000046                     \',\n     Token.Toolbar.Status.PasteModeOn:                  \'    #fff0ff        bg:#d400a0                     \',\n     Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'    #d47eff        bg:#792473                     \',\n     Token.Toolbar.Status.PythonVersion:                \'    #fff0ff        bg:#1e0073        bold         \',\n     Token.Aborted:                                     \'    #a651fb                                       \',\n     Token.Sidebar:                                     \'    #000046        bg:#ea95ff                     \',\n     Token.Sidebar.Title:                               \'    #000000        bg:#79f0fb        bold         \',\n     Token.Sidebar.Label:                               \'    #1e0073        bg:#ea95ff                     \',\n     Token.Sidebar.Status:                              \'    #000046        bg:#ffc2ff                     \',\n     Token.Sidebar.Selected.Label:                      \'    #ffd9ff        bg:#1e0073                     \',\n     Token.Sidebar.Selected.Status:                     \'    #FFFFFF        bg:#4c00a0        bold         \',\n     Token.Sidebar.Separator:                           \'    #000000        bg:#ea95ff        underline    \',\n     Token.Sidebar.Key:                                 \'    #000046        bg:#ea95ff        bold         \',\n     Token.Sidebar.Key.Description:                     \'    #000046        bg:#ea95ff                     \',\n     Token.Sidebar.HelpText:                            \'    #000046        bg:#f0a0ff                     \',\n     Token.History.Line:                                \'                                                  \',\n     Token.History.Line.Selected:                       \'    #000046        bg:#0000fb                     \',\n     Token.History.Line.Current:                        \'    #000046        bg:#fff0ff                     \',\n     Token.History.Line.Selected.Current:               \'    #000046        bg:#a651ff                     \',\n     Token.History.ExistingInput:                       \'    #a651fb                                       \',\n     Token.Window.Border:                               \'    #009546                                       \',\n     Token.Window.Title:                                \'    #000046        bg:#ea95ff                     \',\n     Token.Window.TIItleV2:                             \'    #000046        bg:#7995fb        bold         \',\n     Token.AcceptMessage:                               \'    #4c00a0        bg:#ff51ff                     \',\n     Token.ExitConfirmation:                            \'    #fff0ff        bg:#a600a0                     \',\n     Token.LineNumber:                                  \'    #d424ce        bg:#1e0073                     \',\n     Token.SearchMatch:                                 \'    #fff0ff        bg:#4c7ea0                     \',\n     Token.SearchMatch.Current:                         \'    #fff0ff        bg:#4c00ff                     \',\n     Token.SelectedText:                                \'    #fff0ff        bg:#797ece                     \',\n     Token.Toolbar.Completions:                         \'    #000046        bg:#4c95ff                     \',\n     Token.Toolbar.Completions.Arrow:                   \'    #000046        bg:#4c95ff        bold         \',\n     Token.Toolbar.Completions.Completion:              \'    #000046        bg:#4c95ff                     \',\n     Token.Toolbar.Completions.Completion.Current:      \'    #fff0ff        bg:#0051fb                     \',\n     Token.Menu.Completions.Completion:                 \'    #000046        bg:#4c95ff                     \',\n     Token.Menu.Completions.Completion.Current:         \'    #fff0ff        bg:#0051fb                     \',\n     Token.Menu.Completions.Meta:                       \'    #000046        bg:#4c68ff                     \',\n     Token.Menu.Completions.Meta.Current:               \'    #000046        bg:#007eff                     \',\n     Token.Menu.Completions.ProgressBar:                \'                   bg:#d47eff                     \',\n     Token.Menu.Completions.ProgressButton:             \'                   bg:#000046                     \',\n}\n\n\n\n# plain={\n#      Token.LineNumber:                                  \'\',\n#      Token.Prompt:                                      \'\',\n#      Token.Prompt.Dots:                                 \'\',\n#      Token.In:                                          \'\',\n#      Token.In.Number:                                   \'\',\n#      Token.Out:                                         \'\',\n#      Token.Out.Number:                                  \'\',\n#      Token.Separator:                                   \'\',\n#      Token.Toolbar.Search:                              \'\',\n#      Token.Toolbar.Search.Text:                         \'\',\n#      Token.Toolbar.System:                              \'\',\n#      Token.Toolbar.Arg:                                 \'\',\n#      Token.Toolbar.Arg.Text:                            \'\',\n#      Token.Toolbar.Signature:                           \'\',\n#      Token.Toolbar.Signature.CurrentName:               \'\',\n#      Token.Toolbar.Signature.Operator:                  \'\',\n#      Token.Docstring:                                   \'\',\n#      Token.Toolbar.Validation:                          \'\',\n#      Token.Toolbar.Status:                              \'\',\n#      Token.Toolbar.Status.BatteryPluggedIn:             \'\',\n#      Token.Toolbar.Status.BatteryNotPluggedIn:          \'\',\n#      Token.Toolbar.Status.Title:                        \'\',\n#      Token.Toolbar.Status.InputMode:                    \'\',\n#      Token.Toolbar.Status.Key:                          \'\',\n#      Token.Toolbar.Status.PasteModeOn:                  \'\',\n#      Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'\',\n#      Token.Toolbar.Status.PythonVersion:                \'\',\n#      Token.Aborted:                                     \'\',\n#      Token.Sidebar:                                     \'\',\n#      Token.Sidebar.Title:                               \'\',\n#      Token.Sidebar.Label:                               \'\',\n#      Token.Sidebar.Status:                              \'\',\n#      Token.Sidebar.Selected.Label:                      \'\',\n#      Token.Sidebar.Selected.Status:                     \'\',\n#      Token.Sidebar.Separator:                           \'\',\n#      Token.Sidebar.Key:                                 \'\',\n#      Token.Sidebar.Key.Description:                     \'\',\n#      Token.Sidebar.HelpText:                            \'\',\n#      Token.History.Line:                                \'\',\n#      Token.History.Line.Selected:                       \'\',\n#      Token.History.Line.Current:                        \'\',\n#      Token.History.Line.Selected.Current:               \'\',\n#      Token.History.ExistingInput:                       \'\',\n#      Token.Window.Border:                               \'\',\n#      Token.Window.Title:                                \'\',\n#      Token.Window.TIItleV2:                             \'\',\n#      Token.AcceptMessage:                               \'\',\n#      Token.ExitConfirmation:                            \'\',\n#      Token.LineNumber:                                  \'\',\n#      Token.SearchMatch:                                 \'\',\n#      Token.SearchMatch.Current:                         \'\',\n#      Token.SelectedText:                                \'\',\n#      Token.Toolbar.Completions:                         \'\',\n#      Token.Toolbar.Completions.Arrow:                   \'\',\n#      Token.Toolbar.Completions.Completion:              \'\',\n#      Token.Toolbar.Completions.Completion.Current:      \'\',\n#      Token.Menu.Completions.Completion:                 \'\',\n#      Token.Menu.Completions.Completion.Current:         \'\',\n#      Token.Menu.Completions.Meta:                       \'\',\n#      Token.Menu.Completions.Meta.Current:               \'\',\n#      Token.Menu.Completions.ProgressBar:                \'\',\n#      Token.Menu.Completions.ProgressButton:             \'\',\n# }\n\n\n\n\ntemp = {\n    Token.LineNumber:\'#24d4ce bg:#000073\',\n    # Classic prompt.\n    Token.Prompt:                                 \'bold\',\n    Token.Prompt.Dots:                            \'noinherit\',\n\n    # (IPython <5.0) Prompt: "In [1]:"\n    Token.In:                                     \'bold #0000fb\',\n    Token.In.Number:                              \'\',\n\n    # Return value.\n    Token.Out:                                    \'#00ff46\',\n    Token.Out.Number:                             \'#00ff46\',\n\n    # Separator between windows. (Used above docstring.)\n    Token.Separator:                              \'#95eaff\',\n\n    # Search toolbar.\n    Token.Toolbar.Search:                         \'#7e1eff noinherit\',\n    Token.Toolbar.Search.Text:                    \'noinherit\',\n\n    # System toolbar\n    Token.Toolbar.System:                         \'#7e1eff noinherit\',\n\n    # "arg" toolbar.\n    Token.Toolbar.Arg:                            \'#7e1eff noinherit\',\n    Token.Toolbar.Arg.Text:                       \'noinherit\',\n\n    # Signature toolbar.\n    Token.Toolbar.Signature:                      \'bg:#954cff #000046\',\n    Token.Toolbar.Signature.CurrentName:          \'bg:#5100fb #f0ffff bold\',\n    Token.Toolbar.Signature.Operator:             \'#000046 bold\',\n\n    Token.Docstring:                              \'#51a6fb\',\n\n    # Validation toolbar.\n    Token.Toolbar.Validation:                     \'bg:#004c46 #7ed4ff\',\n\n    # Status toolbar.\n    Token.Toolbar.Status:                         \'bg:#001e73 #7ed4ff\',\n    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#001e73 #001eff\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#001e73 #00d473\',\n    Token.Toolbar.Status.Title:                   \'underline\',\n    Token.Toolbar.Status.InputMode:               \'bg:#001e73 #7effff\',\n    Token.Toolbar.Status.Key:                     \'bg:#000046 #51a6fb\',\n    Token.Toolbar.Status.PasteModeOn:             \'bg:#00d4a0 #f0ffff\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#247973 #7ed4ff\',\n    Token.Toolbar.Status.PythonVersion:           \'bg:#001e73 #f0ffff bold\',\n\n    # When Control-C has been pressed. Grayed.\n    Token.Aborted:                                \'#51a6fb\',\n\n    # The options sidebar.\n    Token.Sidebar:                                \'bg:#95eaff #000046\',\n    Token.Sidebar.Title:                          \'bg:#f079fb #f0ffff bold\',\n    Token.Sidebar.Label:                          \'bg:#95eaff #001e73\',\n    Token.Sidebar.Status:                         \'bg:#c2ffff #000046\',\n    Token.Sidebar.Selected.Label:                 \'bg:#001e73 #d9ffff\',\n    Token.Sidebar.Selected.Status:                \'bg:#004ca0 #f0ffff bold\',\n\n    Token.Sidebar.Separator:                       \'bg:#95eaff #f0ffff underline\',\n    Token.Sidebar.Key:                            \'bg:#95eaff #000046 bold\',\n    Token.Sidebar.Key.Description:                \'bg:#95eaff #000046\',\n    Token.Sidebar.HelpText:                       \'bg:#f0ffff #000046\',\n\n    # Styling for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#0000fb  #000046\',\n    Token.History.Line.Current:                  \'bg:#f0ffff #000046\',\n    Token.History.Line.Selected.Current:         \'bg:#51a6ff #000046\',\n    Token.History.ExistingInput:                  \'#51a6fb\',\n\n    # Help Window.\n    Token.Window.Border:                          \'#950046\',\n    Token.Window.Title:                           \'bg:#95eaff #000046\',\n    Token.Window.TIItleV2:                         \'bg:#9579fb #000046 bold\',\n\n    # Meta-enter message.\n    Token.AcceptMessage:                          \'bg:#51ffff #004ca0\',\n\n    # Exit confirmation.\n    Token.ExitConfirmation:                       \'bg:#00a6a0 #f0ffff\',\n}\ntemp.update({\n    Token.Aborted:                                \'#3a90e4\',\n    Token.Sidebar:                                \'bg:#004ca0 #f0ffff\',\n    Token.Sidebar.Title:                          \'bg:#00bde4 #000046 bold\',\n    Token.Sidebar.Label:                          \'bg:#004ca0 #c2ffff\',\n    Token.Sidebar.Status:                         \'bg:#001e73 #d9ffff\',\n    Token.Sidebar.Selected.Label:                 \'bg:#c2ffff #00085c\',\n    Token.Sidebar.Selected.Status:                \'bg:#95eaff #000046 bold\',\n    Token.Sidebar.Separator:                       \'bg:#004ca0 #000046 underline\',\n    Token.Sidebar.Key:                            \'bg:#004c73 #f0ffff bold\',\n    Token.Sidebar.Key.Description:                \'bg:#004ca0 #f0ffff\',\n    Token.Sidebar.HelpText:                       \'bg:#00085c #d9ffff\',\n    # Styling for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#f0ffe4  #f0ffff\',\n    Token.History.Line.Current:                  \'bg:#000046 #f0ffff\',\n    Token.History.Line.Selected.Current:         \'bg:#3a9046 #f0ffff\',\n    Token.History.ExistingInput:                  \'#3a90e4\',\n    # Help Window.\n    Token.Window.Border:                          \'#00ffff\',\n    Token.Window.Title:                           \'bg:#004ca0 #f0ffff\',\n    Token.Window.TIItleV2:                         \'bg:#00bde4 #f0ffff bold\',\n    # Meta-enter message.\n    Token.AcceptMessage:                          \'bg:#3a0046 #95eaff\',\n    # Exit confirmation.\n    Token.ExitConfirmation:                       \'bg:#9590ff #000046\',\n    # Line numbers.\n    Token.LineNumber:                             \'#24d4ce bg:#001e73\',\n    # Highlighting of search matches in document.\n    Token.SearchMatch:                            \'#f0ffff bg:#7e4ca0\',\n    Token.SearchMatch.Current:                    \'#f0ffff bg:#004cff\',\n    # Highlighting of select text in document.\n    Token.SelectedText:                           \'#f0ffff bg:#7e79ce\',\n    Token.Toolbar.Completions:            \'bg:#000046 #01f0ff\',\n    Token.Toolbar.Completions.Arrow:              \'bg:#000046 #01f0ff bold\',\n    Token.Toolbar.Completions.Completion:         \'bg:#000046 #01f0ff\',\n    Token.Toolbar.Completions.Completion.Current: \'bg:#01f0ff #000046\',\n    # Completer menu.\n    Token.Menu.Completions.Completion:            \'bg:#000046 #01ffff\',\n    Token.Menu.Completions.Completion.Current:    \'bg:#01aaf0 #000046\',\n    Token.Menu.Completions.Meta:                  \'bg:#000046 #01ffd0\',\n    Token.Menu.Completions.Meta.Current:          \'bg:#000046 #00ffee\',\n    Token.Menu.Completions.ProgressBar:           \'bg:#b6ffee           \',\n    Token.Menu.Completions.ProgressButton:        \'bg:#004e46           \',\n})\nnewstyle=temp\n\n\n\n\n\ntemp = {\n    Token.LineNumber:\'#d3cd23 bg:#007200\',\n    # Classic prompt.\n    Token.Prompt:                                 \'bold\',\n    Token.Prompt.Dots:                            \'noinherit\',\n\n    # (IPython <5.0) Prompt: "In [1]:"\n    Token.In:                                     \'bold #00fa00\',\n    Token.In.Number:                              \'\',\n\n    # Return value.\n    Token.Out:                                    \'#fe4500\',\n    Token.Out.Number:                             \'#fe4500\',\n\n    # Separator between windows. (Used above docstring.)\n    Token.Separator:                              \'#e9fe94\',\n\n    # Search toolbar.\n    Token.Toolbar.Search:                         \'#1dfe7d noinherit\',\n    Token.Toolbar.Search.Text:                    \'noinherit\',\n\n    # System toolbar\n    Token.Toolbar.System:                         \'#1dfe7d noinherit\',\n\n    # "arg" toolbar.\n    Token.Toolbar.Arg:                            \'#1dfe7d noinherit\',\n    Token.Toolbar.Arg.Text:                       \'noinherit\',\n\n    # Signature toolbar.\n    Token.Toolbar.Signature:                      \'bg:#4bfe94 #004500\',\n    Token.Toolbar.Signature.CurrentName:          \'bg:#00fa50 #fefeef bold\',\n    Token.Toolbar.Signature.Operator:             \'#004500 bold\',\n\n    Token.Docstring:                              \'#a5fa50\',\n\n    # Validation toolbar.\n    Token.Toolbar.Validation:                     \'bg:#4b4500 #d3fe7d\',\n\n    # Status toolbar.\n    Token.Toolbar.Status:                         \'bg:#1d7200 #d3fe7d\',\n    Token.Toolbar.Status.BatteryPluggedIn:        \'bg:#1d7200 #1dfe00\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:     \'bg:#1d7200 #d37200\',\n    Token.Toolbar.Status.Title:                   \'underline\',\n    Token.Toolbar.Status.InputMode:               \'bg:#1d7200 #fefe7d\',\n    Token.Toolbar.Status.Key:                     \'bg:#004500 #a5fa50\',\n    Token.Toolbar.Status.PasteModeOn:             \'bg:#d39f00 #fefeef\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:\'bg:#787223 #d3fe7d\',\n    Token.Toolbar.Status.PythonVersion:           \'bg:#1d7200 #fefeef bold\',\n\n    # When Control-C has been pressed. Grayed.\n    Token.Aborted:                                \'#a5fa50\',\n\n    # The options sidebar.\n    Token.Sidebar:                                \'bg:#e9fe94 #004500\',\n    Token.Sidebar.Title:                          \'bg:#78faef #fefeef bold\',\n    Token.Sidebar.Label:                          \'bg:#e9fe94 #1d7200\',\n    Token.Sidebar.Status:                         \'bg:#fefec1 #004500\',\n    Token.Sidebar.Selected.Label:                 \'bg:#1d7200 #fefed8\',\n    Token.Sidebar.Selected.Status:                \'bg:#4b9f00 #fefeef bold\',\n\n    Token.Sidebar.Separator:                       \'bg:#e9fe94 #fefeef underline\',\n    Token.Sidebar.Key:                            \'bg:#e9fe94 #004500 bold\',\n    Token.Sidebar.Key.Description:                \'bg:#e9fe94 #004500\',\n    Token.Sidebar.HelpText:                       \'bg:#fefeef #004500\',\n\n    # Styling for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#00fa00  #004500\',\n    Token.History.Line.Current:                  \'bg:#fefeef #004500\',\n    Token.History.Line.Selected.Current:         \'bg:#a5fe50 #004500\',\n    Token.History.ExistingInput:                  \'#a5fa50\',\n\n    # Help Window.\n    Token.Window.Border:                          \'#004594\',\n    Token.Window.Title:                           \'bg:#e9fe94 #004500\',\n    Token.Window.TIItleV2:                         \'bg:#78fa94 #004500 bold\',\n\n    # Meta-enter message.\n    Token.AcceptMessage:                          \'bg:#fefe50 #4b9f00\',\n\n    # Exit confirmation.\n    Token.ExitConfirmation:                       \'bg:#a59f00 #fefeef\',\n}\ntemp.update({\n    Token.Aborted:                                \'#8fe339\',\n    Token.Sidebar:                                \'bg:#4b9f00 #fefeef\',\n    Token.Sidebar.Title:                          \'bg:#bce300 #004500 bold\',\n    Token.Sidebar.Label:                          \'bg:#4b9f00 #fefec1\',\n    Token.Sidebar.Status:                         \'bg:#1d7200 #fefed8\',\n    Token.Sidebar.Selected.Label:                 \'bg:#fefec1 #075b00\',\n    Token.Sidebar.Selected.Status:                \'bg:#e9fe94 #004500 bold\',\n    Token.Sidebar.Separator:                       \'bg:#4b9f00 #004500 underline\',\n    Token.Sidebar.Key:                            \'bg:#4b7200 #fefeef bold\',\n    Token.Sidebar.Key.Description:                \'bg:#4b9f00 #fefeef\',\n    Token.Sidebar.HelpText:                       \'bg:#075b00 #fefed8\',\n    # Styling for the history layout.\n    Token.History.Line:                          \'\',\n    Token.History.Line.Selected:                 \'bg:#fee3ef  #fefeef\',\n    Token.History.Line.Current:                  \'bg:#004500 #fefeef\',\n    Token.History.Line.Selected.Current:         \'bg:#8f4539 #fefeef\',\n    Token.History.ExistingInput:                  \'#8fe339\',\n    # Help Window.\n    Token.Window.Border:                          \'#fefe00\',\n    Token.Window.Title:                           \'bg:#4b9f00 #fefeef\',\n    Token.Window.TIItleV2:                         \'bg:#bce300 #fefeef bold\',\n    # Meta-enter message.\n    Token.AcceptMessage:                          \'bg:#004539 #e9fe94\',\n    # Exit confirmation.\n    Token.ExitConfirmation:                       \'bg:#8ffe94 #004500\',\n    # Line numbers.\n    Token.LineNumber:                             \'#d3cd23 bg:#1d7200\',\n    # Highlighting of search matches in document.\n    Token.SearchMatch:                            \'#fefeef bg:#4b9f7d\',\n    Token.SearchMatch.Current:                    \'#fefeef bg:#4bfe00\',\n    # Highlighting of select text in document.\n    Token.SelectedText:                           \'#fefeef bg:#78cd7d\',\n    Token.Toolbar.Completions:                    \'bg:#004500 #effe00\',\n    Token.Toolbar.Completions.Arrow:              \'bg:#004500 #effe00 bold\',\n    Token.Toolbar.Completions.Completion:         \'bg:#004500 #effe00\',\n    Token.Toolbar.Completions.Completion.Current: \'bg:#fefeef #7db100\',\n    # Completer menu.\n    Token.Menu.Completions.Completion:            \'bg:#004500 #fefe00\',\n    Token.Menu.Completions.Completion.Current:    \'bg:#fefe00 #004500\',\n    Token.Menu.Completions.Meta:                  \'bg:#004500 #fecf00\',\n    Token.Menu.Completions.Meta.Current:          \'bg:#004500 #feed00\',\n    Token.Menu.Completions.ProgressBar:           \'bg:#feedb5           \',\n    Token.Menu.Completions.ProgressButton:        \'bg:#4d4500           \',\n})\ndejavu=temp\n\n\n\n\n\ntemp = {\n    Token.LineNumber:\'bg:#007200 #d3cd23\',\n    Token.Prompt:                                         \'                           bold\',\n    Token.Prompt.Dots:                                    \'                   noinherit\',\n    Token.In:                                             \'           #0000fa bold\',\n    Token.In.Number:                                      \'                        \',\n    Token.Out:                                            \'           #fe0045\',\n    Token.Out.Number:                                     \'           #fe0045\',\n    Token.Separator:                                      \'           #e994fe\',\n    Token.Toolbar.Search:                                 \'           #1d7dfe noinherit\',\n    Token.Toolbar.Search.Text:                            \'                   noinherit\',\n    Token.Toolbar.System:                                 \'           #1d7dfe noinherit\',\n    Token.Toolbar.Arg:                                    \'           #1d7dfe noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                                 noinherit\',\n    Token.Toolbar.Signature:                              \'bg:#4b94fe #000045\',\n    Token.Toolbar.Signature.CurrentName:                  \'bg:#0050fa #feeffe bold\',\n    Token.Toolbar.Signature.Operator:                     \'           #000045            bold\',\n    Token.Docstring:                                      \'           #a550fa\',\n    Token.Toolbar.Validation:                             \'bg:#4b0045 #d37dfe\',\n    Token.Toolbar.Status:                                 \'bg:#1d0072 #d37dfe\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'bg:#1d0072 #1d00fe\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'bg:#1d0072 #d30072\',\n    Token.Toolbar.Status.Title:                           \'                   underline\',\n    Token.Toolbar.Status.InputMode:                       \'bg:#1d0072 #fe7dfe\',\n    Token.Toolbar.Status.Key:                             \'bg:#000045 #a550fa\',\n    Token.Toolbar.Status.PasteModeOn:                     \'bg:#d3009f #feeffe\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'bg:#782372 #d37dfe\',\n    Token.Toolbar.Status.PythonVersion:                   \'bg:#1d0072 #feeffe bold\',\n    Token.Aborted:                                        \'           #a550fa\',\n    Token.Sidebar:                                        \'bg:#e994fe #000045\',\n    Token.Sidebar.Title:                                  \'bg:#78effa #feeffe bold\',\n    Token.Sidebar.Label:                                  \'bg:#e994fe #1d0072\',\n    Token.Sidebar.Status:                                 \'bg:#fec1fe #000045\',\n    Token.Sidebar.Selected.Label:                         \'bg:#1d0072 #fed8fe\',\n    Token.Sidebar.Selected.Status:                        \'bg:#4b009f #feeffe bold\',\n    Token.Sidebar.Separator:                              \'bg:#e994fe #feeffe underline\',\n    Token.Sidebar.Key:                                    \'bg:#e994fe #000045 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#e994fe #000045\',\n    Token.Sidebar.HelpText:                               \'bg:#feeffe #000045\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#0000fa #000045\',\n    Token.History.Line.Current:                           \'bg:#feeffe #000045\',\n    Token.History.Line.Selected.Current:                  \'bg:#a550fe #000045\',\n    Token.History.ExistingInput:                          \'           #a550fa\',\n    Token.Window.Border:                                  \'           #009445\',\n    Token.Window.Title:                                   \'bg:#e994fe #000045\',\n    Token.Window.TIItleV2:                                \'bg:#7894fa #000045 bold\',\n    Token.AcceptMessage:                                  \'bg:#fe50fe #4b009f\',\n    Token.ExitConfirmation:                               \'bg:#a5009f #feeffe\',\n}\ntemp.update({\n    Token.Aborted:                                        \'           #8fe339\',\n    Token.Sidebar:                                        \'bg:#4b009f #feeffe\',\n    Token.Sidebar.Title:                                  \'bg:#bc00e3 #ffffff bold\',\n    Token.Sidebar.Label:                                  \'bg:#4b009f #fec1fe\',\n    Token.Sidebar.Status:                                 \'bg:#1d0072 #fed8fe\',\n    Token.Sidebar.Selected.Label:                         \'bg:#fec1fe #07005b\',\n    Token.Sidebar.Selected.Status:                        \'bg:#e994fe #000045 bold\',\n    Token.Sidebar.Separator:                              \'bg:#4b009f #000045 underline\',\n    Token.Sidebar.Key:                                    \'bg:#4b0072 #feeffe bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#4b009f #feeffe\',\n    Token.Sidebar.HelpText:                               \'bg:#07005b #fed8fe\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#feefe3 #feeffe\',\n    Token.History.Line.Current:                           \'bg:#000045 #feeffe\',\n    Token.History.Line.Selected.Current:                  \'bg:#8f3945 #feeffe\',\n    Token.History.ExistingInput:                          \'           #8f39e3\',\n    Token.Window.Border:                                  \'           #fe00fe\',\n    Token.Window.Title:                                   \'bg:#4b009f #feeffe\',\n    Token.Window.TIItleV2:                                \'bg:#bc00e3 #feeffe bold\',\n    Token.AcceptMessage:                                  \'bg:#003945 #e994fe\',\n    Token.ExitConfirmation:                               \'bg:#8f94fe #000045\',\n    Token.LineNumber:                                     \'bg:#1d0072 #d323cd\',\n    Token.SearchMatch:                                    \'bg:#4b7d9f #feeffe\',\n    Token.SearchMatch.Current:                            \'bg:#4b00fe #feeffe\',\n    Token.SelectedText:                                   \'bg:#787dcd #feeffe\',\n    Token.Toolbar.Completions:                            \'bg:#000045 #ef00fe\',\n    Token.Toolbar.Completions.Arrow:                      \'bg:#000045 #ef00fe bold\',\n    Token.Toolbar.Completions.Completion:                 \'bg:#000045 #ef00fe\',\n    Token.Toolbar.Completions.Completion.Current:         \'bg:#feeffe #7d00b1\',\n    Token.Menu.Completions.Completion:                    \'bg:#000045 #fe00fe\',\n    Token.Menu.Completions.Completion.Current:            \'bg:#fe00fe #000045\',\n    Token.Menu.Completions.Meta:                          \'bg:#000045 #fe00cf\',\n    Token.Menu.Completions.Meta.Current:                  \'bg:#000045 #fe00ed\',\n    Token.Menu.Completions.ProgressBar:                   \'bg:#feb5ed           \',\n    Token.Menu.Completions.ProgressButton:                \'bg:#4d0045           \',\n})\nsprice=temp\n\n\n\ntemp = {\n    Token.LineNumber:                                     \'bg:#000072 #23d3cd\',\n    Token.Prompt:                                         \'                           bold\',\n    Token.Prompt.Dots:                                    \'                   noinherit\',\n    Token.In:                                             \'           #fa0000 bold\',\n    Token.In.Number:                                      \'                        \',\n    Token.Out:                                            \'           #45fe00\',\n    Token.Out.Number:                                     \'           #45fe00\',\n    Token.Separator:                                      \'           #fee994\',\n    Token.Toolbar.Search:                                 \'           #fe1d7d noinherit\',\n    Token.Toolbar.Search.Text:                            \'                   noinherit\',\n    Token.Toolbar.System:                                 \'           #fe1d7d noinherit\',\n    Token.Toolbar.Arg:                                    \'           #fe1d7d noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                                 noinherit\',\n    Token.Toolbar.Signature:                              \'bg:#fe4b94 #450000\',\n    Token.Toolbar.Signature.CurrentName:                  \'bg:#fa0050 #fefeef bold\',\n    Token.Toolbar.Signature.Operator:                     \'           #450000            bold\',\n    Token.Docstring:                                      \'           #faa550\',\n    Token.Toolbar.Validation:                             \'bg:#454b00 #fed37d\',\n    Token.Toolbar.Status:                                 \'bg:#721d00 #fed37d\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'bg:#721d00 #fe1d00\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'bg:#721d00 #72d300\',\n    Token.Toolbar.Status.Title:                           \'                   underline\',\n    Token.Toolbar.Status.InputMode:                       \'bg:#721d00 #fefe7d\',\n    Token.Toolbar.Status.Key:                             \'bg:#450000 #faa550\',\n    Token.Toolbar.Status.PasteModeOn:                     \'bg:#9fd300 #fefeef\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'bg:#727823 #fed37d\',\n    Token.Toolbar.Status.PythonVersion:                   \'bg:#721d00 #fefeef bold\',\n    Token.Aborted:                                        \'           #faa550\',\n    Token.Sidebar:                                        \'bg:#fee994 #450000\',\n    Token.Sidebar.Title:                                  \'bg:#fa78ef #fefeef bold\',\n    Token.Sidebar.Label:                                  \'bg:#fee994 #721d00\',\n    Token.Sidebar.Status:                                 \'bg:#fefec1 #450000\',\n    Token.Sidebar.Selected.Label:                         \'bg:#721d00 #fefed8\',\n    Token.Sidebar.Selected.Status:                        \'bg:#9f4b00 #fefeef bold\',\n    Token.Sidebar.Separator:                              \'bg:#fee994 #fefeef underline\',\n    Token.Sidebar.Key:                                    \'bg:#fee994 #450000 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#fee994 #450000\',\n    Token.Sidebar.HelpText:                               \'bg:#fefeef #450000\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#fa0000 #450000\',\n    Token.History.Line.Current:                           \'bg:#fefeef #450000\',\n    Token.History.Line.Selected.Current:                  \'bg:#fea550 #450000\',\n    Token.History.ExistingInput:                          \'           #faa550\',\n    Token.Window.Border:                                  \'           #450094\',\n    Token.Window.Title:                                   \'bg:#fee994 #450000\',\n    Token.Window.TIItleV2:                                \'bg:#fa7894 #450000 bold\',\n    Token.AcceptMessage:                                  \'bg:#fefe50 #9f4b00\',\n    Token.ExitConfirmation:                               \'bg:#9fa500 #fefeef\',\n}\ntemp.update({\n    Token.Aborted:                                        \'           #398fe3\',\n    Token.Sidebar:                                        \'bg:#9f4b00 #fefeef\',\n    Token.Sidebar.Title:                                  \'bg:#e3bc00 #ffffff bold\',\n    Token.Sidebar.Label:                                  \'bg:#9f4b00 #fefec1\',\n    Token.Sidebar.Status:                                 \'bg:#721d00 #fefed8\',\n    Token.Sidebar.Selected.Label:                         \'bg:#fefec1 #5b0700\',\n    Token.Sidebar.Selected.Status:                        \'bg:#fee994 #450000 bold\',\n    Token.Sidebar.Separator:                              \'bg:#9f4b00 #450000 underline\',\n    Token.Sidebar.Key:                                    \'bg:#724b00 #fefeef bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#9f4b00 #fefeef\',\n    Token.Sidebar.HelpText:                               \'bg:#5b0700 #fefed8\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#e3feef #fefeef\',\n    Token.History.Line.Current:                           \'bg:#450000 #fefeef\',\n    Token.History.Line.Selected.Current:                  \'bg:#458f39 #fefeef\',\n    Token.History.ExistingInput:                          \'           #e38f39\',\n    Token.Window.Border:                                  \'           #fefe00\',\n    Token.Window.Title:                                   \'bg:#9f4b00 #fefeef\',\n    Token.Window.TIItleV2:                                \'bg:#e3bc00 #fefeef bold\',\n    Token.AcceptMessage:                                  \'bg:#450039 #fee994\',\n    Token.ExitConfirmation:                               \'bg:#fe8f94 #450000\',\n    Token.LineNumber:                                     \'bg:#721d00 #cdd323\',\n    Token.SearchMatch:                                    \'bg:#9f4b7d #fefeef\',\n    Token.SearchMatch.Current:                            \'bg:#fe4b00 #fefeef\',\n    Token.SelectedText:                                   \'bg:#cd787d #fefeef\',\n    Token.Toolbar.Completions:                            \'bg:#450000 #feef00\',\n    Token.Toolbar.Completions.Arrow:                      \'bg:#450000 #feef00 bold\',\n    Token.Toolbar.Completions.Completion:                 \'bg:#450000 #feef00\',\n    Token.Toolbar.Completions.Completion.Current:         \'bg:#fefeef #b17d00\',\n    Token.Menu.Completions.Completion:                    \'bg:#450000 #fefe00\',\n    Token.Menu.Completions.Completion.Current:            \'bg:#fefe00 #450000\',\n    Token.Menu.Completions.Meta:                          \'bg:#450000 #cffe00\',\n    Token.Menu.Completions.Meta.Current:                  \'bg:#450000 #edfe00\',\n    Token.Menu.Completions.ProgressBar:                   \'bg:#edfeb5           \',\n    Token.Menu.Completions.ProgressButton:                \'bg:#454d00           \',\n})\nsplicer1=temp\n\ntemp = {\n    Token.LineNumber:                                     \'bg:#720000 #cd23d3\',\n    Token.Prompt:                                         \'                           bold\',\n    Token.Prompt.Dots:                                    \'                   noinherit\',\n    Token.In:                                             \'           #00fa00 bold\',\n    Token.In.Number:                                      \'                        \',\n    Token.Out:                                            \'           #0045fe\',\n    Token.Out.Number:                                     \'           #0045fe\',\n    Token.Separator:                                      \'           #94fee9\',\n    Token.Toolbar.Search:                                 \'           #7dfe1d noinherit\',\n    Token.Toolbar.Search.Text:                            \'                   noinherit\',\n    Token.Toolbar.System:                                 \'           #7dfe1d noinherit\',\n    Token.Toolbar.Arg:                                    \'           #7dfe1d noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                                 noinherit\',\n    Token.Toolbar.Signature:                              \'bg:#94fe4b #004500\',\n    Token.Toolbar.Signature.CurrentName:                  \'bg:#50fa00 #effefe bold\',\n    Token.Toolbar.Signature.Operator:                     \'           #004500            bold\',\n    Token.Docstring:                                      \'           #50faa5\',\n    Token.Toolbar.Validation:                             \'bg:#00454b #7dfed3\',\n    Token.Toolbar.Status:                                 \'bg:#00721d #7dfed3\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'bg:#00721d #00fe1d\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'bg:#00721d #0072d3\',\n    Token.Toolbar.Status.Title:                           \'                   underline\',\n    Token.Toolbar.Status.InputMode:                       \'bg:#00721d #7dfefe\',\n    Token.Toolbar.Status.Key:                             \'bg:#004500 #50faa5\',\n    Token.Toolbar.Status.PasteModeOn:                     \'bg:#009fd3 #effefe\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'bg:#237278 #7dfed3\',\n    Token.Toolbar.Status.PythonVersion:                   \'bg:#00721d #effefe bold\',\n    Token.Aborted:                                        \'           #50faa5\',\n    Token.Sidebar:                                        \'bg:#94fee9 #004500\',\n    Token.Sidebar.Title:                                  \'bg:#effa78 #effefe bold\',\n    Token.Sidebar.Label:                                  \'bg:#94fee9 #00721d\',\n    Token.Sidebar.Status:                                 \'bg:#c1fefe #004500\',\n    Token.Sidebar.Selected.Label:                         \'bg:#00721d #d8fefe\',\n    Token.Sidebar.Selected.Status:                        \'bg:#009f4b #effefe bold\',\n    Token.Sidebar.Separator:                              \'bg:#94fee9 #effefe underline\',\n    Token.Sidebar.Key:                                    \'bg:#94fee9 #004500 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#94fee9 #004500\',\n    Token.Sidebar.HelpText:                               \'bg:#effefe #004500\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#00fa00 #004500\',\n    Token.History.Line.Current:                           \'bg:#effefe #004500\',\n    Token.History.Line.Selected.Current:                  \'bg:#50fea5 #004500\',\n    Token.History.ExistingInput:                          \'           #50faa5\',\n    Token.Window.Border:                                  \'           #944500\',\n    Token.Window.Title:                                   \'bg:#94fee9 #004500\',\n    Token.Window.TIItleV2:                                \'bg:#94fa78 #004500 bold\',\n    Token.AcceptMessage:                                  \'bg:#50fefe #009f4b\',\n    Token.ExitConfirmation:                               \'bg:#009fa5 #effefe\',\n}\ntemp.update({\n    Token.Aborted:                                        \'           #e3398f\',\n    Token.Sidebar:                                        \'bg:#009f4b #effefe\',\n    Token.Sidebar.Title:                                  \'bg:#00e3bc #ffffff bold\',\n    Token.Sidebar.Label:                                  \'bg:#009f4b #c1fefe\',\n    Token.Sidebar.Status:                                 \'bg:#00721d #d8fefe\',\n    Token.Sidebar.Selected.Label:                         \'bg:#c1fefe #005b07\',\n    Token.Sidebar.Selected.Status:                        \'bg:#94fee9 #004500 bold\',\n    Token.Sidebar.Separator:                              \'bg:#009f4b #004500 underline\',\n    Token.Sidebar.Key:                                    \'bg:#00724b #effefe bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#009f4b #effefe\',\n    Token.Sidebar.HelpText:                               \'bg:#005b07 #d8fefe\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#efe3fe #effefe\',\n    Token.History.Line.Current:                           \'bg:#004500 #effefe\',\n    Token.History.Line.Selected.Current:                  \'bg:#39458f #effefe\',\n    Token.History.ExistingInput:                          \'           #39e38f\',\n    Token.Window.Border:                                  \'           #00fefe\',\n    Token.Window.Title:                                   \'bg:#009f4b #effefe\',\n    Token.Window.TIItleV2:                                \'bg:#00e3bc #effefe bold\',\n    Token.AcceptMessage:                                  \'bg:#394500 #94fee9\',\n    Token.ExitConfirmation:                               \'bg:#94fe8f #004500\',\n    Token.LineNumber:                                     \'bg:#00721d #23cdd3\',\n    Token.SearchMatch:                                    \'bg:#7d9f4b #effefe\',\n    Token.SearchMatch.Current:                            \'bg:#00fe4b #effefe\',\n    Token.SelectedText:                                   \'bg:#7dcd78 #effefe\',\n    Token.Toolbar.Completions:                            \'bg:#004500 #00feef\',\n    Token.Toolbar.Completions.Arrow:                      \'bg:#004500 #00feef bold\',\n    Token.Toolbar.Completions.Completion:                 \'bg:#004500 #00feef\',\n    Token.Toolbar.Completions.Completion.Current:         \'bg:#effefe #00b17d\',\n    Token.Menu.Completions.Completion:                    \'bg:#004500 #00fefe\',\n    Token.Menu.Completions.Completion.Current:            \'bg:#00fefe #004500\',\n    Token.Menu.Completions.Meta:                          \'bg:#004500 #00cffe\',\n    Token.Menu.Completions.Meta.Current:                  \'bg:#004500 #00edfe\',\n    Token.Menu.Completions.ProgressBar:                   \'bg:#b5edfe           \',\n    Token.Menu.Completions.ProgressButton:                \'bg:#00454d           \',\n})\nsplicer2=temp\n\n\n\ntemp = {\n    Token.LineNumber:                                     \'bg:#007200 #23cdd3\',\n    Token.Prompt:                                         \'                           bold\',\n    Token.Prompt.Dots:                                    \'                   noinherit\',\n    Token.In:                                             \'           #fa0000 bold\',\n    Token.In.Number:                                      \'                        \',\n    Token.Out:                                            \'           #4500fe\',\n    Token.Out.Number:                                     \'           #4500fe\',\n    Token.Separator:                                      \'           #fe94e9\',\n    Token.Toolbar.Search:                                 \'           #fe7d1d noinherit\',\n    Token.Toolbar.Search.Text:                            \'                   noinherit\',\n    Token.Toolbar.System:                                 \'           #fe7d1d noinherit\',\n    Token.Toolbar.Arg:                                    \'           #fe7d1d noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                                 noinherit\',\n    Token.Toolbar.Signature:                              \'bg:#fe944b #450000\',\n    Token.Toolbar.Signature.CurrentName:                  \'bg:#fa5000 #feeffe bold\',\n    Token.Toolbar.Signature.Operator:                     \'           #450000            bold\',\n    Token.Docstring:                                      \'           #fa50a5\',\n    Token.Toolbar.Validation:                             \'bg:#45004b #fe7dd3\',\n    Token.Toolbar.Status:                                 \'bg:#72001d #fe7dd3\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'bg:#72001d #fe001d\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'bg:#72001d #7200d3\',\n    Token.Toolbar.Status.Title:                           \'                   underline\',\n    Token.Toolbar.Status.InputMode:                       \'bg:#72001d #fe7dfe\',\n    Token.Toolbar.Status.Key:                             \'bg:#450000 #fa50a5\',\n    Token.Toolbar.Status.PasteModeOn:                     \'bg:#9f00d3 #feeffe\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'bg:#722378 #fe7dd3\',\n    Token.Toolbar.Status.PythonVersion:                   \'bg:#72001d #feeffe bold\',\n    Token.Aborted:                                        \'           #fa50a5\',\n    Token.Sidebar:                                        \'bg:#fe94e9 #450000\',\n    Token.Sidebar.Title:                                  \'bg:#faef78 #feeffe bold\',\n    Token.Sidebar.Label:                                  \'bg:#fe94e9 #72001d\',\n    Token.Sidebar.Status:                                 \'bg:#fec1fe #450000\',\n    Token.Sidebar.Selected.Label:                         \'bg:#72001d #fed8fe\',\n    Token.Sidebar.Selected.Status:                        \'bg:#9f004b #feeffe bold\',\n    Token.Sidebar.Separator:                              \'bg:#fe94e9 #feeffe underline\',\n    Token.Sidebar.Key:                                    \'bg:#fe94e9 #450000 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#fe94e9 #450000\',\n    Token.Sidebar.HelpText:                               \'bg:#feeffe #450000\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#fa0000 #450000\',\n    Token.History.Line.Current:                           \'bg:#feeffe #450000\',\n    Token.History.Line.Selected.Current:                  \'bg:#fe50a5 #450000\',\n    Token.History.ExistingInput:                          \'           #fa50a5\',\n    Token.Window.Border:                                  \'           #459400\',\n    Token.Window.Title:                                   \'bg:#fe94e9 #450000\',\n    Token.Window.TIItleV2:                                \'bg:#fa9478 #450000 bold\',\n    Token.AcceptMessage:                                  \'bg:#fe50fe #9f004b\',\n    Token.ExitConfirmation:                               \'bg:#9f00a5 #feeffe\',\n}\ntemp.update({\n    Token.Aborted:                                        \'           #39e38f\',\n    Token.Sidebar:                                        \'bg:#9f004b #feeffe\',\n    Token.Sidebar.Title:                                  \'bg:#e300bc #ffffff bold\',\n    Token.Sidebar.Label:                                  \'bg:#9f004b #fec1fe\',\n    Token.Sidebar.Status:                                 \'bg:#72001d #fed8fe\',\n    Token.Sidebar.Selected.Label:                         \'bg:#fec1fe #5b0007\',\n    Token.Sidebar.Selected.Status:                        \'bg:#fe94e9 #450000 bold\',\n    Token.Sidebar.Separator:                              \'bg:#9f004b #450000 underline\',\n    Token.Sidebar.Key:                                    \'bg:#72004b #feeffe bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#9f004b #feeffe\',\n    Token.Sidebar.HelpText:                               \'bg:#5b0007 #fed8fe\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#e3effe #feeffe\',\n    Token.History.Line.Current:                           \'bg:#450000 #feeffe\',\n    Token.History.Line.Selected.Current:                  \'bg:#45398f #feeffe\',\n    Token.History.ExistingInput:                          \'           #e3398f\',\n    Token.Window.Border:                                  \'           #fe00fe\',\n    Token.Window.Title:                                   \'bg:#9f004b #feeffe\',\n    Token.Window.TIItleV2:                                \'bg:#e300bc #feeffe bold\',\n    Token.AcceptMessage:                                  \'bg:#453900 #fe94e9\',\n    Token.ExitConfirmation:                               \'bg:#fe948f #450000\',\n    Token.LineNumber:                                     \'bg:#72001d #cd23d3\',\n    Token.SearchMatch:                                    \'bg:#9f7d4b #feeffe\',\n    Token.SearchMatch.Current:                            \'bg:#fe004b #feeffe\',\n    Token.SelectedText:                                   \'bg:#cd7d78 #feeffe\',\n    Token.Toolbar.Completions:                            \'bg:#450000 #fe00ef\',\n    Token.Toolbar.Completions.Arrow:                      \'bg:#450000 #fe00ef bold\',\n    Token.Toolbar.Completions.Completion:                 \'bg:#450000 #fe00ef\',\n    Token.Toolbar.Completions.Completion.Current:         \'bg:#feeffe #b1007d\',\n    Token.Menu.Completions.Completion:                    \'bg:#450000 #fe00fe\',\n    Token.Menu.Completions.Completion.Current:            \'bg:#fe00fe #450000\',\n    Token.Menu.Completions.Meta:                          \'bg:#450000 #cf00fe\',\n    Token.Menu.Completions.Meta.Current:                  \'bg:#450000 #ed00fe\',\n    Token.Menu.Completions.ProgressBar:                   \'bg:#edb5fe           \',\n    Token.Menu.Completions.ProgressButton:                \'bg:#45004d           \',\n})\nbreeze=temp\n\n\ntemp = {\n    Token.LineNumber:                                     \'noinherit\',\n    Token.Prompt:                                         \'noinherit\',\n    Token.Prompt.Dots:                                    \'noinherit\',\n    Token.In:                                             \'noinherit\',\n    Token.In.Number:                                      \'noinherit\',\n    Token.Out:                                            \'noinherit\',\n    Token.Out.Number:                                     \'noinherit\',\n    Token.Separator:                                      \'noinherit\',\n    Token.Toolbar.Search:                                 \'noinherit\',\n    Token.Toolbar.Search.Text:                            \'noinherit\',\n    Token.Toolbar.System:                                 \'noinherit\',\n    Token.Toolbar.Arg:                                    \'noinherit\',\n    Token.Toolbar.Arg.Text:                               \'noinherit\',\n    Token.Toolbar.Signature:                              \'noinherit\',\n    Token.Toolbar.Signature.CurrentName:                  \'noinherit\',\n    Token.Toolbar.Signature.Operator:                     \'noinherit\',\n    Token.Docstring:                                      \'noinherit\',\n    Token.Toolbar.Validation:                             \'noinherit\',\n    Token.Toolbar.Status:                                 \'noinherit\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'noinherit\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'noinherit\',\n    Token.Toolbar.Status.Title:                           \'noinherit\',\n    Token.Toolbar.Status.InputMode:                       \'noinherit\',\n    Token.Toolbar.Status.Key:                             \'noinherit\',\n    Token.Toolbar.Status.PasteModeOn:                     \'noinherit\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'noinherit\',\n    Token.Toolbar.Status.PythonVersion:                   \'noinherit\',\n    Token.Aborted:                                        \'noinherit\',\n    Token.Sidebar:                                        \'noinherit\',\n    Token.Sidebar.Title:                                  \'noinherit\',\n    Token.Sidebar.Label:                                  \'noinherit\',\n    Token.Sidebar.Status:                                 \'noinherit\',\n    Token.Sidebar.Selected.Label:                         \'noinherit\',\n    Token.Sidebar.Selected.Status:                        \'noinherit\',\n    Token.Sidebar.Separator:                              \'noinherit\',\n    Token.Sidebar.Key:                                    \'noinherit\',\n    Token.Sidebar.Key.Description:                        \'noinherit\',\n    Token.Sidebar.HelpText:                               \'noinherit\',\n    Token.History.Line:                                   \'noinherit\',\n    Token.History.Line.Selected:                          \'noinherit\',\n    Token.History.Line.Current:                           \'noinherit\',\n    Token.History.Line.Selected.Current:                  \'noinherit\',\n    Token.History.ExistingInput:                          \'noinherit\',\n    Token.Window.Border:                                  \'noinherit\',\n    Token.Window.Title:                                   \'noinherit\',\n    Token.Window.TIItleV2:                                \'noinherit\',\n    Token.AcceptMessage:                                  \'noinherit\',\n    Token.ExitConfirmation:                               \'noinherit\',\n}\ntemp.update({\n    Token.Aborted:                                        \'noinherit\',\n    Token.Sidebar:                                        \'noinherit\',\n    Token.Sidebar.Title:                                  \'noinherit\',\n    Token.Sidebar.Label:                                  \'noinherit\',\n    Token.Sidebar.Status:                                 \'noinherit\',\n    Token.Sidebar.Selected.Label:                         \'noinherit\',\n    Token.Sidebar.Selected.Status:                        \'noinherit\',\n    Token.Sidebar.Separator:                              \'noinherit\',\n    Token.Sidebar.Key:                                    \'noinherit\',\n    Token.Sidebar.Key.Description:                        \'noinherit\',\n    Token.Sidebar.HelpText:                               \'noinherit\',\n    Token.History.Line:                                   \'noinherit\',\n    Token.History.Line.Selected:                          \'noinherit underline\',\n    Token.History.Line.Current:                           \'noinherit\',\n    Token.History.Line.Selected.Current:                  \'noinherit\',\n    Token.History.ExistingInput:                          \'noinherit\',\n    Token.Window.Border:                                  \'noinherit\',\n    Token.Window.Title:                                   \'noinherit\',\n    Token.Window.TIItleV2:                                \'noinherit\',\n    Token.AcceptMessage:                                  \'noinherit\',\n    Token.ExitConfirmation:                               \'noinherit\',\n    Token.LineNumber:                                     \'noinherit\',\n    Token.SearchMatch:                                    \'noinherit\',\n    Token.SearchMatch.Current:                            \'noinherit underline\',\n    Token.SelectedText:                                   \'noinherit\',\n    Token.Toolbar.Completions:                            \'noinherit\',\n    Token.Toolbar.Completions.Arrow:                      \'noinherit\',\n    Token.Toolbar.Completions.Completion:                 \'noinherit\',\n    Token.Toolbar.Completions.Completion.Current:         \'noinherit underline\',\n    Token.Menu.Completions.Completion:                    \'noinherit\',\n    Token.Menu.Completions.Completion.Current:            \'noinherit underline\',\n    Token.Menu.Completions.Meta:                          \'noinherit\',\n    Token.Menu.Completions.Meta.Current:                  \'noinherit underline\',\n    Token.Menu.Completions.ProgressBar:                   \'noinherit\',\n    Token.Menu.Completions.ProgressButton:                \'noinherit\',\n})\nplain=temp\n\n\n\ntemp = {\n    Token.LineNumber:                                     \'bg:#000000 #230000\',\n    Token.Prompt:                                         \'                           bold\',\n    Token.Prompt.Dots:                                    \'                   noinherit\',\n    Token.In:                                             \'           #fa0000 bold\',\n    Token.In.Number:                                      \'                        \',\n    Token.Out:                                            \'           #450000\',\n    Token.Out.Number:                                     \'           #450000\',\n    Token.Separator:                                      \'           #fe0000\',\n    Token.Toolbar.Search:                                 \'           #fe0000 noinherit\',\n    Token.Toolbar.Search.Text:                            \'                   noinherit\',\n    Token.Toolbar.System:                                 \'           #fe0000 noinherit\',\n    Token.Toolbar.Arg:                                    \'           #fe0000 noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                                 noinherit\',\n    Token.Toolbar.Signature:                              \'bg:#fe0000 #450000\',\n    Token.Toolbar.Signature.CurrentName:                  \'bg:#fa0000 #fe0000 bold\',\n    Token.Toolbar.Signature.Operator:                     \'           #450000            bold\',\n    Token.Docstring:                                      \'           #fa0000\',\n    Token.Toolbar.Validation:                             \'bg:#450000 #fe0000\',\n    Token.Toolbar.Status:                                 \'bg:#720000 #fe0000\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'bg:#720000 #fe0000\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'bg:#720000 #720000\',\n    Token.Toolbar.Status.Title:                           \'                   underline\',\n    Token.Toolbar.Status.InputMode:                       \'bg:#720000 #fe0000\',\n    Token.Toolbar.Status.Key:                             \'bg:#450000 #fa0000\',\n    Token.Toolbar.Status.PasteModeOn:                     \'bg:#9f0000 #fe0000\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'bg:#720000 #fe0000\',\n    Token.Toolbar.Status.PythonVersion:                   \'bg:#720000 #fe0000 bold\',\n    Token.Aborted:                                        \'           #fa0000\',\n    Token.Sidebar:                                        \'bg:#fe0000 #450000\',\n    Token.Sidebar.Title:                                  \'bg:#fa0000 #fe0000 bold\',\n    Token.Sidebar.Label:                                  \'bg:#fe0000 #720000\',\n    Token.Sidebar.Status:                                 \'bg:#fe0000 #450000\',\n    Token.Sidebar.Selected.Label:                         \'bg:#720000 #fe0000\',\n    Token.Sidebar.Selected.Status:                        \'bg:#9f0000 #fe0000 bold\',\n    Token.Sidebar.Separator:                              \'bg:#fe0000 #fe0000 underline\',\n    Token.Sidebar.Key:                                    \'bg:#fe0000 #450000 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#fe0000 #450000\',\n    Token.Sidebar.HelpText:                               \'bg:#fe0000 #450000\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#fa0000 #450000\',\n    Token.History.Line.Current:                           \'bg:#fe0000 #450000\',\n    Token.History.Line.Selected.Current:                  \'bg:#fe0000 #450000\',\n    Token.History.ExistingInput:                          \'           #fa0000\',\n    Token.Window.Border:                                  \'           #450000\',\n    Token.Window.Title:                                   \'bg:#fe0000 #450000\',\n    Token.Window.TIItleV2:                                \'bg:#fa0000 #450000 bold\',\n    Token.AcceptMessage:                                  \'bg:#fe0000 #9f0000\',\n    Token.ExitConfirmation:                               \'bg:#9f0000 #fe0000\',\n}                                                                                    \ntemp.update({                                                                      \n    Token.Aborted:                                        \'           #390000\',\n    Token.Sidebar:                                        \'bg:#9f0000 #fe0000\',\n    Token.Sidebar.Title:                                  \'bg:#e30000 #600000 bold\',\n    Token.Sidebar.Label:                                  \'bg:#9f0000 #fe0000\',\n    Token.Sidebar.Status:                                 \'bg:#720000 #fe0000\',\n    Token.Sidebar.Selected.Label:                         \'bg:#fe0000 #5b0000\',\n    Token.Sidebar.Selected.Status:                        \'bg:#fe0000 #450000 bold\',\n    Token.Sidebar.Separator:                              \'bg:#9f0000 #450000 underline\',\n    Token.Sidebar.Key:                                    \'bg:#720000 #fe0000 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#9f0000 #fe0000\',\n    Token.Sidebar.HelpText:                               \'bg:#5b0000 #fe0000\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#e30000 #fe0000\',\n    Token.History.Line.Current:                           \'bg:#450000 #fe0000\',\n    Token.History.Line.Selected.Current:                  \'bg:#450000 #fe0000\',\n    Token.History.ExistingInput:                          \'           #e30000\',\n    Token.Window.Border:                                  \'           #fe0000\',\n    Token.Window.Title:                                   \'bg:#9f0000 #fe0000\',\n    Token.Window.TIItleV2:                                \'bg:#e30000 #fe0000 bold\',\n    Token.AcceptMessage:                                  \'bg:#450000 #fe0000\',\n    Token.ExitConfirmation:                               \'bg:#fe0000 #450000\',\n    Token.LineNumber:                                     \'bg:#720000 #cd0000\',\n    Token.SearchMatch:                                    \'bg:#9f0000 #fe0000\',\n    Token.SearchMatch.Current:                            \'bg:#fe0000 #fe0000\',\n    Token.SelectedText:                                   \'bg:#cd0000 #fe0000\',\n    Token.Toolbar.Completions:                            \'bg:#450000 #fe0000\',\n    Token.Toolbar.Completions.Arrow:                      \'bg:#450000 #fe0000 bold\',\n    Token.Toolbar.Completions.Completion:                 \'bg:#450000 #fe0000\',\n    Token.Toolbar.Completions.Completion.Current:         \'bg:#fe0000 #b10000\',\n    Token.Menu.Completions.Completion:                    \'bg:#450000 #fe0000\',\n    Token.Menu.Completions.Completion.Current:            \'bg:#fe0000 #450000\',\n    Token.Menu.Completions.Meta:                          \'bg:#450000 #cf0000\',\n    Token.Menu.Completions.Meta.Current:                  \'bg:#450000 #ed0000\',\n    Token.Menu.Completions.ProgressBar:                   \'bg:#ed0000           \',\n    Token.Menu.Completions.ProgressButton:                \'bg:#450000           \',\n})\ndarkred=temp\n\ntemp = {\n    Token.LineNumber:                                     \'bg:#000000 #232323\',\n    Token.Prompt:                                         \'                           bold\',\n    Token.Prompt.Dots:                                    \'                   noinherit\',\n    Token.In:                                             \'           #fafafa bold\',\n    Token.In.Number:                                      \'                        \',\n    Token.Out:                                            \'           #454545\',\n    Token.Out.Number:                                     \'           #454545\',\n    Token.Separator:                                      \'           #fefefe\',\n    Token.Toolbar.Search:                                 \'           #fefefe noinherit\',\n    Token.Toolbar.Search.Text:                            \'                   noinherit\',\n    Token.Toolbar.System:                                 \'           #fefefe noinherit\',\n    Token.Toolbar.Arg:                                    \'           #fefefe noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                                 noinherit\',\n    Token.Toolbar.Signature:                              \'bg:#fefefe #454545\',\n    Token.Toolbar.Signature.CurrentName:                  \'bg:#fafafa #fefefe bold\',\n    Token.Toolbar.Signature.Operator:                     \'           #454545            bold\',\n    Token.Docstring:                                      \'           #fafafa\',\n    Token.Toolbar.Validation:                             \'bg:#454545 #fefefe\',\n    Token.Toolbar.Status:                                 \'bg:#727272 #fefefe\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'bg:#727272 #fefefe\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'bg:#727272 #727272\',\n    Token.Toolbar.Status.Title:                           \'                   underline\',\n    Token.Toolbar.Status.InputMode:                       \'bg:#727272 #fefefe\',\n    Token.Toolbar.Status.Key:                             \'bg:#454545 #fafafa\',\n    Token.Toolbar.Status.PasteModeOn:                     \'bg:#9f9f9f #fefefe\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'bg:#727272 #fefefe\',\n    Token.Toolbar.Status.PythonVersion:                   \'bg:#727272 #fefefe bold\',\n    Token.Aborted:                                        \'           #fafafa\',\n    Token.Sidebar:                                        \'bg:#fefefe #454545\',\n    Token.Sidebar.Title:                                  \'bg:#fafafa #fefefe bold\',\n    Token.Sidebar.Label:                                  \'bg:#fefefe #727272\',\n    Token.Sidebar.Status:                                 \'bg:#fefefe #454545\',\n    Token.Sidebar.Selected.Label:                         \'bg:#727272 #fefefe\',\n    Token.Sidebar.Selected.Status:                        \'bg:#9f9f9f #fefefe bold\',\n    Token.Sidebar.Separator:                              \'bg:#fefefe #fefefe underline\',\n    Token.Sidebar.Key:                                    \'bg:#fefefe #454545 bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#fefefe #454545\',\n    Token.Sidebar.HelpText:                               \'bg:#fefefe #454545\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#fafafa #454545\',\n    Token.History.Line.Current:                           \'bg:#fefefe #454545\',\n    Token.History.Line.Selected.Current:                  \'bg:#fefefe #454545\',\n    Token.History.ExistingInput:                          \'           #fafafa\',\n    Token.Window.Border:                                  \'           #454545\',\n    Token.Window.Title:                                   \'bg:#fefefe #454545\',\n    Token.Window.TIItleV2:                                \'bg:#fafafa #454545 bold\',\n    Token.AcceptMessage:                                  \'bg:#fefefe #9f9f9f\',\n    Token.ExitConfirmation:                               \'bg:#9f9f9f #fefefe\',\n}\ntemp.update({\n    Token.Aborted:                                        \'           #393939\',\n    Token.Sidebar:                                        \'bg:#9f9f9f #fefefe\',\n    Token.Sidebar.Title:                                  \'bg:#e3e3e3 #606060 bold\',\n    Token.Sidebar.Label:                                  \'bg:#9f9f9f #fefefe\',\n    Token.Sidebar.Status:                                 \'bg:#727272 #fefefe\',\n    Token.Sidebar.Selected.Label:                         \'bg:#fefefe #5b5b5b\',\n    Token.Sidebar.Selected.Status:                        \'bg:#fefefe #454545 bold\',\n    Token.Sidebar.Separator:                              \'bg:#9f9f9f #454545 underline\',\n    Token.Sidebar.Key:                                    \'bg:#727272 #fefefe bold\',\n    Token.Sidebar.Key.Description:                        \'bg:#9f9f9f #fefefe\',\n    Token.Sidebar.HelpText:                               \'bg:#5b5b5b #fefefe\',\n    Token.History.Line:                                   \'\',\n    Token.History.Line.Selected:                          \'bg:#e3e3e3 #fefefe\',\n    Token.History.Line.Current:                           \'bg:#454545 #fefefe\',\n    Token.History.Line.Selected.Current:                  \'bg:#454545 #fefefe\',\n    Token.History.ExistingInput:                          \'           #e3e3e3\',\n    Token.Window.Border:                                  \'           #fefefe\',\n    Token.Window.Title:                                   \'bg:#9f9f9f #fefefe\',\n    Token.Window.TIItleV2:                                \'bg:#e3e3e3 #fefefe bold\',\n    Token.AcceptMessage:                                  \'bg:#454545 #fefefe\',\n    Token.ExitConfirmation:                               \'bg:#fefefe #454545\',\n    Token.LineNumber:                                     \'bg:#727272 #cdcdcd\',\n    Token.SearchMatch:                                    \'bg:#9f9f9f #fefefe\',\n    Token.SearchMatch.Current:                            \'bg:#fefefe #fefefe\',\n    Token.SelectedText:                                   \'bg:#cdcdcd #fefefe\',\n    Token.Toolbar.Completions:                            \'bg:#454545 #fefefe\',\n    Token.Toolbar.Completions.Arrow:                      \'bg:#454545 #fefefe bold\',\n    Token.Toolbar.Completions.Completion:                 \'bg:#454545 #fefefe\',\n    Token.Toolbar.Completions.Completion.Current:         \'bg:#fefefe #b1b1b1\',\n    Token.Menu.Completions.Completion:                    \'bg:#454545 #fefefe\',\n    Token.Menu.Completions.Completion.Current:            \'bg:#fefefe #454545\',\n    Token.Menu.Completions.Meta:                          \'bg:#454545 #cfcfcf\',\n    Token.Menu.Completions.Meta.Current:                  \'bg:#454545 #ededed\',\n    Token.Menu.Completions.ProgressBar:                   \'bg:#ededed           \',\n    Token.Menu.Completions.ProgressButton:                \'bg:#454545           \',\n})\nsilver=temp\n\n\n\n# #USE THIS AS A COMPLETE TEMPLATE FOR FUTURE STYLES. THIS TEMPLATE CREATES A STYLE IDENTICAL TO THAT OF STARS (aka inverted_3)\n# stars={\n#     Token.LineNumber:                                     \'#aa6666 bg:#002222                    \',\n#     Token.Prompt:                                         \'                   bold               \',\n#     Token.Prompt.Dots:                                    \'                             noinherit\',\n#     Token.In:                                             \'#008800            bold               \',\n#     Token.In.Number:                                      \'                                      \',\n#     Token.Out:                                            \'#ff0000                               \',\n#     Token.Out.Number:                                     \'#ff0000                               \',\n#     Token.Separator:                                      \'#bbbbbb                               \',\n#     Token.Toolbar.Search:                                 \'#22aaaa                      noinherit\',\n#     Token.Toolbar.Search.Text:                            \'                             noinherit\',\n#     Token.Toolbar.System:                                 \'#22aaaa                      noinherit\',\n#     Token.Toolbar.Arg:                                    \'#22aaaa                      noinherit\',\n#     Token.Toolbar.Arg.Text:                               \'                             noinherit\',\n#     Token.Toolbar.Signature:                              \'#000000 bg:#44bbbb                    \',\n#     Token.Toolbar.Signature.CurrentName:                  \'#ffffff bg:#008888 bold               \',\n#     Token.Toolbar.Signature.Operator:                     \'#000000            bold               \',\n#     Token.Docstring:                                      \'#888888                               \',\n#     Token.Toolbar.Validation:                             \'#aaaaaa bg:#440000                    \',\n#     Token.Toolbar.Status:                                 \'#aaaaaa bg:#222222                    \',\n#     Token.Toolbar.Status.BatteryPluggedIn:                \'#22aa22 bg:#222222                    \',\n#     Token.Toolbar.Status.BatteryNotPluggedIn:             \'#aa2222 bg:#222222                    \',\n#     Token.Toolbar.Status.Title:                           \'                   underline          \',\n#     Token.Toolbar.Status.InputMode:                       \'#ffffaa bg:#222222                    \',\n#     Token.Toolbar.Status.Key:                             \'#888888 bg:#000000                    \',\n#     Token.Toolbar.Status.PasteModeOn:                     \'#ffffff bg:#aa4444                    \',\n#     Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'#aaaaaa bg:#662266                    \',\n#     Token.Toolbar.Status.PythonVersion:                   \'#ffffff bg:#222222 bold               \',\n#     Token.Aborted:                                        \'#888888                               \',\n#     Token.Sidebar:                                        \'#000000 bg:#bbbbbb                    \',\n#     Token.Sidebar.Title:                                  \'#ffffff bg:#6688ff bold               \',\n#     Token.Sidebar.Label:                                  \'#222222 bg:#bbbbbb                    \',\n#     Token.Sidebar.Status:                                 \'#000011 bg:#dddddd                    \',\n#     Token.Sidebar.Selected.Label:                         \'#eeeeee bg:#222222                    \',\n#     Token.Sidebar.Selected.Status:                        \'#ffffff bg:#444444 bold               \',\n#     Token.Sidebar.Separator:                              \'#ffffff bg:#bbbbbb underline          \',\n#     Token.Sidebar.Key:                                    \'#000000 bg:#bbddbb bold               \',\n#     Token.Sidebar.Key.Description:                        \'#000000 bg:#bbbbbb                    \',\n#     Token.Sidebar.HelpText:                               \'#000011 bg:#eeeeff                    \',\n#     Token.History.Line:                                   \'                                      \',\n#     Token.History.Line.Selected:                          \'#000000 bg:#008800                    \',\n#     Token.History.Line.Current:                           \'#000000 bg:#ffffff                    \',\n#     Token.History.Line.Selected.Current:                  \'#000000 bg:#88ff88                    \',\n#     Token.History.ExistingInput:                          \'#888888                               \',\n#     Token.Window.Border:                                  \'#0000bb                               \',\n#     Token.Window.Title:                                   \'#000000 bg:#bbbbbb                    \',\n#     Token.Window.TIItleV2:                                \'#000000 bg:#6688bb bold               \',\n#     Token.AcceptMessage:                                  \'#444444 bg:#ffff88                    \',\n#     Token.ExitConfirmation:                               \'#ffffff bg:#884444                    \',\n#     Token.Aborted:                                        \'#777777                      noinherit\',\n#     Token.Sidebar:                                        \'#ffffff bg:#444444           noinherit\',\n#     Token.Sidebar.Title:                                  \'#080808 bg:#997700 bold      noinherit\',\n#     Token.Sidebar.Label:                                  \'#dddddd bg:#444444           noinherit\',\n#     Token.Sidebar.Status:                                 \'#ffffee bg:#222222           noinherit\',\n#     Token.Sidebar.Selected.Label:                         \'#111111 bg:#dddddd           noinherit\',\n#     Token.Sidebar.Selected.Status:                        \'#080808 bg:#bbbbbb bold      noinherit\',\n#     Token.Sidebar.Separator:                              \'#080808 bg:#444444 underline noinherit\',\n#     Token.Sidebar.Key:                                    \'#ffffff bg:#442244 bold      noinherit\',\n#     Token.Sidebar.Key.Description:                        \'#ffffff bg:#444444           noinherit\',\n#     Token.Sidebar.HelpText:                               \'#ffffee bg:#111100           noinherit\',\n#     Token.History.Line:                                   \'                             noinherit\',\n#     Token.History.Line.Selected:                          \'#ffffff bg:#ff77ff           noinherit\',\n#     Token.History.Line.Current:                           \'#ffffff bg:#000000           noinherit\',\n#     Token.History.Line.Selected.Current:                  \'#ffffff bg:#770077           noinherit\',\n#     Token.History.ExistingInput:                          \'#777777                      noinherit\',\n#     Token.Window.Border:                                  \'#ffff44                      noinherit\',\n#     Token.Window.Title:                                   \'#ffffff bg:#444444           noinherit\',\n#     Token.Window.TIItleV2:                                \'#ffffff bg:#997744 bold      noinherit\',\n#     Token.AcceptMessage:                                  \'#bbbbbb bg:#000077           noinherit\',\n#     Token.ExitConfirmation:                               \'#080808 bg:#77bbbb           noinherit\',\n#     Token.LineNumber:                                     \'#aa6666 bg:#222222           noinherit\',\n#     Token.SearchMatch:                                    \'#ffffff bg:#4444aa           noinherit\',\n#     Token.SearchMatch.Current:                            \'#ffffff bg:#44aa44           noinherit\',\n#     Token.SelectedText:                                   \'#ffffff bg:#6666aa           noinherit\',\n#     Token.Toolbar.Completions.Arrow:                      \'#bf954c bg:#000046 bold      noinherit\',\n#     Token.Toolbar.Completions.Completion:                 \'#bf954c bg:#000046           noinherit\',\n#     Token.Toolbar.Completions.Completion.Current:         \'#6a5100 bg:#f0ffff           noinherit\',\n#     Token.Menu.Completions.Completion:                    \'#ff954c bg:#202046           noinherit\',\n#     Token.Menu.Completions.Completion.Current:            \'#202046 bg:#ff954c           noinherit\',\n#     Token.Menu.Completions.Meta:                          \'#ff684c bg:#000046           noinherit\',\n#     Token.Menu.Completions.Meta.Current:                  \'#ff7e00 bg:#000046           noinherit\',\n#     Token.Menu.Completions.ProgressBar:                   \'        bg:#ff7ed4           noinherit\',\n#     Token.Menu.Completions.ProgressButton:                \'        bg:#460000           noinherit\',\n# }\n\ndark = {}\ndark.update(default_ui_style)\ndark.update({\n    Token.Aborted:                                \'#777777                      \',\n    Token.Sidebar:                                \'#ffffff bg:#444444           \',\n    Token.Sidebar.Title:                          \'#000000 bg:#777777 bold      \',\n    Token.Sidebar.Label:                          \'#dddddd bg:#444444           \',\n    Token.Sidebar.Status:                         \'#ffffff bg:#222222           \',\n    Token.Sidebar.Selected.Label:                 \'#111111 bg:#dddddd           \',\n    Token.Sidebar.Selected.Status:                \'#000000 bg:#bbbbbb bold      \',\n    Token.Sidebar.Separator:                      \'#000000 bg:#444444 underline \',\n    Token.Sidebar.Key:                            \'#ffffff bg:#222222 bold      \',\n    Token.Sidebar.Key.Description:                \'#ffffff bg:#444444           \',\n    Token.Sidebar.HelpText:                       \'#ffffff bg:#111111           \',\n    Token.History.Line:                           \'                             \',\n    Token.History.Line.Selected:                  \'#ffffff bg:#777777           \',\n    Token.History.Line.Current:                   \'#ffffff bg:#000000           \',\n    Token.History.Line.Selected.Current:          \'#ffffff bg:#000000           \',\n    Token.History.ExistingInput:                  \'#777777                      \',\n    Token.Window.Border:                          \'#ffffff                      \',\n    Token.Window.Title:                           \'#ffffff bg:#444444           \',\n    Token.Window.TIItleV2:                        \'#ffffff bg:#777777 bold      \',\n    Token.AcceptMessage:                          \'#bbbbbb bg:#000000           \',\n    Token.ExitConfirmation:                       \'#000000 bg:#bbbbbb           \',\n    Token.LineNumber:                             \'#666666 bg:#222222           \',\n    Token.SearchMatch:                            \'#ffffff bg:#444444           \',\n    Token.SearchMatch.Current:                    \'#ffffff bg:#aaaaaa           \',\n    Token.SelectedText:                           \'#ffffff bg:#666666           \',\n    Token.Toolbar.Completions.Arrow:              \'#959595 bg:#000000 bold      \',\n    Token.Toolbar.Completions.Completion:         \'#959595 bg:#000000           \',\n    Token.Toolbar.Completions.Completion.Current: \'#515151 bg:#ffffff           \',\n    Token.Menu.Completions.Completion:            \'#959595 bg:#202020           \',\n    Token.Menu.Completions.Completion.Current:    \'#202020 bg:#959595           \',\n    Token.Menu.Completions.Meta:                  \'#686868 bg:#000000           \',\n    Token.Menu.Completions.Meta.Current:          \'#7e7e7e bg:#000000           \',\n    Token.Menu.Completions.ProgressBar:           \'        bg:#7e7e7e           \',\n    Token.Menu.Completions.ProgressButton:        \'        bg:#000000           \',\n})\n\n\n\nchirpy={\n    Token.LineNumber:                                     \'#aa66aa bg:#220022                    \',\n    Token.Prompt:                                         \'                   bold               \',\n    Token.Prompt.Dots:                                    \'                             noinherit\',\n    Token.In:                                             \'#008800            bold               \',\n    Token.In.Number:                                      \'                                      \',\n    Token.Out:                                            \'#ff00ff                               \',\n    Token.Out.Number:                                     \'#ff00ff                               \',\n    Token.Separator:                                      \'#bbbbbb                               \',\n    Token.Toolbar.Search:                                 \'#22aa22                      noinherit\',\n    Token.Toolbar.Search.Text:                            \'                             noinherit\',\n    Token.Toolbar.System:                                 \'#22aa22                      noinherit\',\n    Token.Toolbar.Arg:                                    \'#22aa22                      noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                             noinherit\',\n    Token.Toolbar.Signature:                              \'#000000 bg:#bb44bb                    \',\n    Token.Toolbar.Signature.CurrentName:                  \'#ffffff bg:#880088 bold               \',\n    Token.Toolbar.Signature.Operator:                     \'#000000            bold               \',\n    Token.Docstring:                                      \'#888888                               \',\n    Token.Toolbar.Validation:                             \'#aaaaaa bg:#004400                    \',\n    Token.Toolbar.Status:                                 \'#aaaaaa bg:#222222                    \',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'#22aa22 bg:#222222                    \',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'#aa22aa bg:#222222                    \',\n    Token.Toolbar.Status.Title:                           \'                   underline          \',\n    Token.Toolbar.Status.InputMode:                       \'#ffffff bg:#222222                    \',\n    Token.Toolbar.Status.Key:                             \'#888888 bg:#000000                    \',\n    Token.Toolbar.Status.PasteModeOn:                     \'#ffffff bg:#44aa44                    \',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'#aaaaaa bg:#226622                    \',\n    Token.Toolbar.Status.PythonVersion:                   \'#ffffff bg:#222222 bold               \',\n    Token.Aborted:                                        \'#888888                               \',\n    Token.Sidebar:                                        \'#000000 bg:#bbbbbb                    \',\n    Token.Sidebar.Title:                                  \'#ffffff bg:#886688 bold               \',\n    Token.Sidebar.Label:                                  \'#222222 bg:#bbbbbb                    \',\n    Token.Sidebar.Status:                                 \'#000000 bg:#dddddd                    \',\n    Token.Sidebar.Selected.Label:                         \'#eeeeee bg:#222222                    \',\n    Token.Sidebar.Selected.Status:                        \'#ffffff bg:#444444 bold               \',\n    Token.Sidebar.Separator:                              \'#ffffff bg:#bbbbbb underline          \',\n    Token.Sidebar.Key:                                    \'#000000 bg:#ddbbdd bold               \',\n    Token.Sidebar.Key.Description:                        \'#000000 bg:#bbbbbb                    \',\n    Token.Sidebar.HelpText:                               \'#000000 bg:#eeeeee                    \',\n    Token.History.Line:                                   \'                                      \',\n    Token.History.Line.Selected:                          \'#000000 bg:#880088                    \',\n    Token.History.Line.Current:                           \'#000000 bg:#ffffff                    \',\n    Token.History.Line.Selected.Current:                  \'#000000 bg:#ff88ff                    \',\n    Token.History.ExistingInput:                          \'#888888                               \',\n    Token.Window.Border:                                  \'#000000                               \',\n    Token.Window.Title:                                   \'#000000 bg:#bbbbbb                    \',\n    Token.Window.TIItleV2:                                \'#000000 bg:#886688 bold               \',\n    Token.AcceptMessage:                                  \'#444444 bg:#ffffff                    \',\n    Token.ExitConfirmation:                               \'#ffffff bg:#448844                    \',\n    Token.Aborted:                                        \'#777777                      noinherit\',\n    Token.Sidebar:                                        \'#ffffff bg:#444444           noinherit\',\n    Token.Sidebar.Title:                                  \'#080808 bg:#779977 bold      noinherit\',\n    Token.Sidebar.Label:                                  \'#dddddd bg:#444444           noinherit\',\n    Token.Sidebar.Status:                                 \'#ffffff bg:#222222           noinherit\',\n    Token.Sidebar.Selected.Label:                         \'#111111 bg:#dddddd           noinherit\',\n    Token.Sidebar.Selected.Status:                        \'#080808 bg:#bbbbbb bold      noinherit\',\n    Token.Sidebar.Separator:                              \'#080808 bg:#444444 underline noinherit\',\n    Token.Sidebar.Key:                                    \'#ffffff bg:#224422 bold      noinherit\',\n    Token.Sidebar.Key.Description:                        \'#ffffff bg:#444444           noinherit\',\n    Token.Sidebar.HelpText:                               \'#ffffff bg:#111111           noinherit\',\n    Token.History.Line:                                   \'                             noinherit\',\n    Token.History.Line.Selected:                          \'#ffffff bg:#77ff77           noinherit\',\n    Token.History.Line.Current:                           \'#ffffff bg:#000000           noinherit\',\n    Token.History.Line.Selected.Current:                  \'#ffffff bg:#007700           noinherit\',\n    Token.History.ExistingInput:                          \'#777777                      noinherit\',\n    Token.Window.Border:                                  \'#ffffff                      noinherit\',\n    Token.Window.Title:                                   \'#ffffff bg:#444444           noinherit\',\n    Token.Window.TIItleV2:                                \'#ffffff bg:#779977 bold      noinherit\',\n    Token.AcceptMessage:                                  \'#bbbbbb bg:#000000           noinherit\',\n    Token.ExitConfirmation:                               \'#080808 bg:#bb77bb           noinherit\',\n    Token.LineNumber:                                     \'#aa66aa bg:#222222           noinherit\',\n    Token.SearchMatch:                                    \'#ffffff bg:#444444           noinherit\',\n    Token.SearchMatch.Current:                            \'#ffffff bg:#aa44aa           noinherit\',\n    Token.SelectedText:                                   \'#ffffff bg:#666666           noinherit\',\n    Token.Toolbar.Completions.Arrow:                      \'#bf95bf bg:#000000 bold      noinherit\',\n    Token.Toolbar.Completions.Completion:                 \'#bf95bf bg:#000000           noinherit\',\n    Token.Toolbar.Completions.Completion.Current:         \'#6a516a bg:#fff0ff           noinherit\',\n    Token.Menu.Completions.Completion:                    \'#ff95ff bg:#202020           noinherit\',\n    Token.Menu.Completions.Completion.Current:            \'#202020 bg:#95ff95           noinherit\',\n    Token.Menu.Completions.Meta:                          \'#ff68ff bg:#000000           noinherit\',\n    Token.Menu.Completions.Meta.Current:                  \'#ff7eff bg:#000000           noinherit\',\n    Token.Menu.Completions.ProgressBar:                   \'        bg:#7eff7e           noinherit\',\n    Token.Menu.Completions.ProgressButton:                \'        bg:#004600           noinherit\',\n}\n\njenny=plain.copy()\njenny.update({\n    Token.LineNumber:                                     \'#aa66aa           noinherit\',\n    Token.Prompt:                                         \'        bold      noinherit\',\n    Token.Prompt.Dots:                                    \'                  noinherit\',\n    Token.In:                                             \'#008800 bold      noinherit\',\n    Token.In.Number:                                      \'                  noinherit\',\n    Token.Out:                                            \'#ff00ff           noinherit\',\n    Token.Out.Number:                                     \'#ff00ff           noinherit\',\n    Token.Separator:                                      \'#bbbbbb           noinherit\',\n    Token.Toolbar.Search:                                 \'#22aa22           noinherit\',\n    Token.Toolbar.Search.Text:                            \'                  noinherit\',\n    Token.Toolbar.System:                                 \'#22aa22           noinherit\',\n    Token.Toolbar.Arg:                                    \'#22aa22           noinherit\',\n    Token.Toolbar.Arg.Text:                               \'                  noinherit\',\n    Token.Toolbar.Signature:                              \'#808080           noinherit\',\n    Token.Toolbar.Signature.CurrentName:                  \'#ffffff bold      noinherit\',\n    Token.Toolbar.Signature.Operator:                     \'#808080 bold      noinherit\',\n    Token.Docstring:                                      \'#888888           noinherit\',\n    Token.Toolbar.Validation:                             \'#aaaaaa           noinherit\',\n    Token.Toolbar.Status:                                 \'#aaaaaa           noinherit\',\n    Token.Toolbar.Status.BatteryPluggedIn:                \'#22aa22           noinherit\',\n    Token.Toolbar.Status.BatteryNotPluggedIn:             \'#aa22aa           noinherit\',\n    Token.Toolbar.Status.Title:                           \'        underline noinherit\',\n    Token.Toolbar.Status.InputMode:                       \'#ffffff           noinherit\',\n    Token.Toolbar.Status.Key:                             \'#888888           noinherit\',\n    Token.Toolbar.Status.PasteModeOn:                     \'#ffffff           noinherit\',\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:   \'#aaaaaa           noinherit\',\n    Token.Toolbar.Status.PythonVersion:                   \'#ffffff bold      noinherit\',\n    Token.Aborted:                                        \'#888888           noinherit\',\n    Token.Sidebar:                                        \'#808080           noinherit\',\n    Token.Sidebar.Title:                                  \'#ffffff bold      noinherit\',\n    Token.Sidebar.Label:                                  \'#222222           noinherit\',\n    Token.Sidebar.Status:                                 \'#808080           noinherit\',\n    Token.Sidebar.Selected.Label:                         \'#eeeeee           noinherit\',\n    Token.Sidebar.Selected.Status:                        \'#ffffff bold      noinherit\',\n    Token.Sidebar.Separator:                              \'#ffffff underline noinherit\',\n    Token.Sidebar.Key:                                    \'#808080 bold      noinherit\',\n    Token.Sidebar.Key.Description:                        \'#808080           noinherit\',\n    Token.Sidebar.HelpText:                               \'#808080           noinherit\',\n    Token.History.Line:                                   \'                  noinherit\',\n    Token.History.Line.Selected:                          \'#808080           noinherit\',\n    Token.History.Line.Current:                           \'#808080           noinherit\',\n    Token.History.Line.Selected.Current:                  \'#808080           noinherit\',\n    Token.History.ExistingInput:                          \'#888888           noinherit\',\n    Token.Window.Border:                                  \'#808080           noinherit\',\n    Token.Window.Title:                                   \'#808080           noinherit\',\n    Token.Window.TIItleV2:                                \'#808080 bold      noinherit\',\n    Token.AcceptMessage:                                  \'#444444           noinherit\',\n    Token.ExitConfirmation:                               \'#ffffff           noinherit\',\n    Token.Aborted:                                        \'#777777           noinherit\',\n    Token.Sidebar:                                        \'#ffffff           noinherit\',\n    Token.Sidebar.Title:                                  \'#808080 bold      noinherit\',\n    Token.Sidebar.Label:                                  \'#dddddd           noinherit\',\n    Token.Sidebar.Status:                                 \'#ffffff           noinherit\',\n    Token.Sidebar.Selected.Label:                         \'#ffffff underline noinherit\',\n    Token.Sidebar.Selected.Status:                        \'#808080 bold      noinherit\',\n    Token.Sidebar.Separator:                              \'#808080           noinherit\',\n    Token.Sidebar.Key:                                    \'#ffffff bold      noinherit\',\n    Token.Sidebar.Key.Description:                        \'#ffffff           noinherit\',\n    Token.Sidebar.HelpText:                               \'#ffffff           noinherit\',\n    Token.History.Line:                                   \'                  noinherit\',\n    Token.History.Line.Selected:                          \'#ffffff           noinherit\',\n    Token.History.Line.Current:                           \'#ffffff           noinherit\',\n    Token.History.Line.Selected.Current:                  \'#ffffff           noinherit\',\n    Token.History.ExistingInput:                          \'#777777           noinherit\',\n    Token.Window.Border:                                  \'#ffffff           noinherit\',\n    Token.Window.Title:                                   \'#ffffff           noinherit\',\n    Token.Window.TIItleV2:                                \'#ffffff bold      noinherit\',\n    Token.AcceptMessage:                                  \'#bbbbbb           noinherit\',\n    Token.ExitConfirmation:                               \'#808080           noinherit\',\n    Token.LineNumber:                                     \'#aa66aa           noinherit\',\n    Token.SearchMatch:                                    \'#ffffff           noinherit\',\n    Token.SearchMatch.Current:                            \'#ffffff           noinherit\',\n    Token.SelectedText:                                   \'#ffffff           noinherit\',\n    Token.Toolbar.Completions.Arrow:                      \'#bf95bf underline noinherit\',\n    Token.Toolbar.Completions.Completion:                 \'#bf95bf           noinherit\',\n    Token.Toolbar.Completions.Completion.Current:         \'#FFFFFF underline noinherit\',\n    Token.Menu.Completions.Completion:                    \'#ff95ff           noinherit\',\n    Token.Menu.Completions.Completion.Current:            \'#FFFFFF underline noinherit\',\n    Token.Menu.Completions.Meta:                          \'#ff68ff           noinherit\',\n    Token.Menu.Completions.Meta.Current:                  \'#ff7eff           noinherit\',\n    Token.Menu.Completions.ProgressBar:                   \'                  noinherit\',\n    Token.Menu.Completions.ProgressButton:                \'                  noinherit\',\n})\n\n\n\n\nrandom=plain.copy()\nrandom.update({\n    Token.LineNumber:                                    random_style(),\n    Token.Prompt:                                        random_style(),\n    Token.Prompt.Dots:                                   random_style(),\n    Token.In:                                            random_style(),\n    Token.In.Number:                                     random_style(),\n    Token.Out:                                           random_style(),\n    Token.Out.Number:                                    random_style(),\n    Token.Separator:                                     random_style(),\n    Token.Toolbar.Search:                                random_style(),\n    Token.Toolbar.Search.Text:                           random_style(),\n    Token.Toolbar.System:                                random_style(),\n    Token.Toolbar.Arg:                                   random_style(),\n    Token.Toolbar.Arg.Text:                              random_style(),\n    Token.Toolbar.Signature:                             random_style(),\n    Token.Toolbar.Signature.CurrentName:                 random_style(),\n    Token.Toolbar.Signature.Operator:                    random_style(),\n    Token.Docstring:                                     random_style(),\n    Token.Toolbar.Validation:                            random_style(),\n    Token.Toolbar.Status:                                random_style(),\n    Token.Toolbar.Status.BatteryPluggedIn:               random_style(),\n    Token.Toolbar.Status.BatteryNotPluggedIn:            random_style(),\n    Token.Toolbar.Status.Title:                          random_style(),\n    Token.Toolbar.Status.InputMode:                      random_style(),\n    Token.Toolbar.Status.Key:                            random_style(),\n    Token.Toolbar.Status.PasteModeOn:                    random_style(),\n    Token.Toolbar.Status.PseudoTerminalCurrentVariable:  random_style(),\n    Token.Toolbar.Status.PythonVersion:                  random_style(),\n    Token.Aborted:                                       random_style(),\n    Token.Sidebar:                                       random_style(),\n    Token.Sidebar.Title:                                 random_style(),\n    Token.Sidebar.Label:                                 random_style(),\n    Token.Sidebar.Status:                                random_style(),\n    Token.Sidebar.Selected.Label:                        random_style(),\n    Token.Sidebar.Selected.Status:                       random_style(),\n    Token.Sidebar.Separator:                             random_style(),\n    Token.Sidebar.Key:                                   random_style(),\n    Token.Sidebar.Key.Description:                       random_style(),\n    Token.Sidebar.HelpText:                              random_style(),\n    Token.History.Line:                                  random_style(),\n    Token.History.Line.Selected:                         random_style(),\n    Token.History.Line.Current:                          random_style(),\n    Token.History.Line.Selected.Current:                 random_style(),\n    Token.History.ExistingInput:                         random_style(),\n    Token.Window.Border:                                 random_style(),\n    Token.Window.Title:                                  random_style(),\n    Token.Window.TIItleV2:                               random_style(),\n    Token.AcceptMessage:                                 random_style(),\n    Token.ExitConfirmation:                              random_style(),\n    Token.Aborted:                                       random_style(),\n    Token.Sidebar:                                       random_style(),\n    Token.Sidebar.Title:                                 random_style(),\n    Token.Sidebar.Label:                                 random_style(),\n    Token.Sidebar.Status:                                random_style(),\n    Token.Sidebar.Selected.Label:                        random_style(),\n    Token.Sidebar.Selected.Status:                       random_style(),\n    Token.Sidebar.Separator:                             random_style(),\n    Token.Sidebar.Key:                                   random_style(),\n    Token.Sidebar.Key.Description:                       random_style(),\n    Token.Sidebar.HelpText:                              random_style(),\n    Token.History.Line:                                  random_style(),\n    Token.History.Line.Selected:                         random_style(),\n    Token.History.Line.Current:                          random_style(),\n    Token.History.Line.Selected.Current:                 random_style(),\n    Token.History.ExistingInput:                         random_style(),\n    Token.Window.Border:                                 random_style(),\n    Token.Window.Title:                                  random_style(),\n    Token.Window.TIItleV2:                               random_style(),\n    Token.AcceptMessage:                                 random_style(),\n    Token.ExitConfirmation:                              random_style(),\n    Token.LineNumber:                                    random_style(),\n    Token.SearchMatch:                                   random_style(),\n    Token.SearchMatch.Current:                           random_style(),\n    Token.SelectedText:                                  random_style(),\n    Token.Toolbar.Completions.Arrow:                     random_style(),\n    Token.Toolbar.Completions.Completion:                random_style(),\n    Token.Toolbar.Completions.Completion.Current:        random_style(),\n    Token.Menu.Completions.Completion:                   random_style(),\n    Token.Menu.Completions.Completion.Current:           random_style(),\n    Token.Menu.Completions.Meta:                         random_style(),\n    Token.Menu.Completions.Meta.Current:                 random_style(),\n    Token.Menu.Completions.ProgressBar:                  random_style(),\n    Token.Menu.Completions.ProgressButton:               random_style(),\n})'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Tue Oct 26, 2021 at 8:51:56PM     ###########
############################################################
ans=2**2**2**2


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 1:27:59AM     ###########
############################################################
ans='/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 1:43:58AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2/src');sys.path.append(os.getcwd())# CD src
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CD ..
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 1:40:45AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/src');sys.path.append(os.getcwd())# CDB
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CD Lab-In-A-Cube_2
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2/src');sys.path.append(os.getcwd())# CD src
ans='index.js'
ans='/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/src/index.js'
__import__('rp').copy_path(ans,'.')
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder');sys.path.append(os.getcwd())# CD lab-simulation-builder
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/public');sys.path.append(os.getcwd())# CD public
print(ans)
ans='/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/public'
ans=__import__('rp').web_copy_path(ans)
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder');sys.path.append(os.getcwd())# CD ..
ans='./node_modules/react-scripts'
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/node_modules/react-scripts');sys.path.append(os.getcwd())# CD ./node_modules/react-scripts
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/node_modules');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/node_modules/react-scripts');sys.path.append(os.getcwd())# CDB
print("FCH->FileCopyHere");__import__('rp').web_copy_path('.')
print("FCH->FileCopyHere");__import__('rp').web_copy_path('.')
ans='/Users/Ryan/Desktop/CleanCode/Sandbox/lab-simulation-builder/node_modules/react-scripts'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 2:06:28AM     ###########
############################################################
ans = '/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube-New/package-lock.json'
ans='{\n  "name": "liac",\n  "version": "0.1.0",\n  "lockfileVersion": 1,\n  "requires": true,\n  "dependencies": {\n    "@babel/code-frame": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.0.0.tgz",\n      "integrity": "sha512-OfC2uemaknXr87bdLUkWog7nYuliM9Ij5HUcajsVcMCpQrcLmtxRbVFTIqmcSkSeYRBFBRxs2FiUqFJDLdiebA==",\n      "requires": {\n        "@babel/highlight": "^7.0.0"\n      }\n    },\n    "@babel/core": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.4.3.tgz",\n      "integrity": "sha512-oDpASqKFlbspQfzAE7yaeTmdljSH2ADIvBlb0RwbStltTuWa0+7CCI1fYVINNv9saHPa1W7oaKeuNuKj+RQCvA==",\n      "requires": {\n        "@babel/code-frame": "^7.0.0",\n        "@babel/generator": "^7.4.0",\n        "@babel/helpers": "^7.4.3",\n        "@babel/parser": "^7.4.3",\n        "@babel/template": "^7.4.0",\n        "@babel/traverse": "^7.4.3",\n        "@babel/types": "^7.4.0",\n        "convert-source-map": "^1.1.0",\n        "debug": "^4.1.0",\n        "json5": "^2.1.0",\n        "lodash": "^4.17.11",\n        "resolve": "^1.3.2",\n        "semver": "^5.4.1",\n        "source-map": "^0.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "@babel/generator": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.4.0.tgz",\n      "integrity": "sha512-/v5I+a1jhGSKLgZDcmAUZ4K/VePi43eRkUs3yePW1HB1iANOD5tqJXwGSG4BZhSksP8J9ejSlwGeTiiOFZOrXQ==",\n      "requires": {\n        "@babel/types": "^7.4.0",\n        "jsesc": "^2.5.1",\n        "lodash": "^4.17.11",\n        "source-map": "^0.5.0",\n        "trim-right": "^1.0.1"\n      }\n    },\n    "@babel/helper-annotate-as-pure": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.0.0.tgz",\n      "integrity": "sha512-3UYcJUj9kvSLbLbUIfQTqzcy5VX7GRZ/CCDrnOaZorFFM01aXp1+GJwuFGV4NDDoAS+mOUyHcO6UD/RfqOks3Q==",\n      "requires": {\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-builder-binary-assignment-operator-visitor": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.1.0.tgz",\n      "integrity": "sha512-qNSR4jrmJ8M1VMM9tibvyRAHXQs2PmaksQF7c1CGJNipfe3D8p+wgNwgso/P2A2r2mdgBWAXljNWR0QRZAMW8w==",\n      "requires": {\n        "@babel/helper-explode-assignable-expression": "^7.1.0",\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-builder-react-jsx": {\n      "version": "7.3.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-builder-react-jsx/-/helper-builder-react-jsx-7.3.0.tgz",\n      "integrity": "sha512-MjA9KgwCuPEkQd9ncSXvSyJ5y+j2sICHyrI0M3L+6fnS4wMSNDc1ARXsbTfbb2cXHn17VisSnU/sHFTCxVxSMw==",\n      "requires": {\n        "@babel/types": "^7.3.0",\n        "esutils": "^2.0.0"\n      }\n    },\n    "@babel/helper-call-delegate": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-call-delegate/-/helper-call-delegate-7.4.0.tgz",\n      "integrity": "sha512-SdqDfbVdNQCBp3WhK2mNdDvHd3BD6qbmIc43CAyjnsfCmgHMeqgDcM3BzY2lchi7HBJGJ2CVdynLWbezaE4mmQ==",\n      "requires": {\n        "@babel/helper-hoist-variables": "^7.4.0",\n        "@babel/traverse": "^7.4.0",\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@babel/helper-create-class-features-plugin": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.4.3.tgz",\n      "integrity": "sha512-UMl3TSpX11PuODYdWGrUeW6zFkdYhDn7wRLrOuNVM6f9L+S9CzmDXYyrp3MTHcwWjnzur1f/Op8A7iYZWya2Yg==",\n      "requires": {\n        "@babel/helper-function-name": "^7.1.0",\n        "@babel/helper-member-expression-to-functions": "^7.0.0",\n        "@babel/helper-optimise-call-expression": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-replace-supers": "^7.4.0",\n        "@babel/helper-split-export-declaration": "^7.4.0"\n      }\n    },\n    "@babel/helper-define-map": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-define-map/-/helper-define-map-7.4.0.tgz",\n      "integrity": "sha512-wAhQ9HdnLIywERVcSvX40CEJwKdAa1ID4neI9NXQPDOHwwA+57DqwLiPEVy2AIyWzAk0CQ8qx4awO0VUURwLtA==",\n      "requires": {\n        "@babel/helper-function-name": "^7.1.0",\n        "@babel/types": "^7.4.0",\n        "lodash": "^4.17.11"\n      }\n    },\n    "@babel/helper-explode-assignable-expression": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.1.0.tgz",\n      "integrity": "sha512-NRQpfHrJ1msCHtKjbzs9YcMmJZOg6mQMmGRB+hbamEdG5PNpaSm95275VD92DvJKuyl0s2sFiDmMZ+EnnvufqA==",\n      "requires": {\n        "@babel/traverse": "^7.1.0",\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-function-name": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.1.0.tgz",\n      "integrity": "sha512-A95XEoCpb3TO+KZzJ4S/5uW5fNe26DjBGqf1o9ucyLyCmi1dXq/B3c8iaWTfBk3VvetUxl16e8tIrd5teOCfGw==",\n      "requires": {\n        "@babel/helper-get-function-arity": "^7.0.0",\n        "@babel/template": "^7.1.0",\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-get-function-arity": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.0.0.tgz",\n      "integrity": "sha512-r2DbJeg4svYvt3HOS74U4eWKsUAMRH01Z1ds1zx8KNTPtpTL5JAsdFv8BNyOpVqdFhHkkRDIg5B4AsxmkjAlmQ==",\n      "requires": {\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-hoist-variables": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.4.0.tgz",\n      "integrity": "sha512-/NErCuoe/et17IlAQFKWM24qtyYYie7sFIrW/tIQXpck6vAu2hhtYYsKLBWQV+BQZMbcIYPU/QMYuTufrY4aQw==",\n      "requires": {\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@babel/helper-member-expression-to-functions": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.0.0.tgz",\n      "integrity": "sha512-avo+lm/QmZlv27Zsi0xEor2fKcqWG56D5ae9dzklpIaY7cQMK5N8VSpaNVPPagiqmy7LrEjK1IWdGMOqPu5csg==",\n      "requires": {\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-module-imports": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.0.0.tgz",\n      "integrity": "sha512-aP/hlLq01DWNEiDg4Jn23i+CXxW/owM4WpDLFUbpjxe4NS3BhLVZQ5i7E0ZrxuQ/vwekIeciyamgB1UIYxxM6A==",\n      "requires": {\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-module-transforms": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.4.3.tgz",\n      "integrity": "sha512-H88T9IySZW25anu5uqyaC1DaQre7ofM+joZtAaO2F8NBdFfupH0SZ4gKjgSFVcvtx/aAirqA9L9Clio2heYbZA==",\n      "requires": {\n        "@babel/helper-module-imports": "^7.0.0",\n        "@babel/helper-simple-access": "^7.1.0",\n        "@babel/helper-split-export-declaration": "^7.0.0",\n        "@babel/template": "^7.2.2",\n        "@babel/types": "^7.2.2",\n        "lodash": "^4.17.11"\n      }\n    },\n    "@babel/helper-optimise-call-expression": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.0.0.tgz",\n      "integrity": "sha512-u8nd9NQePYNQV8iPWu/pLLYBqZBa4ZaY1YWRFMuxrid94wKI1QNt67NEZ7GAe5Kc/0LLScbim05xZFWkAdrj9g==",\n      "requires": {\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-plugin-utils": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.0.0.tgz",\n      "integrity": "sha512-CYAOUCARwExnEixLdB6sDm2dIJ/YgEAKDM1MOeMeZu9Ld/bDgVo8aiWrXwcY7OBh+1Ea2uUcVRcxKk0GJvW7QA=="\n    },\n    "@babel/helper-regex": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helper-regex/-/helper-regex-7.4.3.tgz",\n      "integrity": "sha512-hnoq5u96pLCfgjXuj8ZLX3QQ+6nAulS+zSgi6HulUwFbEruRAKwbGLU5OvXkE14L8XW6XsQEKsIDfgthKLRAyA==",\n      "requires": {\n        "lodash": "^4.17.11"\n      }\n    },\n    "@babel/helper-remap-async-to-generator": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.1.0.tgz",\n      "integrity": "sha512-3fOK0L+Fdlg8S5al8u/hWE6vhufGSn0bN09xm2LXMy//REAF8kDCrYoOBKYmA8m5Nom+sV9LyLCwrFynA8/slg==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "^7.0.0",\n        "@babel/helper-wrap-function": "^7.1.0",\n        "@babel/template": "^7.1.0",\n        "@babel/traverse": "^7.1.0",\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-replace-supers": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.4.0.tgz",\n      "integrity": "sha512-PVwCVnWWAgnal+kJ+ZSAphzyl58XrFeSKSAJRiqg5QToTsjL+Xu1f9+RJ+d+Q0aPhPfBGaYfkox66k86thxNSg==",\n      "requires": {\n        "@babel/helper-member-expression-to-functions": "^7.0.0",\n        "@babel/helper-optimise-call-expression": "^7.0.0",\n        "@babel/traverse": "^7.4.0",\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@babel/helper-simple-access": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.1.0.tgz",\n      "integrity": "sha512-Vk+78hNjRbsiu49zAPALxTb+JUQCz1aolpd8osOF16BGnLtseD21nbHgLPGUwrXEurZgiCOUmvs3ExTu4F5x6w==",\n      "requires": {\n        "@babel/template": "^7.1.0",\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@babel/helper-split-export-declaration": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.4.0.tgz",\n      "integrity": "sha512-7Cuc6JZiYShaZnybDmfwhY4UYHzI6rlqhWjaIqbsJGsIqPimEYy5uh3akSRLMg65LSdSEnJ8a8/bWQN6u2oMGw==",\n      "requires": {\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@babel/helper-wrap-function": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.2.0.tgz",\n      "integrity": "sha512-o9fP1BZLLSrYlxYEYyl2aS+Flun5gtjTIG8iln+XuEzQTs0PLagAGSXUcqruJwD5fM48jzIEggCKpIfWTcR7pQ==",\n      "requires": {\n        "@babel/helper-function-name": "^7.1.0",\n        "@babel/template": "^7.1.0",\n        "@babel/traverse": "^7.1.0",\n        "@babel/types": "^7.2.0"\n      }\n    },\n    "@babel/helpers": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.4.3.tgz",\n      "integrity": "sha512-BMh7X0oZqb36CfyhvtbSmcWc3GXocfxv3yNsAEuM0l+fAqSO22rQrUpijr3oE/10jCTrB6/0b9kzmG4VetCj8Q==",\n      "requires": {\n        "@babel/template": "^7.4.0",\n        "@babel/traverse": "^7.4.3",\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@babel/highlight": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.0.0.tgz",\n      "integrity": "sha512-UFMC4ZeFC48Tpvj7C8UgLvtkaUuovQX+5xNWrsIoMG8o2z+XFKjKaN9iVmS84dPwVN00W4wPmqvYoZF3EGAsfw==",\n      "requires": {\n        "chalk": "^2.0.0",\n        "esutils": "^2.0.2",\n        "js-tokens": "^4.0.0"\n      }\n    },\n    "@babel/parser": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.4.3.tgz",\n      "integrity": "sha512-gxpEUhTS1sGA63EGQGuA+WESPR/6tz6ng7tSHFCmaTJK/cGK8y37cBTspX+U2xCAue2IQVvF6Z0oigmjwD8YGQ=="\n    },\n    "@babel/plugin-proposal-async-generator-functions": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.2.0.tgz",\n      "integrity": "sha512-+Dfo/SCQqrwx48ptLVGLdE39YtWRuKc/Y9I5Fy0P1DDBB9lsAHpjcEJQt+4IifuSOSTLBKJObJqMvaO1pIE8LQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-remap-async-to-generator": "^7.1.0",\n        "@babel/plugin-syntax-async-generators": "^7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-class-properties": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.4.0.tgz",\n      "integrity": "sha512-t2ECPNOXsIeK1JxJNKmgbzQtoG27KIlVE61vTqX0DKR9E9sZlVVxWUtEW9D5FlZ8b8j7SBNCHY47GgPKCKlpPg==",\n      "requires": {\n        "@babel/helper-create-class-features-plugin": "^7.4.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-proposal-decorators": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.4.0.tgz",\n      "integrity": "sha512-d08TLmXeK/XbgCo7ZeZ+JaeZDtDai/2ctapTRsWWkkmy7G/cqz8DQN/HlWG7RR4YmfXxmExsbU3SuCjlM7AtUg==",\n      "requires": {\n        "@babel/helper-create-class-features-plugin": "^7.4.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-decorators": "^7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-json-strings": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.2.0.tgz",\n      "integrity": "sha512-MAFV1CA/YVmYwZG0fBQyXhmj0BHCB5egZHCKWIFVv/XCxAeVGIHfos3SwDck4LvCllENIAg7xMKOG5kH0dzyUg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-json-strings": "^7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-object-rest-spread": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.4.3.tgz",\n      "integrity": "sha512-xC//6DNSSHVjq8O2ge0dyYlhshsH4T7XdCVoxbi5HzLYWfsC5ooFlJjrXk8RcAT+hjHAK9UjBXdylzSoDK3t4g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-object-rest-spread": "^7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-optional-catch-binding": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.2.0.tgz",\n      "integrity": "sha512-mgYj3jCcxug6KUcX4OBoOJz3CMrwRfQELPQ5560F70YQUBZB7uac9fqaWamKR1iWUzGiK2t0ygzjTScZnVz75g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-optional-catch-binding": "^7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-unicode-property-regex": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.4.0.tgz",\n      "integrity": "sha512-h/KjEZ3nK9wv1P1FSNb9G079jXrNYR0Ko+7XkOx85+gM24iZbPn0rh4vCftk+5QKY7y1uByFataBTmX7irEF1w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-regex": "^7.0.0",\n        "regexpu-core": "^4.5.4"\n      }\n    },\n    "@babel/plugin-syntax-async-generators": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.2.0.tgz",\n      "integrity": "sha512-1ZrIRBv2t0GSlcwVoQ6VgSLpLgiN/FVQUzt9znxo7v2Ov4jJrs8RY8tv0wvDmFN3qIdMKWrmMMW6yZ0G19MfGg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-decorators": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.2.0.tgz",\n      "integrity": "sha512-38QdqVoXdHUQfTpZo3rQwqQdWtCn5tMv4uV6r2RMfTqNBuv4ZBhz79SfaQWKTVmxHjeFv/DnXVC/+agHCklYWA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-dynamic-import": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.2.0.tgz",\n      "integrity": "sha512-mVxuJ0YroI/h/tbFTPGZR8cv6ai+STMKNBq0f8hFxsxWjl94qqhsb+wXbpNMDPU3cfR1TIsVFzU3nXyZMqyK4w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-flow": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-flow/-/plugin-syntax-flow-7.2.0.tgz",\n      "integrity": "sha512-r6YMuZDWLtLlu0kqIim5o/3TNRAlWb073HwT3e2nKf9I8IIvOggPrnILYPsrrKilmn/mYEMCf/Z07w3yQJF6dg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-json-strings": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.2.0.tgz",\n      "integrity": "sha512-5UGYnMSLRE1dqqZwug+1LISpA403HzlSfsg6P9VXU6TBjcSHeNlw4DxDx7LgpF+iKZoOG/+uzqoRHTdcUpiZNg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-jsx": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.2.0.tgz",\n      "integrity": "sha512-VyN4QANJkRW6lDBmENzRszvZf3/4AXaj9YR7GwrWeeN9tEBPuXbmDYVU9bYBN0D70zCWVwUy0HWq2553VCb6Hw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-object-rest-spread": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.2.0.tgz",\n      "integrity": "sha512-t0JKGgqk2We+9may3t0xDdmneaXmyxq0xieYcKHxIsrJO64n1OiMWNUtc5gQK1PA0NpdCRrtZp4z+IUaKugrSA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-optional-catch-binding": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.2.0.tgz",\n      "integrity": "sha512-bDe4xKNhb0LI7IvZHiA13kff0KEfaGX/Hv4lMA9+7TEc63hMNvfKo6ZFpXhKuEp+II/q35Gc4NoMeDZyaUbj9w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-typescript": {\n      "version": "7.3.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.3.3.tgz",\n      "integrity": "sha512-dGwbSMA1YhVS8+31CnPR7LB4pcbrzcV99wQzby4uAfrkZPYZlQ7ImwdpzLqi6Z6IL02b8IAL379CaMwo0x5Lag==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-arrow-functions": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.2.0.tgz",\n      "integrity": "sha512-ER77Cax1+8/8jCB9fo4Ud161OZzWN5qawi4GusDuRLcDbDG+bIGYY20zb2dfAFdTRGzrfq2xZPvF0R64EHnimg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-async-to-generator": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.4.0.tgz",\n      "integrity": "sha512-EeaFdCeUULM+GPFEsf7pFcNSxM7hYjoj5fiYbyuiXobW4JhFnjAv9OWzNwHyHcKoPNpAfeRDuW6VyaXEDUBa7g==",\n      "requires": {\n        "@babel/helper-module-imports": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-remap-async-to-generator": "^7.1.0"\n      }\n    },\n    "@babel/plugin-transform-block-scoped-functions": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.2.0.tgz",\n      "integrity": "sha512-ntQPR6q1/NKuphly49+QiQiTN0O63uOwjdD6dhIjSWBI5xlrbUFh720TIpzBhpnrLfv2tNH/BXvLIab1+BAI0w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-block-scoping": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.4.0.tgz",\n      "integrity": "sha512-AWyt3k+fBXQqt2qb9r97tn3iBwFpiv9xdAiG+Gr2HpAZpuayvbL55yWrsV3MyHvXk/4vmSiedhDRl1YI2Iy5nQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "lodash": "^4.17.11"\n      }\n    },\n    "@babel/plugin-transform-classes": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.4.3.tgz",\n      "integrity": "sha512-PUaIKyFUDtG6jF5DUJOfkBdwAS/kFFV3XFk7Nn0a6vR7ZT8jYw5cGtIlat77wcnd0C6ViGqo/wyNf4ZHytF/nQ==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "^7.0.0",\n        "@babel/helper-define-map": "^7.4.0",\n        "@babel/helper-function-name": "^7.1.0",\n        "@babel/helper-optimise-call-expression": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-replace-supers": "^7.4.0",\n        "@babel/helper-split-export-declaration": "^7.4.0",\n        "globals": "^11.1.0"\n      }\n    },\n    "@babel/plugin-transform-computed-properties": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.2.0.tgz",\n      "integrity": "sha512-kP/drqTxY6Xt3NNpKiMomfgkNn4o7+vKxK2DDKcBG9sHj51vHqMBGy8wbDS/J4lMxnqs153/T3+DmCEAkC5cpA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-destructuring": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.4.3.tgz",\n      "integrity": "sha512-rVTLLZpydDFDyN4qnXdzwoVpk1oaXHIvPEOkOLyr88o7oHxVc/LyrnDx+amuBWGOwUb7D1s/uLsKBNTx08htZg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-dotall-regex": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.4.3.tgz",\n      "integrity": "sha512-9Arc2I0AGynzXRR/oPdSALv3k0rM38IMFyto7kOCwb5F9sLUt2Ykdo3V9yUPR+Bgr4kb6bVEyLkPEiBhzcTeoA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-regex": "^7.4.3",\n        "regexpu-core": "^4.5.4"\n      }\n    },\n    "@babel/plugin-transform-duplicate-keys": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.2.0.tgz",\n      "integrity": "sha512-q+yuxW4DsTjNceUiTzK0L+AfQ0zD9rWaTLiUqHA8p0gxx7lu1EylenfzjeIWNkPy6e/0VG/Wjw9uf9LueQwLOw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-exponentiation-operator": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.2.0.tgz",\n      "integrity": "sha512-umh4hR6N7mu4Elq9GG8TOu9M0bakvlsREEC+ialrQN6ABS4oDQ69qJv1VtR3uxlKMCQMCvzk7vr17RHKcjx68A==",\n      "requires": {\n        "@babel/helper-builder-binary-assignment-operator-visitor": "^7.1.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-flow-strip-types": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-flow-strip-types/-/plugin-transform-flow-strip-types-7.4.0.tgz",\n      "integrity": "sha512-C4ZVNejHnfB22vI2TYN4RUp2oCmq6cSEAg4RygSvYZUECRqUu9O4PMEMNJ4wsemaRGg27BbgYctG4BZh+AgIHw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-flow": "^7.2.0"\n      }\n    },\n    "@babel/plugin-transform-for-of": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.4.3.tgz",\n      "integrity": "sha512-UselcZPwVWNSURnqcfpnxtMehrb8wjXYOimlYQPBnup/Zld426YzIhNEvuRsEWVHfESIECGrxoI6L5QqzuLH5Q==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-function-name": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.4.3.tgz",\n      "integrity": "sha512-uT5J/3qI/8vACBR9I1GlAuU/JqBtWdfCrynuOkrWG6nCDieZd5przB1vfP59FRHBZQ9DC2IUfqr/xKqzOD5x0A==",\n      "requires": {\n        "@babel/helper-function-name": "^7.1.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.2.0.tgz",\n      "integrity": "sha512-2ThDhm4lI4oV7fVQ6pNNK+sx+c/GM5/SaML0w/r4ZB7sAneD/piDJtwdKlNckXeyGK7wlwg2E2w33C/Hh+VFCg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-member-expression-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.2.0.tgz",\n      "integrity": "sha512-HiU3zKkSU6scTidmnFJ0bMX8hz5ixC93b4MHMiYebmk2lUVNGOboPsqQvx5LzooihijUoLR/v7Nc1rbBtnc7FA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-modules-amd": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.2.0.tgz",\n      "integrity": "sha512-mK2A8ucqz1qhrdqjS9VMIDfIvvT2thrEsIQzbaTdc5QFzhDjQv2CkJJ5f6BXIkgbmaoax3zBr2RyvV/8zeoUZw==",\n      "requires": {\n        "@babel/helper-module-transforms": "^7.1.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-modules-commonjs": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.4.3.tgz",\n      "integrity": "sha512-sMP4JqOTbMJMimqsSZwYWsMjppD+KRyDIUVW91pd7td0dZKAvPmhCaxhOzkzLParKwgQc7bdL9UNv+rpJB0HfA==",\n      "requires": {\n        "@babel/helper-module-transforms": "^7.4.3",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-simple-access": "^7.1.0"\n      }\n    },\n    "@babel/plugin-transform-modules-systemjs": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.4.0.tgz",\n      "integrity": "sha512-gjPdHmqiNhVoBqus5qK60mWPp1CmYWp/tkh11mvb0rrys01HycEGD7NvvSoKXlWEfSM9TcL36CpsK8ElsADptQ==",\n      "requires": {\n        "@babel/helper-hoist-variables": "^7.4.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-modules-umd": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.2.0.tgz",\n      "integrity": "sha512-BV3bw6MyUH1iIsGhXlOK6sXhmSarZjtJ/vMiD9dNmpY8QXFFQTj+6v92pcfy1iqa8DeAfJFwoxcrS/TUZda6sw==",\n      "requires": {\n        "@babel/helper-module-transforms": "^7.1.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-named-capturing-groups-regex": {\n      "version": "7.4.2",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.4.2.tgz",\n      "integrity": "sha512-NsAuliSwkL3WO2dzWTOL1oZJHm0TM8ZY8ZSxk2ANyKkt5SQlToGA4pzctmq1BEjoacurdwZ3xp2dCQWJkME0gQ==",\n      "requires": {\n        "regexp-tree": "^0.1.0"\n      }\n    },\n    "@babel/plugin-transform-new-target": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.4.0.tgz",\n      "integrity": "sha512-6ZKNgMQmQmrEX/ncuCwnnw1yVGoaOW5KpxNhoWI7pCQdA0uZ0HqHGqenCUIENAnxRjy2WwNQ30gfGdIgqJXXqw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-object-super": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.2.0.tgz",\n      "integrity": "sha512-VMyhPYZISFZAqAPVkiYb7dUe2AsVi2/wCT5+wZdsNO31FojQJa9ns40hzZ6U9f50Jlq4w6qwzdBB2uwqZ00ebg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-replace-supers": "^7.1.0"\n      }\n    },\n    "@babel/plugin-transform-parameters": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.4.3.tgz",\n      "integrity": "sha512-ULJYC2Vnw96/zdotCZkMGr2QVfKpIT/4/K+xWWY0MbOJyMZuk660BGkr3bEKWQrrciwz6xpmft39nA4BF7hJuA==",\n      "requires": {\n        "@babel/helper-call-delegate": "^7.4.0",\n        "@babel/helper-get-function-arity": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-property-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.2.0.tgz",\n      "integrity": "sha512-9q7Dbk4RhgcLp8ebduOpCbtjh7C0itoLYHXd9ueASKAG/is5PQtMR5VJGka9NKqGhYEGn5ITahd4h9QeBMylWQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-react-constant-elements": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-constant-elements/-/plugin-transform-react-constant-elements-7.2.0.tgz",\n      "integrity": "sha512-YYQFg6giRFMsZPKUM9v+VcHOdfSQdz9jHCx3akAi3UYgyjndmdYGSXylQ/V+HswQt4fL8IklchD9HTsaOCrWQQ==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-react-display-name": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.2.0.tgz",\n      "integrity": "sha512-Htf/tPa5haZvRMiNSQSFifK12gtr/8vwfr+A9y69uF0QcU77AVu4K7MiHEkTxF7lQoHOL0F9ErqgfNEAKgXj7A==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-react-jsx": {\n      "version": "7.3.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.3.0.tgz",\n      "integrity": "sha512-a/+aRb7R06WcKvQLOu4/TpjKOdvVEKRLWFpKcNuHhiREPgGRB4TQJxq07+EZLS8LFVYpfq1a5lDUnuMdcCpBKg==",\n      "requires": {\n        "@babel/helper-builder-react-jsx": "^7.3.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-jsx": "^7.2.0"\n      }\n    },\n    "@babel/plugin-transform-react-jsx-self": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.2.0.tgz",\n      "integrity": "sha512-v6S5L/myicZEy+jr6ielB0OR8h+EH/1QFx/YJ7c7Ua+7lqsjj/vW6fD5FR9hB/6y7mGbfT4vAURn3xqBxsUcdg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-jsx": "^7.2.0"\n      }\n    },\n    "@babel/plugin-transform-react-jsx-source": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.2.0.tgz",\n      "integrity": "sha512-A32OkKTp4i5U6aE88GwwcuV4HAprUgHcTq0sSafLxjr6AW0QahrCRCjxogkbbcdtpbXkuTOlgpjophCxb6sh5g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-jsx": "^7.2.0"\n      }\n    },\n    "@babel/plugin-transform-regenerator": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.4.3.tgz",\n      "integrity": "sha512-kEzotPuOpv6/iSlHroCDydPkKYw7tiJGKlmYp6iJn4a6C/+b2FdttlJsLKYxolYHgotTJ5G5UY5h0qey5ka3+A==",\n      "requires": {\n        "regenerator-transform": "^0.13.4"\n      }\n    },\n    "@babel/plugin-transform-reserved-words": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.2.0.tgz",\n      "integrity": "sha512-fz43fqW8E1tAB3DKF19/vxbpib1fuyCwSPE418ge5ZxILnBhWyhtPgz8eh1RCGGJlwvksHkyxMxh0eenFi+kFw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-runtime": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.4.3.tgz",\n      "integrity": "sha512-7Q61bU+uEI7bCUFReT1NKn7/X6sDQsZ7wL1sJ9IYMAO7cI+eg6x9re1cEw2fCRMbbTVyoeUKWSV1M6azEfKCfg==",\n      "requires": {\n        "@babel/helper-module-imports": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "resolve": "^1.8.1",\n        "semver": "^5.5.1"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "@babel/plugin-transform-shorthand-properties": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.2.0.tgz",\n      "integrity": "sha512-QP4eUM83ha9zmYtpbnyjTLAGKQritA5XW/iG9cjtuOI8s1RuL/3V6a3DeSHfKutJQ+ayUfeZJPcnCYEQzaPQqg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-spread": {\n      "version": "7.2.2",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.2.2.tgz",\n      "integrity": "sha512-KWfky/58vubwtS0hLqEnrWJjsMGaOeSBn90Ezn5Jeg9Z8KKHmELbP1yGylMlm5N6TPKeY9A2+UaSYLdxahg01w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-sticky-regex": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.2.0.tgz",\n      "integrity": "sha512-KKYCoGaRAf+ckH8gEL3JHUaFVyNHKe3ASNsZ+AlktgHevvxGigoIttrEJb8iKN03Q7Eazlv1s6cx2B2cQ3Jabw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-regex": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-template-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.2.0.tgz",\n      "integrity": "sha512-FkPix00J9A/XWXv4VoKJBMeSkyY9x/TqIh76wzcdfl57RJJcf8CehQ08uwfhCDNtRQYtHQKBTwKZDEyjE13Lwg==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-typeof-symbol": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.2.0.tgz",\n      "integrity": "sha512-2LNhETWYxiYysBtrBTqL8+La0jIoQQnIScUJc74OYvUGRmkskNY4EzLCnjHBzdmb38wqtTaixpo1NctEcvMDZw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0"\n      }\n    },\n    "@babel/plugin-transform-typescript": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.4.0.tgz",\n      "integrity": "sha512-U7/+zKnRZg04ggM/Bm+xmu2B/PrwyDQTT/V89FXWYWNMxBDwSx56u6jtk9SEbfLFbZaEI72L+5LPvQjeZgFCrQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-syntax-typescript": "^7.2.0"\n      }\n    },\n    "@babel/plugin-transform-unicode-regex": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.4.3.tgz",\n      "integrity": "sha512-lnSNgkVjL8EMtnE8eSS7t2ku8qvKH3eqNf/IwIfnSPUqzgqYmRwzdsQWv4mNQAN9Nuo6Gz1Y0a4CSmdpu1Pp6g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/helper-regex": "^7.4.3",\n        "regexpu-core": "^4.5.4"\n      }\n    },\n    "@babel/preset-env": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.4.3.tgz",\n      "integrity": "sha512-FYbZdV12yHdJU5Z70cEg0f6lvtpZ8jFSDakTm7WXeJbLXh4R0ztGEu/SW7G1nJ2ZvKwDhz8YrbA84eYyprmGqw==",\n      "requires": {\n        "@babel/helper-module-imports": "^7.0.0",\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-proposal-async-generator-functions": "^7.2.0",\n        "@babel/plugin-proposal-json-strings": "^7.2.0",\n        "@babel/plugin-proposal-object-rest-spread": "^7.4.3",\n        "@babel/plugin-proposal-optional-catch-binding": "^7.2.0",\n        "@babel/plugin-proposal-unicode-property-regex": "^7.4.0",\n        "@babel/plugin-syntax-async-generators": "^7.2.0",\n        "@babel/plugin-syntax-json-strings": "^7.2.0",\n        "@babel/plugin-syntax-object-rest-spread": "^7.2.0",\n        "@babel/plugin-syntax-optional-catch-binding": "^7.2.0",\n        "@babel/plugin-transform-arrow-functions": "^7.2.0",\n        "@babel/plugin-transform-async-to-generator": "^7.4.0",\n        "@babel/plugin-transform-block-scoped-functions": "^7.2.0",\n        "@babel/plugin-transform-block-scoping": "^7.4.0",\n        "@babel/plugin-transform-classes": "^7.4.3",\n        "@babel/plugin-transform-computed-properties": "^7.2.0",\n        "@babel/plugin-transform-destructuring": "^7.4.3",\n        "@babel/plugin-transform-dotall-regex": "^7.4.3",\n        "@babel/plugin-transform-duplicate-keys": "^7.2.0",\n        "@babel/plugin-transform-exponentiation-operator": "^7.2.0",\n        "@babel/plugin-transform-for-of": "^7.4.3",\n        "@babel/plugin-transform-function-name": "^7.4.3",\n        "@babel/plugin-transform-literals": "^7.2.0",\n        "@babel/plugin-transform-member-expression-literals": "^7.2.0",\n        "@babel/plugin-transform-modules-amd": "^7.2.0",\n        "@babel/plugin-transform-modules-commonjs": "^7.4.3",\n        "@babel/plugin-transform-modules-systemjs": "^7.4.0",\n        "@babel/plugin-transform-modules-umd": "^7.2.0",\n        "@babel/plugin-transform-named-capturing-groups-regex": "^7.4.2",\n        "@babel/plugin-transform-new-target": "^7.4.0",\n        "@babel/plugin-transform-object-super": "^7.2.0",\n        "@babel/plugin-transform-parameters": "^7.4.3",\n        "@babel/plugin-transform-property-literals": "^7.2.0",\n        "@babel/plugin-transform-regenerator": "^7.4.3",\n        "@babel/plugin-transform-reserved-words": "^7.2.0",\n        "@babel/plugin-transform-shorthand-properties": "^7.2.0",\n        "@babel/plugin-transform-spread": "^7.2.0",\n        "@babel/plugin-transform-sticky-regex": "^7.2.0",\n        "@babel/plugin-transform-template-literals": "^7.2.0",\n        "@babel/plugin-transform-typeof-symbol": "^7.2.0",\n        "@babel/plugin-transform-unicode-regex": "^7.4.3",\n        "@babel/types": "^7.4.0",\n        "browserslist": "^4.5.2",\n        "core-js-compat": "^3.0.0",\n        "invariant": "^2.2.2",\n        "js-levenshtein": "^1.1.3",\n        "semver": "^5.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "@babel/preset-react": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.0.0.tgz",\n      "integrity": "sha512-oayxyPS4Zj+hF6Et11BwuBkmpgT/zMxyuZgFrMeZID6Hdh3dGlk4sHCAhdBCpuCKW2ppBfl2uCCetlrUIJRY3w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-transform-react-display-name": "^7.0.0",\n        "@babel/plugin-transform-react-jsx": "^7.0.0",\n        "@babel/plugin-transform-react-jsx-self": "^7.0.0",\n        "@babel/plugin-transform-react-jsx-source": "^7.0.0"\n      }\n    },\n    "@babel/preset-typescript": {\n      "version": "7.3.3",\n      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.3.3.tgz",\n      "integrity": "sha512-mzMVuIP4lqtn4du2ynEfdO0+RYcslwrZiJHXu4MGaC1ctJiW2fyaeDrtjJGs7R/KebZ1sgowcIoWf4uRpEfKEg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "^7.0.0",\n        "@babel/plugin-transform-typescript": "^7.3.2"\n      }\n    },\n    "@babel/runtime": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.4.3.tgz",\n      "integrity": "sha512-9lsJwJLxDh/T3Q3SZszfWOTkk3pHbkmH+3KY+zwIDmsNlxsumuhS2TH3NIpktU4kNvfzy+k3eLT7aTJSPTo0OA==",\n      "requires": {\n        "regenerator-runtime": "^0.13.2"\n      }\n    },\n    "@babel/template": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.4.0.tgz",\n      "integrity": "sha512-SOWwxxClTTh5NdbbYZ0BmaBVzxzTh2tO/TeLTbF6MO6EzVhHTnff8CdBXx3mEtazFBoysmEM6GU/wF+SuSx4Fw==",\n      "requires": {\n        "@babel/code-frame": "^7.0.0",\n        "@babel/parser": "^7.4.0",\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@babel/traverse": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.4.3.tgz",\n      "integrity": "sha512-HmA01qrtaCwwJWpSKpA948cBvU5BrmviAief/b3AVw936DtcdsTexlbyzNuDnthwhOQ37xshn7hvQaEQk7ISYQ==",\n      "requires": {\n        "@babel/code-frame": "^7.0.0",\n        "@babel/generator": "^7.4.0",\n        "@babel/helper-function-name": "^7.1.0",\n        "@babel/helper-split-export-declaration": "^7.4.0",\n        "@babel/parser": "^7.4.3",\n        "@babel/types": "^7.4.0",\n        "debug": "^4.1.0",\n        "globals": "^11.1.0",\n        "lodash": "^4.17.11"\n      }\n    },\n    "@babel/types": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.4.0.tgz",\n      "integrity": "sha512-aPvkXyU2SPOnztlgo8n9cEiXW755mgyvueUPcpStqdzoSPm0fjO0vQBjLkt3JKJW7ufikfcnMTTPsN1xaTsBPA==",\n      "requires": {\n        "esutils": "^2.0.2",\n        "lodash": "^4.17.11",\n        "to-fast-properties": "^2.0.0"\n      }\n    },\n    "@cnakazawa/watch": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/@cnakazawa/watch/-/watch-1.0.3.tgz",\n      "integrity": "sha512-r5160ogAvGyHsal38Kux7YYtodEKOj89RGb28ht1jh3SJb08VwRwAKKJL0bGb04Zd/3r9FL3BFIc3bBidYffCA==",\n      "requires": {\n        "exec-sh": "^0.3.2",\n        "minimist": "^1.2.0"\n      }\n    },\n    "@csstools/convert-colors": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/@csstools/convert-colors/-/convert-colors-1.4.0.tgz",\n      "integrity": "sha512-5a6wqoJV/xEdbRNKVo6I4hO3VjyDq//8q2f9I6PBAvMesJHFauXDorcNCsr9RzvsZnaWi5NYCcfyqP1QeFHFbw=="\n    },\n    "@csstools/normalize.css": {\n      "version": "9.0.1",\n      "resolved": "https://registry.npmjs.org/@csstools/normalize.css/-/normalize.css-9.0.1.tgz",\n      "integrity": "sha512-6It2EVfGskxZCQhuykrfnALg7oVeiI6KclWSmGDqB0AiInVrTGB9Jp9i4/Ad21u9Jde/voVQz6eFX/eSg/UsPA=="\n    },\n    "@emotion/babel-utils": {\n      "version": "0.6.10",\n      "resolved": "https://registry.npmjs.org/@emotion/babel-utils/-/babel-utils-0.6.10.tgz",\n      "integrity": "sha512-/fnkM/LTEp3jKe++T0KyTszVGWNKPNOUJfjNKLO17BzQ6QPxgbg3whayom1Qr2oLFH3V92tDymU+dT5q676uow==",\n      "requires": {\n        "@emotion/hash": "^0.6.6",\n        "@emotion/memoize": "^0.6.6",\n        "@emotion/serialize": "^0.9.1",\n        "convert-source-map": "^1.5.1",\n        "find-root": "^1.1.0",\n        "source-map": "^0.7.2"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.7.3",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",\n          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ=="\n        }\n      }\n    },\n    "@emotion/hash": {\n      "version": "0.6.6",\n      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.6.6.tgz",\n      "integrity": "sha512-ojhgxzUHZ7am3D2jHkMzPpsBAiB005GF5YU4ea+8DNPybMk01JJUM9V9YRlF/GE95tcOm8DxQvWA2jq19bGalQ=="\n    },\n    "@emotion/memoize": {\n      "version": "0.6.6",\n      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.6.6.tgz",\n      "integrity": "sha512-h4t4jFjtm1YV7UirAFuSuFGyLa+NNxjdkq6DpFLANNQY5rHueFZHVY+8Cu1HYVP6DrheB0kv4m5xPjo7eKT7yQ=="\n    },\n    "@emotion/serialize": {\n      "version": "0.9.1",\n      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-0.9.1.tgz",\n      "integrity": "sha512-zTuAFtyPvCctHBEL8KZ5lJuwBanGSutFEncqLn/m9T1a6a93smBStK+bZzcNPgj4QS8Rkw9VTwJGhRIUVO8zsQ==",\n      "requires": {\n        "@emotion/hash": "^0.6.6",\n        "@emotion/memoize": "^0.6.6",\n        "@emotion/unitless": "^0.6.7",\n        "@emotion/utils": "^0.8.2"\n      }\n    },\n    "@emotion/stylis": {\n      "version": "0.7.1",\n      "resolved": "https://registry.npmjs.org/@emotion/stylis/-/stylis-0.7.1.tgz",\n      "integrity": "sha512-/SLmSIkN13M//53TtNxgxo57mcJk/UJIDFRKwOiLIBEyBHEcipgR6hNMQ/59Sl4VjCJ0Z/3zeAZyvnSLPG/1HQ=="\n    },\n    "@emotion/unitless": {\n      "version": "0.6.7",\n      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.6.7.tgz",\n      "integrity": "sha512-Arj1hncvEVqQ2p7Ega08uHLr1JuRYBuO5cIvcA+WWEQ5+VmkOE3ZXzl04NbQxeQpWX78G7u6MqxKuNX3wvYZxg=="\n    },\n    "@emotion/utils": {\n      "version": "0.8.2",\n      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-0.8.2.tgz",\n      "integrity": "sha512-rLu3wcBWH4P5q1CGoSSH/i9hrXs7SlbRLkoq9IGuoPYNGQvDJ3pt/wmOM+XgYjIDRMVIdkUWt0RsfzF50JfnCw=="\n    },\n    "@jest/console": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/console/-/console-24.7.1.tgz",\n      "integrity": "sha512-iNhtIy2M8bXlAOULWVTUxmnelTLFneTNEkHCgPmgd+zNwy9zVddJ6oS5rZ9iwoscNdT5mMwUd0C51v/fSlzItg==",\n      "requires": {\n        "@jest/source-map": "^24.3.0",\n        "chalk": "^2.0.1",\n        "slash": "^2.0.0"\n      }\n    },\n    "@jest/core": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/core/-/core-24.7.1.tgz",\n      "integrity": "sha512-ivlZ8HX/FOASfHcb5DJpSPFps8ydfUYzLZfgFFqjkLijYysnIEOieg72YRhO4ZUB32xu40hsSMmaw+IGYeKONA==",\n      "requires": {\n        "@jest/console": "^24.7.1",\n        "@jest/reporters": "^24.7.1",\n        "@jest/test-result": "^24.7.1",\n        "@jest/transform": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "ansi-escapes": "^3.0.0",\n        "chalk": "^2.0.1",\n        "exit": "^0.1.2",\n        "graceful-fs": "^4.1.15",\n        "jest-changed-files": "^24.7.0",\n        "jest-config": "^24.7.1",\n        "jest-haste-map": "^24.7.1",\n        "jest-message-util": "^24.7.1",\n        "jest-regex-util": "^24.3.0",\n        "jest-resolve-dependencies": "^24.7.1",\n        "jest-runner": "^24.7.1",\n        "jest-runtime": "^24.7.1",\n        "jest-snapshot": "^24.7.1",\n        "jest-util": "^24.7.1",\n        "jest-validate": "^24.7.0",\n        "jest-watcher": "^24.7.1",\n        "micromatch": "^3.1.10",\n        "p-each-series": "^1.0.0",\n        "pirates": "^4.0.1",\n        "realpath-native": "^1.1.0",\n        "rimraf": "^2.5.4",\n        "strip-ansi": "^5.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "^4.1.0"\n          }\n        }\n      }\n    },\n    "@jest/environment": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-24.7.1.tgz",\n      "integrity": "sha512-wmcTTYc4/KqA+U5h1zQd5FXXynfa7VGP2NfF+c6QeGJ7c+2nStgh65RQWNX62SC716dTtqheTRrZl0j+54oGHw==",\n      "requires": {\n        "@jest/fake-timers": "^24.7.1",\n        "@jest/transform": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "jest-mock": "^24.7.0"\n      }\n    },\n    "@jest/fake-timers": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-24.7.1.tgz",\n      "integrity": "sha512-4vSQJDKfR2jScOe12L9282uiwuwQv9Lk7mgrCSZHA9evB9efB/qx8i0KJxsAKtp8fgJYBJdYY7ZU6u3F4/pyjA==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "jest-message-util": "^24.7.1",\n        "jest-mock": "^24.7.0"\n      }\n    },\n    "@jest/reporters": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-24.7.1.tgz",\n      "integrity": "sha512-bO+WYNwHLNhrjB9EbPL4kX/mCCG4ZhhfWmO3m4FSpbgr7N83MFejayz30kKjgqr7smLyeaRFCBQMbXpUgnhAJw==",\n      "requires": {\n        "@jest/environment": "^24.7.1",\n        "@jest/test-result": "^24.7.1",\n        "@jest/transform": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "chalk": "^2.0.1",\n        "exit": "^0.1.2",\n        "glob": "^7.1.2",\n        "istanbul-api": "^2.1.1",\n        "istanbul-lib-coverage": "^2.0.2",\n        "istanbul-lib-instrument": "^3.0.1",\n        "istanbul-lib-source-maps": "^3.0.1",\n        "jest-haste-map": "^24.7.1",\n        "jest-resolve": "^24.7.1",\n        "jest-runtime": "^24.7.1",\n        "jest-util": "^24.7.1",\n        "jest-worker": "^24.6.0",\n        "node-notifier": "^5.2.1",\n        "slash": "^2.0.0",\n        "source-map": "^0.6.0",\n        "string-length": "^2.0.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "@jest/source-map": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-24.3.0.tgz",\n      "integrity": "sha512-zALZt1t2ou8le/crCeeiRYzvdnTzaIlpOWaet45lNSqNJUnXbppUUFR4ZUAlzgDmKee4Q5P/tKXypI1RiHwgag==",\n      "requires": {\n        "callsites": "^3.0.0",\n        "graceful-fs": "^4.1.15",\n        "source-map": "^0.6.0"\n      },\n      "dependencies": {\n        "callsites": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",\n          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "@jest/test-result": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-24.7.1.tgz",\n      "integrity": "sha512-3U7wITxstdEc2HMfBX7Yx3JZgiNBubwDqQMh+BXmZXHa3G13YWF3p6cK+5g0hGkN3iufg/vGPl3hLxQXD74Npg==",\n      "requires": {\n        "@jest/console": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "@types/istanbul-lib-coverage": "^2.0.0"\n      }\n    },\n    "@jest/test-sequencer": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-24.7.1.tgz",\n      "integrity": "sha512-84HQkCpVZI/G1zq53gHJvSmhUer4aMYp9tTaffW28Ih5OxfCg8hGr3nTSbL1OhVDRrFZwvF+/R9gY6JRkDUpUA==",\n      "requires": {\n        "@jest/test-result": "^24.7.1",\n        "jest-haste-map": "^24.7.1",\n        "jest-runner": "^24.7.1",\n        "jest-runtime": "^24.7.1"\n      }\n    },\n    "@jest/transform": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-24.7.1.tgz",\n      "integrity": "sha512-EsOUqP9ULuJ66IkZQhI5LufCHlTbi7hrcllRMUEV/tOgqBVQi93+9qEvkX0n8mYpVXQ8VjwmICeRgg58mrtIEw==",\n      "requires": {\n        "@babel/core": "^7.1.0",\n        "@jest/types": "^24.7.0",\n        "babel-plugin-istanbul": "^5.1.0",\n        "chalk": "^2.0.1",\n        "convert-source-map": "^1.4.0",\n        "fast-json-stable-stringify": "^2.0.0",\n        "graceful-fs": "^4.1.15",\n        "jest-haste-map": "^24.7.1",\n        "jest-regex-util": "^24.3.0",\n        "jest-util": "^24.7.1",\n        "micromatch": "^3.1.10",\n        "realpath-native": "^1.1.0",\n        "slash": "^2.0.0",\n        "source-map": "^0.6.1",\n        "write-file-atomic": "2.4.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "@jest/types": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/@jest/types/-/types-24.7.0.tgz",\n      "integrity": "sha512-ipJUa2rFWiKoBqMKP63Myb6h9+iT3FHRTF2M8OR6irxWzItisa8i4dcSg14IbvmXUnBlHBlUQPYUHWyX3UPpYA==",\n      "requires": {\n        "@types/istanbul-lib-coverage": "^2.0.0",\n        "@types/yargs": "^12.0.9"\n      }\n    },\n    "@material-ui/core": {\n      "version": "3.9.3",\n      "resolved": "https://registry.npmjs.org/@material-ui/core/-/core-3.9.3.tgz",\n      "integrity": "sha512-REIj62+zEvTgI/C//YL4fZxrCVIySygmpZglsu/Nl5jPqy3CDjZv1F9ubBYorHqmRgeVPh64EghMMWqk4egmfg==",\n      "requires": {\n        "@babel/runtime": "^7.2.0",\n        "@material-ui/system": "^3.0.0-alpha.0",\n        "@material-ui/utils": "^3.0.0-alpha.2",\n        "@types/jss": "^9.5.6",\n        "@types/react-transition-group": "^2.0.8",\n        "brcast": "^3.0.1",\n        "classnames": "^2.2.5",\n        "csstype": "^2.5.2",\n        "debounce": "^1.1.0",\n        "deepmerge": "^3.0.0",\n        "dom-helpers": "^3.2.1",\n        "hoist-non-react-statics": "^3.2.1",\n        "is-plain-object": "^2.0.4",\n        "jss": "^9.8.7",\n        "jss-camel-case": "^6.0.0",\n        "jss-default-unit": "^8.0.2",\n        "jss-global": "^3.0.0",\n        "jss-nested": "^6.0.1",\n        "jss-props-sort": "^6.0.0",\n        "jss-vendor-prefixer": "^7.0.0",\n        "normalize-scroll-left": "^0.1.2",\n        "popper.js": "^1.14.1",\n        "prop-types": "^15.6.0",\n        "react-event-listener": "^0.6.2",\n        "react-transition-group": "^2.2.1",\n        "recompose": "0.28.0 - 0.30.0",\n        "warning": "^4.0.1"\n      }\n    },\n    "@material-ui/icons": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/@material-ui/icons/-/icons-3.0.2.tgz",\n      "integrity": "sha512-QY/3gJnObZQ3O/e6WjH+0ah2M3MOgLOzCy8HTUoUx9B6dDrS18vP7Ycw3qrDEKlB6q1KNxy6CZHm5FCauWGy2g==",\n      "requires": {\n        "@babel/runtime": "^7.2.0",\n        "recompose": "0.28.0 - 0.30.0"\n      }\n    },\n    "@material-ui/system": {\n      "version": "3.0.0-alpha.2",\n      "resolved": "https://registry.npmjs.org/@material-ui/system/-/system-3.0.0-alpha.2.tgz",\n      "integrity": "sha512-odmxQ0peKpP7RQBQ8koly06YhsPzcoVib1vByVPBH4QhwqBXuYoqlCjt02846fYspAqkrWzjxnWUD311EBbxOA==",\n      "requires": {\n        "@babel/runtime": "^7.2.0",\n        "deepmerge": "^3.0.0",\n        "prop-types": "^15.6.0",\n        "warning": "^4.0.1"\n      }\n    },\n    "@material-ui/utils": {\n      "version": "3.0.0-alpha.3",\n      "resolved": "https://registry.npmjs.org/@material-ui/utils/-/utils-3.0.0-alpha.3.tgz",\n      "integrity": "sha512-rwMdMZptX0DivkqBuC+Jdq7BYTXwqKai5G5ejPpuEDKpWzi1Oxp+LygGw329FrKpuKeiqpcymlqJTjmy+quWng==",\n      "requires": {\n        "@babel/runtime": "^7.2.0",\n        "prop-types": "^15.6.0",\n        "react-is": "^16.6.3"\n      }\n    },\n    "@mrmlnc/readdir-enhanced": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz",\n      "integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==",\n      "requires": {\n        "call-me-maybe": "^1.0.1",\n        "glob-to-regexp": "^0.3.0"\n      }\n    },\n    "@nodelib/fs.stat": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",\n      "integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="\n    },\n    "@semantic-ui-react/event-stack": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/@semantic-ui-react/event-stack/-/event-stack-3.1.0.tgz",\n      "integrity": "sha512-WHtU9wutZByZtFZxzj4BVEk+rvWldZpZhRcyv6d84+XLSolm83zLHYJLTACGuSl6Xa/xpgVXquvm9GyMudkJYg==",\n      "dev": true,\n      "requires": {\n        "exenv": "^1.2.2",\n        "prop-types": "^15.6.2"\n      }\n    },\n    "@svgr/babel-plugin-add-jsx-attribute": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-add-jsx-attribute/-/babel-plugin-add-jsx-attribute-4.2.0.tgz",\n      "integrity": "sha512-j7KnilGyZzYr/jhcrSYS3FGWMZVaqyCG0vzMCwzvei0coIkczuYMcniK07nI0aHJINciujjH11T72ICW5eL5Ig=="\n    },\n    "@svgr/babel-plugin-remove-jsx-attribute": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-remove-jsx-attribute/-/babel-plugin-remove-jsx-attribute-4.2.0.tgz",\n      "integrity": "sha512-3XHLtJ+HbRCH4n28S7y/yZoEQnRpl0tvTZQsHqvaeNXPra+6vE5tbRliH3ox1yZYPCxrlqaJT/Mg+75GpDKlvQ=="\n    },\n    "@svgr/babel-plugin-remove-jsx-empty-expression": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-remove-jsx-empty-expression/-/babel-plugin-remove-jsx-empty-expression-4.2.0.tgz",\n      "integrity": "sha512-yTr2iLdf6oEuUE9MsRdvt0NmdpMBAkgK8Bjhl6epb+eQWk6abBaX3d65UZ3E3FWaOwePyUgNyNCMVG61gGCQ7w=="\n    },\n    "@svgr/babel-plugin-replace-jsx-attribute-value": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-replace-jsx-attribute-value/-/babel-plugin-replace-jsx-attribute-value-4.2.0.tgz",\n      "integrity": "sha512-U9m870Kqm0ko8beHawRXLGLvSi/ZMrl89gJ5BNcT452fAjtF2p4uRzXkdzvGJJJYBgx7BmqlDjBN/eCp5AAX2w=="\n    },\n    "@svgr/babel-plugin-svg-dynamic-title": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-svg-dynamic-title/-/babel-plugin-svg-dynamic-title-4.2.0.tgz",\n      "integrity": "sha512-gH2qItapwCUp6CCqbxvzBbc4dh4OyxdYKsW3EOkYexr0XUmQL0ScbdNh6DexkZ01T+sdClniIbnCObsXcnx3sQ=="\n    },\n    "@svgr/babel-plugin-svg-em-dimensions": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-svg-em-dimensions/-/babel-plugin-svg-em-dimensions-4.2.0.tgz",\n      "integrity": "sha512-C0Uy+BHolCHGOZ8Dnr1zXy/KgpBOkEUYY9kI/HseHVPeMbluaX3CijJr7D4C5uR8zrc1T64nnq/k63ydQuGt4w=="\n    },\n    "@svgr/babel-plugin-transform-react-native-svg": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-transform-react-native-svg/-/babel-plugin-transform-react-native-svg-4.2.0.tgz",\n      "integrity": "sha512-7YvynOpZDpCOUoIVlaaOUU87J4Z6RdD6spYN4eUb5tfPoKGSF9OG2NuhgYnq4jSkAxcpMaXWPf1cePkzmqTPNw=="\n    },\n    "@svgr/babel-plugin-transform-svg-component": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-transform-svg-component/-/babel-plugin-transform-svg-component-4.2.0.tgz",\n      "integrity": "sha512-hYfYuZhQPCBVotABsXKSCfel2slf/yvJY8heTVX1PCTaq/IgASq1IyxPPKJ0chWREEKewIU/JMSsIGBtK1KKxw=="\n    },\n    "@svgr/babel-preset": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-preset/-/babel-preset-4.2.0.tgz",\n      "integrity": "sha512-iLetHpRCQXfK47voAs5/uxd736cCyocEdorisjAveZo8ShxJ/ivSZgstBmucI1c8HyMF5tOrilJLoFbhpkPiKw==",\n      "requires": {\n        "@svgr/babel-plugin-add-jsx-attribute": "^4.2.0",\n        "@svgr/babel-plugin-remove-jsx-attribute": "^4.2.0",\n        "@svgr/babel-plugin-remove-jsx-empty-expression": "^4.2.0",\n        "@svgr/babel-plugin-replace-jsx-attribute-value": "^4.2.0",\n        "@svgr/babel-plugin-svg-dynamic-title": "^4.2.0",\n        "@svgr/babel-plugin-svg-em-dimensions": "^4.2.0",\n        "@svgr/babel-plugin-transform-react-native-svg": "^4.2.0",\n        "@svgr/babel-plugin-transform-svg-component": "^4.2.0"\n      }\n    },\n    "@svgr/core": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/core/-/core-4.2.0.tgz",\n      "integrity": "sha512-nvzXaf2VavqjMCTTfsZfjL4o9035KedALkMzk82qOlHOwBb8JT+9+zYDgBl0oOunbVF94WTLnvGunEg0csNP3Q==",\n      "requires": {\n        "@svgr/plugin-jsx": "^4.2.0",\n        "camelcase": "^5.3.1",\n        "cosmiconfig": "^5.2.0"\n      }\n    },\n    "@svgr/hast-util-to-babel-ast": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/hast-util-to-babel-ast/-/hast-util-to-babel-ast-4.2.0.tgz",\n      "integrity": "sha512-IvAeb7gqrGB5TH9EGyBsPrMRH/QCzIuAkLySKvH2TLfLb2uqk98qtJamordRQTpHH3e6TORfBXoTo7L7Opo/Ow==",\n      "requires": {\n        "@babel/types": "^7.4.0"\n      }\n    },\n    "@svgr/plugin-jsx": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/plugin-jsx/-/plugin-jsx-4.2.0.tgz",\n      "integrity": "sha512-AM1YokmZITgveY9bulLVquqNmwiFo2Px2HL+IlnTCR01YvWDfRL5QKdnF7VjRaS5MNP938mmqvL0/8oz3zQMkg==",\n      "requires": {\n        "@babel/core": "^7.4.3",\n        "@svgr/babel-preset": "^4.2.0",\n        "@svgr/hast-util-to-babel-ast": "^4.2.0",\n        "rehype-parse": "^6.0.0",\n        "unified": "^7.1.0",\n        "vfile": "^4.0.0"\n      }\n    },\n    "@svgr/plugin-svgo": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/plugin-svgo/-/plugin-svgo-4.2.0.tgz",\n      "integrity": "sha512-zUEKgkT172YzHh3mb2B2q92xCnOAMVjRx+o0waZ1U50XqKLrVQ/8dDqTAtnmapdLsGurv8PSwenjLCUpj6hcvw==",\n      "requires": {\n        "cosmiconfig": "^5.2.0",\n        "merge-deep": "^3.0.2",\n        "svgo": "^1.2.1"\n      }\n    },\n    "@svgr/webpack": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/@svgr/webpack/-/webpack-4.1.0.tgz",\n      "integrity": "sha512-d09ehQWqLMywP/PT/5JvXwPskPK9QCXUjiSkAHehreB381qExXf5JFCBWhfEyNonRbkIneCeYM99w+Ud48YIQQ==",\n      "requires": {\n        "@babel/core": "^7.1.6",\n        "@babel/plugin-transform-react-constant-elements": "^7.0.0",\n        "@babel/preset-env": "^7.1.6",\n        "@babel/preset-react": "^7.0.0",\n        "@svgr/core": "^4.1.0",\n        "@svgr/plugin-jsx": "^4.1.0",\n        "@svgr/plugin-svgo": "^4.0.3",\n        "loader-utils": "^1.1.0"\n      }\n    },\n    "@types/babel__core": {\n      "version": "7.1.1",\n      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.1.tgz",\n      "integrity": "sha512-+hjBtgcFPYyCTo0A15+nxrCVJL7aC6Acg87TXd5OW3QhHswdrOLoles+ldL2Uk8q++7yIfl4tURtztccdeeyOw==",\n      "requires": {\n        "@babel/parser": "^7.1.0",\n        "@babel/types": "^7.0.0",\n        "@types/babel__generator": "*",\n        "@types/babel__template": "*",\n        "@types/babel__traverse": "*"\n      }\n    },\n    "@types/babel__generator": {\n      "version": "7.0.2",\n      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.0.2.tgz",\n      "integrity": "sha512-NHcOfab3Zw4q5sEE2COkpfXjoE7o+PmqD9DQW4koUT3roNxwziUdXGnRndMat/LJNUtePwn1TlP4do3uoe3KZQ==",\n      "requires": {\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@types/babel__template": {\n      "version": "7.0.2",\n      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.0.2.tgz",\n      "integrity": "sha512-/K6zCpeW7Imzgab2bLkLEbz0+1JlFSrUMdw7KoIIu+IUdu51GWaBZpd3y1VXGVXzynvGa4DaIaxNZHiON3GXUg==",\n      "requires": {\n        "@babel/parser": "^7.1.0",\n        "@babel/types": "^7.0.0"\n      }\n    },\n    "@types/babel__traverse": {\n      "version": "7.0.6",\n      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.0.6.tgz",\n      "integrity": "sha512-XYVgHF2sQ0YblLRMLNPB3CkFMewzFmlDsH/TneZFHUXDlABQgh88uOxuez7ZcXxayLFrqLwtDH1t+FmlFwNZxw==",\n      "requires": {\n        "@babel/types": "^7.3.0"\n      }\n    },\n    "@types/istanbul-lib-coverage": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.0.tgz",\n      "integrity": "sha512-eAtOAFZefEnfJiRFQBGw1eYqa5GTLCZ1y86N0XSI/D6EB+E8z6VPV/UL7Gi5UEclFqoQk+6NRqEDsfmDLXn8sg=="\n    },\n    "@types/jss": {\n      "version": "9.5.8",\n      "resolved": "https://registry.npmjs.org/@types/jss/-/jss-9.5.8.tgz",\n      "integrity": "sha512-bBbHvjhm42UKki+wZpR89j73ykSXg99/bhuKuYYePtpma3ZAnmeGnl0WxXiZhPGsIfzKwCUkpPC0jlrVMBfRxA==",\n      "requires": {\n        "csstype": "^2.0.0",\n        "indefinite-observable": "^1.0.1"\n      }\n    },\n    "@types/node": {\n      "version": "11.13.7",\n      "resolved": "https://registry.npmjs.org/@types/node/-/node-11.13.7.tgz",\n      "integrity": "sha512-suFHr6hcA9mp8vFrZTgrmqW2ZU3mbWsryQtQlY/QvwTISCw7nw/j+bCQPPohqmskhmqa5wLNuMHTTsc+xf1MQg=="\n    },\n    "@types/prop-types": {\n      "version": "15.7.1",\n      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.1.tgz",\n      "integrity": "sha512-CFzn9idOEpHrgdw8JsoTkaDDyRWk1jrzIV8djzcgpq0y9tG4B4lFT+Nxh52DVpDXV+n4+NPNv7M1Dj5uMp6XFg=="\n    },\n    "@types/q": {\n      "version": "1.5.2",\n      "resolved": "https://registry.npmjs.org/@types/q/-/q-1.5.2.tgz",\n      "integrity": "sha512-ce5d3q03Ex0sy4R14722Rmt6MT07Ua+k4FwDfdcToYJcMKNtRVQvJ6JCAPdAmAnbRb6CsX6aYb9m96NGod9uTw=="\n    },\n    "@types/react": {\n      "version": "16.8.14",\n      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.8.14.tgz",\n      "integrity": "sha512-26tFVJ1omGmzIdFTFmnC5zhz1GTaqCjxgUxV4KzWvsybF42P7/j4RBn6UeO3KbHPXqKWZszMXMoI65xIWm954A==",\n      "requires": {\n        "@types/prop-types": "*",\n        "csstype": "^2.2.0"\n      }\n    },\n    "@types/react-transition-group": {\n      "version": "2.9.0",\n      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-2.9.0.tgz",\n      "integrity": "sha512-hP7vUaZMVSWKxo133P8U51U6UZ7+pbY+eAQb8+p6SZ2rB1rj3mOTDgTzhhi+R2SCB4S+sWekAAGoxdiZPG0ReQ==",\n      "requires": {\n        "@types/react": "*"\n      }\n    },\n    "@types/stack-utils": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-1.0.1.tgz",\n      "integrity": "sha512-l42BggppR6zLmpfU6fq9HEa2oGPEI8yrSPL3GITjfRInppYFahObbIQOQK3UGxEnyQpltZLaPe75046NOZQikw=="\n    },\n    "@types/unist": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.3.tgz",\n      "integrity": "sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ=="\n    },\n    "@types/vfile": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/@types/vfile/-/vfile-3.0.2.tgz",\n      "integrity": "sha512-b3nLFGaGkJ9rzOcuXRfHkZMdjsawuDD0ENL9fzTophtBg8FJHSGbH7daXkEpcwy3v7Xol3pAvsmlYyFhR4pqJw==",\n      "requires": {\n        "@types/node": "*",\n        "@types/unist": "*",\n        "@types/vfile-message": "*"\n      }\n    },\n    "@types/vfile-message": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/@types/vfile-message/-/vfile-message-1.0.1.tgz",\n      "integrity": "sha512-mlGER3Aqmq7bqR1tTTIVHq8KSAFFRyGbrxuM8C/H82g6k7r2fS+IMEkIu3D7JHzG10NvPdR8DNx0jr0pwpp4dA==",\n      "requires": {\n        "@types/node": "*",\n        "@types/unist": "*"\n      }\n    },\n    "@types/yargs": {\n      "version": "12.0.12",\n      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-12.0.12.tgz",\n      "integrity": "sha512-SOhuU4wNBxhhTHxYaiG5NY4HBhDIDnJF60GU+2LqHAdKKer86//e4yg69aENCtQ04n0ovz+tq2YPME5t5yp4pw=="\n    },\n    "@typescript-eslint/eslint-plugin": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-1.6.0.tgz",\n      "integrity": "sha512-U224c29E2lo861TQZs6GSmyC0OYeRNg6bE9UVIiFBxN2MlA0nq2dCrgIVyyRbC05UOcrgf2Wk/CF2gGOPQKUSQ==",\n      "requires": {\n        "@typescript-eslint/parser": "1.6.0",\n        "@typescript-eslint/typescript-estree": "1.6.0",\n        "requireindex": "^1.2.0",\n        "tsutils": "^3.7.0"\n      }\n    },\n    "@typescript-eslint/parser": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-1.6.0.tgz",\n      "integrity": "sha512-VB9xmSbfafI+/kI4gUK3PfrkGmrJQfh0N4EScT1gZXSZyUxpsBirPL99EWZg9MmPG0pzq/gMtgkk7/rAHj4aQw==",\n      "requires": {\n        "@typescript-eslint/typescript-estree": "1.6.0",\n        "eslint-scope": "^4.0.0",\n        "eslint-visitor-keys": "^1.0.0"\n      }\n    },\n    "@typescript-eslint/typescript-estree": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-1.6.0.tgz",\n      "integrity": "sha512-A4CanUwfaG4oXobD5y7EXbsOHjCwn8tj1RDd820etpPAjH+Icjc2K9e/DQM1Hac5zH2BSy+u6bjvvF2wwREvYA==",\n      "requires": {\n        "lodash.unescape": "4.0.1",\n        "semver": "5.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.5.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.5.0.tgz",\n          "integrity": "sha512-4SJ3dm0WAwWy/NVeioZh5AntkdJoWKxHxcmyP622fOkgHa4z3R0TdBJICINyaSDE6uNwVc8gZr+ZinwZAH4xIA=="\n        }\n      }\n    },\n    "@webassemblyjs/ast": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.8.5.tgz",\n      "integrity": "sha512-aJMfngIZ65+t71C3y2nBBg5FFG0Okt9m0XEgWZ7Ywgn1oMAT8cNwx00Uv1cQyHtidq0Xn94R4TAywO+LCQ+ZAQ==",\n      "requires": {\n        "@webassemblyjs/helper-module-context": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/wast-parser": "1.8.5"\n      }\n    },\n    "@webassemblyjs/floating-point-hex-parser": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.8.5.tgz",\n      "integrity": "sha512-9p+79WHru1oqBh9ewP9zW95E3XAo+90oth7S5Re3eQnECGq59ly1Ri5tsIipKGpiStHsUYmY3zMLqtk3gTcOtQ=="\n    },\n    "@webassemblyjs/helper-api-error": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.8.5.tgz",\n      "integrity": "sha512-Za/tnzsvnqdaSPOUXHyKJ2XI7PDX64kWtURyGiJJZKVEdFOsdKUCPTNEVFZq3zJ2R0G5wc2PZ5gvdTRFgm81zA=="\n    },\n    "@webassemblyjs/helper-buffer": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.8.5.tgz",\n      "integrity": "sha512-Ri2R8nOS0U6G49Q86goFIPNgjyl6+oE1abW1pS84BuhP1Qcr5JqMwRFT3Ah3ADDDYGEgGs1iyb1DGX+kAi/c/Q=="\n    },\n    "@webassemblyjs/helper-code-frame": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-code-frame/-/helper-code-frame-1.8.5.tgz",\n      "integrity": "sha512-VQAadSubZIhNpH46IR3yWO4kZZjMxN1opDrzePLdVKAZ+DFjkGD/rf4v1jap744uPVU6yjL/smZbRIIJTOUnKQ==",\n      "requires": {\n        "@webassemblyjs/wast-printer": "1.8.5"\n      }\n    },\n    "@webassemblyjs/helper-fsm": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-fsm/-/helper-fsm-1.8.5.tgz",\n      "integrity": "sha512-kRuX/saORcg8se/ft6Q2UbRpZwP4y7YrWsLXPbbmtepKr22i8Z4O3V5QE9DbZK908dh5Xya4Un57SDIKwB9eow=="\n    },\n    "@webassemblyjs/helper-module-context": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-module-context/-/helper-module-context-1.8.5.tgz",\n      "integrity": "sha512-/O1B236mN7UNEU4t9X7Pj38i4VoU8CcMHyy3l2cV/kIF4U5KoHXDVqcDuOs1ltkac90IM4vZdHc52t1x8Yfs3g==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "mamacro": "^0.0.3"\n      }\n    },\n    "@webassemblyjs/helper-wasm-bytecode": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.8.5.tgz",\n      "integrity": "sha512-Cu4YMYG3Ddl72CbmpjU/wbP6SACcOPVbHN1dI4VJNJVgFwaKf1ppeFJrwydOG3NDHxVGuCfPlLZNyEdIYlQ6QQ=="\n    },\n    "@webassemblyjs/helper-wasm-section": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.8.5.tgz",\n      "integrity": "sha512-VV083zwR+VTrIWWtgIUpqfvVdK4ff38loRmrdDBgBT8ADXYsEZ5mPQ4Nde90N3UYatHdYoDIFb7oHzMncI02tA==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-buffer": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/wasm-gen": "1.8.5"\n      }\n    },\n    "@webassemblyjs/ieee754": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.8.5.tgz",\n      "integrity": "sha512-aaCvQYrvKbY/n6wKHb/ylAJr27GglahUO89CcGXMItrOBqRarUMxWLJgxm9PJNuKULwN5n1csT9bYoMeZOGF3g==",\n      "requires": {\n        "@xtuc/ieee754": "^1.2.0"\n      }\n    },\n    "@webassemblyjs/leb128": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.8.5.tgz",\n      "integrity": "sha512-plYUuUwleLIziknvlP8VpTgO4kqNaH57Y3JnNa6DLpu/sGcP6hbVdfdX5aHAV716pQBKrfuU26BJK29qY37J7A==",\n      "requires": {\n        "@xtuc/long": "4.2.2"\n      }\n    },\n    "@webassemblyjs/utf8": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.8.5.tgz",\n      "integrity": "sha512-U7zgftmQriw37tfD934UNInokz6yTmn29inT2cAetAsaU9YeVCveWEwhKL1Mg4yS7q//NGdzy79nlXh3bT8Kjw=="\n    },\n    "@webassemblyjs/wasm-edit": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.8.5.tgz",\n      "integrity": "sha512-A41EMy8MWw5yvqj7MQzkDjU29K7UJq1VrX2vWLzfpRHt3ISftOXqrtojn7nlPsZ9Ijhp5NwuODuycSvfAO/26Q==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-buffer": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/helper-wasm-section": "1.8.5",\n        "@webassemblyjs/wasm-gen": "1.8.5",\n        "@webassemblyjs/wasm-opt": "1.8.5",\n        "@webassemblyjs/wasm-parser": "1.8.5",\n        "@webassemblyjs/wast-printer": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wasm-gen": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.8.5.tgz",\n      "integrity": "sha512-BCZBT0LURC0CXDzj5FXSc2FPTsxwp3nWcqXQdOZE4U7h7i8FqtFK5Egia6f9raQLpEKT1VL7zr4r3+QX6zArWg==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/ieee754": "1.8.5",\n        "@webassemblyjs/leb128": "1.8.5",\n        "@webassemblyjs/utf8": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wasm-opt": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.8.5.tgz",\n      "integrity": "sha512-HKo2mO/Uh9A6ojzu7cjslGaHaUU14LdLbGEKqTR7PBKwT6LdPtLLh9fPY33rmr5wcOMrsWDbbdCHq4hQUdd37Q==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-buffer": "1.8.5",\n        "@webassemblyjs/wasm-gen": "1.8.5",\n        "@webassemblyjs/wasm-parser": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wasm-parser": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.8.5.tgz",\n      "integrity": "sha512-pi0SYE9T6tfcMkthwcgCpL0cM9nRYr6/6fjgDtL6q/ZqKHdMWvxitRi5JcZ7RI4SNJJYnYNaWy5UUrHQy998lw==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-api-error": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/ieee754": "1.8.5",\n        "@webassemblyjs/leb128": "1.8.5",\n        "@webassemblyjs/utf8": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wast-parser": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-parser/-/wast-parser-1.8.5.tgz",\n      "integrity": "sha512-daXC1FyKWHF1i11obK086QRlsMsY4+tIOKgBqI1lxAnkp9xe9YMcgOxm9kLe+ttjs5aWV2KKE1TWJCN57/Btsg==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/floating-point-hex-parser": "1.8.5",\n        "@webassemblyjs/helper-api-error": "1.8.5",\n        "@webassemblyjs/helper-code-frame": "1.8.5",\n        "@webassemblyjs/helper-fsm": "1.8.5",\n        "@xtuc/long": "4.2.2"\n      }\n    },\n    "@webassemblyjs/wast-printer": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.8.5.tgz",\n      "integrity": "sha512-w0U0pD4EhlnvRyeJzBqaVSJAo9w/ce7/WPogeXLzGkO6hzhr4GnQIZ4W4uUt5b9ooAaXPtnXlj0gzsXEOUNYMg==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/wast-parser": "1.8.5",\n        "@xtuc/long": "4.2.2"\n      }\n    },\n    "@xtuc/ieee754": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",\n      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA=="\n    },\n    "@xtuc/long": {\n      "version": "4.2.2",\n      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",\n      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ=="\n    },\n    "abab": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.0.tgz",\n      "integrity": "sha512-sY5AXXVZv4Y1VACTtR11UJCPHHudgY5i26Qj5TypE6DKlIApbwb5uqhXcJ5UUGbvZNRh7EeIoW+LrJumBsKp7w=="\n    },\n    "abbrev": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",\n      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="\n    },\n    "accepts": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.5.tgz",\n      "integrity": "sha1-63d99gEXI6OxTopywIBcjoZ0a9I=",\n      "requires": {\n        "mime-types": "~2.1.18",\n        "negotiator": "0.6.1"\n      }\n    },\n    "accord": {\n      "version": "0.29.0",\n      "resolved": "https://registry.npmjs.org/accord/-/accord-0.29.0.tgz",\n      "integrity": "sha512-3OOR92FTc2p5/EcOzPcXp+Cbo+3C15nV9RXHlOUBCBpHhcB+0frbSNR9ehED/o7sTcyGVtqGJpguToEdlXhD0w==",\n      "requires": {\n        "convert-source-map": "^1.5.0",\n        "glob": "^7.0.5",\n        "indx": "^0.2.3",\n        "lodash.clone": "^4.3.2",\n        "lodash.defaults": "^4.0.1",\n        "lodash.flatten": "^4.2.0",\n        "lodash.merge": "^4.4.0",\n        "lodash.partialright": "^4.1.4",\n        "lodash.pick": "^4.2.1",\n        "lodash.uniq": "^4.3.0",\n        "resolve": "^1.5.0",\n        "semver": "^5.3.0",\n        "uglify-js": "^2.8.22",\n        "when": "^3.7.8"\n      },\n      "dependencies": {\n        "camelcase": {\n          "version": "1.2.1",\n          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz",\n          "integrity": "sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk="\n        },\n        "cliui": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",\n          "integrity": "sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=",\n          "requires": {\n            "center-align": "^0.1.1",\n            "right-align": "^0.1.1",\n            "wordwrap": "0.0.2"\n          }\n        },\n        "lodash.defaults": {\n          "version": "4.2.0",\n          "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-4.2.0.tgz",\n          "integrity": "sha1-0JF4cW/+pN3p5ft7N/bwgCJ0WAw="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "uglify-js": {\n          "version": "2.8.29",\n          "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.29.tgz",\n          "integrity": "sha1-KcVzMUgFe7Th913zW3qcty5qWd0=",\n          "requires": {\n            "source-map": "~0.5.1",\n            "uglify-to-browserify": "~1.0.0",\n            "yargs": "~3.10.0"\n          }\n        },\n        "wordwrap": {\n          "version": "0.0.2",\n          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",\n          "integrity": "sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8="\n        },\n        "yargs": {\n          "version": "3.10.0",\n          "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",\n          "integrity": "sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=",\n          "requires": {\n            "camelcase": "^1.0.2",\n            "cliui": "^2.1.0",\n            "decamelize": "^1.0.0",\n            "window-size": "0.1.0"\n          }\n        }\n      }\n    },\n    "acorn": {\n      "version": "6.1.1",\n      "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.1.1.tgz",\n      "integrity": "sha512-jPTiwtOxaHNaAPg/dmrJ/beuzLRnXtB0kQPQ8JpotKJgTB6rX6c8mlf315941pyjBSaPg8NHXS9fhP4u17DpGA=="\n    },\n    "acorn-dynamic-import": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/acorn-dynamic-import/-/acorn-dynamic-import-4.0.0.tgz",\n      "integrity": "sha512-d3OEjQV4ROpoflsnUA8HozoIR504TFxNivYEUi6uwz0IYhBkTDXGuWlNdMtybRt3nqVx/L6XqMt0FxkXuWKZhw=="\n    },\n    "acorn-globals": {\n      "version": "4.3.2",\n      "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-4.3.2.tgz",\n      "integrity": "sha512-BbzvZhVtZP+Bs1J1HcwrQe8ycfO0wStkSGxuul3He3GkHOIZ6eTqOkPuw9IP1X3+IkOo4wiJmwkobzXYz4wewQ==",\n      "requires": {\n        "acorn": "^6.0.1",\n        "acorn-walk": "^6.0.1"\n      }\n    },\n    "acorn-jsx": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.0.1.tgz",\n      "integrity": "sha512-HJ7CfNHrfJLlNTzIEUTj43LNWGkqpRLxm3YjAlcD0ACydk9XynzYsCBHxut+iqt+1aBXkx9UP/w/ZqMr13XIzg=="\n    },\n    "acorn-walk": {\n      "version": "6.1.1",\n      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-6.1.1.tgz",\n      "integrity": "sha512-OtUw6JUTgxA2QoqqmrmQ7F2NYqiBPi/L2jqHyFtllhOUvXYQXf0Z1CYUinIfyT4bTCGmrA7gX9FvHA81uzCoVw=="\n    },\n    "address": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/address/-/address-1.0.3.tgz",\n      "integrity": "sha512-z55ocwKBRLryBs394Sm3ushTtBeg6VAeuku7utSoSnsJKvKcnXFIyC6vh27n3rXyxSgkJBBCAvyOn7gSUcTYjg=="\n    },\n    "ajv": {\n      "version": "6.10.0",\n      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.0.tgz",\n      "integrity": "sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==",\n      "requires": {\n        "fast-deep-equal": "^2.0.1",\n        "fast-json-stable-stringify": "^2.0.0",\n        "json-schema-traverse": "^0.4.1",\n        "uri-js": "^4.2.2"\n      }\n    },\n    "ajv-errors": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/ajv-errors/-/ajv-errors-1.0.1.tgz",\n      "integrity": "sha512-DCRfO/4nQ+89p/RK43i8Ezd41EqdGIU4ld7nGF8OQ14oc/we5rEntLCUa7+jrn3nn83BosfwZA0wb4pon2o8iQ=="\n    },\n    "ajv-keywords": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.4.0.tgz",\n      "integrity": "sha512-aUjdRFISbuFOl0EIZc+9e4FfZp0bDZgAdOOf30bJmw8VM9v84SHyVyxDfbWxpGYbdZD/9XoKxfHVNmxPkhwyGw=="\n    },\n    "align-text": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",\n      "integrity": "sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=",\n      "requires": {\n        "kind-of": "^3.0.2",\n        "longest": "^1.0.1",\n        "repeat-string": "^1.5.2"\n      }\n    },\n    "alphanum-sort": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz",\n      "integrity": "sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM="\n    },\n    "amdefine": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz",\n      "integrity": "sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU="\n    },\n    "ansi-colors": {\n      "version": "3.2.4",\n      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.2.4.tgz",\n      "integrity": "sha512-hHUXGagefjN2iRrID63xckIvotOXOojhQKWIPUZ4mNUZ9nLZW+7FMNoE1lOkEhNWYsx/7ysGIuJYCiMAA9FnrA=="\n    },\n    "ansi-cyan": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/ansi-cyan/-/ansi-cyan-0.1.1.tgz",\n      "integrity": "sha1-U4rlKK+JgvKK4w2G8vF0VtJgmHM=",\n      "requires": {\n        "ansi-wrap": "0.1.0"\n      }\n    },\n    "ansi-escapes": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",\n      "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="\n    },\n    "ansi-gray": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/ansi-gray/-/ansi-gray-0.1.1.tgz",\n      "integrity": "sha1-KWLPVOyXksSFEKPetSRDaGHvclE=",\n      "requires": {\n        "ansi-wrap": "0.1.0"\n      }\n    },\n    "ansi-html": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/ansi-html/-/ansi-html-0.0.7.tgz",\n      "integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="\n    },\n    "ansi-red": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/ansi-red/-/ansi-red-0.1.1.tgz",\n      "integrity": "sha1-jGOPnRCAgAo1PJwoyKgcpHBdlGw=",\n      "requires": {\n        "ansi-wrap": "0.1.0"\n      }\n    },\n    "ansi-regex": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",\n      "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="\n    },\n    "ansi-styles": {\n      "version": "3.2.1",\n      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",\n      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",\n      "requires": {\n        "color-convert": "^1.9.0"\n      }\n    },\n    "ansi-wrap": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz",\n      "integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768="\n    },\n    "anymatch": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",\n      "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",\n      "requires": {\n        "micromatch": "^3.1.4",\n        "normalize-path": "^2.1.1"\n      }\n    },\n    "append-buffer": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/append-buffer/-/append-buffer-1.0.2.tgz",\n      "integrity": "sha1-2CIM9GYIFSXv6lBhTz3mUU36WPE=",\n      "requires": {\n        "buffer-equal": "^1.0.0"\n      }\n    },\n    "append-transform": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/append-transform/-/append-transform-1.0.0.tgz",\n      "integrity": "sha512-P009oYkeHyU742iSZJzZZywj4QRJdnTWffaKuJQLablCZ1uz6/cW4yaRgcDaoQ+uwOxxnt0gRUcwfsNP2ri0gw==",\n      "requires": {\n        "default-require-extensions": "^2.0.0"\n      }\n    },\n    "aproba": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",\n      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw=="\n    },\n    "archy": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/archy/-/archy-1.0.0.tgz",\n      "integrity": "sha1-+cjBN1fMHde8N5rHeyxipcKGjEA="\n    },\n    "argparse": {\n      "version": "1.0.10",\n      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",\n      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",\n      "requires": {\n        "sprintf-js": "~1.0.2"\n      }\n    },\n    "aria-query": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-3.0.0.tgz",\n      "integrity": "sha1-ZbP8wcoRVajJrmTW7uKX8V1RM8w=",\n      "requires": {\n        "ast-types-flow": "0.0.7",\n        "commander": "^2.11.0"\n      }\n    },\n    "arr-diff": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",\n      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="\n    },\n    "arr-filter": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/arr-filter/-/arr-filter-1.1.2.tgz",\n      "integrity": "sha1-Q/3d0JHo7xGqTEXZzcGOLf8XEe4=",\n      "requires": {\n        "make-iterator": "^1.0.0"\n      }\n    },\n    "arr-flatten": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",\n      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg=="\n    },\n    "arr-map": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/arr-map/-/arr-map-2.0.2.tgz",\n      "integrity": "sha1-Onc0X/wc814qkYJWAfnljy4kysQ=",\n      "requires": {\n        "make-iterator": "^1.0.0"\n      }\n    },\n    "arr-union": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",\n      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ="\n    },\n    "array-differ": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz",\n      "integrity": "sha1-7/UuN1gknTO+QCuLuOVkuytdQDE="\n    },\n    "array-each": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/array-each/-/array-each-1.0.1.tgz",\n      "integrity": "sha1-p5SvDAWrF1KEbudTofIRoFugxE8="\n    },\n    "array-equal": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/array-equal/-/array-equal-1.0.0.tgz",\n      "integrity": "sha1-jCpe8kcv2ep0KwTHenUJO6J1fJM="\n    },\n    "array-filter": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/array-filter/-/array-filter-0.0.1.tgz",\n      "integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="\n    },\n    "array-flatten": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-2.1.2.tgz",\n      "integrity": "sha512-hNfzcOV8W4NdualtqBFPyVO+54DSJuZGY9qT4pRroB6S9e3iiido2ISIC5h9R2sPJ8H3FHCIiEnsv1lPXO3KtQ=="\n    },\n    "array-includes": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.0.3.tgz",\n      "integrity": "sha1-GEtI9i2S10UrsxsyMWXH+L0CJm0=",\n      "requires": {\n        "define-properties": "^1.1.2",\n        "es-abstract": "^1.7.0"\n      }\n    },\n    "array-initial": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/array-initial/-/array-initial-1.1.0.tgz",\n      "integrity": "sha1-L6dLJnOTccOUe9enrcc74zSz15U=",\n      "requires": {\n        "array-slice": "^1.0.0",\n        "is-number": "^4.0.0"\n      },\n      "dependencies": {\n        "is-number": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",\n          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="\n        }\n      }\n    },\n    "array-last": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/array-last/-/array-last-1.3.0.tgz",\n      "integrity": "sha512-eOCut5rXlI6aCOS7Z7kCplKRKyiFQ6dHFBem4PwlwKeNFk2/XxTrhRh5T9PyaEWGy/NHTZWbY+nsZlNFJu9rYg==",\n      "requires": {\n        "is-number": "^4.0.0"\n      },\n      "dependencies": {\n        "is-number": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",\n          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="\n        }\n      }\n    },\n    "array-map": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/array-map/-/array-map-0.0.0.tgz",\n      "integrity": "sha1-iKK6tz0c97zVwbEYoAP2b2ZfpmI="\n    },\n    "array-reduce": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/array-reduce/-/array-reduce-0.0.0.tgz",\n      "integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="\n    },\n    "array-slice": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-1.1.0.tgz",\n      "integrity": "sha512-B1qMD3RBP7O8o0H2KbrXDyB0IccejMF15+87Lvlor12ONPRHP6gTjXMNkt/d3ZuOGbAe66hFmaCfECI24Ufp6w=="\n    },\n    "array-sort": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/array-sort/-/array-sort-1.0.0.tgz",\n      "integrity": "sha512-ihLeJkonmdiAsD7vpgN3CRcx2J2S0TiYW+IS/5zHBI7mKUq3ySvBdzzBfD236ubDBQFiiyG3SWCPc+msQ9KoYg==",\n      "requires": {\n        "default-compare": "^1.0.0",\n        "get-value": "^2.0.6",\n        "kind-of": "^5.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "5.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n        }\n      }\n    },\n    "array-union": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",\n      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",\n      "requires": {\n        "array-uniq": "^1.0.1"\n      }\n    },\n    "array-uniq": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",\n      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="\n    },\n    "array-unique": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",\n      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="\n    },\n    "arrify": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",\n      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="\n    },\n    "asap": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",\n      "integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY="\n    },\n    "asn1": {\n      "version": "0.2.4",\n      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",\n      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",\n      "requires": {\n        "safer-buffer": "~2.1.0"\n      }\n    },\n    "asn1.js": {\n      "version": "4.10.1",\n      "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",\n      "integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",\n      "requires": {\n        "bn.js": "^4.0.0",\n        "inherits": "^2.0.1",\n        "minimalistic-assert": "^1.0.0"\n      }\n    },\n    "assert": {\n      "version": "1.4.1",\n      "resolved": "https://registry.npmjs.org/assert/-/assert-1.4.1.tgz",\n      "integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",\n      "requires": {\n        "util": "0.10.3"\n      },\n      "dependencies": {\n        "inherits": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",\n          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE="\n        },\n        "util": {\n          "version": "0.10.3",\n          "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",\n          "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",\n          "requires": {\n            "inherits": "2.0.1"\n          }\n        }\n      }\n    },\n    "assert-plus": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",\n      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="\n    },\n    "assign-symbols": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",\n      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="\n    },\n    "ast-types": {\n      "version": "0.9.6",\n      "resolved": "https://registry.npmjs.org/ast-types/-/ast-types-0.9.6.tgz",\n      "integrity": "sha1-ECyenpAF0+fjgpvwxPok7oYu6bk="\n    },\n    "ast-types-flow": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.7.tgz",\n      "integrity": "sha1-9wtzXGvKGlycItmCw+Oef+ujva0="\n    },\n    "astral-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz",\n      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg=="\n    },\n    "async": {\n      "version": "2.6.2",\n      "resolved": "https://registry.npmjs.org/async/-/async-2.6.2.tgz",\n      "integrity": "sha512-H1qVYh1MYhEEFLsP97cVKqCGo7KfCyTt6uEWqsTBr9SO84oK9Uwbyd/yCW+6rKJLHksBNUVWZDAjfS+Ccx0Bbg==",\n      "requires": {\n        "lodash": "^4.17.11"\n      }\n    },\n    "async-done": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/async-done/-/async-done-1.3.1.tgz",\n      "integrity": "sha512-R1BaUeJ4PMoLNJuk+0tLJgjmEqVsdN118+Z8O+alhnQDQgy0kmD5Mqi0DNEmMx2LM0Ed5yekKu+ZXYvIHceicg==",\n      "requires": {\n        "end-of-stream": "^1.1.0",\n        "once": "^1.3.2",\n        "process-nextick-args": "^1.0.7",\n        "stream-exhaust": "^1.0.1"\n      },\n      "dependencies": {\n        "process-nextick-args": {\n          "version": "1.0.7",\n          "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",\n          "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M="\n        }\n      }\n    },\n    "async-each": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",\n      "integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ=="\n    },\n    "async-limiter": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.0.tgz",\n      "integrity": "sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg=="\n    },\n    "async-settle": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/async-settle/-/async-settle-1.0.0.tgz",\n      "integrity": "sha1-HQqRS7Aldb7IqPOnTlCA9yssDGs=",\n      "requires": {\n        "async-done": "^1.2.2"\n      }\n    },\n    "asynckit": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",\n      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="\n    },\n    "atob": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",\n      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="\n    },\n    "autoprefixer": {\n      "version": "9.5.1",\n      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-9.5.1.tgz",\n      "integrity": "sha512-KJSzkStUl3wP0D5sdMlP82Q52JLy5+atf2MHAre48+ckWkXgixmfHyWmA77wFDy6jTHU6mIgXv6hAQ2mf1PjJQ==",\n      "requires": {\n        "browserslist": "^4.5.4",\n        "caniuse-lite": "^1.0.30000957",\n        "normalize-range": "^0.1.2",\n        "num2fraction": "^1.2.2",\n        "postcss": "^7.0.14",\n        "postcss-value-parser": "^3.3.1"\n      }\n    },\n    "aws-sign2": {\n      "version": "0.7.0",\n      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",\n      "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="\n    },\n    "aws4": {\n      "version": "1.8.0",\n      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz",\n      "integrity": "sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ=="\n    },\n    "axobject-query": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-2.0.2.tgz",\n      "integrity": "sha512-MCeek8ZH7hKyO1rWUbKNQBbl4l2eY0ntk7OGi+q0RlafrCnfPxC06WZA+uebCfmYp4mNU9jRBP1AhGyf8+W3ww==",\n      "requires": {\n        "ast-types-flow": "0.0.7"\n      }\n    },\n    "babel-code-frame": {\n      "version": "6.26.0",\n      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",\n      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",\n      "requires": {\n        "chalk": "^1.1.3",\n        "esutils": "^2.0.2",\n        "js-tokens": "^3.0.2"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "js-tokens": {\n          "version": "3.0.2",\n          "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",\n          "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "babel-eslint": {\n      "version": "10.0.1",\n      "resolved": "https://registry.npmjs.org/babel-eslint/-/babel-eslint-10.0.1.tgz",\n      "integrity": "sha512-z7OT1iNV+TjOwHNLLyJk+HN+YVWX+CLE6fPD2SymJZOZQBs+QIexFjhm4keGTm8MW9xr4EC9Q0PbaLB24V5GoQ==",\n      "requires": {\n        "@babel/code-frame": "^7.0.0",\n        "@babel/parser": "^7.0.0",\n        "@babel/traverse": "^7.0.0",\n        "@babel/types": "^7.0.0",\n        "eslint-scope": "3.7.1",\n        "eslint-visitor-keys": "^1.0.0"\n      },\n      "dependencies": {\n        "eslint-scope": {\n          "version": "3.7.1",\n          "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-3.7.1.tgz",\n          "integrity": "sha1-PWPD7f2gLgbgGkUq2IyqzHzctug=",\n          "requires": {\n            "esrecurse": "^4.1.0",\n            "estraverse": "^4.1.1"\n          }\n        }\n      }\n    },\n    "babel-extract-comments": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/babel-extract-comments/-/babel-extract-comments-1.0.0.tgz",\n      "integrity": "sha512-qWWzi4TlddohA91bFwgt6zO/J0X+io7Qp184Fw0m2JYRSTZnJbFR8+07KmzudHCZgOiKRCrjhylwv9Xd8gfhVQ==",\n      "requires": {\n        "babylon": "^6.18.0"\n      }\n    },\n    "babel-jest": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-24.7.1.tgz",\n      "integrity": "sha512-GPnLqfk8Mtt0i4OemjWkChi73A3ALs4w2/QbG64uAj8b5mmwzxc7jbJVRZt8NJkxi6FopVHog9S3xX6UJKb2qg==",\n      "requires": {\n        "@jest/transform": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "@types/babel__core": "^7.1.0",\n        "babel-plugin-istanbul": "^5.1.0",\n        "babel-preset-jest": "^24.6.0",\n        "chalk": "^2.4.2",\n        "slash": "^2.0.0"\n      }\n    },\n    "babel-loader": {\n      "version": "8.0.5",\n      "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-8.0.5.tgz",\n      "integrity": "sha512-NTnHnVRd2JnRqPC0vW+iOQWU5pchDbYXsG2E6DMXEpMfUcQKclF9gmf3G3ZMhzG7IG9ji4coL0cm+FxeWxDpnw==",\n      "requires": {\n        "find-cache-dir": "^2.0.0",\n        "loader-utils": "^1.0.2",\n        "mkdirp": "^0.5.1",\n        "util.promisify": "^1.0.0"\n      }\n    },\n    "babel-plugin-dynamic-import-node": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.2.0.tgz",\n      "integrity": "sha512-fP899ELUnTaBcIzmrW7nniyqqdYWrWuJUyPWHxFa/c7r7hS6KC8FscNfLlBNIoPSc55kYMGEEKjPjJGCLbE1qA==",\n      "requires": {\n        "object.assign": "^4.1.0"\n      }\n    },\n    "babel-plugin-emotion": {\n      "version": "9.2.11",\n      "resolved": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.11.tgz",\n      "integrity": "sha512-dgCImifnOPPSeXod2znAmgc64NhaaOjGEHROR/M+lmStb3841yK1sgaDYAYMnlvWNz8GnpwIPN0VmNpbWYZ+VQ==",\n      "requires": {\n        "@babel/helper-module-imports": "^7.0.0",\n        "@emotion/babel-utils": "^0.6.4",\n        "@emotion/hash": "^0.6.2",\n        "@emotion/memoize": "^0.6.1",\n        "@emotion/stylis": "^0.7.0",\n        "babel-plugin-macros": "^2.0.0",\n        "babel-plugin-syntax-jsx": "^6.18.0",\n        "convert-source-map": "^1.5.0",\n        "find-root": "^1.1.0",\n        "mkdirp": "^0.5.1",\n        "source-map": "^0.5.7",\n        "touch": "^2.0.1"\n      }\n    },\n    "babel-plugin-istanbul": {\n      "version": "5.1.2",\n      "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-5.1.2.tgz",\n      "integrity": "sha512-U3ZVajC+Z69Gim7ZzmD4Wcsq76i/1hqDamBfowc1tWzWjybRy70iWfngP2ME+1CrgcgZ/+muIbPY/Yi0dxdIkQ==",\n      "requires": {\n        "find-up": "^3.0.0",\n        "istanbul-lib-instrument": "^3.2.0",\n        "test-exclude": "^5.2.2"\n      }\n    },\n    "babel-plugin-jest-hoist": {\n      "version": "24.6.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-24.6.0.tgz",\n      "integrity": "sha512-3pKNH6hMt9SbOv0F3WVmy5CWQ4uogS3k0GY5XLyQHJ9EGpAT9XWkFd2ZiXXtkwFHdAHa5j7w7kfxSP5lAIwu7w==",\n      "requires": {\n        "@types/babel__traverse": "^7.0.6"\n      }\n    },\n    "babel-plugin-macros": {\n      "version": "2.5.1",\n      "resolved": "https://registry.npmjs.org/babel-plugin-macros/-/babel-plugin-macros-2.5.1.tgz",\n      "integrity": "sha512-xN3KhAxPzsJ6OQTktCanNpIFnnMsCV+t8OloKxIL72D6+SUZYFn9qfklPgef5HyyDtzYZqqb+fs1S12+gQY82Q==",\n      "requires": {\n        "@babel/runtime": "^7.4.2",\n        "cosmiconfig": "^5.2.0",\n        "resolve": "^1.10.0"\n      }\n    },\n    "babel-plugin-named-asset-import": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/babel-plugin-named-asset-import/-/babel-plugin-named-asset-import-0.3.2.tgz",\n      "integrity": "sha512-CxwvxrZ9OirpXQ201Ec57OmGhmI8/ui/GwTDy0hSp6CmRvgRC0pSair6Z04Ck+JStA0sMPZzSJ3uE4n17EXpPQ=="\n    },\n    "babel-plugin-syntax-jsx": {\n      "version": "6.18.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-jsx/-/babel-plugin-syntax-jsx-6.18.0.tgz",\n      "integrity": "sha1-CvMqmm4Tyno/1QaeYtew9Y0NiUY="\n    },\n    "babel-plugin-syntax-object-rest-spread": {\n      "version": "6.13.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-object-rest-spread/-/babel-plugin-syntax-object-rest-spread-6.13.0.tgz",\n      "integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="\n    },\n    "babel-plugin-transform-object-rest-spread": {\n      "version": "6.26.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-transform-object-rest-spread/-/babel-plugin-transform-object-rest-spread-6.26.0.tgz",\n      "integrity": "sha1-DzZpLVD+9rfi1LOsFHgTepY7ewY=",\n      "requires": {\n        "babel-plugin-syntax-object-rest-spread": "^6.8.0",\n        "babel-runtime": "^6.26.0"\n      }\n    },\n    "babel-plugin-transform-react-remove-prop-types": {\n      "version": "0.4.24",\n      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-remove-prop-types/-/babel-plugin-transform-react-remove-prop-types-0.4.24.tgz",\n      "integrity": "sha512-eqj0hVcJUR57/Ug2zE1Yswsw4LhuqqHhD+8v120T1cl3kjg76QwtyBrdIk4WVwK+lAhBJVYCd/v+4nc4y+8JsA=="\n    },\n    "babel-preset-jest": {\n      "version": "24.6.0",\n      "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-24.6.0.tgz",\n      "integrity": "sha512-pdZqLEdmy1ZK5kyRUfvBb2IfTPb2BUvIJczlPspS8fWmBQslNNDBqVfh7BW5leOVJMDZKzjD8XEyABTk6gQ5yw==",\n      "requires": {\n        "@babel/plugin-syntax-object-rest-spread": "^7.0.0",\n        "babel-plugin-jest-hoist": "^24.6.0"\n      }\n    },\n    "babel-preset-react-app": {\n      "version": "8.0.0",\n      "resolved": "https://registry.npmjs.org/babel-preset-react-app/-/babel-preset-react-app-8.0.0.tgz",\n      "integrity": "sha512-6Dmj7e8l7eWE+R6sKKLRrGEQXMfcBqBYlphaAgT1ml8qT1NEP+CyTZyfjmgKGqHZfwH3RQCUOuP6y4mpGc7tgg==",\n      "requires": {\n        "@babel/core": "7.4.3",\n        "@babel/plugin-proposal-class-properties": "7.4.0",\n        "@babel/plugin-proposal-decorators": "7.4.0",\n        "@babel/plugin-proposal-object-rest-spread": "7.4.3",\n        "@babel/plugin-syntax-dynamic-import": "7.2.0",\n        "@babel/plugin-transform-classes": "7.4.3",\n        "@babel/plugin-transform-destructuring": "7.4.3",\n        "@babel/plugin-transform-flow-strip-types": "7.4.0",\n        "@babel/plugin-transform-react-constant-elements": "7.2.0",\n        "@babel/plugin-transform-react-display-name": "7.2.0",\n        "@babel/plugin-transform-runtime": "7.4.3",\n        "@babel/preset-env": "7.4.3",\n        "@babel/preset-react": "7.0.0",\n        "@babel/preset-typescript": "7.3.3",\n        "@babel/runtime": "7.4.3",\n        "babel-plugin-dynamic-import-node": "2.2.0",\n        "babel-plugin-macros": "2.5.1",\n        "babel-plugin-transform-react-remove-prop-types": "0.4.24"\n      }\n    },\n    "babel-runtime": {\n      "version": "6.26.0",\n      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",\n      "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",\n      "requires": {\n        "core-js": "^2.4.0",\n        "regenerator-runtime": "^0.11.0"\n      },\n      "dependencies": {\n        "core-js": {\n          "version": "2.6.5",\n          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.5.tgz",\n          "integrity": "sha512-klh/kDpwX8hryYL14M9w/xei6vrv6sE8gTHDG7/T/+SEovB/G4ejwcfE/CBzO6Edsu+OETZMZ3wcX/EjUkrl5A=="\n        },\n        "regenerator-runtime": {\n          "version": "0.11.1",\n          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",\n          "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg=="\n        }\n      }\n    },\n    "babylon": {\n      "version": "6.18.0",\n      "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",\n      "integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ=="\n    },\n    "bach": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/bach/-/bach-1.2.0.tgz",\n      "integrity": "sha1-Szzpa/JxNPeaG0FKUcFONMO9mIA=",\n      "requires": {\n        "arr-filter": "^1.1.1",\n        "arr-flatten": "^1.0.1",\n        "arr-map": "^2.0.0",\n        "array-each": "^1.0.0",\n        "array-initial": "^1.0.0",\n        "array-last": "^1.1.1",\n        "async-done": "^1.2.2",\n        "async-settle": "^1.0.0",\n        "now-and-later": "^2.0.0"\n      }\n    },\n    "bail": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/bail/-/bail-1.0.3.tgz",\n      "integrity": "sha512-1X8CnjFVQ+a+KW36uBNMTU5s8+v5FzeqrP7hTG5aTb4aPreSbZJlhwPon9VKMuEVgV++JM+SQrALY3kr7eswdg=="\n    },\n    "balanced-match": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",\n      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="\n    },\n    "base": {\n      "version": "0.11.2",\n      "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",\n      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",\n      "requires": {\n        "cache-base": "^1.0.1",\n        "class-utils": "^0.3.5",\n        "component-emitter": "^1.2.1",\n        "define-property": "^1.0.0",\n        "isobject": "^3.0.1",\n        "mixin-deep": "^1.2.0",\n        "pascalcase": "^0.1.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",\n          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",\n          "requires": {\n            "is-descriptor": "^1.0.0"\n          }\n        },\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "^1.0.0",\n            "is-data-descriptor": "^1.0.0",\n            "kind-of": "^6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "base62": {\n      "version": "1.2.8",\n      "resolved": "https://registry.npmjs.org/base62/-/base62-1.2.8.tgz",\n      "integrity": "sha512-V6YHUbjLxN1ymqNLb1DPHoU1CpfdL7d2YTIp5W3U4hhoG4hhxNmsFDs66M9EXxBiSEke5Bt5dwdfMwwZF70iLA=="\n    },\n    "base64-js": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.0.tgz",\n      "integrity": "sha512-ccav/yGvoa80BQDljCxsmmQ3Xvx60/UpBIij5QN21W3wBi/hhIC9OoO+KLpu9IJTS9j4DRVJ3aDDF9cMSoa2lw=="\n    },\n    "batch": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/batch/-/batch-0.6.1.tgz",\n      "integrity": "sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY="\n    },\n    "bcrypt-pbkdf": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",\n      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",\n      "requires": {\n        "tweetnacl": "^0.14.3"\n      }\n    },\n    "beeper": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/beeper/-/beeper-1.1.1.tgz",\n      "integrity": "sha1-5tXqjF2tABMEpwsiY4RH9pyy+Ak="\n    },\n    "better-console": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/better-console/-/better-console-1.0.1.tgz",\n      "integrity": "sha1-mjNh+fRc2vr/pdh9Yv1Jt/jb8ys=",\n      "requires": {\n        "chalk": "^1.1.3",\n        "cli-table": "~0.3.1"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "big.js": {\n      "version": "5.2.2",\n      "resolved": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",\n      "integrity": "sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ=="\n    },\n    "binary-extensions": {\n      "version": "1.13.1",\n      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",\n      "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw=="\n    },\n    "binaryextensions": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/binaryextensions/-/binaryextensions-2.1.2.tgz",\n      "integrity": "sha512-xVNN69YGDghOqCCtA6FI7avYrr02mTJjOgB0/f1VPD3pJC8QEvjTKWc4epDx8AqxxA75NI0QpVM2gPJXUbE4Tg=="\n    },\n    "bluebird": {\n      "version": "3.5.4",\n      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.5.4.tgz",\n      "integrity": "sha512-FG+nFEZChJrbQ9tIccIfZJBz3J7mLrAhxakAbnrJWn8d7aKOC+LWifa0G+p4ZqKp4y13T7juYvdhq9NzKdsrjw=="\n    },\n    "bn.js": {\n      "version": "4.11.8",\n      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",\n      "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="\n    },\n    "body-parser": {\n      "version": "1.18.3",\n      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz",\n      "integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",\n      "requires": {\n        "bytes": "3.0.0",\n        "content-type": "~1.0.4",\n        "debug": "2.6.9",\n        "depd": "~1.1.2",\n        "http-errors": "~1.6.3",\n        "iconv-lite": "0.4.23",\n        "on-finished": "~2.3.0",\n        "qs": "6.5.2",\n        "raw-body": "2.3.3",\n        "type-is": "~1.6.16"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "iconv-lite": {\n          "version": "0.4.23",\n          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz",\n          "integrity": "sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==",\n          "requires": {\n            "safer-buffer": ">= 2.1.2 < 3"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "bonjour": {\n      "version": "3.5.0",\n      "resolved": "https://registry.npmjs.org/bonjour/-/bonjour-3.5.0.tgz",\n      "integrity": "sha1-jokKGD2O6aI5OzhExpGkK897yfU=",\n      "requires": {\n        "array-flatten": "^2.1.0",\n        "deep-equal": "^1.0.1",\n        "dns-equal": "^1.0.0",\n        "dns-txt": "^2.0.2",\n        "multicast-dns": "^6.0.1",\n        "multicast-dns-service-types": "^1.1.0"\n      }\n    },\n    "boolbase": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",\n      "integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="\n    },\n    "bowser": {\n      "version": "1.9.4",\n      "resolved": "https://registry.npmjs.org/bowser/-/bowser-1.9.4.tgz",\n      "integrity": "sha512-9IdMmj2KjigRq6oWhmwv1W36pDuA4STQZ8q6YO9um+x07xgYNCD3Oou+WP/3L1HNz7iqythGet3/p4wvc8AAwQ==",\n      "dev": true\n    },\n    "brace-expansion": {\n      "version": "1.1.11",\n      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",\n      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",\n      "requires": {\n        "balanced-match": "^1.0.0",\n        "concat-map": "0.0.1"\n      }\n    },\n    "braces": {\n      "version": "2.3.2",\n      "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",\n      "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",\n      "requires": {\n        "arr-flatten": "^1.1.0",\n        "array-unique": "^0.3.2",\n        "extend-shallow": "^2.0.1",\n        "fill-range": "^4.0.0",\n        "isobject": "^3.0.1",\n        "repeat-element": "^1.1.2",\n        "snapdragon": "^0.8.1",\n        "snapdragon-node": "^2.0.1",\n        "split-string": "^3.0.2",\n        "to-regex": "^3.0.1"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        }\n      }\n    },\n    "brcast": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/brcast/-/brcast-3.0.1.tgz",\n      "integrity": "sha512-eI3yqf9YEqyGl9PCNTR46MGvDylGtaHjalcz6Q3fAPnP/PhpKkkve52vFdfGpwp4VUvK6LUr4TQN+2stCrEwTg=="\n    },\n    "brorand": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",\n      "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="\n    },\n    "browser-process-hrtime": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-0.1.3.tgz",\n      "integrity": "sha512-bRFnI4NnjO6cnyLmOV/7PVoDEMJChlcfN0z4s1YMBY989/SvlfMI1lgCnkFUs53e9gQF+w7qu7XdllSTiSl8Aw=="\n    },\n    "browser-resolve": {\n      "version": "1.11.3",\n      "resolved": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",\n      "integrity": "sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==",\n      "requires": {\n        "resolve": "1.1.7"\n      },\n      "dependencies": {\n        "resolve": {\n          "version": "1.1.7",\n          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",\n          "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs="\n        }\n      }\n    },\n    "browserify-aes": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",\n      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",\n      "requires": {\n        "buffer-xor": "^1.0.3",\n        "cipher-base": "^1.0.0",\n        "create-hash": "^1.1.0",\n        "evp_bytestokey": "^1.0.3",\n        "inherits": "^2.0.1",\n        "safe-buffer": "^5.0.1"\n      }\n    },\n    "browserify-cipher": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",\n      "integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",\n      "requires": {\n        "browserify-aes": "^1.0.4",\n        "browserify-des": "^1.0.0",\n        "evp_bytestokey": "^1.0.0"\n      }\n    },\n    "browserify-des": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",\n      "integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",\n      "requires": {\n        "cipher-base": "^1.0.1",\n        "des.js": "^1.0.0",\n        "inherits": "^2.0.1",\n        "safe-buffer": "^5.1.2"\n      }\n    },\n    "browserify-rsa": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.0.1.tgz",\n      "integrity": "sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=",\n      "requires": {\n        "bn.js": "^4.1.0",\n        "randombytes": "^2.0.1"\n      }\n    },\n    "browserify-sign": {\n      "version": "4.0.4",\n      "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.0.4.tgz",\n      "integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",\n      "requires": {\n        "bn.js": "^4.1.1",\n        "browserify-rsa": "^4.0.0",\n        "create-hash": "^1.1.0",\n        "create-hmac": "^1.1.2",\n        "elliptic": "^6.0.0",\n        "inherits": "^2.0.1",\n        "parse-asn1": "^5.0.0"\n      }\n    },\n    "browserify-zlib": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz",\n      "integrity": "sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==",\n      "requires": {\n        "pako": "~1.0.5"\n      }\n    },\n    "browserslist": {\n      "version": "4.5.5",\n      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.5.5.tgz",\n      "integrity": "sha512-0QFO1r/2c792Ohkit5XI8Cm8pDtZxgNl2H6HU4mHrpYz7314pEYcsAVVatM0l/YmxPnEzh9VygXouj4gkFUTKA==",\n      "requires": {\n        "caniuse-lite": "^1.0.30000960",\n        "electron-to-chromium": "^1.3.124",\n        "node-releases": "^1.1.14"\n      }\n    },\n    "bser": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/bser/-/bser-2.0.0.tgz",\n      "integrity": "sha1-mseNPtXZFYBP2HrLFYvHlxR6Fxk=",\n      "requires": {\n        "node-int64": "^0.4.0"\n      }\n    },\n    "buffer": {\n      "version": "4.9.1",\n      "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz",\n      "integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",\n      "requires": {\n        "base64-js": "^1.0.2",\n        "ieee754": "^1.1.4",\n        "isarray": "^1.0.0"\n      }\n    },\n    "buffer-equal": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/buffer-equal/-/buffer-equal-1.0.0.tgz",\n      "integrity": "sha1-WWFrSYME1Var1GaWayLu2j7KX74="\n    },\n    "buffer-from": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",\n      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A=="\n    },\n    "buffer-indexof": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/buffer-indexof/-/buffer-indexof-1.1.1.tgz",\n      "integrity": "sha512-4/rOEg86jivtPTeOUUT61jJO1Ya1TrR/OkqCSZDyq84WJh3LuuiphBYJN+fm5xufIk4XAFcEwte/8WzC8If/1g=="\n    },\n    "buffer-xor": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",\n      "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk="\n    },\n    "builtin-status-codes": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",\n      "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug="\n    },\n    "bytes": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",\n      "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg="\n    },\n    "cacache": {\n      "version": "11.3.2",\n      "resolved": "https://registry.npmjs.org/cacache/-/cacache-11.3.2.tgz",\n      "integrity": "sha512-E0zP4EPGDOaT2chM08Als91eYnf8Z+eH1awwwVsngUmgppfM5jjJ8l3z5vO5p5w/I3LsiXawb1sW0VY65pQABg==",\n      "requires": {\n        "bluebird": "^3.5.3",\n        "chownr": "^1.1.1",\n        "figgy-pudding": "^3.5.1",\n        "glob": "^7.1.3",\n        "graceful-fs": "^4.1.15",\n        "lru-cache": "^5.1.1",\n        "mississippi": "^3.0.0",\n        "mkdirp": "^0.5.1",\n        "move-concurrently": "^1.0.1",\n        "promise-inflight": "^1.0.1",\n        "rimraf": "^2.6.2",\n        "ssri": "^6.0.1",\n        "unique-filename": "^1.1.1",\n        "y18n": "^4.0.0"\n      }\n    },\n    "cache-base": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",\n      "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",\n      "requires": {\n        "collection-visit": "^1.0.0",\n        "component-emitter": "^1.2.1",\n        "get-value": "^2.0.6",\n        "has-value": "^1.0.0",\n        "isobject": "^3.0.1",\n        "set-value": "^2.0.0",\n        "to-object-path": "^0.3.0",\n        "union-value": "^1.0.0",\n        "unset-value": "^1.0.0"\n      }\n    },\n    "call-me-maybe": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz",\n      "integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms="\n    },\n    "caller-callsite": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz",\n      "integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=",\n      "requires": {\n        "callsites": "^2.0.0"\n      }\n    },\n    "caller-path": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz",\n      "integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=",\n      "requires": {\n        "caller-callsite": "^2.0.0"\n      }\n    },\n    "callsites": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz",\n      "integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="\n    },\n    "camel-case": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/camel-case/-/camel-case-3.0.0.tgz",\n      "integrity": "sha1-yjw2iKTpzzpM2nd9xNy8cTJJz3M=",\n      "requires": {\n        "no-case": "^2.2.0",\n        "upper-case": "^1.1.1"\n      }\n    },\n    "camelcase": {\n      "version": "5.3.1",\n      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",\n      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg=="\n    },\n    "caniuse-api": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz",\n      "integrity": "sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==",\n      "requires": {\n        "browserslist": "^4.0.0",\n        "caniuse-lite": "^1.0.0",\n        "lodash.memoize": "^4.1.2",\n        "lodash.uniq": "^4.5.0"\n      }\n    },\n    "caniuse-lite": {\n      "version": "1.0.30000962",\n      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30000962.tgz",\n      "integrity": "sha512-WXYsW38HK+6eaj5IZR16Rn91TGhU3OhbwjKZvJ4HN/XBIABLKfbij9Mnd3pM0VEwZSlltWjoWg3I8FQ0DGgNOA=="\n    },\n    "capture-exit": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/capture-exit/-/capture-exit-2.0.0.tgz",\n      "integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",\n      "requires": {\n        "rsvp": "^4.8.4"\n      }\n    },\n    "case-sensitive-paths-webpack-plugin": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/case-sensitive-paths-webpack-plugin/-/case-sensitive-paths-webpack-plugin-2.2.0.tgz",\n      "integrity": "sha512-u5ElzokS8A1pm9vM3/iDgTcI3xqHxuCao94Oz8etI3cf0Tio0p8izkDYbTIn09uP3yUUr6+veaE6IkjnTYS46g=="\n    },\n    "caseless": {\n      "version": "0.12.0",\n      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",\n      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="\n    },\n    "ccount": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/ccount/-/ccount-1.0.3.tgz",\n      "integrity": "sha512-Jt9tIBkRc9POUof7QA/VwWd+58fKkEEfI+/t1/eOlxKM7ZhrczNzMFefge7Ai+39y1pR/pP6cI19guHy3FSLmw=="\n    },\n    "center-align": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",\n      "integrity": "sha1-qg0yYptu6XIgBBHL1EYckHvCt60=",\n      "requires": {\n        "align-text": "^0.1.3",\n        "lazy-cache": "^1.0.3"\n      }\n    },\n    "chain-function": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/chain-function/-/chain-function-1.0.1.tgz",\n      "integrity": "sha512-SxltgMwL9uCko5/ZCLiyG2B7R9fY4pDZUw7hJ4MhirdjBLosoDqkWABi3XMucddHdLiFJMb7PD2MZifZriuMTg==",\n      "dev": true\n    },\n    "chalk": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",\n      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",\n      "requires": {\n        "ansi-styles": "^3.2.1",\n        "escape-string-regexp": "^1.0.5",\n        "supports-color": "^5.3.0"\n      }\n    },\n    "change-emitter": {\n      "version": "0.1.6",\n      "resolved": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.6.tgz",\n      "integrity": "sha1-6LL+PX8at9aaMhma/5HqaTFAlRU="\n    },\n    "chardet": {\n      "version": "0.7.0",\n      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",\n      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA=="\n    },\n    "chokidar": {\n      "version": "2.1.5",\n      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.5.tgz",\n      "integrity": "sha512-i0TprVWp+Kj4WRPtInjexJ8Q+BqTE909VpH8xVhXrJkoc5QC8VO9TryGOqTr+2hljzc1sC62t22h5tZePodM/A==",\n      "requires": {\n        "anymatch": "^2.0.0",\n        "async-each": "^1.0.1",\n        "braces": "^2.3.2",\n        "fsevents": "^1.2.7",\n        "glob-parent": "^3.1.0",\n        "inherits": "^2.0.3",\n        "is-binary-path": "^1.0.0",\n        "is-glob": "^4.0.0",\n        "normalize-path": "^3.0.0",\n        "path-is-absolute": "^1.0.0",\n        "readdirp": "^2.2.1",\n        "upath": "^1.1.1"\n      },\n      "dependencies": {\n        "fsevents": {\n          "version": "1.2.8",\n          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.8.tgz",\n          "integrity": "sha512-tPvHgPGB7m40CZ68xqFGkKuzN+RnpGmSV+hgeKxhRpbxdqKXUFJGC3yonBOLzQBcJyGpdZFDfCsdOC2KFsXzeA==",\n          "optional": true,\n          "requires": {\n            "nan": "^2.12.1",\n            "node-pre-gyp": "^0.12.0"\n          },\n          "dependencies": {\n            "abbrev": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "ansi-regex": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true,\n              "optional": true\n            },\n            "are-we-there-yet": {\n              "version": "1.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "delegates": "^1.0.0",\n                "readable-stream": "^2.0.6"\n              }\n            },\n            "balanced-match": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "brace-expansion": {\n              "version": "1.1.11",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "balanced-match": "^1.0.0",\n                "concat-map": "0.0.1"\n              }\n            },\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "code-point-at": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "concat-map": {\n              "version": "0.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "console-control-strings": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "core-util-is": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "debug": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ms": "^2.1.1"\n              }\n            },\n            "deep-extend": {\n              "version": "0.6.0",\n              "bundled": true,\n              "optional": true\n            },\n            "delegates": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "detect-libc": {\n              "version": "1.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "fs-minipass": {\n              "version": "1.2.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "^2.2.1"\n              }\n            },\n            "fs.realpath": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "gauge": {\n              "version": "2.7.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "aproba": "^1.0.3",\n                "console-control-strings": "^1.0.0",\n                "has-unicode": "^2.0.0",\n                "object-assign": "^4.1.0",\n                "signal-exit": "^3.0.0",\n                "string-width": "^1.0.1",\n                "strip-ansi": "^3.0.1",\n                "wide-align": "^1.1.0"\n              }\n            },\n            "glob": {\n              "version": "7.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "fs.realpath": "^1.0.0",\n                "inflight": "^1.0.4",\n                "inherits": "2",\n                "minimatch": "^3.0.4",\n                "once": "^1.3.0",\n                "path-is-absolute": "^1.0.0"\n              }\n            },\n            "has-unicode": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "iconv-lite": {\n              "version": "0.4.24",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safer-buffer": ">= 2.1.2 < 3"\n              }\n            },\n            "ignore-walk": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimatch": "^3.0.4"\n              }\n            },\n            "inflight": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "once": "^1.3.0",\n                "wrappy": "1"\n              }\n            },\n            "inherits": {\n              "version": "2.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "ini": {\n              "version": "1.3.5",\n              "bundled": true,\n              "optional": true\n            },\n            "is-fullwidth-code-point": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "number-is-nan": "^1.0.0"\n              }\n            },\n            "isarray": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "minimatch": {\n              "version": "3.0.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "brace-expansion": "^1.1.7"\n              }\n            },\n            "minimist": {\n              "version": "0.0.8",\n              "bundled": true,\n              "optional": true\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "^5.1.2",\n                "yallist": "^3.0.0"\n              }\n            },\n            "minizlib": {\n              "version": "1.2.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "^2.2.1"\n              }\n            },\n            "mkdirp": {\n              "version": "0.5.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimist": "0.0.8"\n              }\n            },\n            "ms": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "needle": {\n              "version": "2.3.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "debug": "^4.1.0",\n                "iconv-lite": "^0.4.4",\n                "sax": "^1.2.4"\n              }\n            },\n            "node-pre-gyp": {\n              "version": "0.12.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "detect-libc": "^1.0.2",\n                "mkdirp": "^0.5.1",\n                "needle": "^2.2.1",\n                "nopt": "^4.0.1",\n                "npm-packlist": "^1.1.6",\n                "npmlog": "^4.0.2",\n                "rc": "^1.2.7",\n                "rimraf": "^2.6.1",\n                "semver": "^5.3.0",\n                "tar": "^4"\n              }\n            },\n            "nopt": {\n              "version": "4.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "abbrev": "1",\n                "osenv": "^0.1.4"\n              }\n            },\n            "npm-bundled": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true\n            },\n            "npm-packlist": {\n              "version": "1.4.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ignore-walk": "^3.0.1",\n                "npm-bundled": "^1.0.1"\n              }\n            },\n            "npmlog": {\n              "version": "4.1.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "are-we-there-yet": "~1.1.2",\n                "console-control-strings": "~1.1.0",\n                "gauge": "~2.7.3",\n                "set-blocking": "~2.0.0"\n              }\n            },\n            "number-is-nan": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "object-assign": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "once": {\n              "version": "1.4.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "wrappy": "1"\n              }\n            },\n            "os-homedir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "os-tmpdir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "osenv": {\n              "version": "0.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "os-homedir": "^1.0.0",\n                "os-tmpdir": "^1.0.0"\n              }\n            },\n            "path-is-absolute": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "process-nextick-args": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "rc": {\n              "version": "1.2.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "deep-extend": "^0.6.0",\n                "ini": "~1.3.0",\n                "minimist": "^1.2.0",\n                "strip-json-comments": "~2.0.1"\n              },\n              "dependencies": {\n                "minimist": {\n                  "version": "1.2.0",\n                  "bundled": true,\n                  "optional": true\n                }\n              }\n            },\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "rimraf": {\n              "version": "2.6.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "glob": "^7.1.3"\n              }\n            },\n            "safe-buffer": {\n              "version": "5.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "safer-buffer": {\n              "version": "2.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "sax": {\n              "version": "1.2.4",\n              "bundled": true,\n              "optional": true\n            },\n            "semver": {\n              "version": "5.7.0",\n              "bundled": true,\n              "optional": true\n            },\n            "set-blocking": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "signal-exit": {\n              "version": "3.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "code-point-at": "^1.0.0",\n                "is-fullwidth-code-point": "^1.0.0",\n                "strip-ansi": "^3.0.0"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            },\n            "strip-ansi": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ansi-regex": "^2.0.0"\n              }\n            },\n            "strip-json-comments": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "tar": {\n              "version": "4.4.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "chownr": "^1.1.1",\n                "fs-minipass": "^1.2.5",\n                "minipass": "^2.3.4",\n                "minizlib": "^1.1.1",\n                "mkdirp": "^0.5.0",\n                "safe-buffer": "^5.1.2",\n                "yallist": "^3.0.2"\n              }\n            },\n            "util-deprecate": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "wide-align": {\n              "version": "1.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "string-width": "^1.0.2 || 2"\n              }\n            },\n            "wrappy": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true,\n              "optional": true\n            }\n          }\n        },\n        "normalize-path": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",\n          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="\n        }\n      }\n    },\n    "chownr": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.1.tgz",\n      "integrity": "sha512-j38EvO5+LHX84jlo6h4UzmOwi0UgW61WRyPtJz4qaadK5eY3BTS5TY/S1Stc3Uk2lIM6TPevAlULiEJwie860g=="\n    },\n    "chrome-trace-event": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.0.tgz",\n      "integrity": "sha512-xDbVgyfDTT2piup/h8dK/y4QZfJRSa73bw1WZ8b4XM1o7fsFubUVGYcE+1ANtOzJJELGpYoG2961z0Z6OAld9A==",\n      "requires": {\n        "tslib": "^1.9.0"\n      }\n    },\n    "ci-info": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",\n      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ=="\n    },\n    "cipher-base": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",\n      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",\n      "requires": {\n        "inherits": "^2.0.1",\n        "safe-buffer": "^5.0.1"\n      }\n    },\n    "class-utils": {\n      "version": "0.3.6",\n      "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",\n      "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",\n      "requires": {\n        "arr-union": "^3.1.0",\n        "define-property": "^0.2.5",\n        "isobject": "^3.0.0",\n        "static-extend": "^0.1.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "^0.1.0"\n          }\n        }\n      }\n    },\n    "classnames": {\n      "version": "2.2.6",\n      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.2.6.tgz",\n      "integrity": "sha512-JR/iSQOSt+LQIWwrwEzJ9uk0xfN3mTVYMwt1Ir5mUcSN6pU+V4zQFFaJsclJbPuAUQH+yfWef6tm7l1quW3C8Q=="\n    },\n    "clean-css": {\n      "version": "4.2.1",\n      "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-4.2.1.tgz",\n      "integrity": "sha512-4ZxI6dy4lrY6FHzfiy1aEOXgu4LIsW2MhwG0VBKdcoGoH/XLFgaHSdLTGr4O8Be6A8r3MOphEiI8Gc1n0ecf3g==",\n      "requires": {\n        "source-map": "~0.6.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "cli-cursor": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",\n      "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",\n      "requires": {\n        "restore-cursor": "^2.0.0"\n      }\n    },\n    "cli-table": {\n      "version": "0.3.1",\n      "resolved": "https://registry.npmjs.org/cli-table/-/cli-table-0.3.1.tgz",\n      "integrity": "sha1-9TsFJmqLGguTSz0IIebi3FkUriM=",\n      "requires": {\n        "colors": "1.0.3"\n      }\n    },\n    "cli-width": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",\n      "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="\n    },\n    "cliui": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/cliui/-/cliui-4.1.0.tgz",\n      "integrity": "sha512-4FG+RSG9DL7uEwRUZXZn3SS34DiDPfzP0VOiEwtUWlE+AR2EIg+hSyvrIgUUfhdgR/UkAeW2QHgeP+hWrXs7jQ==",\n      "requires": {\n        "string-width": "^2.1.1",\n        "strip-ansi": "^4.0.0",\n        "wrap-ansi": "^2.0.0"\n      }\n    },\n    "clone": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",\n      "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4="\n    },\n    "clone-buffer": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/clone-buffer/-/clone-buffer-1.0.0.tgz",\n      "integrity": "sha1-4+JbIHrE5wGvch4staFnksrD3Fg="\n    },\n    "clone-deep": {\n      "version": "0.2.4",\n      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-0.2.4.tgz",\n      "integrity": "sha1-TnPdCen7lxzDhnDF3O2cGJZIHMY=",\n      "requires": {\n        "for-own": "^0.1.3",\n        "is-plain-object": "^2.0.1",\n        "kind-of": "^3.0.2",\n        "lazy-cache": "^1.0.3",\n        "shallow-clone": "^0.1.2"\n      }\n    },\n    "clone-stats": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz",\n      "integrity": "sha1-uI+UqCzzi4eR1YBG6kAprYjKmdE="\n    },\n    "cloneable-readable": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/cloneable-readable/-/cloneable-readable-1.1.2.tgz",\n      "integrity": "sha512-Bq6+4t+lbM8vhTs/Bef5c5AdEMtapp/iFb6+s4/Hh9MVTt8OLKH7ZOOZSCT+Ys7hsHvqv0GuMPJ1lnQJVHvxpg==",\n      "requires": {\n        "inherits": "^2.0.1",\n        "process-nextick-args": "^2.0.0",\n        "readable-stream": "^2.3.5"\n      }\n    },\n    "co": {\n      "version": "4.6.0",\n      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",\n      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ="\n    },\n    "coa": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/coa/-/coa-2.0.2.tgz",\n      "integrity": "sha512-q5/jG+YQnSy4nRTV4F7lPepBJZ8qBNJJDBuJdoejDyLXgmL7IEo+Le2JDZudFTFt7mrCqIRaSjws4ygRCTCAXA==",\n      "requires": {\n        "@types/q": "^1.5.1",\n        "chalk": "^2.4.1",\n        "q": "^1.1.2"\n      }\n    },\n    "code-point-at": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",\n      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="\n    },\n    "collection-map": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/collection-map/-/collection-map-1.0.0.tgz",\n      "integrity": "sha1-rqDwb40mx4DCt1SUOFVEsiVa8Yw=",\n      "requires": {\n        "arr-map": "^2.0.2",\n        "for-own": "^1.0.0",\n        "make-iterator": "^1.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "^1.0.1"\n          }\n        }\n      }\n    },\n    "collection-visit": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",\n      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",\n      "requires": {\n        "map-visit": "^1.0.0",\n        "object-visit": "^1.0.0"\n      }\n    },\n    "color": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/color/-/color-3.1.0.tgz",\n      "integrity": "sha512-CwyopLkuRYO5ei2EpzpIh6LqJMt6Mt+jZhO5VI5f/wJLZriXQE32/SSqzmrh+QB+AZT81Cj8yv+7zwToW8ahZg==",\n      "requires": {\n        "color-convert": "^1.9.1",\n        "color-string": "^1.5.2"\n      }\n    },\n    "color-convert": {\n      "version": "1.9.3",\n      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",\n      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",\n      "requires": {\n        "color-name": "1.1.3"\n      }\n    },\n    "color-name": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",\n      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="\n    },\n    "color-string": {\n      "version": "1.5.3",\n      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",\n      "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",\n      "requires": {\n        "color-name": "^1.0.0",\n        "simple-swizzle": "^0.2.2"\n      }\n    },\n    "color-support": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz",\n      "integrity": "sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg=="\n    },\n    "colors": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/colors/-/colors-1.0.3.tgz",\n      "integrity": "sha1-BDP0TYCWgP3rYO0mDxsMJi6CpAs="\n    },\n    "combined-stream": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.7.tgz",\n      "integrity": "sha512-brWl9y6vOB1xYPZcpZde3N9zDByXTosAeMDo4p1wzo6UMOX4vumB+TP1RZ76sfE6Md68Q0NJSrE/gbezd4Ul+w==",\n      "requires": {\n        "delayed-stream": "~1.0.0"\n      }\n    },\n    "comma-separated-tokens": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/comma-separated-tokens/-/comma-separated-tokens-1.0.6.tgz",\n      "integrity": "sha512-f20oA7jsrrmERTS70r3tmRSxR8IJV2MTN7qe6hzgX+3ARfXrdMJFvGWvWQK0xpcBurg9j9eO2MiqzZ8Y+/UPCA=="\n    },\n    "commander": {\n      "version": "2.20.0",\n      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.0.tgz",\n      "integrity": "sha512-7j2y+40w61zy6YC2iRNpUe/NwhNyoXrYpHMrSunaMG64nRnaf96zO/KMQR4OyN/UnE5KLyEBnKHd4aG3rskjpQ=="\n    },\n    "common-tags": {\n      "version": "1.8.0",\n      "resolved": "https://registry.npmjs.org/common-tags/-/common-tags-1.8.0.tgz",\n      "integrity": "sha512-6P6g0uetGpW/sdyUy/iQQCbFF0kWVMSIVSyYz7Zgjcgh8mgw8PQzDNZeyZ5DQ2gM7LBoZPHmnjz8rUthkBG5tw=="\n    },\n    "commondir": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",\n      "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs="\n    },\n    "commoner": {\n      "version": "0.10.8",\n      "resolved": "https://registry.npmjs.org/commoner/-/commoner-0.10.8.tgz",\n      "integrity": "sha1-NPw2cs0kOT6LtH5wyqApOBH08sU=",\n      "requires": {\n        "commander": "^2.5.0",\n        "detective": "^4.3.1",\n        "glob": "^5.0.15",\n        "graceful-fs": "^4.1.2",\n        "iconv-lite": "^0.4.5",\n        "mkdirp": "^0.5.0",\n        "private": "^0.1.6",\n        "q": "^1.1.2",\n        "recast": "^0.11.17"\n      },\n      "dependencies": {\n        "glob": {\n          "version": "5.0.15",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-5.0.15.tgz",\n          "integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",\n          "requires": {\n            "inflight": "^1.0.4",\n            "inherits": "2",\n            "minimatch": "2 || 3",\n            "once": "^1.3.0",\n            "path-is-absolute": "^1.0.0"\n          }\n        }\n      }\n    },\n    "compare-versions": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/compare-versions/-/compare-versions-3.4.0.tgz",\n      "integrity": "sha512-tK69D7oNXXqUW3ZNo/z7NXTEz22TCF0pTE+YF9cxvaAM9XnkLo1fV621xCLrRR6aevJlKxExkss0vWqUCUpqdg=="\n    },\n    "component-emitter": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",\n      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg=="\n    },\n    "compressible": {\n      "version": "2.0.16",\n      "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.16.tgz",\n      "integrity": "sha512-JQfEOdnI7dASwCuSPWIeVYwc/zMsu/+tRhoUvEfXz2gxOA2DNjmG5vhtFdBlhWPPGo+RdT9S3tgc/uH5qgDiiA==",\n      "requires": {\n        "mime-db": ">= 1.38.0 < 2"\n      }\n    },\n    "compression": {\n      "version": "1.7.4",\n      "resolved": "https://registry.npmjs.org/compression/-/compression-1.7.4.tgz",\n      "integrity": "sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==",\n      "requires": {\n        "accepts": "~1.3.5",\n        "bytes": "3.0.0",\n        "compressible": "~2.0.16",\n        "debug": "2.6.9",\n        "on-headers": "~1.0.2",\n        "safe-buffer": "5.1.2",\n        "vary": "~1.1.2"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "concat-map": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",\n      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="\n    },\n    "concat-stream": {\n      "version": "1.6.2",\n      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",\n      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",\n      "requires": {\n        "buffer-from": "^1.0.0",\n        "inherits": "^2.0.3",\n        "readable-stream": "^2.2.2",\n        "typedarray": "^0.0.6"\n      }\n    },\n    "concat-with-sourcemaps": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/concat-with-sourcemaps/-/concat-with-sourcemaps-1.1.0.tgz",\n      "integrity": "sha512-4gEjHJFT9e+2W/77h/DS5SGUgwDaOwprX8L/gl5+3ixnzkVJJsZWDSelmN3Oilw3LNDZjZV0yqH1hLG3k6nghg==",\n      "requires": {\n        "source-map": "^0.6.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "config-chain": {\n      "version": "1.1.12",\n      "resolved": "https://registry.npmjs.org/config-chain/-/config-chain-1.1.12.tgz",\n      "integrity": "sha512-a1eOIcu8+7lUInge4Rpf/n4Krkf3Dd9lqhljRzII1/Zno/kRtUWnznPO3jOKBmTEktkt3fkxisUcivoj0ebzoA==",\n      "requires": {\n        "ini": "^1.3.4",\n        "proto-list": "~1.2.1"\n      }\n    },\n    "confusing-browser-globals": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/confusing-browser-globals/-/confusing-browser-globals-1.0.7.tgz",\n      "integrity": "sha512-cgHI1azax5ATrZ8rJ+ODDML9Fvu67PimB6aNxBrc/QwSaDaM9eTfIEUHx3bBLJJ82ioSb+/5zfsMCCEJax3ByQ=="\n    },\n    "connect-history-api-fallback": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",\n      "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg=="\n    },\n    "console-browserify": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.1.0.tgz",\n      "integrity": "sha1-8CQcRXMKn8YyOyBtvzjtx0HQuxA=",\n      "requires": {\n        "date-now": "^0.1.4"\n      }\n    },\n    "constants-browserify": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",\n      "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="\n    },\n    "contains-path": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/contains-path/-/contains-path-0.1.0.tgz",\n      "integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="\n    },\n    "content-disposition": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz",\n      "integrity": "sha1-DPaLud318r55YcOoUXjLhdunjLQ="\n    },\n    "content-type": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",\n      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="\n    },\n    "convert-source-map": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.6.0.tgz",\n      "integrity": "sha512-eFu7XigvxdZ1ETfbgPBohgyQ/Z++C0eEhTor0qRwBw9unw+L0/6V8wkSuGgzdThkiS5lSpdptOQPD8Ak40a+7A==",\n      "requires": {\n        "safe-buffer": "~5.1.1"\n      }\n    },\n    "cookie": {\n      "version": "0.3.1",\n      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz",\n      "integrity": "sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s="\n    },\n    "cookie-signature": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",\n      "integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw="\n    },\n    "copy-concurrently": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/copy-concurrently/-/copy-concurrently-1.0.5.tgz",\n      "integrity": "sha512-f2domd9fsVDFtaFcbaRZuYXwtdmnzqbADSwhSWYxYB/Q8zsdUUFMXVRwXGDMWmbEzAn1kdRrtI1T/KTFOL4X2A==",\n      "requires": {\n        "aproba": "^1.1.1",\n        "fs-write-stream-atomic": "^1.0.8",\n        "iferr": "^0.1.5",\n        "mkdirp": "^0.5.1",\n        "rimraf": "^2.5.4",\n        "run-queue": "^1.0.0"\n      }\n    },\n    "copy-descriptor": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",\n      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40="\n    },\n    "copy-props": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/copy-props/-/copy-props-2.0.4.tgz",\n      "integrity": "sha512-7cjuUME+p+S3HZlbllgsn2CDwS+5eCCX16qBgNC4jgSTf49qR1VKy/Zhl400m0IQXl/bPGEVqncgUUMjrr4s8A==",\n      "requires": {\n        "each-props": "^1.3.0",\n        "is-plain-object": "^2.0.1"\n      }\n    },\n    "core-js": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.0.1.tgz",\n      "integrity": "sha512-sco40rF+2KlE0ROMvydjkrVMMG1vYilP2ALoRXcYR4obqbYIuV3Bg+51GEDW+HF8n7NRA+iaA4qD0nD9lo9mew=="\n    },\n    "core-js-compat": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.0.1.tgz",\n      "integrity": "sha512-2pC3e+Ht/1/gD7Sim/sqzvRplMiRnFQVlPpDVaHtY9l7zZP7knamr3VRD6NyGfHd84MrDC0tAM9ulNxYMW0T3g==",\n      "requires": {\n        "browserslist": "^4.5.4",\n        "core-js": "3.0.1",\n        "core-js-pure": "3.0.1",\n        "semver": "^6.0.0"\n      }\n    },\n    "core-js-pure": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/core-js-pure/-/core-js-pure-3.0.1.tgz",\n      "integrity": "sha512-mSxeQ6IghKW3MoyF4cz19GJ1cMm7761ON+WObSyLfTu/Jn3x7w4NwNFnrZxgl4MTSvYYepVLNuRtlB4loMwJ5g=="\n    },\n    "core-util-is": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",\n      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="\n    },\n    "cosmiconfig": {\n      "version": "5.2.0",\n      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.0.tgz",\n      "integrity": "sha512-nxt+Nfc3JAqf4WIWd0jXLjTJZmsPLrA9DDc4nRw2KFJQJK7DNooqSXrNI7tzLG50CF8axczly5UV929tBmh/7g==",\n      "requires": {\n        "import-fresh": "^2.0.0",\n        "is-directory": "^0.3.1",\n        "js-yaml": "^3.13.0",\n        "parse-json": "^4.0.0"\n      }\n    },\n    "create-ecdh": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.3.tgz",\n      "integrity": "sha512-GbEHQPMOswGpKXM9kCWVrremUcBmjteUaQ01T9rkKCPDXfUHX0IoP9LpHYo2NPFampa4e+/pFDc3jQdxrxQLaw==",\n      "requires": {\n        "bn.js": "^4.1.0",\n        "elliptic": "^6.0.0"\n      }\n    },\n    "create-emotion": {\n      "version": "9.2.12",\n      "resolved": "https://registry.npmjs.org/create-emotion/-/create-emotion-9.2.12.tgz",\n      "integrity": "sha512-P57uOF9NL2y98Xrbl2OuiDQUZ30GVmASsv5fbsjF4Hlraip2kyAvMm+2PoYUvFFw03Fhgtxk3RqZSm2/qHL9hA==",\n      "requires": {\n        "@emotion/hash": "^0.6.2",\n        "@emotion/memoize": "^0.6.1",\n        "@emotion/stylis": "^0.7.0",\n        "@emotion/unitless": "^0.6.2",\n        "csstype": "^2.5.2",\n        "stylis": "^3.5.0",\n        "stylis-rule-sheet": "^0.0.10"\n      }\n    },\n    "create-hash": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",\n      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",\n      "requires": {\n        "cipher-base": "^1.0.1",\n        "inherits": "^2.0.1",\n        "md5.js": "^1.3.4",\n        "ripemd160": "^2.0.1",\n        "sha.js": "^2.4.0"\n      }\n    },\n    "create-hmac": {\n      "version": "1.1.7",\n      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",\n      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",\n      "requires": {\n        "cipher-base": "^1.0.3",\n        "create-hash": "^1.1.0",\n        "inherits": "^2.0.1",\n        "ripemd160": "^2.0.0",\n        "safe-buffer": "^5.0.1",\n        "sha.js": "^2.4.8"\n      }\n    },\n    "cross-spawn": {\n      "version": "6.0.5",\n      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",\n      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",\n      "requires": {\n        "nice-try": "^1.0.4",\n        "path-key": "^2.0.1",\n        "semver": "^5.5.0",\n        "shebang-command": "^1.2.0",\n        "which": "^1.2.9"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "crypto-browserify": {\n      "version": "3.12.0",\n      "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",\n      "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",\n      "requires": {\n        "browserify-cipher": "^1.0.0",\n        "browserify-sign": "^4.0.0",\n        "create-ecdh": "^4.0.0",\n        "create-hash": "^1.1.0",\n        "create-hmac": "^1.1.0",\n        "diffie-hellman": "^5.0.0",\n        "inherits": "^2.0.1",\n        "pbkdf2": "^3.0.3",\n        "public-encrypt": "^4.0.0",\n        "randombytes": "^2.0.0",\n        "randomfill": "^1.0.3"\n      }\n    },\n    "css": {\n      "version": "2.2.4",\n      "resolved": "https://registry.npmjs.org/css/-/css-2.2.4.tgz",\n      "integrity": "sha512-oUnjmWpy0niI3x/mPL8dVEI1l7MnG3+HHyRPHf+YFSbK+svOhXpmSOcDURUh2aOCgl2grzrOPt1nHLuCVFULLw==",\n      "requires": {\n        "inherits": "^2.0.3",\n        "source-map": "^0.6.1",\n        "source-map-resolve": "^0.5.2",\n        "urix": "^0.1.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "css-blank-pseudo": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/css-blank-pseudo/-/css-blank-pseudo-0.1.4.tgz",\n      "integrity": "sha512-LHz35Hr83dnFeipc7oqFDmsjHdljj3TQtxGGiNWSOsTLIAubSm4TEz8qCaKFpk7idaQ1GfWscF4E6mgpBysA1w==",\n      "requires": {\n        "postcss": "^7.0.5"\n      }\n    },\n    "css-color-names": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/css-color-names/-/css-color-names-0.0.4.tgz",\n      "integrity": "sha1-gIrcLnnPhHOAabZGyyDsJ762KeA="\n    },\n    "css-declaration-sorter": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-4.0.1.tgz",\n      "integrity": "sha512-BcxQSKTSEEQUftYpBVnsH4SF05NTuBokb19/sBt6asXGKZ/6VP7PLG1CBCkFDYOnhXhPh0jMhO6xZ71oYHXHBA==",\n      "requires": {\n        "postcss": "^7.0.1",\n        "timsort": "^0.3.0"\n      }\n    },\n    "css-has-pseudo": {\n      "version": "0.10.0",\n      "resolved": "https://registry.npmjs.org/css-has-pseudo/-/css-has-pseudo-0.10.0.tgz",\n      "integrity": "sha512-Z8hnfsZu4o/kt+AuFzeGpLVhFOGO9mluyHBaA2bA8aCGTwah5sT3WV/fTHH8UNZUytOIImuGPrl/prlb4oX4qQ==",\n      "requires": {\n        "postcss": "^7.0.6",\n        "postcss-selector-parser": "^5.0.0-rc.4"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "^2.0.0",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "css-in-js-utils": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/css-in-js-utils/-/css-in-js-utils-2.0.1.tgz",\n      "integrity": "sha512-PJF0SpJT+WdbVVt0AOYp9C8GnuruRlL/UFW7932nLWmFLQTaWEzTBQEx7/hn4BuV+WON75iAViSUJLiU3PKbpA==",\n      "dev": true,\n      "requires": {\n        "hyphenate-style-name": "^1.0.2",\n        "isobject": "^3.0.1"\n      }\n    },\n    "css-loader": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-2.1.1.tgz",\n      "integrity": "sha512-OcKJU/lt232vl1P9EEDamhoO9iKY3tIjY5GU+XDLblAykTdgs6Ux9P1hTHve8nFKy5KPpOXOsVI/hIwi3841+w==",\n      "requires": {\n        "camelcase": "^5.2.0",\n        "icss-utils": "^4.1.0",\n        "loader-utils": "^1.2.3",\n        "normalize-path": "^3.0.0",\n        "postcss": "^7.0.14",\n        "postcss-modules-extract-imports": "^2.0.0",\n        "postcss-modules-local-by-default": "^2.0.6",\n        "postcss-modules-scope": "^2.1.0",\n        "postcss-modules-values": "^2.0.0",\n        "postcss-value-parser": "^3.3.0",\n        "schema-utils": "^1.0.0"\n      },\n      "dependencies": {\n        "normalize-path": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",\n          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="\n        }\n      }\n    },\n    "css-prefers-color-scheme": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/css-prefers-color-scheme/-/css-prefers-color-scheme-3.1.1.tgz",\n      "integrity": "sha512-MTu6+tMs9S3EUqzmqLXEcgNRbNkkD/TGFvowpeoWJn5Vfq7FMgsmRQs9X5NXAURiOBmOxm/lLjsDNXDE6k9bhg==",\n      "requires": {\n        "postcss": "^7.0.5"\n      }\n    },\n    "css-select": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/css-select/-/css-select-2.0.2.tgz",\n      "integrity": "sha512-dSpYaDVoWaELjvZ3mS6IKZM/y2PMPa/XYoEfYNZePL4U/XgyxZNroHEHReDx/d+VgXh9VbCTtFqLkFbmeqeaRQ==",\n      "requires": {\n        "boolbase": "^1.0.0",\n        "css-what": "^2.1.2",\n        "domutils": "^1.7.0",\n        "nth-check": "^1.0.2"\n      }\n    },\n    "css-select-base-adapter": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/css-select-base-adapter/-/css-select-base-adapter-0.1.1.tgz",\n      "integrity": "sha512-jQVeeRG70QI08vSTwf1jHxp74JoZsr2XSgETae8/xC8ovSnL2WF87GTLO86Sbwdt2lK4Umg4HnnwMO4YF3Ce7w=="\n    },\n    "css-tree": {\n      "version": "1.0.0-alpha.28",\n      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.28.tgz",\n      "integrity": "sha512-joNNW1gCp3qFFzj4St6zk+Wh/NBv0vM5YbEreZk0SD4S23S+1xBKb6cLDg2uj4P4k/GUMlIm6cKIDqIG+vdt0w==",\n      "requires": {\n        "mdn-data": "~1.1.0",\n        "source-map": "^0.5.3"\n      }\n    },\n    "css-unit-converter": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/css-unit-converter/-/css-unit-converter-1.1.1.tgz",\n      "integrity": "sha1-2bkoGtz9jO2TW9urqDeGiX9k6ZY="\n    },\n    "css-url-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/css-url-regex/-/css-url-regex-1.1.0.tgz",\n      "integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="\n    },\n    "css-vendor": {\n      "version": "0.3.8",\n      "resolved": "https://registry.npmjs.org/css-vendor/-/css-vendor-0.3.8.tgz",\n      "integrity": "sha1-ZCHP0wNM5mT+dnOXL9ARn8KJQfo=",\n      "requires": {\n        "is-in-browser": "^1.0.2"\n      }\n    },\n    "css-what": {\n      "version": "2.1.3",\n      "resolved": "https://registry.npmjs.org/css-what/-/css-what-2.1.3.tgz",\n      "integrity": "sha512-a+EPoD+uZiNfh+5fxw2nO9QwFa6nJe2Or35fGY6Ipw1R3R4AGz1d1TEZrCegvw2YTmZ0jXirGYlzxxpYSHwpEg=="\n    },\n    "cssdb": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/cssdb/-/cssdb-4.4.0.tgz",\n      "integrity": "sha512-LsTAR1JPEM9TpGhl/0p3nQecC2LJ0kD8X5YARu1hk/9I1gril5vDtMZyNxcEpxxDj34YNck/ucjuoUd66K03oQ=="\n    },\n    "cssesc": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",\n      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg=="\n    },\n    "cssnano": {\n      "version": "4.1.10",\n      "resolved": "https://registry.npmjs.org/cssnano/-/cssnano-4.1.10.tgz",\n      "integrity": "sha512-5wny+F6H4/8RgNlaqab4ktc3e0/blKutmq8yNlBFXA//nSFFAqAngjNVRzUvCgYROULmZZUoosL/KSoZo5aUaQ==",\n      "requires": {\n        "cosmiconfig": "^5.0.0",\n        "cssnano-preset-default": "^4.0.7",\n        "is-resolvable": "^1.0.0",\n        "postcss": "^7.0.0"\n      }\n    },\n    "cssnano-preset-default": {\n      "version": "4.0.7",\n      "resolved": "https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-4.0.7.tgz",\n      "integrity": "sha512-x0YHHx2h6p0fCl1zY9L9roD7rnlltugGu7zXSKQx6k2rYw0Hi3IqxcoAGF7u9Q5w1nt7vK0ulxV8Lo+EvllGsA==",\n      "requires": {\n        "css-declaration-sorter": "^4.0.1",\n        "cssnano-util-raw-cache": "^4.0.1",\n        "postcss": "^7.0.0",\n        "postcss-calc": "^7.0.1",\n        "postcss-colormin": "^4.0.3",\n        "postcss-convert-values": "^4.0.1",\n        "postcss-discard-comments": "^4.0.2",\n        "postcss-discard-duplicates": "^4.0.2",\n        "postcss-discard-empty": "^4.0.1",\n        "postcss-discard-overridden": "^4.0.1",\n        "postcss-merge-longhand": "^4.0.11",\n        "postcss-merge-rules": "^4.0.3",\n        "postcss-minify-font-values": "^4.0.2",\n        "postcss-minify-gradients": "^4.0.2",\n        "postcss-minify-params": "^4.0.2",\n        "postcss-minify-selectors": "^4.0.2",\n        "postcss-normalize-charset": "^4.0.1",\n        "postcss-normalize-display-values": "^4.0.2",\n        "postcss-normalize-positions": "^4.0.2",\n        "postcss-normalize-repeat-style": "^4.0.2",\n        "postcss-normalize-string": "^4.0.2",\n        "postcss-normalize-timing-functions": "^4.0.2",\n        "postcss-normalize-unicode": "^4.0.1",\n        "postcss-normalize-url": "^4.0.1",\n        "postcss-normalize-whitespace": "^4.0.2",\n        "postcss-ordered-values": "^4.1.2",\n        "postcss-reduce-initial": "^4.0.3",\n        "postcss-reduce-transforms": "^4.0.2",\n        "postcss-svgo": "^4.0.2",\n        "postcss-unique-selectors": "^4.0.1"\n      }\n    },\n    "cssnano-util-get-arguments": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/cssnano-util-get-arguments/-/cssnano-util-get-arguments-4.0.0.tgz",\n      "integrity": "sha1-7ToIKZ8h11dBsg87gfGU7UnMFQ8="\n    },\n    "cssnano-util-get-match": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/cssnano-util-get-match/-/cssnano-util-get-match-4.0.0.tgz",\n      "integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="\n    },\n    "cssnano-util-raw-cache": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/cssnano-util-raw-cache/-/cssnano-util-raw-cache-4.0.1.tgz",\n      "integrity": "sha512-qLuYtWK2b2Dy55I8ZX3ky1Z16WYsx544Q0UWViebptpwn/xDBmog2TLg4f+DBMg1rJ6JDWtn96WHbOKDWt1WQA==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "cssnano-util-same-parent": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/cssnano-util-same-parent/-/cssnano-util-same-parent-4.0.1.tgz",\n      "integrity": "sha512-WcKx5OY+KoSIAxBW6UBBRay1U6vkYheCdjyVNDm85zt5K9mHoGOfsOsqIszfAqrQQFIIKgjh2+FDgIj/zsl21Q=="\n    },\n    "csso": {\n      "version": "3.5.1",\n      "resolved": "https://registry.npmjs.org/csso/-/csso-3.5.1.tgz",\n      "integrity": "sha512-vrqULLffYU1Q2tLdJvaCYbONStnfkfimRxXNaGjxMldI0C7JPBC4rB1RyjhfdZ4m1frm8pM9uRPKH3d2knZ8gg==",\n      "requires": {\n        "css-tree": "1.0.0-alpha.29"\n      },\n      "dependencies": {\n        "css-tree": {\n          "version": "1.0.0-alpha.29",\n          "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.29.tgz",\n          "integrity": "sha512-sRNb1XydwkW9IOci6iB2xmy8IGCj6r/fr+JWitvJ2JxQRPzN3T4AGGVWCMlVmVwM1gtgALJRmGIlWv5ppnGGkg==",\n          "requires": {\n            "mdn-data": "~1.1.0",\n            "source-map": "^0.5.3"\n          }\n        }\n      }\n    },\n    "cssom": {\n      "version": "0.3.6",\n      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.6.tgz",\n      "integrity": "sha512-DtUeseGk9/GBW0hl0vVPpU22iHL6YB5BUX7ml1hB+GMpo0NX5G4voX3kdWiMSEguFtcW3Vh3djqNF4aIe6ne0A=="\n    },\n    "cssstyle": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-1.2.2.tgz",\n      "integrity": "sha512-43wY3kl1CVQSvL7wUY1qXkxVGkStjpkDmVjiIKX8R97uhajy8Bybay78uOtqvh7Q5GK75dNPfW0geWjE6qQQow==",\n      "requires": {\n        "cssom": "0.3.x"\n      }\n    },\n    "csstype": {\n      "version": "2.6.4",\n      "resolved": "https://registry.npmjs.org/csstype/-/csstype-2.6.4.tgz",\n      "integrity": "sha512-lAJUJP3M6HxFXbqtGRc0iZrdyeN+WzOWeY0q/VnFzI+kqVrYIzC7bWlKqCW7oCIdzoPkvfp82EVvrTlQ8zsWQg=="\n    },\n    "cyclist": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/cyclist/-/cyclist-0.2.2.tgz",\n      "integrity": "sha1-GzN5LhHpFKL9bW7WRHRkRE5fpkA="\n    },\n    "d": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",\n      "integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",\n      "requires": {\n        "es5-ext": "^0.10.9"\n      }\n    },\n    "damerau-levenshtein": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.4.tgz",\n      "integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="\n    },\n    "dashdash": {\n      "version": "1.14.1",\n      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",\n      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",\n      "requires": {\n        "assert-plus": "^1.0.0"\n      }\n    },\n    "data-urls": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-1.1.0.tgz",\n      "integrity": "sha512-YTWYI9se1P55u58gL5GkQHW4P6VJBJ5iBT+B5a7i2Tjadhv52paJG0qHX4A0OR6/t52odI64KP2YvFpkDOi3eQ==",\n      "requires": {\n        "abab": "^2.0.0",\n        "whatwg-mimetype": "^2.2.0",\n        "whatwg-url": "^7.0.0"\n      },\n      "dependencies": {\n        "whatwg-url": {\n          "version": "7.0.0",\n          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.0.0.tgz",\n          "integrity": "sha512-37GeVSIJ3kn1JgKyjiYNmSLP1yzbpb29jdmwBSgkD9h40/hyrR/OifpVUndji3tmwGgD8qpw7iQu3RSbCrBpsQ==",\n          "requires": {\n            "lodash.sortby": "^4.7.0",\n            "tr46": "^1.0.1",\n            "webidl-conversions": "^4.0.2"\n          }\n        }\n      }\n    },\n    "date-now": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/date-now/-/date-now-0.1.4.tgz",\n      "integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="\n    },\n    "dateformat": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",\n      "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI="\n    },\n    "debounce": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/debounce/-/debounce-1.2.0.tgz",\n      "integrity": "sha512-mYtLl1xfZLi1m4RtQYlZgJUNQjl4ZxVnHzIR8nLLgi4q1YT8o/WM+MK/f8yfcc9s5Ir5zRaPZyZU6xs1Syoocg=="\n    },\n    "debug": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",\n      "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",\n      "requires": {\n        "ms": "^2.1.1"\n      }\n    },\n    "decamelize": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",\n      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA="\n    },\n    "decode-uri-component": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",\n      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU="\n    },\n    "deep-assign": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/deep-assign/-/deep-assign-1.0.0.tgz",\n      "integrity": "sha1-sJJ0O+hCfcYh6gBnzex+cN0Z83s=",\n      "requires": {\n        "is-obj": "^1.0.0"\n      }\n    },\n    "deep-equal": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.0.1.tgz",\n      "integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="\n    },\n    "deep-is": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",\n      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ="\n    },\n    "deepmerge": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-3.2.0.tgz",\n      "integrity": "sha512-6+LuZGU7QCNUnAJyX8cIrlzoEgggTM6B7mm+znKOX4t5ltluT9KLjN6g61ECMS0LTsLW7yDpNoxhix5FZcrIow=="\n    },\n    "default-compare": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/default-compare/-/default-compare-1.0.0.tgz",\n      "integrity": "sha512-QWfXlM0EkAbqOCbD/6HjdwT19j7WCkMyiRhWilc4H9/5h/RzTF9gv5LYh1+CmDV5d1rki6KAWLtQale0xt20eQ==",\n      "requires": {\n        "kind-of": "^5.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "5.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n        }\n      }\n    },\n    "default-gateway": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/default-gateway/-/default-gateway-4.2.0.tgz",\n      "integrity": "sha512-h6sMrVB1VMWVrW13mSc6ia/DwYYw5MN6+exNu1OaJeFac5aSAvwM7lZ0NVfTABuSkQelr4h5oebg3KB1XPdjgA==",\n      "requires": {\n        "execa": "^1.0.0",\n        "ip-regex": "^2.1.0"\n      }\n    },\n    "default-require-extensions": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-2.0.0.tgz",\n      "integrity": "sha1-9fj7sYp9bVCyH2QfZJ67Uiz+JPc=",\n      "requires": {\n        "strip-bom": "^3.0.0"\n      }\n    },\n    "default-resolution": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/default-resolution/-/default-resolution-2.0.0.tgz",\n      "integrity": "sha1-vLgrqnKtebQmp2cy8aga1t8m1oQ="\n    },\n    "defaults": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",\n      "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",\n      "requires": {\n        "clone": "^1.0.2"\n      }\n    },\n    "define-properties": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",\n      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",\n      "requires": {\n        "object-keys": "^1.0.12"\n      }\n    },\n    "define-property": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",\n      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",\n      "requires": {\n        "is-descriptor": "^1.0.2",\n        "isobject": "^3.0.1"\n      },\n      "dependencies": {\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "^1.0.0",\n            "is-data-descriptor": "^1.0.0",\n            "kind-of": "^6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "defined": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",\n      "integrity": "sha1-yY2bzvdWdBiOEQlpFRGZ45sfppM="\n    },\n    "del": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/del/-/del-3.0.0.tgz",\n      "integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",\n      "requires": {\n        "globby": "^6.1.0",\n        "is-path-cwd": "^1.0.0",\n        "is-path-in-cwd": "^1.0.0",\n        "p-map": "^1.1.1",\n        "pify": "^3.0.0",\n        "rimraf": "^2.2.8"\n      },\n      "dependencies": {\n        "globby": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",\n          "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",\n          "requires": {\n            "array-union": "^1.0.1",\n            "glob": "^7.0.3",\n            "object-assign": "^4.0.1",\n            "pify": "^2.0.0",\n            "pinkie-promise": "^2.0.0"\n          },\n          "dependencies": {\n            "pify": {\n              "version": "2.3.0",\n              "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n              "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n            }\n          }\n        }\n      }\n    },\n    "delayed-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",\n      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="\n    },\n    "depd": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",\n      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="\n    },\n    "deprecated": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/deprecated/-/deprecated-0.0.1.tgz",\n      "integrity": "sha1-+cmvVGSvoeepcUWKi97yqpTVuxk="\n    },\n    "des.js": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.0.tgz",\n      "integrity": "sha1-wHTS4qpqipoH29YfmhXCzYPsjsw=",\n      "requires": {\n        "inherits": "^2.0.1",\n        "minimalistic-assert": "^1.0.0"\n      }\n    },\n    "destroy": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",\n      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="\n    },\n    "detect-file": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz",\n      "integrity": "sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc="\n    },\n    "detect-indent": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-5.0.0.tgz",\n      "integrity": "sha1-OHHMCmoALow+Wzz38zYmRnXwa50="\n    },\n    "detect-newline": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-2.1.0.tgz",\n      "integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="\n    },\n    "detect-node": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.4.tgz",\n      "integrity": "sha512-ZIzRpLJrOj7jjP2miAtgqIfmzbxa4ZOr5jJc601zklsfEx9oTzmmj2nVpIPRpNlRTIh8lc1kyViIY7BWSGNmKw=="\n    },\n    "detect-port-alt": {\n      "version": "1.1.6",\n      "resolved": "https://registry.npmjs.org/detect-port-alt/-/detect-port-alt-1.1.6.tgz",\n      "integrity": "sha512-5tQykt+LqfJFBEYaDITx7S7cR7mJ/zQmLXZ2qt5w04ainYZw6tBf9dBunMjVeVOdYVRUzUOE4HkY5J7+uttb5Q==",\n      "requires": {\n        "address": "^1.0.1",\n        "debug": "^2.6.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "detective": {\n      "version": "4.7.1",\n      "resolved": "https://registry.npmjs.org/detective/-/detective-4.7.1.tgz",\n      "integrity": "sha512-H6PmeeUcZloWtdt4DAkFyzFL94arpHr3NOwwmVILFiy+9Qd4JTxxXrzfyGk/lmct2qVGBwTSwSXagqu2BxmWig==",\n      "requires": {\n        "acorn": "^5.2.1",\n        "defined": "^1.0.0"\n      },\n      "dependencies": {\n        "acorn": {\n          "version": "5.7.3",\n          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.3.tgz",\n          "integrity": "sha512-T/zvzYRfbVojPWahDsE5evJdHb3oJoQfFbsrKM7w5Zcs++Tr257tia3BmMP8XYVjp1S9RZXQMh7gao96BlqZOw=="\n        }\n      }\n    },\n    "diff": {\n      "version": "1.0.8",\n      "resolved": "https://registry.npmjs.org/diff/-/diff-1.0.8.tgz",\n      "integrity": "sha1-NDJ2MI7Jkbe8giZ+1VvBQR+XFmY="\n    },\n    "diff-sequences": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-24.3.0.tgz",\n      "integrity": "sha512-xLqpez+Zj9GKSnPWS0WZw1igGocZ+uua8+y+5dDNTT934N3QuY1sp2LkHzwiaYQGz60hMq0pjAshdeXm5VUOEw=="\n    },\n    "diffie-hellman": {\n      "version": "5.0.3",\n      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",\n      "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",\n      "requires": {\n        "bn.js": "^4.1.0",\n        "miller-rabin": "^4.0.0",\n        "randombytes": "^2.0.0"\n      }\n    },\n    "dir-glob": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.0.0.tgz",\n      "integrity": "sha512-37qirFDz8cA5fimp9feo43fSuRo2gHwaIn6dXL8Ber1dGwUosDrGZeCCXq57WnIqE4aQ+u3eQZzsk1yOzhdwag==",\n      "requires": {\n        "arrify": "^1.0.1",\n        "path-type": "^3.0.0"\n      }\n    },\n    "dns-equal": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/dns-equal/-/dns-equal-1.0.0.tgz",\n      "integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="\n    },\n    "dns-packet": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/dns-packet/-/dns-packet-1.3.1.tgz",\n      "integrity": "sha512-0UxfQkMhYAUaZI+xrNZOz/as5KgDU0M/fQ9b6SpkyLbk3GEswDi6PADJVaYJradtRVsRIlF1zLyOodbcTCDzUg==",\n      "requires": {\n        "ip": "^1.1.0",\n        "safe-buffer": "^5.0.1"\n      }\n    },\n    "dns-txt": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/dns-txt/-/dns-txt-2.0.2.tgz",\n      "integrity": "sha1-uR2Ab10nGI5Ks+fRB9iBocxGQrY=",\n      "requires": {\n        "buffer-indexof": "^1.0.0"\n      }\n    },\n    "doctrine": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",\n      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",\n      "requires": {\n        "esutils": "^2.0.2"\n      }\n    },\n    "dom-converter": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/dom-converter/-/dom-converter-0.2.0.tgz",\n      "integrity": "sha512-gd3ypIPfOMr9h5jIKq8E3sHOTCjeirnl0WK5ZdS1AW0Odt0b1PaWaHdJ4Qk4klv+YB9aJBS7mESXjFoDQPu6DA==",\n      "requires": {\n        "utila": "~0.4"\n      }\n    },\n    "dom-helpers": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-3.4.0.tgz",\n      "integrity": "sha512-LnuPJ+dwqKDIyotW1VzmOZ5TONUN7CwkCR5hrgawTUbkBGYdeoNLZo6nNfGkCrjtE1nXXaj7iMMpDa8/d9WoIA==",\n      "requires": {\n        "@babel/runtime": "^7.1.2"\n      }\n    },\n    "dom-serializer": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.1.tgz",\n      "integrity": "sha512-l0IU0pPzLWSHBcieZbpOKgkIn3ts3vAh7ZuFyXNwJxJXk/c4Gwj9xaTJwIDVQCXawWD0qb3IzMGH5rglQaO0XA==",\n      "requires": {\n        "domelementtype": "^1.3.0",\n        "entities": "^1.1.1"\n      }\n    },\n    "domain-browser": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz",\n      "integrity": "sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA=="\n    },\n    "domelementtype": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",\n      "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w=="\n    },\n    "domexception": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/domexception/-/domexception-1.0.1.tgz",\n      "integrity": "sha512-raigMkn7CJNNo6Ihro1fzG7wr3fHuYVytzquZKX5n0yizGsTcYgzdIUwj1X9pK0VvjeihV+XiclP+DjwbsSKug==",\n      "requires": {\n        "webidl-conversions": "^4.0.2"\n      }\n    },\n    "domhandler": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",\n      "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",\n      "requires": {\n        "domelementtype": "1"\n      }\n    },\n    "domutils": {\n      "version": "1.7.0",\n      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",\n      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",\n      "requires": {\n        "dom-serializer": "0",\n        "domelementtype": "1"\n      }\n    },\n    "dot-prop": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.0.tgz",\n      "integrity": "sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==",\n      "requires": {\n        "is-obj": "^1.0.0"\n      }\n    },\n    "dotenv": {\n      "version": "6.2.0",\n      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-6.2.0.tgz",\n      "integrity": "sha512-HygQCKUBSFl8wKQZBSemMywRWcEDNidvNbjGVyZu3nbZ8qq9ubiPoGLMdRDpfSrpkkm9BXYFkpKxxFX38o/76w=="\n    },\n    "dotenv-expand": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-4.2.0.tgz",\n      "integrity": "sha1-3vHxyl1gWdJKdm5YeULCEQbOEnU="\n    },\n    "duplexer": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz",\n      "integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="\n    },\n    "duplexer2": {\n      "version": "0.0.2",\n      "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz",\n      "integrity": "sha1-xhTc9n4vsUmVqRcR5aYX6KYKMds=",\n      "requires": {\n        "readable-stream": "~1.1.9"\n      },\n      "dependencies": {\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "readable-stream": {\n          "version": "1.1.14",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",\n          "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        }\n      }\n    },\n    "duplexify": {\n      "version": "3.7.1",\n      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.7.1.tgz",\n      "integrity": "sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==",\n      "requires": {\n        "end-of-stream": "^1.0.0",\n        "inherits": "^2.0.1",\n        "readable-stream": "^2.0.0",\n        "stream-shift": "^1.0.0"\n      }\n    },\n    "each-props": {\n      "version": "1.3.2",\n      "resolved": "https://registry.npmjs.org/each-props/-/each-props-1.3.2.tgz",\n      "integrity": "sha512-vV0Hem3zAGkJAyU7JSjixeU66rwdynTAa1vofCrSA5fEln+m67Az9CcnkVD776/fsN/UjIWmBDoNRS6t6G9RfA==",\n      "requires": {\n        "is-plain-object": "^2.0.1",\n        "object.defaults": "^1.1.0"\n      }\n    },\n    "ecc-jsbn": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",\n      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",\n      "requires": {\n        "jsbn": "~0.1.0",\n        "safer-buffer": "^2.1.0"\n      }\n    },\n    "editions": {\n      "version": "1.3.4",\n      "resolved": "https://registry.npmjs.org/editions/-/editions-1.3.4.tgz",\n      "integrity": "sha512-gzao+mxnYDzIysXKMQi/+M1mjy/rjestjg6OPoYTtI+3Izp23oiGZitsl9lPDPiTGXbcSIk1iJWhliSaglxnUg=="\n    },\n    "editorconfig": {\n      "version": "0.15.3",\n      "resolved": "https://registry.npmjs.org/editorconfig/-/editorconfig-0.15.3.tgz",\n      "integrity": "sha512-M9wIMFx96vq0R4F+gRpY3o2exzb8hEj/n9S8unZtHSvYjibBp/iMufSzvmOcV/laG0ZtuTVGtiJggPOSW2r93g==",\n      "requires": {\n        "commander": "^2.19.0",\n        "lru-cache": "^4.1.5",\n        "semver": "^5.6.0",\n        "sigmund": "^1.0.1"\n      },\n      "dependencies": {\n        "lru-cache": {\n          "version": "4.1.5",\n          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",\n          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",\n          "requires": {\n            "pseudomap": "^1.0.2",\n            "yallist": "^2.1.2"\n          }\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "yallist": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",\n          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI="\n        }\n      }\n    },\n    "ee-first": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",\n      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="\n    },\n    "electron-to-chromium": {\n      "version": "1.3.125",\n      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.125.tgz",\n      "integrity": "sha512-XxowpqQxJ4nDwUXHtVtmEhRqBpm2OnjBomZmZtHD0d2Eo0244+Ojezhk3sD/MBSSe2nxCdGQFRXHIsf/LUTL9A=="\n    },\n    "elliptic": {\n      "version": "6.4.1",\n      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.1.tgz",\n      "integrity": "sha512-BsXLz5sqX8OHcsh7CqBMztyXARmGQ3LWPtGjJi6DiJHq5C/qvi9P3OqgswKSDftbu8+IoI/QDTAm2fFnQ9SZSQ==",\n      "requires": {\n        "bn.js": "^4.4.0",\n        "brorand": "^1.0.1",\n        "hash.js": "^1.0.0",\n        "hmac-drbg": "^1.0.0",\n        "inherits": "^2.0.1",\n        "minimalistic-assert": "^1.0.0",\n        "minimalistic-crypto-utils": "^1.0.0"\n      }\n    },\n    "emoji-regex": {\n      "version": "7.0.3",\n      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",\n      "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="\n    },\n    "emojis-list": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",\n      "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k="\n    },\n    "emotion": {\n      "version": "9.2.12",\n      "resolved": "https://registry.npmjs.org/emotion/-/emotion-9.2.12.tgz",\n      "integrity": "sha512-hcx7jppaI8VoXxIWEhxpDW7I+B4kq9RNzQLmsrF6LY8BGKqe2N+gFAQr0EfuFucFlPs2A9HM4+xNj4NeqEWIOQ==",\n      "requires": {\n        "babel-plugin-emotion": "^9.2.11",\n        "create-emotion": "^9.2.12"\n      }\n    },\n    "encodeurl": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",\n      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="\n    },\n    "encoding": {\n      "version": "0.1.12",\n      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",\n      "integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",\n      "requires": {\n        "iconv-lite": "~0.4.13"\n      }\n    },\n    "end-of-stream": {\n      "version": "1.4.1",\n      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz",\n      "integrity": "sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==",\n      "requires": {\n        "once": "^1.4.0"\n      }\n    },\n    "enhanced-resolve": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.0.tgz",\n      "integrity": "sha512-F/7vkyTtyc/llOIn8oWclcB25KdRaiPBpZYDgJHgh/UHtpgT2p2eldQgtQnLtUvfMKPKxbRaQM/hHkvLHt1Vng==",\n      "requires": {\n        "graceful-fs": "^4.1.2",\n        "memory-fs": "^0.4.0",\n        "tapable": "^1.0.0"\n      }\n    },\n    "entities": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",\n      "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w=="\n    },\n    "envify": {\n      "version": "3.4.1",\n      "resolved": "https://registry.npmjs.org/envify/-/envify-3.4.1.tgz",\n      "integrity": "sha1-1xIjKejfFoi6dxsSUBkXyc5cvOg=",\n      "requires": {\n        "jstransform": "^11.0.3",\n        "through": "~2.3.4"\n      }\n    },\n    "errno": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/errno/-/errno-0.1.7.tgz",\n      "integrity": "sha512-MfrRBDWzIWifgq6tJj60gkAwtLNb6sQPlcFrSOflcP1aFmmruKQ2wRnze/8V6kgyz7H3FF8Npzv78mZ7XLLflg==",\n      "requires": {\n        "prr": "~1.0.1"\n      }\n    },\n    "error-ex": {\n      "version": "1.3.2",\n      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",\n      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",\n      "requires": {\n        "is-arrayish": "^0.2.1"\n      }\n    },\n    "es-abstract": {\n      "version": "1.13.0",\n      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.13.0.tgz",\n      "integrity": "sha512-vDZfg/ykNxQVwup/8E1BZhVzFfBxs9NqMzGcvIJrqg5k2/5Za2bWo40dK2J1pgLngZ7c+Shh8lwYtLGyrwPutg==",\n      "requires": {\n        "es-to-primitive": "^1.2.0",\n        "function-bind": "^1.1.1",\n        "has": "^1.0.3",\n        "is-callable": "^1.1.4",\n        "is-regex": "^1.0.4",\n        "object-keys": "^1.0.12"\n      }\n    },\n    "es-to-primitive": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.0.tgz",\n      "integrity": "sha512-qZryBOJjV//LaxLTV6UC//WewneB3LcXOL9NP++ozKVXsIIIpm/2c13UDiD9Jp2eThsecw9m3jPqDwTyobcdbg==",\n      "requires": {\n        "is-callable": "^1.1.4",\n        "is-date-object": "^1.0.1",\n        "is-symbol": "^1.0.2"\n      }\n    },\n    "es5-ext": {\n      "version": "0.10.49",\n      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.49.tgz",\n      "integrity": "sha512-3NMEhi57E31qdzmYp2jwRArIUsj1HI/RxbQ4bgnSB+AIKIxsAmTiK83bYMifIcpWvEc3P1X30DhUKOqEtF/kvg==",\n      "requires": {\n        "es6-iterator": "~2.0.3",\n        "es6-symbol": "~3.1.1",\n        "next-tick": "^1.0.0"\n      }\n    },\n    "es6-iterator": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",\n      "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",\n      "requires": {\n        "d": "1",\n        "es5-ext": "^0.10.35",\n        "es6-symbol": "^3.1.1"\n      }\n    },\n    "es6-symbol": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",\n      "integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",\n      "requires": {\n        "d": "1",\n        "es5-ext": "~0.10.14"\n      }\n    },\n    "es6-weak-map": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/es6-weak-map/-/es6-weak-map-2.0.2.tgz",\n      "integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",\n      "requires": {\n        "d": "1",\n        "es5-ext": "^0.10.14",\n        "es6-iterator": "^2.0.1",\n        "es6-symbol": "^3.1.1"\n      }\n    },\n    "escape-html": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",\n      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="\n    },\n    "escape-string-regexp": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",\n      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="\n    },\n    "escodegen": {\n      "version": "1.11.1",\n      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.11.1.tgz",\n      "integrity": "sha512-JwiqFD9KdGVVpeuRa68yU3zZnBEOcPs0nKW7wZzXky8Z7tffdYUHbe11bPCV5jYlK6DVdKLWLm0f5I/QlL0Kmw==",\n      "requires": {\n        "esprima": "^3.1.3",\n        "estraverse": "^4.2.0",\n        "esutils": "^2.0.2",\n        "optionator": "^0.8.1",\n        "source-map": "~0.6.1"\n      },\n      "dependencies": {\n        "esprima": {\n          "version": "3.1.3",\n          "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",\n          "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",\n          "optional": true\n        }\n      }\n    },\n    "eslint": {\n      "version": "5.16.0",\n      "resolved": "https://registry.npmjs.org/eslint/-/eslint-5.16.0.tgz",\n      "integrity": "sha512-S3Rz11i7c8AA5JPv7xAH+dOyq/Cu/VXHiHXBPOU1k/JAM5dXqQPt3qcrhpHSorXmrpu2g0gkIBVXAqCpzfoZIg==",\n      "requires": {\n        "@babel/code-frame": "^7.0.0",\n        "ajv": "^6.9.1",\n        "chalk": "^2.1.0",\n        "cross-spawn": "^6.0.5",\n        "debug": "^4.0.1",\n        "doctrine": "^3.0.0",\n        "eslint-scope": "^4.0.3",\n        "eslint-utils": "^1.3.1",\n        "eslint-visitor-keys": "^1.0.0",\n        "espree": "^5.0.1",\n        "esquery": "^1.0.1",\n        "esutils": "^2.0.2",\n        "file-entry-cache": "^5.0.1",\n        "functional-red-black-tree": "^1.0.1",\n        "glob": "^7.1.2",\n        "globals": "^11.7.0",\n        "ignore": "^4.0.6",\n        "import-fresh": "^3.0.0",\n        "imurmurhash": "^0.1.4",\n        "inquirer": "^6.2.2",\n        "js-yaml": "^3.13.0",\n        "json-stable-stringify-without-jsonify": "^1.0.1",\n        "levn": "^0.3.0",\n        "lodash": "^4.17.11",\n        "minimatch": "^3.0.4",\n        "mkdirp": "^0.5.1",\n        "natural-compare": "^1.4.0",\n        "optionator": "^0.8.2",\n        "path-is-inside": "^1.0.2",\n        "progress": "^2.0.0",\n        "regexpp": "^2.0.1",\n        "semver": "^5.5.1",\n        "strip-ansi": "^4.0.0",\n        "strip-json-comments": "^2.0.1",\n        "table": "^5.2.3",\n        "text-table": "^0.2.0"\n      },\n      "dependencies": {\n        "import-fresh": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.0.0.tgz",\n          "integrity": "sha512-pOnA9tfM3Uwics+SaBLCNyZZZbK+4PTu0OPZtLlMIrv17EdBoC15S9Kn8ckJ9TZTyKb3ywNE5y1yeDxxGA7nTQ==",\n          "requires": {\n            "parent-module": "^1.0.0",\n            "resolve-from": "^4.0.0"\n          }\n        },\n        "resolve-from": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",\n          "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "eslint-config-react-app": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/eslint-config-react-app/-/eslint-config-react-app-4.0.0.tgz",\n      "integrity": "sha512-SeFxaI+0NAzWPFAI9AT+Vp9Xe2u5RCnn0JVEXkE338HgoPujc38Bc0upCJw4BWmavvIN/ODmE6EuzHoAEn3ozw==",\n      "requires": {\n        "confusing-browser-globals": "^1.0.7"\n      }\n    },\n    "eslint-import-resolver-node": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.2.tgz",\n      "integrity": "sha512-sfmTqJfPSizWu4aymbPr4Iidp5yKm8yDkHp+Ir3YiTHiiDfxh69mOUsmiqW6RZ9zRXFaF64GtYmN7e+8GHBv6Q==",\n      "requires": {\n        "debug": "^2.6.9",\n        "resolve": "^1.5.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "eslint-loader": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/eslint-loader/-/eslint-loader-2.1.2.tgz",\n      "integrity": "sha512-rA9XiXEOilLYPOIInvVH5S/hYfyTPyxag6DZhoQOduM+3TkghAEQ3VcFO8VnX4J4qg/UIBzp72aOf/xvYmpmsg==",\n      "requires": {\n        "loader-fs-cache": "^1.0.0",\n        "loader-utils": "^1.0.2",\n        "object-assign": "^4.0.1",\n        "object-hash": "^1.1.4",\n        "rimraf": "^2.6.1"\n      }\n    },\n    "eslint-module-utils": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.4.0.tgz",\n      "integrity": "sha512-14tltLm38Eu3zS+mt0KvILC3q8jyIAH518MlG+HO0p+yK885Lb1UHTY/UgR91eOyGdmxAPb+OLoW4znqIT6Ndw==",\n      "requires": {\n        "debug": "^2.6.8",\n        "pkg-dir": "^2.0.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "find-up": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",\n          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",\n          "requires": {\n            "locate-path": "^2.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",\n          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",\n          "requires": {\n            "p-locate": "^2.0.0",\n            "path-exists": "^3.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        },\n        "p-limit": {\n          "version": "1.3.0",\n          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",\n          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",\n          "requires": {\n            "p-try": "^1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",\n          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",\n          "requires": {\n            "p-limit": "^1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",\n          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="\n        },\n        "pkg-dir": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-2.0.0.tgz",\n          "integrity": "sha1-9tXREJ4Z1j7fQo4L1X4Sd3YVM0s=",\n          "requires": {\n            "find-up": "^2.1.0"\n          }\n        }\n      }\n    },\n    "eslint-plugin-flowtype": {\n      "version": "2.50.1",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.50.1.tgz",\n      "integrity": "sha512-9kRxF9hfM/O6WGZcZPszOVPd2W0TLHBtceulLTsGfwMPtiCCLnCW0ssRiOOiXyqrCA20pm1iXdXm7gQeN306zQ==",\n      "requires": {\n        "lodash": "^4.17.10"\n      }\n    },\n    "eslint-plugin-import": {\n      "version": "2.16.0",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.16.0.tgz",\n      "integrity": "sha512-z6oqWlf1x5GkHIFgrSvtmudnqM6Q60KM4KvpWi5ubonMjycLjndvd5+8VAZIsTlHC03djdgJuyKG6XO577px6A==",\n      "requires": {\n        "contains-path": "^0.1.0",\n        "debug": "^2.6.9",\n        "doctrine": "1.5.0",\n        "eslint-import-resolver-node": "^0.3.2",\n        "eslint-module-utils": "^2.3.0",\n        "has": "^1.0.3",\n        "lodash": "^4.17.11",\n        "minimatch": "^3.0.4",\n        "read-pkg-up": "^2.0.0",\n        "resolve": "^1.9.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "doctrine": {\n          "version": "1.5.0",\n          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",\n          "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",\n          "requires": {\n            "esutils": "^2.0.2",\n            "isarray": "^1.0.0"\n          }\n        },\n        "find-up": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",\n          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",\n          "requires": {\n            "locate-path": "^2.0.0"\n          }\n        },\n        "load-json-file": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",\n          "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "parse-json": "^2.2.0",\n            "pify": "^2.0.0",\n            "strip-bom": "^3.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",\n          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",\n          "requires": {\n            "p-locate": "^2.0.0",\n            "path-exists": "^3.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        },\n        "p-limit": {\n          "version": "1.3.0",\n          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",\n          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",\n          "requires": {\n            "p-try": "^1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",\n          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",\n          "requires": {\n            "p-limit": "^1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",\n          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="\n        },\n        "parse-json": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",\n          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",\n          "requires": {\n            "error-ex": "^1.2.0"\n          }\n        },\n        "path-type": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",\n          "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",\n          "requires": {\n            "pify": "^2.0.0"\n          }\n        },\n        "pify": {\n          "version": "2.3.0",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n        },\n        "read-pkg": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",\n          "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",\n          "requires": {\n            "load-json-file": "^2.0.0",\n            "normalize-package-data": "^2.3.2",\n            "path-type": "^2.0.0"\n          }\n        },\n        "read-pkg-up": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",\n          "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",\n          "requires": {\n            "find-up": "^2.0.0",\n            "read-pkg": "^2.0.0"\n          }\n        }\n      }\n    },\n    "eslint-plugin-jsx-a11y": {\n      "version": "6.2.1",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.2.1.tgz",\n      "integrity": "sha512-cjN2ObWrRz0TTw7vEcGQrx+YltMvZoOEx4hWU8eEERDnBIU00OTq7Vr+jA7DFKxiwLNv4tTh5Pq2GUNEa8b6+w==",\n      "requires": {\n        "aria-query": "^3.0.0",\n        "array-includes": "^3.0.3",\n        "ast-types-flow": "^0.0.7",\n        "axobject-query": "^2.0.2",\n        "damerau-levenshtein": "^1.0.4",\n        "emoji-regex": "^7.0.2",\n        "has": "^1.0.3",\n        "jsx-ast-utils": "^2.0.1"\n      }\n    },\n    "eslint-plugin-react": {\n      "version": "7.12.4",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.12.4.tgz",\n      "integrity": "sha512-1puHJkXJY+oS1t467MjbqjvX53uQ05HXwjqDgdbGBqf5j9eeydI54G3KwiJmWciQ0HTBacIKw2jgwSBSH3yfgQ==",\n      "requires": {\n        "array-includes": "^3.0.3",\n        "doctrine": "^2.1.0",\n        "has": "^1.0.3",\n        "jsx-ast-utils": "^2.0.1",\n        "object.fromentries": "^2.0.0",\n        "prop-types": "^15.6.2",\n        "resolve": "^1.9.0"\n      },\n      "dependencies": {\n        "doctrine": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",\n          "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",\n          "requires": {\n            "esutils": "^2.0.2"\n          }\n        }\n      }\n    },\n    "eslint-plugin-react-hooks": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-1.6.0.tgz",\n      "integrity": "sha512-lHBVRIaz5ibnIgNG07JNiAuBUeKhEf8l4etNx5vfAEwqQ5tcuK3jV9yjmopPgQDagQb7HwIuQVsE3IVcGrRnag=="\n    },\n    "eslint-scope": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",\n      "integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",\n      "requires": {\n        "esrecurse": "^4.1.0",\n        "estraverse": "^4.1.1"\n      }\n    },\n    "eslint-utils": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.3.1.tgz",\n      "integrity": "sha512-Z7YjnIldX+2XMcjr7ZkgEsOj/bREONV60qYeB/bjMAqqqZ4zxKyWX+BOUkdmRmA9riiIPVvo5x86m5elviOk0Q=="\n    },\n    "eslint-visitor-keys": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz",\n      "integrity": "sha512-qzm/XxIbxm/FHyH341ZrbnMUpe+5Bocte9xkmFMzPMjRaZMcXww+MpBptFvtU+79L362nqiLhekCxCxDPaUMBQ=="\n    },\n    "espree": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/espree/-/espree-5.0.1.tgz",\n      "integrity": "sha512-qWAZcWh4XE/RwzLJejfcofscgMc9CamR6Tn1+XRXNzrvUSSbiAjGOI/fggztjIi7y9VLPqnICMIPiGyr8JaZ0A==",\n      "requires": {\n        "acorn": "^6.0.7",\n        "acorn-jsx": "^5.0.0",\n        "eslint-visitor-keys": "^1.0.0"\n      }\n    },\n    "esprima": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",\n      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="\n    },\n    "esquery": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.0.1.tgz",\n      "integrity": "sha512-SmiyZ5zIWH9VM+SRUReLS5Q8a7GxtRdxEBVZpm98rJM7Sb+A9DVCndXfkeFUd3byderg+EbDkfnevfCwynWaNA==",\n      "requires": {\n        "estraverse": "^4.0.0"\n      }\n    },\n    "esrecurse": {\n      "version": "4.2.1",\n      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",\n      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",\n      "requires": {\n        "estraverse": "^4.1.0"\n      }\n    },\n    "estraverse": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",\n      "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="\n    },\n    "esutils": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",\n      "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs="\n    },\n    "etag": {\n      "version": "1.8.1",\n      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",\n      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="\n    },\n    "event-stream": {\n      "version": "3.0.20",\n      "resolved": "https://registry.npmjs.org/event-stream/-/event-stream-3.0.20.tgz",\n      "integrity": "sha1-A4u7LqnqkDhbJvvBhU0LU58qvqM=",\n      "requires": {\n        "duplexer": "~0.1.1",\n        "from": "~0",\n        "map-stream": "~0.0.3",\n        "pause-stream": "0.0.11",\n        "split": "0.2",\n        "stream-combiner": "~0.0.3",\n        "through": "~2.3.1"\n      },\n      "dependencies": {\n        "map-stream": {\n          "version": "0.0.7",\n          "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",\n          "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="\n        }\n      }\n    },\n    "eventemitter3": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.0.tgz",\n      "integrity": "sha512-ivIvhpq/Y0uSjcHDcOIccjmYjGLcP09MFGE7ysAwkAvkXfpZlC985pH2/ui64DKazbTW/4kN3yqozUxlXzI6cA=="\n    },\n    "events": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/events/-/events-3.0.0.tgz",\n      "integrity": "sha512-Dc381HFWJzEOhQ+d8pkNon++bk9h6cdAoAj4iE6Q4y6xgTzySWXlKn05/TVNpjnfRqi/X0EpJEJohPjNI3zpVA=="\n    },\n    "eventsource": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",\n      "integrity": "sha512-4Ln17+vVT0k8aWq+t/bF5arcS3EpT9gYtW66EPacdj/mAFevznsnyoHLPy2BA8gbIQeIHoPsvwmfBftfcG//BQ==",\n      "requires": {\n        "original": "^1.0.0"\n      }\n    },\n    "evp_bytestokey": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",\n      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",\n      "requires": {\n        "md5.js": "^1.3.4",\n        "safe-buffer": "^5.1.1"\n      }\n    },\n    "exec-sh": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.3.2.tgz",\n      "integrity": "sha512-9sLAvzhI5nc8TpuQUh4ahMdCrWT00wPWz7j47/emR5+2qEfoZP5zzUXvx+vdx+H6ohhnsYC31iX04QLYJK8zTg=="\n    },\n    "execa": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/execa/-/execa-1.0.0.tgz",\n      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",\n      "requires": {\n        "cross-spawn": "^6.0.0",\n        "get-stream": "^4.0.0",\n        "is-stream": "^1.1.0",\n        "npm-run-path": "^2.0.0",\n        "p-finally": "^1.0.0",\n        "signal-exit": "^3.0.0",\n        "strip-eof": "^1.0.0"\n      }\n    },\n    "exenv": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/exenv/-/exenv-1.2.2.tgz",\n      "integrity": "sha1-KueOhdmJQVhnCwPUe+wfA72Ru50=",\n      "dev": true\n    },\n    "exit": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",\n      "integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="\n    },\n    "expand-brackets": {\n      "version": "2.1.4",\n      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",\n      "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",\n      "requires": {\n        "debug": "^2.3.3",\n        "define-property": "^0.2.5",\n        "extend-shallow": "^2.0.1",\n        "posix-character-classes": "^0.1.0",\n        "regex-not": "^1.0.0",\n        "snapdragon": "^0.8.1",\n        "to-regex": "^3.0.1"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "^0.1.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "expand-range": {\n      "version": "1.8.2",\n      "resolved": "https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz",\n      "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",\n      "requires": {\n        "fill-range": "^2.1.0"\n      },\n      "dependencies": {\n        "fill-range": {\n          "version": "2.2.4",\n          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.4.tgz",\n          "integrity": "sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==",\n          "requires": {\n            "is-number": "^2.1.0",\n            "isobject": "^2.0.0",\n            "randomatic": "^3.0.0",\n            "repeat-element": "^1.1.2",\n            "repeat-string": "^1.5.2"\n          }\n        },\n        "is-number": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz",\n          "integrity": "sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=",\n          "requires": {\n            "kind-of": "^3.0.2"\n          }\n        },\n        "isobject": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",\n          "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",\n          "requires": {\n            "isarray": "1.0.0"\n          }\n        }\n      }\n    },\n    "expand-tilde": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/expand-tilde/-/expand-tilde-2.0.2.tgz",\n      "integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",\n      "requires": {\n        "homedir-polyfill": "^1.0.1"\n      }\n    },\n    "expect": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/expect/-/expect-24.7.1.tgz",\n      "integrity": "sha512-mGfvMTPduksV3xoI0xur56pQsg2vJjNf5+a+bXOjqCkiCBbmCayrBbHS/75y9K430cfqyocPr2ZjiNiRx4SRKw==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "ansi-styles": "^3.2.0",\n        "jest-get-type": "^24.3.0",\n        "jest-matcher-utils": "^24.7.0",\n        "jest-message-util": "^24.7.1",\n        "jest-regex-util": "^24.3.0"\n      }\n    },\n    "express": {\n      "version": "4.16.4",\n      "resolved": "https://registry.npmjs.org/express/-/express-4.16.4.tgz",\n      "integrity": "sha512-j12Uuyb4FMrd/qQAm6uCHAkPtO8FDTRJZBDd5D2KOL2eLaz1yUNdUB/NOIyq0iU4q4cFarsUCrnFDPBcnksuOg==",\n      "requires": {\n        "accepts": "~1.3.5",\n        "array-flatten": "1.1.1",\n        "body-parser": "1.18.3",\n        "content-disposition": "0.5.2",\n        "content-type": "~1.0.4",\n        "cookie": "0.3.1",\n        "cookie-signature": "1.0.6",\n        "debug": "2.6.9",\n        "depd": "~1.1.2",\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "etag": "~1.8.1",\n        "finalhandler": "1.1.1",\n        "fresh": "0.5.2",\n        "merge-descriptors": "1.0.1",\n        "methods": "~1.1.2",\n        "on-finished": "~2.3.0",\n        "parseurl": "~1.3.2",\n        "path-to-regexp": "0.1.7",\n        "proxy-addr": "~2.0.4",\n        "qs": "6.5.2",\n        "range-parser": "~1.2.0",\n        "safe-buffer": "5.1.2",\n        "send": "0.16.2",\n        "serve-static": "1.13.2",\n        "setprototypeof": "1.1.0",\n        "statuses": "~1.4.0",\n        "type-is": "~1.6.16",\n        "utils-merge": "1.0.1",\n        "vary": "~1.1.2"\n      },\n      "dependencies": {\n        "array-flatten": {\n          "version": "1.1.1",\n          "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",\n          "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="\n        },\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "extend": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",\n      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="\n    },\n    "extend-shallow": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",\n      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",\n      "requires": {\n        "assign-symbols": "^1.0.0",\n        "is-extendable": "^1.0.1"\n      },\n      "dependencies": {\n        "is-extendable": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",\n          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",\n          "requires": {\n            "is-plain-object": "^2.0.4"\n          }\n        }\n      }\n    },\n    "external-editor": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.0.3.tgz",\n      "integrity": "sha512-bn71H9+qWoOQKyZDo25mOMVpSmXROAsTJVVVYzrrtol3d4y+AsKjf4Iwl2Q+IuT0kFSQ1qo166UuIwqYq7mGnA==",\n      "requires": {\n        "chardet": "^0.7.0",\n        "iconv-lite": "^0.4.24",\n        "tmp": "^0.0.33"\n      }\n    },\n    "extglob": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",\n      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",\n      "requires": {\n        "array-unique": "^0.3.2",\n        "define-property": "^1.0.0",\n        "expand-brackets": "^2.1.4",\n        "extend-shallow": "^2.0.1",\n        "fragment-cache": "^0.2.1",\n        "regex-not": "^1.0.0",\n        "snapdragon": "^0.8.1",\n        "to-regex": "^3.0.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",\n          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",\n          "requires": {\n            "is-descriptor": "^1.0.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        },\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "^1.0.0",\n            "is-data-descriptor": "^1.0.0",\n            "kind-of": "^6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "extsprintf": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",\n      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="\n    },\n    "fancy-log": {\n      "version": "1.3.3",\n      "resolved": "https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.3.tgz",\n      "integrity": "sha512-k9oEhlyc0FrVh25qYuSELjr8oxsCoc4/LEZfg2iJJrfEk/tZL9bCoJE47gqAvI2m/AUjluCS4+3I0eTx8n3AEw==",\n      "requires": {\n        "ansi-gray": "^0.1.1",\n        "color-support": "^1.1.3",\n        "parse-node-version": "^1.0.0",\n        "time-stamp": "^1.0.0"\n      }\n    },\n    "fast-deep-equal": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",\n      "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="\n    },\n    "fast-glob": {\n      "version": "2.2.6",\n      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.6.tgz",\n      "integrity": "sha512-0BvMaZc1k9F+MeWWMe8pL6YltFzZYcJsYU7D4JyDA6PAczaXvxqQQ/z+mDF7/4Mw01DeUc+i3CTKajnkANkV4w==",\n      "requires": {\n        "@mrmlnc/readdir-enhanced": "^2.2.1",\n        "@nodelib/fs.stat": "^1.1.2",\n        "glob-parent": "^3.1.0",\n        "is-glob": "^4.0.0",\n        "merge2": "^1.2.3",\n        "micromatch": "^3.1.10"\n      }\n    },\n    "fast-json-stable-stringify": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",\n      "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="\n    },\n    "fast-levenshtein": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",\n      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc="\n    },\n    "faye-websocket": {\n      "version": "0.11.1",\n      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.1.tgz",\n      "integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",\n      "requires": {\n        "websocket-driver": ">=0.5.1"\n      }\n    },\n    "fb-watchman": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.0.tgz",\n      "integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",\n      "requires": {\n        "bser": "^2.0.0"\n      }\n    },\n    "fbjs": {\n      "version": "0.8.17",\n      "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-0.8.17.tgz",\n      "integrity": "sha1-xNWY6taUkRJlPWWIsBpc3Nn5D90=",\n      "requires": {\n        "core-js": "^1.0.0",\n        "isomorphic-fetch": "^2.1.1",\n        "loose-envify": "^1.0.0",\n        "object-assign": "^4.1.0",\n        "promise": "^7.1.1",\n        "setimmediate": "^1.0.5",\n        "ua-parser-js": "^0.7.18"\n      },\n      "dependencies": {\n        "core-js": {\n          "version": "1.2.7",\n          "resolved": "https://registry.npmjs.org/core-js/-/core-js-1.2.7.tgz",\n          "integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="\n        },\n        "promise": {\n          "version": "7.3.1",\n          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",\n          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",\n          "requires": {\n            "asap": "~2.0.3"\n          }\n        }\n      }\n    },\n    "figgy-pudding": {\n      "version": "3.5.1",\n      "resolved": "https://registry.npmjs.org/figgy-pudding/-/figgy-pudding-3.5.1.tgz",\n      "integrity": "sha512-vNKxJHTEKNThjfrdJwHc7brvM6eVevuO5nTj6ez8ZQ1qbXTvGthucRF7S4vf2cr71QVnT70V34v0S1DyQsti0w=="\n    },\n    "figures": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",\n      "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",\n      "requires": {\n        "escape-string-regexp": "^1.0.5"\n      }\n    },\n    "file-entry-cache": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz",\n      "integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==",\n      "requires": {\n        "flat-cache": "^2.0.1"\n      }\n    },\n    "file-loader": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/file-loader/-/file-loader-3.0.1.tgz",\n      "integrity": "sha512-4sNIOXgtH/9WZq4NvlfU3Opn5ynUsqBwSLyM+I7UOwdGigTBYfVVQEwe/msZNX/j4pCJTIM14Fsw66Svo1oVrw==",\n      "requires": {\n        "loader-utils": "^1.0.2",\n        "schema-utils": "^1.0.0"\n      }\n    },\n    "filename-regex": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz",\n      "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY="\n    },\n    "fileset": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/fileset/-/fileset-2.0.3.tgz",\n      "integrity": "sha1-jnVIqW08wjJ+5eZ0FocjozO7oqA=",\n      "requires": {\n        "glob": "^7.0.3",\n        "minimatch": "^3.0.3"\n      }\n    },\n    "filesize": {\n      "version": "3.6.1",\n      "resolved": "https://registry.npmjs.org/filesize/-/filesize-3.6.1.tgz",\n      "integrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg=="\n    },\n    "fill-range": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",\n      "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",\n      "requires": {\n        "extend-shallow": "^2.0.1",\n        "is-number": "^3.0.0",\n        "repeat-string": "^1.6.1",\n        "to-regex-range": "^2.1.0"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        }\n      }\n    },\n    "finalhandler": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.1.tgz",\n      "integrity": "sha512-Y1GUDo39ez4aHAw7MysnUD5JzYX+WaIj8I57kO3aEPT1fFRL4sr7mjei97FgnwhAyyzRYmQZaTHb2+9uZ1dPtg==",\n      "requires": {\n        "debug": "2.6.9",\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "on-finished": "~2.3.0",\n        "parseurl": "~1.3.2",\n        "statuses": "~1.4.0",\n        "unpipe": "~1.0.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "find-cache-dir": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",\n      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",\n      "requires": {\n        "commondir": "^1.0.1",\n        "make-dir": "^2.0.0",\n        "pkg-dir": "^3.0.0"\n      }\n    },\n    "find-index": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/find-index/-/find-index-0.1.1.tgz",\n      "integrity": "sha1-Z101iyyjiS15Whq0cjL4tuLg3eQ="\n    },\n    "find-root": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",\n      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="\n    },\n    "find-up": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",\n      "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",\n      "requires": {\n        "locate-path": "^3.0.0"\n      }\n    },\n    "findup": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/findup/-/findup-0.1.5.tgz",\n      "integrity": "sha1-itkpozk7rGJ5V6fl3kYjsGsOLOs=",\n      "requires": {\n        "colors": "~0.6.0-1",\n        "commander": "~2.1.0"\n      },\n      "dependencies": {\n        "colors": {\n          "version": "0.6.2",\n          "resolved": "https://registry.npmjs.org/colors/-/colors-0.6.2.tgz",\n          "integrity": "sha1-JCP+ZnisDF2uiFLl0OW+CMmXq8w="\n        },\n        "commander": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/commander/-/commander-2.1.0.tgz",\n          "integrity": "sha1-0SG7roYNmZKj1Re6lvVliOR8Z4E="\n        }\n      }\n    },\n    "findup-sync": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-2.0.0.tgz",\n      "integrity": "sha1-kyaxSIwi0aYIhlCoaQGy2akKLLw=",\n      "requires": {\n        "detect-file": "^1.0.0",\n        "is-glob": "^3.1.0",\n        "micromatch": "^3.0.4",\n        "resolve-dir": "^1.0.1"\n      },\n      "dependencies": {\n        "is-glob": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",\n          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",\n          "requires": {\n            "is-extglob": "^2.1.0"\n          }\n        }\n      }\n    },\n    "fined": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/fined/-/fined-1.2.0.tgz",\n      "integrity": "sha512-ZYDqPLGxDkDhDZBjZBb+oD1+j0rA4E0pXY50eplAAOPg2N/gUBSSk5IM1/QhPfyVo19lJ+CvXpqfvk+b2p/8Ng==",\n      "requires": {\n        "expand-tilde": "^2.0.2",\n        "is-plain-object": "^2.0.3",\n        "object.defaults": "^1.1.0",\n        "object.pick": "^1.2.0",\n        "parse-filepath": "^1.0.1"\n      }\n    },\n    "first-chunk-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-1.0.0.tgz",\n      "integrity": "sha1-Wb+1DNkF9g18OUzT2ayqtOatk04="\n    },\n    "flagged-respawn": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",\n      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q=="\n    },\n    "flat-cache": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz",\n      "integrity": "sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==",\n      "requires": {\n        "flatted": "^2.0.0",\n        "rimraf": "2.6.3",\n        "write": "1.0.3"\n      }\n    },\n    "flatted": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.0.tgz",\n      "integrity": "sha512-R+H8IZclI8AAkSBRQJLVOsxwAoHd6WC40b4QTNWIjzAa6BXOBfQcM587MXDTVPeYaopFNWHUFLx7eNmHDSxMWg=="\n    },\n    "flatten": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/flatten/-/flatten-1.0.2.tgz",\n      "integrity": "sha1-2uRqnXj74lKSJYzB54CkHZXAN4I="\n    },\n    "flush-write-stream": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/flush-write-stream/-/flush-write-stream-1.1.1.tgz",\n      "integrity": "sha512-3Z4XhFZ3992uIq0XOqb9AreonueSYphE6oYbpt5+3u06JWklbsPkNv3ZKkP9Bz/r+1MWCaMoSQ28P85+1Yc77w==",\n      "requires": {\n        "inherits": "^2.0.3",\n        "readable-stream": "^2.3.6"\n      }\n    },\n    "follow-redirects": {\n      "version": "1.7.0",\n      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.7.0.tgz",\n      "integrity": "sha512-m/pZQy4Gj287eNy94nivy5wchN3Kp+Q5WgUPNy5lJSZ3sgkVKSYV/ZChMAQVIgx1SqfZ2zBZtPA2YlXIWxxJOQ==",\n      "requires": {\n        "debug": "^3.2.6"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "3.2.6",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",\n          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",\n          "requires": {\n            "ms": "^2.1.1"\n          }\n        }\n      }\n    },\n    "for-in": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",\n      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA="\n    },\n    "for-own": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",\n      "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",\n      "requires": {\n        "for-in": "^1.0.1"\n      }\n    },\n    "forever-agent": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",\n      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="\n    },\n    "fork-stream": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/fork-stream/-/fork-stream-0.0.4.tgz",\n      "integrity": "sha1-24Sfznf2cIpfjzhq5TOgkHtUrnA="\n    },\n    "fork-ts-checker-webpack-plugin": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/fork-ts-checker-webpack-plugin/-/fork-ts-checker-webpack-plugin-1.0.1.tgz",\n      "integrity": "sha512-RrVxSiNtngsFDLQpP2QlrVaJK1zqRdwhtwslmDUWQTg3t3GW8QN7D3EpW/EAI+oqTqL0dGvLyluyYQ/eIrIHvQ==",\n      "requires": {\n        "babel-code-frame": "^6.22.0",\n        "chalk": "^2.4.1",\n        "chokidar": "^2.0.4",\n        "micromatch": "^3.1.10",\n        "minimatch": "^3.0.4",\n        "semver": "^5.6.0",\n        "tapable": "^1.0.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "form-data": {\n      "version": "2.3.3",\n      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",\n      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",\n      "requires": {\n        "asynckit": "^0.4.0",\n        "combined-stream": "^1.0.6",\n        "mime-types": "^2.1.12"\n      }\n    },\n    "forwarded": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",\n      "integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="\n    },\n    "fragment-cache": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",\n      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",\n      "requires": {\n        "map-cache": "^0.2.2"\n      }\n    },\n    "fresh": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",\n      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac="\n    },\n    "from": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/from/-/from-0.1.7.tgz",\n      "integrity": "sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4="\n    },\n    "from2": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",\n      "integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",\n      "requires": {\n        "inherits": "^2.0.1",\n        "readable-stream": "^2.0.0"\n      }\n    },\n    "fs-extra": {\n      "version": "7.0.1",\n      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",\n      "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",\n      "requires": {\n        "graceful-fs": "^4.1.2",\n        "jsonfile": "^4.0.0",\n        "universalify": "^0.1.0"\n      }\n    },\n    "fs-mkdirp-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/fs-mkdirp-stream/-/fs-mkdirp-stream-1.0.0.tgz",\n      "integrity": "sha1-C3gV/DIBxqaeFNuYzgmMFpNSWes=",\n      "requires": {\n        "graceful-fs": "^4.1.11",\n        "through2": "^2.0.3"\n      }\n    },\n    "fs-write-stream-atomic": {\n      "version": "1.0.10",\n      "resolved": "https://registry.npmjs.org/fs-write-stream-atomic/-/fs-write-stream-atomic-1.0.10.tgz",\n      "integrity": "sha1-tH31NJPvkR33VzHnCp3tAYnbQMk=",\n      "requires": {\n        "graceful-fs": "^4.1.2",\n        "iferr": "^0.1.5",\n        "imurmurhash": "^0.1.4",\n        "readable-stream": "1 || 2"\n      }\n    },\n    "fs.realpath": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",\n      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="\n    },\n    "fsevents": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.0.6.tgz",\n      "integrity": "sha512-vfmKZp3XPM36DNF0qhW+Cdxk7xm7gTEHY1clv1Xq1arwRQuKZgAhw+NZNWbJBtuaNxzNXwhfdPYRrvIbjfS33A==",\n      "optional": true\n    },\n    "function-bind": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",\n      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="\n    },\n    "functional-red-black-tree": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",\n      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc="\n    },\n    "gaze": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/gaze/-/gaze-0.5.2.tgz",\n      "integrity": "sha1-QLcJU30k0dRXZ9takIaJ3+aaxE8=",\n      "requires": {\n        "globule": "~0.1.0"\n      }\n    },\n    "get-caller-file": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.3.tgz",\n      "integrity": "sha512-3t6rVToeoZfYSGd8YoLFR2DJkiQrIiUrGcjvFX2mDw3bn6k2OtwHN0TNCLbBO+w8qTvimhDkv+LSscbJY1vE6w=="\n    },\n    "get-imports": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/get-imports/-/get-imports-1.0.0.tgz",\n      "integrity": "sha1-R8C07piTUWQsVJdxk79Pyqv1N48=",\n      "requires": {\n        "array-uniq": "^1.0.1",\n        "import-regex": "^1.1.0"\n      }\n    },\n    "get-own-enumerable-property-symbols": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.0.tgz",\n      "integrity": "sha512-CIJYJC4GGF06TakLg8z4GQKvDsx9EMspVxOYih7LerEL/WosUnFIww45CGfxfeKHqlg3twgUrYRT1O3WQqjGCg=="\n    },\n    "get-stream": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",\n      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",\n      "requires": {\n        "pump": "^3.0.0"\n      }\n    },\n    "get-value": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",\n      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg="\n    },\n    "getpass": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",\n      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",\n      "requires": {\n        "assert-plus": "^1.0.0"\n      }\n    },\n    "glob": {\n      "version": "7.1.3",\n      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",\n      "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",\n      "requires": {\n        "fs.realpath": "^1.0.0",\n        "inflight": "^1.0.4",\n        "inherits": "2",\n        "minimatch": "^3.0.4",\n        "once": "^1.3.0",\n        "path-is-absolute": "^1.0.0"\n      }\n    },\n    "glob-base": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz",\n      "integrity": "sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=",\n      "requires": {\n        "glob-parent": "^2.0.0",\n        "is-glob": "^2.0.0"\n      },\n      "dependencies": {\n        "glob-parent": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",\n          "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",\n          "requires": {\n            "is-glob": "^2.0.0"\n          }\n        },\n        "is-extglob": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",\n          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="\n        },\n        "is-glob": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",\n          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",\n          "requires": {\n            "is-extglob": "^1.0.0"\n          }\n        }\n      }\n    },\n    "glob-parent": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",\n      "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",\n      "requires": {\n        "is-glob": "^3.1.0",\n        "path-dirname": "^1.0.0"\n      },\n      "dependencies": {\n        "is-glob": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",\n          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",\n          "requires": {\n            "is-extglob": "^2.1.0"\n          }\n        }\n      }\n    },\n    "glob-stream": {\n      "version": "3.1.18",\n      "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-3.1.18.tgz",\n      "integrity": "sha1-kXCl8St5Awb9/lmPMT+PeVT9FDs=",\n      "requires": {\n        "glob": "^4.3.1",\n        "glob2base": "^0.0.12",\n        "minimatch": "^2.0.1",\n        "ordered-read-streams": "^0.1.0",\n        "through2": "^0.6.1",\n        "unique-stream": "^1.0.0"\n      },\n      "dependencies": {\n        "glob": {\n          "version": "4.5.3",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-4.5.3.tgz",\n          "integrity": "sha1-xstz0yJsHv7wTePFbQEvAzd+4V8=",\n          "requires": {\n            "inflight": "^1.0.4",\n            "inherits": "2",\n            "minimatch": "^2.0.1",\n            "once": "^1.3.0"\n          }\n        },\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "minimatch": {\n          "version": "2.0.10",\n          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz",\n          "integrity": "sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=",\n          "requires": {\n            "brace-expansion": "^1.0.0"\n          }\n        },\n        "readable-stream": {\n          "version": "1.0.34",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",\n          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        },\n        "through2": {\n          "version": "0.6.5",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",\n          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",\n          "requires": {\n            "readable-stream": ">=1.0.33-1 <1.1.0-0",\n            "xtend": ">=4.0.0 <4.1.0-0"\n          }\n        }\n      }\n    },\n    "glob-to-regexp": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz",\n      "integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="\n    },\n    "glob-watcher": {\n      "version": "0.0.6",\n      "resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-0.0.6.tgz",\n      "integrity": "sha1-uVtKjfdLOcgymLDAXJeLTZo7cQs=",\n      "requires": {\n        "gaze": "^0.5.1"\n      }\n    },\n    "glob2base": {\n      "version": "0.0.12",\n      "resolved": "https://registry.npmjs.org/glob2base/-/glob2base-0.0.12.tgz",\n      "integrity": "sha1-nUGbPijxLoOjYhZKJ3BVkiycDVY=",\n      "requires": {\n        "find-index": "^0.1.1"\n      }\n    },\n    "global-modules": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-2.0.0.tgz",\n      "integrity": "sha512-NGbfmJBp9x8IxyJSd1P+otYK8vonoJactOogrVfFRIAEY1ukil8RSKDz2Yo7wh1oihl51l/r6W4epkeKJHqL8A==",\n      "requires": {\n        "global-prefix": "^3.0.0"\n      }\n    },\n    "global-prefix": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-3.0.0.tgz",\n      "integrity": "sha512-awConJSVCHVGND6x3tmMaKcQvwXLhjdkmomy2W+Goaui8YPgYgXJZewhg3fWC+DlfqqQuWg8AwqjGTD2nAPVWg==",\n      "requires": {\n        "ini": "^1.3.5",\n        "kind-of": "^6.0.2",\n        "which": "^1.3.1"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "globals": {\n      "version": "11.11.0",\n      "resolved": "https://registry.npmjs.org/globals/-/globals-11.11.0.tgz",\n      "integrity": "sha512-WHq43gS+6ufNOEqlrDBxVEbb8ntfXrfAUU2ZOpCxrBdGKW3gyv8mCxAfIBD0DroPKGrJ2eSsXsLtY9MPntsyTw=="\n    },\n    "globby": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/globby/-/globby-8.0.2.tgz",\n      "integrity": "sha512-yTzMmKygLp8RUpG1Ymu2VXPSJQZjNAZPD4ywgYEaG7e4tBJeUQBO8OpXrf1RCNcEs5alsoJYPAMiIHP0cmeC7w==",\n      "requires": {\n        "array-union": "^1.0.1",\n        "dir-glob": "2.0.0",\n        "fast-glob": "^2.0.2",\n        "glob": "^7.1.2",\n        "ignore": "^3.3.5",\n        "pify": "^3.0.0",\n        "slash": "^1.0.0"\n      },\n      "dependencies": {\n        "ignore": {\n          "version": "3.3.10",\n          "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",\n          "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug=="\n        },\n        "slash": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",\n          "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="\n        }\n      }\n    },\n    "globule": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/globule/-/globule-0.1.0.tgz",\n      "integrity": "sha1-2cjt3h2nnRJaFRt5UzuXhnY0auU=",\n      "requires": {\n        "glob": "~3.1.21",\n        "lodash": "~1.0.1",\n        "minimatch": "~0.2.11"\n      },\n      "dependencies": {\n        "glob": {\n          "version": "3.1.21",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-3.1.21.tgz",\n          "integrity": "sha1-0p4KBV3qUTj00H7UDomC6DwgZs0=",\n          "requires": {\n            "graceful-fs": "~1.2.0",\n            "inherits": "1",\n            "minimatch": "~0.2.11"\n          }\n        },\n        "graceful-fs": {\n          "version": "1.2.3",\n          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.2.3.tgz",\n          "integrity": "sha1-FaSAaldUfLLS2/J/QuiajDRRs2Q="\n        },\n        "inherits": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/inherits/-/inherits-1.0.2.tgz",\n          "integrity": "sha1-ykMJ2t7mtUzAuNJH6NfHoJdb3Js="\n        },\n        "lodash": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/lodash/-/lodash-1.0.2.tgz",\n          "integrity": "sha1-j1dWDIO1n8JwvT1WG2kAQ0MOJVE="\n        },\n        "lru-cache": {\n          "version": "2.7.3",\n          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz",\n          "integrity": "sha1-bUUk6LlV+V1PW1iFHOId1y+06VI="\n        },\n        "minimatch": {\n          "version": "0.2.14",\n          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz",\n          "integrity": "sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=",\n          "requires": {\n            "lru-cache": "2",\n            "sigmund": "~1.0.0"\n          }\n        }\n      }\n    },\n    "glogg": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/glogg/-/glogg-1.0.2.tgz",\n      "integrity": "sha512-5mwUoSuBk44Y4EshyiqcH95ZntbDdTQqA3QYSrxmzj28Ai0vXBGMH1ApSANH14j2sIRtqCEyg6PfsuP7ElOEDA==",\n      "requires": {\n        "sparkles": "^1.0.0"\n      }\n    },\n    "graceful-fs": {\n      "version": "4.1.15",\n      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz",\n      "integrity": "sha512-6uHUhOPEBgQ24HM+r6b/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA=="\n    },\n    "growly": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/growly/-/growly-1.3.0.tgz",\n      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE="\n    },\n    "gulp": {\n      "version": "3.9.1",\n      "resolved": "https://registry.npmjs.org/gulp/-/gulp-3.9.1.tgz",\n      "integrity": "sha1-VxzkWSjdQK9lFPxAEYZgFsE4RbQ=",\n      "requires": {\n        "archy": "^1.0.0",\n        "chalk": "^1.0.0",\n        "deprecated": "^0.0.1",\n        "gulp-util": "^3.0.0",\n        "interpret": "^1.0.0",\n        "liftoff": "^2.1.0",\n        "minimist": "^1.1.0",\n        "orchestrator": "^0.3.0",\n        "pretty-hrtime": "^1.0.0",\n        "semver": "^4.1.0",\n        "tildify": "^1.0.0",\n        "v8flags": "^2.0.2",\n        "vinyl-fs": "^0.3.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "semver": {\n          "version": "4.3.6",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-4.3.6.tgz",\n          "integrity": "sha1-MAvG4OhjdPe6YQaLWx7NV/xlMto="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-autoprefixer": {\n      "version": "6.1.0",\n      "resolved": "https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-6.1.0.tgz",\n      "integrity": "sha512-Ti/BUFe+ekhbDJfspZIMiOsOvw51KhI9EncsDfK7NaxjqRm+v4xS9v99kPxEoiDavpWqQWvG8Y6xT1mMlB3aXA==",\n      "requires": {\n        "autoprefixer": "^9.5.1",\n        "fancy-log": "^1.3.2",\n        "plugin-error": "^1.0.1",\n        "postcss": "^7.0.2",\n        "through2": "^3.0.1",\n        "vinyl-sourcemaps-apply": "^0.2.1"\n      },\n      "dependencies": {\n        "through2": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-3.0.1.tgz",\n          "integrity": "sha512-M96dvTalPT3YbYLaKaCuwu+j06D/8Jfib0o/PxbVt6Amhv3dUAtW6rTV1jPgJSBG83I/e04Y6xkVdVhSRhi0ww==",\n          "requires": {\n            "readable-stream": "2 || 3"\n          }\n        }\n      }\n    },\n    "gulp-chmod": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/gulp-chmod/-/gulp-chmod-2.0.0.tgz",\n      "integrity": "sha1-AMOQuSigeZslGsz2MaoJ4BzGKZw=",\n      "requires": {\n        "deep-assign": "^1.0.0",\n        "stat-mode": "^0.2.0",\n        "through2": "^2.0.0"\n      }\n    },\n    "gulp-clean-css": {\n      "version": "3.10.0",\n      "resolved": "https://registry.npmjs.org/gulp-clean-css/-/gulp-clean-css-3.10.0.tgz",\n      "integrity": "sha512-7Isf9Y690o/Q5MVjEylH1H7L8WeZ89woW7DnhD5unTintOdZb67KdOayRgp9trUFo+f9UyJtuatV42e/+kghPg==",\n      "requires": {\n        "clean-css": "4.2.1",\n        "plugin-error": "1.0.1",\n        "through2": "2.0.3",\n        "vinyl-sourcemaps-apply": "0.2.1"\n      },\n      "dependencies": {\n        "through2": {\n          "version": "2.0.3",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.3.tgz",\n          "integrity": "sha1-AARWmzfHx0ujnEPzzteNGtlBQL4=",\n          "requires": {\n            "readable-stream": "^2.1.5",\n            "xtend": "~4.0.1"\n          }\n        }\n      }\n    },\n    "gulp-clone": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-clone/-/gulp-clone-2.0.1.tgz",\n      "integrity": "sha512-SLg/KsHBbinR/pCX3PF5l1YlR28hLp0X+bcpf77PtMJ6zvAQ5kRjtCPV5Wt1wHXsXWZN0eTUZ15R8ZYpi/CdCA==",\n      "requires": {\n        "plugin-error": "^0.1.2",\n        "through2": "^2.0.3"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-concat": {\n      "version": "2.6.1",\n      "resolved": "https://registry.npmjs.org/gulp-concat/-/gulp-concat-2.6.1.tgz",\n      "integrity": "sha1-Yz0WyV2IUEYorQJmVmPO5aR5M1M=",\n      "requires": {\n        "concat-with-sourcemaps": "^1.0.0",\n        "through2": "^2.0.0",\n        "vinyl": "^2.0.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "^2.1.1",\n            "clone-buffer": "^1.0.0",\n            "clone-stats": "^1.0.0",\n            "cloneable-readable": "^1.0.0",\n            "remove-trailing-separator": "^1.0.1",\n            "replace-ext": "^1.0.0"\n          }\n        }\n      }\n    },\n    "gulp-concat-css": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/gulp-concat-css/-/gulp-concat-css-3.1.0.tgz",\n      "integrity": "sha512-iLTBPS+cutlgLyK3bp9DMts+WuS8n2mQpjzQ7p/ZVQc8FO5fvpN+ntg9U6jsuNvPeuii82aKm8XeOzF0nUK+TA==",\n      "requires": {\n        "lodash.defaults": "^3.0.0",\n        "parse-import": "^2.0.0",\n        "plugin-error": "^0.1.2",\n        "rework": "~1.0.0",\n        "rework-import": "^2.0.0",\n        "rework-plugin-url": "^1.0.1",\n        "through2": "~1.1.1",\n        "vinyl": "^2.1.0"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        },\n        "readable-stream": {\n          "version": "1.1.14",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",\n          "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        },\n        "through2": {\n          "version": "1.1.1",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-1.1.1.tgz",\n          "integrity": "sha1-CEfLxESfNAVXTb3M2buEG4OsNUU=",\n          "requires": {\n            "readable-stream": ">=1.1.13-1 <1.2.0-0",\n            "xtend": ">=4.0.0 <4.1.0-0"\n          }\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "^2.1.1",\n            "clone-buffer": "^1.0.0",\n            "clone-stats": "^1.0.0",\n            "cloneable-readable": "^1.0.0",\n            "remove-trailing-separator": "^1.0.1",\n            "replace-ext": "^1.0.0"\n          }\n        }\n      }\n    },\n    "gulp-copy": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-copy/-/gulp-copy-4.0.1.tgz",\n      "integrity": "sha512-UbdAwmEiVNNv55KAiUYWOP6Za7h8JPHNNyekNx8Gyc5XRlpUzTrlEclps939nOeiDPsd6jUtT2LmfavJirbZQg==",\n      "requires": {\n        "gulp": "^4.0.0",\n        "plugin-error": "^0.1.2",\n        "through2": "^2.0.3"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "^0.1.0"\n          }\n        },\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "camelcase": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",\n          "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="\n        },\n        "cliui": {\n          "version": "3.2.0",\n          "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",\n          "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",\n          "requires": {\n            "string-width": "^1.0.1",\n            "strip-ansi": "^3.0.1",\n            "wrap-ansi": "^2.0.0"\n          }\n        },\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "find-up": {\n          "version": "1.1.2",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",\n          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",\n          "requires": {\n            "path-exists": "^2.0.0",\n            "pinkie-promise": "^2.0.0"\n          }\n        },\n        "findup-sync": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-3.0.0.tgz",\n          "integrity": "sha512-YbffarhcicEhOrm4CtrwdKBdCuz576RLdhJDsIfvNtxUuhdRet1qZcsMjqbePtAseKdAnDyM/IyXbu7PRPRLYg==",\n          "requires": {\n            "detect-file": "^1.0.0",\n            "is-glob": "^4.0.0",\n            "micromatch": "^3.0.4",\n            "resolve-dir": "^1.0.1"\n          }\n        },\n        "glob-stream": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-6.1.0.tgz",\n          "integrity": "sha1-cEXJlBOz65SIjYOrRtC0BMx73eQ=",\n          "requires": {\n            "extend": "^3.0.0",\n            "glob": "^7.1.1",\n            "glob-parent": "^3.1.0",\n            "is-negated-glob": "^1.0.0",\n            "ordered-read-streams": "^1.0.0",\n            "pumpify": "^1.3.5",\n            "readable-stream": "^2.1.5",\n            "remove-trailing-separator": "^1.0.1",\n            "to-absolute-glob": "^2.0.0",\n            "unique-stream": "^2.0.2"\n          }\n        },\n        "glob-watcher": {\n          "version": "5.0.3",\n          "resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-5.0.3.tgz",\n          "integrity": "sha512-8tWsULNEPHKQ2MR4zXuzSmqbdyV5PtwwCaWSGQ1WwHsJ07ilNeN1JB8ntxhckbnpSHaf9dXFUHzIWvm1I13dsg==",\n          "requires": {\n            "anymatch": "^2.0.0",\n            "async-done": "^1.2.0",\n            "chokidar": "^2.0.0",\n            "is-negated-glob": "^1.0.0",\n            "just-debounce": "^1.0.0",\n            "object.defaults": "^1.1.0"\n          }\n        },\n        "gulp": {\n          "version": "4.0.1",\n          "resolved": "https://registry.npmjs.org/gulp/-/gulp-4.0.1.tgz",\n          "integrity": "sha512-yDVtVunxrAdsk7rIV/b7lVSBifPN1Eqe6wTjsESGrFcL+MEVzaaeNTkpUuGTUptloSOU+8oJm/lBJbgPV+tMAw==",\n          "requires": {\n            "glob-watcher": "^5.0.3",\n            "gulp-cli": "^2.2.0",\n            "undertaker": "^1.2.1",\n            "vinyl-fs": "^3.0.0"\n          },\n          "dependencies": {\n            "gulp-cli": {\n              "version": "2.2.0",\n              "resolved": "https://registry.npmjs.org/gulp-cli/-/gulp-cli-2.2.0.tgz",\n              "integrity": "sha512-rGs3bVYHdyJpLqR0TUBnlcZ1O5O++Zs4bA0ajm+zr3WFCfiSLjGwoCBqFs18wzN+ZxahT9DkOK5nDf26iDsWjA==",\n              "requires": {\n                "ansi-colors": "^1.0.1",\n                "archy": "^1.0.0",\n                "array-sort": "^1.0.0",\n                "color-support": "^1.1.3",\n                "concat-stream": "^1.6.0",\n                "copy-props": "^2.0.1",\n                "fancy-log": "^1.3.2",\n                "gulplog": "^1.0.0",\n                "interpret": "^1.1.0",\n                "isobject": "^3.0.1",\n                "liftoff": "^3.1.0",\n                "matchdep": "^2.0.0",\n                "mute-stdout": "^1.0.0",\n                "pretty-hrtime": "^1.0.0",\n                "replace-homedir": "^1.0.0",\n                "semver-greatest-satisfied-range": "^1.1.0",\n                "v8flags": "^3.0.1",\n                "yargs": "^7.1.0"\n              }\n            }\n          }\n        },\n        "invert-kv": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",\n          "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="\n        },\n        "is-fullwidth-code-point": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",\n          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",\n          "requires": {\n            "number-is-nan": "^1.0.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "lcid": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",\n          "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",\n          "requires": {\n            "invert-kv": "^1.0.0"\n          }\n        },\n        "liftoff": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/liftoff/-/liftoff-3.1.0.tgz",\n          "integrity": "sha512-DlIPlJUkCV0Ips2zf2pJP0unEoT1kwYhiiPUGF3s/jtxTCjziNLoiVVh+jqWOWeFi6mmwQ5fNxvAUyPad4Dfog==",\n          "requires": {\n            "extend": "^3.0.0",\n            "findup-sync": "^3.0.0",\n            "fined": "^1.0.1",\n            "flagged-respawn": "^1.0.0",\n            "is-plain-object": "^2.0.4",\n            "object.map": "^1.0.0",\n            "rechoir": "^0.6.2",\n            "resolve": "^1.1.7"\n          }\n        },\n        "load-json-file": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",\n          "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "parse-json": "^2.2.0",\n            "pify": "^2.0.0",\n            "pinkie-promise": "^2.0.0",\n            "strip-bom": "^2.0.0"\n          }\n        },\n        "ordered-read-streams": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-1.0.1.tgz",\n          "integrity": "sha1-d8DLN8QVJdZBZtmQ/61+xqDhNj4=",\n          "requires": {\n            "readable-stream": "^2.0.1"\n          }\n        },\n        "os-locale": {\n          "version": "1.4.0",\n          "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",\n          "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",\n          "requires": {\n            "lcid": "^1.0.0"\n          }\n        },\n        "parse-json": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",\n          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",\n          "requires": {\n            "error-ex": "^1.2.0"\n          }\n        },\n        "path-exists": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",\n          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",\n          "requires": {\n            "pinkie-promise": "^2.0.0"\n          }\n        },\n        "path-type": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",\n          "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "pify": "^2.0.0",\n            "pinkie-promise": "^2.0.0"\n          }\n        },\n        "pify": {\n          "version": "2.3.0",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        },\n        "read-pkg": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",\n          "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",\n          "requires": {\n            "load-json-file": "^1.0.0",\n            "normalize-package-data": "^2.3.2",\n            "path-type": "^1.0.0"\n          }\n        },\n        "read-pkg-up": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",\n          "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",\n          "requires": {\n            "find-up": "^1.0.0",\n            "read-pkg": "^1.0.0"\n          }\n        },\n        "require-main-filename": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",\n          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="\n        },\n        "string-width": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",\n          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",\n          "requires": {\n            "code-point-at": "^1.0.0",\n            "is-fullwidth-code-point": "^1.0.0",\n            "strip-ansi": "^3.0.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "strip-bom": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",\n          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",\n          "requires": {\n            "is-utf8": "^0.2.0"\n          }\n        },\n        "unique-stream": {\n          "version": "2.3.1",\n          "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-2.3.1.tgz",\n          "integrity": "sha512-2nY4TnBE70yoxHkDli7DMazpWiP7xMdCYqU2nBRO0UB+ZpEkGsSija7MvmvnZFUeC+mrgiUfcHSr3LmRFIg4+A==",\n          "requires": {\n            "json-stable-stringify-without-jsonify": "^1.0.1",\n            "through2-filter": "^3.0.0"\n          }\n        },\n        "v8flags": {\n          "version": "3.1.2",\n          "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.1.2.tgz",\n          "integrity": "sha512-MtivA7GF24yMPte9Rp/BWGCYQNaUj86zeYxV/x2RRJMKagImbbv3u8iJC57lNhWLPcGLJmHcHmFWkNsplbbLWw==",\n          "requires": {\n            "homedir-polyfill": "^1.0.1"\n          }\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "^2.1.1",\n            "clone-buffer": "^1.0.0",\n            "clone-stats": "^1.0.0",\n            "cloneable-readable": "^1.0.0",\n            "remove-trailing-separator": "^1.0.1",\n            "replace-ext": "^1.0.0"\n          }\n        },\n        "vinyl-fs": {\n          "version": "3.0.3",\n          "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-3.0.3.tgz",\n          "integrity": "sha512-vIu34EkyNyJxmP0jscNzWBSygh7VWhqun6RmqVfXePrOwi9lhvRs//dOaGOTRUQr4tx7/zd26Tk5WeSVZitgng==",\n          "requires": {\n            "fs-mkdirp-stream": "^1.0.0",\n            "glob-stream": "^6.1.0",\n            "graceful-fs": "^4.0.0",\n            "is-valid-glob": "^1.0.0",\n            "lazystream": "^1.0.0",\n            "lead": "^1.0.0",\n            "object.assign": "^4.0.4",\n            "pumpify": "^1.3.5",\n            "readable-stream": "^2.3.3",\n            "remove-bom-buffer": "^3.0.0",\n            "remove-bom-stream": "^1.2.0",\n            "resolve-options": "^1.1.0",\n            "through2": "^2.0.0",\n            "to-through": "^2.0.0",\n            "value-or-function": "^3.0.0",\n            "vinyl": "^2.0.0",\n            "vinyl-sourcemap": "^1.1.0"\n          }\n        },\n        "which-module": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",\n          "integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8="\n        },\n        "y18n": {\n          "version": "3.2.1",\n          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",\n          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE="\n        },\n        "yargs": {\n          "version": "7.1.0",\n          "resolved": "https://registry.npmjs.org/yargs/-/yargs-7.1.0.tgz",\n          "integrity": "sha1-a6MY6xaWFyf10oT46gA+jWFU0Mg=",\n          "requires": {\n            "camelcase": "^3.0.0",\n            "cliui": "^3.2.0",\n            "decamelize": "^1.1.1",\n            "get-caller-file": "^1.0.1",\n            "os-locale": "^1.4.0",\n            "read-pkg-up": "^1.0.1",\n            "require-directory": "^2.1.1",\n            "require-main-filename": "^1.0.1",\n            "set-blocking": "^2.0.0",\n            "string-width": "^1.0.2",\n            "which-module": "^1.0.0",\n            "y18n": "^3.2.1",\n            "yargs-parser": "^5.0.0"\n          }\n        },\n        "yargs-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-5.0.0.tgz",\n          "integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",\n          "requires": {\n            "camelcase": "^3.0.0"\n          }\n        }\n      }\n    },\n    "gulp-dedupe": {\n      "version": "0.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-dedupe/-/gulp-dedupe-0.0.2.tgz",\n      "integrity": "sha1-Nu+Srff89T4vCW++lmXZiPnhyn4=",\n      "requires": {\n        "colors": "~1.0.2",\n        "diff": "~1.0.8",\n        "gulp-util": "~3.0.1",\n        "lodash.defaults": "~2.4.1",\n        "through": "~2.3.6"\n      },\n      "dependencies": {\n        "lodash.defaults": {\n          "version": "2.4.1",\n          "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-2.4.1.tgz",\n          "integrity": "sha1-p+iIXwXmiFEUS24SqPNngCa8TFQ=",\n          "requires": {\n            "lodash._objecttypes": "~2.4.1",\n            "lodash.keys": "~2.4.1"\n          }\n        },\n        "lodash.keys": {\n          "version": "2.4.1",\n          "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-2.4.1.tgz",\n          "integrity": "sha1-SN6kbfj/djKxDXBrissmWR4rNyc=",\n          "requires": {\n            "lodash._isnative": "~2.4.1",\n            "lodash._shimkeys": "~2.4.1",\n            "lodash.isobject": "~2.4.1"\n          }\n        }\n      }\n    },\n    "gulp-flatten": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/gulp-flatten/-/gulp-flatten-0.4.0.tgz",\n      "integrity": "sha512-eg4spVTAiv1xXmugyaCxWne1oPtNG0UHEtABx5W8ScLiqAYceyYm6GYA36x0Qh8KOIXmAZV97L2aYGnKREG3Sg==",\n      "requires": {\n        "plugin-error": "^0.1.2",\n        "through2": "^2.0.0"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-header": {\n      "version": "2.0.7",\n      "resolved": "https://registry.npmjs.org/gulp-header/-/gulp-header-2.0.7.tgz",\n      "integrity": "sha512-qppGkYGQZnt/mRJiiR5wYZIUwNUn47Xpg4+6tHYDVeAW5IDLbHBQwbw7axfMLWGE+gKQpB+yXLeslHMw1/Haog==",\n      "requires": {\n        "concat-with-sourcemaps": "^1.1.0",\n        "lodash.template": "^4.4.0",\n        "map-stream": "0.0.7",\n        "through2": "^2.0.0"\n      },\n      "dependencies": {\n        "map-stream": {\n          "version": "0.0.7",\n          "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",\n          "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="\n        }\n      }\n    },\n    "gulp-help": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/gulp-help/-/gulp-help-1.6.1.tgz",\n      "integrity": "sha1-Jh2xhuGDl/7z9qLCLpwxW/qIrgw=",\n      "requires": {\n        "chalk": "^1.0.0",\n        "object-assign": "^3.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "object-assign": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",\n          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-if": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-if/-/gulp-if-2.0.2.tgz",\n      "integrity": "sha1-pJe351cwBQQcqivIt92jyARE1ik=",\n      "requires": {\n        "gulp-match": "^1.0.3",\n        "ternary-stream": "^2.0.1",\n        "through2": "^2.0.1"\n      }\n    },\n    "gulp-json-editor": {\n      "version": "2.5.1",\n      "resolved": "https://registry.npmjs.org/gulp-json-editor/-/gulp-json-editor-2.5.1.tgz",\n      "integrity": "sha512-YxioAmHLQlbw2tYAtJ8TKc1ljgcBwdC16h+ImHKFgbWHFMG0LhMfHWgtliRPGnSMleSQfDLoolWsVha254HdVw==",\n      "requires": {\n        "deepmerge": "^3.2.0",\n        "detect-indent": "^5.0.0",\n        "js-beautify": "^1.9.0",\n        "plugin-error": "^1.0.1",\n        "through2": "^3.0.1"\n      },\n      "dependencies": {\n        "through2": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-3.0.1.tgz",\n          "integrity": "sha512-M96dvTalPT3YbYLaKaCuwu+j06D/8Jfib0o/PxbVt6Amhv3dUAtW6rTV1jPgJSBG83I/e04Y6xkVdVhSRhi0ww==",\n          "requires": {\n            "readable-stream": "2 || 3"\n          }\n        }\n      }\n    },\n    "gulp-less": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-less/-/gulp-less-4.0.1.tgz",\n      "integrity": "sha512-hmM2k0FfQp7Ptm3ZaqO2CkMX3hqpiIOn4OHtuSsCeFym63F7oWlEua5v6u1cIjVUKYsVIs9zPg9vbqTEb/udpA==",\n      "requires": {\n        "accord": "^0.29.0",\n        "less": "2.6.x || ^3.7.1",\n        "object-assign": "^4.0.1",\n        "plugin-error": "^0.1.2",\n        "replace-ext": "^1.0.0",\n        "through2": "^2.0.0",\n        "vinyl-sourcemaps-apply": "^0.2.0"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-match": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/gulp-match/-/gulp-match-1.0.3.tgz",\n      "integrity": "sha1-kcfA1/Kb7NZgbVfYCn+Hdqh6uo4=",\n      "requires": {\n        "minimatch": "^3.0.3"\n      }\n    },\n    "gulp-notify": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/gulp-notify/-/gulp-notify-3.2.0.tgz",\n      "integrity": "sha512-qEocs1UVoDKKUjfsxJNMNwkRla0PbsyJwsqNNXpzYWsLQ29LhxRMY3wnTGZcc4hMHtalnvah/Dwlwb4NijH/0A==",\n      "requires": {\n        "ansi-colors": "^1.0.1",\n        "fancy-log": "^1.3.2",\n        "lodash.template": "^4.4.0",\n        "node-notifier": "^5.2.1",\n        "node.extend": "^2.0.0",\n        "plugin-error": "^0.1.2",\n        "through2": "^2.0.3"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "^0.1.0"\n          }\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-plumber": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/gulp-plumber/-/gulp-plumber-1.2.1.tgz",\n      "integrity": "sha512-mctAi9msEAG7XzW5ytDVZ9PxWMzzi1pS2rBH7lA095DhMa6KEXjm+St0GOCc567pJKJ/oCvosVAZEpAey0q2eQ==",\n      "requires": {\n        "chalk": "^1.1.3",\n        "fancy-log": "^1.3.2",\n        "plugin-error": "^0.1.2",\n        "through2": "^2.0.3"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-print": {\n      "version": "5.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-print/-/gulp-print-5.0.2.tgz",\n      "integrity": "sha512-iIpHMzC/b3gFvVXOfP9Jk94SWGIsDLVNUrxULRleQev+08ug07mh84b1AOlW6QDQdmInQiqDFqJN1UvhU2nXdg==",\n      "requires": {\n        "ansi-colors": "^3.2.4",\n        "fancy-log": "^1.3.3",\n        "map-stream": "0.0.7",\n        "vinyl": "^2.2.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "map-stream": {\n          "version": "0.0.7",\n          "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",\n          "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "^2.1.1",\n            "clone-buffer": "^1.0.0",\n            "clone-stats": "^1.0.0",\n            "cloneable-readable": "^1.0.0",\n            "remove-trailing-separator": "^1.0.1",\n            "replace-ext": "^1.0.0"\n          }\n        }\n      }\n    },\n    "gulp-rename": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/gulp-rename/-/gulp-rename-1.4.0.tgz",\n      "integrity": "sha512-swzbIGb/arEoFK89tPY58vg3Ok1bw+d35PfUNwWqdo7KM4jkmuGA78JiDNqR+JeZFaeeHnRg9N7aihX3YPmsyg=="\n    },\n    "gulp-replace": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/gulp-replace/-/gulp-replace-1.0.0.tgz",\n      "integrity": "sha512-lgdmrFSI1SdhNMXZQbrC75MOl1UjYWlOWNbNRnz+F/KHmgxt3l6XstBoAYIdadwETFyG/6i+vWUSCawdC3pqOw==",\n      "requires": {\n        "istextorbinary": "2.2.1",\n        "readable-stream": "^2.0.1",\n        "replacestream": "^4.0.0"\n      }\n    },\n    "gulp-rtlcss": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/gulp-rtlcss/-/gulp-rtlcss-1.3.0.tgz",\n      "integrity": "sha512-xh9vuxDc5+5C583jJwy/F6nd6wdtz8YnjderfwjDWr4UPq0fzK3w9Yv03SPkAJlUFUz6Y/7Sli7h54PbJZ2X+A==",\n      "requires": {\n        "plugin-error": "^1.0.1",\n        "rtlcss": "^2.4.0",\n        "through2": "^2.0.3",\n        "vinyl-sourcemaps-apply": "^0.2.1"\n      }\n    },\n    "gulp-uglify": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-3.0.2.tgz",\n      "integrity": "sha512-gk1dhB74AkV2kzqPMQBLA3jPoIAPd/nlNzP2XMDSG8XZrqnlCiDGAqC+rZOumzFvB5zOphlFh6yr3lgcAb/OOg==",\n      "requires": {\n        "array-each": "^1.0.1",\n        "extend-shallow": "^3.0.2",\n        "gulplog": "^1.0.0",\n        "has-gulplog": "^0.1.0",\n        "isobject": "^3.0.1",\n        "make-error-cause": "^1.1.1",\n        "safe-buffer": "^5.1.2",\n        "through2": "^2.0.0",\n        "uglify-js": "^3.0.5",\n        "vinyl-sourcemaps-apply": "^0.2.0"\n      }\n    },\n    "gulp-util": {\n      "version": "3.0.8",\n      "resolved": "https://registry.npmjs.org/gulp-util/-/gulp-util-3.0.8.tgz",\n      "integrity": "sha1-AFTh50RQLifATBh8PsxQXdVLu08=",\n      "requires": {\n        "array-differ": "^1.0.0",\n        "array-uniq": "^1.0.2",\n        "beeper": "^1.0.0",\n        "chalk": "^1.0.0",\n        "dateformat": "^2.0.0",\n        "fancy-log": "^1.1.0",\n        "gulplog": "^1.0.0",\n        "has-gulplog": "^0.1.0",\n        "lodash._reescape": "^3.0.0",\n        "lodash._reevaluate": "^3.0.0",\n        "lodash._reinterpolate": "^3.0.0",\n        "lodash.template": "^3.0.0",\n        "minimist": "^1.1.0",\n        "multipipe": "^0.1.2",\n        "object-assign": "^3.0.0",\n        "replace-ext": "0.0.1",\n        "through2": "^2.0.0",\n        "vinyl": "^0.5.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "lodash.template": {\n          "version": "3.6.2",\n          "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-3.6.2.tgz",\n          "integrity": "sha1-+M3sxhaaJVvpCYrosMU9N4kx0U8=",\n          "requires": {\n            "lodash._basecopy": "^3.0.0",\n            "lodash._basetostring": "^3.0.0",\n            "lodash._basevalues": "^3.0.0",\n            "lodash._isiterateecall": "^3.0.0",\n            "lodash._reinterpolate": "^3.0.0",\n            "lodash.escape": "^3.0.0",\n            "lodash.keys": "^3.0.0",\n            "lodash.restparam": "^3.0.0",\n            "lodash.templatesettings": "^3.0.0"\n          }\n        },\n        "lodash.templatesettings": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-3.1.1.tgz",\n          "integrity": "sha1-+zB4RHU7Zrnxr6VOJix0UwfbqOU=",\n          "requires": {\n            "lodash._reinterpolate": "^3.0.0",\n            "lodash.escape": "^3.0.0"\n          }\n        },\n        "object-assign": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",\n          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="\n        },\n        "replace-ext": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",\n          "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-watch": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-watch/-/gulp-watch-5.0.1.tgz",\n      "integrity": "sha512-HnTSBdzAOFIT4wmXYPDUn783TaYAq9bpaN05vuZNP5eni3z3aRx0NAKbjhhMYtcq76x4R1wf4oORDGdlrEjuog==",\n      "requires": {\n        "ansi-colors": "1.1.0",\n        "anymatch": "^1.3.0",\n        "chokidar": "^2.0.0",\n        "fancy-log": "1.3.2",\n        "glob-parent": "^3.0.1",\n        "object-assign": "^4.1.0",\n        "path-is-absolute": "^1.0.1",\n        "plugin-error": "1.0.1",\n        "readable-stream": "^2.2.2",\n        "slash": "^1.0.0",\n        "vinyl": "^2.1.0",\n        "vinyl-file": "^2.0.0"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "^0.1.0"\n          }\n        },\n        "anymatch": {\n          "version": "1.3.2",\n          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-1.3.2.tgz",\n          "integrity": "sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==",\n          "requires": {\n            "micromatch": "^2.1.5",\n            "normalize-path": "^2.0.0"\n          }\n        },\n        "arr-diff": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",\n          "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",\n          "requires": {\n            "arr-flatten": "^1.0.1"\n          }\n        },\n        "array-unique": {\n          "version": "0.2.1",\n          "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",\n          "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM="\n        },\n        "braces": {\n          "version": "1.8.5",\n          "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",\n          "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",\n          "requires": {\n            "expand-range": "^1.8.1",\n            "preserve": "^0.2.0",\n            "repeat-element": "^1.1.2"\n          }\n        },\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "expand-brackets": {\n          "version": "0.1.5",\n          "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",\n          "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",\n          "requires": {\n            "is-posix-bracket": "^0.1.0"\n          }\n        },\n        "extglob": {\n          "version": "0.3.2",\n          "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",\n          "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",\n          "requires": {\n            "is-extglob": "^1.0.0"\n          }\n        },\n        "fancy-log": {\n          "version": "1.3.2",\n          "resolved": "https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.2.tgz",\n          "integrity": "sha1-9BEl49hPLn2JpD0G2VjI94vha+E=",\n          "requires": {\n            "ansi-gray": "^0.1.1",\n            "color-support": "^1.1.3",\n            "time-stamp": "^1.0.0"\n          }\n        },\n        "is-extglob": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",\n          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="\n        },\n        "is-glob": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",\n          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",\n          "requires": {\n            "is-extglob": "^1.0.0"\n          }\n        },\n        "micromatch": {\n          "version": "2.3.11",\n          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",\n          "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",\n          "requires": {\n            "arr-diff": "^2.0.0",\n            "array-unique": "^0.2.1",\n            "braces": "^1.8.2",\n            "expand-brackets": "^0.1.4",\n            "extglob": "^0.3.1",\n            "filename-regex": "^2.0.0",\n            "is-extglob": "^1.0.0",\n            "is-glob": "^2.0.1",\n            "kind-of": "^3.0.2",\n            "normalize-path": "^2.0.1",\n            "object.omit": "^2.0.0",\n            "parse-glob": "^3.0.4",\n            "regex-cache": "^0.4.2"\n          }\n        },\n        "slash": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",\n          "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "^2.1.1",\n            "clone-buffer": "^1.0.0",\n            "clone-stats": "^1.0.0",\n            "cloneable-readable": "^1.0.0",\n            "remove-trailing-separator": "^1.0.1",\n            "replace-ext": "^1.0.0"\n          }\n        }\n      }\n    },\n    "gulplog": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/gulplog/-/gulplog-1.0.0.tgz",\n      "integrity": "sha1-4oxNRdBey77YGDY86PnFkmIp/+U=",\n      "requires": {\n        "glogg": "^1.0.0"\n      }\n    },\n    "gzip-size": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/gzip-size/-/gzip-size-5.0.0.tgz",\n      "integrity": "sha512-5iI7omclyqrnWw4XbXAmGhPsABkSIDQonv2K0h61lybgofWa6iZyvrI3r2zsJH4P8Nb64fFVzlvfhs0g7BBxAA==",\n      "requires": {\n        "duplexer": "^0.1.1",\n        "pify": "^3.0.0"\n      }\n    },\n    "handle-thing": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/handle-thing/-/handle-thing-2.0.0.tgz",\n      "integrity": "sha512-d4sze1JNC454Wdo2fkuyzCr6aHcbL6PGGuFAz0Li/NcOm1tCHGnWDRmJP85dh9IhQErTc2svWFEX5xHIOo//kQ=="\n    },\n    "handlebars": {\n      "version": "4.1.2",\n      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.1.2.tgz",\n      "integrity": "sha512-nvfrjqvt9xQ8Z/w0ijewdD/vvWDTOweBUm96NTr66Wfvo1mJenBLwcYmPs3TIBP5ruzYGD7Hx/DaM9RmhroGPw==",\n      "requires": {\n        "neo-async": "^2.6.0",\n        "optimist": "^0.6.1",\n        "source-map": "^0.6.1",\n        "uglify-js": "^3.1.4"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "har-schema": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",\n      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="\n    },\n    "har-validator": {\n      "version": "5.1.3",\n      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",\n      "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",\n      "requires": {\n        "ajv": "^6.5.5",\n        "har-schema": "^2.0.0"\n      }\n    },\n    "harmony-reflect": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/harmony-reflect/-/harmony-reflect-1.6.1.tgz",\n      "integrity": "sha512-WJTeyp0JzGtHcuMsi7rw2VwtkvLa+JyfEKJCFyfcS0+CDkjQ5lHPu7zEhFZP+PDSRrEgXa5Ah0l1MbgbE41XjA=="\n    },\n    "has": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",\n      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",\n      "requires": {\n        "function-bind": "^1.1.1"\n      }\n    },\n    "has-ansi": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",\n      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",\n      "requires": {\n        "ansi-regex": "^2.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        }\n      }\n    },\n    "has-flag": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",\n      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="\n    },\n    "has-gulplog": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/has-gulplog/-/has-gulplog-0.1.0.tgz",\n      "integrity": "sha1-ZBTIKRNpfaUVkDl9r7EvIpZ4Ec4=",\n      "requires": {\n        "sparkles": "^1.0.0"\n      }\n    },\n    "has-symbols": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.0.tgz",\n      "integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="\n    },\n    "has-value": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",\n      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",\n      "requires": {\n        "get-value": "^2.0.6",\n        "has-values": "^1.0.0",\n        "isobject": "^3.0.0"\n      }\n    },\n    "has-values": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",\n      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",\n      "requires": {\n        "is-number": "^3.0.0",\n        "kind-of": "^4.0.0"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        },\n        "kind-of": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",\n          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",\n          "requires": {\n            "is-buffer": "^1.1.5"\n          }\n        }\n      }\n    },\n    "hash-base": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",\n      "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",\n      "requires": {\n        "inherits": "^2.0.1",\n        "safe-buffer": "^5.0.1"\n      }\n    },\n    "hash.js": {\n      "version": "1.1.7",\n      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",\n      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",\n      "requires": {\n        "inherits": "^2.0.3",\n        "minimalistic-assert": "^1.0.1"\n      }\n    },\n    "hast-util-from-parse5": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/hast-util-from-parse5/-/hast-util-from-parse5-5.0.0.tgz",\n      "integrity": "sha512-A7ev5OseS/J15214cvDdcI62uwovJO2PB60Xhnq7kaxvvQRFDEccuqbkrFXU03GPBGopdPqlpQBRqIcDS/Fjbg==",\n      "requires": {\n        "ccount": "^1.0.3",\n        "hastscript": "^5.0.0",\n        "property-information": "^5.0.0",\n        "web-namespaces": "^1.1.2",\n        "xtend": "^4.0.1"\n      }\n    },\n    "hast-util-parse-selector": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/hast-util-parse-selector/-/hast-util-parse-selector-2.2.1.tgz",\n      "integrity": "sha512-Xyh0v+nHmQvrOqop2Jqd8gOdyQtE8sIP9IQf7mlVDqp924W4w/8Liuguk2L2qei9hARnQSG2m+wAOCxM7npJVw=="\n    },\n    "hastscript": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/hastscript/-/hastscript-5.0.0.tgz",\n      "integrity": "sha512-xJtuJ8D42Xtq5yJrnDg/KAIxl2cXBXKoiIJwmWX9XMf8113qHTGl/Bf7jEsxmENJ4w6q4Tfl8s/Y6mEZo8x8qw==",\n      "requires": {\n        "comma-separated-tokens": "^1.0.0",\n        "hast-util-parse-selector": "^2.2.0",\n        "property-information": "^5.0.1",\n        "space-separated-tokens": "^1.0.0"\n      }\n    },\n    "he": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/he/-/he-1.2.0.tgz",\n      "integrity": "sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw=="\n    },\n    "hex-color-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",\n      "integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ=="\n    },\n    "hmac-drbg": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",\n      "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",\n      "requires": {\n        "hash.js": "^1.0.3",\n        "minimalistic-assert": "^1.0.0",\n        "minimalistic-crypto-utils": "^1.0.1"\n      }\n    },\n    "hoek": {\n      "version": "6.1.3",\n      "resolved": "https://registry.npmjs.org/hoek/-/hoek-6.1.3.tgz",\n      "integrity": "sha512-YXXAAhmF9zpQbC7LEcREFtXfGq5K1fmd+4PHkBq8NUqmzW3G+Dq10bI/i0KucLRwss3YYFQ0fSfoxBZYiGUqtQ=="\n    },\n    "hoist-non-react-statics": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.0.tgz",\n      "integrity": "sha512-0XsbTXxgiaCDYDIWFcwkmerZPSwywfUqYmwT4jzewKTQSWoE6FCMoUVOeBJWK3E/CrWbxRG3m5GzY4lnIwGRBA==",\n      "requires": {\n        "react-is": "^16.7.0"\n      }\n    },\n    "homedir-polyfill": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",\n      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",\n      "requires": {\n        "parse-passwd": "^1.0.0"\n      }\n    },\n    "hosted-git-info": {\n      "version": "2.7.1",\n      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.7.1.tgz",\n      "integrity": "sha512-7T/BxH19zbcCTa8XkMlbK5lTo1WtgkFi3GvdWEyNuc4Vex7/9Dqbnpsf4JMydcfj9HCg4zUWFTL3Za6lapg5/w=="\n    },\n    "hpack.js": {\n      "version": "2.1.6",\n      "resolved": "https://registry.npmjs.org/hpack.js/-/hpack.js-2.1.6.tgz",\n      "integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",\n      "requires": {\n        "inherits": "^2.0.1",\n        "obuf": "^1.0.0",\n        "readable-stream": "^2.0.1",\n        "wbuf": "^1.1.0"\n      }\n    },\n    "hsl-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/hsl-regex/-/hsl-regex-1.0.0.tgz",\n      "integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="\n    },\n    "hsla-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/hsla-regex/-/hsla-regex-1.0.0.tgz",\n      "integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="\n    },\n    "html-comment-regex": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/html-comment-regex/-/html-comment-regex-1.1.2.tgz",\n      "integrity": "sha512-P+M65QY2JQ5Y0G9KKdlDpo0zK+/OHptU5AaBwUfAIDJZk1MYf32Frm84EcOytfJE0t5JvkAnKlmjsXDnWzCJmQ=="\n    },\n    "html-encoding-sniffer": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",\n      "integrity": "sha512-71lZziiDnsuabfdYiUeWdCVyKuqwWi23L8YeIgV9jSSZHCtb6wB1BKWooH7L3tn4/FuZJMVWyNaIDr4RGmaSYw==",\n      "requires": {\n        "whatwg-encoding": "^1.0.1"\n      }\n    },\n    "html-entities": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz",\n      "integrity": "sha1-DfKTUfByEWNRXfueVUPl9u7VFi8="\n    },\n    "html-minifier": {\n      "version": "3.5.21",\n      "resolved": "https://registry.npmjs.org/html-minifier/-/html-minifier-3.5.21.tgz",\n      "integrity": "sha512-LKUKwuJDhxNa3uf/LPR/KVjm/l3rBqtYeCOAekvG8F1vItxMUpueGd94i/asDDr8/1u7InxzFA5EeGjhhG5mMA==",\n      "requires": {\n        "camel-case": "3.0.x",\n        "clean-css": "4.2.x",\n        "commander": "2.17.x",\n        "he": "1.2.x",\n        "param-case": "2.1.x",\n        "relateurl": "0.2.x",\n        "uglify-js": "3.4.x"\n      },\n      "dependencies": {\n        "commander": {\n          "version": "2.17.1",\n          "resolved": "https://registry.npmjs.org/commander/-/commander-2.17.1.tgz",\n          "integrity": "sha512-wPMUt6FnH2yzG95SA6mzjQOEKUU3aLaDEmzs1ti+1E9h+CsrZghRlqEM/EJ4KscsQVG8uNN4uVreUeT8+drlgg=="\n        }\n      }\n    },\n    "html-webpack-plugin": {\n      "version": "4.0.0-beta.5",\n      "resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-4.0.0-beta.5.tgz",\n      "integrity": "sha512-y5l4lGxOW3pz3xBTFdfB9rnnrWRPVxlAhX6nrBYIcW+2k2zC3mSp/3DxlWVCMBfnO6UAnoF8OcFn0IMy6kaKAQ==",\n      "requires": {\n        "html-minifier": "^3.5.20",\n        "loader-utils": "^1.1.0",\n        "lodash": "^4.17.11",\n        "pretty-error": "^2.1.1",\n        "tapable": "^1.1.0",\n        "util.promisify": "1.0.0"\n      }\n    },\n    "htmlparser2": {\n      "version": "3.10.1",\n      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",\n      "integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",\n      "requires": {\n        "domelementtype": "^1.3.1",\n        "domhandler": "^2.3.0",\n        "domutils": "^1.5.1",\n        "entities": "^1.1.1",\n        "inherits": "^2.0.1",\n        "readable-stream": "^3.1.1"\n      },\n      "dependencies": {\n        "readable-stream": {\n          "version": "3.3.0",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.3.0.tgz",\n          "integrity": "sha512-EsI+s3k3XsW+fU8fQACLN59ky34AZ14LoeVZpYwmZvldCFo0r0gnelwF2TcMjLor/BTL5aDJVBMkss0dthToPw==",\n          "requires": {\n            "inherits": "^2.0.3",\n            "string_decoder": "^1.1.1",\n            "util-deprecate": "^1.0.1"\n          }\n        }\n      }\n    },\n    "http-deceiver": {\n      "version": "1.2.7",\n      "resolved": "https://registry.npmjs.org/http-deceiver/-/http-deceiver-1.2.7.tgz",\n      "integrity": "sha1-+nFolEq5pRnTN8sL7HKE3D5yPYc="\n    },\n    "http-errors": {\n      "version": "1.6.3",\n      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",\n      "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",\n      "requires": {\n        "depd": "~1.1.2",\n        "inherits": "2.0.3",\n        "setprototypeof": "1.1.0",\n        "statuses": ">= 1.4.0 < 2"\n      }\n    },\n    "http-parser-js": {\n      "version": "0.5.0",\n      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.0.tgz",\n      "integrity": "sha512-cZdEF7r4gfRIq7ezX9J0T+kQmJNOub71dWbgAXVHDct80TKP4MCETtZQ31xyv38UwgzkWPYF/Xc0ge55dW9Z9w=="\n    },\n    "http-proxy": {\n      "version": "1.17.0",\n      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.17.0.tgz",\n      "integrity": "sha512-Taqn+3nNvYRfJ3bGvKfBSRwy1v6eePlm3oc/aWVxZp57DQr5Eq3xhKJi7Z4hZpS8PC3H4qI+Yly5EmFacGuA/g==",\n      "requires": {\n        "eventemitter3": "^3.0.0",\n        "follow-redirects": "^1.0.0",\n        "requires-port": "^1.0.0"\n      }\n    },\n    "http-proxy-middleware": {\n      "version": "0.19.1",\n      "resolved": "https://registry.npmjs.org/http-proxy-middleware/-/http-proxy-middleware-0.19.1.tgz",\n      "integrity": "sha512-yHYTgWMQO8VvwNS22eLLloAkvungsKdKTLO8AJlftYIKNfJr3GK3zK0ZCfzDDGUBttdGc8xFy1mCitvNKQtC3Q==",\n      "requires": {\n        "http-proxy": "^1.17.0",\n        "is-glob": "^4.0.0",\n        "lodash": "^4.17.11",\n        "micromatch": "^3.1.10"\n      }\n    },\n    "http-signature": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",\n      "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",\n      "requires": {\n        "assert-plus": "^1.0.0",\n        "jsprim": "^1.2.2",\n        "sshpk": "^1.7.0"\n      }\n    },\n    "https-browserify": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz",\n      "integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="\n    },\n    "hyphenate-style-name": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/hyphenate-style-name/-/hyphenate-style-name-1.0.3.tgz",\n      "integrity": "sha512-EcuixamT82oplpoJ2XU4pDtKGWQ7b00CD9f1ug9IaQ3p1bkHMiKCZ9ut9QDI6qsa6cpUuB+A/I+zLtdNK4n2DQ=="\n    },\n    "i": {\n      "version": "0.3.6",\n      "resolved": "https://registry.npmjs.org/i/-/i-0.3.6.tgz",\n      "integrity": "sha1-2WyScyB28HJxG2sQ/X1PZa2O4j0="\n    },\n    "iconv-lite": {\n      "version": "0.4.24",\n      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",\n      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",\n      "requires": {\n        "safer-buffer": ">= 2.1.2 < 3"\n      }\n    },\n    "icss-replace-symbols": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/icss-replace-symbols/-/icss-replace-symbols-1.1.0.tgz",\n      "integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="\n    },\n    "icss-utils": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/icss-utils/-/icss-utils-4.1.0.tgz",\n      "integrity": "sha512-3DEun4VOeMvSczifM3F2cKQrDQ5Pj6WKhkOq6HD4QTnDUAq8MQRxy5TX6Sy1iY6WPBe4gQ3p5vTECjbIkglkkQ==",\n      "requires": {\n        "postcss": "^7.0.14"\n      }\n    },\n    "identity-obj-proxy": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/identity-obj-proxy/-/identity-obj-proxy-3.0.0.tgz",\n      "integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",\n      "requires": {\n        "harmony-reflect": "^1.4.6"\n      }\n    },\n    "ieee754": {\n      "version": "1.1.13",\n      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",\n      "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg=="\n    },\n    "iferr": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/iferr/-/iferr-0.1.5.tgz",\n      "integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="\n    },\n    "ignore": {\n      "version": "4.0.6",\n      "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",\n      "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg=="\n    },\n    "image-size": {\n      "version": "0.5.5",\n      "resolved": "https://registry.npmjs.org/image-size/-/image-size-0.5.5.tgz",\n      "integrity": "sha1-Cd/Uq50g4p6xw+gLiZA3jfnjy5w=",\n      "optional": true\n    },\n    "immer": {\n      "version": "1.10.0",\n      "resolved": "https://registry.npmjs.org/immer/-/immer-1.10.0.tgz",\n      "integrity": "sha512-O3sR1/opvCDGLEVcvrGTMtLac8GJ5IwZC4puPrLuRj3l7ICKvkmA0vGuU9OW8mV9WIBRnaxp5GJh9IEAaNOoYg=="\n    },\n    "import-cwd": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/import-cwd/-/import-cwd-2.1.0.tgz",\n      "integrity": "sha1-qmzzbnInYShcs3HsZRn1PiQ1sKk=",\n      "requires": {\n        "import-from": "^2.1.0"\n      }\n    },\n    "import-fresh": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz",\n      "integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=",\n      "requires": {\n        "caller-path": "^2.0.0",\n        "resolve-from": "^3.0.0"\n      }\n    },\n    "import-from": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/import-from/-/import-from-2.1.0.tgz",\n      "integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",\n      "requires": {\n        "resolve-from": "^3.0.0"\n      }\n    },\n    "import-local": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/import-local/-/import-local-2.0.0.tgz",\n      "integrity": "sha512-b6s04m3O+s3CGSbqDIyP4R6aAwAeYlVq9+WUWep6iHa8ETRf9yei1U48C5MmfJmV9AiLYYBKPMq/W+/WRpQmCQ==",\n      "requires": {\n        "pkg-dir": "^3.0.0",\n        "resolve-cwd": "^2.0.0"\n      }\n    },\n    "import-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/import-regex/-/import-regex-1.1.0.tgz",\n      "integrity": "sha1-pVxS5McFx2XKIQ6SQqBrvMiqf2Y="\n    },\n    "imurmurhash": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",\n      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o="\n    },\n    "indefinite-observable": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/indefinite-observable/-/indefinite-observable-1.0.2.tgz",\n      "integrity": "sha512-Mps0898zEduHyPhb7UCgNmfzlqNZknVmaFz5qzr0mm04YQ5FGLhAyK/dJ+NaRxGyR6juQXIxh5Ev0xx+qq0nYA==",\n      "requires": {\n        "symbol-observable": "1.2.0"\n      }\n    },\n    "indexes-of": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz",\n      "integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc="\n    },\n    "indexof": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz",\n      "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10="\n    },\n    "indx": {\n      "version": "0.2.3",\n      "resolved": "https://registry.npmjs.org/indx/-/indx-0.2.3.tgz",\n      "integrity": "sha1-Fdz1bunPZcAjTFE8J/vVgOcPvFA="\n    },\n    "inflight": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",\n      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",\n      "requires": {\n        "once": "^1.3.0",\n        "wrappy": "1"\n      }\n    },\n    "inherits": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",\n      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="\n    },\n    "ini": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",\n      "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw=="\n    },\n    "inline-style-prefixer": {\n      "version": "3.0.8",\n      "resolved": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-3.0.8.tgz",\n      "integrity": "sha1-hVG45bTVcyROZqNLBPfTIHaitTQ=",\n      "dev": true,\n      "requires": {\n        "bowser": "^1.7.3",\n        "css-in-js-utils": "^2.0.0"\n      }\n    },\n    "inquirer": {\n      "version": "6.3.1",\n      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.3.1.tgz",\n      "integrity": "sha512-MmL624rfkFt4TG9y/Jvmt8vdmOo836U7Y0Hxr2aFk3RelZEGX4Igk0KabWrcaaZaTv9uzglOqWh1Vly+FAWAXA==",\n      "requires": {\n        "ansi-escapes": "^3.2.0",\n        "chalk": "^2.4.2",\n        "cli-cursor": "^2.1.0",\n        "cli-width": "^2.0.0",\n        "external-editor": "^3.0.3",\n        "figures": "^2.0.0",\n        "lodash": "^4.17.11",\n        "mute-stream": "0.0.7",\n        "run-async": "^2.2.0",\n        "rxjs": "^6.4.0",\n        "string-width": "^2.1.0",\n        "strip-ansi": "^5.1.0",\n        "through": "^2.3.6"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "^4.1.0"\n          }\n        }\n      }\n    },\n    "install": {\n      "version": "0.12.2",\n      "resolved": "https://registry.npmjs.org/install/-/install-0.12.2.tgz",\n      "integrity": "sha512-+7thTb4Rpvs9mnlhHKGZFJbGOO6kyMgy+gg0sgM5vFzIFK0wrCYXqdlaM71Bi289DTuPHf61puMFsaZBcwDIrg=="\n    },\n    "internal-ip": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/internal-ip/-/internal-ip-4.3.0.tgz",\n      "integrity": "sha512-S1zBo1D6zcsyuC6PMmY5+55YMILQ9av8lotMx447Bq6SAgo/sDK6y6uUKmuYhW7eacnIhFfsPmCNYdDzsnnDCg==",\n      "requires": {\n        "default-gateway": "^4.2.0",\n        "ipaddr.js": "^1.9.0"\n      }\n    },\n    "interpret": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.2.0.tgz",\n      "integrity": "sha512-mT34yGKMNceBQUoVn7iCDKDntA7SC6gycMAWzGx1z/CMCTV7b2AAtXlo3nRyHZ1FelRkQbQjprHSYGwzLtkVbw=="\n    },\n    "invariant": {\n      "version": "2.2.4",\n      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",\n      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",\n      "requires": {\n        "loose-envify": "^1.0.0"\n      }\n    },\n    "invert-kv": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-2.0.0.tgz",\n      "integrity": "sha512-wPVv/y/QQ/Uiirj/vh3oP+1Ww+AWehmi1g5fFWGPF6IpCBCDVrhgHRMvrLfdYcwDh3QJbGXDW4JAuzxElLSqKA=="\n    },\n    "ip": {\n      "version": "1.1.5",\n      "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",\n      "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo="\n    },\n    "ip-regex": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-2.1.0.tgz",\n      "integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="\n    },\n    "ipaddr.js": {\n      "version": "1.9.0",\n      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.0.tgz",\n      "integrity": "sha512-M4Sjn6N/+O6/IXSJseKqHoFc+5FdGJ22sXqnjTpdZweHK64MzEPAyQZyEU3R/KRv2GLoa7nNtg/C2Ev6m7z+eA=="\n    },\n    "is": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/is/-/is-3.3.0.tgz",\n      "integrity": "sha512-nW24QBoPcFGGHJGUwnfpI7Yc5CdqWNdsyHQszVE/z2pKHXzh7FZ5GWhJqSyaQ9wMkQnsTx+kAI8bHlCX4tKdbg=="\n    },\n    "is-absolute": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-absolute/-/is-absolute-1.0.0.tgz",\n      "integrity": "sha512-dOWoqflvcydARa360Gvv18DZ/gRuHKi2NU/wU5X1ZFzdYfH29nkiNZsF3mp4OJ3H4yo9Mx8A/uAGNzpzPN3yBA==",\n      "requires": {\n        "is-relative": "^1.0.0",\n        "is-windows": "^1.0.1"\n      }\n    },\n    "is-absolute-url": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-2.1.0.tgz",\n      "integrity": "sha1-UFMN+4T8yap9vnhS6Do3uTufKqY="\n    },\n    "is-accessor-descriptor": {\n      "version": "0.1.6",\n      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",\n      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",\n      "requires": {\n        "kind-of": "^3.0.2"\n      }\n    },\n    "is-arrayish": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",\n      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0="\n    },\n    "is-binary-path": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",\n      "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",\n      "requires": {\n        "binary-extensions": "^1.0.0"\n      }\n    },\n    "is-buffer": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.3.tgz",\n      "integrity": "sha512-U15Q7MXTuZlrbymiz95PJpZxu8IlipAp4dtS3wOdgPXx3mqBnslrWU14kxfHB+Py/+2PVKSr37dMAgM2A4uArw=="\n    },\n    "is-callable": {\n      "version": "1.1.4",\n      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.4.tgz",\n      "integrity": "sha512-r5p9sxJjYnArLjObpjA4xu5EKI3CuKHkJXMhT7kwbpUyIFD1n5PMAsoPvWnvtZiNz7LjkYDRZhd7FlI0eMijEA=="\n    },\n    "is-ci": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",\n      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",\n      "requires": {\n        "ci-info": "^2.0.0"\n      }\n    },\n    "is-color-stop": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-color-stop/-/is-color-stop-1.1.0.tgz",\n      "integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",\n      "requires": {\n        "css-color-names": "^0.0.4",\n        "hex-color-regex": "^1.1.0",\n        "hsl-regex": "^1.0.0",\n        "hsla-regex": "^1.0.0",\n        "rgb-regex": "^1.0.1",\n        "rgba-regex": "^1.0.0"\n      }\n    },\n    "is-data-descriptor": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",\n      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",\n      "requires": {\n        "kind-of": "^3.0.2"\n      }\n    },\n    "is-date-object": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.1.tgz",\n      "integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="\n    },\n    "is-descriptor": {\n      "version": "0.1.6",\n      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",\n      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",\n      "requires": {\n        "is-accessor-descriptor": "^0.1.6",\n        "is-data-descriptor": "^0.1.4",\n        "kind-of": "^5.0.0"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "5.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n        }\n      }\n    },\n    "is-directory": {\n      "version": "0.3.1",\n      "resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz",\n      "integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="\n    },\n    "is-dotfile": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.3.tgz",\n      "integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="\n    },\n    "is-equal-shallow": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz",\n      "integrity": "sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=",\n      "requires": {\n        "is-primitive": "^2.0.0"\n      }\n    },\n    "is-extendable": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",\n      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="\n    },\n    "is-extglob": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",\n      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="\n    },\n    "is-fullwidth-code-point": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",\n      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="\n    },\n    "is-generator-fn": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",\n      "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ=="\n    },\n    "is-glob": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",\n      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",\n      "requires": {\n        "is-extglob": "^2.1.1"\n      }\n    },\n    "is-in-browser": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/is-in-browser/-/is-in-browser-1.1.3.tgz",\n      "integrity": "sha1-Vv9NtoOgeMYILrldrX3GLh0E+DU="\n    },\n    "is-negated-glob": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-negated-glob/-/is-negated-glob-1.0.0.tgz",\n      "integrity": "sha1-aRC8pdqMleeEtXUbl2z1oQ/uNtI="\n    },\n    "is-number": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",\n      "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",\n      "requires": {\n        "kind-of": "^3.0.2"\n      }\n    },\n    "is-obj": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",\n      "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8="\n    },\n    "is-path-cwd": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",\n      "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0="\n    },\n    "is-path-in-cwd": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.1.tgz",\n      "integrity": "sha512-FjV1RTW48E7CWM7eE/J2NJvAEEVektecDBVBE5Hh3nM1Jd0kvhHtX68Pr3xsDf857xt3Y4AkwVULK1Vku62aaQ==",\n      "requires": {\n        "is-path-inside": "^1.0.0"\n      }\n    },\n    "is-path-inside": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",\n      "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",\n      "requires": {\n        "path-is-inside": "^1.0.1"\n      }\n    },\n    "is-plain-obj": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",\n      "integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4="\n    },\n    "is-plain-object": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",\n      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",\n      "requires": {\n        "isobject": "^3.0.1"\n      }\n    },\n    "is-posix-bracket": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz",\n      "integrity": "sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q="\n    },\n    "is-primitive": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz",\n      "integrity": "sha1-IHurkWOEmcB7Kt8kCkGochADRXU="\n    },\n    "is-promise": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",\n      "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="\n    },\n    "is-regex": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.4.tgz",\n      "integrity": "sha1-VRdIm1RwkbCTDglWVM7SXul+lJE=",\n      "requires": {\n        "has": "^1.0.1"\n      }\n    },\n    "is-regexp": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-1.0.0.tgz",\n      "integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="\n    },\n    "is-relative": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-relative/-/is-relative-1.0.0.tgz",\n      "integrity": "sha512-Kw/ReK0iqwKeu0MITLFuj0jbPAmEiOsIwyIXvvbfa6QfmN9pkD1M+8pdk7Rl/dTKbH34/XBFMbgD4iMJhLQbGA==",\n      "requires": {\n        "is-unc-path": "^1.0.0"\n      }\n    },\n    "is-resolvable": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",\n      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg=="\n    },\n    "is-root": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-root/-/is-root-2.0.0.tgz",\n      "integrity": "sha512-F/pJIk8QD6OX5DNhRB7hWamLsUilmkDGho48KbgZ6xg/lmAZXHxzXQ91jzB3yRSw5kdQGGGc4yz8HYhTYIMWPg=="\n    },\n    "is-stream": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",\n      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ="\n    },\n    "is-svg": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/is-svg/-/is-svg-3.0.0.tgz",\n      "integrity": "sha512-gi4iHK53LR2ujhLVVj+37Ykh9GLqYHX6JOVXbLAucaG/Cqw9xwdFOjDM2qeifLs1sF1npXXFvDu0r5HNgCMrzQ==",\n      "requires": {\n        "html-comment-regex": "^1.1.0"\n      }\n    },\n    "is-symbol": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.2.tgz",\n      "integrity": "sha512-HS8bZ9ox60yCJLH9snBpIwv9pYUAkcuLhSA1oero1UB5y9aiQpRA8y2ex945AOtCZL1lJDeIk3G5LthswI46Lw==",\n      "requires": {\n        "has-symbols": "^1.0.0"\n      }\n    },\n    "is-typedarray": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",\n      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="\n    },\n    "is-unc-path": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz",\n      "integrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==",\n      "requires": {\n        "unc-path-regex": "^0.1.2"\n      }\n    },\n    "is-utf8": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",\n      "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI="\n    },\n    "is-valid-glob": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-valid-glob/-/is-valid-glob-1.0.0.tgz",\n      "integrity": "sha1-Kb8+/3Ab4tTTFdusw5vDn+j2Aao="\n    },\n    "is-windows": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",\n      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA=="\n    },\n    "is-wsl": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",\n      "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0="\n    },\n    "isarray": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",\n      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="\n    },\n    "isemail": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/isemail/-/isemail-3.2.0.tgz",\n      "integrity": "sha512-zKqkK+O+dGqevc93KNsbZ/TqTUFd46MwWjYOoMrjIMZ51eU7DtQG3Wmd9SQQT7i7RVnuTPEiYEWHU3MSbxC1Tg==",\n      "requires": {\n        "punycode": "2.x.x"\n      }\n    },\n    "isexe": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",\n      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="\n    },\n    "isobject": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",\n      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8="\n    },\n    "isomorphic-fetch": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-2.2.1.tgz",\n      "integrity": "sha1-YRrhrPFPXoH3KVB0coGf6XM1WKk=",\n      "requires": {\n        "node-fetch": "^1.0.1",\n        "whatwg-fetch": ">=0.10.0"\n      }\n    },\n    "isstream": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",\n      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="\n    },\n    "istanbul-api": {\n      "version": "2.1.5",\n      "resolved": "https://registry.npmjs.org/istanbul-api/-/istanbul-api-2.1.5.tgz",\n      "integrity": "sha512-meYk1BwDp59Pfse1TvPrkKYgVqAufbdBLEVoqvu/hLLKSaQ054ZTksbNepyc223tMnWdm6AdK2URIJJRqdP87g==",\n      "requires": {\n        "async": "^2.6.1",\n        "compare-versions": "^3.2.1",\n        "fileset": "^2.0.3",\n        "istanbul-lib-coverage": "^2.0.4",\n        "istanbul-lib-hook": "^2.0.6",\n        "istanbul-lib-instrument": "^3.2.0",\n        "istanbul-lib-report": "^2.0.7",\n        "istanbul-lib-source-maps": "^3.0.5",\n        "istanbul-reports": "^2.2.3",\n        "js-yaml": "^3.13.0",\n        "make-dir": "^2.1.0",\n        "minimatch": "^3.0.4",\n        "once": "^1.4.0"\n      }\n    },\n    "istanbul-lib-coverage": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz",\n      "integrity": "sha512-LXTBICkMARVgo579kWDm8SqfB6nvSDKNqIOBEjmJRnL04JvoMHCYGWaMddQnseJYtkEuEvO/sIcOxPLk9gERug=="\n    },\n    "istanbul-lib-hook": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-2.0.6.tgz",\n      "integrity": "sha512-829DKONApZ7UCiPXcOYWSgkFXa4+vNYoNOt3F+4uDJLKL1OotAoVwvThoEj1i8jmOj7odbYcR3rnaHu+QroaXg==",\n      "requires": {\n        "append-transform": "^1.0.0"\n      }\n    },\n    "istanbul-lib-instrument": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.2.0.tgz",\n      "integrity": "sha512-06IM3xShbNW4NgZv5AP4QH0oHqf1/ivFo8eFys0ZjPXHGldHJQWb3riYOKXqmOqfxXBfxu4B+g/iuhOPZH0RJg==",\n      "requires": {\n        "@babel/generator": "^7.0.0",\n        "@babel/parser": "^7.0.0",\n        "@babel/template": "^7.0.0",\n        "@babel/traverse": "^7.0.0",\n        "@babel/types": "^7.0.0",\n        "istanbul-lib-coverage": "^2.0.4",\n        "semver": "^6.0.0"\n      }\n    },\n    "istanbul-lib-report": {\n      "version": "2.0.7",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.7.tgz",\n      "integrity": "sha512-wLH6beJBFbRBLiTlMOBxmb85cnVM1Vyl36N48e4e/aTKSM3WbOx7zbVIH1SQ537fhhsPbX0/C5JB4qsmyRXXyA==",\n      "requires": {\n        "istanbul-lib-coverage": "^2.0.4",\n        "make-dir": "^2.1.0",\n        "supports-color": "^6.0.0"\n      },\n      "dependencies": {\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "^3.0.0"\n          }\n        }\n      }\n    },\n    "istanbul-lib-source-maps": {\n      "version": "3.0.5",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.5.tgz",\n      "integrity": "sha512-eDhZ7r6r1d1zQPVZehLc3D0K14vRba/eBYkz3rw16DLOrrTzve9RmnkcwrrkWVgO1FL3EK5knujVe5S8QHE9xw==",\n      "requires": {\n        "debug": "^4.1.1",\n        "istanbul-lib-coverage": "^2.0.4",\n        "make-dir": "^2.1.0",\n        "rimraf": "^2.6.2",\n        "source-map": "^0.6.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "istanbul-reports": {\n      "version": "2.2.3",\n      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.3.tgz",\n      "integrity": "sha512-T6EbPuc8Cb620LWAYyZ4D8SSn06dY9i1+IgUX2lTH8gbwflMc9Obd33zHTyNX653ybjpamAHS9toKS3E6cGhTw==",\n      "requires": {\n        "handlebars": "^4.1.0"\n      }\n    },\n    "istextorbinary": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/istextorbinary/-/istextorbinary-2.2.1.tgz",\n      "integrity": "sha512-TS+hoFl8Z5FAFMK38nhBkdLt44CclNRgDHWeMgsV8ko3nDlr/9UI2Sf839sW7enijf8oKsZYXRvM8g0it9Zmcw==",\n      "requires": {\n        "binaryextensions": "2",\n        "editions": "^1.3.3",\n        "textextensions": "2"\n      }\n    },\n    "jest": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest/-/jest-24.7.1.tgz",\n      "integrity": "sha512-AbvRar5r++izmqo5gdbAjTeA6uNRGoNRuj5vHB0OnDXo2DXWZJVuaObiGgtlvhKb+cWy2oYbQSfxv7Q7GjnAtA==",\n      "requires": {\n        "import-local": "^2.0.0",\n        "jest-cli": "^24.7.1"\n      },\n      "dependencies": {\n        "jest-cli": {\n          "version": "24.7.1",\n          "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-24.7.1.tgz",\n          "integrity": "sha512-32OBoSCVPzcTslGFl6yVCMzB2SqX3IrWwZCY5mZYkb0D2WsogmU3eV2o8z7+gRQa4o4sZPX/k7GU+II7CxM6WQ==",\n          "requires": {\n            "@jest/core": "^24.7.1",\n            "@jest/test-result": "^24.7.1",\n            "@jest/types": "^24.7.0",\n            "chalk": "^2.0.1",\n            "exit": "^0.1.2",\n            "import-local": "^2.0.0",\n            "is-ci": "^2.0.0",\n            "jest-config": "^24.7.1",\n            "jest-util": "^24.7.1",\n            "jest-validate": "^24.7.0",\n            "prompts": "^2.0.1",\n            "realpath-native": "^1.1.0",\n            "yargs": "^12.0.2"\n          }\n        }\n      }\n    },\n    "jest-changed-files": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-24.7.0.tgz",\n      "integrity": "sha512-33BgewurnwSfJrW7T5/ZAXGE44o7swLslwh8aUckzq2e17/2Os1V0QU506ZNik3hjs8MgnEMKNkcud442NCDTw==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "execa": "^1.0.0",\n        "throat": "^4.0.0"\n      }\n    },\n    "jest-config": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-24.7.1.tgz",\n      "integrity": "sha512-8FlJNLI+X+MU37j7j8RE4DnJkvAghXmBWdArVzypW6WxfGuxiL/CCkzBg0gHtXhD2rxla3IMOSUAHylSKYJ83g==",\n      "requires": {\n        "@babel/core": "^7.1.0",\n        "@jest/test-sequencer": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "babel-jest": "^24.7.1",\n        "chalk": "^2.0.1",\n        "glob": "^7.1.1",\n        "jest-environment-jsdom": "^24.7.1",\n        "jest-environment-node": "^24.7.1",\n        "jest-get-type": "^24.3.0",\n        "jest-jasmine2": "^24.7.1",\n        "jest-regex-util": "^24.3.0",\n        "jest-resolve": "^24.7.1",\n        "jest-util": "^24.7.1",\n        "jest-validate": "^24.7.0",\n        "micromatch": "^3.1.10",\n        "pretty-format": "^24.7.0",\n        "realpath-native": "^1.1.0"\n      }\n    },\n    "jest-diff": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-24.7.0.tgz",\n      "integrity": "sha512-ULQZ5B1lWpH70O4xsANC4tf4Ko6RrpwhE3PtG6ERjMg1TiYTC2Wp4IntJVGro6a8HG9luYHhhmF4grF0Pltckg==",\n      "requires": {\n        "chalk": "^2.0.1",\n        "diff-sequences": "^24.3.0",\n        "jest-get-type": "^24.3.0",\n        "pretty-format": "^24.7.0"\n      }\n    },\n    "jest-docblock": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-24.3.0.tgz",\n      "integrity": "sha512-nlANmF9Yq1dufhFlKG9rasfQlrY7wINJbo3q01tu56Jv5eBU5jirylhF2O5ZBnLxzOVBGRDz/9NAwNyBtG4Nyg==",\n      "requires": {\n        "detect-newline": "^2.1.0"\n      }\n    },\n    "jest-each": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-24.7.1.tgz",\n      "integrity": "sha512-4fsS8fEfLa3lfnI1Jw6NxjhyRTgfpuOVTeUZZFyVYqeTa4hPhr2YkToUhouuLTrL2eMGOfpbdMyRx0GQ/VooKA==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "chalk": "^2.0.1",\n        "jest-get-type": "^24.3.0",\n        "jest-util": "^24.7.1",\n        "pretty-format": "^24.7.0"\n      }\n    },\n    "jest-environment-jsdom": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-24.7.1.tgz",\n      "integrity": "sha512-Gnhb+RqE2JuQGb3kJsLF8vfqjt3PHKSstq4Xc8ic+ax7QKo4Z0RWGucU3YV+DwKR3T9SYc+3YCUQEJs8r7+Jxg==",\n      "requires": {\n        "@jest/environment": "^24.7.1",\n        "@jest/fake-timers": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "jest-mock": "^24.7.0",\n        "jest-util": "^24.7.1",\n        "jsdom": "^11.5.1"\n      }\n    },\n    "jest-environment-jsdom-fourteen": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/jest-environment-jsdom-fourteen/-/jest-environment-jsdom-fourteen-0.1.0.tgz",\n      "integrity": "sha512-4vtoRMg7jAstitRzL4nbw83VmGH8Rs13wrND3Ud2o1fczDhMUF32iIrNKwYGgeOPUdfvZU4oy8Bbv+ni1fgVCA==",\n      "requires": {\n        "jest-mock": "^24.5.0",\n        "jest-util": "^24.5.0",\n        "jsdom": "^14.0.0"\n      },\n      "dependencies": {\n        "jsdom": {\n          "version": "14.1.0",\n          "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-14.1.0.tgz",\n          "integrity": "sha512-O901mfJSuTdwU2w3Sn+74T+RnDVP+FuV5fH8tcPWyqrseRAb0s5xOtPgCFiPOtLcyK7CLIJwPyD83ZqQWvA5ng==",\n          "requires": {\n            "abab": "^2.0.0",\n            "acorn": "^6.0.4",\n            "acorn-globals": "^4.3.0",\n            "array-equal": "^1.0.0",\n            "cssom": "^0.3.4",\n            "cssstyle": "^1.1.1",\n            "data-urls": "^1.1.0",\n            "domexception": "^1.0.1",\n            "escodegen": "^1.11.0",\n            "html-encoding-sniffer": "^1.0.2",\n            "nwsapi": "^2.1.3",\n            "parse5": "5.1.0",\n            "pn": "^1.1.0",\n            "request": "^2.88.0",\n            "request-promise-native": "^1.0.5",\n            "saxes": "^3.1.9",\n            "symbol-tree": "^3.2.2",\n            "tough-cookie": "^2.5.0",\n            "w3c-hr-time": "^1.0.1",\n            "w3c-xmlserializer": "^1.1.2",\n            "webidl-conversions": "^4.0.2",\n            "whatwg-encoding": "^1.0.5",\n            "whatwg-mimetype": "^2.3.0",\n            "whatwg-url": "^7.0.0",\n            "ws": "^6.1.2",\n            "xml-name-validator": "^3.0.0"\n          }\n        },\n        "whatwg-url": {\n          "version": "7.0.0",\n          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.0.0.tgz",\n          "integrity": "sha512-37GeVSIJ3kn1JgKyjiYNmSLP1yzbpb29jdmwBSgkD9h40/hyrR/OifpVUndji3tmwGgD8qpw7iQu3RSbCrBpsQ==",\n          "requires": {\n            "lodash.sortby": "^4.7.0",\n            "tr46": "^1.0.1",\n            "webidl-conversions": "^4.0.2"\n          }\n        },\n        "ws": {\n          "version": "6.2.1",\n          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",\n          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",\n          "requires": {\n            "async-limiter": "~1.0.0"\n          }\n        }\n      }\n    },\n    "jest-environment-node": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-24.7.1.tgz",\n      "integrity": "sha512-GJJQt1p9/C6aj6yNZMvovZuxTUd+BEJprETdvTKSb4kHcw4mFj8777USQV0FJoJ4V3djpOwA5eWyPwfq//PFBA==",\n      "requires": {\n        "@jest/environment": "^24.7.1",\n        "@jest/fake-timers": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "jest-mock": "^24.7.0",\n        "jest-util": "^24.7.1"\n      }\n    },\n    "jest-get-type": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-24.3.0.tgz",\n      "integrity": "sha512-HYF6pry72YUlVcvUx3sEpMRwXEWGEPlJ0bSPVnB3b3n++j4phUEoSPcS6GC0pPJ9rpyPSe4cb5muFo6D39cXow=="\n    },\n    "jest-haste-map": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-24.7.1.tgz",\n      "integrity": "sha512-g0tWkzjpHD2qa03mTKhlydbmmYiA2KdcJe762SbfFo/7NIMgBWAA0XqQlApPwkWOF7Cxoi/gUqL0i6DIoLpMBw==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "anymatch": "^2.0.0",\n        "fb-watchman": "^2.0.0",\n        "fsevents": "^1.2.7",\n        "graceful-fs": "^4.1.15",\n        "invariant": "^2.2.4",\n        "jest-serializer": "^24.4.0",\n        "jest-util": "^24.7.1",\n        "jest-worker": "^24.6.0",\n        "micromatch": "^3.1.10",\n        "sane": "^4.0.3",\n        "walker": "^1.0.7"\n      },\n      "dependencies": {\n        "fsevents": {\n          "version": "1.2.8",\n          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.8.tgz",\n          "integrity": "sha512-tPvHgPGB7m40CZ68xqFGkKuzN+RnpGmSV+hgeKxhRpbxdqKXUFJGC3yonBOLzQBcJyGpdZFDfCsdOC2KFsXzeA==",\n          "optional": true,\n          "requires": {\n            "nan": "^2.12.1",\n            "node-pre-gyp": "^0.12.0"\n          },\n          "dependencies": {\n            "abbrev": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "ansi-regex": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true,\n              "optional": true\n            },\n            "are-we-there-yet": {\n              "version": "1.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "delegates": "^1.0.0",\n                "readable-stream": "^2.0.6"\n              }\n            },\n            "balanced-match": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "brace-expansion": {\n              "version": "1.1.11",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "balanced-match": "^1.0.0",\n                "concat-map": "0.0.1"\n              }\n            },\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "code-point-at": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "concat-map": {\n              "version": "0.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "console-control-strings": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "core-util-is": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "debug": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ms": "^2.1.1"\n              }\n            },\n            "deep-extend": {\n              "version": "0.6.0",\n              "bundled": true,\n              "optional": true\n            },\n            "delegates": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "detect-libc": {\n              "version": "1.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "fs-minipass": {\n              "version": "1.2.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "^2.2.1"\n              }\n            },\n            "fs.realpath": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "gauge": {\n              "version": "2.7.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "aproba": "^1.0.3",\n                "console-control-strings": "^1.0.0",\n                "has-unicode": "^2.0.0",\n                "object-assign": "^4.1.0",\n                "signal-exit": "^3.0.0",\n                "string-width": "^1.0.1",\n                "strip-ansi": "^3.0.1",\n                "wide-align": "^1.1.0"\n              }\n            },\n            "glob": {\n              "version": "7.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "fs.realpath": "^1.0.0",\n                "inflight": "^1.0.4",\n                "inherits": "2",\n                "minimatch": "^3.0.4",\n                "once": "^1.3.0",\n                "path-is-absolute": "^1.0.0"\n              }\n            },\n            "has-unicode": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "iconv-lite": {\n              "version": "0.4.24",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safer-buffer": ">= 2.1.2 < 3"\n              }\n            },\n            "ignore-walk": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimatch": "^3.0.4"\n              }\n            },\n            "inflight": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "once": "^1.3.0",\n                "wrappy": "1"\n              }\n            },\n            "inherits": {\n              "version": "2.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "ini": {\n              "version": "1.3.5",\n              "bundled": true,\n              "optional": true\n            },\n            "is-fullwidth-code-point": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "number-is-nan": "^1.0.0"\n              }\n            },\n            "isarray": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "minimatch": {\n              "version": "3.0.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "brace-expansion": "^1.1.7"\n              }\n            },\n            "minimist": {\n              "version": "0.0.8",\n              "bundled": true,\n              "optional": true\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "^5.1.2",\n                "yallist": "^3.0.0"\n              }\n            },\n            "minizlib": {\n              "version": "1.2.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "^2.2.1"\n              }\n            },\n            "mkdirp": {\n              "version": "0.5.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimist": "0.0.8"\n              }\n            },\n            "ms": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "needle": {\n              "version": "2.3.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "debug": "^4.1.0",\n                "iconv-lite": "^0.4.4",\n                "sax": "^1.2.4"\n              }\n            },\n            "node-pre-gyp": {\n              "version": "0.12.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "detect-libc": "^1.0.2",\n                "mkdirp": "^0.5.1",\n                "needle": "^2.2.1",\n                "nopt": "^4.0.1",\n                "npm-packlist": "^1.1.6",\n                "npmlog": "^4.0.2",\n                "rc": "^1.2.7",\n                "rimraf": "^2.6.1",\n                "semver": "^5.3.0",\n                "tar": "^4"\n              }\n            },\n            "nopt": {\n              "version": "4.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "abbrev": "1",\n                "osenv": "^0.1.4"\n              }\n            },\n            "npm-bundled": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true\n            },\n            "npm-packlist": {\n              "version": "1.4.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ignore-walk": "^3.0.1",\n                "npm-bundled": "^1.0.1"\n              }\n            },\n            "npmlog": {\n              "version": "4.1.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "are-we-there-yet": "~1.1.2",\n                "console-control-strings": "~1.1.0",\n                "gauge": "~2.7.3",\n                "set-blocking": "~2.0.0"\n              }\n            },\n            "number-is-nan": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "object-assign": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "once": {\n              "version": "1.4.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "wrappy": "1"\n              }\n            },\n            "os-homedir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "os-tmpdir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "osenv": {\n              "version": "0.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "os-homedir": "^1.0.0",\n                "os-tmpdir": "^1.0.0"\n              }\n            },\n            "path-is-absolute": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "process-nextick-args": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "rc": {\n              "version": "1.2.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "deep-extend": "^0.6.0",\n                "ini": "~1.3.0",\n                "minimist": "^1.2.0",\n                "strip-json-comments": "~2.0.1"\n              },\n              "dependencies": {\n                "minimist": {\n                  "version": "1.2.0",\n                  "bundled": true,\n                  "optional": true\n                }\n              }\n            },\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "rimraf": {\n              "version": "2.6.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "glob": "^7.1.3"\n              }\n            },\n            "safe-buffer": {\n              "version": "5.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "safer-buffer": {\n              "version": "2.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "sax": {\n              "version": "1.2.4",\n              "bundled": true,\n              "optional": true\n            },\n            "semver": {\n              "version": "5.7.0",\n              "bundled": true,\n              "optional": true\n            },\n            "set-blocking": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "signal-exit": {\n              "version": "3.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "code-point-at": "^1.0.0",\n                "is-fullwidth-code-point": "^1.0.0",\n                "strip-ansi": "^3.0.0"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            },\n            "strip-ansi": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ansi-regex": "^2.0.0"\n              }\n            },\n            "strip-json-comments": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "tar": {\n              "version": "4.4.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "chownr": "^1.1.1",\n                "fs-minipass": "^1.2.5",\n                "minipass": "^2.3.4",\n                "minizlib": "^1.1.1",\n                "mkdirp": "^0.5.0",\n                "safe-buffer": "^5.1.2",\n                "yallist": "^3.0.2"\n              }\n            },\n            "util-deprecate": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "wide-align": {\n              "version": "1.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "string-width": "^1.0.2 || 2"\n              }\n            },\n            "wrappy": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true,\n              "optional": true\n            }\n          }\n        }\n      }\n    },\n    "jest-jasmine2": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-jasmine2/-/jest-jasmine2-24.7.1.tgz",\n      "integrity": "sha512-Y/9AOJDV1XS44wNwCaThq4Pw3gBPiOv/s6NcbOAkVRRUEPu+36L2xoPsqQXsDrxoBerqeyslpn2TpCI8Zr6J2w==",\n      "requires": {\n        "@babel/traverse": "^7.1.0",\n        "@jest/environment": "^24.7.1",\n        "@jest/test-result": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "chalk": "^2.0.1",\n        "co": "^4.6.0",\n        "expect": "^24.7.1",\n        "is-generator-fn": "^2.0.0",\n        "jest-each": "^24.7.1",\n        "jest-matcher-utils": "^24.7.0",\n        "jest-message-util": "^24.7.1",\n        "jest-runtime": "^24.7.1",\n        "jest-snapshot": "^24.7.1",\n        "jest-util": "^24.7.1",\n        "pretty-format": "^24.7.0",\n        "throat": "^4.0.0"\n      }\n    },\n    "jest-leak-detector": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-24.7.0.tgz",\n      "integrity": "sha512-zV0qHKZGXtmPVVzT99CVEcHE9XDf+8LwiE0Ob7jjezERiGVljmqKFWpV2IkG+rkFIEUHFEkMiICu7wnoPM/RoQ==",\n      "requires": {\n        "pretty-format": "^24.7.0"\n      }\n    },\n    "jest-matcher-utils": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-24.7.0.tgz",\n      "integrity": "sha512-158ieSgk3LNXeUhbVJYRXyTPSCqNgVXOp/GT7O94mYd3pk/8+odKTyR1JLtNOQSPzNi8NFYVONtvSWA/e1RDXg==",\n      "requires": {\n        "chalk": "^2.0.1",\n        "jest-diff": "^24.7.0",\n        "jest-get-type": "^24.3.0",\n        "pretty-format": "^24.7.0"\n      }\n    },\n    "jest-message-util": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-24.7.1.tgz",\n      "integrity": "sha512-dk0gqVtyqezCHbcbk60CdIf+8UHgD+lmRHifeH3JRcnAqh4nEyPytSc9/L1+cQyxC+ceaeP696N4ATe7L+omcg==",\n      "requires": {\n        "@babel/code-frame": "^7.0.0",\n        "@jest/test-result": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "@types/stack-utils": "^1.0.1",\n        "chalk": "^2.0.1",\n        "micromatch": "^3.1.10",\n        "slash": "^2.0.0",\n        "stack-utils": "^1.0.1"\n      }\n    },\n    "jest-mock": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-24.7.0.tgz",\n      "integrity": "sha512-6taW4B4WUcEiT2V9BbOmwyGuwuAFT2G8yghF7nyNW1/2gq5+6aTqSPcS9lS6ArvEkX55vbPAS/Jarx5LSm4Fng==",\n      "requires": {\n        "@jest/types": "^24.7.0"\n      }\n    },\n    "jest-pnp-resolver": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.1.tgz",\n      "integrity": "sha512-pgFw2tm54fzgYvc/OHrnysABEObZCUNFnhjoRjaVOCN8NYc032/gVjPaHD4Aq6ApkSieWtfKAFQtmDKAmhupnQ=="\n    },\n    "jest-regex-util": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-24.3.0.tgz",\n      "integrity": "sha512-tXQR1NEOyGlfylyEjg1ImtScwMq8Oh3iJbGTjN7p0J23EuVX1MA8rwU69K4sLbCmwzgCUbVkm0FkSF9TdzOhtg=="\n    },\n    "jest-resolve": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-24.7.1.tgz",\n      "integrity": "sha512-Bgrc+/UUZpGJ4323sQyj85hV9d+ANyPNu6XfRDUcyFNX1QrZpSoM0kE4Mb2vZMAYTJZsBFzYe8X1UaOkOELSbw==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "browser-resolve": "^1.11.3",\n        "chalk": "^2.0.1",\n        "jest-pnp-resolver": "^1.2.1",\n        "realpath-native": "^1.1.0"\n      }\n    },\n    "jest-resolve-dependencies": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-24.7.1.tgz",\n      "integrity": "sha512-2Eyh5LJB2liNzfk4eo7bD1ZyBbqEJIyyrFtZG555cSWW9xVHxII2NuOkSl1yUYTAYCAmM2f2aIT5A7HzNmubyg==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "jest-regex-util": "^24.3.0",\n        "jest-snapshot": "^24.7.1"\n      }\n    },\n    "jest-runner": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-24.7.1.tgz",\n      "integrity": "sha512-aNFc9liWU/xt+G9pobdKZ4qTeG/wnJrJna3VqunziDNsWT3EBpmxXZRBMKCsNMyfy+A/XHiV+tsMLufdsNdgCw==",\n      "requires": {\n        "@jest/console": "^24.7.1",\n        "@jest/environment": "^24.7.1",\n        "@jest/test-result": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "chalk": "^2.4.2",\n        "exit": "^0.1.2",\n        "graceful-fs": "^4.1.15",\n        "jest-config": "^24.7.1",\n        "jest-docblock": "^24.3.0",\n        "jest-haste-map": "^24.7.1",\n        "jest-jasmine2": "^24.7.1",\n        "jest-leak-detector": "^24.7.0",\n        "jest-message-util": "^24.7.1",\n        "jest-resolve": "^24.7.1",\n        "jest-runtime": "^24.7.1",\n        "jest-util": "^24.7.1",\n        "jest-worker": "^24.6.0",\n        "source-map-support": "^0.5.6",\n        "throat": "^4.0.0"\n      }\n    },\n    "jest-runtime": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-24.7.1.tgz",\n      "integrity": "sha512-0VAbyBy7tll3R+82IPJpf6QZkokzXPIS71aDeqh+WzPRXRCNz6StQ45otFariPdJ4FmXpDiArdhZrzNAC3sj6A==",\n      "requires": {\n        "@jest/console": "^24.7.1",\n        "@jest/environment": "^24.7.1",\n        "@jest/source-map": "^24.3.0",\n        "@jest/transform": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "@types/yargs": "^12.0.2",\n        "chalk": "^2.0.1",\n        "exit": "^0.1.2",\n        "glob": "^7.1.3",\n        "graceful-fs": "^4.1.15",\n        "jest-config": "^24.7.1",\n        "jest-haste-map": "^24.7.1",\n        "jest-message-util": "^24.7.1",\n        "jest-mock": "^24.7.0",\n        "jest-regex-util": "^24.3.0",\n        "jest-resolve": "^24.7.1",\n        "jest-snapshot": "^24.7.1",\n        "jest-util": "^24.7.1",\n        "jest-validate": "^24.7.0",\n        "realpath-native": "^1.1.0",\n        "slash": "^2.0.0",\n        "strip-bom": "^3.0.0",\n        "yargs": "^12.0.2"\n      }\n    },\n    "jest-serializer": {\n      "version": "24.4.0",\n      "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-24.4.0.tgz",\n      "integrity": "sha512-k//0DtglVstc1fv+GY/VHDIjrtNjdYvYjMlbLUed4kxrE92sIUewOi5Hj3vrpB8CXfkJntRPDRjCrCvUhBdL8Q=="\n    },\n    "jest-snapshot": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-24.7.1.tgz",\n      "integrity": "sha512-8Xk5O4p+JsZZn4RCNUS3pxA+ORKpEKepE+a5ejIKrId9CwrVN0NY+vkqEkXqlstA5NMBkNahXkR/4qEBy0t5yA==",\n      "requires": {\n        "@babel/types": "^7.0.0",\n        "@jest/types": "^24.7.0",\n        "chalk": "^2.0.1",\n        "expect": "^24.7.1",\n        "jest-diff": "^24.7.0",\n        "jest-matcher-utils": "^24.7.0",\n        "jest-message-util": "^24.7.1",\n        "jest-resolve": "^24.7.1",\n        "mkdirp": "^0.5.1",\n        "natural-compare": "^1.4.0",\n        "pretty-format": "^24.7.0",\n        "semver": "^5.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "jest-util": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-24.7.1.tgz",\n      "integrity": "sha512-/KilOue2n2rZ5AnEBYoxOXkeTu6vi7cjgQ8MXEkih0oeAXT6JkS3fr7/j8+engCjciOU1Nq5loMSKe0A1oeX0A==",\n      "requires": {\n        "@jest/console": "^24.7.1",\n        "@jest/fake-timers": "^24.7.1",\n        "@jest/source-map": "^24.3.0",\n        "@jest/test-result": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "callsites": "^3.0.0",\n        "chalk": "^2.0.1",\n        "graceful-fs": "^4.1.15",\n        "is-ci": "^2.0.0",\n        "mkdirp": "^0.5.1",\n        "slash": "^2.0.0",\n        "source-map": "^0.6.0"\n      },\n      "dependencies": {\n        "callsites": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",\n          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "jest-validate": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-24.7.0.tgz",\n      "integrity": "sha512-cgai/gts9B2chz1rqVdmLhzYxQbgQurh1PEQSvSgPZ8KGa1AqXsqC45W5wKEwzxKrWqypuQrQxnF4+G9VejJJA==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "camelcase": "^5.0.0",\n        "chalk": "^2.0.1",\n        "jest-get-type": "^24.3.0",\n        "leven": "^2.1.0",\n        "pretty-format": "^24.7.0"\n      }\n    },\n    "jest-watch-typeahead": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/jest-watch-typeahead/-/jest-watch-typeahead-0.3.0.tgz",\n      "integrity": "sha512-+uOtlppt9ysST6k6ZTqsPI0WNz2HLa8bowiZylZoQCQaAVn7XsVmHhZREkz73FhKelrFrpne4hQQjdq42nFEmA==",\n      "requires": {\n        "ansi-escapes": "^3.0.0",\n        "chalk": "^2.4.1",\n        "jest-watcher": "^24.3.0",\n        "slash": "^2.0.0",\n        "string-length": "^2.0.0",\n        "strip-ansi": "^5.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "^4.1.0"\n          }\n        }\n      }\n    },\n    "jest-watcher": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-24.7.1.tgz",\n      "integrity": "sha512-Wd6TepHLRHVKLNPacEsBwlp9raeBIO+01xrN24Dek4ggTS8HHnOzYSFnvp+6MtkkJ3KfMzy220KTi95e2rRkrw==",\n      "requires": {\n        "@jest/test-result": "^24.7.1",\n        "@jest/types": "^24.7.0",\n        "@types/yargs": "^12.0.9",\n        "ansi-escapes": "^3.0.0",\n        "chalk": "^2.0.1",\n        "jest-util": "^24.7.1",\n        "string-length": "^2.0.0"\n      }\n    },\n    "jest-worker": {\n      "version": "24.6.0",\n      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-24.6.0.tgz",\n      "integrity": "sha512-jDwgW5W9qGNvpI1tNnvajh0a5IE/PuGLFmHk6aR/BZFz8tSgGw17GsDPXAJ6p91IvYDjOw8GpFbvvZGAK+DPQQ==",\n      "requires": {\n        "merge-stream": "^1.0.1",\n        "supports-color": "^6.1.0"\n      },\n      "dependencies": {\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "^3.0.0"\n          }\n        }\n      }\n    },\n    "joi": {\n      "version": "14.3.1",\n      "resolved": "https://registry.npmjs.org/joi/-/joi-14.3.1.tgz",\n      "integrity": "sha512-LQDdM+pkOrpAn4Lp+neNIFV3axv1Vna3j38bisbQhETPMANYRbFJFUyOZcOClYvM/hppMhGWuKSFEK9vjrB+bQ==",\n      "requires": {\n        "hoek": "6.x.x",\n        "isemail": "3.x.x",\n        "topo": "3.x.x"\n      }\n    },\n    "jquery": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/jquery/-/jquery-3.4.0.tgz",\n      "integrity": "sha512-ggRCXln9zEqv6OqAGXFEcshF5dSBvCkzj6Gm2gzuR5fWawaX8t7cxKVkkygKODrDAzKdoYw3l/e3pm3vlT4IbQ=="\n    },\n    "js-beautify": {\n      "version": "1.9.1",\n      "resolved": "https://registry.npmjs.org/js-beautify/-/js-beautify-1.9.1.tgz",\n      "integrity": "sha512-oxxvVZdOdUfzk8IOLBF2XUZvl2GoBEfA+b0of4u2EBY/46NlXasi8JdFvazA5lCrf9/lQhTjyVy2QCUW7iq0MQ==",\n      "requires": {\n        "config-chain": "^1.1.12",\n        "editorconfig": "^0.15.2",\n        "glob": "^7.1.3",\n        "mkdirp": "~0.5.0",\n        "nopt": "~4.0.1"\n      }\n    },\n    "js-levenshtein": {\n      "version": "1.1.6",\n      "resolved": "https://registry.npmjs.org/js-levenshtein/-/js-levenshtein-1.1.6.tgz",\n      "integrity": "sha512-X2BB11YZtrRqY4EnQcLX5Rh373zbK4alC1FW7D7MBhL2gtcC17cTnr6DmfHZeS0s2rTHjUTMMHfG7gO8SSdw+g=="\n    },\n    "js-tokens": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",\n      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="\n    },\n    "js-yaml": {\n      "version": "3.13.1",\n      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",\n      "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",\n      "requires": {\n        "argparse": "^1.0.7",\n        "esprima": "^4.0.0"\n      }\n    },\n    "jsbn": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",\n      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="\n    },\n    "jsdom": {\n      "version": "11.12.0",\n      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-11.12.0.tgz",\n      "integrity": "sha512-y8Px43oyiBM13Zc1z780FrfNLJCXTL40EWlty/LXUtcjykRBNgLlCjWXpfSPBl2iv+N7koQN+dvqszHZgT/Fjw==",\n      "requires": {\n        "abab": "^2.0.0",\n        "acorn": "^5.5.3",\n        "acorn-globals": "^4.1.0",\n        "array-equal": "^1.0.0",\n        "cssom": ">= 0.3.2 < 0.4.0",\n        "cssstyle": "^1.0.0",\n        "data-urls": "^1.0.0",\n        "domexception": "^1.0.1",\n        "escodegen": "^1.9.1",\n        "html-encoding-sniffer": "^1.0.2",\n        "left-pad": "^1.3.0",\n        "nwsapi": "^2.0.7",\n        "parse5": "4.0.0",\n        "pn": "^1.1.0",\n        "request": "^2.87.0",\n        "request-promise-native": "^1.0.5",\n        "sax": "^1.2.4",\n        "symbol-tree": "^3.2.2",\n        "tough-cookie": "^2.3.4",\n        "w3c-hr-time": "^1.0.1",\n        "webidl-conversions": "^4.0.2",\n        "whatwg-encoding": "^1.0.3",\n        "whatwg-mimetype": "^2.1.0",\n        "whatwg-url": "^6.4.1",\n        "ws": "^5.2.0",\n        "xml-name-validator": "^3.0.0"\n      },\n      "dependencies": {\n        "acorn": {\n          "version": "5.7.3",\n          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.3.tgz",\n          "integrity": "sha512-T/zvzYRfbVojPWahDsE5evJdHb3oJoQfFbsrKM7w5Zcs++Tr257tia3BmMP8XYVjp1S9RZXQMh7gao96BlqZOw=="\n        },\n        "parse5": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/parse5/-/parse5-4.0.0.tgz",\n          "integrity": "sha512-VrZ7eOd3T1Fk4XWNXMgiGBK/z0MG48BWG2uQNU4I72fkQuKUTZpl+u9k+CxEG0twMVzSmXEEz12z5Fnw1jIQFA=="\n        }\n      }\n    },\n    "jsesc": {\n      "version": "2.5.2",\n      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",\n      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA=="\n    },\n    "json-parse-better-errors": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",\n      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw=="\n    },\n    "json-schema": {\n      "version": "0.2.3",\n      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",\n      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="\n    },\n    "json-schema-traverse": {\n      "version": "0.4.1",\n      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",\n      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="\n    },\n    "json-stable-stringify": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",\n      "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",\n      "requires": {\n        "jsonify": "~0.0.0"\n      }\n    },\n    "json-stable-stringify-without-jsonify": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",\n      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE="\n    },\n    "json-stringify-safe": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",\n      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="\n    },\n    "json3": {\n      "version": "3.3.2",\n      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.2.tgz",\n      "integrity": "sha1-PAQ0dD35Pi9cQq7nsZvLSDV19OE="\n    },\n    "json5": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.0.tgz",\n      "integrity": "sha512-8Mh9h6xViijj36g7Dxi+Y4S6hNGV96vcJZr/SrlHh1LR/pEn/8j/+qIBbs44YKl69Lrfctp4QD+AdWLTMqEZAQ==",\n      "requires": {\n        "minimist": "^1.2.0"\n      }\n    },\n    "jsonfile": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",\n      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",\n      "requires": {\n        "graceful-fs": "^4.1.6"\n      }\n    },\n    "jsonify": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",\n      "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM="\n    },\n    "jsprim": {\n      "version": "1.4.1",\n      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",\n      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",\n      "requires": {\n        "assert-plus": "1.0.0",\n        "extsprintf": "1.3.0",\n        "json-schema": "0.2.3",\n        "verror": "1.10.0"\n      }\n    },\n    "jss": {\n      "version": "9.8.7",\n      "resolved": "https://registry.npmjs.org/jss/-/jss-9.8.7.tgz",\n      "integrity": "sha512-awj3XRZYxbrmmrx9LUSj5pXSUfm12m8xzi/VKeqI1ZwWBtQ0kVPTs3vYs32t4rFw83CgFDukA8wKzOE9sMQnoQ==",\n      "requires": {\n        "is-in-browser": "^1.1.3",\n        "symbol-observable": "^1.1.0",\n        "warning": "^3.0.0"\n      },\n      "dependencies": {\n        "warning": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/warning/-/warning-3.0.0.tgz",\n          "integrity": "sha1-MuU3fLVy3kqwR1O9+IIcAe1gW3w=",\n          "requires": {\n            "loose-envify": "^1.0.0"\n          }\n        }\n      }\n    },\n    "jss-camel-case": {\n      "version": "6.1.0",\n      "resolved": "https://registry.npmjs.org/jss-camel-case/-/jss-camel-case-6.1.0.tgz",\n      "integrity": "sha512-HPF2Q7wmNW1t79mCqSeU2vdd/vFFGpkazwvfHMOhPlMgXrJDzdj9viA2SaHk9ZbD5pfL63a8ylp4++irYbbzMQ==",\n      "requires": {\n        "hyphenate-style-name": "^1.0.2"\n      }\n    },\n    "jss-default-unit": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/jss-default-unit/-/jss-default-unit-8.0.2.tgz",\n      "integrity": "sha512-WxNHrF/18CdoAGw2H0FqOEvJdREXVXLazn7PQYU7V6/BWkCV0GkmWsppNiExdw8dP4TU1ma1dT9zBNJ95feLmg=="\n    },\n    "jss-global": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/jss-global/-/jss-global-3.0.0.tgz",\n      "integrity": "sha512-wxYn7vL+TImyQYGAfdplg7yaxnPQ9RaXY/cIA8hawaVnmmWxDHzBK32u1y+RAvWboa3lW83ya3nVZ/C+jyjZ5Q=="\n    },\n    "jss-nested": {\n      "version": "6.0.1",\n      "resolved": "https://registry.npmjs.org/jss-nested/-/jss-nested-6.0.1.tgz",\n      "integrity": "sha512-rn964TralHOZxoyEgeq3hXY8hyuCElnvQoVrQwKHVmu55VRDd6IqExAx9be5HgK0yN/+hQdgAXQl/GUrBbbSTA==",\n      "requires": {\n        "warning": "^3.0.0"\n      },\n      "dependencies": {\n        "warning": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/warning/-/warning-3.0.0.tgz",\n          "integrity": "sha1-MuU3fLVy3kqwR1O9+IIcAe1gW3w=",\n          "requires": {\n            "loose-envify": "^1.0.0"\n          }\n        }\n      }\n    },\n    "jss-props-sort": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/jss-props-sort/-/jss-props-sort-6.0.0.tgz",\n      "integrity": "sha512-E89UDcrphmI0LzmvYk25Hp4aE5ZBsXqMWlkFXS0EtPkunJkRr+WXdCNYbXbksIPnKlBenGB9OxzQY+mVc70S+g=="\n    },\n    "jss-vendor-prefixer": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/jss-vendor-prefixer/-/jss-vendor-prefixer-7.0.0.tgz",\n      "integrity": "sha512-Agd+FKmvsI0HLcYXkvy8GYOw3AAASBUpsmIRvVQheps+JWaN892uFOInTr0DRydwaD91vSSUCU4NssschvF7MA==",\n      "requires": {\n        "css-vendor": "^0.3.8"\n      }\n    },\n    "jstransform": {\n      "version": "11.0.3",\n      "resolved": "https://registry.npmjs.org/jstransform/-/jstransform-11.0.3.tgz",\n      "integrity": "sha1-CaeJk+CuTU70SH9hVakfYZDLQiM=",\n      "requires": {\n        "base62": "^1.1.0",\n        "commoner": "^0.10.1",\n        "esprima-fb": "^15001.1.0-dev-harmony-fb",\n        "object-assign": "^2.0.0",\n        "source-map": "^0.4.2"\n      },\n      "dependencies": {\n        "esprima-fb": {\n          "version": "15001.1.0-dev-harmony-fb",\n          "resolved": "https://registry.npmjs.org/esprima-fb/-/esprima-fb-15001.1.0-dev-harmony-fb.tgz",\n          "integrity": "sha1-MKlHMDxrjV6VW+4rmbHSMyBqaQE="\n        },\n        "object-assign": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-2.1.1.tgz",\n          "integrity": "sha1-Q8NuXVaf+OSBbE76i+AtJpZ8GKo="\n        },\n        "source-map": {\n          "version": "0.4.4",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",\n          "integrity": "sha1-66T12pwNyZneaAMti092FzZSA2s=",\n          "requires": {\n            "amdefine": ">=0.0.4"\n          }\n        }\n      }\n    },\n    "jsx-ast-utils": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-2.1.0.tgz",\n      "integrity": "sha512-yDGDG2DS4JcqhA6blsuYbtsT09xL8AoLuUR2Gb5exrw7UEM19sBcOTq+YBBhrNbl0PUC4R4LnFu+dHg2HKeVvA==",\n      "requires": {\n        "array-includes": "^3.0.3"\n      }\n    },\n    "just-debounce": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/just-debounce/-/just-debounce-1.0.0.tgz",\n      "integrity": "sha1-h/zPrv/AtozRnVX2cilD+SnqNeo="\n    },\n    "keyboard-key": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/keyboard-key/-/keyboard-key-1.0.4.tgz",\n      "integrity": "sha512-my04dE6BCwPpwoe4KYKfPxWiwgDYQOHrVmtzn1CfzmoEsGG/ef4oZGaXCzi1+iFhG7CN5JkOuxmei5OABY8/ag==",\n      "dev": true\n    },\n    "keycode": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/keycode/-/keycode-2.2.0.tgz",\n      "integrity": "sha1-PQr1bce4uOXLqNCpfxByBO7CKwQ=",\n      "dev": true\n    },\n    "killable": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/killable/-/killable-1.0.1.tgz",\n      "integrity": "sha512-LzqtLKlUwirEUyl/nicirVmNiPvYs7l5n8wOPP7fyJVpUPkvCnW/vuiXGpylGUlnPDnB7311rARzAt3Mhswpjg=="\n    },\n    "kind-of": {\n      "version": "3.2.2",\n      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",\n      "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",\n      "requires": {\n        "is-buffer": "^1.1.5"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        }\n      }\n    },\n    "kleur": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",\n      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w=="\n    },\n    "last-call-webpack-plugin": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/last-call-webpack-plugin/-/last-call-webpack-plugin-3.0.0.tgz",\n      "integrity": "sha512-7KI2l2GIZa9p2spzPIVZBYyNKkN+e/SQPpnjlTiPhdbDW3F86tdKKELxKpzJ5sgU19wQWsACULZmpTPYHeWO5w==",\n      "requires": {\n        "lodash": "^4.17.5",\n        "webpack-sources": "^1.1.0"\n      }\n    },\n    "last-run": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/last-run/-/last-run-1.1.1.tgz",\n      "integrity": "sha1-RblpQsF7HHnHchmCWbqUO+v4yls=",\n      "requires": {\n        "default-resolution": "^2.0.0",\n        "es6-weak-map": "^2.0.1"\n      }\n    },\n    "lazy-cache": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",\n      "integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4="\n    },\n    "lazystream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/lazystream/-/lazystream-1.0.0.tgz",\n      "integrity": "sha1-9plf4PggOS9hOWvolGJAe7dxaOQ=",\n      "requires": {\n        "readable-stream": "^2.0.5"\n      }\n    },\n    "lcid": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/lcid/-/lcid-2.0.0.tgz",\n      "integrity": "sha512-avPEb8P8EGnwXKClwsNUgryVjllcRqtMYa49NTsbQagYuT1DcXnl1915oxWjoyGrXR6zH/Y0Zc96xWsPcoDKeA==",\n      "requires": {\n        "invert-kv": "^2.0.0"\n      }\n    },\n    "lead": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/lead/-/lead-1.0.0.tgz",\n      "integrity": "sha1-bxT5mje+Op3XhPVJVpDlkDRm7kI=",\n      "requires": {\n        "flush-write-stream": "^1.0.2"\n      }\n    },\n    "left-pad": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/left-pad/-/left-pad-1.3.0.tgz",\n      "integrity": "sha512-XI5MPzVNApjAyhQzphX8BkmKsKUxD4LdyK24iZeQGinBN9yTQT3bFlCBy/aVx2HrNcqQGsdot8ghrjyrvMCoEA=="\n    },\n    "less": {\n      "version": "3.9.0",\n      "resolved": "https://registry.npmjs.org/less/-/less-3.9.0.tgz",\n      "integrity": "sha512-31CmtPEZraNUtuUREYjSqRkeETFdyEHSEPAGq4erDlUXtda7pzNmctdljdIagSb589d/qXGWiiP31R5JVf+v0w==",\n      "requires": {\n        "clone": "^2.1.2",\n        "errno": "^0.1.1",\n        "graceful-fs": "^4.1.2",\n        "image-size": "~0.5.0",\n        "mime": "^1.4.1",\n        "mkdirp": "^0.5.0",\n        "promise": "^7.1.1",\n        "request": "^2.83.0",\n        "source-map": "~0.6.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "mime": {\n          "version": "1.6.0",\n          "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",\n          "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",\n          "optional": true\n        },\n        "promise": {\n          "version": "7.3.1",\n          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",\n          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",\n          "optional": true,\n          "requires": {\n            "asap": "~2.0.3"\n          }\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",\n          "optional": true\n        }\n      }\n    },\n    "leven": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/leven/-/leven-2.1.0.tgz",\n      "integrity": "sha1-wuep93IJTe6dNCAq6KzORoeHVYA="\n    },\n    "levn": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",\n      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",\n      "requires": {\n        "prelude-ls": "~1.1.2",\n        "type-check": "~0.3.2"\n      }\n    },\n    "liftoff": {\n      "version": "2.5.0",\n      "resolved": "https://registry.npmjs.org/liftoff/-/liftoff-2.5.0.tgz",\n      "integrity": "sha1-IAkpG7Mc6oYbvxCnwVooyvdcMew=",\n      "requires": {\n        "extend": "^3.0.0",\n        "findup-sync": "^2.0.0",\n        "fined": "^1.0.1",\n        "flagged-respawn": "^1.0.0",\n        "is-plain-object": "^2.0.4",\n        "object.map": "^1.0.0",\n        "rechoir": "^0.6.2",\n        "resolve": "^1.1.7"\n      }\n    },\n    "load-json-file": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",\n      "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",\n      "requires": {\n        "graceful-fs": "^4.1.2",\n        "parse-json": "^4.0.0",\n        "pify": "^3.0.0",\n        "strip-bom": "^3.0.0"\n      }\n    },\n    "loader-fs-cache": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/loader-fs-cache/-/loader-fs-cache-1.0.2.tgz",\n      "integrity": "sha512-70IzT/0/L+M20jUlEqZhZyArTU6VKLRTYRDAYN26g4jfzpJqjipLL3/hgYpySqI9PwsVRHHFja0LfEmsx9X2Cw==",\n      "requires": {\n        "find-cache-dir": "^0.1.1",\n        "mkdirp": "0.5.1"\n      },\n      "dependencies": {\n        "find-cache-dir": {\n          "version": "0.1.1",\n          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-0.1.1.tgz",\n          "integrity": "sha1-yN765XyKUqinhPnjHFfHQumToLk=",\n          "requires": {\n            "commondir": "^1.0.1",\n            "mkdirp": "^0.5.1",\n            "pkg-dir": "^1.0.0"\n          }\n        },\n        "find-up": {\n          "version": "1.1.2",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",\n          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",\n          "requires": {\n            "path-exists": "^2.0.0",\n            "pinkie-promise": "^2.0.0"\n          }\n        },\n        "path-exists": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",\n          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",\n          "requires": {\n            "pinkie-promise": "^2.0.0"\n          }\n        },\n        "pkg-dir": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz",\n          "integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",\n          "requires": {\n            "find-up": "^1.0.0"\n          }\n        }\n      }\n    },\n    "loader-runner": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-2.4.0.tgz",\n      "integrity": "sha512-Jsmr89RcXGIwivFY21FcRrisYZfvLMTWx5kOLc+JTxtpBOG6xML0vzbc6SEQG2FO9/4Fc3wW4LVcB5DmGflaRw=="\n    },\n    "loader-utils": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.2.3.tgz",\n      "integrity": "sha512-fkpz8ejdnEMG3s37wGL07iSBDg99O9D5yflE9RGNH3hRdx9SOwYfnGYdZOUIZitN8E+E2vkq3MUMYMvPYl5ZZA==",\n      "requires": {\n        "big.js": "^5.2.2",\n        "emojis-list": "^2.0.0",\n        "json5": "^1.0.1"\n      },\n      "dependencies": {\n        "json5": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",\n          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",\n          "requires": {\n            "minimist": "^1.2.0"\n          }\n        }\n      }\n    },\n    "locate-path": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",\n      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",\n      "requires": {\n        "p-locate": "^3.0.0",\n        "path-exists": "^3.0.0"\n      }\n    },\n    "lodash": {\n      "version": "4.17.11",\n      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",\n      "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg=="\n    },\n    "lodash._baseassign": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/lodash._baseassign/-/lodash._baseassign-3.2.0.tgz",\n      "integrity": "sha1-jDigmVAPIVrQnlnxci/QxSv+Ck4=",\n      "requires": {\n        "lodash._basecopy": "^3.0.0",\n        "lodash.keys": "^3.0.0"\n      }\n    },\n    "lodash._basecopy": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz",\n      "integrity": "sha1-jaDmqHbPNEwK2KVIghEd08XHyjY="\n    },\n    "lodash._basetostring": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.1.tgz",\n      "integrity": "sha1-0YYdh3+CSlL2aYMtyvPuFVZqB9U="\n    },\n    "lodash._basevalues": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._basevalues/-/lodash._basevalues-3.0.0.tgz",\n      "integrity": "sha1-W3dXYoAr3j0yl1A+JjAIIP32Ybc="\n    },\n    "lodash._bindcallback": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._bindcallback/-/lodash._bindcallback-3.0.1.tgz",\n      "integrity": "sha1-5THCdkTPi1epnhftlbNcdIeJOS4="\n    },\n    "lodash._createassigner": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/lodash._createassigner/-/lodash._createassigner-3.1.1.tgz",\n      "integrity": "sha1-g4pbri/aymOsIt7o4Z+k5taXCxE=",\n      "requires": {\n        "lodash._bindcallback": "^3.0.0",\n        "lodash._isiterateecall": "^3.0.0",\n        "lodash.restparam": "^3.0.0"\n      }\n    },\n    "lodash._getnative": {\n      "version": "3.9.1",\n      "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",\n      "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U="\n    },\n    "lodash._isiterateecall": {\n      "version": "3.0.9",\n      "resolved": "https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz",\n      "integrity": "sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw="\n    },\n    "lodash._isnative": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash._isnative/-/lodash._isnative-2.4.1.tgz",\n      "integrity": "sha1-PqZAS3hKe+g2x7V1gOHN95sUgyw="\n    },\n    "lodash._objecttypes": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash._objecttypes/-/lodash._objecttypes-2.4.1.tgz",\n      "integrity": "sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE="\n    },\n    "lodash._reescape": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._reescape/-/lodash._reescape-3.0.0.tgz",\n      "integrity": "sha1-Kx1vXf4HyKNVdT5fJ/rH8c3hYWo="\n    },\n    "lodash._reevaluate": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._reevaluate/-/lodash._reevaluate-3.0.0.tgz",\n      "integrity": "sha1-WLx0xAZklTrgsSTYBpltrKQx4u0="\n    },\n    "lodash._reinterpolate": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",\n      "integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0="\n    },\n    "lodash._root": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._root/-/lodash._root-3.0.1.tgz",\n      "integrity": "sha1-+6HEUkwZ7ppfgTa0YJ8BfPTe1pI="\n    },\n    "lodash._shimkeys": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash._shimkeys/-/lodash._shimkeys-2.4.1.tgz",\n      "integrity": "sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=",\n      "requires": {\n        "lodash._objecttypes": "~2.4.1"\n      }\n    },\n    "lodash.assign": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/lodash.assign/-/lodash.assign-3.2.0.tgz",\n      "integrity": "sha1-POnwI0tLIiPilrj6CsH+6OvKZPo=",\n      "requires": {\n        "lodash._baseassign": "^3.0.0",\n        "lodash._createassigner": "^3.0.0",\n        "lodash.keys": "^3.0.0"\n      }\n    },\n    "lodash.clone": {\n      "version": "4.5.0",\n      "resolved": "https://registry.npmjs.org/lodash.clone/-/lodash.clone-4.5.0.tgz",\n      "integrity": "sha1-GVhwRQ9aExkkeN9Lw9I9LeoZB7Y="\n    },\n    "lodash.defaults": {\n      "version": "3.1.2",\n      "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-3.1.2.tgz",\n      "integrity": "sha1-xzCLGNv4vJNy1wGnNJPGEZK9Liw=",\n      "requires": {\n        "lodash.assign": "^3.0.0",\n        "lodash.restparam": "^3.0.0"\n      }\n    },\n    "lodash.escape": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/lodash.escape/-/lodash.escape-3.2.0.tgz",\n      "integrity": "sha1-mV7g3BjBtIzJLv+ucaEKq1tIdpg=",\n      "requires": {\n        "lodash._root": "^3.0.0"\n      }\n    },\n    "lodash.flatten": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/lodash.flatten/-/lodash.flatten-4.4.0.tgz",\n      "integrity": "sha1-8xwiIlqWMtK7+OSt2+8kCqdlph8="\n    },\n    "lodash.isarguments": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz",\n      "integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo="\n    },\n    "lodash.isarray": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz",\n      "integrity": "sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U="\n    },\n    "lodash.isobject": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-2.4.1.tgz",\n      "integrity": "sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=",\n      "requires": {\n        "lodash._objecttypes": "~2.4.1"\n      }\n    },\n    "lodash.keys": {\n      "version": "3.1.2",\n      "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz",\n      "integrity": "sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=",\n      "requires": {\n        "lodash._getnative": "^3.0.0",\n        "lodash.isarguments": "^3.0.0",\n        "lodash.isarray": "^3.0.0"\n      }\n    },\n    "lodash.memoize": {\n      "version": "4.1.2",\n      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",\n      "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="\n    },\n    "lodash.merge": {\n      "version": "4.6.1",\n      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.1.tgz",\n      "integrity": "sha512-AOYza4+Hf5z1/0Hztxpm2/xiPZgi/cjMqdnKTUWTBSKchJlxXXuUSxCCl8rJlf4g6yww/j6mA8nC8Hw/EZWxKQ=="\n    },\n    "lodash.partialright": {\n      "version": "4.2.1",\n      "resolved": "https://registry.npmjs.org/lodash.partialright/-/lodash.partialright-4.2.1.tgz",\n      "integrity": "sha1-ATDYDoM2MmTUAHTzKbij56ihzEs="\n    },\n    "lodash.pick": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/lodash.pick/-/lodash.pick-4.4.0.tgz",\n      "integrity": "sha1-UvBWEP/53tQiYRRB7R/BI6AwAbM="\n    },\n    "lodash.restparam": {\n      "version": "3.6.1",\n      "resolved": "https://registry.npmjs.org/lodash.restparam/-/lodash.restparam-3.6.1.tgz",\n      "integrity": "sha1-k2pOMJ7zMKdkXtQUWYbIWuWyCAU="\n    },\n    "lodash.sortby": {\n      "version": "4.7.0",\n      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",\n      "integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg="\n    },\n    "lodash.tail": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/lodash.tail/-/lodash.tail-4.1.1.tgz",\n      "integrity": "sha1-0jM6NtnncXyK0vfKyv7HwytERmQ="\n    },\n    "lodash.template": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-4.4.0.tgz",\n      "integrity": "sha1-5zoDhcg1VZF0bgILmWecaQ5o+6A=",\n      "requires": {\n        "lodash._reinterpolate": "~3.0.0",\n        "lodash.templatesettings": "^4.0.0"\n      }\n    },\n    "lodash.templatesettings": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-4.1.0.tgz",\n      "integrity": "sha1-K01OlbpEDZFf8IvImeRVNmZxMxY=",\n      "requires": {\n        "lodash._reinterpolate": "~3.0.0"\n      }\n    },\n    "lodash.throttle": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/lodash.throttle/-/lodash.throttle-4.1.1.tgz",\n      "integrity": "sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ=",\n      "dev": true\n    },\n    "lodash.unescape": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/lodash.unescape/-/lodash.unescape-4.0.1.tgz",\n      "integrity": "sha1-vyJJiGzlFM2hEvrpIYzcBlIR/Jw="\n    },\n    "lodash.uniq": {\n      "version": "4.5.0",\n      "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",\n      "integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M="\n    },\n    "loglevel": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/loglevel/-/loglevel-1.6.1.tgz",\n      "integrity": "sha1-4PyVEztu8nbNyIh82vJKpvFW+Po="\n    },\n    "longest": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",\n      "integrity": "sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc="\n    },\n    "loose-envify": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",\n      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",\n      "requires": {\n        "js-tokens": "^3.0.0 || ^4.0.0"\n      }\n    },\n    "lower-case": {\n      "version": "1.1.4",\n      "resolved": "https://registry.npmjs.org/lower-case/-/lower-case-1.1.4.tgz",\n      "integrity": "sha1-miyr0bno4K6ZOkv31YdcOcQujqw="\n    },\n    "lru-cache": {\n      "version": "5.1.1",\n      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",\n      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",\n      "requires": {\n        "yallist": "^3.0.2"\n      }\n    },\n    "make-dir": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",\n      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",\n      "requires": {\n        "pify": "^4.0.1",\n        "semver": "^5.6.0"\n      },\n      "dependencies": {\n        "pify": {\n          "version": "4.0.1",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",\n          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "make-error": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.5.tgz",\n      "integrity": "sha512-c3sIjNUow0+8swNwVpqoH4YCShKNFkMaw6oH1mNS2haDZQqkeZFlHS3dhoeEbKKmJB4vXpJucU6oH75aDYeE9g=="\n    },\n    "make-error-cause": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/make-error-cause/-/make-error-cause-1.2.2.tgz",\n      "integrity": "sha1-3wOI/NCzeBbf8KX7gQiTl3fcvJ0=",\n      "requires": {\n        "make-error": "^1.2.0"\n      }\n    },\n    "make-iterator": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",\n      "integrity": "sha512-pxiuXh0iVEq7VM7KMIhs5gxsfxCux2URptUQaXo4iZZJxBAzTPOLE2BumO5dbfVYq/hBJFBR/a1mFDmOx5AGmw==",\n      "requires": {\n        "kind-of": "^6.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "makeerror": {\n      "version": "1.0.11",\n      "resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz",\n      "integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",\n      "requires": {\n        "tmpl": "1.0.x"\n      }\n    },\n    "mamacro": {\n      "version": "0.0.3",\n      "resolved": "https://registry.npmjs.org/mamacro/-/mamacro-0.0.3.tgz",\n      "integrity": "sha512-qMEwh+UujcQ+kbz3T6V+wAmO2U8veoq2w+3wY8MquqwVA3jChfwY+Tk52GZKDfACEPjuZ7r2oJLejwpt8jtwTA=="\n    },\n    "map-age-cleaner": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",\n      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",\n      "requires": {\n        "p-defer": "^1.0.0"\n      }\n    },\n    "map-cache": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",\n      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8="\n    },\n    "map-stream": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz",\n      "integrity": "sha1-5WqpTEyAVaFkBKBnS3jyFffI4ZQ="\n    },\n    "map-visit": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",\n      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",\n      "requires": {\n        "object-visit": "^1.0.0"\n      }\n    },\n    "matchdep": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/matchdep/-/matchdep-2.0.0.tgz",\n      "integrity": "sha1-xvNINKDY28OzfCfui7yyfHd1WC4=",\n      "requires": {\n        "findup-sync": "^2.0.0",\n        "micromatch": "^3.0.4",\n        "resolve": "^1.4.0",\n        "stack-trace": "0.0.10"\n      }\n    },\n    "material-ui": {\n      "version": "0.20.2",\n      "resolved": "https://registry.npmjs.org/material-ui/-/material-ui-0.20.2.tgz",\n      "integrity": "sha512-VeqgQkdvtK193w+FFvXDEwlVxI4rWk83eWbpYLeOIHDPWr3rbB9B075JRnJt/8IsI2X8q5Aia5W3+7m4KkleDg==",\n      "dev": true,\n      "requires": {\n        "babel-runtime": "^6.23.0",\n        "inline-style-prefixer": "^3.0.8",\n        "keycode": "^2.1.8",\n        "lodash.merge": "^4.6.0",\n        "lodash.throttle": "^4.1.1",\n        "prop-types": "^15.5.7",\n        "react-event-listener": "^0.6.2",\n        "react-transition-group": "^1.2.1",\n        "recompose": "^0.26.0",\n        "simple-assign": "^0.1.0",\n        "warning": "^3.0.0"\n      },\n      "dependencies": {\n        "hoist-non-react-statics": {\n          "version": "2.5.5",\n          "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-2.5.5.tgz",\n          "integrity": "sha512-rqcy4pJo55FTTLWt+bU8ukscqHeE/e9KWvsOW2b/a3afxQZhwkQdT1rPPCJ0rYXdj4vNcasY8zHTH+jF/qStxw==",\n          "dev": true\n        },\n        "react-transition-group": {\n          "version": "1.2.1",\n          "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-1.2.1.tgz",\n          "integrity": "sha512-CWaL3laCmgAFdxdKbhhps+c0HRGF4c+hdM4H23+FI1QBNUyx/AMeIJGWorehPNSaKnQNOAxL7PQmqMu78CDj3Q==",\n          "dev": true,\n          "requires": {\n            "chain-function": "^1.0.0",\n            "dom-helpers": "^3.2.0",\n            "loose-envify": "^1.3.1",\n            "prop-types": "^15.5.6",\n            "warning": "^3.0.0"\n          }\n        },\n        "recompose": {\n          "version": "0.26.0",\n          "resolved": "https://registry.npmjs.org/recompose/-/recompose-0.26.0.tgz",\n          "integrity": "sha512-KwOu6ztO0mN5vy3+zDcc45lgnaUoaQse/a5yLVqtzTK13czSWnFGmXbQVmnoMgDkI5POd1EwIKSbjU1V7xdZog==",\n          "dev": true,\n          "requires": {\n            "change-emitter": "^0.1.2",\n            "fbjs": "^0.8.1",\n            "hoist-non-react-statics": "^2.3.1",\n            "symbol-observable": "^1.0.4"\n          }\n        },\n        "warning": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/warning/-/warning-3.0.0.tgz",\n          "integrity": "sha1-MuU3fLVy3kqwR1O9+IIcAe1gW3w=",\n          "dev": true,\n          "requires": {\n            "loose-envify": "^1.0.0"\n          }\n        }\n      }\n    },\n    "math-random": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/math-random/-/math-random-1.0.4.tgz",\n      "integrity": "sha512-rUxjysqif/BZQH2yhd5Aaq7vXMSx9NdEsQcyA07uEzIvxgI7zIr33gGsh+RU0/XjmQpCW7RsVof1vlkvQVCK5A=="\n    },\n    "md5.js": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",\n      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",\n      "requires": {\n        "hash-base": "^3.0.0",\n        "inherits": "^2.0.1",\n        "safe-buffer": "^5.1.2"\n      }\n    },\n    "mdn-data": {\n      "version": "1.1.4",\n      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-1.1.4.tgz",\n      "integrity": "sha512-FSYbp3lyKjyj3E7fMl6rYvUdX0FBXaluGqlFoYESWQlyUTq8R+wp0rkFxoYFqZlHCvsUXGjyJmLQSnXToYhOSA=="\n    },\n    "media-typer": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",\n      "integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="\n    },\n    "mem": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/mem/-/mem-4.3.0.tgz",\n      "integrity": "sha512-qX2bG48pTqYRVmDB37rn/6PT7LcR8T7oAX3bf99u1Tt1nzxYfxkgqDwUwolPlXweM0XzBOBFzSx4kfp7KP1s/w==",\n      "requires": {\n        "map-age-cleaner": "^0.1.1",\n        "mimic-fn": "^2.0.0",\n        "p-is-promise": "^2.0.0"\n      },\n      "dependencies": {\n        "mimic-fn": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",\n          "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg=="\n        }\n      }\n    },\n    "memoize-one": {\n      "version": "5.0.4",\n      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-5.0.4.tgz",\n      "integrity": "sha512-P0z5IeAH6qHHGkJIXWw0xC2HNEgkx/9uWWBQw64FJj3/ol14VYdfVGWWr0fXfjhhv3TKVIqUq65os6O4GUNksA=="\n    },\n    "memory-fs": {\n      "version": "0.4.1",\n      "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.4.1.tgz",\n      "integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",\n      "requires": {\n        "errno": "^0.1.3",\n        "readable-stream": "^2.0.1"\n      }\n    },\n    "merge-deep": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/merge-deep/-/merge-deep-3.0.2.tgz",\n      "integrity": "sha512-T7qC8kg4Zoti1cFd8Cr0M+qaZfOwjlPDEdZIIPPB2JZctjaPM4fX+i7HOId69tAti2fvO6X5ldfYUONDODsrkA==",\n      "requires": {\n        "arr-union": "^3.1.0",\n        "clone-deep": "^0.2.4",\n        "kind-of": "^3.0.2"\n      }\n    },\n    "merge-descriptors": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",\n      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="\n    },\n    "merge-stream": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-1.0.1.tgz",\n      "integrity": "sha1-QEEgLVCKNCugAXQAjfDCUbjBNeE=",\n      "requires": {\n        "readable-stream": "^2.0.1"\n      }\n    },\n    "merge2": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.2.3.tgz",\n      "integrity": "sha512-gdUU1Fwj5ep4kplwcmftruWofEFt6lfpkkr3h860CXbAB9c3hGb55EOL2ali0Td5oebvW0E1+3Sr+Ur7XfKpRA=="\n    },\n    "methods": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",\n      "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="\n    },\n    "micromatch": {\n      "version": "3.1.10",\n      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",\n      "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",\n      "requires": {\n        "arr-diff": "^4.0.0",\n        "array-unique": "^0.3.2",\n        "braces": "^2.3.1",\n        "define-property": "^2.0.2",\n        "extend-shallow": "^3.0.2",\n        "extglob": "^2.0.4",\n        "fragment-cache": "^0.2.1",\n        "kind-of": "^6.0.2",\n        "nanomatch": "^1.2.9",\n        "object.pick": "^1.3.0",\n        "regex-not": "^1.0.0",\n        "snapdragon": "^0.8.1",\n        "to-regex": "^3.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "miller-rabin": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",\n      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",\n      "requires": {\n        "bn.js": "^4.0.0",\n        "brorand": "^1.0.1"\n      }\n    },\n    "mime": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.2.tgz",\n      "integrity": "sha512-zJBfZDkwRu+j3Pdd2aHsR5GfH2jIWhmL1ZzBoc+X+3JEti2hbArWcyJ+1laC1D2/U/W1a/+Cegj0/OnEU2ybjg=="\n    },\n    "mime-db": {\n      "version": "1.40.0",\n      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.40.0.tgz",\n      "integrity": "sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA=="\n    },\n    "mime-types": {\n      "version": "2.1.24",\n      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.24.tgz",\n      "integrity": "sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==",\n      "requires": {\n        "mime-db": "1.40.0"\n      }\n    },\n    "mimic-fn": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",\n      "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ=="\n    },\n    "mini-css-extract-plugin": {\n      "version": "0.5.0",\n      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.5.0.tgz",\n      "integrity": "sha512-IuaLjruM0vMKhUUT51fQdQzBYTX49dLj8w68ALEAe2A4iYNpIC4eMac67mt3NzycvjOlf07/kYxJDc0RTl1Wqw==",\n      "requires": {\n        "loader-utils": "^1.1.0",\n        "schema-utils": "^1.0.0",\n        "webpack-sources": "^1.1.0"\n      }\n    },\n    "minimalistic-assert": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",\n      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="\n    },\n    "minimalistic-crypto-utils": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",\n      "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo="\n    },\n    "minimatch": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",\n      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",\n      "requires": {\n        "brace-expansion": "^1.1.7"\n      }\n    },\n    "minimist": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",\n      "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ="\n    },\n    "mississippi": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/mississippi/-/mississippi-3.0.0.tgz",\n      "integrity": "sha512-x471SsVjUtBRtcvd4BzKE9kFC+/2TeWgKCgw0bZcw1b9l2X3QX5vCWgF+KaZaYm87Ss//rHnWryupDrgLvmSkA==",\n      "requires": {\n        "concat-stream": "^1.5.0",\n        "duplexify": "^3.4.2",\n        "end-of-stream": "^1.1.0",\n        "flush-write-stream": "^1.0.0",\n        "from2": "^2.1.0",\n        "parallel-transform": "^1.1.0",\n        "pump": "^3.0.0",\n        "pumpify": "^1.3.3",\n        "stream-each": "^1.1.0",\n        "through2": "^2.0.0"\n      }\n    },\n    "mixin-deep": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.1.tgz",\n      "integrity": "sha512-8ZItLHeEgaqEvd5lYBXfm4EZSFCX29Jb9K+lAHhDKzReKBQKj3R+7NOF6tjqYi9t4oI8VUfaWITJQm86wnXGNQ==",\n      "requires": {\n        "for-in": "^1.0.2",\n        "is-extendable": "^1.0.1"\n      },\n      "dependencies": {\n        "is-extendable": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",\n          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",\n          "requires": {\n            "is-plain-object": "^2.0.4"\n          }\n        }\n      }\n    },\n    "mixin-object": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/mixin-object/-/mixin-object-2.0.1.tgz",\n      "integrity": "sha1-T7lJRB2rGCVA8f4DW6YOGUel5X4=",\n      "requires": {\n        "for-in": "^0.1.3",\n        "is-extendable": "^0.1.1"\n      },\n      "dependencies": {\n        "for-in": {\n          "version": "0.1.8",\n          "resolved": "https://registry.npmjs.org/for-in/-/for-in-0.1.8.tgz",\n          "integrity": "sha1-2Hc5COMSVhCZUrH9ubP6hn0ndeE="\n        }\n      }\n    },\n    "mkdirp": {\n      "version": "0.5.1",\n      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",\n      "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",\n      "requires": {\n        "minimist": "0.0.8"\n      },\n      "dependencies": {\n        "minimist": {\n          "version": "0.0.8",\n          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",\n          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="\n        }\n      }\n    },\n    "move-concurrently": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/move-concurrently/-/move-concurrently-1.0.1.tgz",\n      "integrity": "sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=",\n      "requires": {\n        "aproba": "^1.1.1",\n        "copy-concurrently": "^1.0.0",\n        "fs-write-stream-atomic": "^1.0.8",\n        "mkdirp": "^0.5.1",\n        "rimraf": "^2.5.4",\n        "run-queue": "^1.0.3"\n      }\n    },\n    "ms": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",\n      "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="\n    },\n    "multicast-dns": {\n      "version": "6.2.3",\n      "resolved": "https://registry.npmjs.org/multicast-dns/-/multicast-dns-6.2.3.tgz",\n      "integrity": "sha512-ji6J5enbMyGRHIAkAOu3WdV8nggqviKCEKtXcOqfphZZtQrmHKycfynJ2V7eVPUA4NhJ6V7Wf4TmGbTwKE9B6g==",\n      "requires": {\n        "dns-packet": "^1.3.1",\n        "thunky": "^1.0.2"\n      }\n    },\n    "multicast-dns-service-types": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz",\n      "integrity": "sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE="\n    },\n    "multipipe": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/multipipe/-/multipipe-0.1.2.tgz",\n      "integrity": "sha1-Ko8t33Du1WTf8tV/HhoTfZ8FB4s=",\n      "requires": {\n        "duplexer2": "0.0.2"\n      }\n    },\n    "mute-stdout": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/mute-stdout/-/mute-stdout-1.0.1.tgz",\n      "integrity": "sha512-kDcwXR4PS7caBpuRYYBUz9iVixUk3anO3f5OYFiIPwK/20vCzKCHyKoulbiDY1S53zD2bxUpxN/IJ+TnXjfvxg=="\n    },\n    "mute-stream": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",\n      "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s="\n    },\n    "nan": {\n      "version": "2.13.2",\n      "resolved": "https://registry.npmjs.org/nan/-/nan-2.13.2.tgz",\n      "integrity": "sha512-TghvYc72wlMGMVMluVo9WRJc0mB8KxxF/gZ4YYFy7V2ZQX9l7rgbPg7vjS9mt6U5HXODVFVI2bOduCzwOMv/lw==",\n      "optional": true\n    },\n    "nanomatch": {\n      "version": "1.2.13",\n      "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",\n      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",\n      "requires": {\n        "arr-diff": "^4.0.0",\n        "array-unique": "^0.3.2",\n        "define-property": "^2.0.2",\n        "extend-shallow": "^3.0.2",\n        "fragment-cache": "^0.2.1",\n        "is-windows": "^1.0.2",\n        "kind-of": "^6.0.2",\n        "object.pick": "^1.3.0",\n        "regex-not": "^1.0.0",\n        "snapdragon": "^0.8.1",\n        "to-regex": "^3.0.1"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "natives": {\n      "version": "1.1.6",\n      "resolved": "https://registry.npmjs.org/natives/-/natives-1.1.6.tgz",\n      "integrity": "sha512-6+TDFewD4yxY14ptjKaS63GVdtKiES1pTPyxn9Jb0rBqPMZ7VcCiooEhPNsr+mqHtMGxa/5c/HhcC4uPEUw/nA=="\n    },\n    "natural-compare": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",\n      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="\n    },\n    "negotiator": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.1.tgz",\n      "integrity": "sha1-KzJxhOiZIQEXeyhWP7XnECrNDKk="\n    },\n    "neo-async": {\n      "version": "2.6.0",\n      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.0.tgz",\n      "integrity": "sha512-MFh0d/Wa7vkKO3Y3LlacqAEeHK0mckVqzDieUKTT+KGxi+zIpeVsFxymkIiRpbpDziHc290Xr9A1O4Om7otoRA=="\n    },\n    "next-tick": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",\n      "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw="\n    },\n    "nice-try": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",\n      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ=="\n    },\n    "no-case": {\n      "version": "2.3.2",\n      "resolved": "https://registry.npmjs.org/no-case/-/no-case-2.3.2.tgz",\n      "integrity": "sha512-rmTZ9kz+f3rCvK2TD1Ue/oZlns7OGoIWP4fc3llxxRXlOkHKoWPPWJOfFYpITabSow43QJbRIoHQXtt10VldyQ==",\n      "requires": {\n        "lower-case": "^1.1.1"\n      }\n    },\n    "node-fetch": {\n      "version": "1.7.3",\n      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",\n      "integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",\n      "requires": {\n        "encoding": "^0.1.11",\n        "is-stream": "^1.0.1"\n      }\n    },\n    "node-forge": {\n      "version": "0.7.5",\n      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.7.5.tgz",\n      "integrity": "sha512-MmbQJ2MTESTjt3Gi/3yG1wGpIMhUfcIypUCGtTizFR9IiccFwxSpfp0vtIZlkFclEqERemxfnSdZEMR9VqqEFQ=="\n    },\n    "node-int64": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",\n      "integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs="\n    },\n    "node-libs-browser": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.0.tgz",\n      "integrity": "sha512-5MQunG/oyOaBdttrL40dA7bUfPORLRWMUJLQtMg7nluxUvk5XwnLdL9twQHFAjRx/y7mIMkLKT9++qPbbk6BZA==",\n      "requires": {\n        "assert": "^1.1.1",\n        "browserify-zlib": "^0.2.0",\n        "buffer": "^4.3.0",\n        "console-browserify": "^1.1.0",\n        "constants-browserify": "^1.0.0",\n        "crypto-browserify": "^3.11.0",\n        "domain-browser": "^1.1.1",\n        "events": "^3.0.0",\n        "https-browserify": "^1.0.0",\n        "os-browserify": "^0.3.0",\n        "path-browserify": "0.0.0",\n        "process": "^0.11.10",\n        "punycode": "^1.2.4",\n        "querystring-es3": "^0.2.0",\n        "readable-stream": "^2.3.3",\n        "stream-browserify": "^2.0.1",\n        "stream-http": "^2.7.2",\n        "string_decoder": "^1.0.0",\n        "timers-browserify": "^2.0.4",\n        "tty-browserify": "0.0.0",\n        "url": "^0.11.0",\n        "util": "^0.11.0",\n        "vm-browserify": "0.0.4"\n      },\n      "dependencies": {\n        "punycode": {\n          "version": "1.4.1",\n          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",\n          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="\n        }\n      }\n    },\n    "node-modules-regexp": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/node-modules-regexp/-/node-modules-regexp-1.0.0.tgz",\n      "integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA="\n    },\n    "node-notifier": {\n      "version": "5.4.0",\n      "resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-5.4.0.tgz",\n      "integrity": "sha512-SUDEb+o71XR5lXSTyivXd9J7fCloE3SyP4lSgt3lU2oSANiox+SxlNRGPjDKrwU1YN3ix2KN/VGGCg0t01rttQ==",\n      "requires": {\n        "growly": "^1.3.0",\n        "is-wsl": "^1.1.0",\n        "semver": "^5.5.0",\n        "shellwords": "^0.1.1",\n        "which": "^1.3.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "node-releases": {\n      "version": "1.1.15",\n      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.15.tgz",\n      "integrity": "sha512-cKV097BQaZr8LTSRUa2+oc/aX5L8UkZtPQrMSTgiJEeaW7ymTDCoRaGCoaTqk0lqnalcoSHu4wjSl0Cmj2+bMw==",\n      "requires": {\n        "semver": "^5.3.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "node.extend": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/node.extend/-/node.extend-2.0.2.tgz",\n      "integrity": "sha512-pDT4Dchl94/+kkgdwyS2PauDFjZG0Hk0IcHIB+LkW27HLDtdoeMxHTxZh39DYbPP8UflWXWj9JcdDozF+YDOpQ==",\n      "requires": {\n        "has": "^1.0.3",\n        "is": "^3.2.1"\n      }\n    },\n    "nopt": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.1.tgz",\n      "integrity": "sha1-0NRoWv1UFRk8jHUFYC0NF81kR00=",\n      "requires": {\n        "abbrev": "1",\n        "osenv": "^0.1.4"\n      }\n    },\n    "normalize-package-data": {\n      "version": "2.5.0",\n      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",\n      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",\n      "requires": {\n        "hosted-git-info": "^2.1.4",\n        "resolve": "^1.10.0",\n        "semver": "2 || 3 || 4 || 5",\n        "validate-npm-package-license": "^3.0.1"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "normalize-path": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",\n      "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",\n      "requires": {\n        "remove-trailing-separator": "^1.0.1"\n      }\n    },\n    "normalize-range": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",\n      "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="\n    },\n    "normalize-scroll-left": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/normalize-scroll-left/-/normalize-scroll-left-0.1.2.tgz",\n      "integrity": "sha512-F9YMRls0zCF6BFIE2YnXDRpHPpfd91nOIaNdDgrx5YMoPLo8Wqj+6jNXHQsYBavJeXP4ww8HCt0xQAKc5qk2Fg=="\n    },\n    "normalize-url": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-3.3.0.tgz",\n      "integrity": "sha512-U+JJi7duF1o+u2pynbp2zXDW2/PADgC30f0GsHZtRh+HOcXHnw137TrNlyxxRvWW5fjKd3bcLHPxofWuCjaeZg=="\n    },\n    "now-and-later": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/now-and-later/-/now-and-later-2.0.1.tgz",\n      "integrity": "sha512-KGvQ0cB70AQfg107Xvs/Fbu+dGmZoTRJp2TaPwcwQm3/7PteUyN2BCgk8KBMPGBUXZdVwyWS8fDCGFygBm19UQ==",\n      "requires": {\n        "once": "^1.3.2"\n      }\n    },\n    "npm": {\n      "version": "6.9.0",\n      "resolved": "https://registry.npmjs.org/npm/-/npm-6.9.0.tgz",\n      "integrity": "sha512-91V+zB5hDxO+Jyp2sUKS7juHlIM95dGQxTeQtmZI1nAI/7kjWXFipPrtwwKjhyKmV4GsS2LzJhrxRjGWsU9z/w==",\n      "requires": {\n        "JSONStream": "^1.3.5",\n        "abbrev": "~1.1.1",\n        "ansicolors": "~0.3.2",\n        "ansistyles": "~0.1.3",\n        "aproba": "^2.0.0",\n        "archy": "~1.0.0",\n        "bin-links": "^1.1.2",\n        "bluebird": "^3.5.3",\n        "byte-size": "^5.0.1",\n        "cacache": "^11.3.2",\n        "call-limit": "~1.1.0",\n        "chownr": "^1.1.1",\n        "ci-info": "^2.0.0",\n        "cli-columns": "^3.1.2",\n        "cli-table3": "^0.5.1",\n        "cmd-shim": "~2.0.2",\n        "columnify": "~1.5.4",\n        "config-chain": "^1.1.12",\n        "debuglog": "*",\n        "detect-indent": "~5.0.0",\n        "detect-newline": "^2.1.0",\n        "dezalgo": "~1.0.3",\n        "editor": "~1.0.0",\n        "figgy-pudding": "^3.5.1",\n        "find-npm-prefix": "^1.0.2",\n        "fs-vacuum": "~1.2.10",\n        "fs-write-stream-atomic": "~1.0.10",\n        "gentle-fs": "^2.0.1",\n        "glob": "^7.1.3",\n        "graceful-fs": "^4.1.15",\n        "has-unicode": "~2.0.1",\n        "hosted-git-info": "^2.7.1",\n        "iferr": "^1.0.2",\n        "imurmurhash": "*",\n        "inflight": "~1.0.6",\n        "inherits": "~2.0.3",\n        "ini": "^1.3.5",\n        "init-package-json": "^1.10.3",\n        "is-cidr": "^3.0.0",\n        "json-parse-better-errors": "^1.0.2",\n        "lazy-property": "~1.0.0",\n        "libcipm": "^3.0.3",\n        "libnpm": "^2.0.1",\n        "libnpmaccess": "*",\n        "libnpmhook": "^5.0.2",\n        "libnpmorg": "*",\n        "libnpmsearch": "*",\n        "libnpmteam": "*",\n        "libnpx": "^10.2.0",\n        "lock-verify": "^2.1.0",\n        "lockfile": "^1.0.4",\n        "lodash._baseindexof": "*",\n        "lodash._baseuniq": "~4.6.0",\n        "lodash._bindcallback": "*",\n        "lodash._cacheindexof": "*",\n        "lodash._createcache": "*",\n        "lodash._getnative": "*",\n        "lodash.clonedeep": "~4.5.0",\n        "lodash.restparam": "*",\n        "lodash.union": "~4.6.0",\n        "lodash.uniq": "~4.5.0",\n        "lodash.without": "~4.4.0",\n        "lru-cache": "^4.1.5",\n        "meant": "~1.0.1",\n        "mississippi": "^3.0.0",\n        "mkdirp": "~0.5.1",\n        "move-concurrently": "^1.0.1",\n        "node-gyp": "^3.8.0",\n        "nopt": "~4.0.1",\n        "normalize-package-data": "^2.5.0",\n        "npm-audit-report": "^1.3.2",\n        "npm-cache-filename": "~1.0.2",\n        "npm-install-checks": "~3.0.0",\n        "npm-lifecycle": "^2.1.0",\n        "npm-package-arg": "^6.1.0",\n        "npm-packlist": "^1.4.1",\n        "npm-pick-manifest": "^2.2.3",\n        "npm-profile": "*",\n        "npm-registry-fetch": "^3.9.0",\n        "npm-user-validate": "~1.0.0",\n        "npmlog": "~4.1.2",\n        "once": "~1.4.0",\n        "opener": "^1.5.1",\n        "osenv": "^0.1.5",\n        "pacote": "^9.5.0",\n        "path-is-inside": "~1.0.2",\n        "promise-inflight": "~1.0.1",\n        "qrcode-terminal": "^0.12.0",\n        "query-string": "^6.2.0",\n        "qw": "~1.0.1",\n        "read": "~1.0.7",\n        "read-cmd-shim": "~1.0.1",\n        "read-installed": "~4.0.3",\n        "read-package-json": "^2.0.13",\n        "read-package-tree": "^5.2.2",\n        "readable-stream": "^3.1.1",\n        "readdir-scoped-modules": "*",\n        "request": "^2.88.0",\n        "retry": "^0.12.0",\n        "rimraf": "^2.6.3",\n        "safe-buffer": "^5.1.2",\n        "semver": "^5.6.0",\n        "sha": "~2.0.1",\n        "slide": "~1.1.6",\n        "sorted-object": "~2.0.1",\n        "sorted-union-stream": "~2.1.3",\n        "ssri": "^6.0.1",\n        "stringify-package": "^1.0.0",\n        "tar": "^4.4.8",\n        "text-table": "~0.2.0",\n        "tiny-relative-date": "^1.3.0",\n        "uid-number": "0.0.6",\n        "umask": "~1.1.0",\n        "unique-filename": "^1.1.1",\n        "unpipe": "~1.0.0",\n        "update-notifier": "^2.5.0",\n        "uuid": "^3.3.2",\n        "validate-npm-package-license": "^3.0.4",\n        "validate-npm-package-name": "~3.0.0",\n        "which": "^1.3.1",\n        "worker-farm": "^1.6.0",\n        "write-file-atomic": "^2.4.2"\n      },\n      "dependencies": {\n        "JSONStream": {\n          "version": "1.3.5",\n          "bundled": true,\n          "requires": {\n            "jsonparse": "^1.2.0",\n            "through": ">=2.2.7 <3"\n          }\n        },\n        "abbrev": {\n          "version": "1.1.1",\n          "bundled": true\n        },\n        "agent-base": {\n          "version": "4.2.1",\n          "bundled": true,\n          "requires": {\n            "es6-promisify": "^5.0.0"\n          }\n        },\n        "agentkeepalive": {\n          "version": "3.4.1",\n          "bundled": true,\n          "requires": {\n            "humanize-ms": "^1.2.1"\n          }\n        },\n        "ajv": {\n          "version": "5.5.2",\n          "bundled": true,\n          "requires": {\n            "co": "^4.6.0",\n            "fast-deep-equal": "^1.0.0",\n            "fast-json-stable-stringify": "^2.0.0",\n            "json-schema-traverse": "^0.3.0"\n          }\n        },\n        "ansi-align": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "^2.0.0"\n          }\n        },\n        "ansi-regex": {\n          "version": "2.1.1",\n          "bundled": true\n        },\n        "ansi-styles": {\n          "version": "3.2.1",\n          "bundled": true,\n          "requires": {\n            "color-convert": "^1.9.0"\n          }\n        },\n        "ansicolors": {\n          "version": "0.3.2",\n          "bundled": true\n        },\n        "ansistyles": {\n          "version": "0.1.3",\n          "bundled": true\n        },\n        "aproba": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "archy": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "are-we-there-yet": {\n          "version": "1.1.4",\n          "bundled": true,\n          "requires": {\n            "delegates": "^1.0.0",\n            "readable-stream": "^2.0.6"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "asap": {\n          "version": "2.0.6",\n          "bundled": true\n        },\n        "asn1": {\n          "version": "0.2.4",\n          "bundled": true,\n          "requires": {\n            "safer-buffer": "~2.1.0"\n          }\n        },\n        "assert-plus": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "asynckit": {\n          "version": "0.4.0",\n          "bundled": true\n        },\n        "aws-sign2": {\n          "version": "0.7.0",\n          "bundled": true\n        },\n        "aws4": {\n          "version": "1.8.0",\n          "bundled": true\n        },\n        "balanced-match": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "bcrypt-pbkdf": {\n          "version": "1.0.2",\n          "bundled": true,\n          "optional": true,\n          "requires": {\n            "tweetnacl": "^0.14.3"\n          }\n        },\n        "bin-links": {\n          "version": "1.1.2",\n          "bundled": true,\n          "requires": {\n            "bluebird": "^3.5.0",\n            "cmd-shim": "^2.0.2",\n            "gentle-fs": "^2.0.0",\n            "graceful-fs": "^4.1.11",\n            "write-file-atomic": "^2.3.0"\n          }\n        },\n        "block-stream": {\n          "version": "0.0.9",\n          "bundled": true,\n          "requires": {\n            "inherits": "~2.0.0"\n          }\n        },\n        "bluebird": {\n          "version": "3.5.3",\n          "bundled": true\n        },\n        "boxen": {\n          "version": "1.3.0",\n          "bundled": true,\n          "requires": {\n            "ansi-align": "^2.0.0",\n            "camelcase": "^4.0.0",\n            "chalk": "^2.0.1",\n            "cli-boxes": "^1.0.0",\n            "string-width": "^2.0.0",\n            "term-size": "^1.2.0",\n            "widest-line": "^2.0.0"\n          }\n        },\n        "brace-expansion": {\n          "version": "1.1.11",\n          "bundled": true,\n          "requires": {\n            "balanced-match": "^1.0.0",\n            "concat-map": "0.0.1"\n          }\n        },\n        "buffer-from": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "builtins": {\n          "version": "1.0.3",\n          "bundled": true\n        },\n        "byline": {\n          "version": "5.0.0",\n          "bundled": true\n        },\n        "byte-size": {\n          "version": "5.0.1",\n          "bundled": true\n        },\n        "cacache": {\n          "version": "11.3.2",\n          "bundled": true,\n          "requires": {\n            "bluebird": "^3.5.3",\n            "chownr": "^1.1.1",\n            "figgy-pudding": "^3.5.1",\n            "glob": "^7.1.3",\n            "graceful-fs": "^4.1.15",\n            "lru-cache": "^5.1.1",\n            "mississippi": "^3.0.0",\n            "mkdirp": "^0.5.1",\n            "move-concurrently": "^1.0.1",\n            "promise-inflight": "^1.0.1",\n            "rimraf": "^2.6.2",\n            "ssri": "^6.0.1",\n            "unique-filename": "^1.1.1",\n            "y18n": "^4.0.0"\n          },\n          "dependencies": {\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true\n            },\n            "lru-cache": {\n              "version": "5.1.1",\n              "bundled": true,\n              "requires": {\n                "yallist": "^3.0.2"\n              }\n            },\n            "unique-filename": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "unique-slug": "^2.0.0"\n              }\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true\n            }\n          }\n        },\n        "call-limit": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "camelcase": {\n          "version": "4.1.0",\n          "bundled": true\n        },\n        "capture-stack-trace": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "caseless": {\n          "version": "0.12.0",\n          "bundled": true\n        },\n        "chalk": {\n          "version": "2.4.1",\n          "bundled": true,\n          "requires": {\n            "ansi-styles": "^3.2.1",\n            "escape-string-regexp": "^1.0.5",\n            "supports-color": "^5.3.0"\n          }\n        },\n        "chownr": {\n          "version": "1.1.1",\n          "bundled": true\n        },\n        "ci-info": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "cidr-regex": {\n          "version": "2.0.10",\n          "bundled": true,\n          "requires": {\n            "ip-regex": "^2.1.0"\n          }\n        },\n        "cli-boxes": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "cli-columns": {\n          "version": "3.1.2",\n          "bundled": true,\n          "requires": {\n            "string-width": "^2.0.0",\n            "strip-ansi": "^3.0.1"\n          }\n        },\n        "cli-table3": {\n          "version": "0.5.1",\n          "bundled": true,\n          "requires": {\n            "colors": "^1.1.2",\n            "object-assign": "^4.1.0",\n            "string-width": "^2.1.1"\n          }\n        },\n        "cliui": {\n          "version": "4.1.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "^2.1.1",\n            "strip-ansi": "^4.0.0",\n            "wrap-ansi": "^2.0.0"\n          },\n          "dependencies": {\n            "ansi-regex": {\n              "version": "3.0.0",\n              "bundled": true\n            },\n            "strip-ansi": {\n              "version": "4.0.0",\n              "bundled": true,\n              "requires": {\n                "ansi-regex": "^3.0.0"\n              }\n            }\n          }\n        },\n        "clone": {\n          "version": "1.0.4",\n          "bundled": true\n        },\n        "cmd-shim": {\n          "version": "2.0.2",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "mkdirp": "~0.5.0"\n          }\n        },\n        "co": {\n          "version": "4.6.0",\n          "bundled": true\n        },\n        "code-point-at": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "color-convert": {\n          "version": "1.9.1",\n          "bundled": true,\n          "requires": {\n            "color-name": "^1.1.1"\n          }\n        },\n        "color-name": {\n          "version": "1.1.3",\n          "bundled": true\n        },\n        "colors": {\n          "version": "1.3.3",\n          "bundled": true,\n          "optional": true\n        },\n        "columnify": {\n          "version": "1.5.4",\n          "bundled": true,\n          "requires": {\n            "strip-ansi": "^3.0.0",\n            "wcwidth": "^1.0.0"\n          }\n        },\n        "combined-stream": {\n          "version": "1.0.6",\n          "bundled": true,\n          "requires": {\n            "delayed-stream": "~1.0.0"\n          }\n        },\n        "concat-map": {\n          "version": "0.0.1",\n          "bundled": true\n        },\n        "concat-stream": {\n          "version": "1.6.2",\n          "bundled": true,\n          "requires": {\n            "buffer-from": "^1.0.0",\n            "inherits": "^2.0.3",\n            "readable-stream": "^2.2.2",\n            "typedarray": "^0.0.6"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "config-chain": {\n          "version": "1.1.12",\n          "bundled": true,\n          "requires": {\n            "ini": "^1.3.4",\n            "proto-list": "~1.2.1"\n          }\n        },\n        "configstore": {\n          "version": "3.1.2",\n          "bundled": true,\n          "requires": {\n            "dot-prop": "^4.1.0",\n            "graceful-fs": "^4.1.2",\n            "make-dir": "^1.0.0",\n            "unique-string": "^1.0.0",\n            "write-file-atomic": "^2.0.0",\n            "xdg-basedir": "^3.0.0"\n          }\n        },\n        "console-control-strings": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "copy-concurrently": {\n          "version": "1.0.5",\n          "bundled": true,\n          "requires": {\n            "aproba": "^1.1.1",\n            "fs-write-stream-atomic": "^1.0.8",\n            "iferr": "^0.1.5",\n            "mkdirp": "^0.5.1",\n            "rimraf": "^2.5.4",\n            "run-queue": "^1.0.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            },\n            "iferr": {\n              "version": "0.1.5",\n              "bundled": true\n            }\n          }\n        },\n        "core-util-is": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "create-error-class": {\n          "version": "3.0.2",\n          "bundled": true,\n          "requires": {\n            "capture-stack-trace": "^1.0.0"\n          }\n        },\n        "cross-spawn": {\n          "version": "5.1.0",\n          "bundled": true,\n          "requires": {\n            "lru-cache": "^4.0.1",\n            "shebang-command": "^1.2.0",\n            "which": "^1.2.9"\n          }\n        },\n        "crypto-random-string": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "cyclist": {\n          "version": "0.2.2",\n          "bundled": true\n        },\n        "dashdash": {\n          "version": "1.14.1",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "^1.0.0"\n          }\n        },\n        "debug": {\n          "version": "3.1.0",\n          "bundled": true,\n          "requires": {\n            "ms": "2.0.0"\n          },\n          "dependencies": {\n            "ms": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "debuglog": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "decamelize": {\n          "version": "1.2.0",\n          "bundled": true\n        },\n        "decode-uri-component": {\n          "version": "0.2.0",\n          "bundled": true\n        },\n        "deep-extend": {\n          "version": "0.5.1",\n          "bundled": true\n        },\n        "defaults": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "clone": "^1.0.2"\n          }\n        },\n        "delayed-stream": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "delegates": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "detect-indent": {\n          "version": "5.0.0",\n          "bundled": true\n        },\n        "detect-newline": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "dezalgo": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "asap": "^2.0.0",\n            "wrappy": "1"\n          }\n        },\n        "dot-prop": {\n          "version": "4.2.0",\n          "bundled": true,\n          "requires": {\n            "is-obj": "^1.0.0"\n          }\n        },\n        "dotenv": {\n          "version": "5.0.1",\n          "bundled": true\n        },\n        "duplexer3": {\n          "version": "0.1.4",\n          "bundled": true\n        },\n        "duplexify": {\n          "version": "3.6.0",\n          "bundled": true,\n          "requires": {\n            "end-of-stream": "^1.0.0",\n            "inherits": "^2.0.1",\n            "readable-stream": "^2.0.0",\n            "stream-shift": "^1.0.0"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "ecc-jsbn": {\n          "version": "0.1.2",\n          "bundled": true,\n          "optional": true,\n          "requires": {\n            "jsbn": "~0.1.0",\n            "safer-buffer": "^2.1.0"\n          }\n        },\n        "editor": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "encoding": {\n          "version": "0.1.12",\n          "bundled": true,\n          "requires": {\n            "iconv-lite": "~0.4.13"\n          }\n        },\n        "end-of-stream": {\n          "version": "1.4.1",\n          "bundled": true,\n          "requires": {\n            "once": "^1.4.0"\n          }\n        },\n        "err-code": {\n          "version": "1.1.2",\n          "bundled": true\n        },\n        "errno": {\n          "version": "0.1.7",\n          "bundled": true,\n          "requires": {\n            "prr": "~1.0.1"\n          }\n        },\n        "es6-promise": {\n          "version": "4.2.6",\n          "bundled": true\n        },\n        "es6-promisify": {\n          "version": "5.0.0",\n          "bundled": true,\n          "requires": {\n            "es6-promise": "^4.0.3"\n          }\n        },\n        "escape-string-regexp": {\n          "version": "1.0.5",\n          "bundled": true\n        },\n        "execa": {\n          "version": "0.7.0",\n          "bundled": true,\n          "requires": {\n            "cross-spawn": "^5.0.1",\n            "get-stream": "^3.0.0",\n            "is-stream": "^1.1.0",\n            "npm-run-path": "^2.0.0",\n            "p-finally": "^1.0.0",\n            "signal-exit": "^3.0.0",\n            "strip-eof": "^1.0.0"\n          },\n          "dependencies": {\n            "get-stream": {\n              "version": "3.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "extend": {\n          "version": "3.0.2",\n          "bundled": true\n        },\n        "extsprintf": {\n          "version": "1.3.0",\n          "bundled": true\n        },\n        "fast-deep-equal": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "fast-json-stable-stringify": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "figgy-pudding": {\n          "version": "3.5.1",\n          "bundled": true\n        },\n        "find-npm-prefix": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "find-up": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "locate-path": "^2.0.0"\n          }\n        },\n        "flush-write-stream": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "inherits": "^2.0.1",\n            "readable-stream": "^2.0.4"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "forever-agent": {\n          "version": "0.6.1",\n          "bundled": true\n        },\n        "form-data": {\n          "version": "2.3.2",\n          "bundled": true,\n          "requires": {\n            "asynckit": "^0.4.0",\n            "combined-stream": "1.0.6",\n            "mime-types": "^2.1.12"\n          }\n        },\n        "from2": {\n          "version": "2.3.0",\n          "bundled": true,\n          "requires": {\n            "inherits": "^2.0.1",\n            "readable-stream": "^2.0.0"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "fs-minipass": {\n          "version": "1.2.5",\n          "bundled": true,\n          "requires": {\n            "minipass": "^2.2.1"\n          }\n        },\n        "fs-vacuum": {\n          "version": "1.2.10",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "path-is-inside": "^1.0.1",\n            "rimraf": "^2.5.2"\n          }\n        },\n        "fs-write-stream-atomic": {\n          "version": "1.0.10",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "iferr": "^0.1.5",\n            "imurmurhash": "^0.1.4",\n            "readable-stream": "1 || 2"\n          },\n          "dependencies": {\n            "iferr": {\n              "version": "0.1.5",\n              "bundled": true\n            },\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "fs.realpath": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "fstream": {\n          "version": "1.0.11",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "inherits": "~2.0.0",\n            "mkdirp": ">=0.5 0",\n            "rimraf": "2"\n          }\n        },\n        "gauge": {\n          "version": "2.7.4",\n          "bundled": true,\n          "requires": {\n            "aproba": "^1.0.3",\n            "console-control-strings": "^1.0.0",\n            "has-unicode": "^2.0.0",\n            "object-assign": "^4.1.0",\n            "signal-exit": "^3.0.0",\n            "string-width": "^1.0.1",\n            "strip-ansi": "^3.0.1",\n            "wide-align": "^1.1.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            },\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "requires": {\n                "code-point-at": "^1.0.0",\n                "is-fullwidth-code-point": "^1.0.0",\n                "strip-ansi": "^3.0.0"\n              }\n            }\n          }\n        },\n        "genfun": {\n          "version": "5.0.0",\n          "bundled": true\n        },\n        "gentle-fs": {\n          "version": "2.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "^1.1.2",\n            "fs-vacuum": "^1.2.10",\n            "graceful-fs": "^4.1.11",\n            "iferr": "^0.1.5",\n            "mkdirp": "^0.5.1",\n            "path-is-inside": "^1.0.2",\n            "read-cmd-shim": "^1.0.1",\n            "slide": "^1.1.6"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            },\n            "iferr": {\n              "version": "0.1.5",\n              "bundled": true\n            }\n          }\n        },\n        "get-caller-file": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "get-stream": {\n          "version": "4.1.0",\n          "bundled": true,\n          "requires": {\n            "pump": "^3.0.0"\n          }\n        },\n        "getpass": {\n          "version": "0.1.7",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "^1.0.0"\n          }\n        },\n        "glob": {\n          "version": "7.1.3",\n          "bundled": true,\n          "requires": {\n            "fs.realpath": "^1.0.0",\n            "inflight": "^1.0.4",\n            "inherits": "2",\n            "minimatch": "^3.0.4",\n            "once": "^1.3.0",\n            "path-is-absolute": "^1.0.0"\n          }\n        },\n        "global-dirs": {\n          "version": "0.1.1",\n          "bundled": true,\n          "requires": {\n            "ini": "^1.3.4"\n          }\n        },\n        "got": {\n          "version": "6.7.1",\n          "bundled": true,\n          "requires": {\n            "create-error-class": "^3.0.0",\n            "duplexer3": "^0.1.4",\n            "get-stream": "^3.0.0",\n            "is-redirect": "^1.0.0",\n            "is-retry-allowed": "^1.0.0",\n            "is-stream": "^1.0.0",\n            "lowercase-keys": "^1.0.0",\n            "safe-buffer": "^5.0.1",\n            "timed-out": "^4.0.0",\n            "unzip-response": "^2.0.1",\n            "url-parse-lax": "^1.0.0"\n          },\n          "dependencies": {\n            "get-stream": {\n              "version": "3.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "graceful-fs": {\n          "version": "4.1.15",\n          "bundled": true\n        },\n        "har-schema": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "har-validator": {\n          "version": "5.1.0",\n          "bundled": true,\n          "requires": {\n            "ajv": "^5.3.0",\n            "har-schema": "^2.0.0"\n          }\n        },\n        "has-flag": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "has-unicode": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "hosted-git-info": {\n          "version": "2.7.1",\n          "bundled": true\n        },\n        "http-cache-semantics": {\n          "version": "3.8.1",\n          "bundled": true\n        },\n        "http-proxy-agent": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "agent-base": "4",\n            "debug": "3.1.0"\n          }\n        },\n        "http-signature": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "^1.0.0",\n            "jsprim": "^1.2.2",\n            "sshpk": "^1.7.0"\n          }\n        },\n        "https-proxy-agent": {\n          "version": "2.2.1",\n          "bundled": true,\n          "requires": {\n            "agent-base": "^4.1.0",\n            "debug": "^3.1.0"\n          }\n        },\n        "humanize-ms": {\n          "version": "1.2.1",\n          "bundled": true,\n          "requires": {\n            "ms": "^2.0.0"\n          }\n        },\n        "iconv-lite": {\n          "version": "0.4.23",\n          "bundled": true,\n          "requires": {\n            "safer-buffer": ">= 2.1.2 < 3"\n          }\n        },\n        "iferr": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "ignore-walk": {\n          "version": "3.0.1",\n          "bundled": true,\n          "requires": {\n            "minimatch": "^3.0.4"\n          }\n        },\n        "import-lazy": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "imurmurhash": {\n          "version": "0.1.4",\n          "bundled": true\n        },\n        "inflight": {\n          "version": "1.0.6",\n          "bundled": true,\n          "requires": {\n            "once": "^1.3.0",\n            "wrappy": "1"\n          }\n        },\n        "inherits": {\n          "version": "2.0.3",\n          "bundled": true\n        },\n        "ini": {\n          "version": "1.3.5",\n          "bundled": true\n        },\n        "init-package-json": {\n          "version": "1.10.3",\n          "bundled": true,\n          "requires": {\n            "glob": "^7.1.1",\n            "npm-package-arg": "^4.0.0 || ^5.0.0 || ^6.0.0",\n            "promzard": "^0.3.0",\n            "read": "~1.0.1",\n            "read-package-json": "1 || 2",\n            "semver": "2.x || 3.x || 4 || 5",\n            "validate-npm-package-license": "^3.0.1",\n            "validate-npm-package-name": "^3.0.0"\n          }\n        },\n        "invert-kv": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "ip": {\n          "version": "1.1.5",\n          "bundled": true\n        },\n        "ip-regex": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "is-ci": {\n          "version": "1.1.0",\n          "bundled": true,\n          "requires": {\n            "ci-info": "^1.0.0"\n          },\n          "dependencies": {\n            "ci-info": {\n              "version": "1.6.0",\n              "bundled": true\n            }\n          }\n        },\n        "is-cidr": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "cidr-regex": "^2.0.10"\n          }\n        },\n        "is-fullwidth-code-point": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "number-is-nan": "^1.0.0"\n          }\n        },\n        "is-installed-globally": {\n          "version": "0.1.0",\n          "bundled": true,\n          "requires": {\n            "global-dirs": "^0.1.0",\n            "is-path-inside": "^1.0.0"\n          }\n        },\n        "is-npm": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "is-obj": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "is-path-inside": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "path-is-inside": "^1.0.1"\n          }\n        },\n        "is-redirect": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "is-retry-allowed": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "is-stream": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "is-typedarray": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "isarray": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "isexe": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "isstream": {\n          "version": "0.1.2",\n          "bundled": true\n        },\n        "jsbn": {\n          "version": "0.1.1",\n          "bundled": true,\n          "optional": true\n        },\n        "json-parse-better-errors": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "json-schema": {\n          "version": "0.2.3",\n          "bundled": true\n        },\n        "json-schema-traverse": {\n          "version": "0.3.1",\n          "bundled": true\n        },\n        "json-stringify-safe": {\n          "version": "5.0.1",\n          "bundled": true\n        },\n        "jsonparse": {\n          "version": "1.3.1",\n          "bundled": true\n        },\n        "jsprim": {\n          "version": "1.4.1",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "1.0.0",\n            "extsprintf": "1.3.0",\n            "json-schema": "0.2.3",\n            "verror": "1.10.0"\n          }\n        },\n        "latest-version": {\n          "version": "3.1.0",\n          "bundled": true,\n          "requires": {\n            "package-json": "^4.0.0"\n          }\n        },\n        "lazy-property": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "lcid": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "invert-kv": "^1.0.0"\n          }\n        },\n        "libcipm": {\n          "version": "3.0.3",\n          "bundled": true,\n          "requires": {\n            "bin-links": "^1.1.2",\n            "bluebird": "^3.5.1",\n            "figgy-pudding": "^3.5.1",\n            "find-npm-prefix": "^1.0.2",\n            "graceful-fs": "^4.1.11",\n            "ini": "^1.3.5",\n            "lock-verify": "^2.0.2",\n            "mkdirp": "^0.5.1",\n            "npm-lifecycle": "^2.0.3",\n            "npm-logical-tree": "^1.2.1",\n            "npm-package-arg": "^6.1.0",\n            "pacote": "^9.1.0",\n            "read-package-json": "^2.0.13",\n            "rimraf": "^2.6.2",\n            "worker-farm": "^1.6.0"\n          }\n        },\n        "libnpm": {\n          "version": "2.0.1",\n          "bundled": true,\n          "requires": {\n            "bin-links": "^1.1.2",\n            "bluebird": "^3.5.3",\n            "find-npm-prefix": "^1.0.2",\n            "libnpmaccess": "^3.0.1",\n            "libnpmconfig": "^1.2.1",\n            "libnpmhook": "^5.0.2",\n            "libnpmorg": "^1.0.0",\n            "libnpmpublish": "^1.1.0",\n            "libnpmsearch": "^2.0.0",\n            "libnpmteam": "^1.0.1",\n            "lock-verify": "^2.0.2",\n            "npm-lifecycle": "^2.1.0",\n            "npm-logical-tree": "^1.2.1",\n            "npm-package-arg": "^6.1.0",\n            "npm-profile": "^4.0.1",\n            "npm-registry-fetch": "^3.8.0",\n            "npmlog": "^4.1.2",\n            "pacote": "^9.2.3",\n            "read-package-json": "^2.0.13",\n            "stringify-package": "^1.0.0"\n          }\n        },\n        "libnpmaccess": {\n          "version": "3.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "^2.0.0",\n            "get-stream": "^4.0.0",\n            "npm-package-arg": "^6.1.0",\n            "npm-registry-fetch": "^3.8.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpmconfig": {\n          "version": "1.2.1",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "^3.5.1",\n            "find-up": "^3.0.0",\n            "ini": "^1.3.5"\n          },\n          "dependencies": {\n            "find-up": {\n              "version": "3.0.0",\n              "bundled": true,\n              "requires": {\n                "locate-path": "^3.0.0"\n              }\n            },\n            "locate-path": {\n              "version": "3.0.0",\n              "bundled": true,\n              "requires": {\n                "p-locate": "^3.0.0",\n                "path-exists": "^3.0.0"\n              }\n            },\n            "p-limit": {\n              "version": "2.1.0",\n              "bundled": true,\n              "requires": {\n                "p-try": "^2.0.0"\n              }\n            },\n            "p-locate": {\n              "version": "3.0.0",\n              "bundled": true,\n              "requires": {\n                "p-limit": "^2.0.0"\n              }\n            },\n            "p-try": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpmhook": {\n          "version": "5.0.2",\n          "bundled": true,\n          "requires": {\n            "aproba": "^2.0.0",\n            "figgy-pudding": "^3.4.1",\n            "get-stream": "^4.0.0",\n            "npm-registry-fetch": "^3.8.0"\n          }\n        },\n        "libnpmorg": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "aproba": "^2.0.0",\n            "figgy-pudding": "^3.4.1",\n            "get-stream": "^4.0.0",\n            "npm-registry-fetch": "^3.8.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpmpublish": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "^2.0.0",\n            "figgy-pudding": "^3.5.1",\n            "get-stream": "^4.0.0",\n            "lodash.clonedeep": "^4.5.0",\n            "normalize-package-data": "^2.4.0",\n            "npm-package-arg": "^6.1.0",\n            "npm-registry-fetch": "^3.8.0",\n            "semver": "^5.5.1",\n            "ssri": "^6.0.1"\n          }\n        },\n        "libnpmsearch": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "^3.5.1",\n            "get-stream": "^4.0.0",\n            "npm-registry-fetch": "^3.8.0"\n          }\n        },\n        "libnpmteam": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "^2.0.0",\n            "figgy-pudding": "^3.4.1",\n            "get-stream": "^4.0.0",\n            "npm-registry-fetch": "^3.8.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpx": {\n          "version": "10.2.0",\n          "bundled": true,\n          "requires": {\n            "dotenv": "^5.0.1",\n            "npm-package-arg": "^6.0.0",\n            "rimraf": "^2.6.2",\n            "safe-buffer": "^5.1.0",\n            "update-notifier": "^2.3.0",\n            "which": "^1.3.0",\n            "y18n": "^4.0.0",\n            "yargs": "^11.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "p-locate": "^2.0.0",\n            "path-exists": "^3.0.0"\n          }\n        },\n        "lock-verify": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "npm-package-arg": "^6.1.0",\n            "semver": "^5.4.1"\n          }\n        },\n        "lockfile": {\n          "version": "1.0.4",\n          "bundled": true,\n          "requires": {\n            "signal-exit": "^3.0.2"\n          }\n        },\n        "lodash._baseindexof": {\n          "version": "3.1.0",\n          "bundled": true\n        },\n        "lodash._baseuniq": {\n          "version": "4.6.0",\n          "bundled": true,\n          "requires": {\n            "lodash._createset": "~4.0.0",\n            "lodash._root": "~3.0.0"\n          }\n        },\n        "lodash._bindcallback": {\n          "version": "3.0.1",\n          "bundled": true\n        },\n        "lodash._cacheindexof": {\n          "version": "3.0.2",\n          "bundled": true\n        },\n        "lodash._createcache": {\n          "version": "3.1.2",\n          "bundled": true,\n          "requires": {\n            "lodash._getnative": "^3.0.0"\n          }\n        },\n        "lodash._createset": {\n          "version": "4.0.3",\n          "bundled": true\n        },\n        "lodash._getnative": {\n          "version": "3.9.1",\n          "bundled": true\n        },\n        "lodash._root": {\n          "version": "3.0.1",\n          "bundled": true\n        },\n        "lodash.clonedeep": {\n          "version": "4.5.0",\n          "bundled": true\n        },\n        "lodash.restparam": {\n          "version": "3.6.1",\n          "bundled": true\n        },\n        "lodash.union": {\n          "version": "4.6.0",\n          "bundled": true\n        },\n        "lodash.uniq": {\n          "version": "4.5.0",\n          "bundled": true\n        },\n        "lodash.without": {\n          "version": "4.4.0",\n          "bundled": true\n        },\n        "lowercase-keys": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "lru-cache": {\n          "version": "4.1.5",\n          "bundled": true,\n          "requires": {\n            "pseudomap": "^1.0.2",\n            "yallist": "^2.1.2"\n          }\n        },\n        "make-dir": {\n          "version": "1.3.0",\n          "bundled": true,\n          "requires": {\n            "pify": "^3.0.0"\n          }\n        },\n        "make-fetch-happen": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "agentkeepalive": "^3.4.1",\n            "cacache": "^11.0.1",\n            "http-cache-semantics": "^3.8.1",\n            "http-proxy-agent": "^2.1.0",\n            "https-proxy-agent": "^2.2.1",\n            "lru-cache": "^4.1.2",\n            "mississippi": "^3.0.0",\n            "node-fetch-npm": "^2.0.2",\n            "promise-retry": "^1.1.1",\n            "socks-proxy-agent": "^4.0.0",\n            "ssri": "^6.0.0"\n          }\n        },\n        "meant": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "mem": {\n          "version": "1.1.0",\n          "bundled": true,\n          "requires": {\n            "mimic-fn": "^1.0.0"\n          }\n        },\n        "mime-db": {\n          "version": "1.35.0",\n          "bundled": true\n        },\n        "mime-types": {\n          "version": "2.1.19",\n          "bundled": true,\n          "requires": {\n            "mime-db": "~1.35.0"\n          }\n        },\n        "mimic-fn": {\n          "version": "1.2.0",\n          "bundled": true\n        },\n        "minimatch": {\n          "version": "3.0.4",\n          "bundled": true,\n          "requires": {\n            "brace-expansion": "^1.1.7"\n          }\n        },\n        "minimist": {\n          "version": "0.0.8",\n          "bundled": true\n        },\n        "minipass": {\n          "version": "2.3.3",\n          "bundled": true,\n          "requires": {\n            "safe-buffer": "^5.1.2",\n            "yallist": "^3.0.0"\n          },\n          "dependencies": {\n            "yallist": {\n              "version": "3.0.2",\n              "bundled": true\n            }\n          }\n        },\n        "minizlib": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "minipass": "^2.2.1"\n          }\n        },\n        "mississippi": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "concat-stream": "^1.5.0",\n            "duplexify": "^3.4.2",\n            "end-of-stream": "^1.1.0",\n            "flush-write-stream": "^1.0.0",\n            "from2": "^2.1.0",\n            "parallel-transform": "^1.1.0",\n            "pump": "^3.0.0",\n            "pumpify": "^1.3.3",\n            "stream-each": "^1.1.0",\n            "through2": "^2.0.0"\n          }\n        },\n        "mkdirp": {\n          "version": "0.5.1",\n          "bundled": true,\n          "requires": {\n            "minimist": "0.0.8"\n          }\n        },\n        "move-concurrently": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "^1.1.1",\n            "copy-concurrently": "^1.0.0",\n            "fs-write-stream-atomic": "^1.0.8",\n            "mkdirp": "^0.5.1",\n            "rimraf": "^2.5.4",\n            "run-queue": "^1.0.3"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            }\n          }\n        },\n        "ms": {\n          "version": "2.1.1",\n          "bundled": true\n        },\n        "mute-stream": {\n          "version": "0.0.7",\n          "bundled": true\n        },\n        "node-fetch-npm": {\n          "version": "2.0.2",\n          "bundled": true,\n          "requires": {\n            "encoding": "^0.1.11",\n            "json-parse-better-errors": "^1.0.0",\n            "safe-buffer": "^5.1.1"\n          }\n        },\n        "node-gyp": {\n          "version": "3.8.0",\n          "bundled": true,\n          "requires": {\n            "fstream": "^1.0.0",\n            "glob": "^7.0.3",\n            "graceful-fs": "^4.1.2",\n            "mkdirp": "^0.5.0",\n            "nopt": "2 || 3",\n            "npmlog": "0 || 1 || 2 || 3 || 4",\n            "osenv": "0",\n            "request": "^2.87.0",\n            "rimraf": "2",\n            "semver": "~5.3.0",\n            "tar": "^2.0.0",\n            "which": "1"\n          },\n          "dependencies": {\n            "nopt": {\n              "version": "3.0.6",\n              "bundled": true,\n              "requires": {\n                "abbrev": "1"\n              }\n            },\n            "semver": {\n              "version": "5.3.0",\n              "bundled": true\n            },\n            "tar": {\n              "version": "2.2.1",\n              "bundled": true,\n              "requires": {\n                "block-stream": "*",\n                "fstream": "^1.0.2",\n                "inherits": "2"\n              }\n            }\n          }\n        },\n        "nopt": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "abbrev": "1",\n            "osenv": "^0.1.4"\n          }\n        },\n        "normalize-package-data": {\n          "version": "2.5.0",\n          "bundled": true,\n          "requires": {\n            "hosted-git-info": "^2.1.4",\n            "resolve": "^1.10.0",\n            "semver": "2 || 3 || 4 || 5",\n            "validate-npm-package-license": "^3.0.1"\n          },\n          "dependencies": {\n            "resolve": {\n              "version": "1.10.0",\n              "bundled": true,\n              "requires": {\n                "path-parse": "^1.0.6"\n              }\n            }\n          }\n        },\n        "npm-audit-report": {\n          "version": "1.3.2",\n          "bundled": true,\n          "requires": {\n            "cli-table3": "^0.5.0",\n            "console-control-strings": "^1.1.0"\n          }\n        },\n        "npm-bundled": {\n          "version": "1.0.6",\n          "bundled": true\n        },\n        "npm-cache-filename": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "npm-install-checks": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "semver": "^2.3.0 || 3.x || 4 || 5"\n          }\n        },\n        "npm-lifecycle": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "byline": "^5.0.0",\n            "graceful-fs": "^4.1.11",\n            "node-gyp": "^3.8.0",\n            "resolve-from": "^4.0.0",\n            "slide": "^1.1.6",\n            "uid-number": "0.0.6",\n            "umask": "^1.1.0",\n            "which": "^1.3.1"\n          }\n        },\n        "npm-logical-tree": {\n          "version": "1.2.1",\n          "bundled": true\n        },\n        "npm-package-arg": {\n          "version": "6.1.0",\n          "bundled": true,\n          "requires": {\n            "hosted-git-info": "^2.6.0",\n            "osenv": "^0.1.5",\n            "semver": "^5.5.0",\n            "validate-npm-package-name": "^3.0.0"\n          }\n        },\n        "npm-packlist": {\n          "version": "1.4.1",\n          "bundled": true,\n          "requires": {\n            "ignore-walk": "^3.0.1",\n            "npm-bundled": "^1.0.1"\n          }\n        },\n        "npm-pick-manifest": {\n          "version": "2.2.3",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "^3.5.1",\n            "npm-package-arg": "^6.0.0",\n            "semver": "^5.4.1"\n          }\n        },\n        "npm-profile": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "^1.1.2 || 2",\n            "figgy-pudding": "^3.4.1",\n            "npm-registry-fetch": "^3.8.0"\n          }\n        },\n        "npm-registry-fetch": {\n          "version": "3.9.0",\n          "bundled": true,\n          "requires": {\n            "JSONStream": "^1.3.4",\n            "bluebird": "^3.5.1",\n            "figgy-pudding": "^3.4.1",\n            "lru-cache": "^4.1.3",\n            "make-fetch-happen": "^4.0.1",\n            "npm-package-arg": "^6.1.0"\n          }\n        },\n        "npm-run-path": {\n          "version": "2.0.2",\n          "bundled": true,\n          "requires": {\n            "path-key": "^2.0.0"\n          }\n        },\n        "npm-user-validate": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "npmlog": {\n          "version": "4.1.2",\n          "bundled": true,\n          "requires": {\n            "are-we-there-yet": "~1.1.2",\n            "console-control-strings": "~1.1.0",\n            "gauge": "~2.7.3",\n            "set-blocking": "~2.0.0"\n          }\n        },\n        "number-is-nan": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "oauth-sign": {\n          "version": "0.9.0",\n          "bundled": true\n        },\n        "object-assign": {\n          "version": "4.1.1",\n          "bundled": true\n        },\n        "once": {\n          "version": "1.4.0",\n          "bundled": true,\n          "requires": {\n            "wrappy": "1"\n          }\n        },\n        "opener": {\n          "version": "1.5.1",\n          "bundled": true\n        },\n        "os-homedir": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "os-locale": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "execa": "^0.7.0",\n            "lcid": "^1.0.0",\n            "mem": "^1.1.0"\n          }\n        },\n        "os-tmpdir": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "osenv": {\n          "version": "0.1.5",\n          "bundled": true,\n          "requires": {\n            "os-homedir": "^1.0.0",\n            "os-tmpdir": "^1.0.0"\n          }\n        },\n        "p-finally": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "p-limit": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "p-try": "^1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "p-limit": "^1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "package-json": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "got": "^6.7.1",\n            "registry-auth-token": "^3.0.1",\n            "registry-url": "^3.0.3",\n            "semver": "^5.1.0"\n          }\n        },\n        "pacote": {\n          "version": "9.5.0",\n          "bundled": true,\n          "requires": {\n            "bluebird": "^3.5.3",\n            "cacache": "^11.3.2",\n            "figgy-pudding": "^3.5.1",\n            "get-stream": "^4.1.0",\n            "glob": "^7.1.3",\n            "lru-cache": "^5.1.1",\n            "make-fetch-happen": "^4.0.1",\n            "minimatch": "^3.0.4",\n            "minipass": "^2.3.5",\n            "mississippi": "^3.0.0",\n            "mkdirp": "^0.5.1",\n            "normalize-package-data": "^2.4.0",\n            "npm-package-arg": "^6.1.0",\n            "npm-packlist": "^1.1.12",\n            "npm-pick-manifest": "^2.2.3",\n            "npm-registry-fetch": "^3.8.0",\n            "osenv": "^0.1.5",\n            "promise-inflight": "^1.0.1",\n            "promise-retry": "^1.1.1",\n            "protoduck": "^5.0.1",\n            "rimraf": "^2.6.2",\n            "safe-buffer": "^5.1.2",\n            "semver": "^5.6.0",\n            "ssri": "^6.0.1",\n            "tar": "^4.4.8",\n            "unique-filename": "^1.1.1",\n            "which": "^1.3.1"\n          },\n          "dependencies": {\n            "lru-cache": {\n              "version": "5.1.1",\n              "bundled": true,\n              "requires": {\n                "yallist": "^3.0.2"\n              }\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "^5.1.2",\n                "yallist": "^3.0.0"\n              }\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true\n            }\n          }\n        },\n        "parallel-transform": {\n          "version": "1.1.0",\n          "bundled": true,\n          "requires": {\n            "cyclist": "~0.2.2",\n            "inherits": "^2.0.3",\n            "readable-stream": "^2.1.5"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "path-exists": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "path-is-absolute": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "path-is-inside": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "path-key": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "path-parse": {\n          "version": "1.0.6",\n          "bundled": true\n        },\n        "performance-now": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "pify": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "prepend-http": {\n          "version": "1.0.4",\n          "bundled": true\n        },\n        "process-nextick-args": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "promise-inflight": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "promise-retry": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "err-code": "^1.0.0",\n            "retry": "^0.10.0"\n          },\n          "dependencies": {\n            "retry": {\n              "version": "0.10.1",\n              "bundled": true\n            }\n          }\n        },\n        "promzard": {\n          "version": "0.3.0",\n          "bundled": true,\n          "requires": {\n            "read": "1"\n          }\n        },\n        "proto-list": {\n          "version": "1.2.4",\n          "bundled": true\n        },\n        "protoduck": {\n          "version": "5.0.1",\n          "bundled": true,\n          "requires": {\n            "genfun": "^5.0.0"\n          }\n        },\n        "prr": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "pseudomap": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "psl": {\n          "version": "1.1.29",\n          "bundled": true\n        },\n        "pump": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "end-of-stream": "^1.1.0",\n            "once": "^1.3.1"\n          }\n        },\n        "pumpify": {\n          "version": "1.5.1",\n          "bundled": true,\n          "requires": {\n            "duplexify": "^3.6.0",\n            "inherits": "^2.0.3",\n            "pump": "^2.0.0"\n          },\n          "dependencies": {\n            "pump": {\n              "version": "2.0.1",\n              "bundled": true,\n              "requires": {\n                "end-of-stream": "^1.1.0",\n                "once": "^1.3.1"\n              }\n            }\n          }\n        },\n        "punycode": {\n          "version": "1.4.1",\n          "bundled": true\n        },\n        "qrcode-terminal": {\n          "version": "0.12.0",\n          "bundled": true\n        },\n        "qs": {\n          "version": "6.5.2",\n          "bundled": true\n        },\n        "query-string": {\n          "version": "6.2.0",\n          "bundled": true,\n          "requires": {\n            "decode-uri-component": "^0.2.0",\n            "strict-uri-encode": "^2.0.0"\n          }\n        },\n        "qw": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "rc": {\n          "version": "1.2.7",\n          "bundled": true,\n          "requires": {\n            "deep-extend": "^0.5.1",\n            "ini": "~1.3.0",\n            "minimist": "^1.2.0",\n            "strip-json-comments": "~2.0.1"\n          },\n          "dependencies": {\n            "minimist": {\n              "version": "1.2.0",\n              "bundled": true\n            }\n          }\n        },\n        "read": {\n          "version": "1.0.7",\n          "bundled": true,\n          "requires": {\n            "mute-stream": "~0.0.4"\n          }\n        },\n        "read-cmd-shim": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.2"\n          }\n        },\n        "read-installed": {\n          "version": "4.0.3",\n          "bundled": true,\n          "requires": {\n            "debuglog": "^1.0.1",\n            "graceful-fs": "^4.1.2",\n            "read-package-json": "^2.0.0",\n            "readdir-scoped-modules": "^1.0.0",\n            "semver": "2 || 3 || 4 || 5",\n            "slide": "~1.1.3",\n            "util-extend": "^1.0.1"\n          }\n        },\n        "read-package-json": {\n          "version": "2.0.13",\n          "bundled": true,\n          "requires": {\n            "glob": "^7.1.1",\n            "graceful-fs": "^4.1.2",\n            "json-parse-better-errors": "^1.0.1",\n            "normalize-package-data": "^2.0.0",\n            "slash": "^1.0.0"\n          }\n        },\n        "read-package-tree": {\n          "version": "5.2.2",\n          "bundled": true,\n          "requires": {\n            "debuglog": "^1.0.1",\n            "dezalgo": "^1.0.0",\n            "once": "^1.3.0",\n            "read-package-json": "^2.0.0",\n            "readdir-scoped-modules": "^1.0.0"\n          }\n        },\n        "readable-stream": {\n          "version": "3.1.1",\n          "bundled": true,\n          "requires": {\n            "inherits": "^2.0.3",\n            "string_decoder": "^1.1.1",\n            "util-deprecate": "^1.0.1"\n          }\n        },\n        "readdir-scoped-modules": {\n          "version": "1.0.2",\n          "bundled": true,\n          "requires": {\n            "debuglog": "^1.0.1",\n            "dezalgo": "^1.0.0",\n            "graceful-fs": "^4.1.2",\n            "once": "^1.3.0"\n          }\n        },\n        "registry-auth-token": {\n          "version": "3.3.2",\n          "bundled": true,\n          "requires": {\n            "rc": "^1.1.6",\n            "safe-buffer": "^5.0.1"\n          }\n        },\n        "registry-url": {\n          "version": "3.1.0",\n          "bundled": true,\n          "requires": {\n            "rc": "^1.0.1"\n          }\n        },\n        "request": {\n          "version": "2.88.0",\n          "bundled": true,\n          "requires": {\n            "aws-sign2": "~0.7.0",\n            "aws4": "^1.8.0",\n            "caseless": "~0.12.0",\n            "combined-stream": "~1.0.6",\n            "extend": "~3.0.2",\n            "forever-agent": "~0.6.1",\n            "form-data": "~2.3.2",\n            "har-validator": "~5.1.0",\n            "http-signature": "~1.2.0",\n            "is-typedarray": "~1.0.0",\n            "isstream": "~0.1.2",\n            "json-stringify-safe": "~5.0.1",\n            "mime-types": "~2.1.19",\n            "oauth-sign": "~0.9.0",\n            "performance-now": "^2.1.0",\n            "qs": "~6.5.2",\n            "safe-buffer": "^5.1.2",\n            "tough-cookie": "~2.4.3",\n            "tunnel-agent": "^0.6.0",\n            "uuid": "^3.3.2"\n          }\n        },\n        "require-directory": {\n          "version": "2.1.1",\n          "bundled": true\n        },\n        "require-main-filename": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "resolve-from": {\n          "version": "4.0.0",\n          "bundled": true\n        },\n        "retry": {\n          "version": "0.12.0",\n          "bundled": true\n        },\n        "rimraf": {\n          "version": "2.6.3",\n          "bundled": true,\n          "requires": {\n            "glob": "^7.1.3"\n          }\n        },\n        "run-queue": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "aproba": "^1.1.1"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            }\n          }\n        },\n        "safe-buffer": {\n          "version": "5.1.2",\n          "bundled": true\n        },\n        "safer-buffer": {\n          "version": "2.1.2",\n          "bundled": true\n        },\n        "semver": {\n          "version": "5.6.0",\n          "bundled": true\n        },\n        "semver-diff": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "semver": "^5.0.3"\n          }\n        },\n        "set-blocking": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "sha": {\n          "version": "2.0.1",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "readable-stream": "^2.0.2"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "shebang-command": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "shebang-regex": "^1.0.0"\n          }\n        },\n        "shebang-regex": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "signal-exit": {\n          "version": "3.0.2",\n          "bundled": true\n        },\n        "slash": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "slide": {\n          "version": "1.1.6",\n          "bundled": true\n        },\n        "smart-buffer": {\n          "version": "4.0.1",\n          "bundled": true\n        },\n        "socks": {\n          "version": "2.2.0",\n          "bundled": true,\n          "requires": {\n            "ip": "^1.1.5",\n            "smart-buffer": "^4.0.1"\n          }\n        },\n        "socks-proxy-agent": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "agent-base": "~4.2.0",\n            "socks": "~2.2.0"\n          }\n        },\n        "sorted-object": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "sorted-union-stream": {\n          "version": "2.1.3",\n          "bundled": true,\n          "requires": {\n            "from2": "^1.3.0",\n            "stream-iterate": "^1.1.0"\n          },\n          "dependencies": {\n            "from2": {\n              "version": "1.3.0",\n              "bundled": true,\n              "requires": {\n                "inherits": "~2.0.1",\n                "readable-stream": "~1.1.10"\n              }\n            },\n            "isarray": {\n              "version": "0.0.1",\n              "bundled": true\n            },\n            "readable-stream": {\n              "version": "1.1.14",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.1",\n                "isarray": "0.0.1",\n                "string_decoder": "~0.10.x"\n              }\n            },\n            "string_decoder": {\n              "version": "0.10.31",\n              "bundled": true\n            }\n          }\n        },\n        "spdx-correct": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "spdx-expression-parse": "^3.0.0",\n            "spdx-license-ids": "^3.0.0"\n          }\n        },\n        "spdx-exceptions": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "spdx-expression-parse": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "spdx-exceptions": "^2.1.0",\n            "spdx-license-ids": "^3.0.0"\n          }\n        },\n        "spdx-license-ids": {\n          "version": "3.0.3",\n          "bundled": true\n        },\n        "sshpk": {\n          "version": "1.14.2",\n          "bundled": true,\n          "requires": {\n            "asn1": "~0.2.3",\n            "assert-plus": "^1.0.0",\n            "bcrypt-pbkdf": "^1.0.0",\n            "dashdash": "^1.12.0",\n            "ecc-jsbn": "~0.1.1",\n            "getpass": "^0.1.1",\n            "jsbn": "~0.1.0",\n            "safer-buffer": "^2.0.2",\n            "tweetnacl": "~0.14.0"\n          }\n        },\n        "ssri": {\n          "version": "6.0.1",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "^3.5.1"\n          }\n        },\n        "stream-each": {\n          "version": "1.2.2",\n          "bundled": true,\n          "requires": {\n            "end-of-stream": "^1.1.0",\n            "stream-shift": "^1.0.0"\n          }\n        },\n        "stream-iterate": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "readable-stream": "^2.1.5",\n            "stream-shift": "^1.0.0"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "stream-shift": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "strict-uri-encode": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "string-width": {\n          "version": "2.1.1",\n          "bundled": true,\n          "requires": {\n            "is-fullwidth-code-point": "^2.0.0",\n            "strip-ansi": "^4.0.0"\n          },\n          "dependencies": {\n            "ansi-regex": {\n              "version": "3.0.0",\n              "bundled": true\n            },\n            "is-fullwidth-code-point": {\n              "version": "2.0.0",\n              "bundled": true\n            },\n            "strip-ansi": {\n              "version": "4.0.0",\n              "bundled": true,\n              "requires": {\n                "ansi-regex": "^3.0.0"\n              }\n            }\n          }\n        },\n        "string_decoder": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "safe-buffer": "~5.1.0"\n          }\n        },\n        "stringify-package": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "bundled": true,\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "strip-eof": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "strip-json-comments": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "supports-color": {\n          "version": "5.4.0",\n          "bundled": true,\n          "requires": {\n            "has-flag": "^3.0.0"\n          }\n        },\n        "tar": {\n          "version": "4.4.8",\n          "bundled": true,\n          "requires": {\n            "chownr": "^1.1.1",\n            "fs-minipass": "^1.2.5",\n            "minipass": "^2.3.4",\n            "minizlib": "^1.1.1",\n            "mkdirp": "^0.5.0",\n            "safe-buffer": "^5.1.2",\n            "yallist": "^3.0.2"\n          },\n          "dependencies": {\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "^5.1.2",\n                "yallist": "^3.0.0"\n              }\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true\n            }\n          }\n        },\n        "term-size": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "execa": "^0.7.0"\n          }\n        },\n        "text-table": {\n          "version": "0.2.0",\n          "bundled": true\n        },\n        "through": {\n          "version": "2.3.8",\n          "bundled": true\n        },\n        "through2": {\n          "version": "2.0.3",\n          "bundled": true,\n          "requires": {\n            "readable-stream": "^2.1.5",\n            "xtend": "~4.0.1"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "timed-out": {\n          "version": "4.0.1",\n          "bundled": true\n        },\n        "tiny-relative-date": {\n          "version": "1.3.0",\n          "bundled": true\n        },\n        "tough-cookie": {\n          "version": "2.4.3",\n          "bundled": true,\n          "requires": {\n            "psl": "^1.1.24",\n            "punycode": "^1.4.1"\n          }\n        },\n        "tunnel-agent": {\n          "version": "0.6.0",\n          "bundled": true,\n          "requires": {\n            "safe-buffer": "^5.0.1"\n          }\n        },\n        "tweetnacl": {\n          "version": "0.14.5",\n          "bundled": true,\n          "optional": true\n        },\n        "typedarray": {\n          "version": "0.0.6",\n          "bundled": true\n        },\n        "uid-number": {\n          "version": "0.0.6",\n          "bundled": true\n        },\n        "umask": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "unique-filename": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "unique-slug": "^2.0.0"\n          }\n        },\n        "unique-slug": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "imurmurhash": "^0.1.4"\n          }\n        },\n        "unique-string": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "crypto-random-string": "^1.0.0"\n          }\n        },\n        "unpipe": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "unzip-response": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "update-notifier": {\n          "version": "2.5.0",\n          "bundled": true,\n          "requires": {\n            "boxen": "^1.2.1",\n            "chalk": "^2.0.1",\n            "configstore": "^3.0.0",\n            "import-lazy": "^2.1.0",\n            "is-ci": "^1.0.10",\n            "is-installed-globally": "^0.1.0",\n            "is-npm": "^1.0.0",\n            "latest-version": "^3.0.0",\n            "semver-diff": "^2.0.0",\n            "xdg-basedir": "^3.0.0"\n          }\n        },\n        "url-parse-lax": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "prepend-http": "^1.0.1"\n          }\n        },\n        "util-deprecate": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "util-extend": {\n          "version": "1.0.3",\n          "bundled": true\n        },\n        "uuid": {\n          "version": "3.3.2",\n          "bundled": true\n        },\n        "validate-npm-package-license": {\n          "version": "3.0.4",\n          "bundled": true,\n          "requires": {\n            "spdx-correct": "^3.0.0",\n            "spdx-expression-parse": "^3.0.0"\n          }\n        },\n        "validate-npm-package-name": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "builtins": "^1.0.3"\n          }\n        },\n        "verror": {\n          "version": "1.10.0",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "^1.0.0",\n            "core-util-is": "1.0.2",\n            "extsprintf": "^1.2.0"\n          }\n        },\n        "wcwidth": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "defaults": "^1.0.3"\n          }\n        },\n        "which": {\n          "version": "1.3.1",\n          "bundled": true,\n          "requires": {\n            "isexe": "^2.0.0"\n          }\n        },\n        "which-module": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "wide-align": {\n          "version": "1.1.2",\n          "bundled": true,\n          "requires": {\n            "string-width": "^1.0.2"\n          },\n          "dependencies": {\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "requires": {\n                "code-point-at": "^1.0.0",\n                "is-fullwidth-code-point": "^1.0.0",\n                "strip-ansi": "^3.0.0"\n              }\n            }\n          }\n        },\n        "widest-line": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "^2.1.1"\n          }\n        },\n        "worker-farm": {\n          "version": "1.6.0",\n          "bundled": true,\n          "requires": {\n            "errno": "~0.1.7"\n          }\n        },\n        "wrap-ansi": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "^1.0.1",\n            "strip-ansi": "^3.0.1"\n          },\n          "dependencies": {\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "requires": {\n                "code-point-at": "^1.0.0",\n                "is-fullwidth-code-point": "^1.0.0",\n                "strip-ansi": "^3.0.0"\n              }\n            }\n          }\n        },\n        "wrappy": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "write-file-atomic": {\n          "version": "2.4.2",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "^4.1.11",\n            "imurmurhash": "^0.1.4",\n            "signal-exit": "^3.0.2"\n          }\n        },\n        "xdg-basedir": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "xtend": {\n          "version": "4.0.1",\n          "bundled": true\n        },\n        "y18n": {\n          "version": "4.0.0",\n          "bundled": true\n        },\n        "yallist": {\n          "version": "2.1.2",\n          "bundled": true\n        },\n        "yargs": {\n          "version": "11.0.0",\n          "bundled": true,\n          "requires": {\n            "cliui": "^4.0.0",\n            "decamelize": "^1.1.1",\n            "find-up": "^2.1.0",\n            "get-caller-file": "^1.0.1",\n            "os-locale": "^2.0.0",\n            "require-directory": "^2.1.1",\n            "require-main-filename": "^1.0.1",\n            "set-blocking": "^2.0.0",\n            "string-width": "^2.0.0",\n            "which-module": "^2.0.0",\n            "y18n": "^3.2.1",\n            "yargs-parser": "^9.0.2"\n          },\n          "dependencies": {\n            "y18n": {\n              "version": "3.2.1",\n              "bundled": true\n            }\n          }\n        },\n        "yargs-parser": {\n          "version": "9.0.2",\n          "bundled": true,\n          "requires": {\n            "camelcase": "^4.1.0"\n          }\n        }\n      }\n    },\n    "npm-run-path": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",\n      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",\n      "requires": {\n        "path-key": "^2.0.0"\n      }\n    },\n    "nth-check": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",\n      "integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",\n      "requires": {\n        "boolbase": "~1.0.0"\n      }\n    },\n    "num2fraction": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",\n      "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4="\n    },\n    "number-is-nan": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",\n      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="\n    },\n    "nwsapi": {\n      "version": "2.1.3",\n      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.1.3.tgz",\n      "integrity": "sha512-RowAaJGEgYXEZfQ7tvvdtAQUKPyTR6T6wNu0fwlNsGQYr/h3yQc6oI8WnVZh3Y/Sylwc+dtAlvPqfFZjhTyk3A=="\n    },\n    "oauth-sign": {\n      "version": "0.9.0",\n      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",\n      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="\n    },\n    "object-assign": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",\n      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="\n    },\n    "object-copy": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",\n      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",\n      "requires": {\n        "copy-descriptor": "^0.1.0",\n        "define-property": "^0.2.5",\n        "kind-of": "^3.0.3"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "^0.1.0"\n          }\n        }\n      }\n    },\n    "object-hash": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-1.3.1.tgz",\n      "integrity": "sha512-OSuu/pU4ENM9kmREg0BdNrUDIl1heYa4mBZacJc+vVWz4GtAwu7jO8s4AIt2aGRUTqxykpWzI3Oqnsm13tTMDA=="\n    },\n    "object-keys": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",\n      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA=="\n    },\n    "object-visit": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",\n      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",\n      "requires": {\n        "isobject": "^3.0.0"\n      }\n    },\n    "object.assign": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.0.tgz",\n      "integrity": "sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==",\n      "requires": {\n        "define-properties": "^1.1.2",\n        "function-bind": "^1.1.1",\n        "has-symbols": "^1.0.0",\n        "object-keys": "^1.0.11"\n      }\n    },\n    "object.defaults": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/object.defaults/-/object.defaults-1.1.0.tgz",\n      "integrity": "sha1-On+GgzS0B96gbaFtiNXNKeQ1/s8=",\n      "requires": {\n        "array-each": "^1.0.1",\n        "array-slice": "^1.0.0",\n        "for-own": "^1.0.0",\n        "isobject": "^3.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "^1.0.1"\n          }\n        }\n      }\n    },\n    "object.fromentries": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.0.tgz",\n      "integrity": "sha512-9iLiI6H083uiqUuvzyY6qrlmc/Gz8hLQFOcb/Ri/0xXFkSNS3ctV+CbE6yM2+AnkYfOB3dGjdzC0wrMLIhQICA==",\n      "requires": {\n        "define-properties": "^1.1.2",\n        "es-abstract": "^1.11.0",\n        "function-bind": "^1.1.1",\n        "has": "^1.0.1"\n      }\n    },\n    "object.getownpropertydescriptors": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.0.3.tgz",\n      "integrity": "sha1-h1jIRvW0B62rDyNuCYbxSwUcqhY=",\n      "requires": {\n        "define-properties": "^1.1.2",\n        "es-abstract": "^1.5.1"\n      }\n    },\n    "object.map": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/object.map/-/object.map-1.0.1.tgz",\n      "integrity": "sha1-z4Plncj8wK1fQlDh94s7gb2AHTc=",\n      "requires": {\n        "for-own": "^1.0.0",\n        "make-iterator": "^1.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "^1.0.1"\n          }\n        }\n      }\n    },\n    "object.omit": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",\n      "integrity": "sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=",\n      "requires": {\n        "for-own": "^0.1.4",\n        "is-extendable": "^0.1.1"\n      }\n    },\n    "object.pick": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",\n      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",\n      "requires": {\n        "isobject": "^3.0.1"\n      }\n    },\n    "object.reduce": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/object.reduce/-/object.reduce-1.0.1.tgz",\n      "integrity": "sha1-b+NI8qx/oPlcpiEiZZkJaCW7A60=",\n      "requires": {\n        "for-own": "^1.0.0",\n        "make-iterator": "^1.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "^1.0.1"\n          }\n        }\n      }\n    },\n    "object.values": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.1.0.tgz",\n      "integrity": "sha512-8mf0nKLAoFX6VlNVdhGj31SVYpaNFtUnuoOXWyFEstsWRgU837AK+JYM0iAxwkSzGRbwn8cbFmgbyxj1j4VbXg==",\n      "requires": {\n        "define-properties": "^1.1.3",\n        "es-abstract": "^1.12.0",\n        "function-bind": "^1.1.1",\n        "has": "^1.0.3"\n      }\n    },\n    "obuf": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",\n      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg=="\n    },\n    "on-finished": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",\n      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",\n      "requires": {\n        "ee-first": "1.1.1"\n      }\n    },\n    "on-headers": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",\n      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA=="\n    },\n    "once": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",\n      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",\n      "requires": {\n        "wrappy": "1"\n      }\n    },\n    "onetime": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",\n      "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",\n      "requires": {\n        "mimic-fn": "^1.0.0"\n      }\n    },\n    "opn": {\n      "version": "5.4.0",\n      "resolved": "https://registry.npmjs.org/opn/-/opn-5.4.0.tgz",\n      "integrity": "sha512-YF9MNdVy/0qvJvDtunAOzFw9iasOQHpVthTCvGzxt61Il64AYSGdK+rYwld7NAfk9qJ7dt+hymBNSc9LNYS+Sw==",\n      "requires": {\n        "is-wsl": "^1.1.0"\n      }\n    },\n    "optimist": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",\n      "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",\n      "requires": {\n        "minimist": "~0.0.1",\n        "wordwrap": "~0.0.2"\n      },\n      "dependencies": {\n        "minimist": {\n          "version": "0.0.10",\n          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz",\n          "integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="\n        },\n        "wordwrap": {\n          "version": "0.0.3",\n          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",\n          "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc="\n        }\n      }\n    },\n    "optimize-css-assets-webpack-plugin": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-5.0.1.tgz",\n      "integrity": "sha512-Rqm6sSjWtx9FchdP0uzTQDc7GXDKnwVEGoSxjezPkzMewx7gEWE9IMUYKmigTRC4U3RaNSwYVnUDLuIdtTpm0A==",\n      "requires": {\n        "cssnano": "^4.1.0",\n        "last-call-webpack-plugin": "^3.0.0"\n      }\n    },\n    "optionator": {\n      "version": "0.8.2",\n      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",\n      "integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",\n      "requires": {\n        "deep-is": "~0.1.3",\n        "fast-levenshtein": "~2.0.4",\n        "levn": "~0.3.0",\n        "prelude-ls": "~1.1.2",\n        "type-check": "~0.3.2",\n        "wordwrap": "~1.0.0"\n      }\n    },\n    "orchestrator": {\n      "version": "0.3.8",\n      "resolved": "https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.8.tgz",\n      "integrity": "sha1-FOfp4nZPcxX7rBhOUGx6pt+UrX4=",\n      "requires": {\n        "end-of-stream": "~0.1.5",\n        "sequencify": "~0.0.7",\n        "stream-consume": "~0.1.0"\n      },\n      "dependencies": {\n        "end-of-stream": {\n          "version": "0.1.5",\n          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-0.1.5.tgz",\n          "integrity": "sha1-jhdyBsPICDfYVjLouTWd/osvbq8=",\n          "requires": {\n            "once": "~1.3.0"\n          }\n        },\n        "once": {\n          "version": "1.3.3",\n          "resolved": "https://registry.npmjs.org/once/-/once-1.3.3.tgz",\n          "integrity": "sha1-suJhVXzkwxTsgwTz+oJmPkKXyiA=",\n          "requires": {\n            "wrappy": "1"\n          }\n        }\n      }\n    },\n    "ordered-read-streams": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.1.0.tgz",\n      "integrity": "sha1-/VZamvjrRHO6abbtijQ1LLVS8SY="\n    },\n    "original": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/original/-/original-1.0.2.tgz",\n      "integrity": "sha512-hyBVl6iqqUOJ8FqRe+l/gS8H+kKYjrEndd5Pm1MfBtsEKA038HkkdbAl/72EAXGyonD/PFsvmVG+EvcIpliMBg==",\n      "requires": {\n        "url-parse": "^1.4.3"\n      }\n    },\n    "os-browserify": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz",\n      "integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="\n    },\n    "os-homedir": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",\n      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="\n    },\n    "os-locale": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-3.1.0.tgz",\n      "integrity": "sha512-Z8l3R4wYWM40/52Z+S265okfFj8Kt2cC2MKY+xNi3kFs+XGI7WXu/I309QQQYbRW4ijiZ+yxs9pqEhJh0DqW3Q==",\n      "requires": {\n        "execa": "^1.0.0",\n        "lcid": "^2.0.0",\n        "mem": "^4.0.0"\n      }\n    },\n    "os-tmpdir": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",\n      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="\n    },\n    "osenv": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",\n      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",\n      "requires": {\n        "os-homedir": "^1.0.0",\n        "os-tmpdir": "^1.0.0"\n      }\n    },\n    "p-defer": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",\n      "integrity": "sha1-n26xgvbJqozXQwBKfU+WsZaw+ww="\n    },\n    "p-each-series": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-each-series/-/p-each-series-1.0.0.tgz",\n      "integrity": "sha1-kw89Et0fUOdDRFeiLNbwSsatf3E=",\n      "requires": {\n        "p-reduce": "^1.0.0"\n      }\n    },\n    "p-finally": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",\n      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4="\n    },\n    "p-is-promise": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-2.1.0.tgz",\n      "integrity": "sha512-Y3W0wlRPK8ZMRbNq97l4M5otioeA5lm1z7bkNkxCka8HSPjR0xRWmpCmc9utiaLP9Jb1eD8BgeIxTW4AIF45Pg=="\n    },\n    "p-limit": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.2.0.tgz",\n      "integrity": "sha512-pZbTJpoUsCzV48Mc9Nh51VbwO0X9cuPFE8gYwx9BTCt9SF8/b7Zljd2fVgOxhIF/HDTKgpVzs+GPhyKfjLLFRQ==",\n      "requires": {\n        "p-try": "^2.0.0"\n      }\n    },\n    "p-locate": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",\n      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",\n      "requires": {\n        "p-limit": "^2.0.0"\n      }\n    },\n    "p-map": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/p-map/-/p-map-1.2.0.tgz",\n      "integrity": "sha512-r6zKACMNhjPJMTl8KcFH4li//gkrXWfbD6feV8l6doRHlzljFWGJ2AP6iKaCJXyZmAUMOPtvbW7EXkbWO/pLEA=="\n    },\n    "p-reduce": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-reduce/-/p-reduce-1.0.0.tgz",\n      "integrity": "sha1-GMKw3ZNqRpClKfgjH1ig/bakffo="\n    },\n    "p-try": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",\n      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="\n    },\n    "pako": {\n      "version": "1.0.10",\n      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.10.tgz",\n      "integrity": "sha512-0DTvPVU3ed8+HNXOu5Bs+o//Mbdj9VNQMUOe9oKCwh8l0GNwpTDMKCWbRjgtD291AWnkAgkqA/LOnQS8AmS1tw=="\n    },\n    "parallel-transform": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/parallel-transform/-/parallel-transform-1.1.0.tgz",\n      "integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",\n      "requires": {\n        "cyclist": "~0.2.2",\n        "inherits": "^2.0.3",\n        "readable-stream": "^2.1.5"\n      }\n    },\n    "param-case": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/param-case/-/param-case-2.1.1.tgz",\n      "integrity": "sha1-35T9jPZTHs915r75oIWPvHK+Ikc=",\n      "requires": {\n        "no-case": "^2.2.0"\n      }\n    },\n    "parent-module": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",\n      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",\n      "requires": {\n        "callsites": "^3.0.0"\n      },\n      "dependencies": {\n        "callsites": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",\n          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="\n        }\n      }\n    },\n    "parse-asn1": {\n      "version": "5.1.4",\n      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.4.tgz",\n      "integrity": "sha512-Qs5duJcuvNExRfFZ99HDD3z4mAi3r9Wl/FOjEOijlxwCZs7E7mW2vjTpgQ4J8LpTF8x5v+1Vn5UQFejmWT11aw==",\n      "requires": {\n        "asn1.js": "^4.0.0",\n        "browserify-aes": "^1.0.0",\n        "create-hash": "^1.1.0",\n        "evp_bytestokey": "^1.0.0",\n        "pbkdf2": "^3.0.3",\n        "safe-buffer": "^5.1.1"\n      }\n    },\n    "parse-filepath": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/parse-filepath/-/parse-filepath-1.0.2.tgz",\n      "integrity": "sha1-pjISf1Oq89FYdvWHLz/6x2PWyJE=",\n      "requires": {\n        "is-absolute": "^1.0.0",\n        "map-cache": "^0.2.0",\n        "path-root": "^0.1.1"\n      }\n    },\n    "parse-glob": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz",\n      "integrity": "sha1-ssN2z7EfNVE7rdFz7wu246OIORw=",\n      "requires": {\n        "glob-base": "^0.3.0",\n        "is-dotfile": "^1.0.0",\n        "is-extglob": "^1.0.0",\n        "is-glob": "^2.0.0"\n      },\n      "dependencies": {\n        "is-extglob": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",\n          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="\n        },\n        "is-glob": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",\n          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",\n          "requires": {\n            "is-extglob": "^1.0.0"\n          }\n        }\n      }\n    },\n    "parse-import": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/parse-import/-/parse-import-2.0.0.tgz",\n      "integrity": "sha1-KyR0Aw4AirmNt2xLy/TbWucwb18=",\n      "requires": {\n        "get-imports": "^1.0.0"\n      }\n    },\n    "parse-json": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",\n      "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",\n      "requires": {\n        "error-ex": "^1.3.1",\n        "json-parse-better-errors": "^1.0.1"\n      }\n    },\n    "parse-node-version": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/parse-node-version/-/parse-node-version-1.0.1.tgz",\n      "integrity": "sha512-3YHlOa/JgH6Mnpr05jP9eDG254US9ek25LyIxZlDItp2iJtwyaXQb57lBYLdT3MowkUFYEV2XXNAYIPlESvJlA=="\n    },\n    "parse-passwd": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",\n      "integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="\n    },\n    "parse5": {\n      "version": "5.1.0",\n      "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",\n      "integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ=="\n    },\n    "parseurl": {\n      "version": "1.3.3",\n      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",\n      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="\n    },\n    "pascalcase": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",\n      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="\n    },\n    "path-browserify": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.0.tgz",\n      "integrity": "sha1-oLhwcpquIUAFt9UDLsLLuw+0RRo="\n    },\n    "path-dirname": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",\n      "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA="\n    },\n    "path-exists": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",\n      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU="\n    },\n    "path-is-absolute": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",\n      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="\n    },\n    "path-is-inside": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",\n      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="\n    },\n    "path-key": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",\n      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A="\n    },\n    "path-parse": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",\n      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw=="\n    },\n    "path-root": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/path-root/-/path-root-0.1.1.tgz",\n      "integrity": "sha1-mkpoFMrBwM1zNgqV8yCDyOpHRbc=",\n      "requires": {\n        "path-root-regex": "^0.1.0"\n      }\n    },\n    "path-root-regex": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/path-root-regex/-/path-root-regex-0.1.2.tgz",\n      "integrity": "sha1-v8zcjfWxLcUsi0PsONGNcsBLqW0="\n    },\n    "path-to-regexp": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",\n      "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="\n    },\n    "path-type": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",\n      "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",\n      "requires": {\n        "pify": "^3.0.0"\n      }\n    },\n    "pause-stream": {\n      "version": "0.0.11",\n      "resolved": "https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz",\n      "integrity": "sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=",\n      "requires": {\n        "through": "~2.3"\n      }\n    },\n    "pbkdf2": {\n      "version": "3.0.17",\n      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.17.tgz",\n      "integrity": "sha512-U/il5MsrZp7mGg3mSQfn742na2T+1/vHDCG5/iTI3X9MKUuYUZVLQhyRsg06mCgDBTd57TxzgZt7P+fYfjRLtA==",\n      "requires": {\n        "create-hash": "^1.1.2",\n        "create-hmac": "^1.1.4",\n        "ripemd160": "^2.0.1",\n        "safe-buffer": "^5.0.1",\n        "sha.js": "^2.4.8"\n      }\n    },\n    "performance-now": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",\n      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="\n    },\n    "pify": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",\n      "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="\n    },\n    "pinkie": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",\n      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA="\n    },\n    "pinkie-promise": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",\n      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",\n      "requires": {\n        "pinkie": "^2.0.0"\n      }\n    },\n    "pirates": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.1.tgz",\n      "integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+Men7AuVdX6TA+s+uGA==",\n      "requires": {\n        "node-modules-regexp": "^1.0.0"\n      }\n    },\n    "pkg-dir": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",\n      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",\n      "requires": {\n        "find-up": "^3.0.0"\n      }\n    },\n    "pkg-up": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-2.0.0.tgz",\n      "integrity": "sha1-yBmscoBZpGHKscOImivjxJoATX8=",\n      "requires": {\n        "find-up": "^2.1.0"\n      },\n      "dependencies": {\n        "find-up": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",\n          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",\n          "requires": {\n            "locate-path": "^2.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",\n          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",\n          "requires": {\n            "p-locate": "^2.0.0",\n            "path-exists": "^3.0.0"\n          }\n        },\n        "p-limit": {\n          "version": "1.3.0",\n          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",\n          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",\n          "requires": {\n            "p-try": "^1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",\n          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",\n          "requires": {\n            "p-limit": "^1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",\n          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="\n        }\n      }\n    },\n    "plugin-error": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-1.0.1.tgz",\n      "integrity": "sha512-L1zP0dk7vGweZME2i+EeakvUNqSrdiI3F91TwEoYiGrAfUXmVv6fJIq4g82PAXxNsWOp0J7ZqQy/3Szz0ajTxA==",\n      "requires": {\n        "ansi-colors": "^1.0.1",\n        "arr-diff": "^4.0.0",\n        "arr-union": "^3.1.0",\n        "extend-shallow": "^3.0.2"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "^0.1.0"\n          }\n        }\n      }\n    },\n    "pn": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/pn/-/pn-1.1.0.tgz",\n      "integrity": "sha512-2qHaIQr2VLRFoxe2nASzsV6ef4yOOH+Fi9FBOVH6cqeSgUnoyySPZkxzLuzd+RYOQTRpROA0ztTMqxROKSb/nA=="\n    },\n    "pnp-webpack-plugin": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/pnp-webpack-plugin/-/pnp-webpack-plugin-1.2.1.tgz",\n      "integrity": "sha512-W6GctK7K2qQiVR+gYSv/Gyt6jwwIH4vwdviFqx+Y2jAtVf5eZyYIDf5Ac2NCDMBiX5yWscBLZElPTsyA1UtVVA==",\n      "requires": {\n        "ts-pnp": "^1.0.0"\n      }\n    },\n    "popper.js": {\n      "version": "1.15.0",\n      "resolved": "https://registry.npmjs.org/popper.js/-/popper.js-1.15.0.tgz",\n      "integrity": "sha512-w010cY1oCUmI+9KwwlWki+r5jxKfTFDVoadl7MSrIujHU5MJ5OR6HTDj6Xo8aoR/QsA56x8jKjA59qGH4ELtrA=="\n    },\n    "portfinder": {\n      "version": "1.0.20",\n      "resolved": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.20.tgz",\n      "integrity": "sha512-Yxe4mTyDzTd59PZJY4ojZR8F+E5e97iq2ZOHPz3HDgSvYC5siNad2tLooQ5y5QHyQhc3xVqvyk/eNA3wuoa7Sw==",\n      "requires": {\n        "async": "^1.5.2",\n        "debug": "^2.2.0",\n        "mkdirp": "0.5.x"\n      },\n      "dependencies": {\n        "async": {\n          "version": "1.5.2",\n          "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",\n          "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo="\n        },\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "posix-character-classes": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",\n      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="\n    },\n    "postcss": {\n      "version": "7.0.14",\n      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz",\n      "integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==",\n      "requires": {\n        "chalk": "^2.4.2",\n        "source-map": "^0.6.1",\n        "supports-color": "^6.1.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        },\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "^3.0.0"\n          }\n        }\n      }\n    },\n    "postcss-attribute-case-insensitive": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-attribute-case-insensitive/-/postcss-attribute-case-insensitive-4.0.1.tgz",\n      "integrity": "sha512-L2YKB3vF4PetdTIthQVeT+7YiSzMoNMLLYxPXXppOOP7NoazEAy45sh2LvJ8leCQjfBcfkYQs8TtCcQjeZTp8A==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-selector-parser": "^5.0.0"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "^2.0.0",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-browser-comments": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-browser-comments/-/postcss-browser-comments-2.0.0.tgz",\n      "integrity": "sha512-xGG0UvoxwBc4Yx4JX3gc0RuDl1kc4bVihCzzk6UC72YPfq5fu3c717Nu8Un3nvnq1BJ31gBnFXIG/OaUTnpHgA==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-calc": {\n      "version": "7.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-calc/-/postcss-calc-7.0.1.tgz",\n      "integrity": "sha512-oXqx0m6tb4N3JGdmeMSc/i91KppbYsFZKdH0xMOqK8V1rJlzrKlTdokz8ozUXLVejydRN6u2IddxpcijRj2FqQ==",\n      "requires": {\n        "css-unit-converter": "^1.1.1",\n        "postcss": "^7.0.5",\n        "postcss-selector-parser": "^5.0.0-rc.4",\n        "postcss-value-parser": "^3.3.1"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "^2.0.0",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-color-functional-notation": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-color-functional-notation/-/postcss-color-functional-notation-2.0.1.tgz",\n      "integrity": "sha512-ZBARCypjEDofW4P6IdPVTLhDNXPRn8T2s1zHbZidW6rPaaZvcnCS2soYFIQJrMZSxiePJ2XIYTlcb2ztr/eT2g==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-color-gray": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-color-gray/-/postcss-color-gray-5.0.0.tgz",\n      "integrity": "sha512-q6BuRnAGKM/ZRpfDascZlIZPjvwsRye7UDNalqVz3s7GDxMtqPY6+Q871liNxsonUw8oC61OG+PSaysYpl1bnw==",\n      "requires": {\n        "@csstools/convert-colors": "^1.4.0",\n        "postcss": "^7.0.5",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-color-hex-alpha": {\n      "version": "5.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-color-hex-alpha/-/postcss-color-hex-alpha-5.0.3.tgz",\n      "integrity": "sha512-PF4GDel8q3kkreVXKLAGNpHKilXsZ6xuu+mOQMHWHLPNyjiUBOr75sp5ZKJfmv1MCus5/DWUGcK9hm6qHEnXYw==",\n      "requires": {\n        "postcss": "^7.0.14",\n        "postcss-values-parser": "^2.0.1"\n      }\n    },\n    "postcss-color-mod-function": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-color-mod-function/-/postcss-color-mod-function-3.0.3.tgz",\n      "integrity": "sha512-YP4VG+xufxaVtzV6ZmhEtc+/aTXH3d0JLpnYfxqTvwZPbJhWqp8bSY3nfNzNRFLgB4XSaBA82OE4VjOOKpCdVQ==",\n      "requires": {\n        "@csstools/convert-colors": "^1.4.0",\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-color-rebeccapurple": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-color-rebeccapurple/-/postcss-color-rebeccapurple-4.0.1.tgz",\n      "integrity": "sha512-aAe3OhkS6qJXBbqzvZth2Au4V3KieR5sRQ4ptb2b2O8wgvB3SJBsdG+jsn2BZbbwekDG8nTfcCNKcSfe/lEy8g==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-colormin": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-4.0.3.tgz",\n      "integrity": "sha512-WyQFAdDZpExQh32j0U0feWisZ0dmOtPl44qYmJKkq9xFWY3p+4qnRzCHeNrkeRhwPHz9bQ3mo0/yVkaply0MNw==",\n      "requires": {\n        "browserslist": "^4.0.0",\n        "color": "^3.0.0",\n        "has": "^1.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-convert-values": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-4.0.1.tgz",\n      "integrity": "sha512-Kisdo1y77KUC0Jmn0OXU/COOJbzM8cImvw1ZFsBgBgMgb1iL23Zs/LXRe3r+EZqM3vGYKdQ2YJVQ5VkJI+zEJQ==",\n      "requires": {\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-custom-media": {\n      "version": "7.0.8",\n      "resolved": "https://registry.npmjs.org/postcss-custom-media/-/postcss-custom-media-7.0.8.tgz",\n      "integrity": "sha512-c9s5iX0Ge15o00HKbuRuTqNndsJUbaXdiNsksnVH8H4gdc+zbLzr/UasOwNG6CTDpLFekVY4672eWdiiWu2GUg==",\n      "requires": {\n        "postcss": "^7.0.14"\n      }\n    },\n    "postcss-custom-properties": {\n      "version": "8.0.10",\n      "resolved": "https://registry.npmjs.org/postcss-custom-properties/-/postcss-custom-properties-8.0.10.tgz",\n      "integrity": "sha512-GDL0dyd7++goDR4SSasYdRNNvp4Gqy1XMzcCnTijiph7VB27XXpJ8bW/AI0i2VSBZ55TpdGhMr37kMSpRfYD0Q==",\n      "requires": {\n        "postcss": "^7.0.14",\n        "postcss-values-parser": "^2.0.1"\n      }\n    },\n    "postcss-custom-selectors": {\n      "version": "5.1.2",\n      "resolved": "https://registry.npmjs.org/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz",\n      "integrity": "sha512-DSGDhqinCqXqlS4R7KGxL1OSycd1lydugJ1ky4iRXPHdBRiozyMHrdu0H3o7qNOCiZwySZTUI5MV0T8QhCLu+w==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-selector-parser": "^5.0.0-rc.3"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "^2.0.0",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-dir-pseudo-class": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-dir-pseudo-class/-/postcss-dir-pseudo-class-5.0.0.tgz",\n      "integrity": "sha512-3pm4oq8HYWMZePJY+5ANriPs3P07q+LW6FAdTlkFH2XqDdP4HeeJYMOzn0HYLhRSjBO3fhiqSwwU9xEULSrPgw==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-selector-parser": "^5.0.0-rc.3"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "^2.0.0",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-discard-comments": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-4.0.2.tgz",\n      "integrity": "sha512-RJutN259iuRf3IW7GZyLM5Sw4GLTOH8FmsXBnv8Ab/Tc2k4SR4qbV4DNbyyY4+Sjo362SyDmW2DQ7lBSChrpkg==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-discard-duplicates": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-4.0.2.tgz",\n      "integrity": "sha512-ZNQfR1gPNAiXZhgENFfEglF93pciw0WxMkJeVmw8eF+JZBbMD7jp6C67GqJAXVZP2BWbOztKfbsdmMp/k8c6oQ==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-discard-empty": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-4.0.1.tgz",\n      "integrity": "sha512-B9miTzbznhDjTfjvipfHoqbWKwd0Mj+/fL5s1QOz06wufguil+Xheo4XpOnc4NqKYBCNqqEzgPv2aPBIJLox0w==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-discard-overridden": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-4.0.1.tgz",\n      "integrity": "sha512-IYY2bEDD7g1XM1IDEsUT4//iEYCxAmP5oDSFMVU/JVvT7gh+l4fmjciLqGgwjdWpQIdb0Che2VX00QObS5+cTg==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-double-position-gradients": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-double-position-gradients/-/postcss-double-position-gradients-1.0.0.tgz",\n      "integrity": "sha512-G+nV8EnQq25fOI8CH/B6krEohGWnF5+3A6H/+JEpOncu5dCnkS1QQ6+ct3Jkaepw1NGVqqOZH6lqrm244mCftA==",\n      "requires": {\n        "postcss": "^7.0.5",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-env-function": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-env-function/-/postcss-env-function-2.0.2.tgz",\n      "integrity": "sha512-rwac4BuZlITeUbiBq60h/xbLzXY43qOsIErngWa4l7Mt+RaSkT7QBjXVGTcBHupykkblHMDrBFh30zchYPaOUw==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-flexbugs-fixes": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/postcss-flexbugs-fixes/-/postcss-flexbugs-fixes-4.1.0.tgz",\n      "integrity": "sha512-jr1LHxQvStNNAHlgco6PzY308zvLklh7SJVYuWUwyUQncofaAlD2l+P/gxKHOdqWKe7xJSkVLFF/2Tp+JqMSZA==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-focus-visible": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-focus-visible/-/postcss-focus-visible-4.0.0.tgz",\n      "integrity": "sha512-Z5CkWBw0+idJHSV6+Bgf2peDOFf/x4o+vX/pwcNYrWpXFrSfTkQ3JQ1ojrq9yS+upnAlNRHeg8uEwFTgorjI8g==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-focus-within": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-focus-within/-/postcss-focus-within-3.0.0.tgz",\n      "integrity": "sha512-W0APui8jQeBKbCGZudW37EeMCjDeVxKgiYfIIEo8Bdh5SpB9sxds/Iq8SEuzS0Q4YFOlG7EPFulbbxujpkrV2w==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-font-variant": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-font-variant/-/postcss-font-variant-4.0.0.tgz",\n      "integrity": "sha512-M8BFYKOvCrI2aITzDad7kWuXXTm0YhGdP9Q8HanmN4EF1Hmcgs1KK5rSHylt/lUJe8yLxiSwWAHdScoEiIxztg==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-gap-properties": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-gap-properties/-/postcss-gap-properties-2.0.0.tgz",\n      "integrity": "sha512-QZSqDaMgXCHuHTEzMsS2KfVDOq7ZFiknSpkrPJY6jmxbugUPTuSzs/vuE5I3zv0WAS+3vhrlqhijiprnuQfzmg==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-image-set-function": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-image-set-function/-/postcss-image-set-function-3.0.1.tgz",\n      "integrity": "sha512-oPTcFFip5LZy8Y/whto91L9xdRHCWEMs3e1MdJxhgt4jy2WYXfhkng59fH5qLXSCPN8k4n94p1Czrfe5IOkKUw==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-initial": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-initial/-/postcss-initial-3.0.0.tgz",\n      "integrity": "sha512-WzrqZ5nG9R9fUtrA+we92R4jhVvEB32IIRTzfIG/PLL8UV4CvbF1ugTEHEFX6vWxl41Xt5RTCJPEZkuWzrOM+Q==",\n      "requires": {\n        "lodash.template": "^4.2.4",\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-lab-function": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-lab-function/-/postcss-lab-function-2.0.1.tgz",\n      "integrity": "sha512-whLy1IeZKY+3fYdqQFuDBf8Auw+qFuVnChWjmxm/UhHWqNHZx+B99EwxTvGYmUBqe3Fjxs4L1BoZTJmPu6usVg==",\n      "requires": {\n        "@csstools/convert-colors": "^1.4.0",\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-load-config": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-2.0.0.tgz",\n      "integrity": "sha512-V5JBLzw406BB8UIfsAWSK2KSwIJ5yoEIVFb4gVkXci0QdKgA24jLmHZ/ghe/GgX0lJ0/D1uUK1ejhzEY94MChQ==",\n      "requires": {\n        "cosmiconfig": "^4.0.0",\n        "import-cwd": "^2.0.0"\n      },\n      "dependencies": {\n        "cosmiconfig": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-4.0.0.tgz",\n          "integrity": "sha512-6e5vDdrXZD+t5v0L8CrurPeybg4Fmf+FCSYxXKYVAqLUtyCSbuyqE059d0kDthTNRzKVjL7QMgNpEUlsoYH3iQ==",\n          "requires": {\n            "is-directory": "^0.3.1",\n            "js-yaml": "^3.9.0",\n            "parse-json": "^4.0.0",\n            "require-from-string": "^2.0.1"\n          }\n        }\n      }\n    },\n    "postcss-loader": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-loader/-/postcss-loader-3.0.0.tgz",\n      "integrity": "sha512-cLWoDEY5OwHcAjDnkyRQzAXfs2jrKjXpO/HQFcc5b5u/r7aa471wdmChmwfnv7x2u840iat/wi0lQ5nbRgSkUA==",\n      "requires": {\n        "loader-utils": "^1.1.0",\n        "postcss": "^7.0.0",\n        "postcss-load-config": "^2.0.0",\n        "schema-utils": "^1.0.0"\n      }\n    },\n    "postcss-logical": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-logical/-/postcss-logical-3.0.0.tgz",\n      "integrity": "sha512-1SUKdJc2vuMOmeItqGuNaC+N8MzBWFWEkAnRnLpFYj1tGGa7NqyVBujfRtgNa2gXR+6RkGUiB2O5Vmh7E2RmiA==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-media-minmax": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-media-minmax/-/postcss-media-minmax-4.0.0.tgz",\n      "integrity": "sha512-fo9moya6qyxsjbFAYl97qKO9gyre3qvbMnkOZeZwlsW6XYFsvs2DMGDlchVLfAd8LHPZDxivu/+qW2SMQeTHBw==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-merge-longhand": {\n      "version": "4.0.11",\n      "resolved": "https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz",\n      "integrity": "sha512-alx/zmoeXvJjp7L4mxEMjh8lxVlDFX1gqWHzaaQewwMZiVhLo42TEClKaeHbRf6J7j82ZOdTJ808RtN0ZOZwvw==",\n      "requires": {\n        "css-color-names": "0.0.4",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0",\n        "stylehacks": "^4.0.0"\n      }\n    },\n    "postcss-merge-rules": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-4.0.3.tgz",\n      "integrity": "sha512-U7e3r1SbvYzO0Jr3UT/zKBVgYYyhAz0aitvGIYOYK5CPmkNih+WDSsS5tvPrJ8YMQYlEMvsZIiqmn7HdFUaeEQ==",\n      "requires": {\n        "browserslist": "^4.0.0",\n        "caniuse-api": "^3.0.0",\n        "cssnano-util-same-parent": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-selector-parser": "^3.0.0",\n        "vendors": "^1.0.0"\n      },\n      "dependencies": {\n        "postcss-selector-parser": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz",\n          "integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=",\n          "requires": {\n            "dot-prop": "^4.1.1",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-minify-font-values": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-4.0.2.tgz",\n      "integrity": "sha512-j85oO6OnRU9zPf04+PZv1LYIYOprWm6IA6zkXkrJXyRveDEuQggG6tvoy8ir8ZwjLxLuGfNkCZEQG7zan+Hbtg==",\n      "requires": {\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-minify-gradients": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-4.0.2.tgz",\n      "integrity": "sha512-qKPfwlONdcf/AndP1U8SJ/uzIJtowHlMaSioKzebAXSG4iJthlWC9iSWznQcX4f66gIWX44RSA841HTHj3wK+Q==",\n      "requires": {\n        "cssnano-util-get-arguments": "^4.0.0",\n        "is-color-stop": "^1.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-minify-params": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-4.0.2.tgz",\n      "integrity": "sha512-G7eWyzEx0xL4/wiBBJxJOz48zAKV2WG3iZOqVhPet/9geefm/Px5uo1fzlHu+DOjT+m0Mmiz3jkQzVHe6wxAWg==",\n      "requires": {\n        "alphanum-sort": "^1.0.0",\n        "browserslist": "^4.0.0",\n        "cssnano-util-get-arguments": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0",\n        "uniqs": "^2.0.0"\n      }\n    },\n    "postcss-minify-selectors": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-4.0.2.tgz",\n      "integrity": "sha512-D5S1iViljXBj9kflQo4YutWnJmwm8VvIsU1GeXJGiG9j8CIg9zs4voPMdQDUmIxetUOh60VilsNzCiAFTOqu3g==",\n      "requires": {\n        "alphanum-sort": "^1.0.0",\n        "has": "^1.0.0",\n        "postcss": "^7.0.0",\n        "postcss-selector-parser": "^3.0.0"\n      },\n      "dependencies": {\n        "postcss-selector-parser": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz",\n          "integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=",\n          "requires": {\n            "dot-prop": "^4.1.1",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-modules-extract-imports": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-2.0.0.tgz",\n      "integrity": "sha512-LaYLDNS4SG8Q5WAWqIJgdHPJrDDr/Lv775rMBFUbgjTz6j34lUznACHcdRWroPvXANP2Vj7yNK57vp9eFqzLWQ==",\n      "requires": {\n        "postcss": "^7.0.5"\n      }\n    },\n    "postcss-modules-local-by-default": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-2.0.6.tgz",\n      "integrity": "sha512-oLUV5YNkeIBa0yQl7EYnxMgy4N6noxmiwZStaEJUSe2xPMcdNc8WmBQuQCx18H5psYbVxz8zoHk0RAAYZXP9gA==",\n      "requires": {\n        "postcss": "^7.0.6",\n        "postcss-selector-parser": "^6.0.0",\n        "postcss-value-parser": "^3.3.1"\n      }\n    },\n    "postcss-modules-scope": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-2.1.0.tgz",\n      "integrity": "sha512-91Rjps0JnmtUB0cujlc8KIKCsJXWjzuxGeT/+Q2i2HXKZ7nBUeF9YQTZZTNvHVoNYj1AthsjnGLtqDUE0Op79A==",\n      "requires": {\n        "postcss": "^7.0.6",\n        "postcss-selector-parser": "^6.0.0"\n      }\n    },\n    "postcss-modules-values": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-2.0.0.tgz",\n      "integrity": "sha512-Ki7JZa7ff1N3EIMlPnGTZfUMe69FFwiQPnVSXC9mnn3jozCRBYIxiZd44yJOV2AmabOo4qFf8s0dC/+lweG7+w==",\n      "requires": {\n        "icss-replace-symbols": "^1.1.0",\n        "postcss": "^7.0.6"\n      }\n    },\n    "postcss-nesting": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-nesting/-/postcss-nesting-7.0.0.tgz",\n      "integrity": "sha512-WSsbVd5Ampi3Y0nk/SKr5+K34n52PqMqEfswu6RtU4r7wA8vSD+gM8/D9qq4aJkHImwn1+9iEFTbjoWsQeqtaQ==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-normalize": {\n      "version": "7.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize/-/postcss-normalize-7.0.1.tgz",\n      "integrity": "sha512-NOp1fwrG+6kVXWo7P9SizCHX6QvioxFD/hZcI2MLxPmVnFJFC0j0DDpIuNw2tUDeCFMni59gCVgeJ1/hYhj2OQ==",\n      "requires": {\n        "@csstools/normalize.css": "^9.0.1",\n        "browserslist": "^4.1.1",\n        "postcss": "^7.0.2",\n        "postcss-browser-comments": "^2.0.0"\n      }\n    },\n    "postcss-normalize-charset": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-4.0.1.tgz",\n      "integrity": "sha512-gMXCrrlWh6G27U0hF3vNvR3w8I1s2wOBILvA87iNXaPvSNo5uZAMYsZG7XjCUf1eVxuPfyL4TJ7++SGZLc9A3g==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-normalize-display-values": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-4.0.2.tgz",\n      "integrity": "sha512-3F2jcsaMW7+VtRMAqf/3m4cPFhPD3EFRgNs18u+k3lTJJlVe7d0YPO+bnwqo2xg8YiRpDXJI2u8A0wqJxMsQuQ==",\n      "requires": {\n        "cssnano-util-get-match": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-positions": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-4.0.2.tgz",\n      "integrity": "sha512-Dlf3/9AxpxE+NF1fJxYDeggi5WwV35MXGFnnoccP/9qDtFrTArZ0D0R+iKcg5WsUd8nUYMIl8yXDCtcrT8JrdA==",\n      "requires": {\n        "cssnano-util-get-arguments": "^4.0.0",\n        "has": "^1.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-repeat-style": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-4.0.2.tgz",\n      "integrity": "sha512-qvigdYYMpSuoFs3Is/f5nHdRLJN/ITA7huIoCyqqENJe9PvPmLhNLMu7QTjPdtnVf6OcYYO5SHonx4+fbJE1+Q==",\n      "requires": {\n        "cssnano-util-get-arguments": "^4.0.0",\n        "cssnano-util-get-match": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-string": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-4.0.2.tgz",\n      "integrity": "sha512-RrERod97Dnwqq49WNz8qo66ps0swYZDSb6rM57kN2J+aoyEAJfZ6bMx0sx/F9TIEX0xthPGCmeyiam/jXif0eA==",\n      "requires": {\n        "has": "^1.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-timing-functions": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-4.0.2.tgz",\n      "integrity": "sha512-acwJY95edP762e++00Ehq9L4sZCEcOPyaHwoaFOhIwWCDfik6YvqsYNxckee65JHLKzuNSSmAdxwD2Cud1Z54A==",\n      "requires": {\n        "cssnano-util-get-match": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-unicode": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-4.0.1.tgz",\n      "integrity": "sha512-od18Uq2wCYn+vZ/qCOeutvHjB5jm57ToxRaMeNuf0nWVHaP9Hua56QyMF6fs/4FSUnVIw0CBPsU0K4LnBPwYwg==",\n      "requires": {\n        "browserslist": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-url": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-4.0.1.tgz",\n      "integrity": "sha512-p5oVaF4+IHwu7VpMan/SSpmpYxcJMtkGppYf0VbdH5B6hN8YNmVyJLuY9FmLQTzY3fag5ESUUHDqM+heid0UVA==",\n      "requires": {\n        "is-absolute-url": "^2.0.0",\n        "normalize-url": "^3.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-normalize-whitespace": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-4.0.2.tgz",\n      "integrity": "sha512-tO8QIgrsI3p95r8fyqKV+ufKlSHh9hMJqACqbv2XknufqEDhDvbguXGBBqxw9nsQoXWf0qOqppziKJKHMD4GtA==",\n      "requires": {\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-ordered-values": {\n      "version": "4.1.2",\n      "resolved": "https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-4.1.2.tgz",\n      "integrity": "sha512-2fCObh5UanxvSxeXrtLtlwVThBvHn6MQcu4ksNT2tsaV2Fg76R2CV98W7wNSlX+5/pFwEyaDwKLLoEV7uRybAw==",\n      "requires": {\n        "cssnano-util-get-arguments": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-overflow-shorthand": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-overflow-shorthand/-/postcss-overflow-shorthand-2.0.0.tgz",\n      "integrity": "sha512-aK0fHc9CBNx8jbzMYhshZcEv8LtYnBIRYQD5i7w/K/wS9c2+0NSR6B3OVMu5y0hBHYLcMGjfU+dmWYNKH0I85g==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-page-break": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-page-break/-/postcss-page-break-2.0.0.tgz",\n      "integrity": "sha512-tkpTSrLpfLfD9HvgOlJuigLuk39wVTbbd8RKcy8/ugV2bNBUW3xU+AIqyxhDrQr1VUj1RmyJrBn1YWrqUm9zAQ==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-place": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-place/-/postcss-place-4.0.1.tgz",\n      "integrity": "sha512-Zb6byCSLkgRKLODj/5mQugyuj9bvAAw9LqJJjgwz5cYryGeXfFZfSXoP1UfveccFmeq0b/2xxwcTEVScnqGxBg==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-values-parser": "^2.0.0"\n      }\n    },\n    "postcss-preset-env": {\n      "version": "6.6.0",\n      "resolved": "https://registry.npmjs.org/postcss-preset-env/-/postcss-preset-env-6.6.0.tgz",\n      "integrity": "sha512-I3zAiycfqXpPIFD6HXhLfWXIewAWO8emOKz+QSsxaUZb9Dp8HbF5kUf+4Wy/AxR33o+LRoO8blEWCHth0ZsCLA==",\n      "requires": {\n        "autoprefixer": "^9.4.9",\n        "browserslist": "^4.4.2",\n        "caniuse-lite": "^1.0.30000939",\n        "css-blank-pseudo": "^0.1.4",\n        "css-has-pseudo": "^0.10.0",\n        "css-prefers-color-scheme": "^3.1.1",\n        "cssdb": "^4.3.0",\n        "postcss": "^7.0.14",\n        "postcss-attribute-case-insensitive": "^4.0.1",\n        "postcss-color-functional-notation": "^2.0.1",\n        "postcss-color-gray": "^5.0.0",\n        "postcss-color-hex-alpha": "^5.0.2",\n        "postcss-color-mod-function": "^3.0.3",\n        "postcss-color-rebeccapurple": "^4.0.1",\n        "postcss-custom-media": "^7.0.7",\n        "postcss-custom-properties": "^8.0.9",\n        "postcss-custom-selectors": "^5.1.2",\n        "postcss-dir-pseudo-class": "^5.0.0",\n        "postcss-double-position-gradients": "^1.0.0",\n        "postcss-env-function": "^2.0.2",\n        "postcss-focus-visible": "^4.0.0",\n        "postcss-focus-within": "^3.0.0",\n        "postcss-font-variant": "^4.0.0",\n        "postcss-gap-properties": "^2.0.0",\n        "postcss-image-set-function": "^3.0.1",\n        "postcss-initial": "^3.0.0",\n        "postcss-lab-function": "^2.0.1",\n        "postcss-logical": "^3.0.0",\n        "postcss-media-minmax": "^4.0.0",\n        "postcss-nesting": "^7.0.0",\n        "postcss-overflow-shorthand": "^2.0.0",\n        "postcss-page-break": "^2.0.0",\n        "postcss-place": "^4.0.1",\n        "postcss-pseudo-class-any-link": "^6.0.0",\n        "postcss-replace-overflow-wrap": "^3.0.0",\n        "postcss-selector-matches": "^4.0.0",\n        "postcss-selector-not": "^4.0.0"\n      }\n    },\n    "postcss-pseudo-class-any-link": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-pseudo-class-any-link/-/postcss-pseudo-class-any-link-6.0.0.tgz",\n      "integrity": "sha512-lgXW9sYJdLqtmw23otOzrtbDXofUdfYzNm4PIpNE322/swES3VU9XlXHeJS46zT2onFO7V1QFdD4Q9LiZj8mew==",\n      "requires": {\n        "postcss": "^7.0.2",\n        "postcss-selector-parser": "^5.0.0-rc.3"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "^2.0.0",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-reduce-initial": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-4.0.3.tgz",\n      "integrity": "sha512-gKWmR5aUulSjbzOfD9AlJiHCGH6AEVLaM0AV+aSioxUDd16qXP1PCh8d1/BGVvpdWn8k/HiK7n6TjeoXN1F7DA==",\n      "requires": {\n        "browserslist": "^4.0.0",\n        "caniuse-api": "^3.0.0",\n        "has": "^1.0.0",\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-reduce-transforms": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-4.0.2.tgz",\n      "integrity": "sha512-EEVig1Q2QJ4ELpJXMZR8Vt5DQx8/mo+dGWSR7vWXqcob2gQLyQGsionYcGKATXvQzMPn6DSN1vTN7yFximdIAg==",\n      "requires": {\n        "cssnano-util-get-match": "^4.0.0",\n        "has": "^1.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0"\n      }\n    },\n    "postcss-replace-overflow-wrap": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-replace-overflow-wrap/-/postcss-replace-overflow-wrap-3.0.0.tgz",\n      "integrity": "sha512-2T5hcEHArDT6X9+9dVSPQdo7QHzG4XKclFT8rU5TzJPDN7RIRTbO9c4drUISOVemLj03aezStHCR2AIcr8XLpw==",\n      "requires": {\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-safe-parser": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-4.0.1.tgz",\n      "integrity": "sha512-xZsFA3uX8MO3yAda03QrG3/Eg1LN3EPfjjf07vke/46HERLZyHrTsQ9E1r1w1W//fWEhtYNndo2hQplN2cVpCQ==",\n      "requires": {\n        "postcss": "^7.0.0"\n      }\n    },\n    "postcss-selector-matches": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-selector-matches/-/postcss-selector-matches-4.0.0.tgz",\n      "integrity": "sha512-LgsHwQR/EsRYSqlwdGzeaPKVT0Ml7LAT6E75T8W8xLJY62CE4S/l03BWIt3jT8Taq22kXP08s2SfTSzaraoPww==",\n      "requires": {\n        "balanced-match": "^1.0.0",\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-selector-not": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-selector-not/-/postcss-selector-not-4.0.0.tgz",\n      "integrity": "sha512-W+bkBZRhqJaYN8XAnbbZPLWMvZD1wKTu0UxtFKdhtGjWYmxhkUneoeOhRJKdAE5V7ZTlnbHfCR+6bNwK9e1dTQ==",\n      "requires": {\n        "balanced-match": "^1.0.0",\n        "postcss": "^7.0.2"\n      }\n    },\n    "postcss-selector-parser": {\n      "version": "6.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.2.tgz",\n      "integrity": "sha512-36P2QR59jDTOAiIkqEprfJDsoNrvwFei3eCqKd1Y0tUsBimsq39BLp7RD+JWny3WgB1zGhJX8XVePwm9k4wdBg==",\n      "requires": {\n        "cssesc": "^3.0.0",\n        "indexes-of": "^1.0.1",\n        "uniq": "^1.0.1"\n      }\n    },\n    "postcss-svgo": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-4.0.2.tgz",\n      "integrity": "sha512-C6wyjo3VwFm0QgBy+Fu7gCYOkCmgmClghO+pjcxvrcBKtiKt0uCF+hvbMO1fyv5BMImRK90SMb+dwUnfbGd+jw==",\n      "requires": {\n        "is-svg": "^3.0.0",\n        "postcss": "^7.0.0",\n        "postcss-value-parser": "^3.0.0",\n        "svgo": "^1.0.0"\n      }\n    },\n    "postcss-unique-selectors": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-4.0.1.tgz",\n      "integrity": "sha512-+JanVaryLo9QwZjKrmJgkI4Fn8SBgRO6WXQBJi7KiAVPlmxikB5Jzc4EvXMT2H0/m0RjrVVm9rGNhZddm/8Spg==",\n      "requires": {\n        "alphanum-sort": "^1.0.0",\n        "postcss": "^7.0.0",\n        "uniqs": "^2.0.0"\n      }\n    },\n    "postcss-value-parser": {\n      "version": "3.3.1",\n      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",\n      "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="\n    },\n    "postcss-values-parser": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-values-parser/-/postcss-values-parser-2.0.1.tgz",\n      "integrity": "sha512-2tLuBsA6P4rYTNKCXYG/71C7j1pU6pK503suYOmn4xYrQIzW+opD+7FAFNuGSdZC/3Qfy334QbeMu7MEb8gOxg==",\n      "requires": {\n        "flatten": "^1.0.2",\n        "indexes-of": "^1.0.1",\n        "uniq": "^1.0.1"\n      }\n    },\n    "prelude-ls": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",\n      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="\n    },\n    "preserve": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz",\n      "integrity": "sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks="\n    },\n    "pretty-bytes": {\n      "version": "5.1.0",\n      "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.1.0.tgz",\n      "integrity": "sha512-wa5+qGVg9Yt7PB6rYm3kXlKzgzgivYTLRandezh43jjRqgyDyP+9YxfJpJiLs9yKD1WeU8/OvtToWpW7255FtA=="\n    },\n    "pretty-error": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/pretty-error/-/pretty-error-2.1.1.tgz",\n      "integrity": "sha1-X0+HyPkeWuPzuoerTPXgOxoX8aM=",\n      "requires": {\n        "renderkid": "^2.0.1",\n        "utila": "~0.4"\n      }\n    },\n    "pretty-format": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-24.7.0.tgz",\n      "integrity": "sha512-apen5cjf/U4dj7tHetpC7UEFCvtAgnNZnBDkfPv3fokzIqyOJckAG9OlAPC1BlFALnqT/lGB2tl9EJjlK6eCsA==",\n      "requires": {\n        "@jest/types": "^24.7.0",\n        "ansi-regex": "^4.0.0",\n        "ansi-styles": "^3.2.0",\n        "react-is": "^16.8.4"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        }\n      }\n    },\n    "pretty-hrtime": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/pretty-hrtime/-/pretty-hrtime-1.0.3.tgz",\n      "integrity": "sha1-t+PqQkNaTJsnWdmeDyAesZWALuE="\n    },\n    "private": {\n      "version": "0.1.8",\n      "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",\n      "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg=="\n    },\n    "process": {\n      "version": "0.11.10",\n      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",\n      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI="\n    },\n    "process-nextick-args": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz",\n      "integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw=="\n    },\n    "progress": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",\n      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA=="\n    },\n    "promise": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/promise/-/promise-8.0.2.tgz",\n      "integrity": "sha512-EIyzM39FpVOMbqgzEHhxdrEhtOSDOtjMZQ0M6iVfCE+kWNgCkAyOdnuCWqfmflylftfadU6FkiMgHZA2kUzwRw==",\n      "requires": {\n        "asap": "~2.0.6"\n      }\n    },\n    "promise-inflight": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",\n      "integrity": "sha1-mEcocL8igTL8vdhoEputEsPAKeM="\n    },\n    "prompt-sui": {\n      "version": "3.2.1",\n      "resolved": "https://registry.npmjs.org/prompt-sui/-/prompt-sui-3.2.1.tgz",\n      "integrity": "sha512-dldrpeYMq4c8oGpHoZIzJnCya96eBECHl167PqpPsrnjdo9795gV/hxvJo0RuiKj28cMlhlqZgOYhXHfXtofHQ==",\n      "requires": {\n        "event-stream": "~3.0.20",\n        "inquirer": "3.2.x"\n      },\n      "dependencies": {\n        "ansi-escapes": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-2.0.0.tgz",\n          "integrity": "sha1-W65SvkJIeN2Xg+iRDj/Cki6DyBs="\n        },\n        "chardet": {\n          "version": "0.4.2",\n          "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",\n          "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="\n        },\n        "external-editor": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",\n          "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",\n          "requires": {\n            "chardet": "^0.4.0",\n            "iconv-lite": "^0.4.17",\n            "tmp": "^0.0.33"\n          }\n        },\n        "inquirer": {\n          "version": "3.2.3",\n          "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-3.2.3.tgz",\n          "integrity": "sha512-Bc3KbimpDTOeQdDj18Ir/rlsGuhBSSNqdOnxaAuKhpkdnMMuKsEGbZD2v5KFF9oso2OU+BPh7+/u5obmFDRmWw==",\n          "requires": {\n            "ansi-escapes": "^2.0.0",\n            "chalk": "^2.0.0",\n            "cli-cursor": "^2.1.0",\n            "cli-width": "^2.0.0",\n            "external-editor": "^2.0.4",\n            "figures": "^2.0.0",\n            "lodash": "^4.3.0",\n            "mute-stream": "0.0.7",\n            "run-async": "^2.2.0",\n            "rx-lite": "^4.0.8",\n            "rx-lite-aggregates": "^4.0.8",\n            "string-width": "^2.1.0",\n            "strip-ansi": "^4.0.0",\n            "through": "^2.3.6"\n          }\n        }\n      }\n    },\n    "prompts": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.0.4.tgz",\n      "integrity": "sha512-HTzM3UWp/99A0gk51gAegwo1QRYA7xjcZufMNe33rCclFszUYAuHe1fIN/3ZmiHeGPkUsNaRyQm1hHOfM0PKxA==",\n      "requires": {\n        "kleur": "^3.0.2",\n        "sisteransi": "^1.0.0"\n      }\n    },\n    "prop-types": {\n      "version": "15.7.2",\n      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.7.2.tgz",\n      "integrity": "sha512-8QQikdH7//R2vurIJSutZ1smHYTcLpRWEOlHnzcWHmBYrOGUysKwSsrC89BCiFj3CbrfJ/nXFdJepOVrY1GCHQ==",\n      "requires": {\n        "loose-envify": "^1.4.0",\n        "object-assign": "^4.1.1",\n        "react-is": "^16.8.1"\n      }\n    },\n    "property-information": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/property-information/-/property-information-5.0.1.tgz",\n      "integrity": "sha512-nAtBDVeSwFM3Ot/YxT7s4NqZmqXI7lLzf46BThvotEtYf2uk2yH0ACYuWQkJ7gxKs49PPtKVY0UlDGkyN9aJlw==",\n      "requires": {\n        "xtend": "^4.0.1"\n      }\n    },\n    "proto-list": {\n      "version": "1.2.4",\n      "resolved": "https://registry.npmjs.org/proto-list/-/proto-list-1.2.4.tgz",\n      "integrity": "sha1-IS1b/hMYMGpCD2QCuOJv85ZHqEk="\n    },\n    "proxy-addr": {\n      "version": "2.0.5",\n      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.5.tgz",\n      "integrity": "sha512-t/7RxHXPH6cJtP0pRG6smSr9QJidhB+3kXu0KgXnbGYMgzEnUxRQ4/LDdfOwZEMyIh3/xHb8PX3t+lfL9z+YVQ==",\n      "requires": {\n        "forwarded": "~0.1.2",\n        "ipaddr.js": "1.9.0"\n      }\n    },\n    "prr": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/prr/-/prr-1.0.1.tgz",\n      "integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="\n    },\n    "pseudomap": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",\n      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM="\n    },\n    "psl": {\n      "version": "1.1.31",\n      "resolved": "https://registry.npmjs.org/psl/-/psl-1.1.31.tgz",\n      "integrity": "sha512-/6pt4+C+T+wZUieKR620OpzN/LlnNKuWjy1iFLQ/UG35JqHlR/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw=="\n    },\n    "public-encrypt": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",\n      "integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",\n      "requires": {\n        "bn.js": "^4.1.0",\n        "browserify-rsa": "^4.0.0",\n        "create-hash": "^1.1.0",\n        "parse-asn1": "^5.0.0",\n        "randombytes": "^2.0.1",\n        "safe-buffer": "^5.1.2"\n      }\n    },\n    "pump": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",\n      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",\n      "requires": {\n        "end-of-stream": "^1.1.0",\n        "once": "^1.3.1"\n      }\n    },\n    "pumpify": {\n      "version": "1.5.1",\n      "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.5.1.tgz",\n      "integrity": "sha512-oClZI37HvuUJJxSKKrC17bZ9Cu0ZYhEAGPsPUy9KlMUmv9dKX2o77RUmq7f3XjIxbwyGwYzbzQ1L2Ks8sIradQ==",\n      "requires": {\n        "duplexify": "^3.6.0",\n        "inherits": "^2.0.3",\n        "pump": "^2.0.0"\n      },\n      "dependencies": {\n        "pump": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",\n          "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",\n          "requires": {\n            "end-of-stream": "^1.1.0",\n            "once": "^1.3.1"\n          }\n        }\n      }\n    },\n    "punycode": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",\n      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="\n    },\n    "q": {\n      "version": "1.5.1",\n      "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",\n      "integrity": "sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc="\n    },\n    "qs": {\n      "version": "6.5.2",\n      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",\n      "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="\n    },\n    "querystring": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",\n      "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA="\n    },\n    "querystring-es3": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",\n      "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM="\n    },\n    "querystringify": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.1.1.tgz",\n      "integrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA=="\n    },\n    "radix-trie-js": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/radix-trie-js/-/radix-trie-js-1.0.5.tgz",\n      "integrity": "sha512-3Olqy+P8cM5G2x+mnhD231bRM8c2uxAyU7uLS/dORgwzmr2CJKhT6DeQGqZyjsfWuqCYeX415xlMr1J6Xt7M9Q=="\n    },\n    "raf": {\n      "version": "3.4.1",\n      "resolved": "https://registry.npmjs.org/raf/-/raf-3.4.1.tgz",\n      "integrity": "sha512-Sq4CW4QhwOHE8ucn6J34MqtZCeWFP2aQSmrlroYgqAV1PjStIhJXxYuTgUIfkEk7zTLjmIjLmU5q+fbD1NnOJA==",\n      "requires": {\n        "performance-now": "^2.1.0"\n      }\n    },\n    "randomatic": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-3.1.1.tgz",\n      "integrity": "sha512-TuDE5KxZ0J461RVjrJZCJc+J+zCkTb1MbH9AQUq68sMhOMcy9jLcb3BrZKgp9q9Ncltdg4QVqWrH02W2EFFVYw==",\n      "requires": {\n        "is-number": "^4.0.0",\n        "kind-of": "^6.0.0",\n        "math-random": "^1.0.1"\n      },\n      "dependencies": {\n        "is-number": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",\n          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "randombytes": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",\n      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",\n      "requires": {\n        "safe-buffer": "^5.1.0"\n      }\n    },\n    "randomfill": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",\n      "integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",\n      "requires": {\n        "randombytes": "^2.0.5",\n        "safe-buffer": "^5.1.0"\n      }\n    },\n    "range-parser": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.0.tgz",\n      "integrity": "sha1-9JvmtIeJTdxA3MlKMi9hEJLgDV4="\n    },\n    "raw-body": {\n      "version": "2.3.3",\n      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",\n      "integrity": "sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==",\n      "requires": {\n        "bytes": "3.0.0",\n        "http-errors": "1.6.3",\n        "iconv-lite": "0.4.23",\n        "unpipe": "1.0.0"\n      },\n      "dependencies": {\n        "iconv-lite": {\n          "version": "0.4.23",\n          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz",\n          "integrity": "sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==",\n          "requires": {\n            "safer-buffer": ">= 2.1.2 < 3"\n          }\n        }\n      }\n    },\n    "react": {\n      "version": "16.8.6",\n      "resolved": "https://registry.npmjs.org/react/-/react-16.8.6.tgz",\n      "integrity": "sha512-pC0uMkhLaHm11ZSJULfOBqV4tIZkx87ZLvbbQYunNixAAvjnC+snJCg0XQXn9VIsttVsbZP/H/ewzgsd5fxKXw==",\n      "requires": {\n        "loose-envify": "^1.1.0",\n        "object-assign": "^4.1.1",\n        "prop-types": "^15.6.2",\n        "scheduler": "^0.13.6"\n      }\n    },\n    "react-app-polyfill": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/react-app-polyfill/-/react-app-polyfill-1.0.0.tgz",\n      "integrity": "sha512-fbZxEZdfx+rVENMvGTFjUcDDOZGKHaiavA8Y+FwM2I/o8gJT6pCYZk19XfeOntVzGZH2F1qqH7SLjXMhUM+YJw==",\n      "requires": {\n        "core-js": "3.0.1",\n        "object-assign": "4.1.1",\n        "promise": "8.0.2",\n        "raf": "3.4.1",\n        "regenerator-runtime": "0.13.2",\n        "whatwg-fetch": "3.0.0"\n      }\n    },\n    "react-dev-utils": {\n      "version": "9.0.0",\n      "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-9.0.0.tgz",\n      "integrity": "sha512-HXvxOnABzIQH804ros5dBFryw4x0FU7Tl5KU2xg71jKx0EDsJYK0LuVVdj9qoLIgD1pmjzpjl7q7pjwXKIe37A==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "address": "1.0.3",\n        "browserslist": "4.5.4",\n        "chalk": "2.4.2",\n        "cross-spawn": "6.0.5",\n        "detect-port-alt": "1.1.6",\n        "escape-string-regexp": "1.0.5",\n        "filesize": "3.6.1",\n        "find-up": "3.0.0",\n        "fork-ts-checker-webpack-plugin": "1.0.1",\n        "global-modules": "2.0.0",\n        "globby": "8.0.2",\n        "gzip-size": "5.0.0",\n        "immer": "1.10.0",\n        "inquirer": "6.2.2",\n        "is-root": "2.0.0",\n        "loader-utils": "1.2.3",\n        "opn": "5.4.0",\n        "pkg-up": "2.0.0",\n        "react-error-overlay": "^5.1.5",\n        "recursive-readdir": "2.2.2",\n        "shell-quote": "1.6.1",\n        "sockjs-client": "1.3.0",\n        "strip-ansi": "5.2.0",\n        "text-table": "0.2.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "browserslist": {\n          "version": "4.5.4",\n          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.5.4.tgz",\n          "integrity": "sha512-rAjx494LMjqKnMPhFkuLmLp8JWEX0o8ADTGeAbOqaF+XCvYLreZrG5uVjnPBlAQ8REZK4pzXGvp0bWgrFtKaag==",\n          "requires": {\n            "caniuse-lite": "^1.0.30000955",\n            "electron-to-chromium": "^1.3.122",\n            "node-releases": "^1.1.13"\n          }\n        },\n        "inquirer": {\n          "version": "6.2.2",\n          "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.2.2.tgz",\n          "integrity": "sha512-Z2rREiXA6cHRR9KBOarR3WuLlFzlIfAEIiB45ll5SSadMg7WqOh1MKEjjndfuH5ewXdixWCxqnVfGOQzPeiztA==",\n          "requires": {\n            "ansi-escapes": "^3.2.0",\n            "chalk": "^2.4.2",\n            "cli-cursor": "^2.1.0",\n            "cli-width": "^2.0.0",\n            "external-editor": "^3.0.3",\n            "figures": "^2.0.0",\n            "lodash": "^4.17.11",\n            "mute-stream": "0.0.7",\n            "run-async": "^2.2.0",\n            "rxjs": "^6.4.0",\n            "string-width": "^2.1.0",\n            "strip-ansi": "^5.0.0",\n            "through": "^2.3.6"\n          }\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "^4.1.0"\n          }\n        }\n      }\n    },\n    "react-dom": {\n      "version": "16.8.6",\n      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-16.8.6.tgz",\n      "integrity": "sha512-1nL7PIq9LTL3fthPqwkvr2zY7phIPjYrT0jp4HjyEQrEROnw4dG41VVwi/wfoCneoleqrNX7iAD+pXebJZwrwA==",\n      "requires": {\n        "loose-envify": "^1.1.0",\n        "object-assign": "^4.1.1",\n        "prop-types": "^15.6.2",\n        "scheduler": "^0.13.6"\n      }\n    },\n    "react-draggable": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/react-draggable/-/react-draggable-3.3.0.tgz",\n      "integrity": "sha512-U7/jD0tAW4T0S7DCPK0kkKLyL0z61sC/eqU+NUfDjnq+JtBKaYKDHpsK2wazctiA4alEzCXUnzkREoxppOySVw==",\n      "requires": {\n        "classnames": "^2.2.5",\n        "prop-types": "^15.6.0"\n      }\n    },\n    "react-error-overlay": {\n      "version": "5.1.5",\n      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-5.1.5.tgz",\n      "integrity": "sha512-O9JRum1Zq/qCPFH5qVEvDDrVun8Jv9vbHtZXCR1EuRj9sKg1xJTlHxBzU6AkCzpvxRLuiY4OKImy3cDLQ+UTdg=="\n    },\n    "react-event-listener": {\n      "version": "0.6.6",\n      "resolved": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.6.6.tgz",\n      "integrity": "sha512-+hCNqfy7o9wvO6UgjqFmBzARJS7qrNoda0VqzvOuioEpoEXKutiKuv92dSz6kP7rYLmyHPyYNLesi5t/aH1gfw==",\n      "requires": {\n        "@babel/runtime": "^7.2.0",\n        "prop-types": "^15.6.0",\n        "warning": "^4.0.1"\n      }\n    },\n    "react-input-autosize": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/react-input-autosize/-/react-input-autosize-2.2.1.tgz",\n      "integrity": "sha512-3+K4CD13iE4lQQ2WlF8PuV5htfmTRLH6MDnfndHM6LuBRszuXnuyIfE7nhSKt8AzRBZ50bu0sAhkNMeS5pxQQA==",\n      "requires": {\n        "prop-types": "^15.5.8"\n      }\n    },\n    "react-is": {\n      "version": "16.8.6",\n      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.8.6.tgz",\n      "integrity": "sha512-aUk3bHfZ2bRSVFFbbeVS4i+lNPZr3/WM5jT2J5omUVV1zzcs1nAaf3l51ctA5FFvCRbhrH0bdAsRRQddFJZPtA=="\n    },\n    "react-lifecycles-compat": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",\n      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="\n    },\n    "react-numeric-input": {\n      "version": "2.2.3",\n      "resolved": "https://registry.npmjs.org/react-numeric-input/-/react-numeric-input-2.2.3.tgz",\n      "integrity": "sha1-S/WRjD6v7YUagN8euZLZQQArtVI="\n    },\n    "react-pointerlock": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/react-pointerlock/-/react-pointerlock-1.1.3.tgz",\n      "integrity": "sha1-peoOvdztiMD/UNVCDqRR9nYEjzg=",\n      "requires": {\n        "classnames": "^2.2.1",\n        "react": "^0.14.3",\n        "react-dom": "^0.14.3"\n      },\n      "dependencies": {\n        "core-js": {\n          "version": "1.2.7",\n          "resolved": "https://registry.npmjs.org/core-js/-/core-js-1.2.7.tgz",\n          "integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="\n        },\n        "fbjs": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-0.6.1.tgz",\n          "integrity": "sha1-lja3cF9bqWhNRLcveDISVK/IYPc=",\n          "requires": {\n            "core-js": "^1.0.0",\n            "loose-envify": "^1.0.0",\n            "promise": "^7.0.3",\n            "ua-parser-js": "^0.7.9",\n            "whatwg-fetch": "^0.9.0"\n          }\n        },\n        "promise": {\n          "version": "7.3.1",\n          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",\n          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",\n          "requires": {\n            "asap": "~2.0.3"\n          }\n        },\n        "react": {\n          "version": "0.14.9",\n          "resolved": "https://registry.npmjs.org/react/-/react-0.14.9.tgz",\n          "integrity": "sha1-kRCmSXxJ1EuhwO3TF67CnC4NkdE=",\n          "requires": {\n            "envify": "^3.0.0",\n            "fbjs": "^0.6.1"\n          }\n        },\n        "react-dom": {\n          "version": "0.14.9",\n          "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-0.14.9.tgz",\n          "integrity": "sha1-BQZKPc8PsYgKOyv8nVjFXY2fYpM="\n        },\n        "whatwg-fetch": {\n          "version": "0.9.0",\n          "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-0.9.0.tgz",\n          "integrity": "sha1-DjaExsuZlbQ+/J3wPkw2XZX9nMA="\n        }\n      }\n    },\n    "react-resizable": {\n      "version": "1.7.5",\n      "resolved": "https://registry.npmjs.org/react-resizable/-/react-resizable-1.7.5.tgz",\n      "integrity": "sha512-lauPcBsLqmxMHXHpTeOBpYenGalbSikYr8hK+lwtNYMQX1pGd2iYE+pDvZEV97nCnzuCtWM9htp7OpsBIY2Sjw==",\n      "requires": {\n        "prop-types": "15.x",\n        "react-draggable": "^2.2.6 || ^3.0.3"\n      }\n    },\n    "react-scripts": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/react-scripts/-/react-scripts-3.0.0.tgz",\n      "integrity": "sha512-F4HegoBuUKZvEzXYksQu05Y6vJqallhHkQUEL6M7OQ5rYLBQC/4MTK6km9ZZvEK9TqMy1XA8SSEJGJgTEr6bSQ==",\n      "requires": {\n        "@babel/core": "7.4.3",\n        "@svgr/webpack": "4.1.0",\n        "@typescript-eslint/eslint-plugin": "1.6.0",\n        "@typescript-eslint/parser": "1.6.0",\n        "babel-eslint": "10.0.1",\n        "babel-jest": "24.7.1",\n        "babel-loader": "8.0.5",\n        "babel-plugin-named-asset-import": "^0.3.2",\n        "babel-preset-react-app": "^8.0.0",\n        "case-sensitive-paths-webpack-plugin": "2.2.0",\n        "css-loader": "2.1.1",\n        "dotenv": "6.2.0",\n        "dotenv-expand": "4.2.0",\n        "eslint": "^5.16.0",\n        "eslint-config-react-app": "^4.0.0",\n        "eslint-loader": "2.1.2",\n        "eslint-plugin-flowtype": "2.50.1",\n        "eslint-plugin-import": "2.16.0",\n        "eslint-plugin-jsx-a11y": "6.2.1",\n        "eslint-plugin-react": "7.12.4",\n        "eslint-plugin-react-hooks": "^1.5.0",\n        "file-loader": "3.0.1",\n        "fs-extra": "7.0.1",\n        "fsevents": "2.0.6",\n        "html-webpack-plugin": "4.0.0-beta.5",\n        "identity-obj-proxy": "3.0.0",\n        "is-wsl": "^1.1.0",\n        "jest": "24.7.1",\n        "jest-environment-jsdom-fourteen": "0.1.0",\n        "jest-resolve": "24.7.1",\n        "jest-watch-typeahead": "0.3.0",\n        "mini-css-extract-plugin": "0.5.0",\n        "optimize-css-assets-webpack-plugin": "5.0.1",\n        "pnp-webpack-plugin": "1.2.1",\n        "postcss-flexbugs-fixes": "4.1.0",\n        "postcss-loader": "3.0.0",\n        "postcss-normalize": "7.0.1",\n        "postcss-preset-env": "6.6.0",\n        "postcss-safe-parser": "4.0.1",\n        "react-app-polyfill": "^1.0.0",\n        "react-dev-utils": "^9.0.0",\n        "resolve": "1.10.0",\n        "sass-loader": "7.1.0",\n        "semver": "6.0.0",\n        "style-loader": "0.23.1",\n        "terser-webpack-plugin": "1.2.3",\n        "url-loader": "1.1.2",\n        "webpack": "4.29.6",\n        "webpack-dev-server": "3.2.1",\n        "webpack-manifest-plugin": "2.0.4",\n        "workbox-webpack-plugin": "4.2.0"\n      }\n    },\n    "react-select": {\n      "version": "2.4.3",\n      "resolved": "https://registry.npmjs.org/react-select/-/react-select-2.4.3.tgz",\n      "integrity": "sha512-cmxNaiHpviRYkojeW9rGEUJ4jpX7QTmPe2wcscwA4d1lStzw/cJtr4ft5H2O/YhfpkrcwaLghu3XmEYdXhBo8Q==",\n      "requires": {\n        "classnames": "^2.2.5",\n        "emotion": "^9.1.2",\n        "memoize-one": "^5.0.0",\n        "prop-types": "^15.6.0",\n        "raf": "^3.4.0",\n        "react-input-autosize": "^2.2.1",\n        "react-transition-group": "^2.2.1"\n      }\n    },\n    "react-split": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/react-split/-/react-split-2.0.4.tgz",\n      "integrity": "sha512-NBKm9MaqzG/00laMUaS8GS9RnItVSekNNwItgGLMbFTeUa9w4bIY8Co/LszNBnpza9n2am0MXIw3SmyiMnhs+w==",\n      "requires": {\n        "prop-types": "^15.5.7",\n        "split.js": "^1.5.9"\n      }\n    },\n    "react-tooltip": {\n      "version": "3.10.0",\n      "resolved": "https://registry.npmjs.org/react-tooltip/-/react-tooltip-3.10.0.tgz",\n      "integrity": "sha512-GGdxJvM1zSFztkTP7gCQbLTstWr1OOoMpJ5WZUGhimj0nhRY+MPz+92MpEnKmj0cftJ9Pd/M6FfSl0sfzmZWkg==",\n      "requires": {\n        "classnames": "^2.2.5",\n        "prop-types": "^15.6.0"\n      }\n    },\n    "react-transition-group": {\n      "version": "2.9.0",\n      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-2.9.0.tgz",\n      "integrity": "sha512-+HzNTCHpeQyl4MJ/bdE0u6XRMe9+XG/+aL4mCxVN4DnPBQ0/5bfHWPDuOZUzYdMj94daZaZdCCc1Dzt9R/xSSg==",\n      "requires": {\n        "dom-helpers": "^3.4.0",\n        "loose-envify": "^1.4.0",\n        "prop-types": "^15.6.2",\n        "react-lifecycles-compat": "^3.0.4"\n      }\n    },\n    "read-pkg": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",\n      "integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",\n      "requires": {\n        "load-json-file": "^4.0.0",\n        "normalize-package-data": "^2.3.2",\n        "path-type": "^3.0.0"\n      }\n    },\n    "read-pkg-up": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",\n      "integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",\n      "requires": {\n        "find-up": "^3.0.0",\n        "read-pkg": "^3.0.0"\n      }\n    },\n    "readable-stream": {\n      "version": "2.3.6",\n      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",\n      "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",\n      "requires": {\n        "core-util-is": "~1.0.0",\n        "inherits": "~2.0.3",\n        "isarray": "~1.0.0",\n        "process-nextick-args": "~2.0.0",\n        "safe-buffer": "~5.1.1",\n        "string_decoder": "~1.1.1",\n        "util-deprecate": "~1.0.1"\n      }\n    },\n    "readdirp": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",\n      "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",\n      "requires": {\n        "graceful-fs": "^4.1.11",\n        "micromatch": "^3.1.10",\n        "readable-stream": "^2.0.2"\n      }\n    },\n    "realpath-native": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-1.1.0.tgz",\n      "integrity": "sha512-wlgPA6cCIIg9gKz0fgAPjnzh4yR/LnXovwuo9hvyGvx3h8nX4+/iLZplfUWasXpqD8BdnGnP5njOFjkUwPzvjA==",\n      "requires": {\n        "util.promisify": "^1.0.0"\n      }\n    },\n    "recast": {\n      "version": "0.11.23",\n      "resolved": "https://registry.npmjs.org/recast/-/recast-0.11.23.tgz",\n      "integrity": "sha1-RR/TAEqx5N+bTktmN2sqIZEkYtM=",\n      "requires": {\n        "ast-types": "0.9.6",\n        "esprima": "~3.1.0",\n        "private": "~0.1.5",\n        "source-map": "~0.5.0"\n      },\n      "dependencies": {\n        "esprima": {\n          "version": "3.1.3",\n          "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",\n          "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="\n        }\n      }\n    },\n    "rechoir": {\n      "version": "0.6.2",\n      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",\n      "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",\n      "requires": {\n        "resolve": "^1.1.6"\n      }\n    },\n    "recompose": {\n      "version": "0.30.0",\n      "resolved": "https://registry.npmjs.org/recompose/-/recompose-0.30.0.tgz",\n      "integrity": "sha512-ZTrzzUDa9AqUIhRk4KmVFihH0rapdCSMFXjhHbNrjAWxBuUD/guYlyysMnuHjlZC/KRiOKRtB4jf96yYSkKE8w==",\n      "requires": {\n        "@babel/runtime": "^7.0.0",\n        "change-emitter": "^0.1.2",\n        "fbjs": "^0.8.1",\n        "hoist-non-react-statics": "^2.3.1",\n        "react-lifecycles-compat": "^3.0.2",\n        "symbol-observable": "^1.0.4"\n      },\n      "dependencies": {\n        "hoist-non-react-statics": {\n          "version": "2.5.5",\n          "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-2.5.5.tgz",\n          "integrity": "sha512-rqcy4pJo55FTTLWt+bU8ukscqHeE/e9KWvsOW2b/a3afxQZhwkQdT1rPPCJ0rYXdj4vNcasY8zHTH+jF/qStxw=="\n        }\n      }\n    },\n    "recursive-readdir": {\n      "version": "2.2.2",\n      "resolved": "https://registry.npmjs.org/recursive-readdir/-/recursive-readdir-2.2.2.tgz",\n      "integrity": "sha512-nRCcW9Sj7NuZwa2XvH9co8NPeXUBhZP7CRKJtU+cS6PW9FpCIFoI5ib0NT1ZrbNuPoRy0ylyCaUL8Gih4LSyFg==",\n      "requires": {\n        "minimatch": "3.0.4"\n      }\n    },\n    "regenerate": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",\n      "integrity": "sha512-1G6jJVDWrt0rK99kBjvEtziZNCICAuvIPkSiUFIQxVP06RCVpq3dmDo2oi6ABpYaDYaTRr67BEhL8r1wgEZZKg=="\n    },\n    "regenerate-unicode-properties": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-8.0.2.tgz",\n      "integrity": "sha512-SbA/iNrBUf6Pv2zU8Ekv1Qbhv92yxL4hiDa2siuxs4KKn4oOoMDHXjAf7+Nz9qinUQ46B1LcWEi/PhJfPWpZWQ==",\n      "requires": {\n        "regenerate": "^1.4.0"\n      }\n    },\n    "regenerator-runtime": {\n      "version": "0.13.2",\n      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.2.tgz",\n      "integrity": "sha512-S/TQAZJO+D3m9xeN1WTI8dLKBBiRgXBlTJvbWjCThHWZj9EvHK70Ff50/tYj2J/fvBY6JtFVwRuazHN2E7M9BA=="\n    },\n    "regenerator-transform": {\n      "version": "0.13.4",\n      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.13.4.tgz",\n      "integrity": "sha512-T0QMBjK3J0MtxjPmdIMXm72Wvj2Abb0Bd4HADdfijwMdoIsyQZ6fWC7kDFhk2YinBBEMZDL7Y7wh0J1sGx3S4A==",\n      "requires": {\n        "private": "^0.1.6"\n      }\n    },\n    "regex-cache": {\n      "version": "0.4.4",\n      "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.4.tgz",\n      "integrity": "sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==",\n      "requires": {\n        "is-equal-shallow": "^0.1.3"\n      }\n    },\n    "regex-not": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",\n      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",\n      "requires": {\n        "extend-shallow": "^3.0.2",\n        "safe-regex": "^1.1.0"\n      }\n    },\n    "regexp-tree": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/regexp-tree/-/regexp-tree-0.1.5.tgz",\n      "integrity": "sha512-nUmxvfJyAODw+0B13hj8CFVAxhe7fDEAgJgaotBu3nnR+IgGgZq59YedJP5VYTlkEfqjuK6TuRpnymKdatLZfQ=="\n    },\n    "regexpp": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",\n      "integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw=="\n    },\n    "regexpu-core": {\n      "version": "4.5.4",\n      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.5.4.tgz",\n      "integrity": "sha512-BtizvGtFQKGPUcTy56o3nk1bGRp4SZOTYrDtGNlqCQufptV5IkkLN6Emw+yunAJjzf+C9FQFtvq7IoA3+oMYHQ==",\n      "requires": {\n        "regenerate": "^1.4.0",\n        "regenerate-unicode-properties": "^8.0.2",\n        "regjsgen": "^0.5.0",\n        "regjsparser": "^0.6.0",\n        "unicode-match-property-ecmascript": "^1.0.4",\n        "unicode-match-property-value-ecmascript": "^1.1.0"\n      }\n    },\n    "regjsgen": {\n      "version": "0.5.0",\n      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.5.0.tgz",\n      "integrity": "sha512-RnIrLhrXCX5ow/E5/Mh2O4e/oa1/jW0eaBKTSy3LaCj+M3Bqvm97GWDp2yUtzIs4LEn65zR2yiYGFqb2ApnzDA=="\n    },\n    "regjsparser": {\n      "version": "0.6.0",\n      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.6.0.tgz",\n      "integrity": "sha512-RQ7YyokLiQBomUJuUG8iGVvkgOLxwyZM8k6d3q5SAXpg4r5TZJZigKFvC6PpD+qQ98bCDC5YelPeA3EucDoNeQ==",\n      "requires": {\n        "jsesc": "~0.5.0"\n      },\n      "dependencies": {\n        "jsesc": {\n          "version": "0.5.0",\n          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",\n          "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="\n        }\n      }\n    },\n    "rehype-parse": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/rehype-parse/-/rehype-parse-6.0.0.tgz",\n      "integrity": "sha512-V2OjMD0xcSt39G4uRdMTqDXXm6HwkUbLMDayYKA/d037j8/OtVSQ+tqKwYWOuyBeoCs/3clXRe30VUjeMDTBSA==",\n      "requires": {\n        "hast-util-from-parse5": "^5.0.0",\n        "parse5": "^5.0.0",\n        "xtend": "^4.0.1"\n      }\n    },\n    "relateurl": {\n      "version": "0.2.7",\n      "resolved": "https://registry.npmjs.org/relateurl/-/relateurl-0.2.7.tgz",\n      "integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="\n    },\n    "remove-bom-buffer": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/remove-bom-buffer/-/remove-bom-buffer-3.0.0.tgz",\n      "integrity": "sha512-8v2rWhaakv18qcvNeli2mZ/TMTL2nEyAKRvzo1WtnZBl15SHyEhrCu2/xKlJyUFKHiHgfXIyuY6g2dObJJycXQ==",\n      "requires": {\n        "is-buffer": "^1.1.5",\n        "is-utf8": "^0.2.1"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        }\n      }\n    },\n    "remove-bom-stream": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/remove-bom-stream/-/remove-bom-stream-1.2.0.tgz",\n      "integrity": "sha1-BfGlk/FuQuH7kOv1nejlaVJflSM=",\n      "requires": {\n        "remove-bom-buffer": "^3.0.0",\n        "safe-buffer": "^5.1.0",\n        "through2": "^2.0.3"\n      }\n    },\n    "remove-trailing-separator": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",\n      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8="\n    },\n    "renderkid": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/renderkid/-/renderkid-2.0.3.tgz",\n      "integrity": "sha512-z8CLQp7EZBPCwCnncgf9C4XAi3WR0dv+uWu/PjIyhhAb5d6IJ/QZqlHFprHeKT+59//V6BNUsLbvN8+2LarxGA==",\n      "requires": {\n        "css-select": "^1.1.0",\n        "dom-converter": "^0.2",\n        "htmlparser2": "^3.3.0",\n        "strip-ansi": "^3.0.0",\n        "utila": "^0.4.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "css-select": {\n          "version": "1.2.0",\n          "resolved": "https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz",\n          "integrity": "sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=",\n          "requires": {\n            "boolbase": "~1.0.0",\n            "css-what": "2.1",\n            "domutils": "1.5.1",\n            "nth-check": "~1.0.1"\n          }\n        },\n        "domutils": {\n          "version": "1.5.1",\n          "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz",\n          "integrity": "sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=",\n          "requires": {\n            "dom-serializer": "0",\n            "domelementtype": "1"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        }\n      }\n    },\n    "repeat-element": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",\n      "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g=="\n    },\n    "repeat-string": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",\n      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="\n    },\n    "replace-ext": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.0.tgz",\n      "integrity": "sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs="\n    },\n    "replace-homedir": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/replace-homedir/-/replace-homedir-1.0.0.tgz",\n      "integrity": "sha1-6H9tUTuSjd6AgmDBK+f+xv9ueYw=",\n      "requires": {\n        "homedir-polyfill": "^1.0.1",\n        "is-absolute": "^1.0.0",\n        "remove-trailing-separator": "^1.1.0"\n      }\n    },\n    "replacestream": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/replacestream/-/replacestream-4.0.3.tgz",\n      "integrity": "sha512-AC0FiLS352pBBiZhd4VXB1Ab/lh0lEgpP+GGvZqbQh8a5cmXVoTe5EX/YeTFArnp4SRGTHh1qCHu9lGs1qG8sA==",\n      "requires": {\n        "escape-string-regexp": "^1.0.3",\n        "object-assign": "^4.0.1",\n        "readable-stream": "^2.0.2"\n      }\n    },\n    "request": {\n      "version": "2.88.0",\n      "resolved": "https://registry.npmjs.org/request/-/request-2.88.0.tgz",\n      "integrity": "sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==",\n      "requires": {\n        "aws-sign2": "~0.7.0",\n        "aws4": "^1.8.0",\n        "caseless": "~0.12.0",\n        "combined-stream": "~1.0.6",\n        "extend": "~3.0.2",\n        "forever-agent": "~0.6.1",\n        "form-data": "~2.3.2",\n        "har-validator": "~5.1.0",\n        "http-signature": "~1.2.0",\n        "is-typedarray": "~1.0.0",\n        "isstream": "~0.1.2",\n        "json-stringify-safe": "~5.0.1",\n        "mime-types": "~2.1.19",\n        "oauth-sign": "~0.9.0",\n        "performance-now": "^2.1.0",\n        "qs": "~6.5.2",\n        "safe-buffer": "^5.1.2",\n        "tough-cookie": "~2.4.3",\n        "tunnel-agent": "^0.6.0",\n        "uuid": "^3.3.2"\n      },\n      "dependencies": {\n        "punycode": {\n          "version": "1.4.1",\n          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",\n          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="\n        },\n        "tough-cookie": {\n          "version": "2.4.3",\n          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz",\n          "integrity": "sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==",\n          "requires": {\n            "psl": "^1.1.24",\n            "punycode": "^1.4.1"\n          }\n        }\n      }\n    },\n    "request-promise-core": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.2.tgz",\n      "integrity": "sha512-UHYyq1MO8GsefGEt7EprS8UrXsm1TxEvFUX1IMTuSLU2Rh7fTIdFtl8xD7JiEYiWU2dl+NYAjCTksTehQUxPag==",\n      "requires": {\n        "lodash": "^4.17.11"\n      }\n    },\n    "request-promise-native": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.7.tgz",\n      "integrity": "sha512-rIMnbBdgNViL37nZ1b3L/VfPOpSi0TqVDQPAvO6U14lMzOLrt5nilxCQqtDKhZeDiW0/hkCXGoQjhgJd/tCh6w==",\n      "requires": {\n        "request-promise-core": "1.1.2",\n        "stealthy-require": "^1.1.1",\n        "tough-cookie": "^2.3.3"\n      }\n    },\n    "require-directory": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",\n      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="\n    },\n    "require-dot-file": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/require-dot-file/-/require-dot-file-0.4.0.tgz",\n      "integrity": "sha1-tb9ValWJXC1ZDl3srUU1cXhQqek="\n    },\n    "require-from-string": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",\n      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw=="\n    },\n    "require-main-filename": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",\n      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="\n    },\n    "requireindex": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/requireindex/-/requireindex-1.2.0.tgz",\n      "integrity": "sha512-L9jEkOi3ASd9PYit2cwRfyppc9NoABujTP8/5gFcbERmo5jUoAKovIC3fsF17pkTnGsrByysqX+Kxd2OTNI1ww=="\n    },\n    "requires-port": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",\n      "integrity": "sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8="\n    },\n    "resolve": {\n      "version": "1.10.0",\n      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.10.0.tgz",\n      "integrity": "sha512-3sUr9aq5OfSg2S9pNtPA9hL1FVEAjvfOC4leW0SNf/mpnaakz2a9femSd6LqAww2RaFctwyf1lCqnTHuF1rxDg==",\n      "requires": {\n        "path-parse": "^1.0.6"\n      }\n    },\n    "resolve-cwd": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-2.0.0.tgz",\n      "integrity": "sha1-AKn3OHVW4nA46uIyyqNypqWbZlo=",\n      "requires": {\n        "resolve-from": "^3.0.0"\n      }\n    },\n    "resolve-dir": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/resolve-dir/-/resolve-dir-1.0.1.tgz",\n      "integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",\n      "requires": {\n        "expand-tilde": "^2.0.0",\n        "global-modules": "^1.0.0"\n      },\n      "dependencies": {\n        "global-modules": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-1.0.0.tgz",\n          "integrity": "sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==",\n          "requires": {\n            "global-prefix": "^1.0.1",\n            "is-windows": "^1.0.1",\n            "resolve-dir": "^1.0.0"\n          }\n        },\n        "global-prefix": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-1.0.2.tgz",\n          "integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",\n          "requires": {\n            "expand-tilde": "^2.0.2",\n            "homedir-polyfill": "^1.0.1",\n            "ini": "^1.3.4",\n            "is-windows": "^1.0.1",\n            "which": "^1.2.14"\n          }\n        }\n      }\n    },\n    "resolve-from": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",\n      "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g="\n    },\n    "resolve-options": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/resolve-options/-/resolve-options-1.1.0.tgz",\n      "integrity": "sha1-MrueOcBtZzONyTeMDW1gdFZq0TE=",\n      "requires": {\n        "value-or-function": "^3.0.0"\n      }\n    },\n    "resolve-url": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",\n      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="\n    },\n    "restore-cursor": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",\n      "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",\n      "requires": {\n        "onetime": "^2.0.0",\n        "signal-exit": "^3.0.2"\n      }\n    },\n    "ret": {\n      "version": "0.1.15",\n      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",\n      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg=="\n    },\n    "rework": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/rework/-/rework-1.0.1.tgz",\n      "integrity": "sha1-MIBqhBNCtUUQqkEQhQzUhTQUSqc=",\n      "requires": {\n        "convert-source-map": "^0.3.3",\n        "css": "^2.0.0"\n      },\n      "dependencies": {\n        "convert-source-map": {\n          "version": "0.3.5",\n          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-0.3.5.tgz",\n          "integrity": "sha1-8dgClQr33SYxof6+BZZVDIarMZA="\n        }\n      }\n    },\n    "rework-import": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/rework-import/-/rework-import-2.1.0.tgz",\n      "integrity": "sha1-wm7StTFZrHvi7GDaIj74lgPB7x8=",\n      "requires": {\n        "css": "^2.0.0",\n        "globby": "^2.0.0",\n        "parse-import": "^2.0.0",\n        "url-regex": "^3.0.0"\n      },\n      "dependencies": {\n        "async": {\n          "version": "1.5.2",\n          "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",\n          "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo="\n        },\n        "glob": {\n          "version": "5.0.15",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-5.0.15.tgz",\n          "integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",\n          "requires": {\n            "inflight": "^1.0.4",\n            "inherits": "2",\n            "minimatch": "2 || 3",\n            "once": "^1.3.0",\n            "path-is-absolute": "^1.0.0"\n          }\n        },\n        "globby": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/globby/-/globby-2.1.0.tgz",\n          "integrity": "sha1-npGSvNM/Srak+JTl5+qLcTITxII=",\n          "requires": {\n            "array-union": "^1.0.1",\n            "async": "^1.2.1",\n            "glob": "^5.0.3",\n            "object-assign": "^3.0.0"\n          }\n        },\n        "object-assign": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",\n          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="\n        }\n      }\n    },\n    "rework-plugin-function": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/rework-plugin-function/-/rework-plugin-function-1.0.2.tgz",\n      "integrity": "sha1-Es5G+1sptdk1FGaD9rmM9J0jc7k=",\n      "requires": {\n        "rework-visit": "^1.0.0"\n      }\n    },\n    "rework-plugin-url": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/rework-plugin-url/-/rework-plugin-url-1.1.0.tgz",\n      "integrity": "sha1-q1PosQV7nV7MHIJz/32xhgg3XEU=",\n      "requires": {\n        "rework-plugin-function": "^1.0.0"\n      }\n    },\n    "rework-visit": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/rework-visit/-/rework-visit-1.0.0.tgz",\n      "integrity": "sha1-mUWygD8hni96ygCtuLyfZA+ELJo="\n    },\n    "rgb-regex": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/rgb-regex/-/rgb-regex-1.0.1.tgz",\n      "integrity": "sha1-wODWiC3w4jviVKR16O3UGRX+rrE="\n    },\n    "rgba-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/rgba-regex/-/rgba-regex-1.0.0.tgz",\n      "integrity": "sha1-QzdOLiyglosO8VI0YLfXMP8i7rM="\n    },\n    "right-align": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",\n      "integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",\n      "requires": {\n        "align-text": "^0.1.1"\n      }\n    },\n    "rimraf": {\n      "version": "2.6.3",\n      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",\n      "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",\n      "requires": {\n        "glob": "^7.1.3"\n      }\n    },\n    "ripemd160": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",\n      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",\n      "requires": {\n        "hash-base": "^3.0.0",\n        "inherits": "^2.0.1"\n      }\n    },\n    "rsvp": {\n      "version": "4.8.4",\n      "resolved": "https://registry.npmjs.org/rsvp/-/rsvp-4.8.4.tgz",\n      "integrity": "sha512-6FomvYPfs+Jy9TfXmBpBuMWNH94SgCsZmJKcanySzgNNP6LjWxBvyLTa9KaMfDDM5oxRfrKDB0r/qeRsLwnBfA=="\n    },\n    "rtlcss": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/rtlcss/-/rtlcss-2.4.0.tgz",\n      "integrity": "sha512-hdjFhZ5FCI0ABOfyXOMOhBtwPWtANLCG7rOiOcRf+yi5eDdxmDjqBruWouEnwVdzfh/TWF6NNncIEsigOCFZOA==",\n      "requires": {\n        "chalk": "^2.3.0",\n        "findup": "^0.1.5",\n        "mkdirp": "^0.5.1",\n        "postcss": "^6.0.14",\n        "strip-json-comments": "^2.0.0"\n      },\n      "dependencies": {\n        "postcss": {\n          "version": "6.0.23",\n          "resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.23.tgz",\n          "integrity": "sha512-soOk1h6J3VMTZtVeVpv15/Hpdl2cBLX3CAw4TAbkpTJiNPk9YP/zWcD1ND+xEtvyuuvKzbxliTOIyvkSeSJ6ag==",\n          "requires": {\n            "chalk": "^2.4.1",\n            "source-map": "^0.6.1",\n            "supports-color": "^5.4.0"\n          }\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "run-async": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",\n      "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",\n      "requires": {\n        "is-promise": "^2.1.0"\n      }\n    },\n    "run-queue": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/run-queue/-/run-queue-1.0.3.tgz",\n      "integrity": "sha1-6Eg5bwV9Ij8kOGkkYY4laUFh7Ec=",\n      "requires": {\n        "aproba": "^1.1.1"\n      }\n    },\n    "run-sequence": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/run-sequence/-/run-sequence-2.2.1.tgz",\n      "integrity": "sha512-qkzZnQWMZjcKbh3CNly2srtrkaO/2H/SI5f2eliMCapdRD3UhMrwjfOAZJAnZ2H8Ju4aBzFZkBGXUqFs9V0yxw==",\n      "requires": {\n        "chalk": "^1.1.3",\n        "fancy-log": "^1.3.2",\n        "plugin-error": "^0.1.2"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "^1.0.1",\n            "array-slice": "^0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "^2.2.1",\n            "escape-string-regexp": "^1.0.2",\n            "has-ansi": "^2.0.0",\n            "strip-ansi": "^3.0.0",\n            "supports-color": "^2.0.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "^1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "^0.1.1",\n            "ansi-red": "^0.1.1",\n            "arr-diff": "^1.0.1",\n            "arr-union": "^2.0.1",\n            "extend-shallow": "^1.1.2"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "rx-lite": {\n      "version": "4.0.8",\n      "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-4.0.8.tgz",\n      "integrity": "sha1-Cx4Rr4vESDbwSmQH6S2kJGe3lEQ="\n    },\n    "rx-lite-aggregates": {\n      "version": "4.0.8",\n      "resolved": "https://registry.npmjs.org/rx-lite-aggregates/-/rx-lite-aggregates-4.0.8.tgz",\n      "integrity": "sha1-dTuHqJoRyVRnxKwWJsTvxOBcZ74=",\n      "requires": {\n        "rx-lite": "*"\n      }\n    },\n    "rxjs": {\n      "version": "6.4.0",\n      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",\n      "integrity": "sha512-Z9Yfa11F6B9Sg/BK9MnqnQ+aQYicPLtilXBp2yUtDt2JRCE0h26d33EnfO3ZxoNxG0T92OUucP3Ct7cpfkdFfw==",\n      "requires": {\n        "tslib": "^1.9.0"\n      }\n    },\n    "safe-buffer": {\n      "version": "5.1.2",\n      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",\n      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="\n    },\n    "safe-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",\n      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",\n      "requires": {\n        "ret": "~0.1.10"\n      }\n    },\n    "safer-buffer": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",\n      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="\n    },\n    "sane": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/sane/-/sane-4.1.0.tgz",\n      "integrity": "sha512-hhbzAgTIX8O7SHfp2c8/kREfEn4qO/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNbY9mWd6paKVmKbAgLfZA==",\n      "requires": {\n        "@cnakazawa/watch": "^1.0.3",\n        "anymatch": "^2.0.0",\n        "capture-exit": "^2.0.0",\n        "exec-sh": "^0.3.2",\n        "execa": "^1.0.0",\n        "fb-watchman": "^2.0.0",\n        "micromatch": "^3.1.4",\n        "minimist": "^1.1.1",\n        "walker": "~1.0.5"\n      }\n    },\n    "sass-loader": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-7.1.0.tgz",\n      "integrity": "sha512-+G+BKGglmZM2GUSfT9TLuEp6tzehHPjAMoRRItOojWIqIGPloVCMhNIQuG639eJ+y033PaGTSjLaTHts8Kw79w==",\n      "requires": {\n        "clone-deep": "^2.0.1",\n        "loader-utils": "^1.0.1",\n        "lodash.tail": "^4.1.1",\n        "neo-async": "^2.5.0",\n        "pify": "^3.0.0",\n        "semver": "^5.5.0"\n      },\n      "dependencies": {\n        "clone-deep": {\n          "version": "2.0.2",\n          "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-2.0.2.tgz",\n          "integrity": "sha512-SZegPTKjCgpQH63E+eN6mVEEPdQBOUzjyJm5Pora4lrwWRFS8I0QAxV/KD6vV/i0WuijHZWQC1fMsPEdxfdVCQ==",\n          "requires": {\n            "for-own": "^1.0.0",\n            "is-plain-object": "^2.0.4",\n            "kind-of": "^6.0.0",\n            "shallow-clone": "^1.0.0"\n          }\n        },\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "^1.0.1"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "shallow-clone": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-1.0.0.tgz",\n          "integrity": "sha512-oeXreoKR/SyNJtRJMAKPDSvd28OqEwG4eR/xc856cRGBII7gX9lvAqDxusPm0846z/w/hWYjI1NpKwJ00NHzRA==",\n          "requires": {\n            "is-extendable": "^0.1.1",\n            "kind-of": "^5.0.0",\n            "mixin-object": "^2.0.1"\n          },\n          "dependencies": {\n            "kind-of": {\n              "version": "5.1.0",\n              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n              "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n            }\n          }\n        }\n      }\n    },\n    "sax": {\n      "version": "1.2.4",\n      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",\n      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="\n    },\n    "saxes": {\n      "version": "3.1.9",\n      "resolved": "https://registry.npmjs.org/saxes/-/saxes-3.1.9.tgz",\n      "integrity": "sha512-FZeKhJglhJHk7eWG5YM0z46VHmI3KJpMBAQm3xa9meDvd+wevB5GuBB0wc0exPInZiBBHqi00DbS8AcvCGCFMw==",\n      "requires": {\n        "xmlchars": "^1.3.1"\n      }\n    },\n    "scheduler": {\n      "version": "0.13.6",\n      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.13.6.tgz",\n      "integrity": "sha512-IWnObHt413ucAYKsD9J1QShUKkbKLQQHdxRyw73sw4FN26iWr3DY/H34xGPe4nmL1DwXyWmSWmMrA9TfQbE/XQ==",\n      "requires": {\n        "loose-envify": "^1.1.0",\n        "object-assign": "^4.1.1"\n      }\n    },\n    "schema-utils": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",\n      "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",\n      "requires": {\n        "ajv": "^6.1.0",\n        "ajv-errors": "^1.0.0",\n        "ajv-keywords": "^3.1.0"\n      }\n    },\n    "select-hose": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/select-hose/-/select-hose-2.0.0.tgz",\n      "integrity": "sha1-Yl2GWPhlr0Psliv8N2o3NZpJlMo="\n    },\n    "selfsigned": {\n      "version": "1.10.4",\n      "resolved": "https://registry.npmjs.org/selfsigned/-/selfsigned-1.10.4.tgz",\n      "integrity": "sha512-9AukTiDmHXGXWtWjembZ5NDmVvP2695EtpgbCsxCa68w3c88B+alqbmZ4O3hZ4VWGXeGWzEVdvqgAJD8DQPCDw==",\n      "requires": {\n        "node-forge": "0.7.5"\n      }\n    },\n    "semantic-ui": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/semantic-ui/-/semantic-ui-2.4.2.tgz",\n      "integrity": "sha512-Nr7LDK/MbIM1Imxiktqhz9KOUCUz00rgxEkHb0xZvQUscK0z73SByrF9LYZaat0DQQA1u2dxj0EtEU7xWRu+zg==",\n      "requires": {\n        "better-console": "*",\n        "del": "^3.0.0",\n        "extend": "^3.0.2",\n        "gulp": "^3.9.1",\n        "gulp-autoprefixer": "^6.0.0",\n        "gulp-chmod": "^2.0.0",\n        "gulp-clean-css": "^3.10.0",\n        "gulp-clone": "^2.0.1",\n        "gulp-concat": "^2.6.1",\n        "gulp-concat-css": "^3.1.0",\n        "gulp-copy": "4.0.1",\n        "gulp-dedupe": "0.0.2",\n        "gulp-flatten": "^0.4.0",\n        "gulp-header": "^2.0.5",\n        "gulp-help": "^1.6.1",\n        "gulp-if": "^2.0.2",\n        "gulp-json-editor": "^2.4.2",\n        "gulp-less": "^4.0.1",\n        "gulp-notify": "^3.2.0",\n        "gulp-plumber": "^1.2.0",\n        "gulp-print": "^5.0.0",\n        "gulp-rename": "^1.4.0",\n        "gulp-replace": "^1.0.0",\n        "gulp-rtlcss": "^1.3.0",\n        "gulp-uglify": "^3.0.1",\n        "gulp-watch": "^5.0.1",\n        "jquery": "^3.3.1",\n        "map-stream": "^0.1.0",\n        "merge-stream": "^1.0.0",\n        "mkdirp": "^0.5.1",\n        "prompt-sui": "^3.2.1",\n        "replace-ext": "^1.0.0",\n        "require-dot-file": "^0.4.0",\n        "run-sequence": "^2.2.1",\n        "wrench-sui": "^0.0.3",\n        "yamljs": "^0.3.0"\n      }\n    },\n    "semantic-ui-react": {\n      "version": "0.86.0",\n      "resolved": "https://registry.npmjs.org/semantic-ui-react/-/semantic-ui-react-0.86.0.tgz",\n      "integrity": "sha512-t/psK15zX9bEaezpRDwoXAZovp+I083SgsicAnMig/mxqaRI2FHZpr/G+lfzizrTpmYjgi4/Th6/QAol8pa7JQ==",\n      "dev": true,\n      "requires": {\n        "@babel/runtime": "^7.1.2",\n        "@semantic-ui-react/event-stack": "^3.1.0",\n        "classnames": "^2.2.6",\n        "keyboard-key": "^1.0.4",\n        "lodash": "^4.17.11",\n        "prop-types": "^15.6.2",\n        "react-is": "^16.7.0",\n        "shallowequal": "^1.1.0"\n      }\n    },\n    "semver": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/semver/-/semver-6.0.0.tgz",\n      "integrity": "sha512-0UewU+9rFapKFnlbirLi3byoOuhrSsli/z/ihNnvM24vgF+8sNBiI1LZPBSH9wJKUwaUbw+s3hToDLCXkrghrQ=="\n    },\n    "semver-greatest-satisfied-range": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/semver-greatest-satisfied-range/-/semver-greatest-satisfied-range-1.1.0.tgz",\n      "integrity": "sha1-E+jCZYq5aRywzXEJMkAoDTb3els=",\n      "requires": {\n        "sver-compat": "^1.5.0"\n      }\n    },\n    "send": {\n      "version": "0.16.2",\n      "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz",\n      "integrity": "sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==",\n      "requires": {\n        "debug": "2.6.9",\n        "depd": "~1.1.2",\n        "destroy": "~1.0.4",\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "etag": "~1.8.1",\n        "fresh": "0.5.2",\n        "http-errors": "~1.6.2",\n        "mime": "1.4.1",\n        "ms": "2.0.0",\n        "on-finished": "~2.3.0",\n        "range-parser": "~1.2.0",\n        "statuses": "~1.4.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "mime": {\n          "version": "1.4.1",\n          "resolved": "https://registry.npmjs.org/mime/-/mime-1.4.1.tgz",\n          "integrity": "sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ=="\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "sequencify": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/sequencify/-/sequencify-0.0.7.tgz",\n      "integrity": "sha1-kM/xnQLgcCf9dn9erT57ldHnOAw="\n    },\n    "serialize-javascript": {\n      "version": "1.7.0",\n      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-1.7.0.tgz",\n      "integrity": "sha512-ke8UG8ulpFOxO8f8gRYabHQe/ZntKlcig2Mp+8+URDP1D8vJZ0KUt7LYo07q25Z/+JVSgpr/cui9PIp5H6/+nA=="\n    },\n    "serve-index": {\n      "version": "1.9.1",\n      "resolved": "https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz",\n      "integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",\n      "requires": {\n        "accepts": "~1.3.4",\n        "batch": "0.6.1",\n        "debug": "2.6.9",\n        "escape-html": "~1.0.3",\n        "http-errors": "~1.6.2",\n        "mime-types": "~2.1.17",\n        "parseurl": "~1.3.2"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "serve-static": {\n      "version": "1.13.2",\n      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz",\n      "integrity": "sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==",\n      "requires": {\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "parseurl": "~1.3.2",\n        "send": "0.16.2"\n      }\n    },\n    "set-blocking": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",\n      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="\n    },\n    "set-value": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.0.tgz",\n      "integrity": "sha512-hw0yxk9GT/Hr5yJEYnHNKYXkIA8mVJgd9ditYZCe16ZczcaELYYcfvaXesNACk2O8O0nTiPQcQhGUQj8JLzeeg==",\n      "requires": {\n        "extend-shallow": "^2.0.1",\n        "is-extendable": "^0.1.1",\n        "is-plain-object": "^2.0.3",\n        "split-string": "^3.0.1"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        }\n      }\n    },\n    "setimmediate": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",\n      "integrity": "sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU="\n    },\n    "setprototypeof": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",\n      "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ=="\n    },\n    "sha.js": {\n      "version": "2.4.11",\n      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",\n      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",\n      "requires": {\n        "inherits": "^2.0.1",\n        "safe-buffer": "^5.0.1"\n      }\n    },\n    "shallow-clone": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-0.1.2.tgz",\n      "integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",\n      "requires": {\n        "is-extendable": "^0.1.1",\n        "kind-of": "^2.0.1",\n        "lazy-cache": "^0.2.3",\n        "mixin-object": "^2.0.1"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        },\n        "kind-of": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-2.0.1.tgz",\n          "integrity": "sha1-AY7HpM5+OobLkUG+UZ0kyPqpgbU=",\n          "requires": {\n            "is-buffer": "^1.0.2"\n          }\n        },\n        "lazy-cache": {\n          "version": "0.2.7",\n          "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-0.2.7.tgz",\n          "integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="\n        }\n      }\n    },\n    "shallowequal": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/shallowequal/-/shallowequal-1.1.0.tgz",\n      "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ==",\n      "dev": true\n    },\n    "shebang-command": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",\n      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",\n      "requires": {\n        "shebang-regex": "^1.0.0"\n      }\n    },\n    "shebang-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",\n      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="\n    },\n    "shell-quote": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.6.1.tgz",\n      "integrity": "sha1-9HgZSczkAmlxJ0MOo7PFR29IF2c=",\n      "requires": {\n        "array-filter": "~0.0.0",\n        "array-map": "~0.0.0",\n        "array-reduce": "~0.0.0",\n        "jsonify": "~0.0.0"\n      }\n    },\n    "shellwords": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/shellwords/-/shellwords-0.1.1.tgz",\n      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYItiP3NdJqNVqetYAww=="\n    },\n    "sigmund": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",\n      "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA="\n    },\n    "signal-exit": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",\n      "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0="\n    },\n    "simple-assign": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/simple-assign/-/simple-assign-0.1.0.tgz",\n      "integrity": "sha1-F/0wZqXz13OPUDIbsPFMooHMS6o=",\n      "dev": true\n    },\n    "simple-swizzle": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",\n      "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",\n      "requires": {\n        "is-arrayish": "^0.3.1"\n      },\n      "dependencies": {\n        "is-arrayish": {\n          "version": "0.3.2",\n          "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",\n          "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ=="\n        }\n      }\n    },\n    "sisteransi": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.0.tgz",\n      "integrity": "sha512-N+z4pHB4AmUv0SjveWRd6q1Nj5w62m5jodv+GD8lvmbY/83T/rpbJGZOnK5T149OldDj4Db07BSv9xY4K6NTPQ=="\n    },\n    "slash": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",\n      "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A=="\n    },\n    "slice-ansi": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz",\n      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==",\n      "requires": {\n        "ansi-styles": "^3.2.0",\n        "astral-regex": "^1.0.0",\n        "is-fullwidth-code-point": "^2.0.0"\n      }\n    },\n    "snapdragon": {\n      "version": "0.8.2",\n      "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",\n      "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",\n      "requires": {\n        "base": "^0.11.1",\n        "debug": "^2.2.0",\n        "define-property": "^0.2.5",\n        "extend-shallow": "^2.0.1",\n        "map-cache": "^0.2.2",\n        "source-map": "^0.5.6",\n        "source-map-resolve": "^0.5.0",\n        "use": "^3.1.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "^0.1.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "snapdragon-node": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",\n      "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",\n      "requires": {\n        "define-property": "^1.0.0",\n        "isobject": "^3.0.0",\n        "snapdragon-util": "^3.0.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",\n          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",\n          "requires": {\n            "is-descriptor": "^1.0.0"\n          }\n        },\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "^6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "^1.0.0",\n            "is-data-descriptor": "^1.0.0",\n            "kind-of": "^6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "snapdragon-util": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",\n      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",\n      "requires": {\n        "kind-of": "^3.2.0"\n      }\n    },\n    "sockjs": {\n      "version": "0.3.19",\n      "resolved": "https://registry.npmjs.org/sockjs/-/sockjs-0.3.19.tgz",\n      "integrity": "sha512-V48klKZl8T6MzatbLlzzRNhMepEys9Y4oGFpypBFFn1gLI/QQ9HtLLyWJNbPlwGLelOVOEijUbTTJeLLI59jLw==",\n      "requires": {\n        "faye-websocket": "^0.10.0",\n        "uuid": "^3.0.1"\n      },\n      "dependencies": {\n        "faye-websocket": {\n          "version": "0.10.0",\n          "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.10.0.tgz",\n          "integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",\n          "requires": {\n            "websocket-driver": ">=0.5.1"\n          }\n        }\n      }\n    },\n    "sockjs-client": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/sockjs-client/-/sockjs-client-1.3.0.tgz",\n      "integrity": "sha512-R9jxEzhnnrdxLCNln0xg5uGHqMnkhPSTzUZH2eXcR03S/On9Yvoq2wyUZILRUhZCNVu2PmwWVoyuiPz8th8zbg==",\n      "requires": {\n        "debug": "^3.2.5",\n        "eventsource": "^1.0.7",\n        "faye-websocket": "~0.11.1",\n        "inherits": "^2.0.3",\n        "json3": "^3.3.2",\n        "url-parse": "^1.4.3"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "3.2.6",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",\n          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",\n          "requires": {\n            "ms": "^2.1.1"\n          }\n        }\n      }\n    },\n    "source-list-map": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.1.tgz",\n      "integrity": "sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw=="\n    },\n    "source-map": {\n      "version": "0.5.7",\n      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",\n      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w="\n    },\n    "source-map-resolve": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.2.tgz",\n      "integrity": "sha512-MjqsvNwyz1s0k81Goz/9vRBe9SZdB09Bdw+/zYyO+3CuPk6fouTaxscHkgtE8jKvf01kVfl8riHzERQ/kefaSA==",\n      "requires": {\n        "atob": "^2.1.1",\n        "decode-uri-component": "^0.2.0",\n        "resolve-url": "^0.2.1",\n        "source-map-url": "^0.4.0",\n        "urix": "^0.1.0"\n      }\n    },\n    "source-map-support": {\n      "version": "0.5.12",\n      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.12.tgz",\n      "integrity": "sha512-4h2Pbvyy15EE02G+JOZpUCmqWJuqrs+sEkzewTm++BPi7Hvn/HwcqLAcNxYAyI0x13CpPPn+kMjl+hplXMHITQ==",\n      "requires": {\n        "buffer-from": "^1.0.0",\n        "source-map": "^0.6.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "source-map-url": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",\n      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM="\n    },\n    "space-separated-tokens": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/space-separated-tokens/-/space-separated-tokens-1.1.3.tgz",\n      "integrity": "sha512-/M5RAdBuQlSDPNfA5ube+fkHbHyY08pMuADLmsAQURzo56w90r681oiOoz3o3ZQyWdSeNucpTFjL+Ggd5qui3w=="\n    },\n    "sparkles": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/sparkles/-/sparkles-1.0.1.tgz",\n      "integrity": "sha512-dSO0DDYUahUt/0/pD/Is3VIm5TGJjludZ0HVymmhYF6eNA53PVLhnUk0znSYbH8IYBuJdCE+1luR22jNLMaQdw=="\n    },\n    "spdx-correct": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz",\n      "integrity": "sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==",\n      "requires": {\n        "spdx-expression-parse": "^3.0.0",\n        "spdx-license-ids": "^3.0.0"\n      }\n    },\n    "spdx-exceptions": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz",\n      "integrity": "sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA=="\n    },\n    "spdx-expression-parse": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",\n      "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",\n      "requires": {\n        "spdx-exceptions": "^2.1.0",\n        "spdx-license-ids": "^3.0.0"\n      }\n    },\n    "spdx-license-ids": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.4.tgz",\n      "integrity": "sha512-7j8LYJLeY/Yb6ACbQ7F76qy5jHkp0U6jgBfJsk97bwWlVUnUWsAgpyaCvo17h0/RQGnQ036tVDomiwoI4pDkQA=="\n    },\n    "spdy": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/spdy/-/spdy-4.0.0.tgz",\n      "integrity": "sha512-ot0oEGT/PGUpzf/6uk4AWLqkq+irlqHXkrdbk51oWONh3bxQmBuljxPNl66zlRRcIJStWq0QkLUCPOPjgjvU0Q==",\n      "requires": {\n        "debug": "^4.1.0",\n        "handle-thing": "^2.0.0",\n        "http-deceiver": "^1.2.7",\n        "select-hose": "^2.0.0",\n        "spdy-transport": "^3.0.0"\n      }\n    },\n    "spdy-transport": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/spdy-transport/-/spdy-transport-3.0.0.tgz",\n      "integrity": "sha512-hsLVFE5SjA6TCisWeJXFKniGGOpBgMLmerfO2aCyCU5s7nJ/rpAepqmFifv/GCbSbueEeAJJnmSQ2rKC/g8Fcw==",\n      "requires": {\n        "debug": "^4.1.0",\n        "detect-node": "^2.0.4",\n        "hpack.js": "^2.1.6",\n        "obuf": "^1.1.2",\n        "readable-stream": "^3.0.6",\n        "wbuf": "^1.7.3"\n      },\n      "dependencies": {\n        "readable-stream": {\n          "version": "3.3.0",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.3.0.tgz",\n          "integrity": "sha512-EsI+s3k3XsW+fU8fQACLN59ky34AZ14LoeVZpYwmZvldCFo0r0gnelwF2TcMjLor/BTL5aDJVBMkss0dthToPw==",\n          "requires": {\n            "inherits": "^2.0.3",\n            "string_decoder": "^1.1.1",\n            "util-deprecate": "^1.0.1"\n          }\n        }\n      }\n    },\n    "split": {\n      "version": "0.2.10",\n      "resolved": "https://registry.npmjs.org/split/-/split-0.2.10.tgz",\n      "integrity": "sha1-Zwl8YB1pfOE2j0GPBs0gHPBSGlc=",\n      "requires": {\n        "through": "2"\n      }\n    },\n    "split-string": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",\n      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",\n      "requires": {\n        "extend-shallow": "^3.0.0"\n      }\n    },\n    "split.js": {\n      "version": "1.5.10",\n      "resolved": "https://registry.npmjs.org/split.js/-/split.js-1.5.10.tgz",\n      "integrity": "sha512-/J52X5c4ZypVwu4WAhD8E1T9uXQtNokvG6mIBHauzyA1aKH6bmETVSv3RPjBXEz6Gcc4mIThgmjGQL39LD16jQ=="\n    },\n    "sprintf-js": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",\n      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="\n    },\n    "sshpk": {\n      "version": "1.16.1",\n      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",\n      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",\n      "requires": {\n        "asn1": "~0.2.3",\n        "assert-plus": "^1.0.0",\n        "bcrypt-pbkdf": "^1.0.0",\n        "dashdash": "^1.12.0",\n        "ecc-jsbn": "~0.1.1",\n        "getpass": "^0.1.1",\n        "jsbn": "~0.1.0",\n        "safer-buffer": "^2.0.2",\n        "tweetnacl": "~0.14.0"\n      }\n    },\n    "ssri": {\n      "version": "6.0.1",\n      "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",\n      "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",\n      "requires": {\n        "figgy-pudding": "^3.5.1"\n      }\n    },\n    "stable": {\n      "version": "0.1.8",\n      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",\n      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w=="\n    },\n    "stack-trace": {\n      "version": "0.0.10",\n      "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",\n      "integrity": "sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA="\n    },\n    "stack-utils": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-1.0.2.tgz",\n      "integrity": "sha512-MTX+MeG5U994cazkjd/9KNAapsHnibjMLnfXodlkXw76JEea0UiNzrqidzo1emMwk7w5Qhc9jd4Bn9TBb1MFwA=="\n    },\n    "stat-mode": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/stat-mode/-/stat-mode-0.2.2.tgz",\n      "integrity": "sha1-5sgLYjEj19gM8TLOU480YokHJQI="\n    },\n    "static-extend": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",\n      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",\n      "requires": {\n        "define-property": "^0.2.5",\n        "object-copy": "^0.1.0"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "^0.1.0"\n          }\n        }\n      }\n    },\n    "statuses": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz",\n      "integrity": "sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew=="\n    },\n    "stealthy-require": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",\n      "integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="\n    },\n    "stream-browserify": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",\n      "integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",\n      "requires": {\n        "inherits": "~2.0.1",\n        "readable-stream": "^2.0.2"\n      }\n    },\n    "stream-combiner": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz",\n      "integrity": "sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=",\n      "requires": {\n        "duplexer": "~0.1.1"\n      }\n    },\n    "stream-consume": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/stream-consume/-/stream-consume-0.1.1.tgz",\n      "integrity": "sha512-tNa3hzgkjEP7XbCkbRXe1jpg+ievoa0O4SCFlMOYEscGSS4JJsckGL8swUyAa/ApGU3Ae4t6Honor4HhL+tRyg=="\n    },\n    "stream-each": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/stream-each/-/stream-each-1.2.3.tgz",\n      "integrity": "sha512-vlMC2f8I2u/bZGqkdfLQW/13Zihpej/7PmSiMQsbYddxuTsJp8vRe2x2FvVExZg7FaOds43ROAuFJwPR4MTZLw==",\n      "requires": {\n        "end-of-stream": "^1.1.0",\n        "stream-shift": "^1.0.0"\n      }\n    },\n    "stream-exhaust": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/stream-exhaust/-/stream-exhaust-1.0.2.tgz",\n      "integrity": "sha512-b/qaq/GlBK5xaq1yrK9/zFcyRSTNxmcZwFLGSTG0mXgZl/4Z6GgiyYOXOvY7N3eEvFRAG1bkDRz5EPGSvPYQlw=="\n    },\n    "stream-http": {\n      "version": "2.8.3",\n      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",\n      "integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",\n      "requires": {\n        "builtin-status-codes": "^3.0.0",\n        "inherits": "^2.0.1",\n        "readable-stream": "^2.3.6",\n        "to-arraybuffer": "^1.0.0",\n        "xtend": "^4.0.0"\n      }\n    },\n    "stream-shift": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.0.tgz",\n      "integrity": "sha1-1cdSgl5TZ+eG944Y5EXqIjoVWVI="\n    },\n    "string-length": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/string-length/-/string-length-2.0.0.tgz",\n      "integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",\n      "requires": {\n        "astral-regex": "^1.0.0",\n        "strip-ansi": "^4.0.0"\n      }\n    },\n    "string-width": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",\n      "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",\n      "requires": {\n        "is-fullwidth-code-point": "^2.0.0",\n        "strip-ansi": "^4.0.0"\n      }\n    },\n    "string_decoder": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",\n      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",\n      "requires": {\n        "safe-buffer": "~5.1.0"\n      }\n    },\n    "stringify-object": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-3.3.0.tgz",\n      "integrity": "sha512-rHqiFh1elqCQ9WPLIC8I0Q/g/wj5J1eMkyoiD6eoQApWHP0FtlK7rqnhmabL5VUY9JQCcqwwvlOaSuutekgyrw==",\n      "requires": {\n        "get-own-enumerable-property-symbols": "^3.0.0",\n        "is-obj": "^1.0.1",\n        "is-regexp": "^1.0.0"\n      }\n    },\n    "strip-ansi": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",\n      "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",\n      "requires": {\n        "ansi-regex": "^3.0.0"\n      }\n    },\n    "strip-bom": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",\n      "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM="\n    },\n    "strip-bom-stream": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-2.0.0.tgz",\n      "integrity": "sha1-+H217yYT9paKpUWr/h7HKLaoKco=",\n      "requires": {\n        "first-chunk-stream": "^2.0.0",\n        "strip-bom": "^2.0.0"\n      },\n      "dependencies": {\n        "first-chunk-stream": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-2.0.0.tgz",\n          "integrity": "sha1-G97NuOCDwGZLkZRVgVd6Q6nzHXA=",\n          "requires": {\n            "readable-stream": "^2.0.2"\n          }\n        },\n        "strip-bom": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",\n          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",\n          "requires": {\n            "is-utf8": "^0.2.0"\n          }\n        }\n      }\n    },\n    "strip-comments": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/strip-comments/-/strip-comments-1.0.2.tgz",\n      "integrity": "sha512-kL97alc47hoyIQSV165tTt9rG5dn4w1dNnBhOQ3bOU1Nc1hel09jnXANaHJ7vzHLd4Ju8kseDGzlev96pghLFw==",\n      "requires": {\n        "babel-extract-comments": "^1.0.0",\n        "babel-plugin-transform-object-rest-spread": "^6.26.0"\n      }\n    },\n    "strip-eof": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",\n      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="\n    },\n    "strip-json-comments": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",\n      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="\n    },\n    "style-loader": {\n      "version": "0.23.1",\n      "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-0.23.1.tgz",\n      "integrity": "sha512-XK+uv9kWwhZMZ1y7mysB+zoihsEj4wneFWAS5qoiLwzW0WzSqMrrsIy+a3zkQJq0ipFtBpX5W3MqyRIBF/WFGg==",\n      "requires": {\n        "loader-utils": "^1.1.0",\n        "schema-utils": "^1.0.0"\n      }\n    },\n    "stylehacks": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/stylehacks/-/stylehacks-4.0.3.tgz",\n      "integrity": "sha512-7GlLk9JwlElY4Y6a/rmbH2MhVlTyVmiJd1PfTCqFaIBEGMYNsrO/v3SeGTdhBThLg4Z+NbOk/qFMwCa+J+3p/g==",\n      "requires": {\n        "browserslist": "^4.0.0",\n        "postcss": "^7.0.0",\n        "postcss-selector-parser": "^3.0.0"\n      },\n      "dependencies": {\n        "postcss-selector-parser": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz",\n          "integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=",\n          "requires": {\n            "dot-prop": "^4.1.1",\n            "indexes-of": "^1.0.1",\n            "uniq": "^1.0.1"\n          }\n        }\n      }\n    },\n    "stylis": {\n      "version": "3.5.4",\n      "resolved": "https://registry.npmjs.org/stylis/-/stylis-3.5.4.tgz",\n      "integrity": "sha512-8/3pSmthWM7lsPBKv7NXkzn2Uc9W7NotcwGNpJaa3k7WMM1XDCA4MgT5k/8BIexd5ydZdboXtU90XH9Ec4Bv/Q=="\n    },\n    "stylis-rule-sheet": {\n      "version": "0.0.10",\n      "resolved": "https://registry.npmjs.org/stylis-rule-sheet/-/stylis-rule-sheet-0.0.10.tgz",\n      "integrity": "sha512-nTbZoaqoBnmK+ptANthb10ZRZOGC+EmTLLUxeYIuHNkEKcmKgXX1XWKkUBT2Ac4es3NybooPe0SmvKdhKJZAuw=="\n    },\n    "supports-color": {\n      "version": "5.5.0",\n      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",\n      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",\n      "requires": {\n        "has-flag": "^3.0.0"\n      }\n    },\n    "sver-compat": {\n      "version": "1.5.0",\n      "resolved": "https://registry.npmjs.org/sver-compat/-/sver-compat-1.5.0.tgz",\n      "integrity": "sha1-PPh9/rTQe0o/FIJ7wYaz/QxkXNg=",\n      "requires": {\n        "es6-iterator": "^2.0.1",\n        "es6-symbol": "^3.1.1"\n      }\n    },\n    "svgo": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/svgo/-/svgo-1.2.2.tgz",\n      "integrity": "sha512-rAfulcwp2D9jjdGu+0CuqlrAUin6bBWrpoqXWwKDZZZJfXcUXQSxLJOFJCQCSA0x0pP2U0TxSlJu2ROq5Bq6qA==",\n      "requires": {\n        "chalk": "^2.4.1",\n        "coa": "^2.0.2",\n        "css-select": "^2.0.0",\n        "css-select-base-adapter": "^0.1.1",\n        "css-tree": "1.0.0-alpha.28",\n        "css-url-regex": "^1.1.0",\n        "csso": "^3.5.1",\n        "js-yaml": "^3.13.1",\n        "mkdirp": "~0.5.1",\n        "object.values": "^1.1.0",\n        "sax": "~1.2.4",\n        "stable": "^0.1.8",\n        "unquote": "~1.1.1",\n        "util.promisify": "~1.0.0"\n      }\n    },\n    "symbol-observable": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.2.0.tgz",\n      "integrity": "sha512-e900nM8RRtGhlV36KGEU9k65K3mPb1WV70OdjfxlG2EAuM1noi/E/BaW/uMhL7bPEssK8QV57vN3esixjUvcXQ=="\n    },\n    "symbol-tree": {\n      "version": "3.2.2",\n      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.2.tgz",\n      "integrity": "sha1-rifbOPZgp64uHDt9G8KQgZuFGeY="\n    },\n    "table": {\n      "version": "5.2.3",\n      "resolved": "https://registry.npmjs.org/table/-/table-5.2.3.tgz",\n      "integrity": "sha512-N2RsDAMvDLvYwFcwbPyF3VmVSSkuF+G1e+8inhBLtHpvwXGw4QRPEZhihQNeEN0i1up6/f6ObCJXNdlRG3YVyQ==",\n      "requires": {\n        "ajv": "^6.9.1",\n        "lodash": "^4.17.11",\n        "slice-ansi": "^2.1.0",\n        "string-width": "^3.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "string-width": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",\n          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",\n          "requires": {\n            "emoji-regex": "^7.0.1",\n            "is-fullwidth-code-point": "^2.0.0",\n            "strip-ansi": "^5.1.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "^4.1.0"\n          }\n        }\n      }\n    },\n    "tapable": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/tapable/-/tapable-1.1.3.tgz",\n      "integrity": "sha512-4WK/bYZmj8xLr+HUCODHGF1ZFzsYffasLUgEiMBY4fgtltdO6B4WJtlSbPaDTLpYTcGVwM2qLnFTICEcNxs3kA=="\n    },\n    "ternary-stream": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/ternary-stream/-/ternary-stream-2.0.1.tgz",\n      "integrity": "sha1-Bk5Im0tb9gumpre8fy9cJ07Pgmk=",\n      "requires": {\n        "duplexify": "^3.5.0",\n        "fork-stream": "^0.0.4",\n        "merge-stream": "^1.0.0",\n        "through2": "^2.0.1"\n      }\n    },\n    "terser": {\n      "version": "3.17.0",\n      "resolved": "https://registry.npmjs.org/terser/-/terser-3.17.0.tgz",\n      "integrity": "sha512-/FQzzPJmCpjAH9Xvk2paiWrFq+5M6aVOf+2KRbwhByISDX/EujxsK+BAvrhb6H+2rtrLCHK9N01wO014vrIwVQ==",\n      "requires": {\n        "commander": "^2.19.0",\n        "source-map": "~0.6.1",\n        "source-map-support": "~0.5.10"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "terser-webpack-plugin": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-1.2.3.tgz",\n      "integrity": "sha512-GOK7q85oAb/5kE12fMuLdn2btOS9OBZn4VsecpHDywoUC/jLhSAKOiYo0ezx7ss2EXPMzyEWFoE0s1WLE+4+oA==",\n      "requires": {\n        "cacache": "^11.0.2",\n        "find-cache-dir": "^2.0.0",\n        "schema-utils": "^1.0.0",\n        "serialize-javascript": "^1.4.0",\n        "source-map": "^0.6.1",\n        "terser": "^3.16.1",\n        "webpack-sources": "^1.1.0",\n        "worker-farm": "^1.5.2"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "test-exclude": {\n      "version": "5.2.2",\n      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-5.2.2.tgz",\n      "integrity": "sha512-N2pvaLpT8guUpb5Fe1GJlmvmzH3x+DAKmmyEQmFP792QcLYoGE1syxztSvPD1V8yPe6VrcCt6YGQVjSRjCASsA==",\n      "requires": {\n        "glob": "^7.1.3",\n        "minimatch": "^3.0.4",\n        "read-pkg-up": "^4.0.0",\n        "require-main-filename": "^2.0.0"\n      }\n    },\n    "text-table": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",\n      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ="\n    },\n    "textextensions": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/textextensions/-/textextensions-2.4.0.tgz",\n      "integrity": "sha512-qftQXnX1DzpSV8EddtHIT0eDDEiBF8ywhFYR2lI9xrGtxqKN+CvLXhACeCIGbCpQfxxERbrkZEFb8cZcDKbVZA=="\n    },\n    "throat": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/throat/-/throat-4.1.0.tgz",\n      "integrity": "sha1-iQN8vJLFarGJJua6TLsgDhVnKmo="\n    },\n    "through": {\n      "version": "2.3.8",\n      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",\n      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="\n    },\n    "through2": {\n      "version": "2.0.5",\n      "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",\n      "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",\n      "requires": {\n        "readable-stream": "~2.3.6",\n        "xtend": "~4.0.1"\n      }\n    },\n    "through2-filter": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/through2-filter/-/through2-filter-3.0.0.tgz",\n      "integrity": "sha512-jaRjI2WxN3W1V8/FMZ9HKIBXixtiqs3SQSX4/YGIiP3gL6djW48VoZq9tDqeCWs3MT8YY5wb/zli8VW8snY1CA==",\n      "requires": {\n        "through2": "~2.0.0",\n        "xtend": "~4.0.0"\n      }\n    },\n    "thunky": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/thunky/-/thunky-1.0.3.tgz",\n      "integrity": "sha512-YwT8pjmNcAXBZqrubu22P4FYsh2D4dxRmnWBOL8Jk8bUcRUtc5326kx32tuTmFDAZtLOGEVNl8POAR8j896Iow=="\n    },\n    "tildify": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/tildify/-/tildify-1.2.0.tgz",\n      "integrity": "sha1-3OwD9V3Km3qj5bBPIYF+tW5jWIo=",\n      "requires": {\n        "os-homedir": "^1.0.0"\n      }\n    },\n    "time-stamp": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/time-stamp/-/time-stamp-1.1.0.tgz",\n      "integrity": "sha1-dkpaEa9QVhkhsTPztE5hhofg9cM="\n    },\n    "timers-browserify": {\n      "version": "2.0.10",\n      "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-2.0.10.tgz",\n      "integrity": "sha512-YvC1SV1XdOUaL6gx5CoGroT3Gu49pK9+TZ38ErPldOWW4j49GI1HKs9DV+KGq/w6y+LZ72W1c8cKz2vzY+qpzg==",\n      "requires": {\n        "setimmediate": "^1.0.4"\n      }\n    },\n    "timsort": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",\n      "integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="\n    },\n    "tmp": {\n      "version": "0.0.33",\n      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",\n      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",\n      "requires": {\n        "os-tmpdir": "~1.0.2"\n      }\n    },\n    "tmpl": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.4.tgz",\n      "integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE="\n    },\n    "to-absolute-glob": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/to-absolute-glob/-/to-absolute-glob-2.0.2.tgz",\n      "integrity": "sha1-GGX0PZ50sIItufFFt4z/fQ98hJs=",\n      "requires": {\n        "is-absolute": "^1.0.0",\n        "is-negated-glob": "^1.0.0"\n      }\n    },\n    "to-arraybuffer": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",\n      "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="\n    },\n    "to-fast-properties": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",\n      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="\n    },\n    "to-object-path": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",\n      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",\n      "requires": {\n        "kind-of": "^3.0.2"\n      }\n    },\n    "to-regex": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",\n      "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",\n      "requires": {\n        "define-property": "^2.0.2",\n        "extend-shallow": "^3.0.2",\n        "regex-not": "^1.0.2",\n        "safe-regex": "^1.1.0"\n      }\n    },\n    "to-regex-range": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",\n      "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",\n      "requires": {\n        "is-number": "^3.0.0",\n        "repeat-string": "^1.6.1"\n      }\n    },\n    "to-through": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/to-through/-/to-through-2.0.0.tgz",\n      "integrity": "sha1-/JKtq6ByZHvAtn1rA2ZKoZUJOvY=",\n      "requires": {\n        "through2": "^2.0.3"\n      }\n    },\n    "topo": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/topo/-/topo-3.0.3.tgz",\n      "integrity": "sha512-IgpPtvD4kjrJ7CRA3ov2FhWQADwv+Tdqbsf1ZnPUSAtCJ9e1Z44MmoSGDXGk4IppoZA7jd/QRkNddlLJWlUZsQ==",\n      "requires": {\n        "hoek": "6.x.x"\n      }\n    },\n    "touch": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/touch/-/touch-2.0.2.tgz",\n      "integrity": "sha512-qjNtvsFXTRq7IuMLweVgFxmEuQ6gLbRs2jQxL80TtZ31dEKWYIxRXquij6w6VimyDek5hD3PytljHmEtAs2u0A==",\n      "requires": {\n        "nopt": "~1.0.10"\n      },\n      "dependencies": {\n        "nopt": {\n          "version": "1.0.10",\n          "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",\n          "integrity": "sha1-bd0hvSoxQXuScn3Vhfim83YI6+4=",\n          "requires": {\n            "abbrev": "1"\n          }\n        }\n      }\n    },\n    "tough-cookie": {\n      "version": "2.5.0",\n      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",\n      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",\n      "requires": {\n        "psl": "^1.1.28",\n        "punycode": "^2.1.1"\n      }\n    },\n    "tr46": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",\n      "integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",\n      "requires": {\n        "punycode": "^2.1.0"\n      }\n    },\n    "trim-right": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz",\n      "integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="\n    },\n    "trough": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/trough/-/trough-1.0.3.tgz",\n      "integrity": "sha512-fwkLWH+DimvA4YCy+/nvJd61nWQQ2liO/nF/RjkTpiOGi+zxZzVkhb1mvbHIIW4b/8nDsYI8uTmAlc0nNkRMOw=="\n    },\n    "ts-pnp": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/ts-pnp/-/ts-pnp-1.1.2.tgz",\n      "integrity": "sha512-f5Knjh7XCyRIzoC/z1Su1yLLRrPrFCgtUAh/9fCSP6NKbATwpOL1+idQVXQokK9GRFURn/jYPGPfegIctwunoA=="\n    },\n    "tslib": {\n      "version": "1.9.3",\n      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.9.3.tgz",\n      "integrity": "sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ=="\n    },\n    "tsutils": {\n      "version": "3.10.0",\n      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-3.10.0.tgz",\n      "integrity": "sha512-q20XSMq7jutbGB8luhKKsQldRKWvyBO2BGqni3p4yq8Ys9bEP/xQw3KepKmMRt9gJ4lvQSScrihJrcKdKoSU7Q==",\n      "requires": {\n        "tslib": "^1.8.1"\n      }\n    },\n    "tty-browserify": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",\n      "integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="\n    },\n    "tunnel-agent": {\n      "version": "0.6.0",\n      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",\n      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",\n      "requires": {\n        "safe-buffer": "^5.0.1"\n      }\n    },\n    "tweetnacl": {\n      "version": "0.14.5",\n      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",\n      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="\n    },\n    "type-check": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",\n      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",\n      "requires": {\n        "prelude-ls": "~1.1.2"\n      }\n    },\n    "type-is": {\n      "version": "1.6.16",\n      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.16.tgz",\n      "integrity": "sha512-HRkVv/5qY2G6I8iab9cI7v1bOIdhm94dVjQCPFElW9W+3GeDOSHmy2EBYe4VTApuzolPcmgFTN3ftVJRKR2J9Q==",\n      "requires": {\n        "media-typer": "0.3.0",\n        "mime-types": "~2.1.18"\n      }\n    },\n    "typedarray": {\n      "version": "0.0.6",\n      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",\n      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c="\n    },\n    "ua-parser-js": {\n      "version": "0.7.19",\n      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.19.tgz",\n      "integrity": "sha512-T3PVJ6uz8i0HzPxOF9SWzWAlfN/DavlpQqepn22xgve/5QecC+XMCAtmUNnY7C9StehaV6exjUCI801lOI7QlQ=="\n    },\n    "uglify-js": {\n      "version": "3.4.10",\n      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.4.10.tgz",\n      "integrity": "sha512-Y2VsbPVs0FIshJztycsO2SfPk7/KAF/T72qzv9u5EpQ4kB2hQoHlhNQTsNyy6ul7lQtqJN/AoWeS23OzEiEFxw==",\n      "requires": {\n        "commander": "~2.19.0",\n        "source-map": "~0.6.1"\n      },\n      "dependencies": {\n        "commander": {\n          "version": "2.19.0",\n          "resolved": "https://registry.npmjs.org/commander/-/commander-2.19.0.tgz",\n          "integrity": "sha512-6tvAOO+D6OENvRAh524Dh9jcfKTYDQAqvqezbCW82xj5X0pSrcpxtvRKHLG0yBY6SD7PSDrJaj+0AiOcKVd1Xg=="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "uglify-to-browserify": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz",\n      "integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",\n      "optional": true\n    },\n    "unc-path-regex": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/unc-path-regex/-/unc-path-regex-0.1.2.tgz",\n      "integrity": "sha1-5z3T17DXxe2G+6xrCufYxqadUPo="\n    },\n    "undertaker": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/undertaker/-/undertaker-1.2.1.tgz",\n      "integrity": "sha512-71WxIzDkgYk9ZS+spIB8iZXchFhAdEo2YU8xYqBYJ39DIUIqziK78ftm26eecoIY49X0J2MLhG4hr18Yp6/CMA==",\n      "requires": {\n        "arr-flatten": "^1.0.1",\n        "arr-map": "^2.0.0",\n        "bach": "^1.0.0",\n        "collection-map": "^1.0.0",\n        "es6-weak-map": "^2.0.1",\n        "last-run": "^1.1.0",\n        "object.defaults": "^1.0.0",\n        "object.reduce": "^1.0.0",\n        "undertaker-registry": "^1.0.0"\n      }\n    },\n    "undertaker-registry": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/undertaker-registry/-/undertaker-registry-1.0.1.tgz",\n      "integrity": "sha1-XkvaMI5KiirlhPm5pDWaSZglzFA="\n    },\n    "unicode-canonical-property-names-ecmascript": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",\n      "integrity": "sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ=="\n    },\n    "unicode-match-property-ecmascript": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz",\n      "integrity": "sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==",\n      "requires": {\n        "unicode-canonical-property-names-ecmascript": "^1.0.4",\n        "unicode-property-aliases-ecmascript": "^1.0.4"\n      }\n    },\n    "unicode-match-property-value-ecmascript": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.1.0.tgz",\n      "integrity": "sha512-hDTHvaBk3RmFzvSl0UVrUmC3PuW9wKVnpoUDYH0JDkSIovzw+J5viQmeYHxVSBptubnr7PbH2e0fnpDRQnQl5g=="\n    },\n    "unicode-property-aliases-ecmascript": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.0.5.tgz",\n      "integrity": "sha512-L5RAqCfXqAwR3RriF8pM0lU0w4Ryf/GgzONwi6KnL1taJQa7x1TCxdJnILX59WIGOwR57IVxn7Nej0fz1Ny6fw=="\n    },\n    "unified": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/unified/-/unified-7.1.0.tgz",\n      "integrity": "sha512-lbk82UOIGuCEsZhPj8rNAkXSDXd6p0QLzIuSsCdxrqnqU56St4eyOB+AlXsVgVeRmetPTYydIuvFfpDIed8mqw==",\n      "requires": {\n        "@types/unist": "^2.0.0",\n        "@types/vfile": "^3.0.0",\n        "bail": "^1.0.0",\n        "extend": "^3.0.0",\n        "is-plain-obj": "^1.1.0",\n        "trough": "^1.0.0",\n        "vfile": "^3.0.0",\n        "x-is-string": "^0.1.0"\n      },\n      "dependencies": {\n        "vfile": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/vfile/-/vfile-3.0.1.tgz",\n          "integrity": "sha512-y7Y3gH9BsUSdD4KzHsuMaCzRjglXN0W2EcMf0gpvu6+SbsGhMje7xDc8AEoeXy6mIwCKMI6BkjMsRjzQbhMEjQ==",\n          "requires": {\n            "is-buffer": "^2.0.0",\n            "replace-ext": "1.0.0",\n            "unist-util-stringify-position": "^1.0.0",\n            "vfile-message": "^1.0.0"\n          }\n        }\n      }\n    },\n    "union-value": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.0.tgz",\n      "integrity": "sha1-XHHDTLW61dzr4+oM0IIHulqhrqQ=",\n      "requires": {\n        "arr-union": "^3.1.0",\n        "get-value": "^2.0.6",\n        "is-extendable": "^0.1.1",\n        "set-value": "^0.4.3"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "^0.1.0"\n          }\n        },\n        "set-value": {\n          "version": "0.4.3",\n          "resolved": "https://registry.npmjs.org/set-value/-/set-value-0.4.3.tgz",\n          "integrity": "sha1-fbCPnT0i3H945Trzw79GZuzfzPE=",\n          "requires": {\n            "extend-shallow": "^2.0.1",\n            "is-extendable": "^0.1.1",\n            "is-plain-object": "^2.0.1",\n            "to-object-path": "^0.3.0"\n          }\n        }\n      }\n    },\n    "uniq": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",\n      "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8="\n    },\n    "uniqs": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/uniqs/-/uniqs-2.0.0.tgz",\n      "integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="\n    },\n    "unique-filename": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",\n      "integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",\n      "requires": {\n        "unique-slug": "^2.0.0"\n      }\n    },\n    "unique-slug": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.1.tgz",\n      "integrity": "sha512-n9cU6+gITaVu7VGj1Z8feKMmfAjEAQGhwD9fE3zvpRRa0wEIx8ODYkVGfSc94M2OX00tUFV8wH3zYbm1I8mxFg==",\n      "requires": {\n        "imurmurhash": "^0.1.4"\n      }\n    },\n    "unique-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-1.0.0.tgz",\n      "integrity": "sha1-1ZpKdUJ0R9mqbJHnAmP40mpLEEs="\n    },\n    "unist-util-stringify-position": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-1.1.2.tgz",\n      "integrity": "sha512-pNCVrk64LZv1kElr0N1wPiHEUoXNVFERp+mlTg/s9R5Lwg87f9bM/3sQB99w+N9D/qnM9ar3+AKDBwo/gm/iQQ=="\n    },\n    "universalify": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",\n      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="\n    },\n    "unpipe": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",\n      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="\n    },\n    "unquote": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/unquote/-/unquote-1.1.1.tgz",\n      "integrity": "sha1-j97XMk7G6IoP+LkF58CYzcCG1UQ="\n    },\n    "unset-value": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",\n      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",\n      "requires": {\n        "has-value": "^0.3.1",\n        "isobject": "^3.0.0"\n      },\n      "dependencies": {\n        "has-value": {\n          "version": "0.3.1",\n          "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",\n          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",\n          "requires": {\n            "get-value": "^2.0.3",\n            "has-values": "^0.1.4",\n            "isobject": "^2.0.0"\n          },\n          "dependencies": {\n            "isobject": {\n              "version": "2.1.0",\n              "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",\n              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",\n              "requires": {\n                "isarray": "1.0.0"\n              }\n            }\n          }\n        },\n        "has-values": {\n          "version": "0.1.4",\n          "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",\n          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="\n        }\n      }\n    },\n    "upath": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/upath/-/upath-1.1.2.tgz",\n      "integrity": "sha512-kXpym8nmDmlCBr7nKdIx8P2jNBa+pBpIUFRnKJ4dr8htyYGJFokkr2ZvERRtUN+9SY+JqXouNgUPtv6JQva/2Q=="\n    },\n    "upper-case": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/upper-case/-/upper-case-1.1.3.tgz",\n      "integrity": "sha1-9rRQHC7EzdJrp4vnIilh3ndiFZg="\n    },\n    "uri-js": {\n      "version": "4.2.2",\n      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",\n      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",\n      "requires": {\n        "punycode": "^2.1.0"\n      }\n    },\n    "urix": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",\n      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="\n    },\n    "url": {\n      "version": "0.11.0",\n      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",\n      "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",\n      "requires": {\n        "punycode": "1.3.2",\n        "querystring": "0.2.0"\n      },\n      "dependencies": {\n        "punycode": {\n          "version": "1.3.2",\n          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",\n          "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="\n        }\n      }\n    },\n    "url-loader": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/url-loader/-/url-loader-1.1.2.tgz",\n      "integrity": "sha512-dXHkKmw8FhPqu8asTc1puBfe3TehOCo2+RmOOev5suNCIYBcT626kxiWg1NBVkwc4rO8BGa7gP70W7VXuqHrjg==",\n      "requires": {\n        "loader-utils": "^1.1.0",\n        "mime": "^2.0.3",\n        "schema-utils": "^1.0.0"\n      }\n    },\n    "url-parse": {\n      "version": "1.4.6",\n      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.4.6.tgz",\n      "integrity": "sha512-/B8AD9iQ01seoXmXf9z/MjLZQIdOoYl/+gvsQF6+mpnxaTfG9P7srYaiqaDMyKkR36XMXfhqSHss5MyFAO8lew==",\n      "requires": {\n        "querystringify": "^2.0.0",\n        "requires-port": "^1.0.0"\n      }\n    },\n    "url-regex": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/url-regex/-/url-regex-3.2.0.tgz",\n      "integrity": "sha1-260eDJ4p4QXdCx8J9oYvf9tIJyQ=",\n      "requires": {\n        "ip-regex": "^1.0.1"\n      },\n      "dependencies": {\n        "ip-regex": {\n          "version": "1.0.3",\n          "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-1.0.3.tgz",\n          "integrity": "sha1-3FiQdvZZ9BnCIgOaMzFvHHOH7/0="\n        }\n      }\n    },\n    "use": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",\n      "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ=="\n    },\n    "user-home": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/user-home/-/user-home-1.1.1.tgz",\n      "integrity": "sha1-K1viOjK2Onyd640PKNSFcko98ZA="\n    },\n    "util": {\n      "version": "0.11.1",\n      "resolved": "https://registry.npmjs.org/util/-/util-0.11.1.tgz",\n      "integrity": "sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==",\n      "requires": {\n        "inherits": "2.0.3"\n      }\n    },\n    "util-deprecate": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",\n      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="\n    },\n    "util.promisify": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.0.tgz",\n      "integrity": "sha512-i+6qA2MPhvoKLuxnJNpXAGhg7HphQOSUq2LKMZD0m15EiskXUkMvKdF4Uui0WYeCUGea+o2cw/ZuwehtfsrNkA==",\n      "requires": {\n        "define-properties": "^1.1.2",\n        "object.getownpropertydescriptors": "^2.0.3"\n      }\n    },\n    "utila": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/utila/-/utila-0.4.0.tgz",\n      "integrity": "sha1-ihagXURWV6Oupe7MWxKk+lN5dyw="\n    },\n    "utils-merge": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",\n      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM="\n    },\n    "uuid": {\n      "version": "3.3.2",\n      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",\n      "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="\n    },\n    "v8flags": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-2.1.1.tgz",\n      "integrity": "sha1-qrGh+jDUX4jdMhFIh1rALAtV5bQ=",\n      "requires": {\n        "user-home": "^1.1.1"\n      }\n    },\n    "validate-npm-package-license": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",\n      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",\n      "requires": {\n        "spdx-correct": "^3.0.0",\n        "spdx-expression-parse": "^3.0.0"\n      }\n    },\n    "value-or-function": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/value-or-function/-/value-or-function-3.0.0.tgz",\n      "integrity": "sha1-HCQ6ULWVwb5Up1S/7OhWO5/42BM="\n    },\n    "vary": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",\n      "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw="\n    },\n    "vendors": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/vendors/-/vendors-1.0.2.tgz",\n      "integrity": "sha512-w/hry/368nO21AN9QljsaIhb9ZiZtZARoVH5f3CsFbawdLdayCgKRPup7CggujvySMxx0I91NOyxdVENohprLQ=="\n    },\n    "verror": {\n      "version": "1.10.0",\n      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",\n      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",\n      "requires": {\n        "assert-plus": "^1.0.0",\n        "core-util-is": "1.0.2",\n        "extsprintf": "^1.2.0"\n      }\n    },\n    "vfile": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/vfile/-/vfile-4.0.0.tgz",\n      "integrity": "sha512-WMNeHy5djSl895BqE86D7WqA0Ie5fAIeGCa7V1EqiXyJg5LaGch2SUaZueok5abYQGH6mXEAsZ45jkoILIOlyA==",\n      "requires": {\n        "@types/unist": "^2.0.2",\n        "is-buffer": "^2.0.0",\n        "replace-ext": "1.0.0",\n        "unist-util-stringify-position": "^2.0.0",\n        "vfile-message": "^2.0.0"\n      },\n      "dependencies": {\n        "unist-util-stringify-position": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-2.0.0.tgz",\n          "integrity": "sha512-Uz5negUTrf9zm2ZT2Z9kdOL7Mr7FJLyq3ByqagUi7QZRVK1HnspVazvSqwHt73jj7APHtpuJ4K110Jm8O6/elw==",\n          "requires": {\n            "@types/unist": "^2.0.2"\n          }\n        },\n        "vfile-message": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-2.0.0.tgz",\n          "integrity": "sha512-YS6qg6UpBfIeiO+6XlhPOuJaoLvt1Y9g2cmlwqhBOOU0XRV8j5RLeoz72t6PWLvNXq3EBG1fQ05wNPrUoz0deQ==",\n          "requires": {\n            "@types/unist": "^2.0.2",\n            "unist-util-stringify-position": "^1.1.1"\n          },\n          "dependencies": {\n            "unist-util-stringify-position": {\n              "version": "1.1.2",\n              "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-1.1.2.tgz",\n              "integrity": "sha512-pNCVrk64LZv1kElr0N1wPiHEUoXNVFERp+mlTg/s9R5Lwg87f9bM/3sQB99w+N9D/qnM9ar3+AKDBwo/gm/iQQ=="\n            }\n          }\n        }\n      }\n    },\n    "vfile-message": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-1.1.1.tgz",\n      "integrity": "sha512-1WmsopSGhWt5laNir+633LszXvZ+Z/lxveBf6yhGsqnQIhlhzooZae7zV6YVM1Sdkw68dtAW3ow0pOdPANugvA==",\n      "requires": {\n        "unist-util-stringify-position": "^1.1.1"\n      }\n    },\n    "vinyl": {\n      "version": "0.5.3",\n      "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.5.3.tgz",\n      "integrity": "sha1-sEVbOPxeDPMNQyUTLkYZcMIJHN4=",\n      "requires": {\n        "clone": "^1.0.0",\n        "clone-stats": "^0.0.1",\n        "replace-ext": "0.0.1"\n      },\n      "dependencies": {\n        "replace-ext": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",\n          "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="\n        }\n      }\n    },\n    "vinyl-file": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/vinyl-file/-/vinyl-file-2.0.0.tgz",\n      "integrity": "sha1-p+v1/779obfRjRQPyweyI++2dRo=",\n      "requires": {\n        "graceful-fs": "^4.1.2",\n        "pify": "^2.3.0",\n        "pinkie-promise": "^2.0.0",\n        "strip-bom": "^2.0.0",\n        "strip-bom-stream": "^2.0.0",\n        "vinyl": "^1.1.0"\n      },\n      "dependencies": {\n        "pify": {\n          "version": "2.3.0",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n        },\n        "replace-ext": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",\n          "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="\n        },\n        "strip-bom": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",\n          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",\n          "requires": {\n            "is-utf8": "^0.2.0"\n          }\n        },\n        "vinyl": {\n          "version": "1.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",\n          "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",\n          "requires": {\n            "clone": "^1.0.0",\n            "clone-stats": "^0.0.1",\n            "replace-ext": "0.0.1"\n          }\n        }\n      }\n    },\n    "vinyl-fs": {\n      "version": "0.3.14",\n      "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-0.3.14.tgz",\n      "integrity": "sha1-mmhRzhysHBzqX+hsCTHWIMLPqeY=",\n      "requires": {\n        "defaults": "^1.0.0",\n        "glob-stream": "^3.1.5",\n        "glob-watcher": "^0.0.6",\n        "graceful-fs": "^3.0.0",\n        "mkdirp": "^0.5.0",\n        "strip-bom": "^1.0.0",\n        "through2": "^0.6.1",\n        "vinyl": "^0.4.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "0.2.0",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",\n          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8="\n        },\n        "graceful-fs": {\n          "version": "3.0.11",\n          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-3.0.11.tgz",\n          "integrity": "sha1-dhPHeKGv6mLyXGMKCG1/Osu92Bg=",\n          "requires": {\n            "natives": "^1.1.0"\n          }\n        },\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "readable-stream": {\n          "version": "1.0.34",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",\n          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        },\n        "strip-bom": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-1.0.0.tgz",\n          "integrity": "sha1-hbiGLzhEtabV7IRnqTWYFzo295Q=",\n          "requires": {\n            "first-chunk-stream": "^1.0.0",\n            "is-utf8": "^0.2.0"\n          }\n        },\n        "through2": {\n          "version": "0.6.5",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",\n          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",\n          "requires": {\n            "readable-stream": ">=1.0.33-1 <1.1.0-0",\n            "xtend": ">=4.0.0 <4.1.0-0"\n          }\n        },\n        "vinyl": {\n          "version": "0.4.6",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",\n          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",\n          "requires": {\n            "clone": "^0.2.0",\n            "clone-stats": "^0.0.1"\n          }\n        }\n      }\n    },\n    "vinyl-sourcemap": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/vinyl-sourcemap/-/vinyl-sourcemap-1.1.0.tgz",\n      "integrity": "sha1-kqgAWTo4cDqM2xHYswCtS+Y7PhY=",\n      "requires": {\n        "append-buffer": "^1.0.2",\n        "convert-source-map": "^1.5.0",\n        "graceful-fs": "^4.1.6",\n        "normalize-path": "^2.1.1",\n        "now-and-later": "^2.0.0",\n        "remove-bom-buffer": "^3.0.0",\n        "vinyl": "^2.0.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "^2.1.1",\n            "clone-buffer": "^1.0.0",\n            "clone-stats": "^1.0.0",\n            "cloneable-readable": "^1.0.0",\n            "remove-trailing-separator": "^1.0.1",\n            "replace-ext": "^1.0.0"\n          }\n        }\n      }\n    },\n    "vinyl-sourcemaps-apply": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz",\n      "integrity": "sha1-q2VJ1h0XLCsbh75cUI0jnI74dwU=",\n      "requires": {\n        "source-map": "^0.5.1"\n      }\n    },\n    "vm-browserify": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-0.0.4.tgz",\n      "integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",\n      "requires": {\n        "indexof": "0.0.1"\n      }\n    },\n    "w3c-hr-time": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.1.tgz",\n      "integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",\n      "requires": {\n        "browser-process-hrtime": "^0.1.2"\n      }\n    },\n    "w3c-xmlserializer": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-1.1.2.tgz",\n      "integrity": "sha512-p10l/ayESzrBMYWRID6xbuCKh2Fp77+sA0doRuGn4tTIMrrZVeqfpKjXHY+oDh3K4nLdPgNwMTVP6Vp4pvqbNg==",\n      "requires": {\n        "domexception": "^1.0.1",\n        "webidl-conversions": "^4.0.2",\n        "xml-name-validator": "^3.0.0"\n      }\n    },\n    "walker": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",\n      "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",\n      "requires": {\n        "makeerror": "1.0.x"\n      }\n    },\n    "warning": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",\n      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",\n      "requires": {\n        "loose-envify": "^1.0.0"\n      }\n    },\n    "watchpack": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.6.0.tgz",\n      "integrity": "sha512-i6dHe3EyLjMmDlU1/bGQpEw25XSjkJULPuAVKCbNRefQVq48yXKUpwg538F7AZTf9kyr57zj++pQFltUa5H7yA==",\n      "requires": {\n        "chokidar": "^2.0.2",\n        "graceful-fs": "^4.1.2",\n        "neo-async": "^2.5.0"\n      }\n    },\n    "wbuf": {\n      "version": "1.7.3",\n      "resolved": "https://registry.npmjs.org/wbuf/-/wbuf-1.7.3.tgz",\n      "integrity": "sha512-O84QOnr0icsbFGLS0O3bI5FswxzRr8/gHwWkDlQFskhSPryQXvrTMxjxGP4+iWYoauLoBvfDpkrOauZ+0iZpDA==",\n      "requires": {\n        "minimalistic-assert": "^1.0.0"\n      }\n    },\n    "web-namespaces": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/web-namespaces/-/web-namespaces-1.1.2.tgz",\n      "integrity": "sha512-II+n2ms4mPxK+RnIxRPOw3zwF2jRscdJIUE9BfkKHm4FYEg9+biIoTMnaZF5MpemE3T+VhMLrhbyD4ilkPCSbg=="\n    },\n    "webidl-conversions": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",\n      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg=="\n    },\n    "webpack": {\n      "version": "4.29.6",\n      "resolved": "https://registry.npmjs.org/webpack/-/webpack-4.29.6.tgz",\n      "integrity": "sha512-MwBwpiE1BQpMDkbnUUaW6K8RFZjljJHArC6tWQJoFm0oQtfoSebtg4Y7/QHnJ/SddtjYLHaKGX64CFjG5rehJw==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-module-context": "1.8.5",\n        "@webassemblyjs/wasm-edit": "1.8.5",\n        "@webassemblyjs/wasm-parser": "1.8.5",\n        "acorn": "^6.0.5",\n        "acorn-dynamic-import": "^4.0.0",\n        "ajv": "^6.1.0",\n        "ajv-keywords": "^3.1.0",\n        "chrome-trace-event": "^1.0.0",\n        "enhanced-resolve": "^4.1.0",\n        "eslint-scope": "^4.0.0",\n        "json-parse-better-errors": "^1.0.2",\n        "loader-runner": "^2.3.0",\n        "loader-utils": "^1.1.0",\n        "memory-fs": "~0.4.1",\n        "micromatch": "^3.1.8",\n        "mkdirp": "~0.5.0",\n        "neo-async": "^2.5.0",\n        "node-libs-browser": "^2.0.0",\n        "schema-utils": "^1.0.0",\n        "tapable": "^1.1.0",\n        "terser-webpack-plugin": "^1.1.0",\n        "watchpack": "^1.5.0",\n        "webpack-sources": "^1.3.0"\n      }\n    },\n    "webpack-dev-middleware": {\n      "version": "3.6.2",\n      "resolved": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.6.2.tgz",\n      "integrity": "sha512-A47I5SX60IkHrMmZUlB0ZKSWi29TZTcPz7cha1Z75yYOsgWh/1AcPmQEbC8ZIbU3A1ytSv1PMU0PyPz2Lmz2jg==",\n      "requires": {\n        "memory-fs": "^0.4.1",\n        "mime": "^2.3.1",\n        "range-parser": "^1.0.3",\n        "webpack-log": "^2.0.0"\n      }\n    },\n    "webpack-dev-server": {\n      "version": "3.2.1",\n      "resolved": "https://registry.npmjs.org/webpack-dev-server/-/webpack-dev-server-3.2.1.tgz",\n      "integrity": "sha512-sjuE4mnmx6JOh9kvSbPYw3u/6uxCLHNWfhWaIPwcXWsvWOPN+nc5baq4i9jui3oOBRXGonK9+OI0jVkaz6/rCw==",\n      "requires": {\n        "ansi-html": "0.0.7",\n        "bonjour": "^3.5.0",\n        "chokidar": "^2.0.0",\n        "compression": "^1.5.2",\n        "connect-history-api-fallback": "^1.3.0",\n        "debug": "^4.1.1",\n        "del": "^3.0.0",\n        "express": "^4.16.2",\n        "html-entities": "^1.2.0",\n        "http-proxy-middleware": "^0.19.1",\n        "import-local": "^2.0.0",\n        "internal-ip": "^4.2.0",\n        "ip": "^1.1.5",\n        "killable": "^1.0.0",\n        "loglevel": "^1.4.1",\n        "opn": "^5.1.0",\n        "portfinder": "^1.0.9",\n        "schema-utils": "^1.0.0",\n        "selfsigned": "^1.9.1",\n        "semver": "^5.6.0",\n        "serve-index": "^1.7.2",\n        "sockjs": "0.3.19",\n        "sockjs-client": "1.3.0",\n        "spdy": "^4.0.0",\n        "strip-ansi": "^3.0.0",\n        "supports-color": "^6.1.0",\n        "url": "^0.11.0",\n        "webpack-dev-middleware": "^3.5.1",\n        "webpack-log": "^2.0.0",\n        "yargs": "12.0.2"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "camelcase": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",\n          "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0="\n        },\n        "decamelize": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-2.0.0.tgz",\n          "integrity": "sha512-Ikpp5scV3MSYxY39ymh45ZLEecsTdv/Xj2CaQfI8RLMuwi7XvjX9H/fhraiSuU+C5w5NTDu4ZU72xNiZnurBPg==",\n          "requires": {\n            "xregexp": "4.0.0"\n          }\n        },\n        "require-main-filename": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",\n          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "^3.0.0"\n          }\n        },\n        "yargs": {\n          "version": "12.0.2",\n          "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.2.tgz",\n          "integrity": "sha512-e7SkEx6N6SIZ5c5H22RTZae61qtn3PYUE8JYbBFlK9sYmh3DMQ6E5ygtaG/2BW0JZi4WGgTR2IV5ChqlqrDGVQ==",\n          "requires": {\n            "cliui": "^4.0.0",\n            "decamelize": "^2.0.0",\n            "find-up": "^3.0.0",\n            "get-caller-file": "^1.0.1",\n            "os-locale": "^3.0.0",\n            "require-directory": "^2.1.1",\n            "require-main-filename": "^1.0.1",\n            "set-blocking": "^2.0.0",\n            "string-width": "^2.0.0",\n            "which-module": "^2.0.0",\n            "y18n": "^3.2.1 || ^4.0.0",\n            "yargs-parser": "^10.1.0"\n          }\n        },\n        "yargs-parser": {\n          "version": "10.1.0",\n          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-10.1.0.tgz",\n          "integrity": "sha512-VCIyR1wJoEBZUqk5PA+oOBF6ypbwh5aNB3I50guxAL/quggdfs4TtNHQrSazFA3fYZ+tEqfs0zIGlv0c/rgjbQ==",\n          "requires": {\n            "camelcase": "^4.1.0"\n          }\n        }\n      }\n    },\n    "webpack-log": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/webpack-log/-/webpack-log-2.0.0.tgz",\n      "integrity": "sha512-cX8G2vR/85UYG59FgkoMamwHUIkSSlV3bBMRsbxVXVUk2j6NleCKjQ/WE9eYg9WY4w25O9w8wKP4rzNZFmUcUg==",\n      "requires": {\n        "ansi-colors": "^3.0.0",\n        "uuid": "^3.3.2"\n      }\n    },\n    "webpack-manifest-plugin": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-2.0.4.tgz",\n      "integrity": "sha512-nejhOHexXDBKQOj/5v5IZSfCeTO3x1Dt1RZEcGfBSul891X/eLIcIVH31gwxPDdsi2Z8LKKFGpM4w9+oTBOSCg==",\n      "requires": {\n        "fs-extra": "^7.0.0",\n        "lodash": ">=3.5 <5",\n        "tapable": "^1.0.0"\n      }\n    },\n    "webpack-sources": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-1.3.0.tgz",\n      "integrity": "sha512-OiVgSrbGu7NEnEvQJJgdSFPl2qWKkWq5lHMhgiToIiN9w34EBnjYzSYs+VbL5KoYiLNtFFa7BZIKxRED3I32pA==",\n      "requires": {\n        "source-list-map": "^2.0.0",\n        "source-map": "~0.6.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "websocket-driver": {\n      "version": "0.7.0",\n      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.0.tgz",\n      "integrity": "sha1-DK+dLXVdk67gSdS90NP+LMoqJOs=",\n      "requires": {\n        "http-parser-js": ">=0.4.0",\n        "websocket-extensions": ">=0.1.1"\n      }\n    },\n    "websocket-extensions": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.3.tgz",\n      "integrity": "sha512-nqHUnMXmBzT0w570r2JpJxfiSD1IzoI+HGVdd3aZ0yNi3ngvQ4jv1dtHt5VGxfI2yj5yqImPhOK4vmIh2xMbGg=="\n    },\n    "whatwg-encoding": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",\n      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",\n      "requires": {\n        "iconv-lite": "0.4.24"\n      }\n    },\n    "whatwg-fetch": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.0.0.tgz",\n      "integrity": "sha512-9GSJUgz1D4MfyKU7KRqwOjXCXTqWdFNvEr7eUBYchQiVc744mqK/MzXPNR2WsPkmkOa4ywfg8C2n8h+13Bey1Q=="\n    },\n    "whatwg-mimetype": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",\n      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g=="\n    },\n    "whatwg-url": {\n      "version": "6.5.0",\n      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-6.5.0.tgz",\n      "integrity": "sha512-rhRZRqx/TLJQWUpQ6bmrt2UV4f0HCQ463yQuONJqC6fO2VoEb1pTYddbe59SkYq87aoM5A3bdhMZiUiVws+fzQ==",\n      "requires": {\n        "lodash.sortby": "^4.7.0",\n        "tr46": "^1.0.1",\n        "webidl-conversions": "^4.0.2"\n      }\n    },\n    "when": {\n      "version": "3.7.8",\n      "resolved": "https://registry.npmjs.org/when/-/when-3.7.8.tgz",\n      "integrity": "sha1-xxMLan6gRpPoQs3J56Hyqjmjn4I="\n    },\n    "which": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",\n      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",\n      "requires": {\n        "isexe": "^2.0.0"\n      }\n    },\n    "which-module": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",\n      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="\n    },\n    "window-size": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz",\n      "integrity": "sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0="\n    },\n    "wordwrap": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",\n      "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus="\n    },\n    "workbox-background-sync": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-background-sync/-/workbox-background-sync-4.3.0.tgz",\n      "integrity": "sha512-rmDqz1k2mnG8wj68rBapoFP3iCKmdPeTdD0/GLtErDcaQsKnGlsFmjjJ7OuQbuBa+W0FfVWCE+s3VwqL0D/+DA==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-broadcast-update": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-broadcast-update/-/workbox-broadcast-update-4.3.0.tgz",\n      "integrity": "sha512-YYdz+8FAVdy1ZTsXpapWyd5t2nH7KdBIQ9rFlsRMSGFS7LzcKfZy8Tka1W8byMNM1II5cxlFr7f6+3vLahzrCg==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-build": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-build/-/workbox-build-4.3.0.tgz",\n      "integrity": "sha512-D2fQa2Isp/BboJ8edYmvsTCrBrPWwVCYa7zMDysLViIaGVQTFMgazRXx8wZ2gZKud13M0maUR5Ln4wS5UiqAIA==",\n      "requires": {\n        "@babel/runtime": "^7.3.4",\n        "common-tags": "^1.8.0",\n        "fs-extra": "^4.0.2",\n        "glob": "^7.1.3",\n        "joi": "^14.3.1",\n        "lodash.template": "^4.4.0",\n        "pretty-bytes": "^5.1.0",\n        "stringify-object": "^3.3.0",\n        "strip-comments": "^1.0.2",\n        "workbox-background-sync": "^4.3.0",\n        "workbox-broadcast-update": "^4.3.0",\n        "workbox-cacheable-response": "^4.3.0",\n        "workbox-core": "^4.3.0",\n        "workbox-expiration": "^4.3.0",\n        "workbox-google-analytics": "^4.3.0",\n        "workbox-navigation-preload": "^4.3.0",\n        "workbox-precaching": "^4.3.0",\n        "workbox-range-requests": "^4.3.0",\n        "workbox-routing": "^4.3.0",\n        "workbox-strategies": "^4.3.0",\n        "workbox-streams": "^4.3.0",\n        "workbox-sw": "^4.3.0",\n        "workbox-window": "^4.3.0"\n      },\n      "dependencies": {\n        "fs-extra": {\n          "version": "4.0.3",\n          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",\n          "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",\n          "requires": {\n            "graceful-fs": "^4.1.2",\n            "jsonfile": "^4.0.0",\n            "universalify": "^0.1.0"\n          }\n        }\n      }\n    },\n    "workbox-cacheable-response": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-cacheable-response/-/workbox-cacheable-response-4.3.0.tgz",\n      "integrity": "sha512-GlnPS1WtEoPNFVPVW1Ss0CrNPlhB7FpMTh2XwpqdJKq7K/aDI8LKdFpRcZBZ2pfRpOf8b6AjAiDZr0hrJ9EFtQ==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-core": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-core/-/workbox-core-4.3.0.tgz",\n      "integrity": "sha512-k5j6yfyznkK7zHiYLbCsrJfYWUcJ9ZnFFzI4KSbr7D43rWwQkusHsPmOG3OT1YZseACtLRSnUUzb+Cg2arVXtw=="\n    },\n    "workbox-expiration": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-expiration/-/workbox-expiration-4.3.0.tgz",\n      "integrity": "sha512-mcTWxsBHVkDBlIXOZ9uT3m0bAc7OJ3NTj1pTjWzwVZ6sqvT1I88ewIyppv44GO9JqnwE87lODpdEUIKp9V4lNA==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-google-analytics": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-google-analytics/-/workbox-google-analytics-4.3.0.tgz",\n      "integrity": "sha512-itAfcN/rVNf5WqAMW5/OA/pMkFxZjYuk2ZmOCIuy0fFJeQ4F0PfD3Y1DzX1JrKHPMIPeXvvZiAGY8+HRuJjy7w==",\n      "requires": {\n        "workbox-background-sync": "^4.3.0",\n        "workbox-core": "^4.3.0",\n        "workbox-routing": "^4.3.0",\n        "workbox-strategies": "^4.3.0"\n      }\n    },\n    "workbox-navigation-preload": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-navigation-preload/-/workbox-navigation-preload-4.3.0.tgz",\n      "integrity": "sha512-1RoaOZD8mMTPjvTNG/FWSQZmfTlTP5FC7c6ZwKWWGoULcxPCmiqI8uWOnMg1/S+eAjYTtNfToW2pfvK4zi5ihA==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-precaching": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-precaching/-/workbox-precaching-4.3.0.tgz",\n      "integrity": "sha512-wEsF7+I1opRbyJysYWtn8c1liHqA3bvtaTk4FohE3ViZfn2MIEzORuk7G1kEBZEdJnGf7QcfVJ2tNFYv72yQZQ==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-range-requests": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-range-requests/-/workbox-range-requests-4.3.0.tgz",\n      "integrity": "sha512-2NskkW6Qmkm9YQPh7swODfB6u3yALqdUqxb0i/3tYp4OKEux50ju9B1OK/u3V/INJ6q2s/CwYmxwxJHhXi9Nfg==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-routing": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-routing/-/workbox-routing-4.3.0.tgz",\n      "integrity": "sha512-/lqWiZRjtyKi3If3J8jWHXJQIjaSLv8WKbGnriOcTxFEG7t+AJ79QYIxWXv0UQo4KFpjQRQUag+38T9spbV0IA==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-strategies": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-strategies/-/workbox-strategies-4.3.0.tgz",\n      "integrity": "sha512-yzhs07UZg7CR0thFFsUDI5hp+I0WoKd9IHSj4ckHoUAslyKLpmwGnOInsPeq2WQfXn7CkyinRjwUrwv3FMw1Gw==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-streams": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-streams/-/workbox-streams-4.3.0.tgz",\n      "integrity": "sha512-CIA9inxuFELQOO+/7+JpE50cBhpTWOYcLK7tQpriQ6PJod2tAMgo9X89vt9vLk1pN0PMd749MqurAz8FgLHHEg==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "workbox-sw": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-sw/-/workbox-sw-4.3.0.tgz",\n      "integrity": "sha512-d4INzCxFrHixUrhYV5z+6+zX1AKO3T77JY7l1ZKh15blW3Mz9u0FpJATzz3NWaI9X/cxgRyOsR8J7deu3XjlEg=="\n    },\n    "workbox-webpack-plugin": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/workbox-webpack-plugin/-/workbox-webpack-plugin-4.2.0.tgz",\n      "integrity": "sha512-YZsiA+y/ns/GdWRaBsfYv8dln1ebWtGnJcTOg1ppO0pO1tScAHX0yGtHIjndxz3L/UUhE8b0NQE9KeLNwJwA5A==",\n      "requires": {\n        "@babel/runtime": "^7.0.0",\n        "json-stable-stringify": "^1.0.1",\n        "workbox-build": "^4.2.0"\n      }\n    },\n    "workbox-window": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-4.3.0.tgz",\n      "integrity": "sha512-Lf5Da+4VdmUZSVhBFEcZSBWNHm9x7Zr2FUp1mgUZhrIwnkfL4qmjpG7TyAzaPm7QLc/O+yxDDC5cgEvMtE1fjQ==",\n      "requires": {\n        "workbox-core": "^4.3.0"\n      }\n    },\n    "worker-farm": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/worker-farm/-/worker-farm-1.6.0.tgz",\n      "integrity": "sha512-6w+3tHbM87WnSWnENBUvA2pxJPLhQUg5LKwUQHq3r+XPhIM+Gh2R5ycbwPCyuGbNg+lPgdcnQUhuC02kJCvffQ==",\n      "requires": {\n        "errno": "~0.1.7"\n      }\n    },\n    "wrap-ansi": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",\n      "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",\n      "requires": {\n        "string-width": "^1.0.1",\n        "strip-ansi": "^3.0.1"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "is-fullwidth-code-point": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",\n          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",\n          "requires": {\n            "number-is-nan": "^1.0.0"\n          }\n        },\n        "string-width": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",\n          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",\n          "requires": {\n            "code-point-at": "^1.0.0",\n            "is-fullwidth-code-point": "^1.0.0",\n            "strip-ansi": "^3.0.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "^2.0.0"\n          }\n        }\n      }\n    },\n    "wrappy": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",\n      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="\n    },\n    "wrench-sui": {\n      "version": "0.0.3",\n      "resolved": "https://registry.npmjs.org/wrench-sui/-/wrench-sui-0.0.3.tgz",\n      "integrity": "sha1-1hoSAwwf2NZxs90VqmyeD83E4sg="\n    },\n    "write": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/write/-/write-1.0.3.tgz",\n      "integrity": "sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==",\n      "requires": {\n        "mkdirp": "^0.5.1"\n      }\n    },\n    "write-file-atomic": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.1.tgz",\n      "integrity": "sha512-TGHFeZEZMnv+gBFRfjAcxL5bPHrsGKtnb4qsFAws7/vlh+QfwAaySIw4AXP9ZskTTh5GWu3FLuJhsWVdiJPGvg==",\n      "requires": {\n        "graceful-fs": "^4.1.11",\n        "imurmurhash": "^0.1.4",\n        "signal-exit": "^3.0.2"\n      }\n    },\n    "ws": {\n      "version": "5.2.2",\n      "resolved": "https://registry.npmjs.org/ws/-/ws-5.2.2.tgz",\n      "integrity": "sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==",\n      "requires": {\n        "async-limiter": "~1.0.0"\n      }\n    },\n    "x-is-string": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/x-is-string/-/x-is-string-0.1.0.tgz",\n      "integrity": "sha1-R0tQhlrzpJqcRlfwWs0UVFj3fYI="\n    },\n    "xml-name-validator": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",\n      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw=="\n    },\n    "xmlchars": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-1.3.1.tgz",\n      "integrity": "sha512-tGkGJkN8XqCod7OT+EvGYK5Z4SfDQGD30zAa58OcnAa0RRWgzUEK72tkXhsX1FZd+rgnhRxFtmO+ihkp8LHSkw=="\n    },\n    "xregexp": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/xregexp/-/xregexp-4.0.0.tgz",\n      "integrity": "sha512-PHyM+sQouu7xspQQwELlGwwd05mXUFqwFYfqPO0cC7x4fxyHnnuetmQr6CjJiafIDoH4MogHb9dOoJzR/Y4rFg=="\n    },\n    "xtend": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",\n      "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68="\n    },\n    "y18n": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",\n      "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w=="\n    },\n    "yallist": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz",\n      "integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A=="\n    },\n    "yamljs": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/yamljs/-/yamljs-0.3.0.tgz",\n      "integrity": "sha512-C/FsVVhht4iPQYXOInoxUM/1ELSf9EsgKH34FofQOp6hwCPrW4vG4w5++TED3xRUo8gD7l0P1J1dLlDYzODsTQ==",\n      "requires": {\n        "argparse": "^1.0.7",\n        "glob": "^7.0.5"\n      }\n    },\n    "yargs": {\n      "version": "12.0.5",\n      "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.5.tgz",\n      "integrity": "sha512-Lhz8TLaYnxq/2ObqHDql8dX8CJi97oHxrjUcYtzKbbykPtVW9WB+poxI+NM2UIzsMgNCZTIf0AQwsjK5yMAqZw==",\n      "requires": {\n        "cliui": "^4.0.0",\n        "decamelize": "^1.2.0",\n        "find-up": "^3.0.0",\n        "get-caller-file": "^1.0.1",\n        "os-locale": "^3.0.0",\n        "require-directory": "^2.1.1",\n        "require-main-filename": "^1.0.1",\n        "set-blocking": "^2.0.0",\n        "string-width": "^2.0.0",\n        "which-module": "^2.0.0",\n        "y18n": "^3.2.1 || ^4.0.0",\n        "yargs-parser": "^11.1.1"\n      },\n      "dependencies": {\n        "require-main-filename": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",\n          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="\n        }\n      }\n    },\n    "yargs-parser": {\n      "version": "11.1.1",\n      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-11.1.1.tgz",\n      "integrity": "sha512-C6kB/WJDiaxONLJQnF8ccx9SEeoTTLek8RVbaOIsrAUS8VrBEXfmeSnCZxygc+XC2sNMBIwOOnfcxiynjHsVSQ==",\n      "requires": {\n        "camelcase": "^5.0.0",\n        "decamelize": "^1.2.0"\n      }\n    }\n  }\n}\n'
ans=ans.replace('^','')
ans='{\n  "name": "liac",\n  "version": "0.1.0",\n  "lockfileVersion": 1,\n  "requires": true,\n  "dependencies": {\n    "@babel/code-frame": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.0.0.tgz",\n      "integrity": "sha512-OfC2uemaknXr87bdLUkWog7nYuliM9Ij5HUcajsVcMCpQrcLmtxRbVFTIqmcSkSeYRBFBRxs2FiUqFJDLdiebA==",\n      "requires": {\n        "@babel/highlight": "7.0.0"\n      }\n    },\n    "@babel/core": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.4.3.tgz",\n      "integrity": "sha512-oDpASqKFlbspQfzAE7yaeTmdljSH2ADIvBlb0RwbStltTuWa0+7CCI1fYVINNv9saHPa1W7oaKeuNuKj+RQCvA==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "@babel/generator": "7.4.0",\n        "@babel/helpers": "7.4.3",\n        "@babel/parser": "7.4.3",\n        "@babel/template": "7.4.0",\n        "@babel/traverse": "7.4.3",\n        "@babel/types": "7.4.0",\n        "convert-source-map": "1.1.0",\n        "debug": "4.1.0",\n        "json5": "2.1.0",\n        "lodash": "4.17.11",\n        "resolve": "1.3.2",\n        "semver": "5.4.1",\n        "source-map": "0.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "@babel/generator": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.4.0.tgz",\n      "integrity": "sha512-/v5I+a1jhGSKLgZDcmAUZ4K/VePi43eRkUs3yePW1HB1iANOD5tqJXwGSG4BZhSksP8J9ejSlwGeTiiOFZOrXQ==",\n      "requires": {\n        "@babel/types": "7.4.0",\n        "jsesc": "2.5.1",\n        "lodash": "4.17.11",\n        "source-map": "0.5.0",\n        "trim-right": "1.0.1"\n      }\n    },\n    "@babel/helper-annotate-as-pure": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.0.0.tgz",\n      "integrity": "sha512-3UYcJUj9kvSLbLbUIfQTqzcy5VX7GRZ/CCDrnOaZorFFM01aXp1+GJwuFGV4NDDoAS+mOUyHcO6UD/RfqOks3Q==",\n      "requires": {\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-builder-binary-assignment-operator-visitor": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.1.0.tgz",\n      "integrity": "sha512-qNSR4jrmJ8M1VMM9tibvyRAHXQs2PmaksQF7c1CGJNipfe3D8p+wgNwgso/P2A2r2mdgBWAXljNWR0QRZAMW8w==",\n      "requires": {\n        "@babel/helper-explode-assignable-expression": "7.1.0",\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-builder-react-jsx": {\n      "version": "7.3.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-builder-react-jsx/-/helper-builder-react-jsx-7.3.0.tgz",\n      "integrity": "sha512-MjA9KgwCuPEkQd9ncSXvSyJ5y+j2sICHyrI0M3L+6fnS4wMSNDc1ARXsbTfbb2cXHn17VisSnU/sHFTCxVxSMw==",\n      "requires": {\n        "@babel/types": "7.3.0",\n        "esutils": "2.0.0"\n      }\n    },\n    "@babel/helper-call-delegate": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-call-delegate/-/helper-call-delegate-7.4.0.tgz",\n      "integrity": "sha512-SdqDfbVdNQCBp3WhK2mNdDvHd3BD6qbmIc43CAyjnsfCmgHMeqgDcM3BzY2lchi7HBJGJ2CVdynLWbezaE4mmQ==",\n      "requires": {\n        "@babel/helper-hoist-variables": "7.4.0",\n        "@babel/traverse": "7.4.0",\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@babel/helper-create-class-features-plugin": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helper-create-class-features-plugin/-/helper-create-class-features-plugin-7.4.3.tgz",\n      "integrity": "sha512-UMl3TSpX11PuODYdWGrUeW6zFkdYhDn7wRLrOuNVM6f9L+S9CzmDXYyrp3MTHcwWjnzur1f/Op8A7iYZWya2Yg==",\n      "requires": {\n        "@babel/helper-function-name": "7.1.0",\n        "@babel/helper-member-expression-to-functions": "7.0.0",\n        "@babel/helper-optimise-call-expression": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-replace-supers": "7.4.0",\n        "@babel/helper-split-export-declaration": "7.4.0"\n      }\n    },\n    "@babel/helper-define-map": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-define-map/-/helper-define-map-7.4.0.tgz",\n      "integrity": "sha512-wAhQ9HdnLIywERVcSvX40CEJwKdAa1ID4neI9NXQPDOHwwA+57DqwLiPEVy2AIyWzAk0CQ8qx4awO0VUURwLtA==",\n      "requires": {\n        "@babel/helper-function-name": "7.1.0",\n        "@babel/types": "7.4.0",\n        "lodash": "4.17.11"\n      }\n    },\n    "@babel/helper-explode-assignable-expression": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-explode-assignable-expression/-/helper-explode-assignable-expression-7.1.0.tgz",\n      "integrity": "sha512-NRQpfHrJ1msCHtKjbzs9YcMmJZOg6mQMmGRB+hbamEdG5PNpaSm95275VD92DvJKuyl0s2sFiDmMZ+EnnvufqA==",\n      "requires": {\n        "@babel/traverse": "7.1.0",\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-function-name": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-function-name/-/helper-function-name-7.1.0.tgz",\n      "integrity": "sha512-A95XEoCpb3TO+KZzJ4S/5uW5fNe26DjBGqf1o9ucyLyCmi1dXq/B3c8iaWTfBk3VvetUxl16e8tIrd5teOCfGw==",\n      "requires": {\n        "@babel/helper-get-function-arity": "7.0.0",\n        "@babel/template": "7.1.0",\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-get-function-arity": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-get-function-arity/-/helper-get-function-arity-7.0.0.tgz",\n      "integrity": "sha512-r2DbJeg4svYvt3HOS74U4eWKsUAMRH01Z1ds1zx8KNTPtpTL5JAsdFv8BNyOpVqdFhHkkRDIg5B4AsxmkjAlmQ==",\n      "requires": {\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-hoist-variables": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-hoist-variables/-/helper-hoist-variables-7.4.0.tgz",\n      "integrity": "sha512-/NErCuoe/et17IlAQFKWM24qtyYYie7sFIrW/tIQXpck6vAu2hhtYYsKLBWQV+BQZMbcIYPU/QMYuTufrY4aQw==",\n      "requires": {\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@babel/helper-member-expression-to-functions": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-member-expression-to-functions/-/helper-member-expression-to-functions-7.0.0.tgz",\n      "integrity": "sha512-avo+lm/QmZlv27Zsi0xEor2fKcqWG56D5ae9dzklpIaY7cQMK5N8VSpaNVPPagiqmy7LrEjK1IWdGMOqPu5csg==",\n      "requires": {\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-module-imports": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.0.0.tgz",\n      "integrity": "sha512-aP/hlLq01DWNEiDg4Jn23i+CXxW/owM4WpDLFUbpjxe4NS3BhLVZQ5i7E0ZrxuQ/vwekIeciyamgB1UIYxxM6A==",\n      "requires": {\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-module-transforms": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.4.3.tgz",\n      "integrity": "sha512-H88T9IySZW25anu5uqyaC1DaQre7ofM+joZtAaO2F8NBdFfupH0SZ4gKjgSFVcvtx/aAirqA9L9Clio2heYbZA==",\n      "requires": {\n        "@babel/helper-module-imports": "7.0.0",\n        "@babel/helper-simple-access": "7.1.0",\n        "@babel/helper-split-export-declaration": "7.0.0",\n        "@babel/template": "7.2.2",\n        "@babel/types": "7.2.2",\n        "lodash": "4.17.11"\n      }\n    },\n    "@babel/helper-optimise-call-expression": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-optimise-call-expression/-/helper-optimise-call-expression-7.0.0.tgz",\n      "integrity": "sha512-u8nd9NQePYNQV8iPWu/pLLYBqZBa4ZaY1YWRFMuxrid94wKI1QNt67NEZ7GAe5Kc/0LLScbim05xZFWkAdrj9g==",\n      "requires": {\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-plugin-utils": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.0.0.tgz",\n      "integrity": "sha512-CYAOUCARwExnEixLdB6sDm2dIJ/YgEAKDM1MOeMeZu9Ld/bDgVo8aiWrXwcY7OBh+1Ea2uUcVRcxKk0GJvW7QA=="\n    },\n    "@babel/helper-regex": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helper-regex/-/helper-regex-7.4.3.tgz",\n      "integrity": "sha512-hnoq5u96pLCfgjXuj8ZLX3QQ+6nAulS+zSgi6HulUwFbEruRAKwbGLU5OvXkE14L8XW6XsQEKsIDfgthKLRAyA==",\n      "requires": {\n        "lodash": "4.17.11"\n      }\n    },\n    "@babel/helper-remap-async-to-generator": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-remap-async-to-generator/-/helper-remap-async-to-generator-7.1.0.tgz",\n      "integrity": "sha512-3fOK0L+Fdlg8S5al8u/hWE6vhufGSn0bN09xm2LXMy//REAF8kDCrYoOBKYmA8m5Nom+sV9LyLCwrFynA8/slg==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "7.0.0",\n        "@babel/helper-wrap-function": "7.1.0",\n        "@babel/template": "7.1.0",\n        "@babel/traverse": "7.1.0",\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-replace-supers": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-replace-supers/-/helper-replace-supers-7.4.0.tgz",\n      "integrity": "sha512-PVwCVnWWAgnal+kJ+ZSAphzyl58XrFeSKSAJRiqg5QToTsjL+Xu1f9+RJ+d+Q0aPhPfBGaYfkox66k86thxNSg==",\n      "requires": {\n        "@babel/helper-member-expression-to-functions": "7.0.0",\n        "@babel/helper-optimise-call-expression": "7.0.0",\n        "@babel/traverse": "7.4.0",\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@babel/helper-simple-access": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.1.0.tgz",\n      "integrity": "sha512-Vk+78hNjRbsiu49zAPALxTb+JUQCz1aolpd8osOF16BGnLtseD21nbHgLPGUwrXEurZgiCOUmvs3ExTu4F5x6w==",\n      "requires": {\n        "@babel/template": "7.1.0",\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@babel/helper-split-export-declaration": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-split-export-declaration/-/helper-split-export-declaration-7.4.0.tgz",\n      "integrity": "sha512-7Cuc6JZiYShaZnybDmfwhY4UYHzI6rlqhWjaIqbsJGsIqPimEYy5uh3akSRLMg65LSdSEnJ8a8/bWQN6u2oMGw==",\n      "requires": {\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@babel/helper-wrap-function": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/helper-wrap-function/-/helper-wrap-function-7.2.0.tgz",\n      "integrity": "sha512-o9fP1BZLLSrYlxYEYyl2aS+Flun5gtjTIG8iln+XuEzQTs0PLagAGSXUcqruJwD5fM48jzIEggCKpIfWTcR7pQ==",\n      "requires": {\n        "@babel/helper-function-name": "7.1.0",\n        "@babel/template": "7.1.0",\n        "@babel/traverse": "7.1.0",\n        "@babel/types": "7.2.0"\n      }\n    },\n    "@babel/helpers": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.4.3.tgz",\n      "integrity": "sha512-BMh7X0oZqb36CfyhvtbSmcWc3GXocfxv3yNsAEuM0l+fAqSO22rQrUpijr3oE/10jCTrB6/0b9kzmG4VetCj8Q==",\n      "requires": {\n        "@babel/template": "7.4.0",\n        "@babel/traverse": "7.4.3",\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@babel/highlight": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.0.0.tgz",\n      "integrity": "sha512-UFMC4ZeFC48Tpvj7C8UgLvtkaUuovQX+5xNWrsIoMG8o2z+XFKjKaN9iVmS84dPwVN00W4wPmqvYoZF3EGAsfw==",\n      "requires": {\n        "chalk": "2.0.0",\n        "esutils": "2.0.2",\n        "js-tokens": "4.0.0"\n      }\n    },\n    "@babel/parser": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.4.3.tgz",\n      "integrity": "sha512-gxpEUhTS1sGA63EGQGuA+WESPR/6tz6ng7tSHFCmaTJK/cGK8y37cBTspX+U2xCAue2IQVvF6Z0oigmjwD8YGQ=="\n    },\n    "@babel/plugin-proposal-async-generator-functions": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-async-generator-functions/-/plugin-proposal-async-generator-functions-7.2.0.tgz",\n      "integrity": "sha512-+Dfo/SCQqrwx48ptLVGLdE39YtWRuKc/Y9I5Fy0P1DDBB9lsAHpjcEJQt+4IifuSOSTLBKJObJqMvaO1pIE8LQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-remap-async-to-generator": "7.1.0",\n        "@babel/plugin-syntax-async-generators": "7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-class-properties": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-class-properties/-/plugin-proposal-class-properties-7.4.0.tgz",\n      "integrity": "sha512-t2ECPNOXsIeK1JxJNKmgbzQtoG27KIlVE61vTqX0DKR9E9sZlVVxWUtEW9D5FlZ8b8j7SBNCHY47GgPKCKlpPg==",\n      "requires": {\n        "@babel/helper-create-class-features-plugin": "7.4.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-proposal-decorators": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-decorators/-/plugin-proposal-decorators-7.4.0.tgz",\n      "integrity": "sha512-d08TLmXeK/XbgCo7ZeZ+JaeZDtDai/2ctapTRsWWkkmy7G/cqz8DQN/HlWG7RR4YmfXxmExsbU3SuCjlM7AtUg==",\n      "requires": {\n        "@babel/helper-create-class-features-plugin": "7.4.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-decorators": "7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-json-strings": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-json-strings/-/plugin-proposal-json-strings-7.2.0.tgz",\n      "integrity": "sha512-MAFV1CA/YVmYwZG0fBQyXhmj0BHCB5egZHCKWIFVv/XCxAeVGIHfos3SwDck4LvCllENIAg7xMKOG5kH0dzyUg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-json-strings": "7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-object-rest-spread": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-object-rest-spread/-/plugin-proposal-object-rest-spread-7.4.3.tgz",\n      "integrity": "sha512-xC//6DNSSHVjq8O2ge0dyYlhshsH4T7XdCVoxbi5HzLYWfsC5ooFlJjrXk8RcAT+hjHAK9UjBXdylzSoDK3t4g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-object-rest-spread": "7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-optional-catch-binding": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-optional-catch-binding/-/plugin-proposal-optional-catch-binding-7.2.0.tgz",\n      "integrity": "sha512-mgYj3jCcxug6KUcX4OBoOJz3CMrwRfQELPQ5560F70YQUBZB7uac9fqaWamKR1iWUzGiK2t0ygzjTScZnVz75g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-optional-catch-binding": "7.2.0"\n      }\n    },\n    "@babel/plugin-proposal-unicode-property-regex": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-proposal-unicode-property-regex/-/plugin-proposal-unicode-property-regex-7.4.0.tgz",\n      "integrity": "sha512-h/KjEZ3nK9wv1P1FSNb9G079jXrNYR0Ko+7XkOx85+gM24iZbPn0rh4vCftk+5QKY7y1uByFataBTmX7irEF1w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-regex": "7.0.0",\n        "regexpu-core": "4.5.4"\n      }\n    },\n    "@babel/plugin-syntax-async-generators": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.2.0.tgz",\n      "integrity": "sha512-1ZrIRBv2t0GSlcwVoQ6VgSLpLgiN/FVQUzt9znxo7v2Ov4jJrs8RY8tv0wvDmFN3qIdMKWrmMMW6yZ0G19MfGg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-decorators": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-decorators/-/plugin-syntax-decorators-7.2.0.tgz",\n      "integrity": "sha512-38QdqVoXdHUQfTpZo3rQwqQdWtCn5tMv4uV6r2RMfTqNBuv4ZBhz79SfaQWKTVmxHjeFv/DnXVC/+agHCklYWA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-dynamic-import": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-dynamic-import/-/plugin-syntax-dynamic-import-7.2.0.tgz",\n      "integrity": "sha512-mVxuJ0YroI/h/tbFTPGZR8cv6ai+STMKNBq0f8hFxsxWjl94qqhsb+wXbpNMDPU3cfR1TIsVFzU3nXyZMqyK4w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-flow": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-flow/-/plugin-syntax-flow-7.2.0.tgz",\n      "integrity": "sha512-r6YMuZDWLtLlu0kqIim5o/3TNRAlWb073HwT3e2nKf9I8IIvOggPrnILYPsrrKilmn/mYEMCf/Z07w3yQJF6dg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-json-strings": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.2.0.tgz",\n      "integrity": "sha512-5UGYnMSLRE1dqqZwug+1LISpA403HzlSfsg6P9VXU6TBjcSHeNlw4DxDx7LgpF+iKZoOG/+uzqoRHTdcUpiZNg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-jsx": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.2.0.tgz",\n      "integrity": "sha512-VyN4QANJkRW6lDBmENzRszvZf3/4AXaj9YR7GwrWeeN9tEBPuXbmDYVU9bYBN0D70zCWVwUy0HWq2553VCb6Hw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-object-rest-spread": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.2.0.tgz",\n      "integrity": "sha512-t0JKGgqk2We+9may3t0xDdmneaXmyxq0xieYcKHxIsrJO64n1OiMWNUtc5gQK1PA0NpdCRrtZp4z+IUaKugrSA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-optional-catch-binding": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.2.0.tgz",\n      "integrity": "sha512-bDe4xKNhb0LI7IvZHiA13kff0KEfaGX/Hv4lMA9+7TEc63hMNvfKo6ZFpXhKuEp+II/q35Gc4NoMeDZyaUbj9w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-syntax-typescript": {\n      "version": "7.3.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.3.3.tgz",\n      "integrity": "sha512-dGwbSMA1YhVS8+31CnPR7LB4pcbrzcV99wQzby4uAfrkZPYZlQ7ImwdpzLqi6Z6IL02b8IAL379CaMwo0x5Lag==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-arrow-functions": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-arrow-functions/-/plugin-transform-arrow-functions-7.2.0.tgz",\n      "integrity": "sha512-ER77Cax1+8/8jCB9fo4Ud161OZzWN5qawi4GusDuRLcDbDG+bIGYY20zb2dfAFdTRGzrfq2xZPvF0R64EHnimg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-async-to-generator": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-async-to-generator/-/plugin-transform-async-to-generator-7.4.0.tgz",\n      "integrity": "sha512-EeaFdCeUULM+GPFEsf7pFcNSxM7hYjoj5fiYbyuiXobW4JhFnjAv9OWzNwHyHcKoPNpAfeRDuW6VyaXEDUBa7g==",\n      "requires": {\n        "@babel/helper-module-imports": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-remap-async-to-generator": "7.1.0"\n      }\n    },\n    "@babel/plugin-transform-block-scoped-functions": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoped-functions/-/plugin-transform-block-scoped-functions-7.2.0.tgz",\n      "integrity": "sha512-ntQPR6q1/NKuphly49+QiQiTN0O63uOwjdD6dhIjSWBI5xlrbUFh720TIpzBhpnrLfv2tNH/BXvLIab1+BAI0w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-block-scoping": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-block-scoping/-/plugin-transform-block-scoping-7.4.0.tgz",\n      "integrity": "sha512-AWyt3k+fBXQqt2qb9r97tn3iBwFpiv9xdAiG+Gr2HpAZpuayvbL55yWrsV3MyHvXk/4vmSiedhDRl1YI2Iy5nQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "lodash": "4.17.11"\n      }\n    },\n    "@babel/plugin-transform-classes": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-classes/-/plugin-transform-classes-7.4.3.tgz",\n      "integrity": "sha512-PUaIKyFUDtG6jF5DUJOfkBdwAS/kFFV3XFk7Nn0a6vR7ZT8jYw5cGtIlat77wcnd0C6ViGqo/wyNf4ZHytF/nQ==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "7.0.0",\n        "@babel/helper-define-map": "7.4.0",\n        "@babel/helper-function-name": "7.1.0",\n        "@babel/helper-optimise-call-expression": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-replace-supers": "7.4.0",\n        "@babel/helper-split-export-declaration": "7.4.0",\n        "globals": "11.1.0"\n      }\n    },\n    "@babel/plugin-transform-computed-properties": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-computed-properties/-/plugin-transform-computed-properties-7.2.0.tgz",\n      "integrity": "sha512-kP/drqTxY6Xt3NNpKiMomfgkNn4o7+vKxK2DDKcBG9sHj51vHqMBGy8wbDS/J4lMxnqs153/T3+DmCEAkC5cpA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-destructuring": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-destructuring/-/plugin-transform-destructuring-7.4.3.tgz",\n      "integrity": "sha512-rVTLLZpydDFDyN4qnXdzwoVpk1oaXHIvPEOkOLyr88o7oHxVc/LyrnDx+amuBWGOwUb7D1s/uLsKBNTx08htZg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-dotall-regex": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-dotall-regex/-/plugin-transform-dotall-regex-7.4.3.tgz",\n      "integrity": "sha512-9Arc2I0AGynzXRR/oPdSALv3k0rM38IMFyto7kOCwb5F9sLUt2Ykdo3V9yUPR+Bgr4kb6bVEyLkPEiBhzcTeoA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-regex": "7.4.3",\n        "regexpu-core": "4.5.4"\n      }\n    },\n    "@babel/plugin-transform-duplicate-keys": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.2.0.tgz",\n      "integrity": "sha512-q+yuxW4DsTjNceUiTzK0L+AfQ0zD9rWaTLiUqHA8p0gxx7lu1EylenfzjeIWNkPy6e/0VG/Wjw9uf9LueQwLOw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-exponentiation-operator": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-exponentiation-operator/-/plugin-transform-exponentiation-operator-7.2.0.tgz",\n      "integrity": "sha512-umh4hR6N7mu4Elq9GG8TOu9M0bakvlsREEC+ialrQN6ABS4oDQ69qJv1VtR3uxlKMCQMCvzk7vr17RHKcjx68A==",\n      "requires": {\n        "@babel/helper-builder-binary-assignment-operator-visitor": "7.1.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-flow-strip-types": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-flow-strip-types/-/plugin-transform-flow-strip-types-7.4.0.tgz",\n      "integrity": "sha512-C4ZVNejHnfB22vI2TYN4RUp2oCmq6cSEAg4RygSvYZUECRqUu9O4PMEMNJ4wsemaRGg27BbgYctG4BZh+AgIHw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-flow": "7.2.0"\n      }\n    },\n    "@babel/plugin-transform-for-of": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-for-of/-/plugin-transform-for-of-7.4.3.tgz",\n      "integrity": "sha512-UselcZPwVWNSURnqcfpnxtMehrb8wjXYOimlYQPBnup/Zld426YzIhNEvuRsEWVHfESIECGrxoI6L5QqzuLH5Q==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-function-name": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-function-name/-/plugin-transform-function-name-7.4.3.tgz",\n      "integrity": "sha512-uT5J/3qI/8vACBR9I1GlAuU/JqBtWdfCrynuOkrWG6nCDieZd5przB1vfP59FRHBZQ9DC2IUfqr/xKqzOD5x0A==",\n      "requires": {\n        "@babel/helper-function-name": "7.1.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-literals/-/plugin-transform-literals-7.2.0.tgz",\n      "integrity": "sha512-2ThDhm4lI4oV7fVQ6pNNK+sx+c/GM5/SaML0w/r4ZB7sAneD/piDJtwdKlNckXeyGK7wlwg2E2w33C/Hh+VFCg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-member-expression-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-member-expression-literals/-/plugin-transform-member-expression-literals-7.2.0.tgz",\n      "integrity": "sha512-HiU3zKkSU6scTidmnFJ0bMX8hz5ixC93b4MHMiYebmk2lUVNGOboPsqQvx5LzooihijUoLR/v7Nc1rbBtnc7FA==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-modules-amd": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-amd/-/plugin-transform-modules-amd-7.2.0.tgz",\n      "integrity": "sha512-mK2A8ucqz1qhrdqjS9VMIDfIvvT2thrEsIQzbaTdc5QFzhDjQv2CkJJ5f6BXIkgbmaoax3zBr2RyvV/8zeoUZw==",\n      "requires": {\n        "@babel/helper-module-transforms": "7.1.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-modules-commonjs": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-commonjs/-/plugin-transform-modules-commonjs-7.4.3.tgz",\n      "integrity": "sha512-sMP4JqOTbMJMimqsSZwYWsMjppD+KRyDIUVW91pd7td0dZKAvPmhCaxhOzkzLParKwgQc7bdL9UNv+rpJB0HfA==",\n      "requires": {\n        "@babel/helper-module-transforms": "7.4.3",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-simple-access": "7.1.0"\n      }\n    },\n    "@babel/plugin-transform-modules-systemjs": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-systemjs/-/plugin-transform-modules-systemjs-7.4.0.tgz",\n      "integrity": "sha512-gjPdHmqiNhVoBqus5qK60mWPp1CmYWp/tkh11mvb0rrys01HycEGD7NvvSoKXlWEfSM9TcL36CpsK8ElsADptQ==",\n      "requires": {\n        "@babel/helper-hoist-variables": "7.4.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-modules-umd": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-modules-umd/-/plugin-transform-modules-umd-7.2.0.tgz",\n      "integrity": "sha512-BV3bw6MyUH1iIsGhXlOK6sXhmSarZjtJ/vMiD9dNmpY8QXFFQTj+6v92pcfy1iqa8DeAfJFwoxcrS/TUZda6sw==",\n      "requires": {\n        "@babel/helper-module-transforms": "7.1.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-named-capturing-groups-regex": {\n      "version": "7.4.2",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-named-capturing-groups-regex/-/plugin-transform-named-capturing-groups-regex-7.4.2.tgz",\n      "integrity": "sha512-NsAuliSwkL3WO2dzWTOL1oZJHm0TM8ZY8ZSxk2ANyKkt5SQlToGA4pzctmq1BEjoacurdwZ3xp2dCQWJkME0gQ==",\n      "requires": {\n        "regexp-tree": "0.1.0"\n      }\n    },\n    "@babel/plugin-transform-new-target": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-new-target/-/plugin-transform-new-target-7.4.0.tgz",\n      "integrity": "sha512-6ZKNgMQmQmrEX/ncuCwnnw1yVGoaOW5KpxNhoWI7pCQdA0uZ0HqHGqenCUIENAnxRjy2WwNQ30gfGdIgqJXXqw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-object-super": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-object-super/-/plugin-transform-object-super-7.2.0.tgz",\n      "integrity": "sha512-VMyhPYZISFZAqAPVkiYb7dUe2AsVi2/wCT5+wZdsNO31FojQJa9ns40hzZ6U9f50Jlq4w6qwzdBB2uwqZ00ebg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-replace-supers": "7.1.0"\n      }\n    },\n    "@babel/plugin-transform-parameters": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-parameters/-/plugin-transform-parameters-7.4.3.tgz",\n      "integrity": "sha512-ULJYC2Vnw96/zdotCZkMGr2QVfKpIT/4/K+xWWY0MbOJyMZuk660BGkr3bEKWQrrciwz6xpmft39nA4BF7hJuA==",\n      "requires": {\n        "@babel/helper-call-delegate": "7.4.0",\n        "@babel/helper-get-function-arity": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-property-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-property-literals/-/plugin-transform-property-literals-7.2.0.tgz",\n      "integrity": "sha512-9q7Dbk4RhgcLp8ebduOpCbtjh7C0itoLYHXd9ueASKAG/is5PQtMR5VJGka9NKqGhYEGn5ITahd4h9QeBMylWQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-react-constant-elements": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-constant-elements/-/plugin-transform-react-constant-elements-7.2.0.tgz",\n      "integrity": "sha512-YYQFg6giRFMsZPKUM9v+VcHOdfSQdz9jHCx3akAi3UYgyjndmdYGSXylQ/V+HswQt4fL8IklchD9HTsaOCrWQQ==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-react-display-name": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-display-name/-/plugin-transform-react-display-name-7.2.0.tgz",\n      "integrity": "sha512-Htf/tPa5haZvRMiNSQSFifK12gtr/8vwfr+A9y69uF0QcU77AVu4K7MiHEkTxF7lQoHOL0F9ErqgfNEAKgXj7A==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-react-jsx": {\n      "version": "7.3.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.3.0.tgz",\n      "integrity": "sha512-a/+aRb7R06WcKvQLOu4/TpjKOdvVEKRLWFpKcNuHhiREPgGRB4TQJxq07+EZLS8LFVYpfq1a5lDUnuMdcCpBKg==",\n      "requires": {\n        "@babel/helper-builder-react-jsx": "7.3.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-jsx": "7.2.0"\n      }\n    },\n    "@babel/plugin-transform-react-jsx-self": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.2.0.tgz",\n      "integrity": "sha512-v6S5L/myicZEy+jr6ielB0OR8h+EH/1QFx/YJ7c7Ua+7lqsjj/vW6fD5FR9hB/6y7mGbfT4vAURn3xqBxsUcdg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-jsx": "7.2.0"\n      }\n    },\n    "@babel/plugin-transform-react-jsx-source": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.2.0.tgz",\n      "integrity": "sha512-A32OkKTp4i5U6aE88GwwcuV4HAprUgHcTq0sSafLxjr6AW0QahrCRCjxogkbbcdtpbXkuTOlgpjophCxb6sh5g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-jsx": "7.2.0"\n      }\n    },\n    "@babel/plugin-transform-regenerator": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-regenerator/-/plugin-transform-regenerator-7.4.3.tgz",\n      "integrity": "sha512-kEzotPuOpv6/iSlHroCDydPkKYw7tiJGKlmYp6iJn4a6C/+b2FdttlJsLKYxolYHgotTJ5G5UY5h0qey5ka3+A==",\n      "requires": {\n        "regenerator-transform": "0.13.4"\n      }\n    },\n    "@babel/plugin-transform-reserved-words": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-reserved-words/-/plugin-transform-reserved-words-7.2.0.tgz",\n      "integrity": "sha512-fz43fqW8E1tAB3DKF19/vxbpib1fuyCwSPE418ge5ZxILnBhWyhtPgz8eh1RCGGJlwvksHkyxMxh0eenFi+kFw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-runtime": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-runtime/-/plugin-transform-runtime-7.4.3.tgz",\n      "integrity": "sha512-7Q61bU+uEI7bCUFReT1NKn7/X6sDQsZ7wL1sJ9IYMAO7cI+eg6x9re1cEw2fCRMbbTVyoeUKWSV1M6azEfKCfg==",\n      "requires": {\n        "@babel/helper-module-imports": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "resolve": "1.8.1",\n        "semver": "5.5.1"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "@babel/plugin-transform-shorthand-properties": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-shorthand-properties/-/plugin-transform-shorthand-properties-7.2.0.tgz",\n      "integrity": "sha512-QP4eUM83ha9zmYtpbnyjTLAGKQritA5XW/iG9cjtuOI8s1RuL/3V6a3DeSHfKutJQ+ayUfeZJPcnCYEQzaPQqg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-spread": {\n      "version": "7.2.2",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-spread/-/plugin-transform-spread-7.2.2.tgz",\n      "integrity": "sha512-KWfky/58vubwtS0hLqEnrWJjsMGaOeSBn90Ezn5Jeg9Z8KKHmELbP1yGylMlm5N6TPKeY9A2+UaSYLdxahg01w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-sticky-regex": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-sticky-regex/-/plugin-transform-sticky-regex-7.2.0.tgz",\n      "integrity": "sha512-KKYCoGaRAf+ckH8gEL3JHUaFVyNHKe3ASNsZ+AlktgHevvxGigoIttrEJb8iKN03Q7Eazlv1s6cx2B2cQ3Jabw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-regex": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-template-literals": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-template-literals/-/plugin-transform-template-literals-7.2.0.tgz",\n      "integrity": "sha512-FkPix00J9A/XWXv4VoKJBMeSkyY9x/TqIh76wzcdfl57RJJcf8CehQ08uwfhCDNtRQYtHQKBTwKZDEyjE13Lwg==",\n      "requires": {\n        "@babel/helper-annotate-as-pure": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-typeof-symbol": {\n      "version": "7.2.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typeof-symbol/-/plugin-transform-typeof-symbol-7.2.0.tgz",\n      "integrity": "sha512-2LNhETWYxiYysBtrBTqL8+La0jIoQQnIScUJc74OYvUGRmkskNY4EzLCnjHBzdmb38wqtTaixpo1NctEcvMDZw==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0"\n      }\n    },\n    "@babel/plugin-transform-typescript": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-typescript/-/plugin-transform-typescript-7.4.0.tgz",\n      "integrity": "sha512-U7/+zKnRZg04ggM/Bm+xmu2B/PrwyDQTT/V89FXWYWNMxBDwSx56u6jtk9SEbfLFbZaEI72L+5LPvQjeZgFCrQ==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-syntax-typescript": "7.2.0"\n      }\n    },\n    "@babel/plugin-transform-unicode-regex": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-unicode-regex/-/plugin-transform-unicode-regex-7.4.3.tgz",\n      "integrity": "sha512-lnSNgkVjL8EMtnE8eSS7t2ku8qvKH3eqNf/IwIfnSPUqzgqYmRwzdsQWv4mNQAN9Nuo6Gz1Y0a4CSmdpu1Pp6g==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/helper-regex": "7.4.3",\n        "regexpu-core": "4.5.4"\n      }\n    },\n    "@babel/preset-env": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/preset-env/-/preset-env-7.4.3.tgz",\n      "integrity": "sha512-FYbZdV12yHdJU5Z70cEg0f6lvtpZ8jFSDakTm7WXeJbLXh4R0ztGEu/SW7G1nJ2ZvKwDhz8YrbA84eYyprmGqw==",\n      "requires": {\n        "@babel/helper-module-imports": "7.0.0",\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-proposal-async-generator-functions": "7.2.0",\n        "@babel/plugin-proposal-json-strings": "7.2.0",\n        "@babel/plugin-proposal-object-rest-spread": "7.4.3",\n        "@babel/plugin-proposal-optional-catch-binding": "7.2.0",\n        "@babel/plugin-proposal-unicode-property-regex": "7.4.0",\n        "@babel/plugin-syntax-async-generators": "7.2.0",\n        "@babel/plugin-syntax-json-strings": "7.2.0",\n        "@babel/plugin-syntax-object-rest-spread": "7.2.0",\n        "@babel/plugin-syntax-optional-catch-binding": "7.2.0",\n        "@babel/plugin-transform-arrow-functions": "7.2.0",\n        "@babel/plugin-transform-async-to-generator": "7.4.0",\n        "@babel/plugin-transform-block-scoped-functions": "7.2.0",\n        "@babel/plugin-transform-block-scoping": "7.4.0",\n        "@babel/plugin-transform-classes": "7.4.3",\n        "@babel/plugin-transform-computed-properties": "7.2.0",\n        "@babel/plugin-transform-destructuring": "7.4.3",\n        "@babel/plugin-transform-dotall-regex": "7.4.3",\n        "@babel/plugin-transform-duplicate-keys": "7.2.0",\n        "@babel/plugin-transform-exponentiation-operator": "7.2.0",\n        "@babel/plugin-transform-for-of": "7.4.3",\n        "@babel/plugin-transform-function-name": "7.4.3",\n        "@babel/plugin-transform-literals": "7.2.0",\n        "@babel/plugin-transform-member-expression-literals": "7.2.0",\n        "@babel/plugin-transform-modules-amd": "7.2.0",\n        "@babel/plugin-transform-modules-commonjs": "7.4.3",\n        "@babel/plugin-transform-modules-systemjs": "7.4.0",\n        "@babel/plugin-transform-modules-umd": "7.2.0",\n        "@babel/plugin-transform-named-capturing-groups-regex": "7.4.2",\n        "@babel/plugin-transform-new-target": "7.4.0",\n        "@babel/plugin-transform-object-super": "7.2.0",\n        "@babel/plugin-transform-parameters": "7.4.3",\n        "@babel/plugin-transform-property-literals": "7.2.0",\n        "@babel/plugin-transform-regenerator": "7.4.3",\n        "@babel/plugin-transform-reserved-words": "7.2.0",\n        "@babel/plugin-transform-shorthand-properties": "7.2.0",\n        "@babel/plugin-transform-spread": "7.2.0",\n        "@babel/plugin-transform-sticky-regex": "7.2.0",\n        "@babel/plugin-transform-template-literals": "7.2.0",\n        "@babel/plugin-transform-typeof-symbol": "7.2.0",\n        "@babel/plugin-transform-unicode-regex": "7.4.3",\n        "@babel/types": "7.4.0",\n        "browserslist": "4.5.2",\n        "core-js-compat": "3.0.0",\n        "invariant": "2.2.2",\n        "js-levenshtein": "1.1.3",\n        "semver": "5.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "@babel/preset-react": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/@babel/preset-react/-/preset-react-7.0.0.tgz",\n      "integrity": "sha512-oayxyPS4Zj+hF6Et11BwuBkmpgT/zMxyuZgFrMeZID6Hdh3dGlk4sHCAhdBCpuCKW2ppBfl2uCCetlrUIJRY3w==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-transform-react-display-name": "7.0.0",\n        "@babel/plugin-transform-react-jsx": "7.0.0",\n        "@babel/plugin-transform-react-jsx-self": "7.0.0",\n        "@babel/plugin-transform-react-jsx-source": "7.0.0"\n      }\n    },\n    "@babel/preset-typescript": {\n      "version": "7.3.3",\n      "resolved": "https://registry.npmjs.org/@babel/preset-typescript/-/preset-typescript-7.3.3.tgz",\n      "integrity": "sha512-mzMVuIP4lqtn4du2ynEfdO0+RYcslwrZiJHXu4MGaC1ctJiW2fyaeDrtjJGs7R/KebZ1sgowcIoWf4uRpEfKEg==",\n      "requires": {\n        "@babel/helper-plugin-utils": "7.0.0",\n        "@babel/plugin-transform-typescript": "7.3.2"\n      }\n    },\n    "@babel/runtime": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.4.3.tgz",\n      "integrity": "sha512-9lsJwJLxDh/T3Q3SZszfWOTkk3pHbkmH+3KY+zwIDmsNlxsumuhS2TH3NIpktU4kNvfzy+k3eLT7aTJSPTo0OA==",\n      "requires": {\n        "regenerator-runtime": "0.13.2"\n      }\n    },\n    "@babel/template": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.4.0.tgz",\n      "integrity": "sha512-SOWwxxClTTh5NdbbYZ0BmaBVzxzTh2tO/TeLTbF6MO6EzVhHTnff8CdBXx3mEtazFBoysmEM6GU/wF+SuSx4Fw==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "@babel/parser": "7.4.0",\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@babel/traverse": {\n      "version": "7.4.3",\n      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.4.3.tgz",\n      "integrity": "sha512-HmA01qrtaCwwJWpSKpA948cBvU5BrmviAief/b3AVw936DtcdsTexlbyzNuDnthwhOQ37xshn7hvQaEQk7ISYQ==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "@babel/generator": "7.4.0",\n        "@babel/helper-function-name": "7.1.0",\n        "@babel/helper-split-export-declaration": "7.4.0",\n        "@babel/parser": "7.4.3",\n        "@babel/types": "7.4.0",\n        "debug": "4.1.0",\n        "globals": "11.1.0",\n        "lodash": "4.17.11"\n      }\n    },\n    "@babel/types": {\n      "version": "7.4.0",\n      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.4.0.tgz",\n      "integrity": "sha512-aPvkXyU2SPOnztlgo8n9cEiXW755mgyvueUPcpStqdzoSPm0fjO0vQBjLkt3JKJW7ufikfcnMTTPsN1xaTsBPA==",\n      "requires": {\n        "esutils": "2.0.2",\n        "lodash": "4.17.11",\n        "to-fast-properties": "2.0.0"\n      }\n    },\n    "@cnakazawa/watch": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/@cnakazawa/watch/-/watch-1.0.3.tgz",\n      "integrity": "sha512-r5160ogAvGyHsal38Kux7YYtodEKOj89RGb28ht1jh3SJb08VwRwAKKJL0bGb04Zd/3r9FL3BFIc3bBidYffCA==",\n      "requires": {\n        "exec-sh": "0.3.2",\n        "minimist": "1.2.0"\n      }\n    },\n    "@csstools/convert-colors": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/@csstools/convert-colors/-/convert-colors-1.4.0.tgz",\n      "integrity": "sha512-5a6wqoJV/xEdbRNKVo6I4hO3VjyDq//8q2f9I6PBAvMesJHFauXDorcNCsr9RzvsZnaWi5NYCcfyqP1QeFHFbw=="\n    },\n    "@csstools/normalize.css": {\n      "version": "9.0.1",\n      "resolved": "https://registry.npmjs.org/@csstools/normalize.css/-/normalize.css-9.0.1.tgz",\n      "integrity": "sha512-6It2EVfGskxZCQhuykrfnALg7oVeiI6KclWSmGDqB0AiInVrTGB9Jp9i4/Ad21u9Jde/voVQz6eFX/eSg/UsPA=="\n    },\n    "@emotion/babel-utils": {\n      "version": "0.6.10",\n      "resolved": "https://registry.npmjs.org/@emotion/babel-utils/-/babel-utils-0.6.10.tgz",\n      "integrity": "sha512-/fnkM/LTEp3jKe++T0KyTszVGWNKPNOUJfjNKLO17BzQ6QPxgbg3whayom1Qr2oLFH3V92tDymU+dT5q676uow==",\n      "requires": {\n        "@emotion/hash": "0.6.6",\n        "@emotion/memoize": "0.6.6",\n        "@emotion/serialize": "0.9.1",\n        "convert-source-map": "1.5.1",\n        "find-root": "1.1.0",\n        "source-map": "0.7.2"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.7.3",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.7.3.tgz",\n          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31mEGsxBDrHR6oI69fTXsaQ=="\n        }\n      }\n    },\n    "@emotion/hash": {\n      "version": "0.6.6",\n      "resolved": "https://registry.npmjs.org/@emotion/hash/-/hash-0.6.6.tgz",\n      "integrity": "sha512-ojhgxzUHZ7am3D2jHkMzPpsBAiB005GF5YU4ea+8DNPybMk01JJUM9V9YRlF/GE95tcOm8DxQvWA2jq19bGalQ=="\n    },\n    "@emotion/memoize": {\n      "version": "0.6.6",\n      "resolved": "https://registry.npmjs.org/@emotion/memoize/-/memoize-0.6.6.tgz",\n      "integrity": "sha512-h4t4jFjtm1YV7UirAFuSuFGyLa+NNxjdkq6DpFLANNQY5rHueFZHVY+8Cu1HYVP6DrheB0kv4m5xPjo7eKT7yQ=="\n    },\n    "@emotion/serialize": {\n      "version": "0.9.1",\n      "resolved": "https://registry.npmjs.org/@emotion/serialize/-/serialize-0.9.1.tgz",\n      "integrity": "sha512-zTuAFtyPvCctHBEL8KZ5lJuwBanGSutFEncqLn/m9T1a6a93smBStK+bZzcNPgj4QS8Rkw9VTwJGhRIUVO8zsQ==",\n      "requires": {\n        "@emotion/hash": "0.6.6",\n        "@emotion/memoize": "0.6.6",\n        "@emotion/unitless": "0.6.7",\n        "@emotion/utils": "0.8.2"\n      }\n    },\n    "@emotion/stylis": {\n      "version": "0.7.1",\n      "resolved": "https://registry.npmjs.org/@emotion/stylis/-/stylis-0.7.1.tgz",\n      "integrity": "sha512-/SLmSIkN13M//53TtNxgxo57mcJk/UJIDFRKwOiLIBEyBHEcipgR6hNMQ/59Sl4VjCJ0Z/3zeAZyvnSLPG/1HQ=="\n    },\n    "@emotion/unitless": {\n      "version": "0.6.7",\n      "resolved": "https://registry.npmjs.org/@emotion/unitless/-/unitless-0.6.7.tgz",\n      "integrity": "sha512-Arj1hncvEVqQ2p7Ega08uHLr1JuRYBuO5cIvcA+WWEQ5+VmkOE3ZXzl04NbQxeQpWX78G7u6MqxKuNX3wvYZxg=="\n    },\n    "@emotion/utils": {\n      "version": "0.8.2",\n      "resolved": "https://registry.npmjs.org/@emotion/utils/-/utils-0.8.2.tgz",\n      "integrity": "sha512-rLu3wcBWH4P5q1CGoSSH/i9hrXs7SlbRLkoq9IGuoPYNGQvDJ3pt/wmOM+XgYjIDRMVIdkUWt0RsfzF50JfnCw=="\n    },\n    "@jest/console": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/console/-/console-24.7.1.tgz",\n      "integrity": "sha512-iNhtIy2M8bXlAOULWVTUxmnelTLFneTNEkHCgPmgd+zNwy9zVddJ6oS5rZ9iwoscNdT5mMwUd0C51v/fSlzItg==",\n      "requires": {\n        "@jest/source-map": "24.3.0",\n        "chalk": "2.0.1",\n        "slash": "2.0.0"\n      }\n    },\n    "@jest/core": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/core/-/core-24.7.1.tgz",\n      "integrity": "sha512-ivlZ8HX/FOASfHcb5DJpSPFps8ydfUYzLZfgFFqjkLijYysnIEOieg72YRhO4ZUB32xu40hsSMmaw+IGYeKONA==",\n      "requires": {\n        "@jest/console": "24.7.1",\n        "@jest/reporters": "24.7.1",\n        "@jest/test-result": "24.7.1",\n        "@jest/transform": "24.7.1",\n        "@jest/types": "24.7.0",\n        "ansi-escapes": "3.0.0",\n        "chalk": "2.0.1",\n        "exit": "0.1.2",\n        "graceful-fs": "4.1.15",\n        "jest-changed-files": "24.7.0",\n        "jest-config": "24.7.1",\n        "jest-haste-map": "24.7.1",\n        "jest-message-util": "24.7.1",\n        "jest-regex-util": "24.3.0",\n        "jest-resolve-dependencies": "24.7.1",\n        "jest-runner": "24.7.1",\n        "jest-runtime": "24.7.1",\n        "jest-snapshot": "24.7.1",\n        "jest-util": "24.7.1",\n        "jest-validate": "24.7.0",\n        "jest-watcher": "24.7.1",\n        "micromatch": "3.1.10",\n        "p-each-series": "1.0.0",\n        "pirates": "4.0.1",\n        "realpath-native": "1.1.0",\n        "rimraf": "2.5.4",\n        "strip-ansi": "5.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "4.1.0"\n          }\n        }\n      }\n    },\n    "@jest/environment": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/environment/-/environment-24.7.1.tgz",\n      "integrity": "sha512-wmcTTYc4/KqA+U5h1zQd5FXXynfa7VGP2NfF+c6QeGJ7c+2nStgh65RQWNX62SC716dTtqheTRrZl0j+54oGHw==",\n      "requires": {\n        "@jest/fake-timers": "24.7.1",\n        "@jest/transform": "24.7.1",\n        "@jest/types": "24.7.0",\n        "jest-mock": "24.7.0"\n      }\n    },\n    "@jest/fake-timers": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-24.7.1.tgz",\n      "integrity": "sha512-4vSQJDKfR2jScOe12L9282uiwuwQv9Lk7mgrCSZHA9evB9efB/qx8i0KJxsAKtp8fgJYBJdYY7ZU6u3F4/pyjA==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "jest-message-util": "24.7.1",\n        "jest-mock": "24.7.0"\n      }\n    },\n    "@jest/reporters": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/reporters/-/reporters-24.7.1.tgz",\n      "integrity": "sha512-bO+WYNwHLNhrjB9EbPL4kX/mCCG4ZhhfWmO3m4FSpbgr7N83MFejayz30kKjgqr7smLyeaRFCBQMbXpUgnhAJw==",\n      "requires": {\n        "@jest/environment": "24.7.1",\n        "@jest/test-result": "24.7.1",\n        "@jest/transform": "24.7.1",\n        "@jest/types": "24.7.0",\n        "chalk": "2.0.1",\n        "exit": "0.1.2",\n        "glob": "7.1.2",\n        "istanbul-api": "2.1.1",\n        "istanbul-lib-coverage": "2.0.2",\n        "istanbul-lib-instrument": "3.0.1",\n        "istanbul-lib-source-maps": "3.0.1",\n        "jest-haste-map": "24.7.1",\n        "jest-resolve": "24.7.1",\n        "jest-runtime": "24.7.1",\n        "jest-util": "24.7.1",\n        "jest-worker": "24.6.0",\n        "node-notifier": "5.2.1",\n        "slash": "2.0.0",\n        "source-map": "0.6.0",\n        "string-length": "2.0.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "@jest/source-map": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/@jest/source-map/-/source-map-24.3.0.tgz",\n      "integrity": "sha512-zALZt1t2ou8le/crCeeiRYzvdnTzaIlpOWaet45lNSqNJUnXbppUUFR4ZUAlzgDmKee4Q5P/tKXypI1RiHwgag==",\n      "requires": {\n        "callsites": "3.0.0",\n        "graceful-fs": "4.1.15",\n        "source-map": "0.6.0"\n      },\n      "dependencies": {\n        "callsites": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",\n          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "@jest/test-result": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/test-result/-/test-result-24.7.1.tgz",\n      "integrity": "sha512-3U7wITxstdEc2HMfBX7Yx3JZgiNBubwDqQMh+BXmZXHa3G13YWF3p6cK+5g0hGkN3iufg/vGPl3hLxQXD74Npg==",\n      "requires": {\n        "@jest/console": "24.7.1",\n        "@jest/types": "24.7.0",\n        "@types/istanbul-lib-coverage": "2.0.0"\n      }\n    },\n    "@jest/test-sequencer": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-24.7.1.tgz",\n      "integrity": "sha512-84HQkCpVZI/G1zq53gHJvSmhUer4aMYp9tTaffW28Ih5OxfCg8hGr3nTSbL1OhVDRrFZwvF+/R9gY6JRkDUpUA==",\n      "requires": {\n        "@jest/test-result": "24.7.1",\n        "jest-haste-map": "24.7.1",\n        "jest-runner": "24.7.1",\n        "jest-runtime": "24.7.1"\n      }\n    },\n    "@jest/transform": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/@jest/transform/-/transform-24.7.1.tgz",\n      "integrity": "sha512-EsOUqP9ULuJ66IkZQhI5LufCHlTbi7hrcllRMUEV/tOgqBVQi93+9qEvkX0n8mYpVXQ8VjwmICeRgg58mrtIEw==",\n      "requires": {\n        "@babel/core": "7.1.0",\n        "@jest/types": "24.7.0",\n        "babel-plugin-istanbul": "5.1.0",\n        "chalk": "2.0.1",\n        "convert-source-map": "1.4.0",\n        "fast-json-stable-stringify": "2.0.0",\n        "graceful-fs": "4.1.15",\n        "jest-haste-map": "24.7.1",\n        "jest-regex-util": "24.3.0",\n        "jest-util": "24.7.1",\n        "micromatch": "3.1.10",\n        "realpath-native": "1.1.0",\n        "slash": "2.0.0",\n        "source-map": "0.6.1",\n        "write-file-atomic": "2.4.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "@jest/types": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/@jest/types/-/types-24.7.0.tgz",\n      "integrity": "sha512-ipJUa2rFWiKoBqMKP63Myb6h9+iT3FHRTF2M8OR6irxWzItisa8i4dcSg14IbvmXUnBlHBlUQPYUHWyX3UPpYA==",\n      "requires": {\n        "@types/istanbul-lib-coverage": "2.0.0",\n        "@types/yargs": "12.0.9"\n      }\n    },\n    "@material-ui/core": {\n      "version": "3.9.3",\n      "resolved": "https://registry.npmjs.org/@material-ui/core/-/core-3.9.3.tgz",\n      "integrity": "sha512-REIj62+zEvTgI/C//YL4fZxrCVIySygmpZglsu/Nl5jPqy3CDjZv1F9ubBYorHqmRgeVPh64EghMMWqk4egmfg==",\n      "requires": {\n        "@babel/runtime": "7.2.0",\n        "@material-ui/system": "3.0.0-alpha.0",\n        "@material-ui/utils": "3.0.0-alpha.2",\n        "@types/jss": "9.5.6",\n        "@types/react-transition-group": "2.0.8",\n        "brcast": "3.0.1",\n        "classnames": "2.2.5",\n        "csstype": "2.5.2",\n        "debounce": "1.1.0",\n        "deepmerge": "3.0.0",\n        "dom-helpers": "3.2.1",\n        "hoist-non-react-statics": "3.2.1",\n        "is-plain-object": "2.0.4",\n        "jss": "9.8.7",\n        "jss-camel-case": "6.0.0",\n        "jss-default-unit": "8.0.2",\n        "jss-global": "3.0.0",\n        "jss-nested": "6.0.1",\n        "jss-props-sort": "6.0.0",\n        "jss-vendor-prefixer": "7.0.0",\n        "normalize-scroll-left": "0.1.2",\n        "popper.js": "1.14.1",\n        "prop-types": "15.6.0",\n        "react-event-listener": "0.6.2",\n        "react-transition-group": "2.2.1",\n        "recompose": "0.28.0 - 0.30.0",\n        "warning": "4.0.1"\n      }\n    },\n    "@material-ui/icons": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/@material-ui/icons/-/icons-3.0.2.tgz",\n      "integrity": "sha512-QY/3gJnObZQ3O/e6WjH+0ah2M3MOgLOzCy8HTUoUx9B6dDrS18vP7Ycw3qrDEKlB6q1KNxy6CZHm5FCauWGy2g==",\n      "requires": {\n        "@babel/runtime": "7.2.0",\n        "recompose": "0.28.0 - 0.30.0"\n      }\n    },\n    "@material-ui/system": {\n      "version": "3.0.0-alpha.2",\n      "resolved": "https://registry.npmjs.org/@material-ui/system/-/system-3.0.0-alpha.2.tgz",\n      "integrity": "sha512-odmxQ0peKpP7RQBQ8koly06YhsPzcoVib1vByVPBH4QhwqBXuYoqlCjt02846fYspAqkrWzjxnWUD311EBbxOA==",\n      "requires": {\n        "@babel/runtime": "7.2.0",\n        "deepmerge": "3.0.0",\n        "prop-types": "15.6.0",\n        "warning": "4.0.1"\n      }\n    },\n    "@material-ui/utils": {\n      "version": "3.0.0-alpha.3",\n      "resolved": "https://registry.npmjs.org/@material-ui/utils/-/utils-3.0.0-alpha.3.tgz",\n      "integrity": "sha512-rwMdMZptX0DivkqBuC+Jdq7BYTXwqKai5G5ejPpuEDKpWzi1Oxp+LygGw329FrKpuKeiqpcymlqJTjmy+quWng==",\n      "requires": {\n        "@babel/runtime": "7.2.0",\n        "prop-types": "15.6.0",\n        "react-is": "16.6.3"\n      }\n    },\n    "@mrmlnc/readdir-enhanced": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz",\n      "integrity": "sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==",\n      "requires": {\n        "call-me-maybe": "1.0.1",\n        "glob-to-regexp": "0.3.0"\n      }\n    },\n    "@nodelib/fs.stat": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",\n      "integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="\n    },\n    "@semantic-ui-react/event-stack": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/@semantic-ui-react/event-stack/-/event-stack-3.1.0.tgz",\n      "integrity": "sha512-WHtU9wutZByZtFZxzj4BVEk+rvWldZpZhRcyv6d84+XLSolm83zLHYJLTACGuSl6Xa/xpgVXquvm9GyMudkJYg==",\n      "dev": true,\n      "requires": {\n        "exenv": "1.2.2",\n        "prop-types": "15.6.2"\n      }\n    },\n    "@svgr/babel-plugin-add-jsx-attribute": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-add-jsx-attribute/-/babel-plugin-add-jsx-attribute-4.2.0.tgz",\n      "integrity": "sha512-j7KnilGyZzYr/jhcrSYS3FGWMZVaqyCG0vzMCwzvei0coIkczuYMcniK07nI0aHJINciujjH11T72ICW5eL5Ig=="\n    },\n    "@svgr/babel-plugin-remove-jsx-attribute": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-remove-jsx-attribute/-/babel-plugin-remove-jsx-attribute-4.2.0.tgz",\n      "integrity": "sha512-3XHLtJ+HbRCH4n28S7y/yZoEQnRpl0tvTZQsHqvaeNXPra+6vE5tbRliH3ox1yZYPCxrlqaJT/Mg+75GpDKlvQ=="\n    },\n    "@svgr/babel-plugin-remove-jsx-empty-expression": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-remove-jsx-empty-expression/-/babel-plugin-remove-jsx-empty-expression-4.2.0.tgz",\n      "integrity": "sha512-yTr2iLdf6oEuUE9MsRdvt0NmdpMBAkgK8Bjhl6epb+eQWk6abBaX3d65UZ3E3FWaOwePyUgNyNCMVG61gGCQ7w=="\n    },\n    "@svgr/babel-plugin-replace-jsx-attribute-value": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-replace-jsx-attribute-value/-/babel-plugin-replace-jsx-attribute-value-4.2.0.tgz",\n      "integrity": "sha512-U9m870Kqm0ko8beHawRXLGLvSi/ZMrl89gJ5BNcT452fAjtF2p4uRzXkdzvGJJJYBgx7BmqlDjBN/eCp5AAX2w=="\n    },\n    "@svgr/babel-plugin-svg-dynamic-title": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-svg-dynamic-title/-/babel-plugin-svg-dynamic-title-4.2.0.tgz",\n      "integrity": "sha512-gH2qItapwCUp6CCqbxvzBbc4dh4OyxdYKsW3EOkYexr0XUmQL0ScbdNh6DexkZ01T+sdClniIbnCObsXcnx3sQ=="\n    },\n    "@svgr/babel-plugin-svg-em-dimensions": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-svg-em-dimensions/-/babel-plugin-svg-em-dimensions-4.2.0.tgz",\n      "integrity": "sha512-C0Uy+BHolCHGOZ8Dnr1zXy/KgpBOkEUYY9kI/HseHVPeMbluaX3CijJr7D4C5uR8zrc1T64nnq/k63ydQuGt4w=="\n    },\n    "@svgr/babel-plugin-transform-react-native-svg": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-transform-react-native-svg/-/babel-plugin-transform-react-native-svg-4.2.0.tgz",\n      "integrity": "sha512-7YvynOpZDpCOUoIVlaaOUU87J4Z6RdD6spYN4eUb5tfPoKGSF9OG2NuhgYnq4jSkAxcpMaXWPf1cePkzmqTPNw=="\n    },\n    "@svgr/babel-plugin-transform-svg-component": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-plugin-transform-svg-component/-/babel-plugin-transform-svg-component-4.2.0.tgz",\n      "integrity": "sha512-hYfYuZhQPCBVotABsXKSCfel2slf/yvJY8heTVX1PCTaq/IgASq1IyxPPKJ0chWREEKewIU/JMSsIGBtK1KKxw=="\n    },\n    "@svgr/babel-preset": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/babel-preset/-/babel-preset-4.2.0.tgz",\n      "integrity": "sha512-iLetHpRCQXfK47voAs5/uxd736cCyocEdorisjAveZo8ShxJ/ivSZgstBmucI1c8HyMF5tOrilJLoFbhpkPiKw==",\n      "requires": {\n        "@svgr/babel-plugin-add-jsx-attribute": "4.2.0",\n        "@svgr/babel-plugin-remove-jsx-attribute": "4.2.0",\n        "@svgr/babel-plugin-remove-jsx-empty-expression": "4.2.0",\n        "@svgr/babel-plugin-replace-jsx-attribute-value": "4.2.0",\n        "@svgr/babel-plugin-svg-dynamic-title": "4.2.0",\n        "@svgr/babel-plugin-svg-em-dimensions": "4.2.0",\n        "@svgr/babel-plugin-transform-react-native-svg": "4.2.0",\n        "@svgr/babel-plugin-transform-svg-component": "4.2.0"\n      }\n    },\n    "@svgr/core": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/core/-/core-4.2.0.tgz",\n      "integrity": "sha512-nvzXaf2VavqjMCTTfsZfjL4o9035KedALkMzk82qOlHOwBb8JT+9+zYDgBl0oOunbVF94WTLnvGunEg0csNP3Q==",\n      "requires": {\n        "@svgr/plugin-jsx": "4.2.0",\n        "camelcase": "5.3.1",\n        "cosmiconfig": "5.2.0"\n      }\n    },\n    "@svgr/hast-util-to-babel-ast": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/hast-util-to-babel-ast/-/hast-util-to-babel-ast-4.2.0.tgz",\n      "integrity": "sha512-IvAeb7gqrGB5TH9EGyBsPrMRH/QCzIuAkLySKvH2TLfLb2uqk98qtJamordRQTpHH3e6TORfBXoTo7L7Opo/Ow==",\n      "requires": {\n        "@babel/types": "7.4.0"\n      }\n    },\n    "@svgr/plugin-jsx": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/plugin-jsx/-/plugin-jsx-4.2.0.tgz",\n      "integrity": "sha512-AM1YokmZITgveY9bulLVquqNmwiFo2Px2HL+IlnTCR01YvWDfRL5QKdnF7VjRaS5MNP938mmqvL0/8oz3zQMkg==",\n      "requires": {\n        "@babel/core": "7.4.3",\n        "@svgr/babel-preset": "4.2.0",\n        "@svgr/hast-util-to-babel-ast": "4.2.0",\n        "rehype-parse": "6.0.0",\n        "unified": "7.1.0",\n        "vfile": "4.0.0"\n      }\n    },\n    "@svgr/plugin-svgo": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/@svgr/plugin-svgo/-/plugin-svgo-4.2.0.tgz",\n      "integrity": "sha512-zUEKgkT172YzHh3mb2B2q92xCnOAMVjRx+o0waZ1U50XqKLrVQ/8dDqTAtnmapdLsGurv8PSwenjLCUpj6hcvw==",\n      "requires": {\n        "cosmiconfig": "5.2.0",\n        "merge-deep": "3.0.2",\n        "svgo": "1.2.1"\n      }\n    },\n    "@svgr/webpack": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/@svgr/webpack/-/webpack-4.1.0.tgz",\n      "integrity": "sha512-d09ehQWqLMywP/PT/5JvXwPskPK9QCXUjiSkAHehreB381qExXf5JFCBWhfEyNonRbkIneCeYM99w+Ud48YIQQ==",\n      "requires": {\n        "@babel/core": "7.1.6",\n        "@babel/plugin-transform-react-constant-elements": "7.0.0",\n        "@babel/preset-env": "7.1.6",\n        "@babel/preset-react": "7.0.0",\n        "@svgr/core": "4.1.0",\n        "@svgr/plugin-jsx": "4.1.0",\n        "@svgr/plugin-svgo": "4.0.3",\n        "loader-utils": "1.1.0"\n      }\n    },\n    "@types/babel__core": {\n      "version": "7.1.1",\n      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.1.1.tgz",\n      "integrity": "sha512-+hjBtgcFPYyCTo0A15+nxrCVJL7aC6Acg87TXd5OW3QhHswdrOLoles+ldL2Uk8q++7yIfl4tURtztccdeeyOw==",\n      "requires": {\n        "@babel/parser": "7.1.0",\n        "@babel/types": "7.0.0",\n        "@types/babel__generator": "*",\n        "@types/babel__template": "*",\n        "@types/babel__traverse": "*"\n      }\n    },\n    "@types/babel__generator": {\n      "version": "7.0.2",\n      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.0.2.tgz",\n      "integrity": "sha512-NHcOfab3Zw4q5sEE2COkpfXjoE7o+PmqD9DQW4koUT3roNxwziUdXGnRndMat/LJNUtePwn1TlP4do3uoe3KZQ==",\n      "requires": {\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@types/babel__template": {\n      "version": "7.0.2",\n      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.0.2.tgz",\n      "integrity": "sha512-/K6zCpeW7Imzgab2bLkLEbz0+1JlFSrUMdw7KoIIu+IUdu51GWaBZpd3y1VXGVXzynvGa4DaIaxNZHiON3GXUg==",\n      "requires": {\n        "@babel/parser": "7.1.0",\n        "@babel/types": "7.0.0"\n      }\n    },\n    "@types/babel__traverse": {\n      "version": "7.0.6",\n      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.0.6.tgz",\n      "integrity": "sha512-XYVgHF2sQ0YblLRMLNPB3CkFMewzFmlDsH/TneZFHUXDlABQgh88uOxuez7ZcXxayLFrqLwtDH1t+FmlFwNZxw==",\n      "requires": {\n        "@babel/types": "7.3.0"\n      }\n    },\n    "@types/istanbul-lib-coverage": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.0.tgz",\n      "integrity": "sha512-eAtOAFZefEnfJiRFQBGw1eYqa5GTLCZ1y86N0XSI/D6EB+E8z6VPV/UL7Gi5UEclFqoQk+6NRqEDsfmDLXn8sg=="\n    },\n    "@types/jss": {\n      "version": "9.5.8",\n      "resolved": "https://registry.npmjs.org/@types/jss/-/jss-9.5.8.tgz",\n      "integrity": "sha512-bBbHvjhm42UKki+wZpR89j73ykSXg99/bhuKuYYePtpma3ZAnmeGnl0WxXiZhPGsIfzKwCUkpPC0jlrVMBfRxA==",\n      "requires": {\n        "csstype": "2.0.0",\n        "indefinite-observable": "1.0.1"\n      }\n    },\n    "@types/node": {\n      "version": "11.13.7",\n      "resolved": "https://registry.npmjs.org/@types/node/-/node-11.13.7.tgz",\n      "integrity": "sha512-suFHr6hcA9mp8vFrZTgrmqW2ZU3mbWsryQtQlY/QvwTISCw7nw/j+bCQPPohqmskhmqa5wLNuMHTTsc+xf1MQg=="\n    },\n    "@types/prop-types": {\n      "version": "15.7.1",\n      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.1.tgz",\n      "integrity": "sha512-CFzn9idOEpHrgdw8JsoTkaDDyRWk1jrzIV8djzcgpq0y9tG4B4lFT+Nxh52DVpDXV+n4+NPNv7M1Dj5uMp6XFg=="\n    },\n    "@types/q": {\n      "version": "1.5.2",\n      "resolved": "https://registry.npmjs.org/@types/q/-/q-1.5.2.tgz",\n      "integrity": "sha512-ce5d3q03Ex0sy4R14722Rmt6MT07Ua+k4FwDfdcToYJcMKNtRVQvJ6JCAPdAmAnbRb6CsX6aYb9m96NGod9uTw=="\n    },\n    "@types/react": {\n      "version": "16.8.14",\n      "resolved": "https://registry.npmjs.org/@types/react/-/react-16.8.14.tgz",\n      "integrity": "sha512-26tFVJ1omGmzIdFTFmnC5zhz1GTaqCjxgUxV4KzWvsybF42P7/j4RBn6UeO3KbHPXqKWZszMXMoI65xIWm954A==",\n      "requires": {\n        "@types/prop-types": "*",\n        "csstype": "2.2.0"\n      }\n    },\n    "@types/react-transition-group": {\n      "version": "2.9.0",\n      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-2.9.0.tgz",\n      "integrity": "sha512-hP7vUaZMVSWKxo133P8U51U6UZ7+pbY+eAQb8+p6SZ2rB1rj3mOTDgTzhhi+R2SCB4S+sWekAAGoxdiZPG0ReQ==",\n      "requires": {\n        "@types/react": "*"\n      }\n    },\n    "@types/stack-utils": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-1.0.1.tgz",\n      "integrity": "sha512-l42BggppR6zLmpfU6fq9HEa2oGPEI8yrSPL3GITjfRInppYFahObbIQOQK3UGxEnyQpltZLaPe75046NOZQikw=="\n    },\n    "@types/unist": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/@types/unist/-/unist-2.0.3.tgz",\n      "integrity": "sha512-FvUupuM3rlRsRtCN+fDudtmytGO6iHJuuRKS1Ss0pG5z8oX0diNEw94UEL7hgDbpN94rgaK5R7sWm6RrSkZuAQ=="\n    },\n    "@types/vfile": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/@types/vfile/-/vfile-3.0.2.tgz",\n      "integrity": "sha512-b3nLFGaGkJ9rzOcuXRfHkZMdjsawuDD0ENL9fzTophtBg8FJHSGbH7daXkEpcwy3v7Xol3pAvsmlYyFhR4pqJw==",\n      "requires": {\n        "@types/node": "*",\n        "@types/unist": "*",\n        "@types/vfile-message": "*"\n      }\n    },\n    "@types/vfile-message": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/@types/vfile-message/-/vfile-message-1.0.1.tgz",\n      "integrity": "sha512-mlGER3Aqmq7bqR1tTTIVHq8KSAFFRyGbrxuM8C/H82g6k7r2fS+IMEkIu3D7JHzG10NvPdR8DNx0jr0pwpp4dA==",\n      "requires": {\n        "@types/node": "*",\n        "@types/unist": "*"\n      }\n    },\n    "@types/yargs": {\n      "version": "12.0.12",\n      "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-12.0.12.tgz",\n      "integrity": "sha512-SOhuU4wNBxhhTHxYaiG5NY4HBhDIDnJF60GU+2LqHAdKKer86//e4yg69aENCtQ04n0ovz+tq2YPME5t5yp4pw=="\n    },\n    "@typescript-eslint/eslint-plugin": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/@typescript-eslint/eslint-plugin/-/eslint-plugin-1.6.0.tgz",\n      "integrity": "sha512-U224c29E2lo861TQZs6GSmyC0OYeRNg6bE9UVIiFBxN2MlA0nq2dCrgIVyyRbC05UOcrgf2Wk/CF2gGOPQKUSQ==",\n      "requires": {\n        "@typescript-eslint/parser": "1.6.0",\n        "@typescript-eslint/typescript-estree": "1.6.0",\n        "requireindex": "1.2.0",\n        "tsutils": "3.7.0"\n      }\n    },\n    "@typescript-eslint/parser": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/@typescript-eslint/parser/-/parser-1.6.0.tgz",\n      "integrity": "sha512-VB9xmSbfafI+/kI4gUK3PfrkGmrJQfh0N4EScT1gZXSZyUxpsBirPL99EWZg9MmPG0pzq/gMtgkk7/rAHj4aQw==",\n      "requires": {\n        "@typescript-eslint/typescript-estree": "1.6.0",\n        "eslint-scope": "4.0.0",\n        "eslint-visitor-keys": "1.0.0"\n      }\n    },\n    "@typescript-eslint/typescript-estree": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/@typescript-eslint/typescript-estree/-/typescript-estree-1.6.0.tgz",\n      "integrity": "sha512-A4CanUwfaG4oXobD5y7EXbsOHjCwn8tj1RDd820etpPAjH+Icjc2K9e/DQM1Hac5zH2BSy+u6bjvvF2wwREvYA==",\n      "requires": {\n        "lodash.unescape": "4.0.1",\n        "semver": "5.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.5.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.5.0.tgz",\n          "integrity": "sha512-4SJ3dm0WAwWy/NVeioZh5AntkdJoWKxHxcmyP622fOkgHa4z3R0TdBJICINyaSDE6uNwVc8gZr+ZinwZAH4xIA=="\n        }\n      }\n    },\n    "@webassemblyjs/ast": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.8.5.tgz",\n      "integrity": "sha512-aJMfngIZ65+t71C3y2nBBg5FFG0Okt9m0XEgWZ7Ywgn1oMAT8cNwx00Uv1cQyHtidq0Xn94R4TAywO+LCQ+ZAQ==",\n      "requires": {\n        "@webassemblyjs/helper-module-context": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/wast-parser": "1.8.5"\n      }\n    },\n    "@webassemblyjs/floating-point-hex-parser": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.8.5.tgz",\n      "integrity": "sha512-9p+79WHru1oqBh9ewP9zW95E3XAo+90oth7S5Re3eQnECGq59ly1Ri5tsIipKGpiStHsUYmY3zMLqtk3gTcOtQ=="\n    },\n    "@webassemblyjs/helper-api-error": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-api-error/-/helper-api-error-1.8.5.tgz",\n      "integrity": "sha512-Za/tnzsvnqdaSPOUXHyKJ2XI7PDX64kWtURyGiJJZKVEdFOsdKUCPTNEVFZq3zJ2R0G5wc2PZ5gvdTRFgm81zA=="\n    },\n    "@webassemblyjs/helper-buffer": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-buffer/-/helper-buffer-1.8.5.tgz",\n      "integrity": "sha512-Ri2R8nOS0U6G49Q86goFIPNgjyl6+oE1abW1pS84BuhP1Qcr5JqMwRFT3Ah3ADDDYGEgGs1iyb1DGX+kAi/c/Q=="\n    },\n    "@webassemblyjs/helper-code-frame": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-code-frame/-/helper-code-frame-1.8.5.tgz",\n      "integrity": "sha512-VQAadSubZIhNpH46IR3yWO4kZZjMxN1opDrzePLdVKAZ+DFjkGD/rf4v1jap744uPVU6yjL/smZbRIIJTOUnKQ==",\n      "requires": {\n        "@webassemblyjs/wast-printer": "1.8.5"\n      }\n    },\n    "@webassemblyjs/helper-fsm": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-fsm/-/helper-fsm-1.8.5.tgz",\n      "integrity": "sha512-kRuX/saORcg8se/ft6Q2UbRpZwP4y7YrWsLXPbbmtepKr22i8Z4O3V5QE9DbZK908dh5Xya4Un57SDIKwB9eow=="\n    },\n    "@webassemblyjs/helper-module-context": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-module-context/-/helper-module-context-1.8.5.tgz",\n      "integrity": "sha512-/O1B236mN7UNEU4t9X7Pj38i4VoU8CcMHyy3l2cV/kIF4U5KoHXDVqcDuOs1ltkac90IM4vZdHc52t1x8Yfs3g==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "mamacro": "0.0.3"\n      }\n    },\n    "@webassemblyjs/helper-wasm-bytecode": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-bytecode/-/helper-wasm-bytecode-1.8.5.tgz",\n      "integrity": "sha512-Cu4YMYG3Ddl72CbmpjU/wbP6SACcOPVbHN1dI4VJNJVgFwaKf1ppeFJrwydOG3NDHxVGuCfPlLZNyEdIYlQ6QQ=="\n    },\n    "@webassemblyjs/helper-wasm-section": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/helper-wasm-section/-/helper-wasm-section-1.8.5.tgz",\n      "integrity": "sha512-VV083zwR+VTrIWWtgIUpqfvVdK4ff38loRmrdDBgBT8ADXYsEZ5mPQ4Nde90N3UYatHdYoDIFb7oHzMncI02tA==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-buffer": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/wasm-gen": "1.8.5"\n      }\n    },\n    "@webassemblyjs/ieee754": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/ieee754/-/ieee754-1.8.5.tgz",\n      "integrity": "sha512-aaCvQYrvKbY/n6wKHb/ylAJr27GglahUO89CcGXMItrOBqRarUMxWLJgxm9PJNuKULwN5n1csT9bYoMeZOGF3g==",\n      "requires": {\n        "@xtuc/ieee754": "1.2.0"\n      }\n    },\n    "@webassemblyjs/leb128": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/leb128/-/leb128-1.8.5.tgz",\n      "integrity": "sha512-plYUuUwleLIziknvlP8VpTgO4kqNaH57Y3JnNa6DLpu/sGcP6hbVdfdX5aHAV716pQBKrfuU26BJK29qY37J7A==",\n      "requires": {\n        "@xtuc/long": "4.2.2"\n      }\n    },\n    "@webassemblyjs/utf8": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/utf8/-/utf8-1.8.5.tgz",\n      "integrity": "sha512-U7zgftmQriw37tfD934UNInokz6yTmn29inT2cAetAsaU9YeVCveWEwhKL1Mg4yS7q//NGdzy79nlXh3bT8Kjw=="\n    },\n    "@webassemblyjs/wasm-edit": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.8.5.tgz",\n      "integrity": "sha512-A41EMy8MWw5yvqj7MQzkDjU29K7UJq1VrX2vWLzfpRHt3ISftOXqrtojn7nlPsZ9Ijhp5NwuODuycSvfAO/26Q==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-buffer": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/helper-wasm-section": "1.8.5",\n        "@webassemblyjs/wasm-gen": "1.8.5",\n        "@webassemblyjs/wasm-opt": "1.8.5",\n        "@webassemblyjs/wasm-parser": "1.8.5",\n        "@webassemblyjs/wast-printer": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wasm-gen": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-gen/-/wasm-gen-1.8.5.tgz",\n      "integrity": "sha512-BCZBT0LURC0CXDzj5FXSc2FPTsxwp3nWcqXQdOZE4U7h7i8FqtFK5Egia6f9raQLpEKT1VL7zr4r3+QX6zArWg==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/ieee754": "1.8.5",\n        "@webassemblyjs/leb128": "1.8.5",\n        "@webassemblyjs/utf8": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wasm-opt": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-opt/-/wasm-opt-1.8.5.tgz",\n      "integrity": "sha512-HKo2mO/Uh9A6ojzu7cjslGaHaUU14LdLbGEKqTR7PBKwT6LdPtLLh9fPY33rmr5wcOMrsWDbbdCHq4hQUdd37Q==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-buffer": "1.8.5",\n        "@webassemblyjs/wasm-gen": "1.8.5",\n        "@webassemblyjs/wasm-parser": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wasm-parser": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-parser/-/wasm-parser-1.8.5.tgz",\n      "integrity": "sha512-pi0SYE9T6tfcMkthwcgCpL0cM9nRYr6/6fjgDtL6q/ZqKHdMWvxitRi5JcZ7RI4SNJJYnYNaWy5UUrHQy998lw==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-api-error": "1.8.5",\n        "@webassemblyjs/helper-wasm-bytecode": "1.8.5",\n        "@webassemblyjs/ieee754": "1.8.5",\n        "@webassemblyjs/leb128": "1.8.5",\n        "@webassemblyjs/utf8": "1.8.5"\n      }\n    },\n    "@webassemblyjs/wast-parser": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-parser/-/wast-parser-1.8.5.tgz",\n      "integrity": "sha512-daXC1FyKWHF1i11obK086QRlsMsY4+tIOKgBqI1lxAnkp9xe9YMcgOxm9kLe+ttjs5aWV2KKE1TWJCN57/Btsg==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/floating-point-hex-parser": "1.8.5",\n        "@webassemblyjs/helper-api-error": "1.8.5",\n        "@webassemblyjs/helper-code-frame": "1.8.5",\n        "@webassemblyjs/helper-fsm": "1.8.5",\n        "@xtuc/long": "4.2.2"\n      }\n    },\n    "@webassemblyjs/wast-printer": {\n      "version": "1.8.5",\n      "resolved": "https://registry.npmjs.org/@webassemblyjs/wast-printer/-/wast-printer-1.8.5.tgz",\n      "integrity": "sha512-w0U0pD4EhlnvRyeJzBqaVSJAo9w/ce7/WPogeXLzGkO6hzhr4GnQIZ4W4uUt5b9ooAaXPtnXlj0gzsXEOUNYMg==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/wast-parser": "1.8.5",\n        "@xtuc/long": "4.2.2"\n      }\n    },\n    "@xtuc/ieee754": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/@xtuc/ieee754/-/ieee754-1.2.0.tgz",\n      "integrity": "sha512-DX8nKgqcGwsc0eJSqYt5lwP4DH5FlHnmuWWBRy7X0NcaGR0ZtuyeESgMwTYVEtxmsNGY+qit4QYT/MIYTOTPeA=="\n    },\n    "@xtuc/long": {\n      "version": "4.2.2",\n      "resolved": "https://registry.npmjs.org/@xtuc/long/-/long-4.2.2.tgz",\n      "integrity": "sha512-NuHqBY1PB/D8xU6s/thBgOAiAP7HOYDQ32+BFZILJ8ivkUkAHQnWfn6WhL79Owj1qmUnoN/YPhktdIoucipkAQ=="\n    },\n    "abab": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/abab/-/abab-2.0.0.tgz",\n      "integrity": "sha512-sY5AXXVZv4Y1VACTtR11UJCPHHudgY5i26Qj5TypE6DKlIApbwb5uqhXcJ5UUGbvZNRh7EeIoW+LrJumBsKp7w=="\n    },\n    "abbrev": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",\n      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="\n    },\n    "accepts": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.5.tgz",\n      "integrity": "sha1-63d99gEXI6OxTopywIBcjoZ0a9I=",\n      "requires": {\n        "mime-types": "~2.1.18",\n        "negotiator": "0.6.1"\n      }\n    },\n    "accord": {\n      "version": "0.29.0",\n      "resolved": "https://registry.npmjs.org/accord/-/accord-0.29.0.tgz",\n      "integrity": "sha512-3OOR92FTc2p5/EcOzPcXp+Cbo+3C15nV9RXHlOUBCBpHhcB+0frbSNR9ehED/o7sTcyGVtqGJpguToEdlXhD0w==",\n      "requires": {\n        "convert-source-map": "1.5.0",\n        "glob": "7.0.5",\n        "indx": "0.2.3",\n        "lodash.clone": "4.3.2",\n        "lodash.defaults": "4.0.1",\n        "lodash.flatten": "4.2.0",\n        "lodash.merge": "4.4.0",\n        "lodash.partialright": "4.1.4",\n        "lodash.pick": "4.2.1",\n        "lodash.uniq": "4.3.0",\n        "resolve": "1.5.0",\n        "semver": "5.3.0",\n        "uglify-js": "2.8.22",\n        "when": "3.7.8"\n      },\n      "dependencies": {\n        "camelcase": {\n          "version": "1.2.1",\n          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-1.2.1.tgz",\n          "integrity": "sha1-m7UwTS4LVmmLLHWLCKPqqdqlijk="\n        },\n        "cliui": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/cliui/-/cliui-2.1.0.tgz",\n          "integrity": "sha1-S0dXYP+AJkx2LDoXGQMukcf+oNE=",\n          "requires": {\n            "center-align": "0.1.1",\n            "right-align": "0.1.1",\n            "wordwrap": "0.0.2"\n          }\n        },\n        "lodash.defaults": {\n          "version": "4.2.0",\n          "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-4.2.0.tgz",\n          "integrity": "sha1-0JF4cW/+pN3p5ft7N/bwgCJ0WAw="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "uglify-js": {\n          "version": "2.8.29",\n          "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-2.8.29.tgz",\n          "integrity": "sha1-KcVzMUgFe7Th913zW3qcty5qWd0=",\n          "requires": {\n            "source-map": "~0.5.1",\n            "uglify-to-browserify": "~1.0.0",\n            "yargs": "~3.10.0"\n          }\n        },\n        "wordwrap": {\n          "version": "0.0.2",\n          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.2.tgz",\n          "integrity": "sha1-t5Zpu0LstAn4PVg8rVLKF+qhZD8="\n        },\n        "yargs": {\n          "version": "3.10.0",\n          "resolved": "https://registry.npmjs.org/yargs/-/yargs-3.10.0.tgz",\n          "integrity": "sha1-9+572FfdfB0tOMDnTvvWgdFDH9E=",\n          "requires": {\n            "camelcase": "1.0.2",\n            "cliui": "2.1.0",\n            "decamelize": "1.0.0",\n            "window-size": "0.1.0"\n          }\n        }\n      }\n    },\n    "acorn": {\n      "version": "6.1.1",\n      "resolved": "https://registry.npmjs.org/acorn/-/acorn-6.1.1.tgz",\n      "integrity": "sha512-jPTiwtOxaHNaAPg/dmrJ/beuzLRnXtB0kQPQ8JpotKJgTB6rX6c8mlf315941pyjBSaPg8NHXS9fhP4u17DpGA=="\n    },\n    "acorn-dynamic-import": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/acorn-dynamic-import/-/acorn-dynamic-import-4.0.0.tgz",\n      "integrity": "sha512-d3OEjQV4ROpoflsnUA8HozoIR504TFxNivYEUi6uwz0IYhBkTDXGuWlNdMtybRt3nqVx/L6XqMt0FxkXuWKZhw=="\n    },\n    "acorn-globals": {\n      "version": "4.3.2",\n      "resolved": "https://registry.npmjs.org/acorn-globals/-/acorn-globals-4.3.2.tgz",\n      "integrity": "sha512-BbzvZhVtZP+Bs1J1HcwrQe8ycfO0wStkSGxuul3He3GkHOIZ6eTqOkPuw9IP1X3+IkOo4wiJmwkobzXYz4wewQ==",\n      "requires": {\n        "acorn": "6.0.1",\n        "acorn-walk": "6.0.1"\n      }\n    },\n    "acorn-jsx": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.0.1.tgz",\n      "integrity": "sha512-HJ7CfNHrfJLlNTzIEUTj43LNWGkqpRLxm3YjAlcD0ACydk9XynzYsCBHxut+iqt+1aBXkx9UP/w/ZqMr13XIzg=="\n    },\n    "acorn-walk": {\n      "version": "6.1.1",\n      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-6.1.1.tgz",\n      "integrity": "sha512-OtUw6JUTgxA2QoqqmrmQ7F2NYqiBPi/L2jqHyFtllhOUvXYQXf0Z1CYUinIfyT4bTCGmrA7gX9FvHA81uzCoVw=="\n    },\n    "address": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/address/-/address-1.0.3.tgz",\n      "integrity": "sha512-z55ocwKBRLryBs394Sm3ushTtBeg6VAeuku7utSoSnsJKvKcnXFIyC6vh27n3rXyxSgkJBBCAvyOn7gSUcTYjg=="\n    },\n    "ajv": {\n      "version": "6.10.0",\n      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.10.0.tgz",\n      "integrity": "sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==",\n      "requires": {\n        "fast-deep-equal": "2.0.1",\n        "fast-json-stable-stringify": "2.0.0",\n        "json-schema-traverse": "0.4.1",\n        "uri-js": "4.2.2"\n      }\n    },\n    "ajv-errors": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/ajv-errors/-/ajv-errors-1.0.1.tgz",\n      "integrity": "sha512-DCRfO/4nQ+89p/RK43i8Ezd41EqdGIU4ld7nGF8OQ14oc/we5rEntLCUa7+jrn3nn83BosfwZA0wb4pon2o8iQ=="\n    },\n    "ajv-keywords": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/ajv-keywords/-/ajv-keywords-3.4.0.tgz",\n      "integrity": "sha512-aUjdRFISbuFOl0EIZc+9e4FfZp0bDZgAdOOf30bJmw8VM9v84SHyVyxDfbWxpGYbdZD/9XoKxfHVNmxPkhwyGw=="\n    },\n    "align-text": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/align-text/-/align-text-0.1.4.tgz",\n      "integrity": "sha1-DNkKVhCT810KmSVsIrcGlDP60Rc=",\n      "requires": {\n        "kind-of": "3.0.2",\n        "longest": "1.0.1",\n        "repeat-string": "1.5.2"\n      }\n    },\n    "alphanum-sort": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/alphanum-sort/-/alphanum-sort-1.0.2.tgz",\n      "integrity": "sha1-l6ERlkmyEa0zaR2fn0hqjsn74KM="\n    },\n    "amdefine": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/amdefine/-/amdefine-1.0.1.tgz",\n      "integrity": "sha1-SlKCrBZHKek2Gbz9OtFR+BfOkfU="\n    },\n    "ansi-colors": {\n      "version": "3.2.4",\n      "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-3.2.4.tgz",\n      "integrity": "sha512-hHUXGagefjN2iRrID63xckIvotOXOojhQKWIPUZ4mNUZ9nLZW+7FMNoE1lOkEhNWYsx/7ysGIuJYCiMAA9FnrA=="\n    },\n    "ansi-cyan": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/ansi-cyan/-/ansi-cyan-0.1.1.tgz",\n      "integrity": "sha1-U4rlKK+JgvKK4w2G8vF0VtJgmHM=",\n      "requires": {\n        "ansi-wrap": "0.1.0"\n      }\n    },\n    "ansi-escapes": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-3.2.0.tgz",\n      "integrity": "sha512-cBhpre4ma+U0T1oM5fXg7Dy1Jw7zzwv7lt/GoCpr+hDQJoYnKVPLL4dCvSEFMmQurOQvSrwT7SL/DAlhBI97RQ=="\n    },\n    "ansi-gray": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/ansi-gray/-/ansi-gray-0.1.1.tgz",\n      "integrity": "sha1-KWLPVOyXksSFEKPetSRDaGHvclE=",\n      "requires": {\n        "ansi-wrap": "0.1.0"\n      }\n    },\n    "ansi-html": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/ansi-html/-/ansi-html-0.0.7.tgz",\n      "integrity": "sha1-gTWEAhliqenm/QOflA0S9WynhZ4="\n    },\n    "ansi-red": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/ansi-red/-/ansi-red-0.1.1.tgz",\n      "integrity": "sha1-jGOPnRCAgAo1PJwoyKgcpHBdlGw=",\n      "requires": {\n        "ansi-wrap": "0.1.0"\n      }\n    },\n    "ansi-regex": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz",\n      "integrity": "sha1-7QMXwyIGT3lGbAKWa922Bas32Zg="\n    },\n    "ansi-styles": {\n      "version": "3.2.1",\n      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",\n      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",\n      "requires": {\n        "color-convert": "1.9.0"\n      }\n    },\n    "ansi-wrap": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/ansi-wrap/-/ansi-wrap-0.1.0.tgz",\n      "integrity": "sha1-qCJQ3bABXponyoLoLqYDu/pF768="\n    },\n    "anymatch": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-2.0.0.tgz",\n      "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2KklNpGpWHzdCXTDT2Y3XGlZBw==",\n      "requires": {\n        "micromatch": "3.1.4",\n        "normalize-path": "2.1.1"\n      }\n    },\n    "append-buffer": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/append-buffer/-/append-buffer-1.0.2.tgz",\n      "integrity": "sha1-2CIM9GYIFSXv6lBhTz3mUU36WPE=",\n      "requires": {\n        "buffer-equal": "1.0.0"\n      }\n    },\n    "append-transform": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/append-transform/-/append-transform-1.0.0.tgz",\n      "integrity": "sha512-P009oYkeHyU742iSZJzZZywj4QRJdnTWffaKuJQLablCZ1uz6/cW4yaRgcDaoQ+uwOxxnt0gRUcwfsNP2ri0gw==",\n      "requires": {\n        "default-require-extensions": "2.0.0"\n      }\n    },\n    "aproba": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/aproba/-/aproba-1.2.0.tgz",\n      "integrity": "sha512-Y9J6ZjXtoYh8RnXVCMOU/ttDmk1aBjunq9vO0ta5x85WDQiQfUF9sIPBITdbiiIVcBo03Hi3jMxigBtsddlXRw=="\n    },\n    "archy": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/archy/-/archy-1.0.0.tgz",\n      "integrity": "sha1-+cjBN1fMHde8N5rHeyxipcKGjEA="\n    },\n    "argparse": {\n      "version": "1.0.10",\n      "resolved": "https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz",\n      "integrity": "sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==",\n      "requires": {\n        "sprintf-js": "~1.0.2"\n      }\n    },\n    "aria-query": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/aria-query/-/aria-query-3.0.0.tgz",\n      "integrity": "sha1-ZbP8wcoRVajJrmTW7uKX8V1RM8w=",\n      "requires": {\n        "ast-types-flow": "0.0.7",\n        "commander": "2.11.0"\n      }\n    },\n    "arr-diff": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz",\n      "integrity": "sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA="\n    },\n    "arr-filter": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/arr-filter/-/arr-filter-1.1.2.tgz",\n      "integrity": "sha1-Q/3d0JHo7xGqTEXZzcGOLf8XEe4=",\n      "requires": {\n        "make-iterator": "1.0.0"\n      }\n    },\n    "arr-flatten": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz",\n      "integrity": "sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg=="\n    },\n    "arr-map": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/arr-map/-/arr-map-2.0.2.tgz",\n      "integrity": "sha1-Onc0X/wc814qkYJWAfnljy4kysQ=",\n      "requires": {\n        "make-iterator": "1.0.0"\n      }\n    },\n    "arr-union": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz",\n      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ="\n    },\n    "array-differ": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/array-differ/-/array-differ-1.0.0.tgz",\n      "integrity": "sha1-7/UuN1gknTO+QCuLuOVkuytdQDE="\n    },\n    "array-each": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/array-each/-/array-each-1.0.1.tgz",\n      "integrity": "sha1-p5SvDAWrF1KEbudTofIRoFugxE8="\n    },\n    "array-equal": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/array-equal/-/array-equal-1.0.0.tgz",\n      "integrity": "sha1-jCpe8kcv2ep0KwTHenUJO6J1fJM="\n    },\n    "array-filter": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/array-filter/-/array-filter-0.0.1.tgz",\n      "integrity": "sha1-fajPLiZijtcygDWB/SH2fKzS7uw="\n    },\n    "array-flatten": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-2.1.2.tgz",\n      "integrity": "sha512-hNfzcOV8W4NdualtqBFPyVO+54DSJuZGY9qT4pRroB6S9e3iiido2ISIC5h9R2sPJ8H3FHCIiEnsv1lPXO3KtQ=="\n    },\n    "array-includes": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.0.3.tgz",\n      "integrity": "sha1-GEtI9i2S10UrsxsyMWXH+L0CJm0=",\n      "requires": {\n        "define-properties": "1.1.2",\n        "es-abstract": "1.7.0"\n      }\n    },\n    "array-initial": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/array-initial/-/array-initial-1.1.0.tgz",\n      "integrity": "sha1-L6dLJnOTccOUe9enrcc74zSz15U=",\n      "requires": {\n        "array-slice": "1.0.0",\n        "is-number": "4.0.0"\n      },\n      "dependencies": {\n        "is-number": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",\n          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="\n        }\n      }\n    },\n    "array-last": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/array-last/-/array-last-1.3.0.tgz",\n      "integrity": "sha512-eOCut5rXlI6aCOS7Z7kCplKRKyiFQ6dHFBem4PwlwKeNFk2/XxTrhRh5T9PyaEWGy/NHTZWbY+nsZlNFJu9rYg==",\n      "requires": {\n        "is-number": "4.0.0"\n      },\n      "dependencies": {\n        "is-number": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",\n          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="\n        }\n      }\n    },\n    "array-map": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/array-map/-/array-map-0.0.0.tgz",\n      "integrity": "sha1-iKK6tz0c97zVwbEYoAP2b2ZfpmI="\n    },\n    "array-reduce": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/array-reduce/-/array-reduce-0.0.0.tgz",\n      "integrity": "sha1-FziZ0//Rx9k4PkR5Ul2+J4yrXys="\n    },\n    "array-slice": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-1.1.0.tgz",\n      "integrity": "sha512-B1qMD3RBP7O8o0H2KbrXDyB0IccejMF15+87Lvlor12ONPRHP6gTjXMNkt/d3ZuOGbAe66hFmaCfECI24Ufp6w=="\n    },\n    "array-sort": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/array-sort/-/array-sort-1.0.0.tgz",\n      "integrity": "sha512-ihLeJkonmdiAsD7vpgN3CRcx2J2S0TiYW+IS/5zHBI7mKUq3ySvBdzzBfD236ubDBQFiiyG3SWCPc+msQ9KoYg==",\n      "requires": {\n        "default-compare": "1.0.0",\n        "get-value": "2.0.6",\n        "kind-of": "5.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "5.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n        }\n      }\n    },\n    "array-union": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz",\n      "integrity": "sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=",\n      "requires": {\n        "array-uniq": "1.0.1"\n      }\n    },\n    "array-uniq": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz",\n      "integrity": "sha1-r2rId6Jcx/dOBYiUdThY39sk/bY="\n    },\n    "array-unique": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz",\n      "integrity": "sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg="\n    },\n    "arrify": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz",\n      "integrity": "sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0="\n    },\n    "asap": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/asap/-/asap-2.0.6.tgz",\n      "integrity": "sha1-5QNHYR1+aQlDIIu9r+vLwvuGbUY="\n    },\n    "asn1": {\n      "version": "0.2.4",\n      "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",\n      "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",\n      "requires": {\n        "safer-buffer": "~2.1.0"\n      }\n    },\n    "asn1.js": {\n      "version": "4.10.1",\n      "resolved": "https://registry.npmjs.org/asn1.js/-/asn1.js-4.10.1.tgz",\n      "integrity": "sha512-p32cOF5q0Zqs9uBiONKYLm6BClCoBCM5O9JfeUSlnQLBTxYdTK+pW+nXflm8UkKd2UYlEbYz5qEi0JuZR9ckSw==",\n      "requires": {\n        "bn.js": "4.0.0",\n        "inherits": "2.0.1",\n        "minimalistic-assert": "1.0.0"\n      }\n    },\n    "assert": {\n      "version": "1.4.1",\n      "resolved": "https://registry.npmjs.org/assert/-/assert-1.4.1.tgz",\n      "integrity": "sha1-mZEtWRg2tab1s0XA8H7vwI/GXZE=",\n      "requires": {\n        "util": "0.10.3"\n      },\n      "dependencies": {\n        "inherits": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.1.tgz",\n          "integrity": "sha1-sX0I0ya0Qj5Wjv9xn5GwscvfafE="\n        },\n        "util": {\n          "version": "0.10.3",\n          "resolved": "https://registry.npmjs.org/util/-/util-0.10.3.tgz",\n          "integrity": "sha1-evsa/lCAUkZInj23/g7TeTNqwPk=",\n          "requires": {\n            "inherits": "2.0.1"\n          }\n        }\n      }\n    },\n    "assert-plus": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",\n      "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU="\n    },\n    "assign-symbols": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz",\n      "integrity": "sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c="\n    },\n    "ast-types": {\n      "version": "0.9.6",\n      "resolved": "https://registry.npmjs.org/ast-types/-/ast-types-0.9.6.tgz",\n      "integrity": "sha1-ECyenpAF0+fjgpvwxPok7oYu6bk="\n    },\n    "ast-types-flow": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/ast-types-flow/-/ast-types-flow-0.0.7.tgz",\n      "integrity": "sha1-9wtzXGvKGlycItmCw+Oef+ujva0="\n    },\n    "astral-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/astral-regex/-/astral-regex-1.0.0.tgz",\n      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF/1/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0tO0ij3C5Lwmf1EiyjHg=="\n    },\n    "async": {\n      "version": "2.6.2",\n      "resolved": "https://registry.npmjs.org/async/-/async-2.6.2.tgz",\n      "integrity": "sha512-H1qVYh1MYhEEFLsP97cVKqCGo7KfCyTt6uEWqsTBr9SO84oK9Uwbyd/yCW+6rKJLHksBNUVWZDAjfS+Ccx0Bbg==",\n      "requires": {\n        "lodash": "4.17.11"\n      }\n    },\n    "async-done": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/async-done/-/async-done-1.3.1.tgz",\n      "integrity": "sha512-R1BaUeJ4PMoLNJuk+0tLJgjmEqVsdN118+Z8O+alhnQDQgy0kmD5Mqi0DNEmMx2LM0Ed5yekKu+ZXYvIHceicg==",\n      "requires": {\n        "end-of-stream": "1.1.0",\n        "once": "1.3.2",\n        "process-nextick-args": "1.0.7",\n        "stream-exhaust": "1.0.1"\n      },\n      "dependencies": {\n        "process-nextick-args": {\n          "version": "1.0.7",\n          "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-1.0.7.tgz",\n          "integrity": "sha1-FQ4gt1ZZCtP5EJPyWk8q2L/zC6M="\n        }\n      }\n    },\n    "async-each": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/async-each/-/async-each-1.0.3.tgz",\n      "integrity": "sha512-z/WhQ5FPySLdvREByI2vZiTWwCnF0moMJ1hK9YQwDTHKh6I7/uSckMetoRGb5UBZPC1z0jlw+n/XCgjeH7y1AQ=="\n    },\n    "async-limiter": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/async-limiter/-/async-limiter-1.0.0.tgz",\n      "integrity": "sha512-jp/uFnooOiO+L211eZOoSyzpOITMXx1rBITauYykG3BRYPu8h0UcxsPNB04RR5vo4Tyz3+ay17tR6JVf9qzYWg=="\n    },\n    "async-settle": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/async-settle/-/async-settle-1.0.0.tgz",\n      "integrity": "sha1-HQqRS7Aldb7IqPOnTlCA9yssDGs=",\n      "requires": {\n        "async-done": "1.2.2"\n      }\n    },\n    "asynckit": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",\n      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="\n    },\n    "atob": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/atob/-/atob-2.1.2.tgz",\n      "integrity": "sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg=="\n    },\n    "autoprefixer": {\n      "version": "9.5.1",\n      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-9.5.1.tgz",\n      "integrity": "sha512-KJSzkStUl3wP0D5sdMlP82Q52JLy5+atf2MHAre48+ckWkXgixmfHyWmA77wFDy6jTHU6mIgXv6hAQ2mf1PjJQ==",\n      "requires": {\n        "browserslist": "4.5.4",\n        "caniuse-lite": "1.0.30000957",\n        "normalize-range": "0.1.2",\n        "num2fraction": "1.2.2",\n        "postcss": "7.0.14",\n        "postcss-value-parser": "3.3.1"\n      }\n    },\n    "aws-sign2": {\n      "version": "0.7.0",\n      "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",\n      "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg="\n    },\n    "aws4": {\n      "version": "1.8.0",\n      "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.8.0.tgz",\n      "integrity": "sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ=="\n    },\n    "axobject-query": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-2.0.2.tgz",\n      "integrity": "sha512-MCeek8ZH7hKyO1rWUbKNQBbl4l2eY0ntk7OGi+q0RlafrCnfPxC06WZA+uebCfmYp4mNU9jRBP1AhGyf8+W3ww==",\n      "requires": {\n        "ast-types-flow": "0.0.7"\n      }\n    },\n    "babel-code-frame": {\n      "version": "6.26.0",\n      "resolved": "https://registry.npmjs.org/babel-code-frame/-/babel-code-frame-6.26.0.tgz",\n      "integrity": "sha1-Y/1D99weO7fONZR9uP42mj9Yx0s=",\n      "requires": {\n        "chalk": "1.1.3",\n        "esutils": "2.0.2",\n        "js-tokens": "3.0.2"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "js-tokens": {\n          "version": "3.0.2",\n          "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-3.0.2.tgz",\n          "integrity": "sha1-mGbfOVECEw449/mWvOtlRDIJwls="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "babel-eslint": {\n      "version": "10.0.1",\n      "resolved": "https://registry.npmjs.org/babel-eslint/-/babel-eslint-10.0.1.tgz",\n      "integrity": "sha512-z7OT1iNV+TjOwHNLLyJk+HN+YVWX+CLE6fPD2SymJZOZQBs+QIexFjhm4keGTm8MW9xr4EC9Q0PbaLB24V5GoQ==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "@babel/parser": "7.0.0",\n        "@babel/traverse": "7.0.0",\n        "@babel/types": "7.0.0",\n        "eslint-scope": "3.7.1",\n        "eslint-visitor-keys": "1.0.0"\n      },\n      "dependencies": {\n        "eslint-scope": {\n          "version": "3.7.1",\n          "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-3.7.1.tgz",\n          "integrity": "sha1-PWPD7f2gLgbgGkUq2IyqzHzctug=",\n          "requires": {\n            "esrecurse": "4.1.0",\n            "estraverse": "4.1.1"\n          }\n        }\n      }\n    },\n    "babel-extract-comments": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/babel-extract-comments/-/babel-extract-comments-1.0.0.tgz",\n      "integrity": "sha512-qWWzi4TlddohA91bFwgt6zO/J0X+io7Qp184Fw0m2JYRSTZnJbFR8+07KmzudHCZgOiKRCrjhylwv9Xd8gfhVQ==",\n      "requires": {\n        "babylon": "6.18.0"\n      }\n    },\n    "babel-jest": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/babel-jest/-/babel-jest-24.7.1.tgz",\n      "integrity": "sha512-GPnLqfk8Mtt0i4OemjWkChi73A3ALs4w2/QbG64uAj8b5mmwzxc7jbJVRZt8NJkxi6FopVHog9S3xX6UJKb2qg==",\n      "requires": {\n        "@jest/transform": "24.7.1",\n        "@jest/types": "24.7.0",\n        "@types/babel__core": "7.1.0",\n        "babel-plugin-istanbul": "5.1.0",\n        "babel-preset-jest": "24.6.0",\n        "chalk": "2.4.2",\n        "slash": "2.0.0"\n      }\n    },\n    "babel-loader": {\n      "version": "8.0.5",\n      "resolved": "https://registry.npmjs.org/babel-loader/-/babel-loader-8.0.5.tgz",\n      "integrity": "sha512-NTnHnVRd2JnRqPC0vW+iOQWU5pchDbYXsG2E6DMXEpMfUcQKclF9gmf3G3ZMhzG7IG9ji4coL0cm+FxeWxDpnw==",\n      "requires": {\n        "find-cache-dir": "2.0.0",\n        "loader-utils": "1.0.2",\n        "mkdirp": "0.5.1",\n        "util.promisify": "1.0.0"\n      }\n    },\n    "babel-plugin-dynamic-import-node": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-dynamic-import-node/-/babel-plugin-dynamic-import-node-2.2.0.tgz",\n      "integrity": "sha512-fP899ELUnTaBcIzmrW7nniyqqdYWrWuJUyPWHxFa/c7r7hS6KC8FscNfLlBNIoPSc55kYMGEEKjPjJGCLbE1qA==",\n      "requires": {\n        "object.assign": "4.1.0"\n      }\n    },\n    "babel-plugin-emotion": {\n      "version": "9.2.11",\n      "resolved": "https://registry.npmjs.org/babel-plugin-emotion/-/babel-plugin-emotion-9.2.11.tgz",\n      "integrity": "sha512-dgCImifnOPPSeXod2znAmgc64NhaaOjGEHROR/M+lmStb3841yK1sgaDYAYMnlvWNz8GnpwIPN0VmNpbWYZ+VQ==",\n      "requires": {\n        "@babel/helper-module-imports": "7.0.0",\n        "@emotion/babel-utils": "0.6.4",\n        "@emotion/hash": "0.6.2",\n        "@emotion/memoize": "0.6.1",\n        "@emotion/stylis": "0.7.0",\n        "babel-plugin-macros": "2.0.0",\n        "babel-plugin-syntax-jsx": "6.18.0",\n        "convert-source-map": "1.5.0",\n        "find-root": "1.1.0",\n        "mkdirp": "0.5.1",\n        "source-map": "0.5.7",\n        "touch": "2.0.1"\n      }\n    },\n    "babel-plugin-istanbul": {\n      "version": "5.1.2",\n      "resolved": "https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-5.1.2.tgz",\n      "integrity": "sha512-U3ZVajC+Z69Gim7ZzmD4Wcsq76i/1hqDamBfowc1tWzWjybRy70iWfngP2ME+1CrgcgZ/+muIbPY/Yi0dxdIkQ==",\n      "requires": {\n        "find-up": "3.0.0",\n        "istanbul-lib-instrument": "3.2.0",\n        "test-exclude": "5.2.2"\n      }\n    },\n    "babel-plugin-jest-hoist": {\n      "version": "24.6.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-24.6.0.tgz",\n      "integrity": "sha512-3pKNH6hMt9SbOv0F3WVmy5CWQ4uogS3k0GY5XLyQHJ9EGpAT9XWkFd2ZiXXtkwFHdAHa5j7w7kfxSP5lAIwu7w==",\n      "requires": {\n        "@types/babel__traverse": "7.0.6"\n      }\n    },\n    "babel-plugin-macros": {\n      "version": "2.5.1",\n      "resolved": "https://registry.npmjs.org/babel-plugin-macros/-/babel-plugin-macros-2.5.1.tgz",\n      "integrity": "sha512-xN3KhAxPzsJ6OQTktCanNpIFnnMsCV+t8OloKxIL72D6+SUZYFn9qfklPgef5HyyDtzYZqqb+fs1S12+gQY82Q==",\n      "requires": {\n        "@babel/runtime": "7.4.2",\n        "cosmiconfig": "5.2.0",\n        "resolve": "1.10.0"\n      }\n    },\n    "babel-plugin-named-asset-import": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/babel-plugin-named-asset-import/-/babel-plugin-named-asset-import-0.3.2.tgz",\n      "integrity": "sha512-CxwvxrZ9OirpXQ201Ec57OmGhmI8/ui/GwTDy0hSp6CmRvgRC0pSair6Z04Ck+JStA0sMPZzSJ3uE4n17EXpPQ=="\n    },\n    "babel-plugin-syntax-jsx": {\n      "version": "6.18.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-jsx/-/babel-plugin-syntax-jsx-6.18.0.tgz",\n      "integrity": "sha1-CvMqmm4Tyno/1QaeYtew9Y0NiUY="\n    },\n    "babel-plugin-syntax-object-rest-spread": {\n      "version": "6.13.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-syntax-object-rest-spread/-/babel-plugin-syntax-object-rest-spread-6.13.0.tgz",\n      "integrity": "sha1-/WU28rzhODb/o6VFjEkDpZe7O/U="\n    },\n    "babel-plugin-transform-object-rest-spread": {\n      "version": "6.26.0",\n      "resolved": "https://registry.npmjs.org/babel-plugin-transform-object-rest-spread/-/babel-plugin-transform-object-rest-spread-6.26.0.tgz",\n      "integrity": "sha1-DzZpLVD+9rfi1LOsFHgTepY7ewY=",\n      "requires": {\n        "babel-plugin-syntax-object-rest-spread": "6.8.0",\n        "babel-runtime": "6.26.0"\n      }\n    },\n    "babel-plugin-transform-react-remove-prop-types": {\n      "version": "0.4.24",\n      "resolved": "https://registry.npmjs.org/babel-plugin-transform-react-remove-prop-types/-/babel-plugin-transform-react-remove-prop-types-0.4.24.tgz",\n      "integrity": "sha512-eqj0hVcJUR57/Ug2zE1Yswsw4LhuqqHhD+8v120T1cl3kjg76QwtyBrdIk4WVwK+lAhBJVYCd/v+4nc4y+8JsA=="\n    },\n    "babel-preset-jest": {\n      "version": "24.6.0",\n      "resolved": "https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-24.6.0.tgz",\n      "integrity": "sha512-pdZqLEdmy1ZK5kyRUfvBb2IfTPb2BUvIJczlPspS8fWmBQslNNDBqVfh7BW5leOVJMDZKzjD8XEyABTk6gQ5yw==",\n      "requires": {\n        "@babel/plugin-syntax-object-rest-spread": "7.0.0",\n        "babel-plugin-jest-hoist": "24.6.0"\n      }\n    },\n    "babel-preset-react-app": {\n      "version": "8.0.0",\n      "resolved": "https://registry.npmjs.org/babel-preset-react-app/-/babel-preset-react-app-8.0.0.tgz",\n      "integrity": "sha512-6Dmj7e8l7eWE+R6sKKLRrGEQXMfcBqBYlphaAgT1ml8qT1NEP+CyTZyfjmgKGqHZfwH3RQCUOuP6y4mpGc7tgg==",\n      "requires": {\n        "@babel/core": "7.4.3",\n        "@babel/plugin-proposal-class-properties": "7.4.0",\n        "@babel/plugin-proposal-decorators": "7.4.0",\n        "@babel/plugin-proposal-object-rest-spread": "7.4.3",\n        "@babel/plugin-syntax-dynamic-import": "7.2.0",\n        "@babel/plugin-transform-classes": "7.4.3",\n        "@babel/plugin-transform-destructuring": "7.4.3",\n        "@babel/plugin-transform-flow-strip-types": "7.4.0",\n        "@babel/plugin-transform-react-constant-elements": "7.2.0",\n        "@babel/plugin-transform-react-display-name": "7.2.0",\n        "@babel/plugin-transform-runtime": "7.4.3",\n        "@babel/preset-env": "7.4.3",\n        "@babel/preset-react": "7.0.0",\n        "@babel/preset-typescript": "7.3.3",\n        "@babel/runtime": "7.4.3",\n        "babel-plugin-dynamic-import-node": "2.2.0",\n        "babel-plugin-macros": "2.5.1",\n        "babel-plugin-transform-react-remove-prop-types": "0.4.24"\n      }\n    },\n    "babel-runtime": {\n      "version": "6.26.0",\n      "resolved": "https://registry.npmjs.org/babel-runtime/-/babel-runtime-6.26.0.tgz",\n      "integrity": "sha1-llxwWGaOgrVde/4E/yM3vItWR/4=",\n      "requires": {\n        "core-js": "2.4.0",\n        "regenerator-runtime": "0.11.0"\n      },\n      "dependencies": {\n        "core-js": {\n          "version": "2.6.5",\n          "resolved": "https://registry.npmjs.org/core-js/-/core-js-2.6.5.tgz",\n          "integrity": "sha512-klh/kDpwX8hryYL14M9w/xei6vrv6sE8gTHDG7/T/+SEovB/G4ejwcfE/CBzO6Edsu+OETZMZ3wcX/EjUkrl5A=="\n        },\n        "regenerator-runtime": {\n          "version": "0.11.1",\n          "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.11.1.tgz",\n          "integrity": "sha512-MguG95oij0fC3QV3URf4V2SDYGJhJnJGqvIIgdECeODCT98wSWDAJ94SSuVpYQUoTcGUIL6L4yNB7j1DFFHSBg=="\n        }\n      }\n    },\n    "babylon": {\n      "version": "6.18.0",\n      "resolved": "https://registry.npmjs.org/babylon/-/babylon-6.18.0.tgz",\n      "integrity": "sha512-q/UEjfGJ2Cm3oKV71DJz9d25TPnq5rhBVL2Q4fA5wcC3jcrdn7+SssEybFIxwAvvP+YCsCYNKughoF33GxgycQ=="\n    },\n    "bach": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/bach/-/bach-1.2.0.tgz",\n      "integrity": "sha1-Szzpa/JxNPeaG0FKUcFONMO9mIA=",\n      "requires": {\n        "arr-filter": "1.1.1",\n        "arr-flatten": "1.0.1",\n        "arr-map": "2.0.0",\n        "array-each": "1.0.0",\n        "array-initial": "1.0.0",\n        "array-last": "1.1.1",\n        "async-done": "1.2.2",\n        "async-settle": "1.0.0",\n        "now-and-later": "2.0.0"\n      }\n    },\n    "bail": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/bail/-/bail-1.0.3.tgz",\n      "integrity": "sha512-1X8CnjFVQ+a+KW36uBNMTU5s8+v5FzeqrP7hTG5aTb4aPreSbZJlhwPon9VKMuEVgV++JM+SQrALY3kr7eswdg=="\n    },\n    "balanced-match": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",\n      "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="\n    },\n    "base": {\n      "version": "0.11.2",\n      "resolved": "https://registry.npmjs.org/base/-/base-0.11.2.tgz",\n      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==",\n      "requires": {\n        "cache-base": "1.0.1",\n        "class-utils": "0.3.5",\n        "component-emitter": "1.2.1",\n        "define-property": "1.0.0",\n        "isobject": "3.0.1",\n        "mixin-deep": "1.2.0",\n        "pascalcase": "0.1.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",\n          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",\n          "requires": {\n            "is-descriptor": "1.0.0"\n          }\n        },\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "1.0.0",\n            "is-data-descriptor": "1.0.0",\n            "kind-of": "6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "base62": {\n      "version": "1.2.8",\n      "resolved": "https://registry.npmjs.org/base62/-/base62-1.2.8.tgz",\n      "integrity": "sha512-V6YHUbjLxN1ymqNLb1DPHoU1CpfdL7d2YTIp5W3U4hhoG4hhxNmsFDs66M9EXxBiSEke5Bt5dwdfMwwZF70iLA=="\n    },\n    "base64-js": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.3.0.tgz",\n      "integrity": "sha512-ccav/yGvoa80BQDljCxsmmQ3Xvx60/UpBIij5QN21W3wBi/hhIC9OoO+KLpu9IJTS9j4DRVJ3aDDF9cMSoa2lw=="\n    },\n    "batch": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/batch/-/batch-0.6.1.tgz",\n      "integrity": "sha1-3DQxT05nkxgJP8dgJyUl+UvyXBY="\n    },\n    "bcrypt-pbkdf": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",\n      "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",\n      "requires": {\n        "tweetnacl": "0.14.3"\n      }\n    },\n    "beeper": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/beeper/-/beeper-1.1.1.tgz",\n      "integrity": "sha1-5tXqjF2tABMEpwsiY4RH9pyy+Ak="\n    },\n    "better-console": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/better-console/-/better-console-1.0.1.tgz",\n      "integrity": "sha1-mjNh+fRc2vr/pdh9Yv1Jt/jb8ys=",\n      "requires": {\n        "chalk": "1.1.3",\n        "cli-table": "~0.3.1"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "big.js": {\n      "version": "5.2.2",\n      "resolved": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",\n      "integrity": "sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ=="\n    },\n    "binary-extensions": {\n      "version": "1.13.1",\n      "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-1.13.1.tgz",\n      "integrity": "sha512-Un7MIEDdUC5gNpcGDV97op1Ywk748MpHcFTHoYs6qnj1Z3j7I53VG3nwZhKzoBZmbdRNnb6WRdFlwl7tSDuZGw=="\n    },\n    "binaryextensions": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/binaryextensions/-/binaryextensions-2.1.2.tgz",\n      "integrity": "sha512-xVNN69YGDghOqCCtA6FI7avYrr02mTJjOgB0/f1VPD3pJC8QEvjTKWc4epDx8AqxxA75NI0QpVM2gPJXUbE4Tg=="\n    },\n    "bluebird": {\n      "version": "3.5.4",\n      "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.5.4.tgz",\n      "integrity": "sha512-FG+nFEZChJrbQ9tIccIfZJBz3J7mLrAhxakAbnrJWn8d7aKOC+LWifa0G+p4ZqKp4y13T7juYvdhq9NzKdsrjw=="\n    },\n    "bn.js": {\n      "version": "4.11.8",\n      "resolved": "https://registry.npmjs.org/bn.js/-/bn.js-4.11.8.tgz",\n      "integrity": "sha512-ItfYfPLkWHUjckQCk8xC+LwxgK8NYcXywGigJgSwOP8Y2iyWT4f2vsZnoOXTTbo+o5yXmIUJ4gn5538SO5S3gA=="\n    },\n    "body-parser": {\n      "version": "1.18.3",\n      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.18.3.tgz",\n      "integrity": "sha1-WykhmP/dVTs6DyDe0FkrlWlVyLQ=",\n      "requires": {\n        "bytes": "3.0.0",\n        "content-type": "~1.0.4",\n        "debug": "2.6.9",\n        "depd": "~1.1.2",\n        "http-errors": "~1.6.3",\n        "iconv-lite": "0.4.23",\n        "on-finished": "~2.3.0",\n        "qs": "6.5.2",\n        "raw-body": "2.3.3",\n        "type-is": "~1.6.16"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "iconv-lite": {\n          "version": "0.4.23",\n          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz",\n          "integrity": "sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==",\n          "requires": {\n            "safer-buffer": ">= 2.1.2 < 3"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "bonjour": {\n      "version": "3.5.0",\n      "resolved": "https://registry.npmjs.org/bonjour/-/bonjour-3.5.0.tgz",\n      "integrity": "sha1-jokKGD2O6aI5OzhExpGkK897yfU=",\n      "requires": {\n        "array-flatten": "2.1.0",\n        "deep-equal": "1.0.1",\n        "dns-equal": "1.0.0",\n        "dns-txt": "2.0.2",\n        "multicast-dns": "6.0.1",\n        "multicast-dns-service-types": "1.1.0"\n      }\n    },\n    "boolbase": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/boolbase/-/boolbase-1.0.0.tgz",\n      "integrity": "sha1-aN/1++YMUes3cl6p4+0xDcwed24="\n    },\n    "bowser": {\n      "version": "1.9.4",\n      "resolved": "https://registry.npmjs.org/bowser/-/bowser-1.9.4.tgz",\n      "integrity": "sha512-9IdMmj2KjigRq6oWhmwv1W36pDuA4STQZ8q6YO9um+x07xgYNCD3Oou+WP/3L1HNz7iqythGet3/p4wvc8AAwQ==",\n      "dev": true\n    },\n    "brace-expansion": {\n      "version": "1.1.11",\n      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",\n      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",\n      "requires": {\n        "balanced-match": "1.0.0",\n        "concat-map": "0.0.1"\n      }\n    },\n    "braces": {\n      "version": "2.3.2",\n      "resolved": "https://registry.npmjs.org/braces/-/braces-2.3.2.tgz",\n      "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==",\n      "requires": {\n        "arr-flatten": "1.1.0",\n        "array-unique": "0.3.2",\n        "extend-shallow": "2.0.1",\n        "fill-range": "4.0.0",\n        "isobject": "3.0.1",\n        "repeat-element": "1.1.2",\n        "snapdragon": "0.8.1",\n        "snapdragon-node": "2.0.1",\n        "split-string": "3.0.2",\n        "to-regex": "3.0.1"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        }\n      }\n    },\n    "brcast": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/brcast/-/brcast-3.0.1.tgz",\n      "integrity": "sha512-eI3yqf9YEqyGl9PCNTR46MGvDylGtaHjalcz6Q3fAPnP/PhpKkkve52vFdfGpwp4VUvK6LUr4TQN+2stCrEwTg=="\n    },\n    "brorand": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/brorand/-/brorand-1.1.0.tgz",\n      "integrity": "sha1-EsJe/kCkXjwyPrhnWgoM5XsiNx8="\n    },\n    "browser-process-hrtime": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/browser-process-hrtime/-/browser-process-hrtime-0.1.3.tgz",\n      "integrity": "sha512-bRFnI4NnjO6cnyLmOV/7PVoDEMJChlcfN0z4s1YMBY989/SvlfMI1lgCnkFUs53e9gQF+w7qu7XdllSTiSl8Aw=="\n    },\n    "browser-resolve": {\n      "version": "1.11.3",\n      "resolved": "https://registry.npmjs.org/browser-resolve/-/browser-resolve-1.11.3.tgz",\n      "integrity": "sha512-exDi1BYWB/6raKHmDTCicQfTkqwN5fioMFV4j8BsfMU4R2DK/QfZfK7kOVkmWCNANf0snkBzqGqAJBao9gZMdQ==",\n      "requires": {\n        "resolve": "1.1.7"\n      },\n      "dependencies": {\n        "resolve": {\n          "version": "1.1.7",\n          "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.1.7.tgz",\n          "integrity": "sha1-IDEU2CrSxe2ejgQRs5ModeiJ6Xs="\n        }\n      }\n    },\n    "browserify-aes": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/browserify-aes/-/browserify-aes-1.2.0.tgz",\n      "integrity": "sha512-+7CHXqGuspUn/Sl5aO7Ea0xWGAtETPXNSAjHo48JfLdPWcMng33Xe4znFvQweqc/uzk5zSOI3H52CYnjCfb5hA==",\n      "requires": {\n        "buffer-xor": "1.0.3",\n        "cipher-base": "1.0.0",\n        "create-hash": "1.1.0",\n        "evp_bytestokey": "1.0.3",\n        "inherits": "2.0.1",\n        "safe-buffer": "5.0.1"\n      }\n    },\n    "browserify-cipher": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/browserify-cipher/-/browserify-cipher-1.0.1.tgz",\n      "integrity": "sha512-sPhkz0ARKbf4rRQt2hTpAHqn47X3llLkUGn+xEJzLjwY8LRs2p0v7ljvI5EyoRO/mexrNunNECisZs+gw2zz1w==",\n      "requires": {\n        "browserify-aes": "1.0.4",\n        "browserify-des": "1.0.0",\n        "evp_bytestokey": "1.0.0"\n      }\n    },\n    "browserify-des": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/browserify-des/-/browserify-des-1.0.2.tgz",\n      "integrity": "sha512-BioO1xf3hFwz4kc6iBhI3ieDFompMhrMlnDFC4/0/vd5MokpuAc3R+LYbwTA9A5Yc9pq9UYPqffKpW2ObuwX5A==",\n      "requires": {\n        "cipher-base": "1.0.1",\n        "des.js": "1.0.0",\n        "inherits": "2.0.1",\n        "safe-buffer": "5.1.2"\n      }\n    },\n    "browserify-rsa": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/browserify-rsa/-/browserify-rsa-4.0.1.tgz",\n      "integrity": "sha1-IeCr+vbyApzy+vsTNWenAdQTVSQ=",\n      "requires": {\n        "bn.js": "4.1.0",\n        "randombytes": "2.0.1"\n      }\n    },\n    "browserify-sign": {\n      "version": "4.0.4",\n      "resolved": "https://registry.npmjs.org/browserify-sign/-/browserify-sign-4.0.4.tgz",\n      "integrity": "sha1-qk62jl17ZYuqa/alfmMMvXqT0pg=",\n      "requires": {\n        "bn.js": "4.1.1",\n        "browserify-rsa": "4.0.0",\n        "create-hash": "1.1.0",\n        "create-hmac": "1.1.2",\n        "elliptic": "6.0.0",\n        "inherits": "2.0.1",\n        "parse-asn1": "5.0.0"\n      }\n    },\n    "browserify-zlib": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/browserify-zlib/-/browserify-zlib-0.2.0.tgz",\n      "integrity": "sha512-Z942RysHXmJrhqk88FmKBVq/v5tqmSkDz7p54G/MGyjMnCFFnC79XWNbg+Vta8W6Wb2qtSZTSxIGkJrRpCFEiA==",\n      "requires": {\n        "pako": "~1.0.5"\n      }\n    },\n    "browserslist": {\n      "version": "4.5.5",\n      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.5.5.tgz",\n      "integrity": "sha512-0QFO1r/2c792Ohkit5XI8Cm8pDtZxgNl2H6HU4mHrpYz7314pEYcsAVVatM0l/YmxPnEzh9VygXouj4gkFUTKA==",\n      "requires": {\n        "caniuse-lite": "1.0.30000960",\n        "electron-to-chromium": "1.3.124",\n        "node-releases": "1.1.14"\n      }\n    },\n    "bser": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/bser/-/bser-2.0.0.tgz",\n      "integrity": "sha1-mseNPtXZFYBP2HrLFYvHlxR6Fxk=",\n      "requires": {\n        "node-int64": "0.4.0"\n      }\n    },\n    "buffer": {\n      "version": "4.9.1",\n      "resolved": "https://registry.npmjs.org/buffer/-/buffer-4.9.1.tgz",\n      "integrity": "sha1-bRu2AbB6TvztlwlBMgkwJ8lbwpg=",\n      "requires": {\n        "base64-js": "1.0.2",\n        "ieee754": "1.1.4",\n        "isarray": "1.0.0"\n      }\n    },\n    "buffer-equal": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/buffer-equal/-/buffer-equal-1.0.0.tgz",\n      "integrity": "sha1-WWFrSYME1Var1GaWayLu2j7KX74="\n    },\n    "buffer-from": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",\n      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A=="\n    },\n    "buffer-indexof": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/buffer-indexof/-/buffer-indexof-1.1.1.tgz",\n      "integrity": "sha512-4/rOEg86jivtPTeOUUT61jJO1Ya1TrR/OkqCSZDyq84WJh3LuuiphBYJN+fm5xufIk4XAFcEwte/8WzC8If/1g=="\n    },\n    "buffer-xor": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/buffer-xor/-/buffer-xor-1.0.3.tgz",\n      "integrity": "sha1-JuYe0UIvtw3ULm42cp7VHYVf6Nk="\n    },\n    "builtin-status-codes": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/builtin-status-codes/-/builtin-status-codes-3.0.0.tgz",\n      "integrity": "sha1-hZgoeOIbmOHGZCXgPQF0eI9Wnug="\n    },\n    "bytes": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.0.0.tgz",\n      "integrity": "sha1-0ygVQE1olpn4Wk6k+odV3ROpYEg="\n    },\n    "cacache": {\n      "version": "11.3.2",\n      "resolved": "https://registry.npmjs.org/cacache/-/cacache-11.3.2.tgz",\n      "integrity": "sha512-E0zP4EPGDOaT2chM08Als91eYnf8Z+eH1awwwVsngUmgppfM5jjJ8l3z5vO5p5w/I3LsiXawb1sW0VY65pQABg==",\n      "requires": {\n        "bluebird": "3.5.3",\n        "chownr": "1.1.1",\n        "figgy-pudding": "3.5.1",\n        "glob": "7.1.3",\n        "graceful-fs": "4.1.15",\n        "lru-cache": "5.1.1",\n        "mississippi": "3.0.0",\n        "mkdirp": "0.5.1",\n        "move-concurrently": "1.0.1",\n        "promise-inflight": "1.0.1",\n        "rimraf": "2.6.2",\n        "ssri": "6.0.1",\n        "unique-filename": "1.1.1",\n        "y18n": "4.0.0"\n      }\n    },\n    "cache-base": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz",\n      "integrity": "sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==",\n      "requires": {\n        "collection-visit": "1.0.0",\n        "component-emitter": "1.2.1",\n        "get-value": "2.0.6",\n        "has-value": "1.0.0",\n        "isobject": "3.0.1",\n        "set-value": "2.0.0",\n        "to-object-path": "0.3.0",\n        "union-value": "1.0.0",\n        "unset-value": "1.0.0"\n      }\n    },\n    "call-me-maybe": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz",\n      "integrity": "sha1-JtII6onje1y95gJQoV8DHBak1ms="\n    },\n    "caller-callsite": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/caller-callsite/-/caller-callsite-2.0.0.tgz",\n      "integrity": "sha1-hH4PzgoiN1CpoCfFSzNzGtMVQTQ=",\n      "requires": {\n        "callsites": "2.0.0"\n      }\n    },\n    "caller-path": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/caller-path/-/caller-path-2.0.0.tgz",\n      "integrity": "sha1-Ro+DBE42mrIBD6xfBs7uFbsssfQ=",\n      "requires": {\n        "caller-callsite": "2.0.0"\n      }\n    },\n    "callsites": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/callsites/-/callsites-2.0.0.tgz",\n      "integrity": "sha1-BuuE8A7qQT2oav/vrL/7Ngk7PFA="\n    },\n    "camel-case": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/camel-case/-/camel-case-3.0.0.tgz",\n      "integrity": "sha1-yjw2iKTpzzpM2nd9xNy8cTJJz3M=",\n      "requires": {\n        "no-case": "2.2.0",\n        "upper-case": "1.1.1"\n      }\n    },\n    "camelcase": {\n      "version": "5.3.1",\n      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz",\n      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg=="\n    },\n    "caniuse-api": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/caniuse-api/-/caniuse-api-3.0.0.tgz",\n      "integrity": "sha512-bsTwuIg/BZZK/vreVTYYbSWoe2F+71P7K5QGEX+pT250DZbfU1MQ5prOKpPR+LL6uWKK3KMwMCAS74QB3Um1uw==",\n      "requires": {\n        "browserslist": "4.0.0",\n        "caniuse-lite": "1.0.0",\n        "lodash.memoize": "4.1.2",\n        "lodash.uniq": "4.5.0"\n      }\n    },\n    "caniuse-lite": {\n      "version": "1.0.30000962",\n      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30000962.tgz",\n      "integrity": "sha512-WXYsW38HK+6eaj5IZR16Rn91TGhU3OhbwjKZvJ4HN/XBIABLKfbij9Mnd3pM0VEwZSlltWjoWg3I8FQ0DGgNOA=="\n    },\n    "capture-exit": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/capture-exit/-/capture-exit-2.0.0.tgz",\n      "integrity": "sha512-PiT/hQmTonHhl/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbduLeeBkxEaYXUOUrRq6g==",\n      "requires": {\n        "rsvp": "4.8.4"\n      }\n    },\n    "case-sensitive-paths-webpack-plugin": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/case-sensitive-paths-webpack-plugin/-/case-sensitive-paths-webpack-plugin-2.2.0.tgz",\n      "integrity": "sha512-u5ElzokS8A1pm9vM3/iDgTcI3xqHxuCao94Oz8etI3cf0Tio0p8izkDYbTIn09uP3yUUr6+veaE6IkjnTYS46g=="\n    },\n    "caseless": {\n      "version": "0.12.0",\n      "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",\n      "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="\n    },\n    "ccount": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/ccount/-/ccount-1.0.3.tgz",\n      "integrity": "sha512-Jt9tIBkRc9POUof7QA/VwWd+58fKkEEfI+/t1/eOlxKM7ZhrczNzMFefge7Ai+39y1pR/pP6cI19guHy3FSLmw=="\n    },\n    "center-align": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/center-align/-/center-align-0.1.3.tgz",\n      "integrity": "sha1-qg0yYptu6XIgBBHL1EYckHvCt60=",\n      "requires": {\n        "align-text": "0.1.3",\n        "lazy-cache": "1.0.3"\n      }\n    },\n    "chain-function": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/chain-function/-/chain-function-1.0.1.tgz",\n      "integrity": "sha512-SxltgMwL9uCko5/ZCLiyG2B7R9fY4pDZUw7hJ4MhirdjBLosoDqkWABi3XMucddHdLiFJMb7PD2MZifZriuMTg==",\n      "dev": true\n    },\n    "chalk": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",\n      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",\n      "requires": {\n        "ansi-styles": "3.2.1",\n        "escape-string-regexp": "1.0.5",\n        "supports-color": "5.3.0"\n      }\n    },\n    "change-emitter": {\n      "version": "0.1.6",\n      "resolved": "https://registry.npmjs.org/change-emitter/-/change-emitter-0.1.6.tgz",\n      "integrity": "sha1-6LL+PX8at9aaMhma/5HqaTFAlRU="\n    },\n    "chardet": {\n      "version": "0.7.0",\n      "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.7.0.tgz",\n      "integrity": "sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA=="\n    },\n    "chokidar": {\n      "version": "2.1.5",\n      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-2.1.5.tgz",\n      "integrity": "sha512-i0TprVWp+Kj4WRPtInjexJ8Q+BqTE909VpH8xVhXrJkoc5QC8VO9TryGOqTr+2hljzc1sC62t22h5tZePodM/A==",\n      "requires": {\n        "anymatch": "2.0.0",\n        "async-each": "1.0.1",\n        "braces": "2.3.2",\n        "fsevents": "1.2.7",\n        "glob-parent": "3.1.0",\n        "inherits": "2.0.3",\n        "is-binary-path": "1.0.0",\n        "is-glob": "4.0.0",\n        "normalize-path": "3.0.0",\n        "path-is-absolute": "1.0.0",\n        "readdirp": "2.2.1",\n        "upath": "1.1.1"\n      },\n      "dependencies": {\n        "fsevents": {\n          "version": "1.2.8",\n          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.8.tgz",\n          "integrity": "sha512-tPvHgPGB7m40CZ68xqFGkKuzN+RnpGmSV+hgeKxhRpbxdqKXUFJGC3yonBOLzQBcJyGpdZFDfCsdOC2KFsXzeA==",\n          "optional": true,\n          "requires": {\n            "nan": "2.12.1",\n            "node-pre-gyp": "0.12.0"\n          },\n          "dependencies": {\n            "abbrev": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "ansi-regex": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true,\n              "optional": true\n            },\n            "are-we-there-yet": {\n              "version": "1.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "delegates": "1.0.0",\n                "readable-stream": "2.0.6"\n              }\n            },\n            "balanced-match": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "brace-expansion": {\n              "version": "1.1.11",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "balanced-match": "1.0.0",\n                "concat-map": "0.0.1"\n              }\n            },\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "code-point-at": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "concat-map": {\n              "version": "0.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "console-control-strings": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "core-util-is": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "debug": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ms": "2.1.1"\n              }\n            },\n            "deep-extend": {\n              "version": "0.6.0",\n              "bundled": true,\n              "optional": true\n            },\n            "delegates": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "detect-libc": {\n              "version": "1.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "fs-minipass": {\n              "version": "1.2.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "2.2.1"\n              }\n            },\n            "fs.realpath": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "gauge": {\n              "version": "2.7.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "aproba": "1.0.3",\n                "console-control-strings": "1.0.0",\n                "has-unicode": "2.0.0",\n                "object-assign": "4.1.0",\n                "signal-exit": "3.0.0",\n                "string-width": "1.0.1",\n                "strip-ansi": "3.0.1",\n                "wide-align": "1.1.0"\n              }\n            },\n            "glob": {\n              "version": "7.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "fs.realpath": "1.0.0",\n                "inflight": "1.0.4",\n                "inherits": "2",\n                "minimatch": "3.0.4",\n                "once": "1.3.0",\n                "path-is-absolute": "1.0.0"\n              }\n            },\n            "has-unicode": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "iconv-lite": {\n              "version": "0.4.24",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safer-buffer": ">= 2.1.2 < 3"\n              }\n            },\n            "ignore-walk": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimatch": "3.0.4"\n              }\n            },\n            "inflight": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "once": "1.3.0",\n                "wrappy": "1"\n              }\n            },\n            "inherits": {\n              "version": "2.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "ini": {\n              "version": "1.3.5",\n              "bundled": true,\n              "optional": true\n            },\n            "is-fullwidth-code-point": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "number-is-nan": "1.0.0"\n              }\n            },\n            "isarray": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "minimatch": {\n              "version": "3.0.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "brace-expansion": "1.1.7"\n              }\n            },\n            "minimist": {\n              "version": "0.0.8",\n              "bundled": true,\n              "optional": true\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "5.1.2",\n                "yallist": "3.0.0"\n              }\n            },\n            "minizlib": {\n              "version": "1.2.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "2.2.1"\n              }\n            },\n            "mkdirp": {\n              "version": "0.5.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimist": "0.0.8"\n              }\n            },\n            "ms": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "needle": {\n              "version": "2.3.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "debug": "4.1.0",\n                "iconv-lite": "0.4.4",\n                "sax": "1.2.4"\n              }\n            },\n            "node-pre-gyp": {\n              "version": "0.12.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "detect-libc": "1.0.2",\n                "mkdirp": "0.5.1",\n                "needle": "2.2.1",\n                "nopt": "4.0.1",\n                "npm-packlist": "1.1.6",\n                "npmlog": "4.0.2",\n                "rc": "1.2.7",\n                "rimraf": "2.6.1",\n                "semver": "5.3.0",\n                "tar": "4"\n              }\n            },\n            "nopt": {\n              "version": "4.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "abbrev": "1",\n                "osenv": "0.1.4"\n              }\n            },\n            "npm-bundled": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true\n            },\n            "npm-packlist": {\n              "version": "1.4.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ignore-walk": "3.0.1",\n                "npm-bundled": "1.0.1"\n              }\n            },\n            "npmlog": {\n              "version": "4.1.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "are-we-there-yet": "~1.1.2",\n                "console-control-strings": "~1.1.0",\n                "gauge": "~2.7.3",\n                "set-blocking": "~2.0.0"\n              }\n            },\n            "number-is-nan": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "object-assign": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "once": {\n              "version": "1.4.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "wrappy": "1"\n              }\n            },\n            "os-homedir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "os-tmpdir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "osenv": {\n              "version": "0.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "os-homedir": "1.0.0",\n                "os-tmpdir": "1.0.0"\n              }\n            },\n            "path-is-absolute": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "process-nextick-args": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "rc": {\n              "version": "1.2.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "deep-extend": "0.6.0",\n                "ini": "~1.3.0",\n                "minimist": "1.2.0",\n                "strip-json-comments": "~2.0.1"\n              },\n              "dependencies": {\n                "minimist": {\n                  "version": "1.2.0",\n                  "bundled": true,\n                  "optional": true\n                }\n              }\n            },\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "rimraf": {\n              "version": "2.6.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "glob": "7.1.3"\n              }\n            },\n            "safe-buffer": {\n              "version": "5.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "safer-buffer": {\n              "version": "2.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "sax": {\n              "version": "1.2.4",\n              "bundled": true,\n              "optional": true\n            },\n            "semver": {\n              "version": "5.7.0",\n              "bundled": true,\n              "optional": true\n            },\n            "set-blocking": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "signal-exit": {\n              "version": "3.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "code-point-at": "1.0.0",\n                "is-fullwidth-code-point": "1.0.0",\n                "strip-ansi": "3.0.0"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            },\n            "strip-ansi": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ansi-regex": "2.0.0"\n              }\n            },\n            "strip-json-comments": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "tar": {\n              "version": "4.4.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "chownr": "1.1.1",\n                "fs-minipass": "1.2.5",\n                "minipass": "2.3.4",\n                "minizlib": "1.1.1",\n                "mkdirp": "0.5.0",\n                "safe-buffer": "5.1.2",\n                "yallist": "3.0.2"\n              }\n            },\n            "util-deprecate": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "wide-align": {\n              "version": "1.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "string-width": "1.0.2 || 2"\n              }\n            },\n            "wrappy": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true,\n              "optional": true\n            }\n          }\n        },\n        "normalize-path": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",\n          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="\n        }\n      }\n    },\n    "chownr": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.1.tgz",\n      "integrity": "sha512-j38EvO5+LHX84jlo6h4UzmOwi0UgW61WRyPtJz4qaadK5eY3BTS5TY/S1Stc3Uk2lIM6TPevAlULiEJwie860g=="\n    },\n    "chrome-trace-event": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.0.tgz",\n      "integrity": "sha512-xDbVgyfDTT2piup/h8dK/y4QZfJRSa73bw1WZ8b4XM1o7fsFubUVGYcE+1ANtOzJJELGpYoG2961z0Z6OAld9A==",\n      "requires": {\n        "tslib": "1.9.0"\n      }\n    },\n    "ci-info": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/ci-info/-/ci-info-2.0.0.tgz",\n      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1/Z8wZzYPxqUrXeBboCQ=="\n    },\n    "cipher-base": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/cipher-base/-/cipher-base-1.0.4.tgz",\n      "integrity": "sha512-Kkht5ye6ZGmwv40uUDZztayT2ThLQGfnj/T71N/XzeZeo3nf8foyW7zGTsPYkEya3m5f3cAypH+qe7YOrM1U2Q==",\n      "requires": {\n        "inherits": "2.0.1",\n        "safe-buffer": "5.0.1"\n      }\n    },\n    "class-utils": {\n      "version": "0.3.6",\n      "resolved": "https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz",\n      "integrity": "sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==",\n      "requires": {\n        "arr-union": "3.1.0",\n        "define-property": "0.2.5",\n        "isobject": "3.0.0",\n        "static-extend": "0.1.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "0.1.0"\n          }\n        }\n      }\n    },\n    "classnames": {\n      "version": "2.2.6",\n      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.2.6.tgz",\n      "integrity": "sha512-JR/iSQOSt+LQIWwrwEzJ9uk0xfN3mTVYMwt1Ir5mUcSN6pU+V4zQFFaJsclJbPuAUQH+yfWef6tm7l1quW3C8Q=="\n    },\n    "clean-css": {\n      "version": "4.2.1",\n      "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-4.2.1.tgz",\n      "integrity": "sha512-4ZxI6dy4lrY6FHzfiy1aEOXgu4LIsW2MhwG0VBKdcoGoH/XLFgaHSdLTGr4O8Be6A8r3MOphEiI8Gc1n0ecf3g==",\n      "requires": {\n        "source-map": "~0.6.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "cli-cursor": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz",\n      "integrity": "sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=",\n      "requires": {\n        "restore-cursor": "2.0.0"\n      }\n    },\n    "cli-table": {\n      "version": "0.3.1",\n      "resolved": "https://registry.npmjs.org/cli-table/-/cli-table-0.3.1.tgz",\n      "integrity": "sha1-9TsFJmqLGguTSz0IIebi3FkUriM=",\n      "requires": {\n        "colors": "1.0.3"\n      }\n    },\n    "cli-width": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/cli-width/-/cli-width-2.2.0.tgz",\n      "integrity": "sha1-/xnt6Kml5XkyQUewwR8PvLq+1jk="\n    },\n    "cliui": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/cliui/-/cliui-4.1.0.tgz",\n      "integrity": "sha512-4FG+RSG9DL7uEwRUZXZn3SS34DiDPfzP0VOiEwtUWlE+AR2EIg+hSyvrIgUUfhdgR/UkAeW2QHgeP+hWrXs7jQ==",\n      "requires": {\n        "string-width": "2.1.1",\n        "strip-ansi": "4.0.0",\n        "wrap-ansi": "2.0.0"\n      }\n    },\n    "clone": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/clone/-/clone-1.0.4.tgz",\n      "integrity": "sha1-2jCcwmPfFZlMaIypAheco8fNfH4="\n    },\n    "clone-buffer": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/clone-buffer/-/clone-buffer-1.0.0.tgz",\n      "integrity": "sha1-4+JbIHrE5wGvch4staFnksrD3Fg="\n    },\n    "clone-deep": {\n      "version": "0.2.4",\n      "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-0.2.4.tgz",\n      "integrity": "sha1-TnPdCen7lxzDhnDF3O2cGJZIHMY=",\n      "requires": {\n        "for-own": "0.1.3",\n        "is-plain-object": "2.0.1",\n        "kind-of": "3.0.2",\n        "lazy-cache": "1.0.3",\n        "shallow-clone": "0.1.2"\n      }\n    },\n    "clone-stats": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-0.0.1.tgz",\n      "integrity": "sha1-uI+UqCzzi4eR1YBG6kAprYjKmdE="\n    },\n    "cloneable-readable": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/cloneable-readable/-/cloneable-readable-1.1.2.tgz",\n      "integrity": "sha512-Bq6+4t+lbM8vhTs/Bef5c5AdEMtapp/iFb6+s4/Hh9MVTt8OLKH7ZOOZSCT+Ys7hsHvqv0GuMPJ1lnQJVHvxpg==",\n      "requires": {\n        "inherits": "2.0.1",\n        "process-nextick-args": "2.0.0",\n        "readable-stream": "2.3.5"\n      }\n    },\n    "co": {\n      "version": "4.6.0",\n      "resolved": "https://registry.npmjs.org/co/-/co-4.6.0.tgz",\n      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ="\n    },\n    "coa": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/coa/-/coa-2.0.2.tgz",\n      "integrity": "sha512-q5/jG+YQnSy4nRTV4F7lPepBJZ8qBNJJDBuJdoejDyLXgmL7IEo+Le2JDZudFTFt7mrCqIRaSjws4ygRCTCAXA==",\n      "requires": {\n        "@types/q": "1.5.1",\n        "chalk": "2.4.1",\n        "q": "1.1.2"\n      }\n    },\n    "code-point-at": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/code-point-at/-/code-point-at-1.1.0.tgz",\n      "integrity": "sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c="\n    },\n    "collection-map": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/collection-map/-/collection-map-1.0.0.tgz",\n      "integrity": "sha1-rqDwb40mx4DCt1SUOFVEsiVa8Yw=",\n      "requires": {\n        "arr-map": "2.0.2",\n        "for-own": "1.0.0",\n        "make-iterator": "1.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "1.0.1"\n          }\n        }\n      }\n    },\n    "collection-visit": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz",\n      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",\n      "requires": {\n        "map-visit": "1.0.0",\n        "object-visit": "1.0.0"\n      }\n    },\n    "color": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/color/-/color-3.1.0.tgz",\n      "integrity": "sha512-CwyopLkuRYO5ei2EpzpIh6LqJMt6Mt+jZhO5VI5f/wJLZriXQE32/SSqzmrh+QB+AZT81Cj8yv+7zwToW8ahZg==",\n      "requires": {\n        "color-convert": "1.9.1",\n        "color-string": "1.5.2"\n      }\n    },\n    "color-convert": {\n      "version": "1.9.3",\n      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",\n      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",\n      "requires": {\n        "color-name": "1.1.3"\n      }\n    },\n    "color-name": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",\n      "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="\n    },\n    "color-string": {\n      "version": "1.5.3",\n      "resolved": "https://registry.npmjs.org/color-string/-/color-string-1.5.3.tgz",\n      "integrity": "sha512-dC2C5qeWoYkxki5UAXapdjqO672AM4vZuPGRQfO8b5HKuKGBbKWpITyDYN7TOFKvRW7kOgAn3746clDBMDJyQw==",\n      "requires": {\n        "color-name": "1.0.0",\n        "simple-swizzle": "0.2.2"\n      }\n    },\n    "color-support": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/color-support/-/color-support-1.1.3.tgz",\n      "integrity": "sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg=="\n    },\n    "colors": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/colors/-/colors-1.0.3.tgz",\n      "integrity": "sha1-BDP0TYCWgP3rYO0mDxsMJi6CpAs="\n    },\n    "combined-stream": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.7.tgz",\n      "integrity": "sha512-brWl9y6vOB1xYPZcpZde3N9zDByXTosAeMDo4p1wzo6UMOX4vumB+TP1RZ76sfE6Md68Q0NJSrE/gbezd4Ul+w==",\n      "requires": {\n        "delayed-stream": "~1.0.0"\n      }\n    },\n    "comma-separated-tokens": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/comma-separated-tokens/-/comma-separated-tokens-1.0.6.tgz",\n      "integrity": "sha512-f20oA7jsrrmERTS70r3tmRSxR8IJV2MTN7qe6hzgX+3ARfXrdMJFvGWvWQK0xpcBurg9j9eO2MiqzZ8Y+/UPCA=="\n    },\n    "commander": {\n      "version": "2.20.0",\n      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.0.tgz",\n      "integrity": "sha512-7j2y+40w61zy6YC2iRNpUe/NwhNyoXrYpHMrSunaMG64nRnaf96zO/KMQR4OyN/UnE5KLyEBnKHd4aG3rskjpQ=="\n    },\n    "common-tags": {\n      "version": "1.8.0",\n      "resolved": "https://registry.npmjs.org/common-tags/-/common-tags-1.8.0.tgz",\n      "integrity": "sha512-6P6g0uetGpW/sdyUy/iQQCbFF0kWVMSIVSyYz7Zgjcgh8mgw8PQzDNZeyZ5DQ2gM7LBoZPHmnjz8rUthkBG5tw=="\n    },\n    "commondir": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz",\n      "integrity": "sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs="\n    },\n    "commoner": {\n      "version": "0.10.8",\n      "resolved": "https://registry.npmjs.org/commoner/-/commoner-0.10.8.tgz",\n      "integrity": "sha1-NPw2cs0kOT6LtH5wyqApOBH08sU=",\n      "requires": {\n        "commander": "2.5.0",\n        "detective": "4.3.1",\n        "glob": "5.0.15",\n        "graceful-fs": "4.1.2",\n        "iconv-lite": "0.4.5",\n        "mkdirp": "0.5.0",\n        "private": "0.1.6",\n        "q": "1.1.2",\n        "recast": "0.11.17"\n      },\n      "dependencies": {\n        "glob": {\n          "version": "5.0.15",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-5.0.15.tgz",\n          "integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",\n          "requires": {\n            "inflight": "1.0.4",\n            "inherits": "2",\n            "minimatch": "2 || 3",\n            "once": "1.3.0",\n            "path-is-absolute": "1.0.0"\n          }\n        }\n      }\n    },\n    "compare-versions": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/compare-versions/-/compare-versions-3.4.0.tgz",\n      "integrity": "sha512-tK69D7oNXXqUW3ZNo/z7NXTEz22TCF0pTE+YF9cxvaAM9XnkLo1fV621xCLrRR6aevJlKxExkss0vWqUCUpqdg=="\n    },\n    "component-emitter": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",\n      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg=="\n    },\n    "compressible": {\n      "version": "2.0.16",\n      "resolved": "https://registry.npmjs.org/compressible/-/compressible-2.0.16.tgz",\n      "integrity": "sha512-JQfEOdnI7dASwCuSPWIeVYwc/zMsu/+tRhoUvEfXz2gxOA2DNjmG5vhtFdBlhWPPGo+RdT9S3tgc/uH5qgDiiA==",\n      "requires": {\n        "mime-db": ">= 1.38.0 < 2"\n      }\n    },\n    "compression": {\n      "version": "1.7.4",\n      "resolved": "https://registry.npmjs.org/compression/-/compression-1.7.4.tgz",\n      "integrity": "sha512-jaSIDzP9pZVS4ZfQ+TzvtiWhdpFhE2RDHz8QJkpX9SIpLq88VueF5jJw6t+6CUQcAoA6t+x89MLrWAqpfDE8iQ==",\n      "requires": {\n        "accepts": "~1.3.5",\n        "bytes": "3.0.0",\n        "compressible": "~2.0.16",\n        "debug": "2.6.9",\n        "on-headers": "~1.0.2",\n        "safe-buffer": "5.1.2",\n        "vary": "~1.1.2"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "concat-map": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",\n      "integrity": "sha1-2Klr13/Wjfd5OnMDajug1UBdR3s="\n    },\n    "concat-stream": {\n      "version": "1.6.2",\n      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",\n      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",\n      "requires": {\n        "buffer-from": "1.0.0",\n        "inherits": "2.0.3",\n        "readable-stream": "2.2.2",\n        "typedarray": "0.0.6"\n      }\n    },\n    "concat-with-sourcemaps": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/concat-with-sourcemaps/-/concat-with-sourcemaps-1.1.0.tgz",\n      "integrity": "sha512-4gEjHJFT9e+2W/77h/DS5SGUgwDaOwprX8L/gl5+3ixnzkVJJsZWDSelmN3Oilw3LNDZjZV0yqH1hLG3k6nghg==",\n      "requires": {\n        "source-map": "0.6.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "config-chain": {\n      "version": "1.1.12",\n      "resolved": "https://registry.npmjs.org/config-chain/-/config-chain-1.1.12.tgz",\n      "integrity": "sha512-a1eOIcu8+7lUInge4Rpf/n4Krkf3Dd9lqhljRzII1/Zno/kRtUWnznPO3jOKBmTEktkt3fkxisUcivoj0ebzoA==",\n      "requires": {\n        "ini": "1.3.4",\n        "proto-list": "~1.2.1"\n      }\n    },\n    "confusing-browser-globals": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/confusing-browser-globals/-/confusing-browser-globals-1.0.7.tgz",\n      "integrity": "sha512-cgHI1azax5ATrZ8rJ+ODDML9Fvu67PimB6aNxBrc/QwSaDaM9eTfIEUHx3bBLJJ82ioSb+/5zfsMCCEJax3ByQ=="\n    },\n    "connect-history-api-fallback": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",\n      "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg=="\n    },\n    "console-browserify": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/console-browserify/-/console-browserify-1.1.0.tgz",\n      "integrity": "sha1-8CQcRXMKn8YyOyBtvzjtx0HQuxA=",\n      "requires": {\n        "date-now": "0.1.4"\n      }\n    },\n    "constants-browserify": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/constants-browserify/-/constants-browserify-1.0.0.tgz",\n      "integrity": "sha1-wguW2MYXdIqvHBYCF2DNJ/y4y3U="\n    },\n    "contains-path": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/contains-path/-/contains-path-0.1.0.tgz",\n      "integrity": "sha1-/ozxhP9mcLa67wGp1IYaXL7EEgo="\n    },\n    "content-disposition": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.2.tgz",\n      "integrity": "sha1-DPaLud318r55YcOoUXjLhdunjLQ="\n    },\n    "content-type": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.4.tgz",\n      "integrity": "sha512-hIP3EEPs8tB9AT1L+NUqtwOAps4mk2Zob89MWXMHjHWg9milF/j4osnnQLXBCBFBk/tvIG/tUc9mOUJiPBhPXA=="\n    },\n    "convert-source-map": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-1.6.0.tgz",\n      "integrity": "sha512-eFu7XigvxdZ1ETfbgPBohgyQ/Z++C0eEhTor0qRwBw9unw+L0/6V8wkSuGgzdThkiS5lSpdptOQPD8Ak40a+7A==",\n      "requires": {\n        "safe-buffer": "~5.1.1"\n      }\n    },\n    "cookie": {\n      "version": "0.3.1",\n      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.3.1.tgz",\n      "integrity": "sha1-5+Ch+e9DtMi6klxcWpboBtFoc7s="\n    },\n    "cookie-signature": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",\n      "integrity": "sha1-4wOogrNCzD7oylE6eZmXNNqzriw="\n    },\n    "copy-concurrently": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/copy-concurrently/-/copy-concurrently-1.0.5.tgz",\n      "integrity": "sha512-f2domd9fsVDFtaFcbaRZuYXwtdmnzqbADSwhSWYxYB/Q8zsdUUFMXVRwXGDMWmbEzAn1kdRrtI1T/KTFOL4X2A==",\n      "requires": {\n        "aproba": "1.1.1",\n        "fs-write-stream-atomic": "1.0.8",\n        "iferr": "0.1.5",\n        "mkdirp": "0.5.1",\n        "rimraf": "2.5.4",\n        "run-queue": "1.0.0"\n      }\n    },\n    "copy-descriptor": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz",\n      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40="\n    },\n    "copy-props": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/copy-props/-/copy-props-2.0.4.tgz",\n      "integrity": "sha512-7cjuUME+p+S3HZlbllgsn2CDwS+5eCCX16qBgNC4jgSTf49qR1VKy/Zhl400m0IQXl/bPGEVqncgUUMjrr4s8A==",\n      "requires": {\n        "each-props": "1.3.0",\n        "is-plain-object": "2.0.1"\n      }\n    },\n    "core-js": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.0.1.tgz",\n      "integrity": "sha512-sco40rF+2KlE0ROMvydjkrVMMG1vYilP2ALoRXcYR4obqbYIuV3Bg+51GEDW+HF8n7NRA+iaA4qD0nD9lo9mew=="\n    },\n    "core-js-compat": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/core-js-compat/-/core-js-compat-3.0.1.tgz",\n      "integrity": "sha512-2pC3e+Ht/1/gD7Sim/sqzvRplMiRnFQVlPpDVaHtY9l7zZP7knamr3VRD6NyGfHd84MrDC0tAM9ulNxYMW0T3g==",\n      "requires": {\n        "browserslist": "4.5.4",\n        "core-js": "3.0.1",\n        "core-js-pure": "3.0.1",\n        "semver": "6.0.0"\n      }\n    },\n    "core-js-pure": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/core-js-pure/-/core-js-pure-3.0.1.tgz",\n      "integrity": "sha512-mSxeQ6IghKW3MoyF4cz19GJ1cMm7761ON+WObSyLfTu/Jn3x7w4NwNFnrZxgl4MTSvYYepVLNuRtlB4loMwJ5g=="\n    },\n    "core-util-is": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",\n      "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="\n    },\n    "cosmiconfig": {\n      "version": "5.2.0",\n      "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-5.2.0.tgz",\n      "integrity": "sha512-nxt+Nfc3JAqf4WIWd0jXLjTJZmsPLrA9DDc4nRw2KFJQJK7DNooqSXrNI7tzLG50CF8axczly5UV929tBmh/7g==",\n      "requires": {\n        "import-fresh": "2.0.0",\n        "is-directory": "0.3.1",\n        "js-yaml": "3.13.0",\n        "parse-json": "4.0.0"\n      }\n    },\n    "create-ecdh": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/create-ecdh/-/create-ecdh-4.0.3.tgz",\n      "integrity": "sha512-GbEHQPMOswGpKXM9kCWVrremUcBmjteUaQ01T9rkKCPDXfUHX0IoP9LpHYo2NPFampa4e+/pFDc3jQdxrxQLaw==",\n      "requires": {\n        "bn.js": "4.1.0",\n        "elliptic": "6.0.0"\n      }\n    },\n    "create-emotion": {\n      "version": "9.2.12",\n      "resolved": "https://registry.npmjs.org/create-emotion/-/create-emotion-9.2.12.tgz",\n      "integrity": "sha512-P57uOF9NL2y98Xrbl2OuiDQUZ30GVmASsv5fbsjF4Hlraip2kyAvMm+2PoYUvFFw03Fhgtxk3RqZSm2/qHL9hA==",\n      "requires": {\n        "@emotion/hash": "0.6.2",\n        "@emotion/memoize": "0.6.1",\n        "@emotion/stylis": "0.7.0",\n        "@emotion/unitless": "0.6.2",\n        "csstype": "2.5.2",\n        "stylis": "3.5.0",\n        "stylis-rule-sheet": "0.0.10"\n      }\n    },\n    "create-hash": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/create-hash/-/create-hash-1.2.0.tgz",\n      "integrity": "sha512-z00bCGNHDG8mHAkP7CtT1qVu+bFQUPjYq/4Iv3C3kWjTFV10zIjfSoeqXo9Asws8gwSHDGj/hl2u4OGIjapeCg==",\n      "requires": {\n        "cipher-base": "1.0.1",\n        "inherits": "2.0.1",\n        "md5.js": "1.3.4",\n        "ripemd160": "2.0.1",\n        "sha.js": "2.4.0"\n      }\n    },\n    "create-hmac": {\n      "version": "1.1.7",\n      "resolved": "https://registry.npmjs.org/create-hmac/-/create-hmac-1.1.7.tgz",\n      "integrity": "sha512-MJG9liiZ+ogc4TzUwuvbER1JRdgvUFSB5+VR/g5h82fGaIRWMWddtKBHi7/sVhfjQZ6SehlyhvQYrcYkaUIpLg==",\n      "requires": {\n        "cipher-base": "1.0.3",\n        "create-hash": "1.1.0",\n        "inherits": "2.0.1",\n        "ripemd160": "2.0.0",\n        "safe-buffer": "5.0.1",\n        "sha.js": "2.4.8"\n      }\n    },\n    "cross-spawn": {\n      "version": "6.0.5",\n      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-6.0.5.tgz",\n      "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cqLYLdtrGqRf8mBPmzwSpWQ==",\n      "requires": {\n        "nice-try": "1.0.4",\n        "path-key": "2.0.1",\n        "semver": "5.5.0",\n        "shebang-command": "1.2.0",\n        "which": "1.2.9"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "crypto-browserify": {\n      "version": "3.12.0",\n      "resolved": "https://registry.npmjs.org/crypto-browserify/-/crypto-browserify-3.12.0.tgz",\n      "integrity": "sha512-fz4spIh+znjO2VjL+IdhEpRJ3YN6sMzITSBijk6FK2UvTqruSQW+/cCZTSNsMiZNvUeq0CqurF+dAbyiGOY6Wg==",\n      "requires": {\n        "browserify-cipher": "1.0.0",\n        "browserify-sign": "4.0.0",\n        "create-ecdh": "4.0.0",\n        "create-hash": "1.1.0",\n        "create-hmac": "1.1.0",\n        "diffie-hellman": "5.0.0",\n        "inherits": "2.0.1",\n        "pbkdf2": "3.0.3",\n        "public-encrypt": "4.0.0",\n        "randombytes": "2.0.0",\n        "randomfill": "1.0.3"\n      }\n    },\n    "css": {\n      "version": "2.2.4",\n      "resolved": "https://registry.npmjs.org/css/-/css-2.2.4.tgz",\n      "integrity": "sha512-oUnjmWpy0niI3x/mPL8dVEI1l7MnG3+HHyRPHf+YFSbK+svOhXpmSOcDURUh2aOCgl2grzrOPt1nHLuCVFULLw==",\n      "requires": {\n        "inherits": "2.0.3",\n        "source-map": "0.6.1",\n        "source-map-resolve": "0.5.2",\n        "urix": "0.1.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "css-blank-pseudo": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/css-blank-pseudo/-/css-blank-pseudo-0.1.4.tgz",\n      "integrity": "sha512-LHz35Hr83dnFeipc7oqFDmsjHdljj3TQtxGGiNWSOsTLIAubSm4TEz8qCaKFpk7idaQ1GfWscF4E6mgpBysA1w==",\n      "requires": {\n        "postcss": "7.0.5"\n      }\n    },\n    "css-color-names": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/css-color-names/-/css-color-names-0.0.4.tgz",\n      "integrity": "sha1-gIrcLnnPhHOAabZGyyDsJ762KeA="\n    },\n    "css-declaration-sorter": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/css-declaration-sorter/-/css-declaration-sorter-4.0.1.tgz",\n      "integrity": "sha512-BcxQSKTSEEQUftYpBVnsH4SF05NTuBokb19/sBt6asXGKZ/6VP7PLG1CBCkFDYOnhXhPh0jMhO6xZ71oYHXHBA==",\n      "requires": {\n        "postcss": "7.0.1",\n        "timsort": "0.3.0"\n      }\n    },\n    "css-has-pseudo": {\n      "version": "0.10.0",\n      "resolved": "https://registry.npmjs.org/css-has-pseudo/-/css-has-pseudo-0.10.0.tgz",\n      "integrity": "sha512-Z8hnfsZu4o/kt+AuFzeGpLVhFOGO9mluyHBaA2bA8aCGTwah5sT3WV/fTHH8UNZUytOIImuGPrl/prlb4oX4qQ==",\n      "requires": {\n        "postcss": "7.0.6",\n        "postcss-selector-parser": "5.0.0-rc.4"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "2.0.0",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "css-in-js-utils": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/css-in-js-utils/-/css-in-js-utils-2.0.1.tgz",\n      "integrity": "sha512-PJF0SpJT+WdbVVt0AOYp9C8GnuruRlL/UFW7932nLWmFLQTaWEzTBQEx7/hn4BuV+WON75iAViSUJLiU3PKbpA==",\n      "dev": true,\n      "requires": {\n        "hyphenate-style-name": "1.0.2",\n        "isobject": "3.0.1"\n      }\n    },\n    "css-loader": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/css-loader/-/css-loader-2.1.1.tgz",\n      "integrity": "sha512-OcKJU/lt232vl1P9EEDamhoO9iKY3tIjY5GU+XDLblAykTdgs6Ux9P1hTHve8nFKy5KPpOXOsVI/hIwi3841+w==",\n      "requires": {\n        "camelcase": "5.2.0",\n        "icss-utils": "4.1.0",\n        "loader-utils": "1.2.3",\n        "normalize-path": "3.0.0",\n        "postcss": "7.0.14",\n        "postcss-modules-extract-imports": "2.0.0",\n        "postcss-modules-local-by-default": "2.0.6",\n        "postcss-modules-scope": "2.1.0",\n        "postcss-modules-values": "2.0.0",\n        "postcss-value-parser": "3.3.0",\n        "schema-utils": "1.0.0"\n      },\n      "dependencies": {\n        "normalize-path": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",\n          "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA=="\n        }\n      }\n    },\n    "css-prefers-color-scheme": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/css-prefers-color-scheme/-/css-prefers-color-scheme-3.1.1.tgz",\n      "integrity": "sha512-MTu6+tMs9S3EUqzmqLXEcgNRbNkkD/TGFvowpeoWJn5Vfq7FMgsmRQs9X5NXAURiOBmOxm/lLjsDNXDE6k9bhg==",\n      "requires": {\n        "postcss": "7.0.5"\n      }\n    },\n    "css-select": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/css-select/-/css-select-2.0.2.tgz",\n      "integrity": "sha512-dSpYaDVoWaELjvZ3mS6IKZM/y2PMPa/XYoEfYNZePL4U/XgyxZNroHEHReDx/d+VgXh9VbCTtFqLkFbmeqeaRQ==",\n      "requires": {\n        "boolbase": "1.0.0",\n        "css-what": "2.1.2",\n        "domutils": "1.7.0",\n        "nth-check": "1.0.2"\n      }\n    },\n    "css-select-base-adapter": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/css-select-base-adapter/-/css-select-base-adapter-0.1.1.tgz",\n      "integrity": "sha512-jQVeeRG70QI08vSTwf1jHxp74JoZsr2XSgETae8/xC8ovSnL2WF87GTLO86Sbwdt2lK4Umg4HnnwMO4YF3Ce7w=="\n    },\n    "css-tree": {\n      "version": "1.0.0-alpha.28",\n      "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.28.tgz",\n      "integrity": "sha512-joNNW1gCp3qFFzj4St6zk+Wh/NBv0vM5YbEreZk0SD4S23S+1xBKb6cLDg2uj4P4k/GUMlIm6cKIDqIG+vdt0w==",\n      "requires": {\n        "mdn-data": "~1.1.0",\n        "source-map": "0.5.3"\n      }\n    },\n    "css-unit-converter": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/css-unit-converter/-/css-unit-converter-1.1.1.tgz",\n      "integrity": "sha1-2bkoGtz9jO2TW9urqDeGiX9k6ZY="\n    },\n    "css-url-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/css-url-regex/-/css-url-regex-1.1.0.tgz",\n      "integrity": "sha1-g4NCMMyfdMRX3lnuvRVD/uuDt+w="\n    },\n    "css-vendor": {\n      "version": "0.3.8",\n      "resolved": "https://registry.npmjs.org/css-vendor/-/css-vendor-0.3.8.tgz",\n      "integrity": "sha1-ZCHP0wNM5mT+dnOXL9ARn8KJQfo=",\n      "requires": {\n        "is-in-browser": "1.0.2"\n      }\n    },\n    "css-what": {\n      "version": "2.1.3",\n      "resolved": "https://registry.npmjs.org/css-what/-/css-what-2.1.3.tgz",\n      "integrity": "sha512-a+EPoD+uZiNfh+5fxw2nO9QwFa6nJe2Or35fGY6Ipw1R3R4AGz1d1TEZrCegvw2YTmZ0jXirGYlzxxpYSHwpEg=="\n    },\n    "cssdb": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/cssdb/-/cssdb-4.4.0.tgz",\n      "integrity": "sha512-LsTAR1JPEM9TpGhl/0p3nQecC2LJ0kD8X5YARu1hk/9I1gril5vDtMZyNxcEpxxDj34YNck/ucjuoUd66K03oQ=="\n    },\n    "cssesc": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",\n      "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg=="\n    },\n    "cssnano": {\n      "version": "4.1.10",\n      "resolved": "https://registry.npmjs.org/cssnano/-/cssnano-4.1.10.tgz",\n      "integrity": "sha512-5wny+F6H4/8RgNlaqab4ktc3e0/blKutmq8yNlBFXA//nSFFAqAngjNVRzUvCgYROULmZZUoosL/KSoZo5aUaQ==",\n      "requires": {\n        "cosmiconfig": "5.0.0",\n        "cssnano-preset-default": "4.0.7",\n        "is-resolvable": "1.0.0",\n        "postcss": "7.0.0"\n      }\n    },\n    "cssnano-preset-default": {\n      "version": "4.0.7",\n      "resolved": "https://registry.npmjs.org/cssnano-preset-default/-/cssnano-preset-default-4.0.7.tgz",\n      "integrity": "sha512-x0YHHx2h6p0fCl1zY9L9roD7rnlltugGu7zXSKQx6k2rYw0Hi3IqxcoAGF7u9Q5w1nt7vK0ulxV8Lo+EvllGsA==",\n      "requires": {\n        "css-declaration-sorter": "4.0.1",\n        "cssnano-util-raw-cache": "4.0.1",\n        "postcss": "7.0.0",\n        "postcss-calc": "7.0.1",\n        "postcss-colormin": "4.0.3",\n        "postcss-convert-values": "4.0.1",\n        "postcss-discard-comments": "4.0.2",\n        "postcss-discard-duplicates": "4.0.2",\n        "postcss-discard-empty": "4.0.1",\n        "postcss-discard-overridden": "4.0.1",\n        "postcss-merge-longhand": "4.0.11",\n        "postcss-merge-rules": "4.0.3",\n        "postcss-minify-font-values": "4.0.2",\n        "postcss-minify-gradients": "4.0.2",\n        "postcss-minify-params": "4.0.2",\n        "postcss-minify-selectors": "4.0.2",\n        "postcss-normalize-charset": "4.0.1",\n        "postcss-normalize-display-values": "4.0.2",\n        "postcss-normalize-positions": "4.0.2",\n        "postcss-normalize-repeat-style": "4.0.2",\n        "postcss-normalize-string": "4.0.2",\n        "postcss-normalize-timing-functions": "4.0.2",\n        "postcss-normalize-unicode": "4.0.1",\n        "postcss-normalize-url": "4.0.1",\n        "postcss-normalize-whitespace": "4.0.2",\n        "postcss-ordered-values": "4.1.2",\n        "postcss-reduce-initial": "4.0.3",\n        "postcss-reduce-transforms": "4.0.2",\n        "postcss-svgo": "4.0.2",\n        "postcss-unique-selectors": "4.0.1"\n      }\n    },\n    "cssnano-util-get-arguments": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/cssnano-util-get-arguments/-/cssnano-util-get-arguments-4.0.0.tgz",\n      "integrity": "sha1-7ToIKZ8h11dBsg87gfGU7UnMFQ8="\n    },\n    "cssnano-util-get-match": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/cssnano-util-get-match/-/cssnano-util-get-match-4.0.0.tgz",\n      "integrity": "sha1-wOTKB/U4a7F+xeUiULT1lhNlFW0="\n    },\n    "cssnano-util-raw-cache": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/cssnano-util-raw-cache/-/cssnano-util-raw-cache-4.0.1.tgz",\n      "integrity": "sha512-qLuYtWK2b2Dy55I8ZX3ky1Z16WYsx544Q0UWViebptpwn/xDBmog2TLg4f+DBMg1rJ6JDWtn96WHbOKDWt1WQA==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "cssnano-util-same-parent": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/cssnano-util-same-parent/-/cssnano-util-same-parent-4.0.1.tgz",\n      "integrity": "sha512-WcKx5OY+KoSIAxBW6UBBRay1U6vkYheCdjyVNDm85zt5K9mHoGOfsOsqIszfAqrQQFIIKgjh2+FDgIj/zsl21Q=="\n    },\n    "csso": {\n      "version": "3.5.1",\n      "resolved": "https://registry.npmjs.org/csso/-/csso-3.5.1.tgz",\n      "integrity": "sha512-vrqULLffYU1Q2tLdJvaCYbONStnfkfimRxXNaGjxMldI0C7JPBC4rB1RyjhfdZ4m1frm8pM9uRPKH3d2knZ8gg==",\n      "requires": {\n        "css-tree": "1.0.0-alpha.29"\n      },\n      "dependencies": {\n        "css-tree": {\n          "version": "1.0.0-alpha.29",\n          "resolved": "https://registry.npmjs.org/css-tree/-/css-tree-1.0.0-alpha.29.tgz",\n          "integrity": "sha512-sRNb1XydwkW9IOci6iB2xmy8IGCj6r/fr+JWitvJ2JxQRPzN3T4AGGVWCMlVmVwM1gtgALJRmGIlWv5ppnGGkg==",\n          "requires": {\n            "mdn-data": "~1.1.0",\n            "source-map": "0.5.3"\n          }\n        }\n      }\n    },\n    "cssom": {\n      "version": "0.3.6",\n      "resolved": "https://registry.npmjs.org/cssom/-/cssom-0.3.6.tgz",\n      "integrity": "sha512-DtUeseGk9/GBW0hl0vVPpU22iHL6YB5BUX7ml1hB+GMpo0NX5G4voX3kdWiMSEguFtcW3Vh3djqNF4aIe6ne0A=="\n    },\n    "cssstyle": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/cssstyle/-/cssstyle-1.2.2.tgz",\n      "integrity": "sha512-43wY3kl1CVQSvL7wUY1qXkxVGkStjpkDmVjiIKX8R97uhajy8Bybay78uOtqvh7Q5GK75dNPfW0geWjE6qQQow==",\n      "requires": {\n        "cssom": "0.3.x"\n      }\n    },\n    "csstype": {\n      "version": "2.6.4",\n      "resolved": "https://registry.npmjs.org/csstype/-/csstype-2.6.4.tgz",\n      "integrity": "sha512-lAJUJP3M6HxFXbqtGRc0iZrdyeN+WzOWeY0q/VnFzI+kqVrYIzC7bWlKqCW7oCIdzoPkvfp82EVvrTlQ8zsWQg=="\n    },\n    "cyclist": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/cyclist/-/cyclist-0.2.2.tgz",\n      "integrity": "sha1-GzN5LhHpFKL9bW7WRHRkRE5fpkA="\n    },\n    "d": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/d/-/d-1.0.0.tgz",\n      "integrity": "sha1-dUu1v+VUUdpppYuU1F9MWwRi1Y8=",\n      "requires": {\n        "es5-ext": "0.10.9"\n      }\n    },\n    "damerau-levenshtein": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/damerau-levenshtein/-/damerau-levenshtein-1.0.4.tgz",\n      "integrity": "sha1-AxkcQyy27qFou3fzpV/9zLiXhRQ="\n    },\n    "dashdash": {\n      "version": "1.14.1",\n      "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",\n      "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",\n      "requires": {\n        "assert-plus": "1.0.0"\n      }\n    },\n    "data-urls": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/data-urls/-/data-urls-1.1.0.tgz",\n      "integrity": "sha512-YTWYI9se1P55u58gL5GkQHW4P6VJBJ5iBT+B5a7i2Tjadhv52paJG0qHX4A0OR6/t52odI64KP2YvFpkDOi3eQ==",\n      "requires": {\n        "abab": "2.0.0",\n        "whatwg-mimetype": "2.2.0",\n        "whatwg-url": "7.0.0"\n      },\n      "dependencies": {\n        "whatwg-url": {\n          "version": "7.0.0",\n          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.0.0.tgz",\n          "integrity": "sha512-37GeVSIJ3kn1JgKyjiYNmSLP1yzbpb29jdmwBSgkD9h40/hyrR/OifpVUndji3tmwGgD8qpw7iQu3RSbCrBpsQ==",\n          "requires": {\n            "lodash.sortby": "4.7.0",\n            "tr46": "1.0.1",\n            "webidl-conversions": "4.0.2"\n          }\n        }\n      }\n    },\n    "date-now": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/date-now/-/date-now-0.1.4.tgz",\n      "integrity": "sha1-6vQ5/U1ISK105cx9vvIAZyueNFs="\n    },\n    "dateformat": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/dateformat/-/dateformat-2.2.0.tgz",\n      "integrity": "sha1-QGXiATz5+5Ft39gu+1Bq1MZ2kGI="\n    },\n    "debounce": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/debounce/-/debounce-1.2.0.tgz",\n      "integrity": "sha512-mYtLl1xfZLi1m4RtQYlZgJUNQjl4ZxVnHzIR8nLLgi4q1YT8o/WM+MK/f8yfcc9s5Ir5zRaPZyZU6xs1Syoocg=="\n    },\n    "debug": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/debug/-/debug-4.1.1.tgz",\n      "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",\n      "requires": {\n        "ms": "2.1.1"\n      }\n    },\n    "decamelize": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz",\n      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA="\n    },\n    "decode-uri-component": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz",\n      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU="\n    },\n    "deep-assign": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/deep-assign/-/deep-assign-1.0.0.tgz",\n      "integrity": "sha1-sJJ0O+hCfcYh6gBnzex+cN0Z83s=",\n      "requires": {\n        "is-obj": "1.0.0"\n      }\n    },\n    "deep-equal": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/deep-equal/-/deep-equal-1.0.1.tgz",\n      "integrity": "sha1-9dJgKStmDghO/0zbyfCK0yR0SLU="\n    },\n    "deep-is": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.3.tgz",\n      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ="\n    },\n    "deepmerge": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/deepmerge/-/deepmerge-3.2.0.tgz",\n      "integrity": "sha512-6+LuZGU7QCNUnAJyX8cIrlzoEgggTM6B7mm+znKOX4t5ltluT9KLjN6g61ECMS0LTsLW7yDpNoxhix5FZcrIow=="\n    },\n    "default-compare": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/default-compare/-/default-compare-1.0.0.tgz",\n      "integrity": "sha512-QWfXlM0EkAbqOCbD/6HjdwT19j7WCkMyiRhWilc4H9/5h/RzTF9gv5LYh1+CmDV5d1rki6KAWLtQale0xt20eQ==",\n      "requires": {\n        "kind-of": "5.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "5.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n        }\n      }\n    },\n    "default-gateway": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/default-gateway/-/default-gateway-4.2.0.tgz",\n      "integrity": "sha512-h6sMrVB1VMWVrW13mSc6ia/DwYYw5MN6+exNu1OaJeFac5aSAvwM7lZ0NVfTABuSkQelr4h5oebg3KB1XPdjgA==",\n      "requires": {\n        "execa": "1.0.0",\n        "ip-regex": "2.1.0"\n      }\n    },\n    "default-require-extensions": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/default-require-extensions/-/default-require-extensions-2.0.0.tgz",\n      "integrity": "sha1-9fj7sYp9bVCyH2QfZJ67Uiz+JPc=",\n      "requires": {\n        "strip-bom": "3.0.0"\n      }\n    },\n    "default-resolution": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/default-resolution/-/default-resolution-2.0.0.tgz",\n      "integrity": "sha1-vLgrqnKtebQmp2cy8aga1t8m1oQ="\n    },\n    "defaults": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/defaults/-/defaults-1.0.3.tgz",\n      "integrity": "sha1-xlYFHpgX2f8I7YgUd/P+QBnz730=",\n      "requires": {\n        "clone": "1.0.2"\n      }\n    },\n    "define-properties": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.1.3.tgz",\n      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPNMjPk9A6VFB8+3SKlXQ==",\n      "requires": {\n        "object-keys": "1.0.12"\n      }\n    },\n    "define-property": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz",\n      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==",\n      "requires": {\n        "is-descriptor": "1.0.2",\n        "isobject": "3.0.1"\n      },\n      "dependencies": {\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "1.0.0",\n            "is-data-descriptor": "1.0.0",\n            "kind-of": "6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "defined": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/defined/-/defined-1.0.0.tgz",\n      "integrity": "sha1-yY2bzvdWdBiOEQlpFRGZ45sfppM="\n    },\n    "del": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/del/-/del-3.0.0.tgz",\n      "integrity": "sha1-U+z2mf/LyzljdpGrE7rxYIGXZuU=",\n      "requires": {\n        "globby": "6.1.0",\n        "is-path-cwd": "1.0.0",\n        "is-path-in-cwd": "1.0.0",\n        "p-map": "1.1.1",\n        "pify": "3.0.0",\n        "rimraf": "2.2.8"\n      },\n      "dependencies": {\n        "globby": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/globby/-/globby-6.1.0.tgz",\n          "integrity": "sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=",\n          "requires": {\n            "array-union": "1.0.1",\n            "glob": "7.0.3",\n            "object-assign": "4.0.1",\n            "pify": "2.0.0",\n            "pinkie-promise": "2.0.0"\n          },\n          "dependencies": {\n            "pify": {\n              "version": "2.3.0",\n              "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n              "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n            }\n          }\n        }\n      }\n    },\n    "delayed-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",\n      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk="\n    },\n    "depd": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/depd/-/depd-1.1.2.tgz",\n      "integrity": "sha1-m81S4UwJd2PnSbJ0xDRu0uVgtak="\n    },\n    "deprecated": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/deprecated/-/deprecated-0.0.1.tgz",\n      "integrity": "sha1-+cmvVGSvoeepcUWKi97yqpTVuxk="\n    },\n    "des.js": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/des.js/-/des.js-1.0.0.tgz",\n      "integrity": "sha1-wHTS4qpqipoH29YfmhXCzYPsjsw=",\n      "requires": {\n        "inherits": "2.0.1",\n        "minimalistic-assert": "1.0.0"\n      }\n    },\n    "destroy": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.0.4.tgz",\n      "integrity": "sha1-l4hXRCxEdJ5CBmE+N5RiBYJqvYA="\n    },\n    "detect-file": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/detect-file/-/detect-file-1.0.0.tgz",\n      "integrity": "sha1-8NZtA2cqglyxtzvbP+YjEMjlUrc="\n    },\n    "detect-indent": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/detect-indent/-/detect-indent-5.0.0.tgz",\n      "integrity": "sha1-OHHMCmoALow+Wzz38zYmRnXwa50="\n    },\n    "detect-newline": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/detect-newline/-/detect-newline-2.1.0.tgz",\n      "integrity": "sha1-9B8cEL5LAOh7XxPaaAdZ8sW/0+I="\n    },\n    "detect-node": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/detect-node/-/detect-node-2.0.4.tgz",\n      "integrity": "sha512-ZIzRpLJrOj7jjP2miAtgqIfmzbxa4ZOr5jJc601zklsfEx9oTzmmj2nVpIPRpNlRTIh8lc1kyViIY7BWSGNmKw=="\n    },\n    "detect-port-alt": {\n      "version": "1.1.6",\n      "resolved": "https://registry.npmjs.org/detect-port-alt/-/detect-port-alt-1.1.6.tgz",\n      "integrity": "sha512-5tQykt+LqfJFBEYaDITx7S7cR7mJ/zQmLXZ2qt5w04ainYZw6tBf9dBunMjVeVOdYVRUzUOE4HkY5J7+uttb5Q==",\n      "requires": {\n        "address": "1.0.1",\n        "debug": "2.6.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "detective": {\n      "version": "4.7.1",\n      "resolved": "https://registry.npmjs.org/detective/-/detective-4.7.1.tgz",\n      "integrity": "sha512-H6PmeeUcZloWtdt4DAkFyzFL94arpHr3NOwwmVILFiy+9Qd4JTxxXrzfyGk/lmct2qVGBwTSwSXagqu2BxmWig==",\n      "requires": {\n        "acorn": "5.2.1",\n        "defined": "1.0.0"\n      },\n      "dependencies": {\n        "acorn": {\n          "version": "5.7.3",\n          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.3.tgz",\n          "integrity": "sha512-T/zvzYRfbVojPWahDsE5evJdHb3oJoQfFbsrKM7w5Zcs++Tr257tia3BmMP8XYVjp1S9RZXQMh7gao96BlqZOw=="\n        }\n      }\n    },\n    "diff": {\n      "version": "1.0.8",\n      "resolved": "https://registry.npmjs.org/diff/-/diff-1.0.8.tgz",\n      "integrity": "sha1-NDJ2MI7Jkbe8giZ+1VvBQR+XFmY="\n    },\n    "diff-sequences": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/diff-sequences/-/diff-sequences-24.3.0.tgz",\n      "integrity": "sha512-xLqpez+Zj9GKSnPWS0WZw1igGocZ+uua8+y+5dDNTT934N3QuY1sp2LkHzwiaYQGz60hMq0pjAshdeXm5VUOEw=="\n    },\n    "diffie-hellman": {\n      "version": "5.0.3",\n      "resolved": "https://registry.npmjs.org/diffie-hellman/-/diffie-hellman-5.0.3.tgz",\n      "integrity": "sha512-kqag/Nl+f3GwyK25fhUMYj81BUOrZ9IuJsjIcDE5icNM9FJHAVm3VcUDxdLPoQtTuUylWm6ZIknYJwwaPxsUzg==",\n      "requires": {\n        "bn.js": "4.1.0",\n        "miller-rabin": "4.0.0",\n        "randombytes": "2.0.0"\n      }\n    },\n    "dir-glob": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-2.0.0.tgz",\n      "integrity": "sha512-37qirFDz8cA5fimp9feo43fSuRo2gHwaIn6dXL8Ber1dGwUosDrGZeCCXq57WnIqE4aQ+u3eQZzsk1yOzhdwag==",\n      "requires": {\n        "arrify": "1.0.1",\n        "path-type": "3.0.0"\n      }\n    },\n    "dns-equal": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/dns-equal/-/dns-equal-1.0.0.tgz",\n      "integrity": "sha1-s55/HabrCnW6nBcySzR1PEfgZU0="\n    },\n    "dns-packet": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/dns-packet/-/dns-packet-1.3.1.tgz",\n      "integrity": "sha512-0UxfQkMhYAUaZI+xrNZOz/as5KgDU0M/fQ9b6SpkyLbk3GEswDi6PADJVaYJradtRVsRIlF1zLyOodbcTCDzUg==",\n      "requires": {\n        "ip": "1.1.0",\n        "safe-buffer": "5.0.1"\n      }\n    },\n    "dns-txt": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/dns-txt/-/dns-txt-2.0.2.tgz",\n      "integrity": "sha1-uR2Ab10nGI5Ks+fRB9iBocxGQrY=",\n      "requires": {\n        "buffer-indexof": "1.0.0"\n      }\n    },\n    "doctrine": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",\n      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",\n      "requires": {\n        "esutils": "2.0.2"\n      }\n    },\n    "dom-converter": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/dom-converter/-/dom-converter-0.2.0.tgz",\n      "integrity": "sha512-gd3ypIPfOMr9h5jIKq8E3sHOTCjeirnl0WK5ZdS1AW0Odt0b1PaWaHdJ4Qk4klv+YB9aJBS7mESXjFoDQPu6DA==",\n      "requires": {\n        "utila": "~0.4"\n      }\n    },\n    "dom-helpers": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-3.4.0.tgz",\n      "integrity": "sha512-LnuPJ+dwqKDIyotW1VzmOZ5TONUN7CwkCR5hrgawTUbkBGYdeoNLZo6nNfGkCrjtE1nXXaj7iMMpDa8/d9WoIA==",\n      "requires": {\n        "@babel/runtime": "7.1.2"\n      }\n    },\n    "dom-serializer": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.1.tgz",\n      "integrity": "sha512-l0IU0pPzLWSHBcieZbpOKgkIn3ts3vAh7ZuFyXNwJxJXk/c4Gwj9xaTJwIDVQCXawWD0qb3IzMGH5rglQaO0XA==",\n      "requires": {\n        "domelementtype": "1.3.0",\n        "entities": "1.1.1"\n      }\n    },\n    "domain-browser": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/domain-browser/-/domain-browser-1.2.0.tgz",\n      "integrity": "sha512-jnjyiM6eRyZl2H+W8Q/zLMA481hzi0eszAaBUzIVnmYVDBbnLxVNnfu1HgEBvCbL+71FrxMl3E6lpKH7Ge3OXA=="\n    },\n    "domelementtype": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/domelementtype/-/domelementtype-1.3.1.tgz",\n      "integrity": "sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w=="\n    },\n    "domexception": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/domexception/-/domexception-1.0.1.tgz",\n      "integrity": "sha512-raigMkn7CJNNo6Ihro1fzG7wr3fHuYVytzquZKX5n0yizGsTcYgzdIUwj1X9pK0VvjeihV+XiclP+DjwbsSKug==",\n      "requires": {\n        "webidl-conversions": "4.0.2"\n      }\n    },\n    "domhandler": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/domhandler/-/domhandler-2.4.2.tgz",\n      "integrity": "sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==",\n      "requires": {\n        "domelementtype": "1"\n      }\n    },\n    "domutils": {\n      "version": "1.7.0",\n      "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.7.0.tgz",\n      "integrity": "sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==",\n      "requires": {\n        "dom-serializer": "0",\n        "domelementtype": "1"\n      }\n    },\n    "dot-prop": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/dot-prop/-/dot-prop-4.2.0.tgz",\n      "integrity": "sha512-tUMXrxlExSW6U2EXiiKGSBVdYgtV8qlHL+C10TsW4PURY/ic+eaysnSkwB4kA/mBlCyy/IKDJ+Lc3wbWeaXtuQ==",\n      "requires": {\n        "is-obj": "1.0.0"\n      }\n    },\n    "dotenv": {\n      "version": "6.2.0",\n      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-6.2.0.tgz",\n      "integrity": "sha512-HygQCKUBSFl8wKQZBSemMywRWcEDNidvNbjGVyZu3nbZ8qq9ubiPoGLMdRDpfSrpkkm9BXYFkpKxxFX38o/76w=="\n    },\n    "dotenv-expand": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/dotenv-expand/-/dotenv-expand-4.2.0.tgz",\n      "integrity": "sha1-3vHxyl1gWdJKdm5YeULCEQbOEnU="\n    },\n    "duplexer": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/duplexer/-/duplexer-0.1.1.tgz",\n      "integrity": "sha1-rOb/gIwc5mtX0ev5eXessCM0z8E="\n    },\n    "duplexer2": {\n      "version": "0.0.2",\n      "resolved": "https://registry.npmjs.org/duplexer2/-/duplexer2-0.0.2.tgz",\n      "integrity": "sha1-xhTc9n4vsUmVqRcR5aYX6KYKMds=",\n      "requires": {\n        "readable-stream": "~1.1.9"\n      },\n      "dependencies": {\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "readable-stream": {\n          "version": "1.1.14",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",\n          "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        }\n      }\n    },\n    "duplexify": {\n      "version": "3.7.1",\n      "resolved": "https://registry.npmjs.org/duplexify/-/duplexify-3.7.1.tgz",\n      "integrity": "sha512-07z8uv2wMyS51kKhD1KsdXJg5WQ6t93RneqRxUHnskXVtlYYkLqM0gqStQZ3pj073g687jPCHrqNfCzawLYh5g==",\n      "requires": {\n        "end-of-stream": "1.0.0",\n        "inherits": "2.0.1",\n        "readable-stream": "2.0.0",\n        "stream-shift": "1.0.0"\n      }\n    },\n    "each-props": {\n      "version": "1.3.2",\n      "resolved": "https://registry.npmjs.org/each-props/-/each-props-1.3.2.tgz",\n      "integrity": "sha512-vV0Hem3zAGkJAyU7JSjixeU66rwdynTAa1vofCrSA5fEln+m67Az9CcnkVD776/fsN/UjIWmBDoNRS6t6G9RfA==",\n      "requires": {\n        "is-plain-object": "2.0.1",\n        "object.defaults": "1.1.0"\n      }\n    },\n    "ecc-jsbn": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",\n      "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",\n      "requires": {\n        "jsbn": "~0.1.0",\n        "safer-buffer": "2.1.0"\n      }\n    },\n    "editions": {\n      "version": "1.3.4",\n      "resolved": "https://registry.npmjs.org/editions/-/editions-1.3.4.tgz",\n      "integrity": "sha512-gzao+mxnYDzIysXKMQi/+M1mjy/rjestjg6OPoYTtI+3Izp23oiGZitsl9lPDPiTGXbcSIk1iJWhliSaglxnUg=="\n    },\n    "editorconfig": {\n      "version": "0.15.3",\n      "resolved": "https://registry.npmjs.org/editorconfig/-/editorconfig-0.15.3.tgz",\n      "integrity": "sha512-M9wIMFx96vq0R4F+gRpY3o2exzb8hEj/n9S8unZtHSvYjibBp/iMufSzvmOcV/laG0ZtuTVGtiJggPOSW2r93g==",\n      "requires": {\n        "commander": "2.19.0",\n        "lru-cache": "4.1.5",\n        "semver": "5.6.0",\n        "sigmund": "1.0.1"\n      },\n      "dependencies": {\n        "lru-cache": {\n          "version": "4.1.5",\n          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz",\n          "integrity": "sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==",\n          "requires": {\n            "pseudomap": "1.0.2",\n            "yallist": "2.1.2"\n          }\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "yallist": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz",\n          "integrity": "sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI="\n        }\n      }\n    },\n    "ee-first": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",\n      "integrity": "sha1-WQxhFWsK4vTwJVcyoViyZrxWsh0="\n    },\n    "electron-to-chromium": {\n      "version": "1.3.125",\n      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.3.125.tgz",\n      "integrity": "sha512-XxowpqQxJ4nDwUXHtVtmEhRqBpm2OnjBomZmZtHD0d2Eo0244+Ojezhk3sD/MBSSe2nxCdGQFRXHIsf/LUTL9A=="\n    },\n    "elliptic": {\n      "version": "6.4.1",\n      "resolved": "https://registry.npmjs.org/elliptic/-/elliptic-6.4.1.tgz",\n      "integrity": "sha512-BsXLz5sqX8OHcsh7CqBMztyXARmGQ3LWPtGjJi6DiJHq5C/qvi9P3OqgswKSDftbu8+IoI/QDTAm2fFnQ9SZSQ==",\n      "requires": {\n        "bn.js": "4.4.0",\n        "brorand": "1.0.1",\n        "hash.js": "1.0.0",\n        "hmac-drbg": "1.0.0",\n        "inherits": "2.0.1",\n        "minimalistic-assert": "1.0.0",\n        "minimalistic-crypto-utils": "1.0.0"\n      }\n    },\n    "emoji-regex": {\n      "version": "7.0.3",\n      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-7.0.3.tgz",\n      "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7hfWzmu8T5Z1QofhmTIhItA=="\n    },\n    "emojis-list": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/emojis-list/-/emojis-list-2.1.0.tgz",\n      "integrity": "sha1-TapNnbAPmBmIDHn6RXrlsJof04k="\n    },\n    "emotion": {\n      "version": "9.2.12",\n      "resolved": "https://registry.npmjs.org/emotion/-/emotion-9.2.12.tgz",\n      "integrity": "sha512-hcx7jppaI8VoXxIWEhxpDW7I+B4kq9RNzQLmsrF6LY8BGKqe2N+gFAQr0EfuFucFlPs2A9HM4+xNj4NeqEWIOQ==",\n      "requires": {\n        "babel-plugin-emotion": "9.2.11",\n        "create-emotion": "9.2.12"\n      }\n    },\n    "encodeurl": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",\n      "integrity": "sha1-rT/0yG7C0CkyL1oCw6mmBslbP1k="\n    },\n    "encoding": {\n      "version": "0.1.12",\n      "resolved": "https://registry.npmjs.org/encoding/-/encoding-0.1.12.tgz",\n      "integrity": "sha1-U4tm8+5izRq1HsMjgp0flIDHS+s=",\n      "requires": {\n        "iconv-lite": "~0.4.13"\n      }\n    },\n    "end-of-stream": {\n      "version": "1.4.1",\n      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.1.tgz",\n      "integrity": "sha512-1MkrZNvWTKCaigbn+W15elq2BB/L22nqrSY5DKlo3X6+vclJm8Bb5djXJBmEX6fS3+zCh/F4VBK5Z2KxJt4s2Q==",\n      "requires": {\n        "once": "1.4.0"\n      }\n    },\n    "enhanced-resolve": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/enhanced-resolve/-/enhanced-resolve-4.1.0.tgz",\n      "integrity": "sha512-F/7vkyTtyc/llOIn8oWclcB25KdRaiPBpZYDgJHgh/UHtpgT2p2eldQgtQnLtUvfMKPKxbRaQM/hHkvLHt1Vng==",\n      "requires": {\n        "graceful-fs": "4.1.2",\n        "memory-fs": "0.4.0",\n        "tapable": "1.0.0"\n      }\n    },\n    "entities": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/entities/-/entities-1.1.2.tgz",\n      "integrity": "sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w=="\n    },\n    "envify": {\n      "version": "3.4.1",\n      "resolved": "https://registry.npmjs.org/envify/-/envify-3.4.1.tgz",\n      "integrity": "sha1-1xIjKejfFoi6dxsSUBkXyc5cvOg=",\n      "requires": {\n        "jstransform": "11.0.3",\n        "through": "~2.3.4"\n      }\n    },\n    "errno": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/errno/-/errno-0.1.7.tgz",\n      "integrity": "sha512-MfrRBDWzIWifgq6tJj60gkAwtLNb6sQPlcFrSOflcP1aFmmruKQ2wRnze/8V6kgyz7H3FF8Npzv78mZ7XLLflg==",\n      "requires": {\n        "prr": "~1.0.1"\n      }\n    },\n    "error-ex": {\n      "version": "1.3.2",\n      "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",\n      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==",\n      "requires": {\n        "is-arrayish": "0.2.1"\n      }\n    },\n    "es-abstract": {\n      "version": "1.13.0",\n      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.13.0.tgz",\n      "integrity": "sha512-vDZfg/ykNxQVwup/8E1BZhVzFfBxs9NqMzGcvIJrqg5k2/5Za2bWo40dK2J1pgLngZ7c+Shh8lwYtLGyrwPutg==",\n      "requires": {\n        "es-to-primitive": "1.2.0",\n        "function-bind": "1.1.1",\n        "has": "1.0.3",\n        "is-callable": "1.1.4",\n        "is-regex": "1.0.4",\n        "object-keys": "1.0.12"\n      }\n    },\n    "es-to-primitive": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.0.tgz",\n      "integrity": "sha512-qZryBOJjV//LaxLTV6UC//WewneB3LcXOL9NP++ozKVXsIIIpm/2c13UDiD9Jp2eThsecw9m3jPqDwTyobcdbg==",\n      "requires": {\n        "is-callable": "1.1.4",\n        "is-date-object": "1.0.1",\n        "is-symbol": "1.0.2"\n      }\n    },\n    "es5-ext": {\n      "version": "0.10.49",\n      "resolved": "https://registry.npmjs.org/es5-ext/-/es5-ext-0.10.49.tgz",\n      "integrity": "sha512-3NMEhi57E31qdzmYp2jwRArIUsj1HI/RxbQ4bgnSB+AIKIxsAmTiK83bYMifIcpWvEc3P1X30DhUKOqEtF/kvg==",\n      "requires": {\n        "es6-iterator": "~2.0.3",\n        "es6-symbol": "~3.1.1",\n        "next-tick": "1.0.0"\n      }\n    },\n    "es6-iterator": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/es6-iterator/-/es6-iterator-2.0.3.tgz",\n      "integrity": "sha1-p96IkUGgWpSwhUQDstCg+/qY87c=",\n      "requires": {\n        "d": "1",\n        "es5-ext": "0.10.35",\n        "es6-symbol": "3.1.1"\n      }\n    },\n    "es6-symbol": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.1.tgz",\n      "integrity": "sha1-vwDvT9q2uhtG7Le2KbTH7VcVzHc=",\n      "requires": {\n        "d": "1",\n        "es5-ext": "~0.10.14"\n      }\n    },\n    "es6-weak-map": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/es6-weak-map/-/es6-weak-map-2.0.2.tgz",\n      "integrity": "sha1-XjqzIlH/0VOKH45f+hNXdy+S2W8=",\n      "requires": {\n        "d": "1",\n        "es5-ext": "0.10.14",\n        "es6-iterator": "2.0.1",\n        "es6-symbol": "3.1.1"\n      }\n    },\n    "escape-html": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",\n      "integrity": "sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg="\n    },\n    "escape-string-regexp": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",\n      "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="\n    },\n    "escodegen": {\n      "version": "1.11.1",\n      "resolved": "https://registry.npmjs.org/escodegen/-/escodegen-1.11.1.tgz",\n      "integrity": "sha512-JwiqFD9KdGVVpeuRa68yU3zZnBEOcPs0nKW7wZzXky8Z7tffdYUHbe11bPCV5jYlK6DVdKLWLm0f5I/QlL0Kmw==",\n      "requires": {\n        "esprima": "3.1.3",\n        "estraverse": "4.2.0",\n        "esutils": "2.0.2",\n        "optionator": "0.8.1",\n        "source-map": "~0.6.1"\n      },\n      "dependencies": {\n        "esprima": {\n          "version": "3.1.3",\n          "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",\n          "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",\n          "optional": true\n        }\n      }\n    },\n    "eslint": {\n      "version": "5.16.0",\n      "resolved": "https://registry.npmjs.org/eslint/-/eslint-5.16.0.tgz",\n      "integrity": "sha512-S3Rz11i7c8AA5JPv7xAH+dOyq/Cu/VXHiHXBPOU1k/JAM5dXqQPt3qcrhpHSorXmrpu2g0gkIBVXAqCpzfoZIg==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "ajv": "6.9.1",\n        "chalk": "2.1.0",\n        "cross-spawn": "6.0.5",\n        "debug": "4.0.1",\n        "doctrine": "3.0.0",\n        "eslint-scope": "4.0.3",\n        "eslint-utils": "1.3.1",\n        "eslint-visitor-keys": "1.0.0",\n        "espree": "5.0.1",\n        "esquery": "1.0.1",\n        "esutils": "2.0.2",\n        "file-entry-cache": "5.0.1",\n        "functional-red-black-tree": "1.0.1",\n        "glob": "7.1.2",\n        "globals": "11.7.0",\n        "ignore": "4.0.6",\n        "import-fresh": "3.0.0",\n        "imurmurhash": "0.1.4",\n        "inquirer": "6.2.2",\n        "js-yaml": "3.13.0",\n        "json-stable-stringify-without-jsonify": "1.0.1",\n        "levn": "0.3.0",\n        "lodash": "4.17.11",\n        "minimatch": "3.0.4",\n        "mkdirp": "0.5.1",\n        "natural-compare": "1.4.0",\n        "optionator": "0.8.2",\n        "path-is-inside": "1.0.2",\n        "progress": "2.0.0",\n        "regexpp": "2.0.1",\n        "semver": "5.5.1",\n        "strip-ansi": "4.0.0",\n        "strip-json-comments": "2.0.1",\n        "table": "5.2.3",\n        "text-table": "0.2.0"\n      },\n      "dependencies": {\n        "import-fresh": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.0.0.tgz",\n          "integrity": "sha512-pOnA9tfM3Uwics+SaBLCNyZZZbK+4PTu0OPZtLlMIrv17EdBoC15S9Kn8ckJ9TZTyKb3ywNE5y1yeDxxGA7nTQ==",\n          "requires": {\n            "parent-module": "1.0.0",\n            "resolve-from": "4.0.0"\n          }\n        },\n        "resolve-from": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",\n          "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g=="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "eslint-config-react-app": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/eslint-config-react-app/-/eslint-config-react-app-4.0.0.tgz",\n      "integrity": "sha512-SeFxaI+0NAzWPFAI9AT+Vp9Xe2u5RCnn0JVEXkE338HgoPujc38Bc0upCJw4BWmavvIN/ODmE6EuzHoAEn3ozw==",\n      "requires": {\n        "confusing-browser-globals": "1.0.7"\n      }\n    },\n    "eslint-import-resolver-node": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.2.tgz",\n      "integrity": "sha512-sfmTqJfPSizWu4aymbPr4Iidp5yKm8yDkHp+Ir3YiTHiiDfxh69mOUsmiqW6RZ9zRXFaF64GtYmN7e+8GHBv6Q==",\n      "requires": {\n        "debug": "2.6.9",\n        "resolve": "1.5.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "eslint-loader": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/eslint-loader/-/eslint-loader-2.1.2.tgz",\n      "integrity": "sha512-rA9XiXEOilLYPOIInvVH5S/hYfyTPyxag6DZhoQOduM+3TkghAEQ3VcFO8VnX4J4qg/UIBzp72aOf/xvYmpmsg==",\n      "requires": {\n        "loader-fs-cache": "1.0.0",\n        "loader-utils": "1.0.2",\n        "object-assign": "4.0.1",\n        "object-hash": "1.1.4",\n        "rimraf": "2.6.1"\n      }\n    },\n    "eslint-module-utils": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/eslint-module-utils/-/eslint-module-utils-2.4.0.tgz",\n      "integrity": "sha512-14tltLm38Eu3zS+mt0KvILC3q8jyIAH518MlG+HO0p+yK885Lb1UHTY/UgR91eOyGdmxAPb+OLoW4znqIT6Ndw==",\n      "requires": {\n        "debug": "2.6.8",\n        "pkg-dir": "2.0.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "find-up": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",\n          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",\n          "requires": {\n            "locate-path": "2.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",\n          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",\n          "requires": {\n            "p-locate": "2.0.0",\n            "path-exists": "3.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        },\n        "p-limit": {\n          "version": "1.3.0",\n          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",\n          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",\n          "requires": {\n            "p-try": "1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",\n          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",\n          "requires": {\n            "p-limit": "1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",\n          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="\n        },\n        "pkg-dir": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-2.0.0.tgz",\n          "integrity": "sha1-9tXREJ4Z1j7fQo4L1X4Sd3YVM0s=",\n          "requires": {\n            "find-up": "2.1.0"\n          }\n        }\n      }\n    },\n    "eslint-plugin-flowtype": {\n      "version": "2.50.1",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-flowtype/-/eslint-plugin-flowtype-2.50.1.tgz",\n      "integrity": "sha512-9kRxF9hfM/O6WGZcZPszOVPd2W0TLHBtceulLTsGfwMPtiCCLnCW0ssRiOOiXyqrCA20pm1iXdXm7gQeN306zQ==",\n      "requires": {\n        "lodash": "4.17.10"\n      }\n    },\n    "eslint-plugin-import": {\n      "version": "2.16.0",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-import/-/eslint-plugin-import-2.16.0.tgz",\n      "integrity": "sha512-z6oqWlf1x5GkHIFgrSvtmudnqM6Q60KM4KvpWi5ubonMjycLjndvd5+8VAZIsTlHC03djdgJuyKG6XO577px6A==",\n      "requires": {\n        "contains-path": "0.1.0",\n        "debug": "2.6.9",\n        "doctrine": "1.5.0",\n        "eslint-import-resolver-node": "0.3.2",\n        "eslint-module-utils": "2.3.0",\n        "has": "1.0.3",\n        "lodash": "4.17.11",\n        "minimatch": "3.0.4",\n        "read-pkg-up": "2.0.0",\n        "resolve": "1.9.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "doctrine": {\n          "version": "1.5.0",\n          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-1.5.0.tgz",\n          "integrity": "sha1-N53Ocw9hZvds76TmcHoVmwLFpvo=",\n          "requires": {\n            "esutils": "2.0.2",\n            "isarray": "1.0.0"\n          }\n        },\n        "find-up": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",\n          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",\n          "requires": {\n            "locate-path": "2.0.0"\n          }\n        },\n        "load-json-file": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-2.0.0.tgz",\n          "integrity": "sha1-eUfkIUmvgNaWy/eXvKq8/h/inKg=",\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "parse-json": "2.2.0",\n            "pify": "2.0.0",\n            "strip-bom": "3.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",\n          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",\n          "requires": {\n            "p-locate": "2.0.0",\n            "path-exists": "3.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        },\n        "p-limit": {\n          "version": "1.3.0",\n          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",\n          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",\n          "requires": {\n            "p-try": "1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",\n          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",\n          "requires": {\n            "p-limit": "1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",\n          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="\n        },\n        "parse-json": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",\n          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",\n          "requires": {\n            "error-ex": "1.2.0"\n          }\n        },\n        "path-type": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/path-type/-/path-type-2.0.0.tgz",\n          "integrity": "sha1-8BLMuEFbcJb8LaoQVMPXI4lZTHM=",\n          "requires": {\n            "pify": "2.0.0"\n          }\n        },\n        "pify": {\n          "version": "2.3.0",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n        },\n        "read-pkg": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-2.0.0.tgz",\n          "integrity": "sha1-jvHAYjxqbbDcZxPEv6xGMysjaPg=",\n          "requires": {\n            "load-json-file": "2.0.0",\n            "normalize-package-data": "2.3.2",\n            "path-type": "2.0.0"\n          }\n        },\n        "read-pkg-up": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-2.0.0.tgz",\n          "integrity": "sha1-a3KoBImE4MQeeVEP1en6mbO1Sb4=",\n          "requires": {\n            "find-up": "2.0.0",\n            "read-pkg": "2.0.0"\n          }\n        }\n      }\n    },\n    "eslint-plugin-jsx-a11y": {\n      "version": "6.2.1",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-jsx-a11y/-/eslint-plugin-jsx-a11y-6.2.1.tgz",\n      "integrity": "sha512-cjN2ObWrRz0TTw7vEcGQrx+YltMvZoOEx4hWU8eEERDnBIU00OTq7Vr+jA7DFKxiwLNv4tTh5Pq2GUNEa8b6+w==",\n      "requires": {\n        "aria-query": "3.0.0",\n        "array-includes": "3.0.3",\n        "ast-types-flow": "0.0.7",\n        "axobject-query": "2.0.2",\n        "damerau-levenshtein": "1.0.4",\n        "emoji-regex": "7.0.2",\n        "has": "1.0.3",\n        "jsx-ast-utils": "2.0.1"\n      }\n    },\n    "eslint-plugin-react": {\n      "version": "7.12.4",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.12.4.tgz",\n      "integrity": "sha512-1puHJkXJY+oS1t467MjbqjvX53uQ05HXwjqDgdbGBqf5j9eeydI54G3KwiJmWciQ0HTBacIKw2jgwSBSH3yfgQ==",\n      "requires": {\n        "array-includes": "3.0.3",\n        "doctrine": "2.1.0",\n        "has": "1.0.3",\n        "jsx-ast-utils": "2.0.1",\n        "object.fromentries": "2.0.0",\n        "prop-types": "15.6.2",\n        "resolve": "1.9.0"\n      },\n      "dependencies": {\n        "doctrine": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",\n          "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",\n          "requires": {\n            "esutils": "2.0.2"\n          }\n        }\n      }\n    },\n    "eslint-plugin-react-hooks": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-1.6.0.tgz",\n      "integrity": "sha512-lHBVRIaz5ibnIgNG07JNiAuBUeKhEf8l4etNx5vfAEwqQ5tcuK3jV9yjmopPgQDagQb7HwIuQVsE3IVcGrRnag=="\n    },\n    "eslint-scope": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-4.0.3.tgz",\n      "integrity": "sha512-p7VutNr1O/QrxysMo3E45FjYDTeXBy0iTltPFNSqKAIfjDSXC+4dj+qfyuD8bfAXrW/y6lW3O76VaYNPKfpKrg==",\n      "requires": {\n        "esrecurse": "4.1.0",\n        "estraverse": "4.1.1"\n      }\n    },\n    "eslint-utils": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/eslint-utils/-/eslint-utils-1.3.1.tgz",\n      "integrity": "sha512-Z7YjnIldX+2XMcjr7ZkgEsOj/bREONV60qYeB/bjMAqqqZ4zxKyWX+BOUkdmRmA9riiIPVvo5x86m5elviOk0Q=="\n    },\n    "eslint-visitor-keys": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz",\n      "integrity": "sha512-qzm/XxIbxm/FHyH341ZrbnMUpe+5Bocte9xkmFMzPMjRaZMcXww+MpBptFvtU+79L362nqiLhekCxCxDPaUMBQ=="\n    },\n    "espree": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/espree/-/espree-5.0.1.tgz",\n      "integrity": "sha512-qWAZcWh4XE/RwzLJejfcofscgMc9CamR6Tn1+XRXNzrvUSSbiAjGOI/fggztjIi7y9VLPqnICMIPiGyr8JaZ0A==",\n      "requires": {\n        "acorn": "6.0.7",\n        "acorn-jsx": "5.0.0",\n        "eslint-visitor-keys": "1.0.0"\n      }\n    },\n    "esprima": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",\n      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A=="\n    },\n    "esquery": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.0.1.tgz",\n      "integrity": "sha512-SmiyZ5zIWH9VM+SRUReLS5Q8a7GxtRdxEBVZpm98rJM7Sb+A9DVCndXfkeFUd3byderg+EbDkfnevfCwynWaNA==",\n      "requires": {\n        "estraverse": "4.0.0"\n      }\n    },\n    "esrecurse": {\n      "version": "4.2.1",\n      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.2.1.tgz",\n      "integrity": "sha512-64RBB++fIOAXPw3P9cy89qfMlvZEXZkqqJkjqqXIvzP5ezRZjW+lPWjw35UX/3EhUPFYbg5ER4JYgDw4007/DQ==",\n      "requires": {\n        "estraverse": "4.1.0"\n      }\n    },\n    "estraverse": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-4.2.0.tgz",\n      "integrity": "sha1-De4/7TH81GlhjOc0IJn8GvoL2xM="\n    },\n    "esutils": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.2.tgz",\n      "integrity": "sha1-Cr9PHKpbyx96nYrMbepPqqBLrJs="\n    },\n    "etag": {\n      "version": "1.8.1",\n      "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",\n      "integrity": "sha1-Qa4u62XvpiJorr/qg6x9eSmbCIc="\n    },\n    "event-stream": {\n      "version": "3.0.20",\n      "resolved": "https://registry.npmjs.org/event-stream/-/event-stream-3.0.20.tgz",\n      "integrity": "sha1-A4u7LqnqkDhbJvvBhU0LU58qvqM=",\n      "requires": {\n        "duplexer": "~0.1.1",\n        "from": "~0",\n        "map-stream": "~0.0.3",\n        "pause-stream": "0.0.11",\n        "split": "0.2",\n        "stream-combiner": "~0.0.3",\n        "through": "~2.3.1"\n      },\n      "dependencies": {\n        "map-stream": {\n          "version": "0.0.7",\n          "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",\n          "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="\n        }\n      }\n    },\n    "eventemitter3": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/eventemitter3/-/eventemitter3-3.1.0.tgz",\n      "integrity": "sha512-ivIvhpq/Y0uSjcHDcOIccjmYjGLcP09MFGE7ysAwkAvkXfpZlC985pH2/ui64DKazbTW/4kN3yqozUxlXzI6cA=="\n    },\n    "events": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/events/-/events-3.0.0.tgz",\n      "integrity": "sha512-Dc381HFWJzEOhQ+d8pkNon++bk9h6cdAoAj4iE6Q4y6xgTzySWXlKn05/TVNpjnfRqi/X0EpJEJohPjNI3zpVA=="\n    },\n    "eventsource": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",\n      "integrity": "sha512-4Ln17+vVT0k8aWq+t/bF5arcS3EpT9gYtW66EPacdj/mAFevznsnyoHLPy2BA8gbIQeIHoPsvwmfBftfcG//BQ==",\n      "requires": {\n        "original": "1.0.0"\n      }\n    },\n    "evp_bytestokey": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/evp_bytestokey/-/evp_bytestokey-1.0.3.tgz",\n      "integrity": "sha512-/f2Go4TognH/KvCISP7OUsHn85hT9nUkxxA9BEWxFn+Oj9o8ZNLm/40hdlgSLyuOimsrTKLUMEorQexp/aPQeA==",\n      "requires": {\n        "md5.js": "1.3.4",\n        "safe-buffer": "5.1.1"\n      }\n    },\n    "exec-sh": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/exec-sh/-/exec-sh-0.3.2.tgz",\n      "integrity": "sha512-9sLAvzhI5nc8TpuQUh4ahMdCrWT00wPWz7j47/emR5+2qEfoZP5zzUXvx+vdx+H6ohhnsYC31iX04QLYJK8zTg=="\n    },\n    "execa": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/execa/-/execa-1.0.0.tgz",\n      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7/nxfAdhnox83seTDbwnaqKO4sXRy7roHAIFqJP/Rw/AuEbX61LA==",\n      "requires": {\n        "cross-spawn": "6.0.0",\n        "get-stream": "4.0.0",\n        "is-stream": "1.1.0",\n        "npm-run-path": "2.0.0",\n        "p-finally": "1.0.0",\n        "signal-exit": "3.0.0",\n        "strip-eof": "1.0.0"\n      }\n    },\n    "exenv": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/exenv/-/exenv-1.2.2.tgz",\n      "integrity": "sha1-KueOhdmJQVhnCwPUe+wfA72Ru50=",\n      "dev": true\n    },\n    "exit": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/exit/-/exit-0.1.2.tgz",\n      "integrity": "sha1-BjJjj42HfMghB9MKD/8aF8uhzQw="\n    },\n    "expand-brackets": {\n      "version": "2.1.4",\n      "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz",\n      "integrity": "sha1-t3c14xXOMPa27/D4OwQVGiJEliI=",\n      "requires": {\n        "debug": "2.3.3",\n        "define-property": "0.2.5",\n        "extend-shallow": "2.0.1",\n        "posix-character-classes": "0.1.0",\n        "regex-not": "1.0.0",\n        "snapdragon": "0.8.1",\n        "to-regex": "3.0.1"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "0.1.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "expand-range": {\n      "version": "1.8.2",\n      "resolved": "https://registry.npmjs.org/expand-range/-/expand-range-1.8.2.tgz",\n      "integrity": "sha1-opnv/TNf4nIeuujiV+x5ZE/IUzc=",\n      "requires": {\n        "fill-range": "2.1.0"\n      },\n      "dependencies": {\n        "fill-range": {\n          "version": "2.2.4",\n          "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-2.2.4.tgz",\n          "integrity": "sha512-cnrcCbj01+j2gTG921VZPnHbjmdAf8oQV/iGeV2kZxGSyfYjjTyY79ErsK1WJWMpw6DaApEX72binqJE+/d+5Q==",\n          "requires": {\n            "is-number": "2.1.0",\n            "isobject": "2.0.0",\n            "randomatic": "3.0.0",\n            "repeat-element": "1.1.2",\n            "repeat-string": "1.5.2"\n          }\n        },\n        "is-number": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-2.1.0.tgz",\n          "integrity": "sha1-Afy7s5NGOlSPL0ZszhbezknbkI8=",\n          "requires": {\n            "kind-of": "3.0.2"\n          }\n        },\n        "isobject": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",\n          "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",\n          "requires": {\n            "isarray": "1.0.0"\n          }\n        }\n      }\n    },\n    "expand-tilde": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/expand-tilde/-/expand-tilde-2.0.2.tgz",\n      "integrity": "sha1-l+gBqgUt8CRU3kawK/YhZCzchQI=",\n      "requires": {\n        "homedir-polyfill": "1.0.1"\n      }\n    },\n    "expect": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/expect/-/expect-24.7.1.tgz",\n      "integrity": "sha512-mGfvMTPduksV3xoI0xur56pQsg2vJjNf5+a+bXOjqCkiCBbmCayrBbHS/75y9K430cfqyocPr2ZjiNiRx4SRKw==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "ansi-styles": "3.2.0",\n        "jest-get-type": "24.3.0",\n        "jest-matcher-utils": "24.7.0",\n        "jest-message-util": "24.7.1",\n        "jest-regex-util": "24.3.0"\n      }\n    },\n    "express": {\n      "version": "4.16.4",\n      "resolved": "https://registry.npmjs.org/express/-/express-4.16.4.tgz",\n      "integrity": "sha512-j12Uuyb4FMrd/qQAm6uCHAkPtO8FDTRJZBDd5D2KOL2eLaz1yUNdUB/NOIyq0iU4q4cFarsUCrnFDPBcnksuOg==",\n      "requires": {\n        "accepts": "~1.3.5",\n        "array-flatten": "1.1.1",\n        "body-parser": "1.18.3",\n        "content-disposition": "0.5.2",\n        "content-type": "~1.0.4",\n        "cookie": "0.3.1",\n        "cookie-signature": "1.0.6",\n        "debug": "2.6.9",\n        "depd": "~1.1.2",\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "etag": "~1.8.1",\n        "finalhandler": "1.1.1",\n        "fresh": "0.5.2",\n        "merge-descriptors": "1.0.1",\n        "methods": "~1.1.2",\n        "on-finished": "~2.3.0",\n        "parseurl": "~1.3.2",\n        "path-to-regexp": "0.1.7",\n        "proxy-addr": "~2.0.4",\n        "qs": "6.5.2",\n        "range-parser": "~1.2.0",\n        "safe-buffer": "5.1.2",\n        "send": "0.16.2",\n        "serve-static": "1.13.2",\n        "setprototypeof": "1.1.0",\n        "statuses": "~1.4.0",\n        "type-is": "~1.6.16",\n        "utils-merge": "1.0.1",\n        "vary": "~1.1.2"\n      },\n      "dependencies": {\n        "array-flatten": {\n          "version": "1.1.1",\n          "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",\n          "integrity": "sha1-ml9pkFGx5wczKPKgCJaLZOopVdI="\n        },\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "extend": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",\n      "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="\n    },\n    "extend-shallow": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz",\n      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",\n      "requires": {\n        "assign-symbols": "1.0.0",\n        "is-extendable": "1.0.1"\n      },\n      "dependencies": {\n        "is-extendable": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",\n          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",\n          "requires": {\n            "is-plain-object": "2.0.4"\n          }\n        }\n      }\n    },\n    "external-editor": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-3.0.3.tgz",\n      "integrity": "sha512-bn71H9+qWoOQKyZDo25mOMVpSmXROAsTJVVVYzrrtol3d4y+AsKjf4Iwl2Q+IuT0kFSQ1qo166UuIwqYq7mGnA==",\n      "requires": {\n        "chardet": "0.7.0",\n        "iconv-lite": "0.4.24",\n        "tmp": "0.0.33"\n      }\n    },\n    "extglob": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz",\n      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==",\n      "requires": {\n        "array-unique": "0.3.2",\n        "define-property": "1.0.0",\n        "expand-brackets": "2.1.4",\n        "extend-shallow": "2.0.1",\n        "fragment-cache": "0.2.1",\n        "regex-not": "1.0.0",\n        "snapdragon": "0.8.1",\n        "to-regex": "3.0.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",\n          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",\n          "requires": {\n            "is-descriptor": "1.0.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        },\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "1.0.0",\n            "is-data-descriptor": "1.0.0",\n            "kind-of": "6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "extsprintf": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",\n      "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU="\n    },\n    "fancy-log": {\n      "version": "1.3.3",\n      "resolved": "https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.3.tgz",\n      "integrity": "sha512-k9oEhlyc0FrVh25qYuSELjr8oxsCoc4/LEZfg2iJJrfEk/tZL9bCoJE47gqAvI2m/AUjluCS4+3I0eTx8n3AEw==",\n      "requires": {\n        "ansi-gray": "0.1.1",\n        "color-support": "1.1.3",\n        "parse-node-version": "1.0.0",\n        "time-stamp": "1.0.0"\n      }\n    },\n    "fast-deep-equal": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-2.0.1.tgz",\n      "integrity": "sha1-ewUhjd+WZ79/Nwv3/bLLFf3Qqkk="\n    },\n    "fast-glob": {\n      "version": "2.2.6",\n      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.6.tgz",\n      "integrity": "sha512-0BvMaZc1k9F+MeWWMe8pL6YltFzZYcJsYU7D4JyDA6PAczaXvxqQQ/z+mDF7/4Mw01DeUc+i3CTKajnkANkV4w==",\n      "requires": {\n        "@mrmlnc/readdir-enhanced": "2.2.1",\n        "@nodelib/fs.stat": "1.1.2",\n        "glob-parent": "3.1.0",\n        "is-glob": "4.0.0",\n        "merge2": "1.2.3",\n        "micromatch": "3.1.10"\n      }\n    },\n    "fast-json-stable-stringify": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.0.0.tgz",\n      "integrity": "sha1-1RQsDK7msRifh9OnYREGT4bIu/I="\n    },\n    "fast-levenshtein": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",\n      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc="\n    },\n    "faye-websocket": {\n      "version": "0.11.1",\n      "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.11.1.tgz",\n      "integrity": "sha1-8O/hjE9W5PQK/H4Gxxn9XuYYjzg=",\n      "requires": {\n        "websocket-driver": ">=0.5.1"\n      }\n    },\n    "fb-watchman": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.0.tgz",\n      "integrity": "sha1-VOmr99+i8mzZsWNsWIwa/AXeXVg=",\n      "requires": {\n        "bser": "2.0.0"\n      }\n    },\n    "fbjs": {\n      "version": "0.8.17",\n      "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-0.8.17.tgz",\n      "integrity": "sha1-xNWY6taUkRJlPWWIsBpc3Nn5D90=",\n      "requires": {\n        "core-js": "1.0.0",\n        "isomorphic-fetch": "2.1.1",\n        "loose-envify": "1.0.0",\n        "object-assign": "4.1.0",\n        "promise": "7.1.1",\n        "setimmediate": "1.0.5",\n        "ua-parser-js": "0.7.18"\n      },\n      "dependencies": {\n        "core-js": {\n          "version": "1.2.7",\n          "resolved": "https://registry.npmjs.org/core-js/-/core-js-1.2.7.tgz",\n          "integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="\n        },\n        "promise": {\n          "version": "7.3.1",\n          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",\n          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",\n          "requires": {\n            "asap": "~2.0.3"\n          }\n        }\n      }\n    },\n    "figgy-pudding": {\n      "version": "3.5.1",\n      "resolved": "https://registry.npmjs.org/figgy-pudding/-/figgy-pudding-3.5.1.tgz",\n      "integrity": "sha512-vNKxJHTEKNThjfrdJwHc7brvM6eVevuO5nTj6ez8ZQ1qbXTvGthucRF7S4vf2cr71QVnT70V34v0S1DyQsti0w=="\n    },\n    "figures": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/figures/-/figures-2.0.0.tgz",\n      "integrity": "sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=",\n      "requires": {\n        "escape-string-regexp": "1.0.5"\n      }\n    },\n    "file-entry-cache": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-5.0.1.tgz",\n      "integrity": "sha512-bCg29ictuBaKUwwArK4ouCaqDgLZcysCFLmM/Yn/FDoqndh/9vNuQfXRDvTuXKLxfD/JtZQGKFT8MGcJBK644g==",\n      "requires": {\n        "flat-cache": "2.0.1"\n      }\n    },\n    "file-loader": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/file-loader/-/file-loader-3.0.1.tgz",\n      "integrity": "sha512-4sNIOXgtH/9WZq4NvlfU3Opn5ynUsqBwSLyM+I7UOwdGigTBYfVVQEwe/msZNX/j4pCJTIM14Fsw66Svo1oVrw==",\n      "requires": {\n        "loader-utils": "1.0.2",\n        "schema-utils": "1.0.0"\n      }\n    },\n    "filename-regex": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/filename-regex/-/filename-regex-2.0.1.tgz",\n      "integrity": "sha1-wcS5vuPglyXdsQa3XB4wH+LxiyY="\n    },\n    "fileset": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/fileset/-/fileset-2.0.3.tgz",\n      "integrity": "sha1-jnVIqW08wjJ+5eZ0FocjozO7oqA=",\n      "requires": {\n        "glob": "7.0.3",\n        "minimatch": "3.0.3"\n      }\n    },\n    "filesize": {\n      "version": "3.6.1",\n      "resolved": "https://registry.npmjs.org/filesize/-/filesize-3.6.1.tgz",\n      "integrity": "sha512-7KjR1vv6qnicaPMi1iiTcI85CyYwRO/PSFCu6SvqL8jN2Wjt/NIYQTFtFs7fSDCYOstUkEWIQGFUg5YZQfjlcg=="\n    },\n    "fill-range": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz",\n      "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",\n      "requires": {\n        "extend-shallow": "2.0.1",\n        "is-number": "3.0.0",\n        "repeat-string": "1.6.1",\n        "to-regex-range": "2.1.0"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        }\n      }\n    },\n    "finalhandler": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.1.tgz",\n      "integrity": "sha512-Y1GUDo39ez4aHAw7MysnUD5JzYX+WaIj8I57kO3aEPT1fFRL4sr7mjei97FgnwhAyyzRYmQZaTHb2+9uZ1dPtg==",\n      "requires": {\n        "debug": "2.6.9",\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "on-finished": "~2.3.0",\n        "parseurl": "~1.3.2",\n        "statuses": "~1.4.0",\n        "unpipe": "~1.0.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "find-cache-dir": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-2.1.0.tgz",\n      "integrity": "sha512-Tq6PixE0w/VMFfCgbONnkiQIVol/JJL7nRMi20fqzA4NRs9AfeqMGeRdPi3wIhYkxjeBaWh2rxwapn5Tu3IqOQ==",\n      "requires": {\n        "commondir": "1.0.1",\n        "make-dir": "2.0.0",\n        "pkg-dir": "3.0.0"\n      }\n    },\n    "find-index": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/find-index/-/find-index-0.1.1.tgz",\n      "integrity": "sha1-Z101iyyjiS15Whq0cjL4tuLg3eQ="\n    },\n    "find-root": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/find-root/-/find-root-1.1.0.tgz",\n      "integrity": "sha512-NKfW6bec6GfKc0SGx1e07QZY9PE99u0Bft/0rzSD5k3sO/vwkVUpDUKVm5Gpp5Ue3YfShPFTX2070tDs5kB9Ng=="\n    },\n    "find-up": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz",\n      "integrity": "sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==",\n      "requires": {\n        "locate-path": "3.0.0"\n      }\n    },\n    "findup": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/findup/-/findup-0.1.5.tgz",\n      "integrity": "sha1-itkpozk7rGJ5V6fl3kYjsGsOLOs=",\n      "requires": {\n        "colors": "~0.6.0-1",\n        "commander": "~2.1.0"\n      },\n      "dependencies": {\n        "colors": {\n          "version": "0.6.2",\n          "resolved": "https://registry.npmjs.org/colors/-/colors-0.6.2.tgz",\n          "integrity": "sha1-JCP+ZnisDF2uiFLl0OW+CMmXq8w="\n        },\n        "commander": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/commander/-/commander-2.1.0.tgz",\n          "integrity": "sha1-0SG7roYNmZKj1Re6lvVliOR8Z4E="\n        }\n      }\n    },\n    "findup-sync": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-2.0.0.tgz",\n      "integrity": "sha1-kyaxSIwi0aYIhlCoaQGy2akKLLw=",\n      "requires": {\n        "detect-file": "1.0.0",\n        "is-glob": "3.1.0",\n        "micromatch": "3.0.4",\n        "resolve-dir": "1.0.1"\n      },\n      "dependencies": {\n        "is-glob": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",\n          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",\n          "requires": {\n            "is-extglob": "2.1.0"\n          }\n        }\n      }\n    },\n    "fined": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/fined/-/fined-1.2.0.tgz",\n      "integrity": "sha512-ZYDqPLGxDkDhDZBjZBb+oD1+j0rA4E0pXY50eplAAOPg2N/gUBSSk5IM1/QhPfyVo19lJ+CvXpqfvk+b2p/8Ng==",\n      "requires": {\n        "expand-tilde": "2.0.2",\n        "is-plain-object": "2.0.3",\n        "object.defaults": "1.1.0",\n        "object.pick": "1.2.0",\n        "parse-filepath": "1.0.1"\n      }\n    },\n    "first-chunk-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-1.0.0.tgz",\n      "integrity": "sha1-Wb+1DNkF9g18OUzT2ayqtOatk04="\n    },\n    "flagged-respawn": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/flagged-respawn/-/flagged-respawn-1.0.1.tgz",\n      "integrity": "sha512-lNaHNVymajmk0OJMBn8fVUAU1BtDeKIqKoVhk4xAALB57aALg6b4W0MfJ/cUE0g9YBXy5XhSlPIpYIJ7HaY/3Q=="\n    },\n    "flat-cache": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-2.0.1.tgz",\n      "integrity": "sha512-LoQe6yDuUMDzQAEH8sgmh4Md6oZnc/7PjtwjNFSzveXqSHt6ka9fPBuso7IGf9Rz4uqnSnWiFH2B/zj24a5ReA==",\n      "requires": {\n        "flatted": "2.0.0",\n        "rimraf": "2.6.3",\n        "write": "1.0.3"\n      }\n    },\n    "flatted": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/flatted/-/flatted-2.0.0.tgz",\n      "integrity": "sha512-R+H8IZclI8AAkSBRQJLVOsxwAoHd6WC40b4QTNWIjzAa6BXOBfQcM587MXDTVPeYaopFNWHUFLx7eNmHDSxMWg=="\n    },\n    "flatten": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/flatten/-/flatten-1.0.2.tgz",\n      "integrity": "sha1-2uRqnXj74lKSJYzB54CkHZXAN4I="\n    },\n    "flush-write-stream": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/flush-write-stream/-/flush-write-stream-1.1.1.tgz",\n      "integrity": "sha512-3Z4XhFZ3992uIq0XOqb9AreonueSYphE6oYbpt5+3u06JWklbsPkNv3ZKkP9Bz/r+1MWCaMoSQ28P85+1Yc77w==",\n      "requires": {\n        "inherits": "2.0.3",\n        "readable-stream": "2.3.6"\n      }\n    },\n    "follow-redirects": {\n      "version": "1.7.0",\n      "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.7.0.tgz",\n      "integrity": "sha512-m/pZQy4Gj287eNy94nivy5wchN3Kp+Q5WgUPNy5lJSZ3sgkVKSYV/ZChMAQVIgx1SqfZ2zBZtPA2YlXIWxxJOQ==",\n      "requires": {\n        "debug": "3.2.6"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "3.2.6",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",\n          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",\n          "requires": {\n            "ms": "2.1.1"\n          }\n        }\n      }\n    },\n    "for-in": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz",\n      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA="\n    },\n    "for-own": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/for-own/-/for-own-0.1.5.tgz",\n      "integrity": "sha1-UmXGgaTylNq78XyVCbZ2OqhFEM4=",\n      "requires": {\n        "for-in": "1.0.1"\n      }\n    },\n    "forever-agent": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",\n      "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE="\n    },\n    "fork-stream": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/fork-stream/-/fork-stream-0.0.4.tgz",\n      "integrity": "sha1-24Sfznf2cIpfjzhq5TOgkHtUrnA="\n    },\n    "fork-ts-checker-webpack-plugin": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/fork-ts-checker-webpack-plugin/-/fork-ts-checker-webpack-plugin-1.0.1.tgz",\n      "integrity": "sha512-RrVxSiNtngsFDLQpP2QlrVaJK1zqRdwhtwslmDUWQTg3t3GW8QN7D3EpW/EAI+oqTqL0dGvLyluyYQ/eIrIHvQ==",\n      "requires": {\n        "babel-code-frame": "6.22.0",\n        "chalk": "2.4.1",\n        "chokidar": "2.0.4",\n        "micromatch": "3.1.10",\n        "minimatch": "3.0.4",\n        "semver": "5.6.0",\n        "tapable": "1.0.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "form-data": {\n      "version": "2.3.3",\n      "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",\n      "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",\n      "requires": {\n        "asynckit": "0.4.0",\n        "combined-stream": "1.0.6",\n        "mime-types": "2.1.12"\n      }\n    },\n    "forwarded": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.1.2.tgz",\n      "integrity": "sha1-mMI9qxF1ZXuMBXPozszZGw/xjIQ="\n    },\n    "fragment-cache": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz",\n      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=",\n      "requires": {\n        "map-cache": "0.2.2"\n      }\n    },\n    "fresh": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",\n      "integrity": "sha1-PYyt2Q2XZWn6g1qx+OSyOhBWBac="\n    },\n    "from": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/from/-/from-0.1.7.tgz",\n      "integrity": "sha1-g8YK/Fi5xWmXAH7Rp2izqzA6RP4="\n    },\n    "from2": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",\n      "integrity": "sha1-i/tVAr3kpNNs/e6gB/zKIdfjgq8=",\n      "requires": {\n        "inherits": "2.0.1",\n        "readable-stream": "2.0.0"\n      }\n    },\n    "fs-extra": {\n      "version": "7.0.1",\n      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-7.0.1.tgz",\n      "integrity": "sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==",\n      "requires": {\n        "graceful-fs": "4.1.2",\n        "jsonfile": "4.0.0",\n        "universalify": "0.1.0"\n      }\n    },\n    "fs-mkdirp-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/fs-mkdirp-stream/-/fs-mkdirp-stream-1.0.0.tgz",\n      "integrity": "sha1-C3gV/DIBxqaeFNuYzgmMFpNSWes=",\n      "requires": {\n        "graceful-fs": "4.1.11",\n        "through2": "2.0.3"\n      }\n    },\n    "fs-write-stream-atomic": {\n      "version": "1.0.10",\n      "resolved": "https://registry.npmjs.org/fs-write-stream-atomic/-/fs-write-stream-atomic-1.0.10.tgz",\n      "integrity": "sha1-tH31NJPvkR33VzHnCp3tAYnbQMk=",\n      "requires": {\n        "graceful-fs": "4.1.2",\n        "iferr": "0.1.5",\n        "imurmurhash": "0.1.4",\n        "readable-stream": "1 || 2"\n      }\n    },\n    "fs.realpath": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",\n      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="\n    },\n    "fsevents": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.0.6.tgz",\n      "integrity": "sha512-vfmKZp3XPM36DNF0qhW+Cdxk7xm7gTEHY1clv1Xq1arwRQuKZgAhw+NZNWbJBtuaNxzNXwhfdPYRrvIbjfS33A==",\n      "optional": true\n    },\n    "function-bind": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz",\n      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A=="\n    },\n    "functional-red-black-tree": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz",\n      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc="\n    },\n    "gaze": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/gaze/-/gaze-0.5.2.tgz",\n      "integrity": "sha1-QLcJU30k0dRXZ9takIaJ3+aaxE8=",\n      "requires": {\n        "globule": "~0.1.0"\n      }\n    },\n    "get-caller-file": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-1.0.3.tgz",\n      "integrity": "sha512-3t6rVToeoZfYSGd8YoLFR2DJkiQrIiUrGcjvFX2mDw3bn6k2OtwHN0TNCLbBO+w8qTvimhDkv+LSscbJY1vE6w=="\n    },\n    "get-imports": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/get-imports/-/get-imports-1.0.0.tgz",\n      "integrity": "sha1-R8C07piTUWQsVJdxk79Pyqv1N48=",\n      "requires": {\n        "array-uniq": "1.0.1",\n        "import-regex": "1.1.0"\n      }\n    },\n    "get-own-enumerable-property-symbols": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.0.tgz",\n      "integrity": "sha512-CIJYJC4GGF06TakLg8z4GQKvDsx9EMspVxOYih7LerEL/WosUnFIww45CGfxfeKHqlg3twgUrYRT1O3WQqjGCg=="\n    },\n    "get-stream": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/get-stream/-/get-stream-4.1.0.tgz",\n      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS/L66Kox+rJRNklLK7w==",\n      "requires": {\n        "pump": "3.0.0"\n      }\n    },\n    "get-value": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz",\n      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg="\n    },\n    "getpass": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",\n      "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",\n      "requires": {\n        "assert-plus": "1.0.0"\n      }\n    },\n    "glob": {\n      "version": "7.1.3",\n      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.3.tgz",\n      "integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",\n      "requires": {\n        "fs.realpath": "1.0.0",\n        "inflight": "1.0.4",\n        "inherits": "2",\n        "minimatch": "3.0.4",\n        "once": "1.3.0",\n        "path-is-absolute": "1.0.0"\n      }\n    },\n    "glob-base": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/glob-base/-/glob-base-0.3.0.tgz",\n      "integrity": "sha1-27Fk9iIbHAscz4Kuoyi0l98Oo8Q=",\n      "requires": {\n        "glob-parent": "2.0.0",\n        "is-glob": "2.0.0"\n      },\n      "dependencies": {\n        "glob-parent": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-2.0.0.tgz",\n          "integrity": "sha1-gTg9ctsFT8zPUzbaqQLxgvbtuyg=",\n          "requires": {\n            "is-glob": "2.0.0"\n          }\n        },\n        "is-extglob": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",\n          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="\n        },\n        "is-glob": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",\n          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",\n          "requires": {\n            "is-extglob": "1.0.0"\n          }\n        }\n      }\n    },\n    "glob-parent": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz",\n      "integrity": "sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=",\n      "requires": {\n        "is-glob": "3.1.0",\n        "path-dirname": "1.0.0"\n      },\n      "dependencies": {\n        "is-glob": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz",\n          "integrity": "sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=",\n          "requires": {\n            "is-extglob": "2.1.0"\n          }\n        }\n      }\n    },\n    "glob-stream": {\n      "version": "3.1.18",\n      "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-3.1.18.tgz",\n      "integrity": "sha1-kXCl8St5Awb9/lmPMT+PeVT9FDs=",\n      "requires": {\n        "glob": "4.3.1",\n        "glob2base": "0.0.12",\n        "minimatch": "2.0.1",\n        "ordered-read-streams": "0.1.0",\n        "through2": "0.6.1",\n        "unique-stream": "1.0.0"\n      },\n      "dependencies": {\n        "glob": {\n          "version": "4.5.3",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-4.5.3.tgz",\n          "integrity": "sha1-xstz0yJsHv7wTePFbQEvAzd+4V8=",\n          "requires": {\n            "inflight": "1.0.4",\n            "inherits": "2",\n            "minimatch": "2.0.1",\n            "once": "1.3.0"\n          }\n        },\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "minimatch": {\n          "version": "2.0.10",\n          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-2.0.10.tgz",\n          "integrity": "sha1-jQh8OcazjAAbl/ynzm0OHoCvusc=",\n          "requires": {\n            "brace-expansion": "1.0.0"\n          }\n        },\n        "readable-stream": {\n          "version": "1.0.34",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",\n          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        },\n        "through2": {\n          "version": "0.6.5",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",\n          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",\n          "requires": {\n            "readable-stream": ">=1.0.33-1 <1.1.0-0",\n            "xtend": ">=4.0.0 <4.1.0-0"\n          }\n        }\n      }\n    },\n    "glob-to-regexp": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz",\n      "integrity": "sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs="\n    },\n    "glob-watcher": {\n      "version": "0.0.6",\n      "resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-0.0.6.tgz",\n      "integrity": "sha1-uVtKjfdLOcgymLDAXJeLTZo7cQs=",\n      "requires": {\n        "gaze": "0.5.1"\n      }\n    },\n    "glob2base": {\n      "version": "0.0.12",\n      "resolved": "https://registry.npmjs.org/glob2base/-/glob2base-0.0.12.tgz",\n      "integrity": "sha1-nUGbPijxLoOjYhZKJ3BVkiycDVY=",\n      "requires": {\n        "find-index": "0.1.1"\n      }\n    },\n    "global-modules": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-2.0.0.tgz",\n      "integrity": "sha512-NGbfmJBp9x8IxyJSd1P+otYK8vonoJactOogrVfFRIAEY1ukil8RSKDz2Yo7wh1oihl51l/r6W4epkeKJHqL8A==",\n      "requires": {\n        "global-prefix": "3.0.0"\n      }\n    },\n    "global-prefix": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-3.0.0.tgz",\n      "integrity": "sha512-awConJSVCHVGND6x3tmMaKcQvwXLhjdkmomy2W+Goaui8YPgYgXJZewhg3fWC+DlfqqQuWg8AwqjGTD2nAPVWg==",\n      "requires": {\n        "ini": "1.3.5",\n        "kind-of": "6.0.2",\n        "which": "1.3.1"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "globals": {\n      "version": "11.11.0",\n      "resolved": "https://registry.npmjs.org/globals/-/globals-11.11.0.tgz",\n      "integrity": "sha512-WHq43gS+6ufNOEqlrDBxVEbb8ntfXrfAUU2ZOpCxrBdGKW3gyv8mCxAfIBD0DroPKGrJ2eSsXsLtY9MPntsyTw=="\n    },\n    "globby": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/globby/-/globby-8.0.2.tgz",\n      "integrity": "sha512-yTzMmKygLp8RUpG1Ymu2VXPSJQZjNAZPD4ywgYEaG7e4tBJeUQBO8OpXrf1RCNcEs5alsoJYPAMiIHP0cmeC7w==",\n      "requires": {\n        "array-union": "1.0.1",\n        "dir-glob": "2.0.0",\n        "fast-glob": "2.0.2",\n        "glob": "7.1.2",\n        "ignore": "3.3.5",\n        "pify": "3.0.0",\n        "slash": "1.0.0"\n      },\n      "dependencies": {\n        "ignore": {\n          "version": "3.3.10",\n          "resolved": "https://registry.npmjs.org/ignore/-/ignore-3.3.10.tgz",\n          "integrity": "sha512-Pgs951kaMm5GXP7MOvxERINe3gsaVjUWFm+UZPSq9xYriQAksyhg0csnS0KXSNRD5NmNdapXEpjxG49+AKh/ug=="\n        },\n        "slash": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",\n          "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="\n        }\n      }\n    },\n    "globule": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/globule/-/globule-0.1.0.tgz",\n      "integrity": "sha1-2cjt3h2nnRJaFRt5UzuXhnY0auU=",\n      "requires": {\n        "glob": "~3.1.21",\n        "lodash": "~1.0.1",\n        "minimatch": "~0.2.11"\n      },\n      "dependencies": {\n        "glob": {\n          "version": "3.1.21",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-3.1.21.tgz",\n          "integrity": "sha1-0p4KBV3qUTj00H7UDomC6DwgZs0=",\n          "requires": {\n            "graceful-fs": "~1.2.0",\n            "inherits": "1",\n            "minimatch": "~0.2.11"\n          }\n        },\n        "graceful-fs": {\n          "version": "1.2.3",\n          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-1.2.3.tgz",\n          "integrity": "sha1-FaSAaldUfLLS2/J/QuiajDRRs2Q="\n        },\n        "inherits": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/inherits/-/inherits-1.0.2.tgz",\n          "integrity": "sha1-ykMJ2t7mtUzAuNJH6NfHoJdb3Js="\n        },\n        "lodash": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/lodash/-/lodash-1.0.2.tgz",\n          "integrity": "sha1-j1dWDIO1n8JwvT1WG2kAQ0MOJVE="\n        },\n        "lru-cache": {\n          "version": "2.7.3",\n          "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-2.7.3.tgz",\n          "integrity": "sha1-bUUk6LlV+V1PW1iFHOId1y+06VI="\n        },\n        "minimatch": {\n          "version": "0.2.14",\n          "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-0.2.14.tgz",\n          "integrity": "sha1-x054BXT2PG+aCQ6Q775u9TpqdWo=",\n          "requires": {\n            "lru-cache": "2",\n            "sigmund": "~1.0.0"\n          }\n        }\n      }\n    },\n    "glogg": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/glogg/-/glogg-1.0.2.tgz",\n      "integrity": "sha512-5mwUoSuBk44Y4EshyiqcH95ZntbDdTQqA3QYSrxmzj28Ai0vXBGMH1ApSANH14j2sIRtqCEyg6PfsuP7ElOEDA==",\n      "requires": {\n        "sparkles": "1.0.0"\n      }\n    },\n    "graceful-fs": {\n      "version": "4.1.15",\n      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.15.tgz",\n      "integrity": "sha512-6uHUhOPEBgQ24HM+r6b/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA=="\n    },\n    "growly": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/growly/-/growly-1.3.0.tgz",\n      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE="\n    },\n    "gulp": {\n      "version": "3.9.1",\n      "resolved": "https://registry.npmjs.org/gulp/-/gulp-3.9.1.tgz",\n      "integrity": "sha1-VxzkWSjdQK9lFPxAEYZgFsE4RbQ=",\n      "requires": {\n        "archy": "1.0.0",\n        "chalk": "1.0.0",\n        "deprecated": "0.0.1",\n        "gulp-util": "3.0.0",\n        "interpret": "1.0.0",\n        "liftoff": "2.1.0",\n        "minimist": "1.1.0",\n        "orchestrator": "0.3.0",\n        "pretty-hrtime": "1.0.0",\n        "semver": "4.1.0",\n        "tildify": "1.0.0",\n        "v8flags": "2.0.2",\n        "vinyl-fs": "0.3.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "semver": {\n          "version": "4.3.6",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-4.3.6.tgz",\n          "integrity": "sha1-MAvG4OhjdPe6YQaLWx7NV/xlMto="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-autoprefixer": {\n      "version": "6.1.0",\n      "resolved": "https://registry.npmjs.org/gulp-autoprefixer/-/gulp-autoprefixer-6.1.0.tgz",\n      "integrity": "sha512-Ti/BUFe+ekhbDJfspZIMiOsOvw51KhI9EncsDfK7NaxjqRm+v4xS9v99kPxEoiDavpWqQWvG8Y6xT1mMlB3aXA==",\n      "requires": {\n        "autoprefixer": "9.5.1",\n        "fancy-log": "1.3.2",\n        "plugin-error": "1.0.1",\n        "postcss": "7.0.2",\n        "through2": "3.0.1",\n        "vinyl-sourcemaps-apply": "0.2.1"\n      },\n      "dependencies": {\n        "through2": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-3.0.1.tgz",\n          "integrity": "sha512-M96dvTalPT3YbYLaKaCuwu+j06D/8Jfib0o/PxbVt6Amhv3dUAtW6rTV1jPgJSBG83I/e04Y6xkVdVhSRhi0ww==",\n          "requires": {\n            "readable-stream": "2 || 3"\n          }\n        }\n      }\n    },\n    "gulp-chmod": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/gulp-chmod/-/gulp-chmod-2.0.0.tgz",\n      "integrity": "sha1-AMOQuSigeZslGsz2MaoJ4BzGKZw=",\n      "requires": {\n        "deep-assign": "1.0.0",\n        "stat-mode": "0.2.0",\n        "through2": "2.0.0"\n      }\n    },\n    "gulp-clean-css": {\n      "version": "3.10.0",\n      "resolved": "https://registry.npmjs.org/gulp-clean-css/-/gulp-clean-css-3.10.0.tgz",\n      "integrity": "sha512-7Isf9Y690o/Q5MVjEylH1H7L8WeZ89woW7DnhD5unTintOdZb67KdOayRgp9trUFo+f9UyJtuatV42e/+kghPg==",\n      "requires": {\n        "clean-css": "4.2.1",\n        "plugin-error": "1.0.1",\n        "through2": "2.0.3",\n        "vinyl-sourcemaps-apply": "0.2.1"\n      },\n      "dependencies": {\n        "through2": {\n          "version": "2.0.3",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.3.tgz",\n          "integrity": "sha1-AARWmzfHx0ujnEPzzteNGtlBQL4=",\n          "requires": {\n            "readable-stream": "2.1.5",\n            "xtend": "~4.0.1"\n          }\n        }\n      }\n    },\n    "gulp-clone": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-clone/-/gulp-clone-2.0.1.tgz",\n      "integrity": "sha512-SLg/KsHBbinR/pCX3PF5l1YlR28hLp0X+bcpf77PtMJ6zvAQ5kRjtCPV5Wt1wHXsXWZN0eTUZ15R8ZYpi/CdCA==",\n      "requires": {\n        "plugin-error": "0.1.2",\n        "through2": "2.0.3"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-concat": {\n      "version": "2.6.1",\n      "resolved": "https://registry.npmjs.org/gulp-concat/-/gulp-concat-2.6.1.tgz",\n      "integrity": "sha1-Yz0WyV2IUEYorQJmVmPO5aR5M1M=",\n      "requires": {\n        "concat-with-sourcemaps": "1.0.0",\n        "through2": "2.0.0",\n        "vinyl": "2.0.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "2.1.1",\n            "clone-buffer": "1.0.0",\n            "clone-stats": "1.0.0",\n            "cloneable-readable": "1.0.0",\n            "remove-trailing-separator": "1.0.1",\n            "replace-ext": "1.0.0"\n          }\n        }\n      }\n    },\n    "gulp-concat-css": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/gulp-concat-css/-/gulp-concat-css-3.1.0.tgz",\n      "integrity": "sha512-iLTBPS+cutlgLyK3bp9DMts+WuS8n2mQpjzQ7p/ZVQc8FO5fvpN+ntg9U6jsuNvPeuii82aKm8XeOzF0nUK+TA==",\n      "requires": {\n        "lodash.defaults": "3.0.0",\n        "parse-import": "2.0.0",\n        "plugin-error": "0.1.2",\n        "rework": "~1.0.0",\n        "rework-import": "2.0.0",\n        "rework-plugin-url": "1.0.1",\n        "through2": "~1.1.1",\n        "vinyl": "2.1.0"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        },\n        "readable-stream": {\n          "version": "1.1.14",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.1.14.tgz",\n          "integrity": "sha1-fPTFTvZI44EwhMY23SB54WbAgdk=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        },\n        "through2": {\n          "version": "1.1.1",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-1.1.1.tgz",\n          "integrity": "sha1-CEfLxESfNAVXTb3M2buEG4OsNUU=",\n          "requires": {\n            "readable-stream": ">=1.1.13-1 <1.2.0-0",\n            "xtend": ">=4.0.0 <4.1.0-0"\n          }\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "2.1.1",\n            "clone-buffer": "1.0.0",\n            "clone-stats": "1.0.0",\n            "cloneable-readable": "1.0.0",\n            "remove-trailing-separator": "1.0.1",\n            "replace-ext": "1.0.0"\n          }\n        }\n      }\n    },\n    "gulp-copy": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-copy/-/gulp-copy-4.0.1.tgz",\n      "integrity": "sha512-UbdAwmEiVNNv55KAiUYWOP6Za7h8JPHNNyekNx8Gyc5XRlpUzTrlEclps939nOeiDPsd6jUtT2LmfavJirbZQg==",\n      "requires": {\n        "gulp": "4.0.0",\n        "plugin-error": "0.1.2",\n        "through2": "2.0.3"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "0.1.0"\n          }\n        },\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "camelcase": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-3.0.0.tgz",\n          "integrity": "sha1-MvxLn82vhF/N9+c7uXysImHwqwo="\n        },\n        "cliui": {\n          "version": "3.2.0",\n          "resolved": "https://registry.npmjs.org/cliui/-/cliui-3.2.0.tgz",\n          "integrity": "sha1-EgYBU3qRbSmUD5NNo7SNWFo5IT0=",\n          "requires": {\n            "string-width": "1.0.1",\n            "strip-ansi": "3.0.1",\n            "wrap-ansi": "2.0.0"\n          }\n        },\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "find-up": {\n          "version": "1.1.2",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",\n          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",\n          "requires": {\n            "path-exists": "2.0.0",\n            "pinkie-promise": "2.0.0"\n          }\n        },\n        "findup-sync": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/findup-sync/-/findup-sync-3.0.0.tgz",\n          "integrity": "sha512-YbffarhcicEhOrm4CtrwdKBdCuz576RLdhJDsIfvNtxUuhdRet1qZcsMjqbePtAseKdAnDyM/IyXbu7PRPRLYg==",\n          "requires": {\n            "detect-file": "1.0.0",\n            "is-glob": "4.0.0",\n            "micromatch": "3.0.4",\n            "resolve-dir": "1.0.1"\n          }\n        },\n        "glob-stream": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/glob-stream/-/glob-stream-6.1.0.tgz",\n          "integrity": "sha1-cEXJlBOz65SIjYOrRtC0BMx73eQ=",\n          "requires": {\n            "extend": "3.0.0",\n            "glob": "7.1.1",\n            "glob-parent": "3.1.0",\n            "is-negated-glob": "1.0.0",\n            "ordered-read-streams": "1.0.0",\n            "pumpify": "1.3.5",\n            "readable-stream": "2.1.5",\n            "remove-trailing-separator": "1.0.1",\n            "to-absolute-glob": "2.0.0",\n            "unique-stream": "2.0.2"\n          }\n        },\n        "glob-watcher": {\n          "version": "5.0.3",\n          "resolved": "https://registry.npmjs.org/glob-watcher/-/glob-watcher-5.0.3.tgz",\n          "integrity": "sha512-8tWsULNEPHKQ2MR4zXuzSmqbdyV5PtwwCaWSGQ1WwHsJ07ilNeN1JB8ntxhckbnpSHaf9dXFUHzIWvm1I13dsg==",\n          "requires": {\n            "anymatch": "2.0.0",\n            "async-done": "1.2.0",\n            "chokidar": "2.0.0",\n            "is-negated-glob": "1.0.0",\n            "just-debounce": "1.0.0",\n            "object.defaults": "1.1.0"\n          }\n        },\n        "gulp": {\n          "version": "4.0.1",\n          "resolved": "https://registry.npmjs.org/gulp/-/gulp-4.0.1.tgz",\n          "integrity": "sha512-yDVtVunxrAdsk7rIV/b7lVSBifPN1Eqe6wTjsESGrFcL+MEVzaaeNTkpUuGTUptloSOU+8oJm/lBJbgPV+tMAw==",\n          "requires": {\n            "glob-watcher": "5.0.3",\n            "gulp-cli": "2.2.0",\n            "undertaker": "1.2.1",\n            "vinyl-fs": "3.0.0"\n          },\n          "dependencies": {\n            "gulp-cli": {\n              "version": "2.2.0",\n              "resolved": "https://registry.npmjs.org/gulp-cli/-/gulp-cli-2.2.0.tgz",\n              "integrity": "sha512-rGs3bVYHdyJpLqR0TUBnlcZ1O5O++Zs4bA0ajm+zr3WFCfiSLjGwoCBqFs18wzN+ZxahT9DkOK5nDf26iDsWjA==",\n              "requires": {\n                "ansi-colors": "1.0.1",\n                "archy": "1.0.0",\n                "array-sort": "1.0.0",\n                "color-support": "1.1.3",\n                "concat-stream": "1.6.0",\n                "copy-props": "2.0.1",\n                "fancy-log": "1.3.2",\n                "gulplog": "1.0.0",\n                "interpret": "1.1.0",\n                "isobject": "3.0.1",\n                "liftoff": "3.1.0",\n                "matchdep": "2.0.0",\n                "mute-stdout": "1.0.0",\n                "pretty-hrtime": "1.0.0",\n                "replace-homedir": "1.0.0",\n                "semver-greatest-satisfied-range": "1.1.0",\n                "v8flags": "3.0.1",\n                "yargs": "7.1.0"\n              }\n            }\n          }\n        },\n        "invert-kv": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-1.0.0.tgz",\n          "integrity": "sha1-EEqOSqym09jNFXqO+L+rLXo//bY="\n        },\n        "is-fullwidth-code-point": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",\n          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",\n          "requires": {\n            "number-is-nan": "1.0.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "lcid": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/lcid/-/lcid-1.0.0.tgz",\n          "integrity": "sha1-MIrMr6C8SDo4Z7S28rlQYlHRuDU=",\n          "requires": {\n            "invert-kv": "1.0.0"\n          }\n        },\n        "liftoff": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/liftoff/-/liftoff-3.1.0.tgz",\n          "integrity": "sha512-DlIPlJUkCV0Ips2zf2pJP0unEoT1kwYhiiPUGF3s/jtxTCjziNLoiVVh+jqWOWeFi6mmwQ5fNxvAUyPad4Dfog==",\n          "requires": {\n            "extend": "3.0.0",\n            "findup-sync": "3.0.0",\n            "fined": "1.0.1",\n            "flagged-respawn": "1.0.0",\n            "is-plain-object": "2.0.4",\n            "object.map": "1.0.0",\n            "rechoir": "0.6.2",\n            "resolve": "1.1.7"\n          }\n        },\n        "load-json-file": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-1.1.0.tgz",\n          "integrity": "sha1-lWkFcI1YtLq0wiYbBPWfMcmTdMA=",\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "parse-json": "2.2.0",\n            "pify": "2.0.0",\n            "pinkie-promise": "2.0.0",\n            "strip-bom": "2.0.0"\n          }\n        },\n        "ordered-read-streams": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-1.0.1.tgz",\n          "integrity": "sha1-d8DLN8QVJdZBZtmQ/61+xqDhNj4=",\n          "requires": {\n            "readable-stream": "2.0.1"\n          }\n        },\n        "os-locale": {\n          "version": "1.4.0",\n          "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-1.4.0.tgz",\n          "integrity": "sha1-IPnxeuKe00XoveWDsT0gCYA8FNk=",\n          "requires": {\n            "lcid": "1.0.0"\n          }\n        },\n        "parse-json": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-2.2.0.tgz",\n          "integrity": "sha1-9ID0BDTvgHQfhGkJn43qGPVaTck=",\n          "requires": {\n            "error-ex": "1.2.0"\n          }\n        },\n        "path-exists": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",\n          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",\n          "requires": {\n            "pinkie-promise": "2.0.0"\n          }\n        },\n        "path-type": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/path-type/-/path-type-1.1.0.tgz",\n          "integrity": "sha1-WcRPfuSR2nBNpBXaWkBwuk+P5EE=",\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "pify": "2.0.0",\n            "pinkie-promise": "2.0.0"\n          }\n        },\n        "pify": {\n          "version": "2.3.0",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        },\n        "read-pkg": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-1.1.0.tgz",\n          "integrity": "sha1-9f+qXs0pyzHAR0vKfXVra7KePyg=",\n          "requires": {\n            "load-json-file": "1.0.0",\n            "normalize-package-data": "2.3.2",\n            "path-type": "1.0.0"\n          }\n        },\n        "read-pkg-up": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-1.0.1.tgz",\n          "integrity": "sha1-nWPBMnbAZZGNV/ACpX9AobZD+wI=",\n          "requires": {\n            "find-up": "1.0.0",\n            "read-pkg": "1.0.0"\n          }\n        },\n        "require-main-filename": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",\n          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="\n        },\n        "string-width": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",\n          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",\n          "requires": {\n            "code-point-at": "1.0.0",\n            "is-fullwidth-code-point": "1.0.0",\n            "strip-ansi": "3.0.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "strip-bom": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",\n          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",\n          "requires": {\n            "is-utf8": "0.2.0"\n          }\n        },\n        "unique-stream": {\n          "version": "2.3.1",\n          "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-2.3.1.tgz",\n          "integrity": "sha512-2nY4TnBE70yoxHkDli7DMazpWiP7xMdCYqU2nBRO0UB+ZpEkGsSija7MvmvnZFUeC+mrgiUfcHSr3LmRFIg4+A==",\n          "requires": {\n            "json-stable-stringify-without-jsonify": "1.0.1",\n            "through2-filter": "3.0.0"\n          }\n        },\n        "v8flags": {\n          "version": "3.1.2",\n          "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-3.1.2.tgz",\n          "integrity": "sha512-MtivA7GF24yMPte9Rp/BWGCYQNaUj86zeYxV/x2RRJMKagImbbv3u8iJC57lNhWLPcGLJmHcHmFWkNsplbbLWw==",\n          "requires": {\n            "homedir-polyfill": "1.0.1"\n          }\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "2.1.1",\n            "clone-buffer": "1.0.0",\n            "clone-stats": "1.0.0",\n            "cloneable-readable": "1.0.0",\n            "remove-trailing-separator": "1.0.1",\n            "replace-ext": "1.0.0"\n          }\n        },\n        "vinyl-fs": {\n          "version": "3.0.3",\n          "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-3.0.3.tgz",\n          "integrity": "sha512-vIu34EkyNyJxmP0jscNzWBSygh7VWhqun6RmqVfXePrOwi9lhvRs//dOaGOTRUQr4tx7/zd26Tk5WeSVZitgng==",\n          "requires": {\n            "fs-mkdirp-stream": "1.0.0",\n            "glob-stream": "6.1.0",\n            "graceful-fs": "4.0.0",\n            "is-valid-glob": "1.0.0",\n            "lazystream": "1.0.0",\n            "lead": "1.0.0",\n            "object.assign": "4.0.4",\n            "pumpify": "1.3.5",\n            "readable-stream": "2.3.3",\n            "remove-bom-buffer": "3.0.0",\n            "remove-bom-stream": "1.2.0",\n            "resolve-options": "1.1.0",\n            "through2": "2.0.0",\n            "to-through": "2.0.0",\n            "value-or-function": "3.0.0",\n            "vinyl": "2.0.0",\n            "vinyl-sourcemap": "1.1.0"\n          }\n        },\n        "which-module": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/which-module/-/which-module-1.0.0.tgz",\n          "integrity": "sha1-u6Y8qGGUiZT/MHc2CJ47lgJsKk8="\n        },\n        "y18n": {\n          "version": "3.2.1",\n          "resolved": "https://registry.npmjs.org/y18n/-/y18n-3.2.1.tgz",\n          "integrity": "sha1-bRX7qITAhnnA136I53WegR4H+kE="\n        },\n        "yargs": {\n          "version": "7.1.0",\n          "resolved": "https://registry.npmjs.org/yargs/-/yargs-7.1.0.tgz",\n          "integrity": "sha1-a6MY6xaWFyf10oT46gA+jWFU0Mg=",\n          "requires": {\n            "camelcase": "3.0.0",\n            "cliui": "3.2.0",\n            "decamelize": "1.1.1",\n            "get-caller-file": "1.0.1",\n            "os-locale": "1.4.0",\n            "read-pkg-up": "1.0.1",\n            "require-directory": "2.1.1",\n            "require-main-filename": "1.0.1",\n            "set-blocking": "2.0.0",\n            "string-width": "1.0.2",\n            "which-module": "1.0.0",\n            "y18n": "3.2.1",\n            "yargs-parser": "5.0.0"\n          }\n        },\n        "yargs-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-5.0.0.tgz",\n          "integrity": "sha1-J17PDX/+Bcd+ZOfIbkzZS/DhIoo=",\n          "requires": {\n            "camelcase": "3.0.0"\n          }\n        }\n      }\n    },\n    "gulp-dedupe": {\n      "version": "0.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-dedupe/-/gulp-dedupe-0.0.2.tgz",\n      "integrity": "sha1-Nu+Srff89T4vCW++lmXZiPnhyn4=",\n      "requires": {\n        "colors": "~1.0.2",\n        "diff": "~1.0.8",\n        "gulp-util": "~3.0.1",\n        "lodash.defaults": "~2.4.1",\n        "through": "~2.3.6"\n      },\n      "dependencies": {\n        "lodash.defaults": {\n          "version": "2.4.1",\n          "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-2.4.1.tgz",\n          "integrity": "sha1-p+iIXwXmiFEUS24SqPNngCa8TFQ=",\n          "requires": {\n            "lodash._objecttypes": "~2.4.1",\n            "lodash.keys": "~2.4.1"\n          }\n        },\n        "lodash.keys": {\n          "version": "2.4.1",\n          "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-2.4.1.tgz",\n          "integrity": "sha1-SN6kbfj/djKxDXBrissmWR4rNyc=",\n          "requires": {\n            "lodash._isnative": "~2.4.1",\n            "lodash._shimkeys": "~2.4.1",\n            "lodash.isobject": "~2.4.1"\n          }\n        }\n      }\n    },\n    "gulp-flatten": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/gulp-flatten/-/gulp-flatten-0.4.0.tgz",\n      "integrity": "sha512-eg4spVTAiv1xXmugyaCxWne1oPtNG0UHEtABx5W8ScLiqAYceyYm6GYA36x0Qh8KOIXmAZV97L2aYGnKREG3Sg==",\n      "requires": {\n        "plugin-error": "0.1.2",\n        "through2": "2.0.0"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-header": {\n      "version": "2.0.7",\n      "resolved": "https://registry.npmjs.org/gulp-header/-/gulp-header-2.0.7.tgz",\n      "integrity": "sha512-qppGkYGQZnt/mRJiiR5wYZIUwNUn47Xpg4+6tHYDVeAW5IDLbHBQwbw7axfMLWGE+gKQpB+yXLeslHMw1/Haog==",\n      "requires": {\n        "concat-with-sourcemaps": "1.1.0",\n        "lodash.template": "4.4.0",\n        "map-stream": "0.0.7",\n        "through2": "2.0.0"\n      },\n      "dependencies": {\n        "map-stream": {\n          "version": "0.0.7",\n          "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",\n          "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="\n        }\n      }\n    },\n    "gulp-help": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/gulp-help/-/gulp-help-1.6.1.tgz",\n      "integrity": "sha1-Jh2xhuGDl/7z9qLCLpwxW/qIrgw=",\n      "requires": {\n        "chalk": "1.0.0",\n        "object-assign": "3.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "object-assign": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",\n          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-if": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-if/-/gulp-if-2.0.2.tgz",\n      "integrity": "sha1-pJe351cwBQQcqivIt92jyARE1ik=",\n      "requires": {\n        "gulp-match": "1.0.3",\n        "ternary-stream": "2.0.1",\n        "through2": "2.0.1"\n      }\n    },\n    "gulp-json-editor": {\n      "version": "2.5.1",\n      "resolved": "https://registry.npmjs.org/gulp-json-editor/-/gulp-json-editor-2.5.1.tgz",\n      "integrity": "sha512-YxioAmHLQlbw2tYAtJ8TKc1ljgcBwdC16h+ImHKFgbWHFMG0LhMfHWgtliRPGnSMleSQfDLoolWsVha254HdVw==",\n      "requires": {\n        "deepmerge": "3.2.0",\n        "detect-indent": "5.0.0",\n        "js-beautify": "1.9.0",\n        "plugin-error": "1.0.1",\n        "through2": "3.0.1"\n      },\n      "dependencies": {\n        "through2": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-3.0.1.tgz",\n          "integrity": "sha512-M96dvTalPT3YbYLaKaCuwu+j06D/8Jfib0o/PxbVt6Amhv3dUAtW6rTV1jPgJSBG83I/e04Y6xkVdVhSRhi0ww==",\n          "requires": {\n            "readable-stream": "2 || 3"\n          }\n        }\n      }\n    },\n    "gulp-less": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-less/-/gulp-less-4.0.1.tgz",\n      "integrity": "sha512-hmM2k0FfQp7Ptm3ZaqO2CkMX3hqpiIOn4OHtuSsCeFym63F7oWlEua5v6u1cIjVUKYsVIs9zPg9vbqTEb/udpA==",\n      "requires": {\n        "accord": "0.29.0",\n        "less": "2.6.x || 3.7.1",\n        "object-assign": "4.0.1",\n        "plugin-error": "0.1.2",\n        "replace-ext": "1.0.0",\n        "through2": "2.0.0",\n        "vinyl-sourcemaps-apply": "0.2.0"\n      },\n      "dependencies": {\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-match": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/gulp-match/-/gulp-match-1.0.3.tgz",\n      "integrity": "sha1-kcfA1/Kb7NZgbVfYCn+Hdqh6uo4=",\n      "requires": {\n        "minimatch": "3.0.3"\n      }\n    },\n    "gulp-notify": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/gulp-notify/-/gulp-notify-3.2.0.tgz",\n      "integrity": "sha512-qEocs1UVoDKKUjfsxJNMNwkRla0PbsyJwsqNNXpzYWsLQ29LhxRMY3wnTGZcc4hMHtalnvah/Dwlwb4NijH/0A==",\n      "requires": {\n        "ansi-colors": "1.0.1",\n        "fancy-log": "1.3.2",\n        "lodash.template": "4.4.0",\n        "node-notifier": "5.2.1",\n        "node.extend": "2.0.0",\n        "plugin-error": "0.1.2",\n        "through2": "2.0.3"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "0.1.0"\n          }\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        }\n      }\n    },\n    "gulp-plumber": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/gulp-plumber/-/gulp-plumber-1.2.1.tgz",\n      "integrity": "sha512-mctAi9msEAG7XzW5ytDVZ9PxWMzzi1pS2rBH7lA095DhMa6KEXjm+St0GOCc567pJKJ/oCvosVAZEpAey0q2eQ==",\n      "requires": {\n        "chalk": "1.1.3",\n        "fancy-log": "1.3.2",\n        "plugin-error": "0.1.2",\n        "through2": "2.0.3"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-print": {\n      "version": "5.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-print/-/gulp-print-5.0.2.tgz",\n      "integrity": "sha512-iIpHMzC/b3gFvVXOfP9Jk94SWGIsDLVNUrxULRleQev+08ug07mh84b1AOlW6QDQdmInQiqDFqJN1UvhU2nXdg==",\n      "requires": {\n        "ansi-colors": "3.2.4",\n        "fancy-log": "1.3.3",\n        "map-stream": "0.0.7",\n        "vinyl": "2.2.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "map-stream": {\n          "version": "0.0.7",\n          "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.0.7.tgz",\n          "integrity": "sha1-ih8HiW2CsQkmvTdEokIACfiJdKg="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "2.1.1",\n            "clone-buffer": "1.0.0",\n            "clone-stats": "1.0.0",\n            "cloneable-readable": "1.0.0",\n            "remove-trailing-separator": "1.0.1",\n            "replace-ext": "1.0.0"\n          }\n        }\n      }\n    },\n    "gulp-rename": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/gulp-rename/-/gulp-rename-1.4.0.tgz",\n      "integrity": "sha512-swzbIGb/arEoFK89tPY58vg3Ok1bw+d35PfUNwWqdo7KM4jkmuGA78JiDNqR+JeZFaeeHnRg9N7aihX3YPmsyg=="\n    },\n    "gulp-replace": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/gulp-replace/-/gulp-replace-1.0.0.tgz",\n      "integrity": "sha512-lgdmrFSI1SdhNMXZQbrC75MOl1UjYWlOWNbNRnz+F/KHmgxt3l6XstBoAYIdadwETFyG/6i+vWUSCawdC3pqOw==",\n      "requires": {\n        "istextorbinary": "2.2.1",\n        "readable-stream": "2.0.1",\n        "replacestream": "4.0.0"\n      }\n    },\n    "gulp-rtlcss": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/gulp-rtlcss/-/gulp-rtlcss-1.3.0.tgz",\n      "integrity": "sha512-xh9vuxDc5+5C583jJwy/F6nd6wdtz8YnjderfwjDWr4UPq0fzK3w9Yv03SPkAJlUFUz6Y/7Sli7h54PbJZ2X+A==",\n      "requires": {\n        "plugin-error": "1.0.1",\n        "rtlcss": "2.4.0",\n        "through2": "2.0.3",\n        "vinyl-sourcemaps-apply": "0.2.1"\n      }\n    },\n    "gulp-uglify": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/gulp-uglify/-/gulp-uglify-3.0.2.tgz",\n      "integrity": "sha512-gk1dhB74AkV2kzqPMQBLA3jPoIAPd/nlNzP2XMDSG8XZrqnlCiDGAqC+rZOumzFvB5zOphlFh6yr3lgcAb/OOg==",\n      "requires": {\n        "array-each": "1.0.1",\n        "extend-shallow": "3.0.2",\n        "gulplog": "1.0.0",\n        "has-gulplog": "0.1.0",\n        "isobject": "3.0.1",\n        "make-error-cause": "1.1.1",\n        "safe-buffer": "5.1.2",\n        "through2": "2.0.0",\n        "uglify-js": "3.0.5",\n        "vinyl-sourcemaps-apply": "0.2.0"\n      }\n    },\n    "gulp-util": {\n      "version": "3.0.8",\n      "resolved": "https://registry.npmjs.org/gulp-util/-/gulp-util-3.0.8.tgz",\n      "integrity": "sha1-AFTh50RQLifATBh8PsxQXdVLu08=",\n      "requires": {\n        "array-differ": "1.0.0",\n        "array-uniq": "1.0.2",\n        "beeper": "1.0.0",\n        "chalk": "1.0.0",\n        "dateformat": "2.0.0",\n        "fancy-log": "1.1.0",\n        "gulplog": "1.0.0",\n        "has-gulplog": "0.1.0",\n        "lodash._reescape": "3.0.0",\n        "lodash._reevaluate": "3.0.0",\n        "lodash._reinterpolate": "3.0.0",\n        "lodash.template": "3.0.0",\n        "minimist": "1.1.0",\n        "multipipe": "0.1.2",\n        "object-assign": "3.0.0",\n        "replace-ext": "0.0.1",\n        "through2": "2.0.0",\n        "vinyl": "0.5.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "lodash.template": {\n          "version": "3.6.2",\n          "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-3.6.2.tgz",\n          "integrity": "sha1-+M3sxhaaJVvpCYrosMU9N4kx0U8=",\n          "requires": {\n            "lodash._basecopy": "3.0.0",\n            "lodash._basetostring": "3.0.0",\n            "lodash._basevalues": "3.0.0",\n            "lodash._isiterateecall": "3.0.0",\n            "lodash._reinterpolate": "3.0.0",\n            "lodash.escape": "3.0.0",\n            "lodash.keys": "3.0.0",\n            "lodash.restparam": "3.0.0",\n            "lodash.templatesettings": "3.0.0"\n          }\n        },\n        "lodash.templatesettings": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-3.1.1.tgz",\n          "integrity": "sha1-+zB4RHU7Zrnxr6VOJix0UwfbqOU=",\n          "requires": {\n            "lodash._reinterpolate": "3.0.0",\n            "lodash.escape": "3.0.0"\n          }\n        },\n        "object-assign": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",\n          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="\n        },\n        "replace-ext": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",\n          "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "gulp-watch": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/gulp-watch/-/gulp-watch-5.0.1.tgz",\n      "integrity": "sha512-HnTSBdzAOFIT4wmXYPDUn783TaYAq9bpaN05vuZNP5eni3z3aRx0NAKbjhhMYtcq76x4R1wf4oORDGdlrEjuog==",\n      "requires": {\n        "ansi-colors": "1.1.0",\n        "anymatch": "1.3.0",\n        "chokidar": "2.0.0",\n        "fancy-log": "1.3.2",\n        "glob-parent": "3.0.1",\n        "object-assign": "4.1.0",\n        "path-is-absolute": "1.0.1",\n        "plugin-error": "1.0.1",\n        "readable-stream": "2.2.2",\n        "slash": "1.0.0",\n        "vinyl": "2.1.0",\n        "vinyl-file": "2.0.0"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "0.1.0"\n          }\n        },\n        "anymatch": {\n          "version": "1.3.2",\n          "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-1.3.2.tgz",\n          "integrity": "sha512-0XNayC8lTHQ2OI8aljNCN3sSx6hsr/1+rlcDAotXJR7C1oZZHCNsfpbKwMjRA3Uqb5tF1Rae2oloTr4xpq+WjA==",\n          "requires": {\n            "micromatch": "2.1.5",\n            "normalize-path": "2.0.0"\n          }\n        },\n        "arr-diff": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-2.0.0.tgz",\n          "integrity": "sha1-jzuCf5Vai9ZpaX5KQlasPOrjVs8=",\n          "requires": {\n            "arr-flatten": "1.0.1"\n          }\n        },\n        "array-unique": {\n          "version": "0.2.1",\n          "resolved": "https://registry.npmjs.org/array-unique/-/array-unique-0.2.1.tgz",\n          "integrity": "sha1-odl8yvy8JiXMcPrc6zalDFiwGlM="\n        },\n        "braces": {\n          "version": "1.8.5",\n          "resolved": "https://registry.npmjs.org/braces/-/braces-1.8.5.tgz",\n          "integrity": "sha1-uneWLhLf+WnWt2cR6RS3N4V79qc=",\n          "requires": {\n            "expand-range": "1.8.1",\n            "preserve": "0.2.0",\n            "repeat-element": "1.1.2"\n          }\n        },\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "expand-brackets": {\n          "version": "0.1.5",\n          "resolved": "https://registry.npmjs.org/expand-brackets/-/expand-brackets-0.1.5.tgz",\n          "integrity": "sha1-3wcoTjQqgHzXM6xa9yQR5YHRF3s=",\n          "requires": {\n            "is-posix-bracket": "0.1.0"\n          }\n        },\n        "extglob": {\n          "version": "0.3.2",\n          "resolved": "https://registry.npmjs.org/extglob/-/extglob-0.3.2.tgz",\n          "integrity": "sha1-Lhj/PS9JqydlzskCPwEdqo2DSaE=",\n          "requires": {\n            "is-extglob": "1.0.0"\n          }\n        },\n        "fancy-log": {\n          "version": "1.3.2",\n          "resolved": "https://registry.npmjs.org/fancy-log/-/fancy-log-1.3.2.tgz",\n          "integrity": "sha1-9BEl49hPLn2JpD0G2VjI94vha+E=",\n          "requires": {\n            "ansi-gray": "0.1.1",\n            "color-support": "1.1.3",\n            "time-stamp": "1.0.0"\n          }\n        },\n        "is-extglob": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",\n          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="\n        },\n        "is-glob": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",\n          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",\n          "requires": {\n            "is-extglob": "1.0.0"\n          }\n        },\n        "micromatch": {\n          "version": "2.3.11",\n          "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-2.3.11.tgz",\n          "integrity": "sha1-hmd8l9FyCzY0MdBNDRUpO9OMFWU=",\n          "requires": {\n            "arr-diff": "2.0.0",\n            "array-unique": "0.2.1",\n            "braces": "1.8.2",\n            "expand-brackets": "0.1.4",\n            "extglob": "0.3.1",\n            "filename-regex": "2.0.0",\n            "is-extglob": "1.0.0",\n            "is-glob": "2.0.1",\n            "kind-of": "3.0.2",\n            "normalize-path": "2.0.1",\n            "object.omit": "2.0.0",\n            "parse-glob": "3.0.4",\n            "regex-cache": "0.4.2"\n          }\n        },\n        "slash": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/slash/-/slash-1.0.0.tgz",\n          "integrity": "sha1-xB8vbDn8FtHNF61LXYlhFK5HDVU="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "2.1.1",\n            "clone-buffer": "1.0.0",\n            "clone-stats": "1.0.0",\n            "cloneable-readable": "1.0.0",\n            "remove-trailing-separator": "1.0.1",\n            "replace-ext": "1.0.0"\n          }\n        }\n      }\n    },\n    "gulplog": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/gulplog/-/gulplog-1.0.0.tgz",\n      "integrity": "sha1-4oxNRdBey77YGDY86PnFkmIp/+U=",\n      "requires": {\n        "glogg": "1.0.0"\n      }\n    },\n    "gzip-size": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/gzip-size/-/gzip-size-5.0.0.tgz",\n      "integrity": "sha512-5iI7omclyqrnWw4XbXAmGhPsABkSIDQonv2K0h61lybgofWa6iZyvrI3r2zsJH4P8Nb64fFVzlvfhs0g7BBxAA==",\n      "requires": {\n        "duplexer": "0.1.1",\n        "pify": "3.0.0"\n      }\n    },\n    "handle-thing": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/handle-thing/-/handle-thing-2.0.0.tgz",\n      "integrity": "sha512-d4sze1JNC454Wdo2fkuyzCr6aHcbL6PGGuFAz0Li/NcOm1tCHGnWDRmJP85dh9IhQErTc2svWFEX5xHIOo//kQ=="\n    },\n    "handlebars": {\n      "version": "4.1.2",\n      "resolved": "https://registry.npmjs.org/handlebars/-/handlebars-4.1.2.tgz",\n      "integrity": "sha512-nvfrjqvt9xQ8Z/w0ijewdD/vvWDTOweBUm96NTr66Wfvo1mJenBLwcYmPs3TIBP5ruzYGD7Hx/DaM9RmhroGPw==",\n      "requires": {\n        "neo-async": "2.6.0",\n        "optimist": "0.6.1",\n        "source-map": "0.6.1",\n        "uglify-js": "3.1.4"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "har-schema": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",\n      "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI="\n    },\n    "har-validator": {\n      "version": "5.1.3",\n      "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",\n      "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",\n      "requires": {\n        "ajv": "6.5.5",\n        "har-schema": "2.0.0"\n      }\n    },\n    "harmony-reflect": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/harmony-reflect/-/harmony-reflect-1.6.1.tgz",\n      "integrity": "sha512-WJTeyp0JzGtHcuMsi7rw2VwtkvLa+JyfEKJCFyfcS0+CDkjQ5lHPu7zEhFZP+PDSRrEgXa5Ah0l1MbgbE41XjA=="\n    },\n    "has": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/has/-/has-1.0.3.tgz",\n      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==",\n      "requires": {\n        "function-bind": "1.1.1"\n      }\n    },\n    "has-ansi": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/has-ansi/-/has-ansi-2.0.0.tgz",\n      "integrity": "sha1-NPUEnOHs3ysGSa8+8k5F7TVBbZE=",\n      "requires": {\n        "ansi-regex": "2.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        }\n      }\n    },\n    "has-flag": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",\n      "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="\n    },\n    "has-gulplog": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/has-gulplog/-/has-gulplog-0.1.0.tgz",\n      "integrity": "sha1-ZBTIKRNpfaUVkDl9r7EvIpZ4Ec4=",\n      "requires": {\n        "sparkles": "1.0.0"\n      }\n    },\n    "has-symbols": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.0.tgz",\n      "integrity": "sha1-uhqPGvKg/DllD1yFA2dwQSIGO0Q="\n    },\n    "has-value": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz",\n      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",\n      "requires": {\n        "get-value": "2.0.6",\n        "has-values": "1.0.0",\n        "isobject": "3.0.0"\n      }\n    },\n    "has-values": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz",\n      "integrity": "sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=",\n      "requires": {\n        "is-number": "3.0.0",\n        "kind-of": "4.0.0"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        },\n        "kind-of": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz",\n          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",\n          "requires": {\n            "is-buffer": "1.1.5"\n          }\n        }\n      }\n    },\n    "hash-base": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/hash-base/-/hash-base-3.0.4.tgz",\n      "integrity": "sha1-X8hoaEfs1zSZQDMZprCj8/auSRg=",\n      "requires": {\n        "inherits": "2.0.1",\n        "safe-buffer": "5.0.1"\n      }\n    },\n    "hash.js": {\n      "version": "1.1.7",\n      "resolved": "https://registry.npmjs.org/hash.js/-/hash.js-1.1.7.tgz",\n      "integrity": "sha512-taOaskGt4z4SOANNseOviYDvjEJinIkRgmp7LbKP2YTTmVxWBl87s/uzK9r+44BclBSp2X7K1hqeNfz9JbBeXA==",\n      "requires": {\n        "inherits": "2.0.3",\n        "minimalistic-assert": "1.0.1"\n      }\n    },\n    "hast-util-from-parse5": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/hast-util-from-parse5/-/hast-util-from-parse5-5.0.0.tgz",\n      "integrity": "sha512-A7ev5OseS/J15214cvDdcI62uwovJO2PB60Xhnq7kaxvvQRFDEccuqbkrFXU03GPBGopdPqlpQBRqIcDS/Fjbg==",\n      "requires": {\n        "ccount": "1.0.3",\n        "hastscript": "5.0.0",\n        "property-information": "5.0.0",\n        "web-namespaces": "1.1.2",\n        "xtend": "4.0.1"\n      }\n    },\n    "hast-util-parse-selector": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/hast-util-parse-selector/-/hast-util-parse-selector-2.2.1.tgz",\n      "integrity": "sha512-Xyh0v+nHmQvrOqop2Jqd8gOdyQtE8sIP9IQf7mlVDqp924W4w/8Liuguk2L2qei9hARnQSG2m+wAOCxM7npJVw=="\n    },\n    "hastscript": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/hastscript/-/hastscript-5.0.0.tgz",\n      "integrity": "sha512-xJtuJ8D42Xtq5yJrnDg/KAIxl2cXBXKoiIJwmWX9XMf8113qHTGl/Bf7jEsxmENJ4w6q4Tfl8s/Y6mEZo8x8qw==",\n      "requires": {\n        "comma-separated-tokens": "1.0.0",\n        "hast-util-parse-selector": "2.2.0",\n        "property-information": "5.0.1",\n        "space-separated-tokens": "1.0.0"\n      }\n    },\n    "he": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/he/-/he-1.2.0.tgz",\n      "integrity": "sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw=="\n    },\n    "hex-color-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",\n      "integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ=="\n    },\n    "hmac-drbg": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",\n      "integrity": "sha1-0nRXAQJabHdabFRXk+1QL8DGSaE=",\n      "requires": {\n        "hash.js": "1.0.3",\n        "minimalistic-assert": "1.0.0",\n        "minimalistic-crypto-utils": "1.0.1"\n      }\n    },\n    "hoek": {\n      "version": "6.1.3",\n      "resolved": "https://registry.npmjs.org/hoek/-/hoek-6.1.3.tgz",\n      "integrity": "sha512-YXXAAhmF9zpQbC7LEcREFtXfGq5K1fmd+4PHkBq8NUqmzW3G+Dq10bI/i0KucLRwss3YYFQ0fSfoxBZYiGUqtQ=="\n    },\n    "hoist-non-react-statics": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.0.tgz",\n      "integrity": "sha512-0XsbTXxgiaCDYDIWFcwkmerZPSwywfUqYmwT4jzewKTQSWoE6FCMoUVOeBJWK3E/CrWbxRG3m5GzY4lnIwGRBA==",\n      "requires": {\n        "react-is": "16.7.0"\n      }\n    },\n    "homedir-polyfill": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/homedir-polyfill/-/homedir-polyfill-1.0.3.tgz",\n      "integrity": "sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==",\n      "requires": {\n        "parse-passwd": "1.0.0"\n      }\n    },\n    "hosted-git-info": {\n      "version": "2.7.1",\n      "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.7.1.tgz",\n      "integrity": "sha512-7T/BxH19zbcCTa8XkMlbK5lTo1WtgkFi3GvdWEyNuc4Vex7/9Dqbnpsf4JMydcfj9HCg4zUWFTL3Za6lapg5/w=="\n    },\n    "hpack.js": {\n      "version": "2.1.6",\n      "resolved": "https://registry.npmjs.org/hpack.js/-/hpack.js-2.1.6.tgz",\n      "integrity": "sha1-h3dMCUnlE/QuhFdbPEVoH63ioLI=",\n      "requires": {\n        "inherits": "2.0.1",\n        "obuf": "1.0.0",\n        "readable-stream": "2.0.1",\n        "wbuf": "1.1.0"\n      }\n    },\n    "hsl-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/hsl-regex/-/hsl-regex-1.0.0.tgz",\n      "integrity": "sha1-1JMwx4ntgZ4nakwNJy3/owsY/m4="\n    },\n    "hsla-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/hsla-regex/-/hsla-regex-1.0.0.tgz",\n      "integrity": "sha1-wc56MWjIxmFAM6S194d/OyJfnDg="\n    },\n    "html-comment-regex": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/html-comment-regex/-/html-comment-regex-1.1.2.tgz",\n      "integrity": "sha512-P+M65QY2JQ5Y0G9KKdlDpo0zK+/OHptU5AaBwUfAIDJZk1MYf32Frm84EcOytfJE0t5JvkAnKlmjsXDnWzCJmQ=="\n    },\n    "html-encoding-sniffer": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/html-encoding-sniffer/-/html-encoding-sniffer-1.0.2.tgz",\n      "integrity": "sha512-71lZziiDnsuabfdYiUeWdCVyKuqwWi23L8YeIgV9jSSZHCtb6wB1BKWooH7L3tn4/FuZJMVWyNaIDr4RGmaSYw==",\n      "requires": {\n        "whatwg-encoding": "1.0.1"\n      }\n    },\n    "html-entities": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz",\n      "integrity": "sha1-DfKTUfByEWNRXfueVUPl9u7VFi8="\n    },\n    "html-minifier": {\n      "version": "3.5.21",\n      "resolved": "https://registry.npmjs.org/html-minifier/-/html-minifier-3.5.21.tgz",\n      "integrity": "sha512-LKUKwuJDhxNa3uf/LPR/KVjm/l3rBqtYeCOAekvG8F1vItxMUpueGd94i/asDDr8/1u7InxzFA5EeGjhhG5mMA==",\n      "requires": {\n        "camel-case": "3.0.x",\n        "clean-css": "4.2.x",\n        "commander": "2.17.x",\n        "he": "1.2.x",\n        "param-case": "2.1.x",\n        "relateurl": "0.2.x",\n        "uglify-js": "3.4.x"\n      },\n      "dependencies": {\n        "commander": {\n          "version": "2.17.1",\n          "resolved": "https://registry.npmjs.org/commander/-/commander-2.17.1.tgz",\n          "integrity": "sha512-wPMUt6FnH2yzG95SA6mzjQOEKUU3aLaDEmzs1ti+1E9h+CsrZghRlqEM/EJ4KscsQVG8uNN4uVreUeT8+drlgg=="\n        }\n      }\n    },\n    "html-webpack-plugin": {\n      "version": "4.0.0-beta.5",\n      "resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-4.0.0-beta.5.tgz",\n      "integrity": "sha512-y5l4lGxOW3pz3xBTFdfB9rnnrWRPVxlAhX6nrBYIcW+2k2zC3mSp/3DxlWVCMBfnO6UAnoF8OcFn0IMy6kaKAQ==",\n      "requires": {\n        "html-minifier": "3.5.20",\n        "loader-utils": "1.1.0",\n        "lodash": "4.17.11",\n        "pretty-error": "2.1.1",\n        "tapable": "1.1.0",\n        "util.promisify": "1.0.0"\n      }\n    },\n    "htmlparser2": {\n      "version": "3.10.1",\n      "resolved": "https://registry.npmjs.org/htmlparser2/-/htmlparser2-3.10.1.tgz",\n      "integrity": "sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==",\n      "requires": {\n        "domelementtype": "1.3.1",\n        "domhandler": "2.3.0",\n        "domutils": "1.5.1",\n        "entities": "1.1.1",\n        "inherits": "2.0.1",\n        "readable-stream": "3.1.1"\n      },\n      "dependencies": {\n        "readable-stream": {\n          "version": "3.3.0",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.3.0.tgz",\n          "integrity": "sha512-EsI+s3k3XsW+fU8fQACLN59ky34AZ14LoeVZpYwmZvldCFo0r0gnelwF2TcMjLor/BTL5aDJVBMkss0dthToPw==",\n          "requires": {\n            "inherits": "2.0.3",\n            "string_decoder": "1.1.1",\n            "util-deprecate": "1.0.1"\n          }\n        }\n      }\n    },\n    "http-deceiver": {\n      "version": "1.2.7",\n      "resolved": "https://registry.npmjs.org/http-deceiver/-/http-deceiver-1.2.7.tgz",\n      "integrity": "sha1-+nFolEq5pRnTN8sL7HKE3D5yPYc="\n    },\n    "http-errors": {\n      "version": "1.6.3",\n      "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.6.3.tgz",\n      "integrity": "sha1-i1VoC7S+KDoLW/TqLjhYC+HZMg0=",\n      "requires": {\n        "depd": "~1.1.2",\n        "inherits": "2.0.3",\n        "setprototypeof": "1.1.0",\n        "statuses": ">= 1.4.0 < 2"\n      }\n    },\n    "http-parser-js": {\n      "version": "0.5.0",\n      "resolved": "https://registry.npmjs.org/http-parser-js/-/http-parser-js-0.5.0.tgz",\n      "integrity": "sha512-cZdEF7r4gfRIq7ezX9J0T+kQmJNOub71dWbgAXVHDct80TKP4MCETtZQ31xyv38UwgzkWPYF/Xc0ge55dW9Z9w=="\n    },\n    "http-proxy": {\n      "version": "1.17.0",\n      "resolved": "https://registry.npmjs.org/http-proxy/-/http-proxy-1.17.0.tgz",\n      "integrity": "sha512-Taqn+3nNvYRfJ3bGvKfBSRwy1v6eePlm3oc/aWVxZp57DQr5Eq3xhKJi7Z4hZpS8PC3H4qI+Yly5EmFacGuA/g==",\n      "requires": {\n        "eventemitter3": "3.0.0",\n        "follow-redirects": "1.0.0",\n        "requires-port": "1.0.0"\n      }\n    },\n    "http-proxy-middleware": {\n      "version": "0.19.1",\n      "resolved": "https://registry.npmjs.org/http-proxy-middleware/-/http-proxy-middleware-0.19.1.tgz",\n      "integrity": "sha512-yHYTgWMQO8VvwNS22eLLloAkvungsKdKTLO8AJlftYIKNfJr3GK3zK0ZCfzDDGUBttdGc8xFy1mCitvNKQtC3Q==",\n      "requires": {\n        "http-proxy": "1.17.0",\n        "is-glob": "4.0.0",\n        "lodash": "4.17.11",\n        "micromatch": "3.1.10"\n      }\n    },\n    "http-signature": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",\n      "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",\n      "requires": {\n        "assert-plus": "1.0.0",\n        "jsprim": "1.2.2",\n        "sshpk": "1.7.0"\n      }\n    },\n    "https-browserify": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/https-browserify/-/https-browserify-1.0.0.tgz",\n      "integrity": "sha1-7AbBDgo0wPL68Zn3/X/Hj//QPHM="\n    },\n    "hyphenate-style-name": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/hyphenate-style-name/-/hyphenate-style-name-1.0.3.tgz",\n      "integrity": "sha512-EcuixamT82oplpoJ2XU4pDtKGWQ7b00CD9f1ug9IaQ3p1bkHMiKCZ9ut9QDI6qsa6cpUuB+A/I+zLtdNK4n2DQ=="\n    },\n    "i": {\n      "version": "0.3.6",\n      "resolved": "https://registry.npmjs.org/i/-/i-0.3.6.tgz",\n      "integrity": "sha1-2WyScyB28HJxG2sQ/X1PZa2O4j0="\n    },\n    "iconv-lite": {\n      "version": "0.4.24",\n      "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",\n      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",\n      "requires": {\n        "safer-buffer": ">= 2.1.2 < 3"\n      }\n    },\n    "icss-replace-symbols": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/icss-replace-symbols/-/icss-replace-symbols-1.1.0.tgz",\n      "integrity": "sha1-Bupvg2ead0njhs/h/oEq5dsiPe0="\n    },\n    "icss-utils": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/icss-utils/-/icss-utils-4.1.0.tgz",\n      "integrity": "sha512-3DEun4VOeMvSczifM3F2cKQrDQ5Pj6WKhkOq6HD4QTnDUAq8MQRxy5TX6Sy1iY6WPBe4gQ3p5vTECjbIkglkkQ==",\n      "requires": {\n        "postcss": "7.0.14"\n      }\n    },\n    "identity-obj-proxy": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/identity-obj-proxy/-/identity-obj-proxy-3.0.0.tgz",\n      "integrity": "sha1-lNK9qWCERT7zb7xarsN+D3nx/BQ=",\n      "requires": {\n        "harmony-reflect": "1.4.6"\n      }\n    },\n    "ieee754": {\n      "version": "1.1.13",\n      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.1.13.tgz",\n      "integrity": "sha512-4vf7I2LYV/HaWerSo3XmlMkp5eZ83i+/CDluXi/IGTs/O1sejBNhTtnxzmRZfvOUqj7lZjqHkeTvpgSFDlWZTg=="\n    },\n    "iferr": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/iferr/-/iferr-0.1.5.tgz",\n      "integrity": "sha1-xg7taebY/bazEEofy8ocGS3FtQE="\n    },\n    "ignore": {\n      "version": "4.0.6",\n      "resolved": "https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz",\n      "integrity": "sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg=="\n    },\n    "image-size": {\n      "version": "0.5.5",\n      "resolved": "https://registry.npmjs.org/image-size/-/image-size-0.5.5.tgz",\n      "integrity": "sha1-Cd/Uq50g4p6xw+gLiZA3jfnjy5w=",\n      "optional": true\n    },\n    "immer": {\n      "version": "1.10.0",\n      "resolved": "https://registry.npmjs.org/immer/-/immer-1.10.0.tgz",\n      "integrity": "sha512-O3sR1/opvCDGLEVcvrGTMtLac8GJ5IwZC4puPrLuRj3l7ICKvkmA0vGuU9OW8mV9WIBRnaxp5GJh9IEAaNOoYg=="\n    },\n    "import-cwd": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/import-cwd/-/import-cwd-2.1.0.tgz",\n      "integrity": "sha1-qmzzbnInYShcs3HsZRn1PiQ1sKk=",\n      "requires": {\n        "import-from": "2.1.0"\n      }\n    },\n    "import-fresh": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-2.0.0.tgz",\n      "integrity": "sha1-2BNVwVYS04bGH53dOSLUMEgipUY=",\n      "requires": {\n        "caller-path": "2.0.0",\n        "resolve-from": "3.0.0"\n      }\n    },\n    "import-from": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/import-from/-/import-from-2.1.0.tgz",\n      "integrity": "sha1-M1238qev/VOqpHHUuAId7ja387E=",\n      "requires": {\n        "resolve-from": "3.0.0"\n      }\n    },\n    "import-local": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/import-local/-/import-local-2.0.0.tgz",\n      "integrity": "sha512-b6s04m3O+s3CGSbqDIyP4R6aAwAeYlVq9+WUWep6iHa8ETRf9yei1U48C5MmfJmV9AiLYYBKPMq/W+/WRpQmCQ==",\n      "requires": {\n        "pkg-dir": "3.0.0",\n        "resolve-cwd": "2.0.0"\n      }\n    },\n    "import-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/import-regex/-/import-regex-1.1.0.tgz",\n      "integrity": "sha1-pVxS5McFx2XKIQ6SQqBrvMiqf2Y="\n    },\n    "imurmurhash": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",\n      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o="\n    },\n    "indefinite-observable": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/indefinite-observable/-/indefinite-observable-1.0.2.tgz",\n      "integrity": "sha512-Mps0898zEduHyPhb7UCgNmfzlqNZknVmaFz5qzr0mm04YQ5FGLhAyK/dJ+NaRxGyR6juQXIxh5Ev0xx+qq0nYA==",\n      "requires": {\n        "symbol-observable": "1.2.0"\n      }\n    },\n    "indexes-of": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/indexes-of/-/indexes-of-1.0.1.tgz",\n      "integrity": "sha1-8w9xbI4r00bHtn0985FVZqfAVgc="\n    },\n    "indexof": {\n      "version": "0.0.1",\n      "resolved": "https://registry.npmjs.org/indexof/-/indexof-0.0.1.tgz",\n      "integrity": "sha1-gtwzbSMrkGIXnQWrMpOmYFn9Q10="\n    },\n    "indx": {\n      "version": "0.2.3",\n      "resolved": "https://registry.npmjs.org/indx/-/indx-0.2.3.tgz",\n      "integrity": "sha1-Fdz1bunPZcAjTFE8J/vVgOcPvFA="\n    },\n    "inflight": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",\n      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",\n      "requires": {\n        "once": "1.3.0",\n        "wrappy": "1"\n      }\n    },\n    "inherits": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.3.tgz",\n      "integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4="\n    },\n    "ini": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.5.tgz",\n      "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw=="\n    },\n    "inline-style-prefixer": {\n      "version": "3.0.8",\n      "resolved": "https://registry.npmjs.org/inline-style-prefixer/-/inline-style-prefixer-3.0.8.tgz",\n      "integrity": "sha1-hVG45bTVcyROZqNLBPfTIHaitTQ=",\n      "dev": true,\n      "requires": {\n        "bowser": "1.7.3",\n        "css-in-js-utils": "2.0.0"\n      }\n    },\n    "inquirer": {\n      "version": "6.3.1",\n      "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.3.1.tgz",\n      "integrity": "sha512-MmL624rfkFt4TG9y/Jvmt8vdmOo836U7Y0Hxr2aFk3RelZEGX4Igk0KabWrcaaZaTv9uzglOqWh1Vly+FAWAXA==",\n      "requires": {\n        "ansi-escapes": "3.2.0",\n        "chalk": "2.4.2",\n        "cli-cursor": "2.1.0",\n        "cli-width": "2.0.0",\n        "external-editor": "3.0.3",\n        "figures": "2.0.0",\n        "lodash": "4.17.11",\n        "mute-stream": "0.0.7",\n        "run-async": "2.2.0",\n        "rxjs": "6.4.0",\n        "string-width": "2.1.0",\n        "strip-ansi": "5.1.0",\n        "through": "2.3.6"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "4.1.0"\n          }\n        }\n      }\n    },\n    "install": {\n      "version": "0.12.2",\n      "resolved": "https://registry.npmjs.org/install/-/install-0.12.2.tgz",\n      "integrity": "sha512-+7thTb4Rpvs9mnlhHKGZFJbGOO6kyMgy+gg0sgM5vFzIFK0wrCYXqdlaM71Bi289DTuPHf61puMFsaZBcwDIrg=="\n    },\n    "internal-ip": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/internal-ip/-/internal-ip-4.3.0.tgz",\n      "integrity": "sha512-S1zBo1D6zcsyuC6PMmY5+55YMILQ9av8lotMx447Bq6SAgo/sDK6y6uUKmuYhW7eacnIhFfsPmCNYdDzsnnDCg==",\n      "requires": {\n        "default-gateway": "4.2.0",\n        "ipaddr.js": "1.9.0"\n      }\n    },\n    "interpret": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/interpret/-/interpret-1.2.0.tgz",\n      "integrity": "sha512-mT34yGKMNceBQUoVn7iCDKDntA7SC6gycMAWzGx1z/CMCTV7b2AAtXlo3nRyHZ1FelRkQbQjprHSYGwzLtkVbw=="\n    },\n    "invariant": {\n      "version": "2.2.4",\n      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",\n      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",\n      "requires": {\n        "loose-envify": "1.0.0"\n      }\n    },\n    "invert-kv": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/invert-kv/-/invert-kv-2.0.0.tgz",\n      "integrity": "sha512-wPVv/y/QQ/Uiirj/vh3oP+1Ww+AWehmi1g5fFWGPF6IpCBCDVrhgHRMvrLfdYcwDh3QJbGXDW4JAuzxElLSqKA=="\n    },\n    "ip": {\n      "version": "1.1.5",\n      "resolved": "https://registry.npmjs.org/ip/-/ip-1.1.5.tgz",\n      "integrity": "sha1-vd7XARQpCCjAoDnnLvJfWq7ENUo="\n    },\n    "ip-regex": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-2.1.0.tgz",\n      "integrity": "sha1-+ni/XS5pE8kRzp+BnuUUa7bYROk="\n    },\n    "ipaddr.js": {\n      "version": "1.9.0",\n      "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.0.tgz",\n      "integrity": "sha512-M4Sjn6N/+O6/IXSJseKqHoFc+5FdGJ22sXqnjTpdZweHK64MzEPAyQZyEU3R/KRv2GLoa7nNtg/C2Ev6m7z+eA=="\n    },\n    "is": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/is/-/is-3.3.0.tgz",\n      "integrity": "sha512-nW24QBoPcFGGHJGUwnfpI7Yc5CdqWNdsyHQszVE/z2pKHXzh7FZ5GWhJqSyaQ9wMkQnsTx+kAI8bHlCX4tKdbg=="\n    },\n    "is-absolute": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-absolute/-/is-absolute-1.0.0.tgz",\n      "integrity": "sha512-dOWoqflvcydARa360Gvv18DZ/gRuHKi2NU/wU5X1ZFzdYfH29nkiNZsF3mp4OJ3H4yo9Mx8A/uAGNzpzPN3yBA==",\n      "requires": {\n        "is-relative": "1.0.0",\n        "is-windows": "1.0.1"\n      }\n    },\n    "is-absolute-url": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/is-absolute-url/-/is-absolute-url-2.1.0.tgz",\n      "integrity": "sha1-UFMN+4T8yap9vnhS6Do3uTufKqY="\n    },\n    "is-accessor-descriptor": {\n      "version": "0.1.6",\n      "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz",\n      "integrity": "sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=",\n      "requires": {\n        "kind-of": "3.0.2"\n      }\n    },\n    "is-arrayish": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz",\n      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0="\n    },\n    "is-binary-path": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-1.0.1.tgz",\n      "integrity": "sha1-dfFmQrSA8YenEcgUFh/TpKdlWJg=",\n      "requires": {\n        "binary-extensions": "1.0.0"\n      }\n    },\n    "is-buffer": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-2.0.3.tgz",\n      "integrity": "sha512-U15Q7MXTuZlrbymiz95PJpZxu8IlipAp4dtS3wOdgPXx3mqBnslrWU14kxfHB+Py/+2PVKSr37dMAgM2A4uArw=="\n    },\n    "is-callable": {\n      "version": "1.1.4",\n      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.1.4.tgz",\n      "integrity": "sha512-r5p9sxJjYnArLjObpjA4xu5EKI3CuKHkJXMhT7kwbpUyIFD1n5PMAsoPvWnvtZiNz7LjkYDRZhd7FlI0eMijEA=="\n    },\n    "is-ci": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-ci/-/is-ci-2.0.0.tgz",\n      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX4FZ8tcr3b19LcZq4w==",\n      "requires": {\n        "ci-info": "2.0.0"\n      }\n    },\n    "is-color-stop": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-color-stop/-/is-color-stop-1.1.0.tgz",\n      "integrity": "sha1-z/9HGu5N1cnhWFmPvhKWe1za00U=",\n      "requires": {\n        "css-color-names": "0.0.4",\n        "hex-color-regex": "1.1.0",\n        "hsl-regex": "1.0.0",\n        "hsla-regex": "1.0.0",\n        "rgb-regex": "1.0.1",\n        "rgba-regex": "1.0.0"\n      }\n    },\n    "is-data-descriptor": {\n      "version": "0.1.4",\n      "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz",\n      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",\n      "requires": {\n        "kind-of": "3.0.2"\n      }\n    },\n    "is-date-object": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.1.tgz",\n      "integrity": "sha1-mqIOtq7rv/d/vTPnTKAbM1gdOhY="\n    },\n    "is-descriptor": {\n      "version": "0.1.6",\n      "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz",\n      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==",\n      "requires": {\n        "is-accessor-descriptor": "0.1.6",\n        "is-data-descriptor": "0.1.4",\n        "kind-of": "5.0.0"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "5.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n        }\n      }\n    },\n    "is-directory": {\n      "version": "0.3.1",\n      "resolved": "https://registry.npmjs.org/is-directory/-/is-directory-0.3.1.tgz",\n      "integrity": "sha1-YTObbyR1/Hcv2cnYP1yFddwVSuE="\n    },\n    "is-dotfile": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/is-dotfile/-/is-dotfile-1.0.3.tgz",\n      "integrity": "sha1-pqLzL/0t+wT1yiXs0Pa4PPeYoeE="\n    },\n    "is-equal-shallow": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/is-equal-shallow/-/is-equal-shallow-0.1.3.tgz",\n      "integrity": "sha1-IjgJj8Ih3gvPpdnqxMRdY4qhxTQ=",\n      "requires": {\n        "is-primitive": "2.0.0"\n      }\n    },\n    "is-extendable": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz",\n      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik="\n    },\n    "is-extglob": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",\n      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI="\n    },\n    "is-fullwidth-code-point": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz",\n      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8="\n    },\n    "is-generator-fn": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz",\n      "integrity": "sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ=="\n    },\n    "is-glob": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz",\n      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==",\n      "requires": {\n        "is-extglob": "2.1.1"\n      }\n    },\n    "is-in-browser": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/is-in-browser/-/is-in-browser-1.1.3.tgz",\n      "integrity": "sha1-Vv9NtoOgeMYILrldrX3GLh0E+DU="\n    },\n    "is-negated-glob": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-negated-glob/-/is-negated-glob-1.0.0.tgz",\n      "integrity": "sha1-aRC8pdqMleeEtXUbl2z1oQ/uNtI="\n    },\n    "is-number": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz",\n      "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",\n      "requires": {\n        "kind-of": "3.0.2"\n      }\n    },\n    "is-obj": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-obj/-/is-obj-1.0.1.tgz",\n      "integrity": "sha1-PkcprB9f3gJc19g6iW2rn09n2w8="\n    },\n    "is-path-cwd": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-path-cwd/-/is-path-cwd-1.0.0.tgz",\n      "integrity": "sha1-0iXsIxMuie3Tj9p2dHLmLmXxEG0="\n    },\n    "is-path-in-cwd": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-path-in-cwd/-/is-path-in-cwd-1.0.1.tgz",\n      "integrity": "sha512-FjV1RTW48E7CWM7eE/J2NJvAEEVektecDBVBE5Hh3nM1Jd0kvhHtX68Pr3xsDf857xt3Y4AkwVULK1Vku62aaQ==",\n      "requires": {\n        "is-path-inside": "1.0.0"\n      }\n    },\n    "is-path-inside": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-1.0.1.tgz",\n      "integrity": "sha1-jvW33lBDej/cprToZe96pVy0gDY=",\n      "requires": {\n        "path-is-inside": "1.0.1"\n      }\n    },\n    "is-plain-obj": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz",\n      "integrity": "sha1-caUMhCnfync8kqOQpKA7OfzVHT4="\n    },\n    "is-plain-object": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz",\n      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==",\n      "requires": {\n        "isobject": "3.0.1"\n      }\n    },\n    "is-posix-bracket": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/is-posix-bracket/-/is-posix-bracket-0.1.1.tgz",\n      "integrity": "sha1-MzTceXdDaOkvAW5vvAqI9c1ua8Q="\n    },\n    "is-primitive": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-primitive/-/is-primitive-2.0.0.tgz",\n      "integrity": "sha1-IHurkWOEmcB7Kt8kCkGochADRXU="\n    },\n    "is-promise": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/is-promise/-/is-promise-2.1.0.tgz",\n      "integrity": "sha1-eaKp7OfwlugPNtKy87wWwf9L8/o="\n    },\n    "is-regex": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.0.4.tgz",\n      "integrity": "sha1-VRdIm1RwkbCTDglWVM7SXul+lJE=",\n      "requires": {\n        "has": "1.0.1"\n      }\n    },\n    "is-regexp": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-regexp/-/is-regexp-1.0.0.tgz",\n      "integrity": "sha1-/S2INUXEa6xaYz57mgnof6LLUGk="\n    },\n    "is-relative": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-relative/-/is-relative-1.0.0.tgz",\n      "integrity": "sha512-Kw/ReK0iqwKeu0MITLFuj0jbPAmEiOsIwyIXvvbfa6QfmN9pkD1M+8pdk7Rl/dTKbH34/XBFMbgD4iMJhLQbGA==",\n      "requires": {\n        "is-unc-path": "1.0.0"\n      }\n    },\n    "is-resolvable": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-resolvable/-/is-resolvable-1.1.0.tgz",\n      "integrity": "sha512-qgDYXFSR5WvEfuS5dMj6oTMEbrrSaM0CrFk2Yiq/gXnBvD9pMa2jGXxyhGLfvhZpuMZe18CJpFxAt3CRs42NMg=="\n    },\n    "is-root": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/is-root/-/is-root-2.0.0.tgz",\n      "integrity": "sha512-F/pJIk8QD6OX5DNhRB7hWamLsUilmkDGho48KbgZ6xg/lmAZXHxzXQ91jzB3yRSw5kdQGGGc4yz8HYhTYIMWPg=="\n    },\n    "is-stream": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-1.1.0.tgz",\n      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ="\n    },\n    "is-svg": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/is-svg/-/is-svg-3.0.0.tgz",\n      "integrity": "sha512-gi4iHK53LR2ujhLVVj+37Ykh9GLqYHX6JOVXbLAucaG/Cqw9xwdFOjDM2qeifLs1sF1npXXFvDu0r5HNgCMrzQ==",\n      "requires": {\n        "html-comment-regex": "1.1.0"\n      }\n    },\n    "is-symbol": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.2.tgz",\n      "integrity": "sha512-HS8bZ9ox60yCJLH9snBpIwv9pYUAkcuLhSA1oero1UB5y9aiQpRA8y2ex945AOtCZL1lJDeIk3G5LthswI46Lw==",\n      "requires": {\n        "has-symbols": "1.0.0"\n      }\n    },\n    "is-typedarray": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",\n      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="\n    },\n    "is-unc-path": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-unc-path/-/is-unc-path-1.0.0.tgz",\n      "integrity": "sha512-mrGpVd0fs7WWLfVsStvgF6iEJnbjDFZh9/emhRDcGWTduTfNHd9CHeUwH3gYIjdbwo4On6hunkztwOaAw0yllQ==",\n      "requires": {\n        "unc-path-regex": "0.1.2"\n      }\n    },\n    "is-utf8": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/is-utf8/-/is-utf8-0.2.1.tgz",\n      "integrity": "sha1-Sw2hRCEE0bM2NA6AeX6GXPOffXI="\n    },\n    "is-valid-glob": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/is-valid-glob/-/is-valid-glob-1.0.0.tgz",\n      "integrity": "sha1-Kb8+/3Ab4tTTFdusw5vDn+j2Aao="\n    },\n    "is-windows": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz",\n      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA=="\n    },\n    "is-wsl": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/is-wsl/-/is-wsl-1.1.0.tgz",\n      "integrity": "sha1-HxbkqiKwTRM2tmGIpmrzxgDDpm0="\n    },\n    "isarray": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",\n      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="\n    },\n    "isemail": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/isemail/-/isemail-3.2.0.tgz",\n      "integrity": "sha512-zKqkK+O+dGqevc93KNsbZ/TqTUFd46MwWjYOoMrjIMZ51eU7DtQG3Wmd9SQQT7i7RVnuTPEiYEWHU3MSbxC1Tg==",\n      "requires": {\n        "punycode": "2.x.x"\n      }\n    },\n    "isexe": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",\n      "integrity": "sha1-6PvzdNxVb/iUehDcsFctYz8s+hA="\n    },\n    "isobject": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",\n      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8="\n    },\n    "isomorphic-fetch": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-2.2.1.tgz",\n      "integrity": "sha1-YRrhrPFPXoH3KVB0coGf6XM1WKk=",\n      "requires": {\n        "node-fetch": "1.0.1",\n        "whatwg-fetch": ">=0.10.0"\n      }\n    },\n    "isstream": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",\n      "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="\n    },\n    "istanbul-api": {\n      "version": "2.1.5",\n      "resolved": "https://registry.npmjs.org/istanbul-api/-/istanbul-api-2.1.5.tgz",\n      "integrity": "sha512-meYk1BwDp59Pfse1TvPrkKYgVqAufbdBLEVoqvu/hLLKSaQ054ZTksbNepyc223tMnWdm6AdK2URIJJRqdP87g==",\n      "requires": {\n        "async": "2.6.1",\n        "compare-versions": "3.2.1",\n        "fileset": "2.0.3",\n        "istanbul-lib-coverage": "2.0.4",\n        "istanbul-lib-hook": "2.0.6",\n        "istanbul-lib-instrument": "3.2.0",\n        "istanbul-lib-report": "2.0.7",\n        "istanbul-lib-source-maps": "3.0.5",\n        "istanbul-reports": "2.2.3",\n        "js-yaml": "3.13.0",\n        "make-dir": "2.1.0",\n        "minimatch": "3.0.4",\n        "once": "1.4.0"\n      }\n    },\n    "istanbul-lib-coverage": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.4.tgz",\n      "integrity": "sha512-LXTBICkMARVgo579kWDm8SqfB6nvSDKNqIOBEjmJRnL04JvoMHCYGWaMddQnseJYtkEuEvO/sIcOxPLk9gERug=="\n    },\n    "istanbul-lib-hook": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-hook/-/istanbul-lib-hook-2.0.6.tgz",\n      "integrity": "sha512-829DKONApZ7UCiPXcOYWSgkFXa4+vNYoNOt3F+4uDJLKL1OotAoVwvThoEj1i8jmOj7odbYcR3rnaHu+QroaXg==",\n      "requires": {\n        "append-transform": "1.0.0"\n      }\n    },\n    "istanbul-lib-instrument": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-3.2.0.tgz",\n      "integrity": "sha512-06IM3xShbNW4NgZv5AP4QH0oHqf1/ivFo8eFys0ZjPXHGldHJQWb3riYOKXqmOqfxXBfxu4B+g/iuhOPZH0RJg==",\n      "requires": {\n        "@babel/generator": "7.0.0",\n        "@babel/parser": "7.0.0",\n        "@babel/template": "7.0.0",\n        "@babel/traverse": "7.0.0",\n        "@babel/types": "7.0.0",\n        "istanbul-lib-coverage": "2.0.4",\n        "semver": "6.0.0"\n      }\n    },\n    "istanbul-lib-report": {\n      "version": "2.0.7",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-2.0.7.tgz",\n      "integrity": "sha512-wLH6beJBFbRBLiTlMOBxmb85cnVM1Vyl36N48e4e/aTKSM3WbOx7zbVIH1SQ537fhhsPbX0/C5JB4qsmyRXXyA==",\n      "requires": {\n        "istanbul-lib-coverage": "2.0.4",\n        "make-dir": "2.1.0",\n        "supports-color": "6.0.0"\n      },\n      "dependencies": {\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "3.0.0"\n          }\n        }\n      }\n    },\n    "istanbul-lib-source-maps": {\n      "version": "3.0.5",\n      "resolved": "https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-3.0.5.tgz",\n      "integrity": "sha512-eDhZ7r6r1d1zQPVZehLc3D0K14vRba/eBYkz3rw16DLOrrTzve9RmnkcwrrkWVgO1FL3EK5knujVe5S8QHE9xw==",\n      "requires": {\n        "debug": "4.1.1",\n        "istanbul-lib-coverage": "2.0.4",\n        "make-dir": "2.1.0",\n        "rimraf": "2.6.2",\n        "source-map": "0.6.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "istanbul-reports": {\n      "version": "2.2.3",\n      "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-2.2.3.tgz",\n      "integrity": "sha512-T6EbPuc8Cb620LWAYyZ4D8SSn06dY9i1+IgUX2lTH8gbwflMc9Obd33zHTyNX653ybjpamAHS9toKS3E6cGhTw==",\n      "requires": {\n        "handlebars": "4.1.0"\n      }\n    },\n    "istextorbinary": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/istextorbinary/-/istextorbinary-2.2.1.tgz",\n      "integrity": "sha512-TS+hoFl8Z5FAFMK38nhBkdLt44CclNRgDHWeMgsV8ko3nDlr/9UI2Sf839sW7enijf8oKsZYXRvM8g0it9Zmcw==",\n      "requires": {\n        "binaryextensions": "2",\n        "editions": "1.3.3",\n        "textextensions": "2"\n      }\n    },\n    "jest": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest/-/jest-24.7.1.tgz",\n      "integrity": "sha512-AbvRar5r++izmqo5gdbAjTeA6uNRGoNRuj5vHB0OnDXo2DXWZJVuaObiGgtlvhKb+cWy2oYbQSfxv7Q7GjnAtA==",\n      "requires": {\n        "import-local": "2.0.0",\n        "jest-cli": "24.7.1"\n      },\n      "dependencies": {\n        "jest-cli": {\n          "version": "24.7.1",\n          "resolved": "https://registry.npmjs.org/jest-cli/-/jest-cli-24.7.1.tgz",\n          "integrity": "sha512-32OBoSCVPzcTslGFl6yVCMzB2SqX3IrWwZCY5mZYkb0D2WsogmU3eV2o8z7+gRQa4o4sZPX/k7GU+II7CxM6WQ==",\n          "requires": {\n            "@jest/core": "24.7.1",\n            "@jest/test-result": "24.7.1",\n            "@jest/types": "24.7.0",\n            "chalk": "2.0.1",\n            "exit": "0.1.2",\n            "import-local": "2.0.0",\n            "is-ci": "2.0.0",\n            "jest-config": "24.7.1",\n            "jest-util": "24.7.1",\n            "jest-validate": "24.7.0",\n            "prompts": "2.0.1",\n            "realpath-native": "1.1.0",\n            "yargs": "12.0.2"\n          }\n        }\n      }\n    },\n    "jest-changed-files": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-24.7.0.tgz",\n      "integrity": "sha512-33BgewurnwSfJrW7T5/ZAXGE44o7swLslwh8aUckzq2e17/2Os1V0QU506ZNik3hjs8MgnEMKNkcud442NCDTw==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "execa": "1.0.0",\n        "throat": "4.0.0"\n      }\n    },\n    "jest-config": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-config/-/jest-config-24.7.1.tgz",\n      "integrity": "sha512-8FlJNLI+X+MU37j7j8RE4DnJkvAghXmBWdArVzypW6WxfGuxiL/CCkzBg0gHtXhD2rxla3IMOSUAHylSKYJ83g==",\n      "requires": {\n        "@babel/core": "7.1.0",\n        "@jest/test-sequencer": "24.7.1",\n        "@jest/types": "24.7.0",\n        "babel-jest": "24.7.1",\n        "chalk": "2.0.1",\n        "glob": "7.1.1",\n        "jest-environment-jsdom": "24.7.1",\n        "jest-environment-node": "24.7.1",\n        "jest-get-type": "24.3.0",\n        "jest-jasmine2": "24.7.1",\n        "jest-regex-util": "24.3.0",\n        "jest-resolve": "24.7.1",\n        "jest-util": "24.7.1",\n        "jest-validate": "24.7.0",\n        "micromatch": "3.1.10",\n        "pretty-format": "24.7.0",\n        "realpath-native": "1.1.0"\n      }\n    },\n    "jest-diff": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-diff/-/jest-diff-24.7.0.tgz",\n      "integrity": "sha512-ULQZ5B1lWpH70O4xsANC4tf4Ko6RrpwhE3PtG6ERjMg1TiYTC2Wp4IntJVGro6a8HG9luYHhhmF4grF0Pltckg==",\n      "requires": {\n        "chalk": "2.0.1",\n        "diff-sequences": "24.3.0",\n        "jest-get-type": "24.3.0",\n        "pretty-format": "24.7.0"\n      }\n    },\n    "jest-docblock": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/jest-docblock/-/jest-docblock-24.3.0.tgz",\n      "integrity": "sha512-nlANmF9Yq1dufhFlKG9rasfQlrY7wINJbo3q01tu56Jv5eBU5jirylhF2O5ZBnLxzOVBGRDz/9NAwNyBtG4Nyg==",\n      "requires": {\n        "detect-newline": "2.1.0"\n      }\n    },\n    "jest-each": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-each/-/jest-each-24.7.1.tgz",\n      "integrity": "sha512-4fsS8fEfLa3lfnI1Jw6NxjhyRTgfpuOVTeUZZFyVYqeTa4hPhr2YkToUhouuLTrL2eMGOfpbdMyRx0GQ/VooKA==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "chalk": "2.0.1",\n        "jest-get-type": "24.3.0",\n        "jest-util": "24.7.1",\n        "pretty-format": "24.7.0"\n      }\n    },\n    "jest-environment-jsdom": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-environment-jsdom/-/jest-environment-jsdom-24.7.1.tgz",\n      "integrity": "sha512-Gnhb+RqE2JuQGb3kJsLF8vfqjt3PHKSstq4Xc8ic+ax7QKo4Z0RWGucU3YV+DwKR3T9SYc+3YCUQEJs8r7+Jxg==",\n      "requires": {\n        "@jest/environment": "24.7.1",\n        "@jest/fake-timers": "24.7.1",\n        "@jest/types": "24.7.0",\n        "jest-mock": "24.7.0",\n        "jest-util": "24.7.1",\n        "jsdom": "11.5.1"\n      }\n    },\n    "jest-environment-jsdom-fourteen": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/jest-environment-jsdom-fourteen/-/jest-environment-jsdom-fourteen-0.1.0.tgz",\n      "integrity": "sha512-4vtoRMg7jAstitRzL4nbw83VmGH8Rs13wrND3Ud2o1fczDhMUF32iIrNKwYGgeOPUdfvZU4oy8Bbv+ni1fgVCA==",\n      "requires": {\n        "jest-mock": "24.5.0",\n        "jest-util": "24.5.0",\n        "jsdom": "14.0.0"\n      },\n      "dependencies": {\n        "jsdom": {\n          "version": "14.1.0",\n          "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-14.1.0.tgz",\n          "integrity": "sha512-O901mfJSuTdwU2w3Sn+74T+RnDVP+FuV5fH8tcPWyqrseRAb0s5xOtPgCFiPOtLcyK7CLIJwPyD83ZqQWvA5ng==",\n          "requires": {\n            "abab": "2.0.0",\n            "acorn": "6.0.4",\n            "acorn-globals": "4.3.0",\n            "array-equal": "1.0.0",\n            "cssom": "0.3.4",\n            "cssstyle": "1.1.1",\n            "data-urls": "1.1.0",\n            "domexception": "1.0.1",\n            "escodegen": "1.11.0",\n            "html-encoding-sniffer": "1.0.2",\n            "nwsapi": "2.1.3",\n            "parse5": "5.1.0",\n            "pn": "1.1.0",\n            "request": "2.88.0",\n            "request-promise-native": "1.0.5",\n            "saxes": "3.1.9",\n            "symbol-tree": "3.2.2",\n            "tough-cookie": "2.5.0",\n            "w3c-hr-time": "1.0.1",\n            "w3c-xmlserializer": "1.1.2",\n            "webidl-conversions": "4.0.2",\n            "whatwg-encoding": "1.0.5",\n            "whatwg-mimetype": "2.3.0",\n            "whatwg-url": "7.0.0",\n            "ws": "6.1.2",\n            "xml-name-validator": "3.0.0"\n          }\n        },\n        "whatwg-url": {\n          "version": "7.0.0",\n          "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-7.0.0.tgz",\n          "integrity": "sha512-37GeVSIJ3kn1JgKyjiYNmSLP1yzbpb29jdmwBSgkD9h40/hyrR/OifpVUndji3tmwGgD8qpw7iQu3RSbCrBpsQ==",\n          "requires": {\n            "lodash.sortby": "4.7.0",\n            "tr46": "1.0.1",\n            "webidl-conversions": "4.0.2"\n          }\n        },\n        "ws": {\n          "version": "6.2.1",\n          "resolved": "https://registry.npmjs.org/ws/-/ws-6.2.1.tgz",\n          "integrity": "sha512-GIyAXC2cB7LjvpgMt9EKS2ldqr0MTrORaleiOno6TweZ6r3TKtoFQWay/2PceJ3RuBasOHzXNn5Lrw1X0bEjqA==",\n          "requires": {\n            "async-limiter": "~1.0.0"\n          }\n        }\n      }\n    },\n    "jest-environment-node": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-24.7.1.tgz",\n      "integrity": "sha512-GJJQt1p9/C6aj6yNZMvovZuxTUd+BEJprETdvTKSb4kHcw4mFj8777USQV0FJoJ4V3djpOwA5eWyPwfq//PFBA==",\n      "requires": {\n        "@jest/environment": "24.7.1",\n        "@jest/fake-timers": "24.7.1",\n        "@jest/types": "24.7.0",\n        "jest-mock": "24.7.0",\n        "jest-util": "24.7.1"\n      }\n    },\n    "jest-get-type": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/jest-get-type/-/jest-get-type-24.3.0.tgz",\n      "integrity": "sha512-HYF6pry72YUlVcvUx3sEpMRwXEWGEPlJ0bSPVnB3b3n++j4phUEoSPcS6GC0pPJ9rpyPSe4cb5muFo6D39cXow=="\n    },\n    "jest-haste-map": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-24.7.1.tgz",\n      "integrity": "sha512-g0tWkzjpHD2qa03mTKhlydbmmYiA2KdcJe762SbfFo/7NIMgBWAA0XqQlApPwkWOF7Cxoi/gUqL0i6DIoLpMBw==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "anymatch": "2.0.0",\n        "fb-watchman": "2.0.0",\n        "fsevents": "1.2.7",\n        "graceful-fs": "4.1.15",\n        "invariant": "2.2.4",\n        "jest-serializer": "24.4.0",\n        "jest-util": "24.7.1",\n        "jest-worker": "24.6.0",\n        "micromatch": "3.1.10",\n        "sane": "4.0.3",\n        "walker": "1.0.7"\n      },\n      "dependencies": {\n        "fsevents": {\n          "version": "1.2.8",\n          "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-1.2.8.tgz",\n          "integrity": "sha512-tPvHgPGB7m40CZ68xqFGkKuzN+RnpGmSV+hgeKxhRpbxdqKXUFJGC3yonBOLzQBcJyGpdZFDfCsdOC2KFsXzeA==",\n          "optional": true,\n          "requires": {\n            "nan": "2.12.1",\n            "node-pre-gyp": "0.12.0"\n          },\n          "dependencies": {\n            "abbrev": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "ansi-regex": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true,\n              "optional": true\n            },\n            "are-we-there-yet": {\n              "version": "1.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "delegates": "1.0.0",\n                "readable-stream": "2.0.6"\n              }\n            },\n            "balanced-match": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "brace-expansion": {\n              "version": "1.1.11",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "balanced-match": "1.0.0",\n                "concat-map": "0.0.1"\n              }\n            },\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "code-point-at": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "concat-map": {\n              "version": "0.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "console-control-strings": {\n              "version": "1.1.0",\n              "bundled": true,\n              "optional": true\n            },\n            "core-util-is": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "debug": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ms": "2.1.1"\n              }\n            },\n            "deep-extend": {\n              "version": "0.6.0",\n              "bundled": true,\n              "optional": true\n            },\n            "delegates": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "detect-libc": {\n              "version": "1.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "fs-minipass": {\n              "version": "1.2.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "2.2.1"\n              }\n            },\n            "fs.realpath": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "gauge": {\n              "version": "2.7.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "aproba": "1.0.3",\n                "console-control-strings": "1.0.0",\n                "has-unicode": "2.0.0",\n                "object-assign": "4.1.0",\n                "signal-exit": "3.0.0",\n                "string-width": "1.0.1",\n                "strip-ansi": "3.0.1",\n                "wide-align": "1.1.0"\n              }\n            },\n            "glob": {\n              "version": "7.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "fs.realpath": "1.0.0",\n                "inflight": "1.0.4",\n                "inherits": "2",\n                "minimatch": "3.0.4",\n                "once": "1.3.0",\n                "path-is-absolute": "1.0.0"\n              }\n            },\n            "has-unicode": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "iconv-lite": {\n              "version": "0.4.24",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safer-buffer": ">= 2.1.2 < 3"\n              }\n            },\n            "ignore-walk": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimatch": "3.0.4"\n              }\n            },\n            "inflight": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "once": "1.3.0",\n                "wrappy": "1"\n              }\n            },\n            "inherits": {\n              "version": "2.0.3",\n              "bundled": true,\n              "optional": true\n            },\n            "ini": {\n              "version": "1.3.5",\n              "bundled": true,\n              "optional": true\n            },\n            "is-fullwidth-code-point": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "number-is-nan": "1.0.0"\n              }\n            },\n            "isarray": {\n              "version": "1.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "minimatch": {\n              "version": "3.0.4",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "brace-expansion": "1.1.7"\n              }\n            },\n            "minimist": {\n              "version": "0.0.8",\n              "bundled": true,\n              "optional": true\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "5.1.2",\n                "yallist": "3.0.0"\n              }\n            },\n            "minizlib": {\n              "version": "1.2.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minipass": "2.2.1"\n              }\n            },\n            "mkdirp": {\n              "version": "0.5.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "minimist": "0.0.8"\n              }\n            },\n            "ms": {\n              "version": "2.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "needle": {\n              "version": "2.3.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "debug": "4.1.0",\n                "iconv-lite": "0.4.4",\n                "sax": "1.2.4"\n              }\n            },\n            "node-pre-gyp": {\n              "version": "0.12.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "detect-libc": "1.0.2",\n                "mkdirp": "0.5.1",\n                "needle": "2.2.1",\n                "nopt": "4.0.1",\n                "npm-packlist": "1.1.6",\n                "npmlog": "4.0.2",\n                "rc": "1.2.7",\n                "rimraf": "2.6.1",\n                "semver": "5.3.0",\n                "tar": "4"\n              }\n            },\n            "nopt": {\n              "version": "4.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "abbrev": "1",\n                "osenv": "0.1.4"\n              }\n            },\n            "npm-bundled": {\n              "version": "1.0.6",\n              "bundled": true,\n              "optional": true\n            },\n            "npm-packlist": {\n              "version": "1.4.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ignore-walk": "3.0.1",\n                "npm-bundled": "1.0.1"\n              }\n            },\n            "npmlog": {\n              "version": "4.1.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "are-we-there-yet": "~1.1.2",\n                "console-control-strings": "~1.1.0",\n                "gauge": "~2.7.3",\n                "set-blocking": "~2.0.0"\n              }\n            },\n            "number-is-nan": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "object-assign": {\n              "version": "4.1.1",\n              "bundled": true,\n              "optional": true\n            },\n            "once": {\n              "version": "1.4.0",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "wrappy": "1"\n              }\n            },\n            "os-homedir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "os-tmpdir": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "osenv": {\n              "version": "0.1.5",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "os-homedir": "1.0.0",\n                "os-tmpdir": "1.0.0"\n              }\n            },\n            "path-is-absolute": {\n              "version": "1.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "process-nextick-args": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "rc": {\n              "version": "1.2.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "deep-extend": "0.6.0",\n                "ini": "~1.3.0",\n                "minimist": "1.2.0",\n                "strip-json-comments": "~2.0.1"\n              },\n              "dependencies": {\n                "minimist": {\n                  "version": "1.2.0",\n                  "bundled": true,\n                  "optional": true\n                }\n              }\n            },\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "rimraf": {\n              "version": "2.6.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "glob": "7.1.3"\n              }\n            },\n            "safe-buffer": {\n              "version": "5.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "safer-buffer": {\n              "version": "2.1.2",\n              "bundled": true,\n              "optional": true\n            },\n            "sax": {\n              "version": "1.2.4",\n              "bundled": true,\n              "optional": true\n            },\n            "semver": {\n              "version": "5.7.0",\n              "bundled": true,\n              "optional": true\n            },\n            "set-blocking": {\n              "version": "2.0.0",\n              "bundled": true,\n              "optional": true\n            },\n            "signal-exit": {\n              "version": "3.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "code-point-at": "1.0.0",\n                "is-fullwidth-code-point": "1.0.0",\n                "strip-ansi": "3.0.0"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            },\n            "strip-ansi": {\n              "version": "3.0.1",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "ansi-regex": "2.0.0"\n              }\n            },\n            "strip-json-comments": {\n              "version": "2.0.1",\n              "bundled": true,\n              "optional": true\n            },\n            "tar": {\n              "version": "4.4.8",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "chownr": "1.1.1",\n                "fs-minipass": "1.2.5",\n                "minipass": "2.3.4",\n                "minizlib": "1.1.1",\n                "mkdirp": "0.5.0",\n                "safe-buffer": "5.1.2",\n                "yallist": "3.0.2"\n              }\n            },\n            "util-deprecate": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "wide-align": {\n              "version": "1.1.3",\n              "bundled": true,\n              "optional": true,\n              "requires": {\n                "string-width": "1.0.2 || 2"\n              }\n            },\n            "wrappy": {\n              "version": "1.0.2",\n              "bundled": true,\n              "optional": true\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true,\n              "optional": true\n            }\n          }\n        }\n      }\n    },\n    "jest-jasmine2": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-jasmine2/-/jest-jasmine2-24.7.1.tgz",\n      "integrity": "sha512-Y/9AOJDV1XS44wNwCaThq4Pw3gBPiOv/s6NcbOAkVRRUEPu+36L2xoPsqQXsDrxoBerqeyslpn2TpCI8Zr6J2w==",\n      "requires": {\n        "@babel/traverse": "7.1.0",\n        "@jest/environment": "24.7.1",\n        "@jest/test-result": "24.7.1",\n        "@jest/types": "24.7.0",\n        "chalk": "2.0.1",\n        "co": "4.6.0",\n        "expect": "24.7.1",\n        "is-generator-fn": "2.0.0",\n        "jest-each": "24.7.1",\n        "jest-matcher-utils": "24.7.0",\n        "jest-message-util": "24.7.1",\n        "jest-runtime": "24.7.1",\n        "jest-snapshot": "24.7.1",\n        "jest-util": "24.7.1",\n        "pretty-format": "24.7.0",\n        "throat": "4.0.0"\n      }\n    },\n    "jest-leak-detector": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-24.7.0.tgz",\n      "integrity": "sha512-zV0qHKZGXtmPVVzT99CVEcHE9XDf+8LwiE0Ob7jjezERiGVljmqKFWpV2IkG+rkFIEUHFEkMiICu7wnoPM/RoQ==",\n      "requires": {\n        "pretty-format": "24.7.0"\n      }\n    },\n    "jest-matcher-utils": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-24.7.0.tgz",\n      "integrity": "sha512-158ieSgk3LNXeUhbVJYRXyTPSCqNgVXOp/GT7O94mYd3pk/8+odKTyR1JLtNOQSPzNi8NFYVONtvSWA/e1RDXg==",\n      "requires": {\n        "chalk": "2.0.1",\n        "jest-diff": "24.7.0",\n        "jest-get-type": "24.3.0",\n        "pretty-format": "24.7.0"\n      }\n    },\n    "jest-message-util": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-message-util/-/jest-message-util-24.7.1.tgz",\n      "integrity": "sha512-dk0gqVtyqezCHbcbk60CdIf+8UHgD+lmRHifeH3JRcnAqh4nEyPytSc9/L1+cQyxC+ceaeP696N4ATe7L+omcg==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "@jest/test-result": "24.7.1",\n        "@jest/types": "24.7.0",\n        "@types/stack-utils": "1.0.1",\n        "chalk": "2.0.1",\n        "micromatch": "3.1.10",\n        "slash": "2.0.0",\n        "stack-utils": "1.0.1"\n      }\n    },\n    "jest-mock": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-mock/-/jest-mock-24.7.0.tgz",\n      "integrity": "sha512-6taW4B4WUcEiT2V9BbOmwyGuwuAFT2G8yghF7nyNW1/2gq5+6aTqSPcS9lS6ArvEkX55vbPAS/Jarx5LSm4Fng==",\n      "requires": {\n        "@jest/types": "24.7.0"\n      }\n    },\n    "jest-pnp-resolver": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.1.tgz",\n      "integrity": "sha512-pgFw2tm54fzgYvc/OHrnysABEObZCUNFnhjoRjaVOCN8NYc032/gVjPaHD4Aq6ApkSieWtfKAFQtmDKAmhupnQ=="\n    },\n    "jest-regex-util": {\n      "version": "24.3.0",\n      "resolved": "https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-24.3.0.tgz",\n      "integrity": "sha512-tXQR1NEOyGlfylyEjg1ImtScwMq8Oh3iJbGTjN7p0J23EuVX1MA8rwU69K4sLbCmwzgCUbVkm0FkSF9TdzOhtg=="\n    },\n    "jest-resolve": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-resolve/-/jest-resolve-24.7.1.tgz",\n      "integrity": "sha512-Bgrc+/UUZpGJ4323sQyj85hV9d+ANyPNu6XfRDUcyFNX1QrZpSoM0kE4Mb2vZMAYTJZsBFzYe8X1UaOkOELSbw==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "browser-resolve": "1.11.3",\n        "chalk": "2.0.1",\n        "jest-pnp-resolver": "1.2.1",\n        "realpath-native": "1.1.0"\n      }\n    },\n    "jest-resolve-dependencies": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-24.7.1.tgz",\n      "integrity": "sha512-2Eyh5LJB2liNzfk4eo7bD1ZyBbqEJIyyrFtZG555cSWW9xVHxII2NuOkSl1yUYTAYCAmM2f2aIT5A7HzNmubyg==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "jest-regex-util": "24.3.0",\n        "jest-snapshot": "24.7.1"\n      }\n    },\n    "jest-runner": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-runner/-/jest-runner-24.7.1.tgz",\n      "integrity": "sha512-aNFc9liWU/xt+G9pobdKZ4qTeG/wnJrJna3VqunziDNsWT3EBpmxXZRBMKCsNMyfy+A/XHiV+tsMLufdsNdgCw==",\n      "requires": {\n        "@jest/console": "24.7.1",\n        "@jest/environment": "24.7.1",\n        "@jest/test-result": "24.7.1",\n        "@jest/types": "24.7.0",\n        "chalk": "2.4.2",\n        "exit": "0.1.2",\n        "graceful-fs": "4.1.15",\n        "jest-config": "24.7.1",\n        "jest-docblock": "24.3.0",\n        "jest-haste-map": "24.7.1",\n        "jest-jasmine2": "24.7.1",\n        "jest-leak-detector": "24.7.0",\n        "jest-message-util": "24.7.1",\n        "jest-resolve": "24.7.1",\n        "jest-runtime": "24.7.1",\n        "jest-util": "24.7.1",\n        "jest-worker": "24.6.0",\n        "source-map-support": "0.5.6",\n        "throat": "4.0.0"\n      }\n    },\n    "jest-runtime": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-runtime/-/jest-runtime-24.7.1.tgz",\n      "integrity": "sha512-0VAbyBy7tll3R+82IPJpf6QZkokzXPIS71aDeqh+WzPRXRCNz6StQ45otFariPdJ4FmXpDiArdhZrzNAC3sj6A==",\n      "requires": {\n        "@jest/console": "24.7.1",\n        "@jest/environment": "24.7.1",\n        "@jest/source-map": "24.3.0",\n        "@jest/transform": "24.7.1",\n        "@jest/types": "24.7.0",\n        "@types/yargs": "12.0.2",\n        "chalk": "2.0.1",\n        "exit": "0.1.2",\n        "glob": "7.1.3",\n        "graceful-fs": "4.1.15",\n        "jest-config": "24.7.1",\n        "jest-haste-map": "24.7.1",\n        "jest-message-util": "24.7.1",\n        "jest-mock": "24.7.0",\n        "jest-regex-util": "24.3.0",\n        "jest-resolve": "24.7.1",\n        "jest-snapshot": "24.7.1",\n        "jest-util": "24.7.1",\n        "jest-validate": "24.7.0",\n        "realpath-native": "1.1.0",\n        "slash": "2.0.0",\n        "strip-bom": "3.0.0",\n        "yargs": "12.0.2"\n      }\n    },\n    "jest-serializer": {\n      "version": "24.4.0",\n      "resolved": "https://registry.npmjs.org/jest-serializer/-/jest-serializer-24.4.0.tgz",\n      "integrity": "sha512-k//0DtglVstc1fv+GY/VHDIjrtNjdYvYjMlbLUed4kxrE92sIUewOi5Hj3vrpB8CXfkJntRPDRjCrCvUhBdL8Q=="\n    },\n    "jest-snapshot": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-24.7.1.tgz",\n      "integrity": "sha512-8Xk5O4p+JsZZn4RCNUS3pxA+ORKpEKepE+a5ejIKrId9CwrVN0NY+vkqEkXqlstA5NMBkNahXkR/4qEBy0t5yA==",\n      "requires": {\n        "@babel/types": "7.0.0",\n        "@jest/types": "24.7.0",\n        "chalk": "2.0.1",\n        "expect": "24.7.1",\n        "jest-diff": "24.7.0",\n        "jest-matcher-utils": "24.7.0",\n        "jest-message-util": "24.7.1",\n        "jest-resolve": "24.7.1",\n        "mkdirp": "0.5.1",\n        "natural-compare": "1.4.0",\n        "pretty-format": "24.7.0",\n        "semver": "5.5.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "jest-util": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-util/-/jest-util-24.7.1.tgz",\n      "integrity": "sha512-/KilOue2n2rZ5AnEBYoxOXkeTu6vi7cjgQ8MXEkih0oeAXT6JkS3fr7/j8+engCjciOU1Nq5loMSKe0A1oeX0A==",\n      "requires": {\n        "@jest/console": "24.7.1",\n        "@jest/fake-timers": "24.7.1",\n        "@jest/source-map": "24.3.0",\n        "@jest/test-result": "24.7.1",\n        "@jest/types": "24.7.0",\n        "callsites": "3.0.0",\n        "chalk": "2.0.1",\n        "graceful-fs": "4.1.15",\n        "is-ci": "2.0.0",\n        "mkdirp": "0.5.1",\n        "slash": "2.0.0",\n        "source-map": "0.6.0"\n      },\n      "dependencies": {\n        "callsites": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",\n          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "jest-validate": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/jest-validate/-/jest-validate-24.7.0.tgz",\n      "integrity": "sha512-cgai/gts9B2chz1rqVdmLhzYxQbgQurh1PEQSvSgPZ8KGa1AqXsqC45W5wKEwzxKrWqypuQrQxnF4+G9VejJJA==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "camelcase": "5.0.0",\n        "chalk": "2.0.1",\n        "jest-get-type": "24.3.0",\n        "leven": "2.1.0",\n        "pretty-format": "24.7.0"\n      }\n    },\n    "jest-watch-typeahead": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/jest-watch-typeahead/-/jest-watch-typeahead-0.3.0.tgz",\n      "integrity": "sha512-+uOtlppt9ysST6k6ZTqsPI0WNz2HLa8bowiZylZoQCQaAVn7XsVmHhZREkz73FhKelrFrpne4hQQjdq42nFEmA==",\n      "requires": {\n        "ansi-escapes": "3.0.0",\n        "chalk": "2.4.1",\n        "jest-watcher": "24.3.0",\n        "slash": "2.0.0",\n        "string-length": "2.0.0",\n        "strip-ansi": "5.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "4.1.0"\n          }\n        }\n      }\n    },\n    "jest-watcher": {\n      "version": "24.7.1",\n      "resolved": "https://registry.npmjs.org/jest-watcher/-/jest-watcher-24.7.1.tgz",\n      "integrity": "sha512-Wd6TepHLRHVKLNPacEsBwlp9raeBIO+01xrN24Dek4ggTS8HHnOzYSFnvp+6MtkkJ3KfMzy220KTi95e2rRkrw==",\n      "requires": {\n        "@jest/test-result": "24.7.1",\n        "@jest/types": "24.7.0",\n        "@types/yargs": "12.0.9",\n        "ansi-escapes": "3.0.0",\n        "chalk": "2.0.1",\n        "jest-util": "24.7.1",\n        "string-length": "2.0.0"\n      }\n    },\n    "jest-worker": {\n      "version": "24.6.0",\n      "resolved": "https://registry.npmjs.org/jest-worker/-/jest-worker-24.6.0.tgz",\n      "integrity": "sha512-jDwgW5W9qGNvpI1tNnvajh0a5IE/PuGLFmHk6aR/BZFz8tSgGw17GsDPXAJ6p91IvYDjOw8GpFbvvZGAK+DPQQ==",\n      "requires": {\n        "merge-stream": "1.0.1",\n        "supports-color": "6.1.0"\n      },\n      "dependencies": {\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "3.0.0"\n          }\n        }\n      }\n    },\n    "joi": {\n      "version": "14.3.1",\n      "resolved": "https://registry.npmjs.org/joi/-/joi-14.3.1.tgz",\n      "integrity": "sha512-LQDdM+pkOrpAn4Lp+neNIFV3axv1Vna3j38bisbQhETPMANYRbFJFUyOZcOClYvM/hppMhGWuKSFEK9vjrB+bQ==",\n      "requires": {\n        "hoek": "6.x.x",\n        "isemail": "3.x.x",\n        "topo": "3.x.x"\n      }\n    },\n    "jquery": {\n      "version": "3.4.0",\n      "resolved": "https://registry.npmjs.org/jquery/-/jquery-3.4.0.tgz",\n      "integrity": "sha512-ggRCXln9zEqv6OqAGXFEcshF5dSBvCkzj6Gm2gzuR5fWawaX8t7cxKVkkygKODrDAzKdoYw3l/e3pm3vlT4IbQ=="\n    },\n    "js-beautify": {\n      "version": "1.9.1",\n      "resolved": "https://registry.npmjs.org/js-beautify/-/js-beautify-1.9.1.tgz",\n      "integrity": "sha512-oxxvVZdOdUfzk8IOLBF2XUZvl2GoBEfA+b0of4u2EBY/46NlXasi8JdFvazA5lCrf9/lQhTjyVy2QCUW7iq0MQ==",\n      "requires": {\n        "config-chain": "1.1.12",\n        "editorconfig": "0.15.2",\n        "glob": "7.1.3",\n        "mkdirp": "~0.5.0",\n        "nopt": "~4.0.1"\n      }\n    },\n    "js-levenshtein": {\n      "version": "1.1.6",\n      "resolved": "https://registry.npmjs.org/js-levenshtein/-/js-levenshtein-1.1.6.tgz",\n      "integrity": "sha512-X2BB11YZtrRqY4EnQcLX5Rh373zbK4alC1FW7D7MBhL2gtcC17cTnr6DmfHZeS0s2rTHjUTMMHfG7gO8SSdw+g=="\n    },\n    "js-tokens": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",\n      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="\n    },\n    "js-yaml": {\n      "version": "3.13.1",\n      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-3.13.1.tgz",\n      "integrity": "sha512-YfbcO7jXDdyj0DGxYVSlSeQNHbD7XPWvrVWeVUujrQEoZzWJIRrCPoyk6kL6IAjAG2IolMK4T0hNUe0HOUs5Jw==",\n      "requires": {\n        "argparse": "1.0.7",\n        "esprima": "4.0.0"\n      }\n    },\n    "jsbn": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",\n      "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="\n    },\n    "jsdom": {\n      "version": "11.12.0",\n      "resolved": "https://registry.npmjs.org/jsdom/-/jsdom-11.12.0.tgz",\n      "integrity": "sha512-y8Px43oyiBM13Zc1z780FrfNLJCXTL40EWlty/LXUtcjykRBNgLlCjWXpfSPBl2iv+N7koQN+dvqszHZgT/Fjw==",\n      "requires": {\n        "abab": "2.0.0",\n        "acorn": "5.5.3",\n        "acorn-globals": "4.1.0",\n        "array-equal": "1.0.0",\n        "cssom": ">= 0.3.2 < 0.4.0",\n        "cssstyle": "1.0.0",\n        "data-urls": "1.0.0",\n        "domexception": "1.0.1",\n        "escodegen": "1.9.1",\n        "html-encoding-sniffer": "1.0.2",\n        "left-pad": "1.3.0",\n        "nwsapi": "2.0.7",\n        "parse5": "4.0.0",\n        "pn": "1.1.0",\n        "request": "2.87.0",\n        "request-promise-native": "1.0.5",\n        "sax": "1.2.4",\n        "symbol-tree": "3.2.2",\n        "tough-cookie": "2.3.4",\n        "w3c-hr-time": "1.0.1",\n        "webidl-conversions": "4.0.2",\n        "whatwg-encoding": "1.0.3",\n        "whatwg-mimetype": "2.1.0",\n        "whatwg-url": "6.4.1",\n        "ws": "5.2.0",\n        "xml-name-validator": "3.0.0"\n      },\n      "dependencies": {\n        "acorn": {\n          "version": "5.7.3",\n          "resolved": "https://registry.npmjs.org/acorn/-/acorn-5.7.3.tgz",\n          "integrity": "sha512-T/zvzYRfbVojPWahDsE5evJdHb3oJoQfFbsrKM7w5Zcs++Tr257tia3BmMP8XYVjp1S9RZXQMh7gao96BlqZOw=="\n        },\n        "parse5": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/parse5/-/parse5-4.0.0.tgz",\n          "integrity": "sha512-VrZ7eOd3T1Fk4XWNXMgiGBK/z0MG48BWG2uQNU4I72fkQuKUTZpl+u9k+CxEG0twMVzSmXEEz12z5Fnw1jIQFA=="\n        }\n      }\n    },\n    "jsesc": {\n      "version": "2.5.2",\n      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",\n      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA=="\n    },\n    "json-parse-better-errors": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/json-parse-better-errors/-/json-parse-better-errors-1.0.2.tgz",\n      "integrity": "sha512-mrqyZKfX5EhL7hvqcV6WG1yYjnjeuYDzDhhcAAUrq8Po85NBQBJP+ZDUT75qZQ98IkUoBqdkExkukOU7Ts2wrw=="\n    },\n    "json-schema": {\n      "version": "0.2.3",\n      "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",\n      "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="\n    },\n    "json-schema-traverse": {\n      "version": "0.4.1",\n      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",\n      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="\n    },\n    "json-stable-stringify": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/json-stable-stringify/-/json-stable-stringify-1.0.1.tgz",\n      "integrity": "sha1-mnWdOcXy/1A/1TAGRu1EX4jE+a8=",\n      "requires": {\n        "jsonify": "~0.0.0"\n      }\n    },\n    "json-stable-stringify-without-jsonify": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",\n      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE="\n    },\n    "json-stringify-safe": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",\n      "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="\n    },\n    "json3": {\n      "version": "3.3.2",\n      "resolved": "https://registry.npmjs.org/json3/-/json3-3.3.2.tgz",\n      "integrity": "sha1-PAQ0dD35Pi9cQq7nsZvLSDV19OE="\n    },\n    "json5": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/json5/-/json5-2.1.0.tgz",\n      "integrity": "sha512-8Mh9h6xViijj36g7Dxi+Y4S6hNGV96vcJZr/SrlHh1LR/pEn/8j/+qIBbs44YKl69Lrfctp4QD+AdWLTMqEZAQ==",\n      "requires": {\n        "minimist": "1.2.0"\n      }\n    },\n    "jsonfile": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz",\n      "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",\n      "requires": {\n        "graceful-fs": "4.1.6"\n      }\n    },\n    "jsonify": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/jsonify/-/jsonify-0.0.0.tgz",\n      "integrity": "sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM="\n    },\n    "jsprim": {\n      "version": "1.4.1",\n      "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",\n      "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",\n      "requires": {\n        "assert-plus": "1.0.0",\n        "extsprintf": "1.3.0",\n        "json-schema": "0.2.3",\n        "verror": "1.10.0"\n      }\n    },\n    "jss": {\n      "version": "9.8.7",\n      "resolved": "https://registry.npmjs.org/jss/-/jss-9.8.7.tgz",\n      "integrity": "sha512-awj3XRZYxbrmmrx9LUSj5pXSUfm12m8xzi/VKeqI1ZwWBtQ0kVPTs3vYs32t4rFw83CgFDukA8wKzOE9sMQnoQ==",\n      "requires": {\n        "is-in-browser": "1.1.3",\n        "symbol-observable": "1.1.0",\n        "warning": "3.0.0"\n      },\n      "dependencies": {\n        "warning": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/warning/-/warning-3.0.0.tgz",\n          "integrity": "sha1-MuU3fLVy3kqwR1O9+IIcAe1gW3w=",\n          "requires": {\n            "loose-envify": "1.0.0"\n          }\n        }\n      }\n    },\n    "jss-camel-case": {\n      "version": "6.1.0",\n      "resolved": "https://registry.npmjs.org/jss-camel-case/-/jss-camel-case-6.1.0.tgz",\n      "integrity": "sha512-HPF2Q7wmNW1t79mCqSeU2vdd/vFFGpkazwvfHMOhPlMgXrJDzdj9viA2SaHk9ZbD5pfL63a8ylp4++irYbbzMQ==",\n      "requires": {\n        "hyphenate-style-name": "1.0.2"\n      }\n    },\n    "jss-default-unit": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/jss-default-unit/-/jss-default-unit-8.0.2.tgz",\n      "integrity": "sha512-WxNHrF/18CdoAGw2H0FqOEvJdREXVXLazn7PQYU7V6/BWkCV0GkmWsppNiExdw8dP4TU1ma1dT9zBNJ95feLmg=="\n    },\n    "jss-global": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/jss-global/-/jss-global-3.0.0.tgz",\n      "integrity": "sha512-wxYn7vL+TImyQYGAfdplg7yaxnPQ9RaXY/cIA8hawaVnmmWxDHzBK32u1y+RAvWboa3lW83ya3nVZ/C+jyjZ5Q=="\n    },\n    "jss-nested": {\n      "version": "6.0.1",\n      "resolved": "https://registry.npmjs.org/jss-nested/-/jss-nested-6.0.1.tgz",\n      "integrity": "sha512-rn964TralHOZxoyEgeq3hXY8hyuCElnvQoVrQwKHVmu55VRDd6IqExAx9be5HgK0yN/+hQdgAXQl/GUrBbbSTA==",\n      "requires": {\n        "warning": "3.0.0"\n      },\n      "dependencies": {\n        "warning": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/warning/-/warning-3.0.0.tgz",\n          "integrity": "sha1-MuU3fLVy3kqwR1O9+IIcAe1gW3w=",\n          "requires": {\n            "loose-envify": "1.0.0"\n          }\n        }\n      }\n    },\n    "jss-props-sort": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/jss-props-sort/-/jss-props-sort-6.0.0.tgz",\n      "integrity": "sha512-E89UDcrphmI0LzmvYk25Hp4aE5ZBsXqMWlkFXS0EtPkunJkRr+WXdCNYbXbksIPnKlBenGB9OxzQY+mVc70S+g=="\n    },\n    "jss-vendor-prefixer": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/jss-vendor-prefixer/-/jss-vendor-prefixer-7.0.0.tgz",\n      "integrity": "sha512-Agd+FKmvsI0HLcYXkvy8GYOw3AAASBUpsmIRvVQheps+JWaN892uFOInTr0DRydwaD91vSSUCU4NssschvF7MA==",\n      "requires": {\n        "css-vendor": "0.3.8"\n      }\n    },\n    "jstransform": {\n      "version": "11.0.3",\n      "resolved": "https://registry.npmjs.org/jstransform/-/jstransform-11.0.3.tgz",\n      "integrity": "sha1-CaeJk+CuTU70SH9hVakfYZDLQiM=",\n      "requires": {\n        "base62": "1.1.0",\n        "commoner": "0.10.1",\n        "esprima-fb": "15001.1.0-dev-harmony-fb",\n        "object-assign": "2.0.0",\n        "source-map": "0.4.2"\n      },\n      "dependencies": {\n        "esprima-fb": {\n          "version": "15001.1.0-dev-harmony-fb",\n          "resolved": "https://registry.npmjs.org/esprima-fb/-/esprima-fb-15001.1.0-dev-harmony-fb.tgz",\n          "integrity": "sha1-MKlHMDxrjV6VW+4rmbHSMyBqaQE="\n        },\n        "object-assign": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-2.1.1.tgz",\n          "integrity": "sha1-Q8NuXVaf+OSBbE76i+AtJpZ8GKo="\n        },\n        "source-map": {\n          "version": "0.4.4",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.4.4.tgz",\n          "integrity": "sha1-66T12pwNyZneaAMti092FzZSA2s=",\n          "requires": {\n            "amdefine": ">=0.0.4"\n          }\n        }\n      }\n    },\n    "jsx-ast-utils": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-2.1.0.tgz",\n      "integrity": "sha512-yDGDG2DS4JcqhA6blsuYbtsT09xL8AoLuUR2Gb5exrw7UEM19sBcOTq+YBBhrNbl0PUC4R4LnFu+dHg2HKeVvA==",\n      "requires": {\n        "array-includes": "3.0.3"\n      }\n    },\n    "just-debounce": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/just-debounce/-/just-debounce-1.0.0.tgz",\n      "integrity": "sha1-h/zPrv/AtozRnVX2cilD+SnqNeo="\n    },\n    "keyboard-key": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/keyboard-key/-/keyboard-key-1.0.4.tgz",\n      "integrity": "sha512-my04dE6BCwPpwoe4KYKfPxWiwgDYQOHrVmtzn1CfzmoEsGG/ef4oZGaXCzi1+iFhG7CN5JkOuxmei5OABY8/ag==",\n      "dev": true\n    },\n    "keycode": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/keycode/-/keycode-2.2.0.tgz",\n      "integrity": "sha1-PQr1bce4uOXLqNCpfxByBO7CKwQ=",\n      "dev": true\n    },\n    "killable": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/killable/-/killable-1.0.1.tgz",\n      "integrity": "sha512-LzqtLKlUwirEUyl/nicirVmNiPvYs7l5n8wOPP7fyJVpUPkvCnW/vuiXGpylGUlnPDnB7311rARzAt3Mhswpjg=="\n    },\n    "kind-of": {\n      "version": "3.2.2",\n      "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz",\n      "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",\n      "requires": {\n        "is-buffer": "1.1.5"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        }\n      }\n    },\n    "kleur": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz",\n      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w=="\n    },\n    "last-call-webpack-plugin": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/last-call-webpack-plugin/-/last-call-webpack-plugin-3.0.0.tgz",\n      "integrity": "sha512-7KI2l2GIZa9p2spzPIVZBYyNKkN+e/SQPpnjlTiPhdbDW3F86tdKKELxKpzJ5sgU19wQWsACULZmpTPYHeWO5w==",\n      "requires": {\n        "lodash": "4.17.5",\n        "webpack-sources": "1.1.0"\n      }\n    },\n    "last-run": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/last-run/-/last-run-1.1.1.tgz",\n      "integrity": "sha1-RblpQsF7HHnHchmCWbqUO+v4yls=",\n      "requires": {\n        "default-resolution": "2.0.0",\n        "es6-weak-map": "2.0.1"\n      }\n    },\n    "lazy-cache": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-1.0.4.tgz",\n      "integrity": "sha1-odePw6UEdMuAhF07O24dpJpEbo4="\n    },\n    "lazystream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/lazystream/-/lazystream-1.0.0.tgz",\n      "integrity": "sha1-9plf4PggOS9hOWvolGJAe7dxaOQ=",\n      "requires": {\n        "readable-stream": "2.0.5"\n      }\n    },\n    "lcid": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/lcid/-/lcid-2.0.0.tgz",\n      "integrity": "sha512-avPEb8P8EGnwXKClwsNUgryVjllcRqtMYa49NTsbQagYuT1DcXnl1915oxWjoyGrXR6zH/Y0Zc96xWsPcoDKeA==",\n      "requires": {\n        "invert-kv": "2.0.0"\n      }\n    },\n    "lead": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/lead/-/lead-1.0.0.tgz",\n      "integrity": "sha1-bxT5mje+Op3XhPVJVpDlkDRm7kI=",\n      "requires": {\n        "flush-write-stream": "1.0.2"\n      }\n    },\n    "left-pad": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/left-pad/-/left-pad-1.3.0.tgz",\n      "integrity": "sha512-XI5MPzVNApjAyhQzphX8BkmKsKUxD4LdyK24iZeQGinBN9yTQT3bFlCBy/aVx2HrNcqQGsdot8ghrjyrvMCoEA=="\n    },\n    "less": {\n      "version": "3.9.0",\n      "resolved": "https://registry.npmjs.org/less/-/less-3.9.0.tgz",\n      "integrity": "sha512-31CmtPEZraNUtuUREYjSqRkeETFdyEHSEPAGq4erDlUXtda7pzNmctdljdIagSb589d/qXGWiiP31R5JVf+v0w==",\n      "requires": {\n        "clone": "2.1.2",\n        "errno": "0.1.1",\n        "graceful-fs": "4.1.2",\n        "image-size": "~0.5.0",\n        "mime": "1.4.1",\n        "mkdirp": "0.5.0",\n        "promise": "7.1.1",\n        "request": "2.83.0",\n        "source-map": "~0.6.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "mime": {\n          "version": "1.6.0",\n          "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",\n          "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",\n          "optional": true\n        },\n        "promise": {\n          "version": "7.3.1",\n          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",\n          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",\n          "optional": true,\n          "requires": {\n            "asap": "~2.0.3"\n          }\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",\n          "optional": true\n        }\n      }\n    },\n    "leven": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/leven/-/leven-2.1.0.tgz",\n      "integrity": "sha1-wuep93IJTe6dNCAq6KzORoeHVYA="\n    },\n    "levn": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/levn/-/levn-0.3.0.tgz",\n      "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",\n      "requires": {\n        "prelude-ls": "~1.1.2",\n        "type-check": "~0.3.2"\n      }\n    },\n    "liftoff": {\n      "version": "2.5.0",\n      "resolved": "https://registry.npmjs.org/liftoff/-/liftoff-2.5.0.tgz",\n      "integrity": "sha1-IAkpG7Mc6oYbvxCnwVooyvdcMew=",\n      "requires": {\n        "extend": "3.0.0",\n        "findup-sync": "2.0.0",\n        "fined": "1.0.1",\n        "flagged-respawn": "1.0.0",\n        "is-plain-object": "2.0.4",\n        "object.map": "1.0.0",\n        "rechoir": "0.6.2",\n        "resolve": "1.1.7"\n      }\n    },\n    "load-json-file": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/load-json-file/-/load-json-file-4.0.0.tgz",\n      "integrity": "sha1-L19Fq5HjMhYjT9U62rZo607AmTs=",\n      "requires": {\n        "graceful-fs": "4.1.2",\n        "parse-json": "4.0.0",\n        "pify": "3.0.0",\n        "strip-bom": "3.0.0"\n      }\n    },\n    "loader-fs-cache": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/loader-fs-cache/-/loader-fs-cache-1.0.2.tgz",\n      "integrity": "sha512-70IzT/0/L+M20jUlEqZhZyArTU6VKLRTYRDAYN26g4jfzpJqjipLL3/hgYpySqI9PwsVRHHFja0LfEmsx9X2Cw==",\n      "requires": {\n        "find-cache-dir": "0.1.1",\n        "mkdirp": "0.5.1"\n      },\n      "dependencies": {\n        "find-cache-dir": {\n          "version": "0.1.1",\n          "resolved": "https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-0.1.1.tgz",\n          "integrity": "sha1-yN765XyKUqinhPnjHFfHQumToLk=",\n          "requires": {\n            "commondir": "1.0.1",\n            "mkdirp": "0.5.1",\n            "pkg-dir": "1.0.0"\n          }\n        },\n        "find-up": {\n          "version": "1.1.2",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-1.1.2.tgz",\n          "integrity": "sha1-ay6YIrGizgpgq2TWEOzK1TyyTQ8=",\n          "requires": {\n            "path-exists": "2.0.0",\n            "pinkie-promise": "2.0.0"\n          }\n        },\n        "path-exists": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-2.1.0.tgz",\n          "integrity": "sha1-D+tsZPD8UY2adU3V77YscCJ2H0s=",\n          "requires": {\n            "pinkie-promise": "2.0.0"\n          }\n        },\n        "pkg-dir": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-1.0.0.tgz",\n          "integrity": "sha1-ektQio1bstYp1EcFb/TpyTFM89Q=",\n          "requires": {\n            "find-up": "1.0.0"\n          }\n        }\n      }\n    },\n    "loader-runner": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/loader-runner/-/loader-runner-2.4.0.tgz",\n      "integrity": "sha512-Jsmr89RcXGIwivFY21FcRrisYZfvLMTWx5kOLc+JTxtpBOG6xML0vzbc6SEQG2FO9/4Fc3wW4LVcB5DmGflaRw=="\n    },\n    "loader-utils": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/loader-utils/-/loader-utils-1.2.3.tgz",\n      "integrity": "sha512-fkpz8ejdnEMG3s37wGL07iSBDg99O9D5yflE9RGNH3hRdx9SOwYfnGYdZOUIZitN8E+E2vkq3MUMYMvPYl5ZZA==",\n      "requires": {\n        "big.js": "5.2.2",\n        "emojis-list": "2.0.0",\n        "json5": "1.0.1"\n      },\n      "dependencies": {\n        "json5": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/json5/-/json5-1.0.1.tgz",\n          "integrity": "sha512-aKS4WQjPenRxiQsC93MNfjx+nbF4PAdYzmd/1JIj8HYzqfbu86beTuNgXDzPknWk0n0uARlyewZo4s++ES36Ow==",\n          "requires": {\n            "minimist": "1.2.0"\n          }\n        }\n      }\n    },\n    "locate-path": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz",\n      "integrity": "sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==",\n      "requires": {\n        "p-locate": "3.0.0",\n        "path-exists": "3.0.0"\n      }\n    },\n    "lodash": {\n      "version": "4.17.11",\n      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.11.tgz",\n      "integrity": "sha512-cQKh8igo5QUhZ7lg38DYWAxMvjSAKG0A8wGSVimP07SIUEK2UO+arSRKbRZWtelMtN5V0Hkwh5ryOto/SshYIg=="\n    },\n    "lodash._baseassign": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/lodash._baseassign/-/lodash._baseassign-3.2.0.tgz",\n      "integrity": "sha1-jDigmVAPIVrQnlnxci/QxSv+Ck4=",\n      "requires": {\n        "lodash._basecopy": "3.0.0",\n        "lodash.keys": "3.0.0"\n      }\n    },\n    "lodash._basecopy": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._basecopy/-/lodash._basecopy-3.0.1.tgz",\n      "integrity": "sha1-jaDmqHbPNEwK2KVIghEd08XHyjY="\n    },\n    "lodash._basetostring": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._basetostring/-/lodash._basetostring-3.0.1.tgz",\n      "integrity": "sha1-0YYdh3+CSlL2aYMtyvPuFVZqB9U="\n    },\n    "lodash._basevalues": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._basevalues/-/lodash._basevalues-3.0.0.tgz",\n      "integrity": "sha1-W3dXYoAr3j0yl1A+JjAIIP32Ybc="\n    },\n    "lodash._bindcallback": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._bindcallback/-/lodash._bindcallback-3.0.1.tgz",\n      "integrity": "sha1-5THCdkTPi1epnhftlbNcdIeJOS4="\n    },\n    "lodash._createassigner": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/lodash._createassigner/-/lodash._createassigner-3.1.1.tgz",\n      "integrity": "sha1-g4pbri/aymOsIt7o4Z+k5taXCxE=",\n      "requires": {\n        "lodash._bindcallback": "3.0.0",\n        "lodash._isiterateecall": "3.0.0",\n        "lodash.restparam": "3.0.0"\n      }\n    },\n    "lodash._getnative": {\n      "version": "3.9.1",\n      "resolved": "https://registry.npmjs.org/lodash._getnative/-/lodash._getnative-3.9.1.tgz",\n      "integrity": "sha1-VwvH3t5G1hzc3mh9ZdPuy6o6r/U="\n    },\n    "lodash._isiterateecall": {\n      "version": "3.0.9",\n      "resolved": "https://registry.npmjs.org/lodash._isiterateecall/-/lodash._isiterateecall-3.0.9.tgz",\n      "integrity": "sha1-UgOte6Ql+uhCRg5pbbnPPmqsBXw="\n    },\n    "lodash._isnative": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash._isnative/-/lodash._isnative-2.4.1.tgz",\n      "integrity": "sha1-PqZAS3hKe+g2x7V1gOHN95sUgyw="\n    },\n    "lodash._objecttypes": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash._objecttypes/-/lodash._objecttypes-2.4.1.tgz",\n      "integrity": "sha1-fAt/admKH3ZSn4kLDNsbTf7BHBE="\n    },\n    "lodash._reescape": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._reescape/-/lodash._reescape-3.0.0.tgz",\n      "integrity": "sha1-Kx1vXf4HyKNVdT5fJ/rH8c3hYWo="\n    },\n    "lodash._reevaluate": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._reevaluate/-/lodash._reevaluate-3.0.0.tgz",\n      "integrity": "sha1-WLx0xAZklTrgsSTYBpltrKQx4u0="\n    },\n    "lodash._reinterpolate": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",\n      "integrity": "sha1-DM8tiRZq8Ds2Y8eWU4t1rG4RTZ0="\n    },\n    "lodash._root": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/lodash._root/-/lodash._root-3.0.1.tgz",\n      "integrity": "sha1-+6HEUkwZ7ppfgTa0YJ8BfPTe1pI="\n    },\n    "lodash._shimkeys": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash._shimkeys/-/lodash._shimkeys-2.4.1.tgz",\n      "integrity": "sha1-bpzJZm/wgfC1psl4uD4kLmlJ0gM=",\n      "requires": {\n        "lodash._objecttypes": "~2.4.1"\n      }\n    },\n    "lodash.assign": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/lodash.assign/-/lodash.assign-3.2.0.tgz",\n      "integrity": "sha1-POnwI0tLIiPilrj6CsH+6OvKZPo=",\n      "requires": {\n        "lodash._baseassign": "3.0.0",\n        "lodash._createassigner": "3.0.0",\n        "lodash.keys": "3.0.0"\n      }\n    },\n    "lodash.clone": {\n      "version": "4.5.0",\n      "resolved": "https://registry.npmjs.org/lodash.clone/-/lodash.clone-4.5.0.tgz",\n      "integrity": "sha1-GVhwRQ9aExkkeN9Lw9I9LeoZB7Y="\n    },\n    "lodash.defaults": {\n      "version": "3.1.2",\n      "resolved": "https://registry.npmjs.org/lodash.defaults/-/lodash.defaults-3.1.2.tgz",\n      "integrity": "sha1-xzCLGNv4vJNy1wGnNJPGEZK9Liw=",\n      "requires": {\n        "lodash.assign": "3.0.0",\n        "lodash.restparam": "3.0.0"\n      }\n    },\n    "lodash.escape": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/lodash.escape/-/lodash.escape-3.2.0.tgz",\n      "integrity": "sha1-mV7g3BjBtIzJLv+ucaEKq1tIdpg=",\n      "requires": {\n        "lodash._root": "3.0.0"\n      }\n    },\n    "lodash.flatten": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/lodash.flatten/-/lodash.flatten-4.4.0.tgz",\n      "integrity": "sha1-8xwiIlqWMtK7+OSt2+8kCqdlph8="\n    },\n    "lodash.isarguments": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/lodash.isarguments/-/lodash.isarguments-3.1.0.tgz",\n      "integrity": "sha1-L1c9hcaiQon/AGY7SRwdM4/zRYo="\n    },\n    "lodash.isarray": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/lodash.isarray/-/lodash.isarray-3.0.4.tgz",\n      "integrity": "sha1-eeTriMNqgSKvhvhEqpvNhRtfu1U="\n    },\n    "lodash.isobject": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/lodash.isobject/-/lodash.isobject-2.4.1.tgz",\n      "integrity": "sha1-Wi5H/mmVPx7mMafrof5k0tBlWPU=",\n      "requires": {\n        "lodash._objecttypes": "~2.4.1"\n      }\n    },\n    "lodash.keys": {\n      "version": "3.1.2",\n      "resolved": "https://registry.npmjs.org/lodash.keys/-/lodash.keys-3.1.2.tgz",\n      "integrity": "sha1-TbwEcrFWvlCgsoaFXRvQsMZWCYo=",\n      "requires": {\n        "lodash._getnative": "3.0.0",\n        "lodash.isarguments": "3.0.0",\n        "lodash.isarray": "3.0.0"\n      }\n    },\n    "lodash.memoize": {\n      "version": "4.1.2",\n      "resolved": "https://registry.npmjs.org/lodash.memoize/-/lodash.memoize-4.1.2.tgz",\n      "integrity": "sha1-vMbEmkKihA7Zl/Mj6tpezRguC/4="\n    },\n    "lodash.merge": {\n      "version": "4.6.1",\n      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.1.tgz",\n      "integrity": "sha512-AOYza4+Hf5z1/0Hztxpm2/xiPZgi/cjMqdnKTUWTBSKchJlxXXuUSxCCl8rJlf4g6yww/j6mA8nC8Hw/EZWxKQ=="\n    },\n    "lodash.partialright": {\n      "version": "4.2.1",\n      "resolved": "https://registry.npmjs.org/lodash.partialright/-/lodash.partialright-4.2.1.tgz",\n      "integrity": "sha1-ATDYDoM2MmTUAHTzKbij56ihzEs="\n    },\n    "lodash.pick": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/lodash.pick/-/lodash.pick-4.4.0.tgz",\n      "integrity": "sha1-UvBWEP/53tQiYRRB7R/BI6AwAbM="\n    },\n    "lodash.restparam": {\n      "version": "3.6.1",\n      "resolved": "https://registry.npmjs.org/lodash.restparam/-/lodash.restparam-3.6.1.tgz",\n      "integrity": "sha1-k2pOMJ7zMKdkXtQUWYbIWuWyCAU="\n    },\n    "lodash.sortby": {\n      "version": "4.7.0",\n      "resolved": "https://registry.npmjs.org/lodash.sortby/-/lodash.sortby-4.7.0.tgz",\n      "integrity": "sha1-7dFMgk4sycHgsKG0K7UhBRakJDg="\n    },\n    "lodash.tail": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/lodash.tail/-/lodash.tail-4.1.1.tgz",\n      "integrity": "sha1-0jM6NtnncXyK0vfKyv7HwytERmQ="\n    },\n    "lodash.template": {\n      "version": "4.4.0",\n      "resolved": "https://registry.npmjs.org/lodash.template/-/lodash.template-4.4.0.tgz",\n      "integrity": "sha1-5zoDhcg1VZF0bgILmWecaQ5o+6A=",\n      "requires": {\n        "lodash._reinterpolate": "~3.0.0",\n        "lodash.templatesettings": "4.0.0"\n      }\n    },\n    "lodash.templatesettings": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/lodash.templatesettings/-/lodash.templatesettings-4.1.0.tgz",\n      "integrity": "sha1-K01OlbpEDZFf8IvImeRVNmZxMxY=",\n      "requires": {\n        "lodash._reinterpolate": "~3.0.0"\n      }\n    },\n    "lodash.throttle": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/lodash.throttle/-/lodash.throttle-4.1.1.tgz",\n      "integrity": "sha1-wj6RtxAkKscMN/HhzaknTMOb8vQ=",\n      "dev": true\n    },\n    "lodash.unescape": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/lodash.unescape/-/lodash.unescape-4.0.1.tgz",\n      "integrity": "sha1-vyJJiGzlFM2hEvrpIYzcBlIR/Jw="\n    },\n    "lodash.uniq": {\n      "version": "4.5.0",\n      "resolved": "https://registry.npmjs.org/lodash.uniq/-/lodash.uniq-4.5.0.tgz",\n      "integrity": "sha1-0CJTc662Uq3BvILklFM5qEJ1R3M="\n    },\n    "loglevel": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/loglevel/-/loglevel-1.6.1.tgz",\n      "integrity": "sha1-4PyVEztu8nbNyIh82vJKpvFW+Po="\n    },\n    "longest": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/longest/-/longest-1.0.1.tgz",\n      "integrity": "sha1-MKCy2jj3N3DoKUoNIuZiXtd9AJc="\n    },\n    "loose-envify": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",\n      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",\n      "requires": {\n        "js-tokens": "3.0.0 || 4.0.0"\n      }\n    },\n    "lower-case": {\n      "version": "1.1.4",\n      "resolved": "https://registry.npmjs.org/lower-case/-/lower-case-1.1.4.tgz",\n      "integrity": "sha1-miyr0bno4K6ZOkv31YdcOcQujqw="\n    },\n    "lru-cache": {\n      "version": "5.1.1",\n      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",\n      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",\n      "requires": {\n        "yallist": "3.0.2"\n      }\n    },\n    "make-dir": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/make-dir/-/make-dir-2.1.0.tgz",\n      "integrity": "sha512-LS9X+dc8KLxXCb8dni79fLIIUA5VyZoyjSMCwTluaXA0o27cCK0bhXkpgw+sTXVpPy/lSO57ilRixqk0vDmtRA==",\n      "requires": {\n        "pify": "4.0.1",\n        "semver": "5.6.0"\n      },\n      "dependencies": {\n        "pify": {\n          "version": "4.0.1",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-4.0.1.tgz",\n          "integrity": "sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g=="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "make-error": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.5.tgz",\n      "integrity": "sha512-c3sIjNUow0+8swNwVpqoH4YCShKNFkMaw6oH1mNS2haDZQqkeZFlHS3dhoeEbKKmJB4vXpJucU6oH75aDYeE9g=="\n    },\n    "make-error-cause": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/make-error-cause/-/make-error-cause-1.2.2.tgz",\n      "integrity": "sha1-3wOI/NCzeBbf8KX7gQiTl3fcvJ0=",\n      "requires": {\n        "make-error": "1.2.0"\n      }\n    },\n    "make-iterator": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/make-iterator/-/make-iterator-1.0.1.tgz",\n      "integrity": "sha512-pxiuXh0iVEq7VM7KMIhs5gxsfxCux2URptUQaXo4iZZJxBAzTPOLE2BumO5dbfVYq/hBJFBR/a1mFDmOx5AGmw==",\n      "requires": {\n        "kind-of": "6.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "makeerror": {\n      "version": "1.0.11",\n      "resolved": "https://registry.npmjs.org/makeerror/-/makeerror-1.0.11.tgz",\n      "integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",\n      "requires": {\n        "tmpl": "1.0.x"\n      }\n    },\n    "mamacro": {\n      "version": "0.0.3",\n      "resolved": "https://registry.npmjs.org/mamacro/-/mamacro-0.0.3.tgz",\n      "integrity": "sha512-qMEwh+UujcQ+kbz3T6V+wAmO2U8veoq2w+3wY8MquqwVA3jChfwY+Tk52GZKDfACEPjuZ7r2oJLejwpt8jtwTA=="\n    },\n    "map-age-cleaner": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/map-age-cleaner/-/map-age-cleaner-0.1.3.tgz",\n      "integrity": "sha512-bJzx6nMoP6PDLPBFmg7+xRKeFZvFboMrGlxmNj9ClvX53KrmvM5bXFXEWjbz4cz1AFn+jWJ9z/DJSz7hrs0w3w==",\n      "requires": {\n        "p-defer": "1.0.0"\n      }\n    },\n    "map-cache": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz",\n      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8="\n    },\n    "map-stream": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/map-stream/-/map-stream-0.1.0.tgz",\n      "integrity": "sha1-5WqpTEyAVaFkBKBnS3jyFffI4ZQ="\n    },\n    "map-visit": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz",\n      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",\n      "requires": {\n        "object-visit": "1.0.0"\n      }\n    },\n    "matchdep": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/matchdep/-/matchdep-2.0.0.tgz",\n      "integrity": "sha1-xvNINKDY28OzfCfui7yyfHd1WC4=",\n      "requires": {\n        "findup-sync": "2.0.0",\n        "micromatch": "3.0.4",\n        "resolve": "1.4.0",\n        "stack-trace": "0.0.10"\n      }\n    },\n    "material-ui": {\n      "version": "0.20.2",\n      "resolved": "https://registry.npmjs.org/material-ui/-/material-ui-0.20.2.tgz",\n      "integrity": "sha512-VeqgQkdvtK193w+FFvXDEwlVxI4rWk83eWbpYLeOIHDPWr3rbB9B075JRnJt/8IsI2X8q5Aia5W3+7m4KkleDg==",\n      "dev": true,\n      "requires": {\n        "babel-runtime": "6.23.0",\n        "inline-style-prefixer": "3.0.8",\n        "keycode": "2.1.8",\n        "lodash.merge": "4.6.0",\n        "lodash.throttle": "4.1.1",\n        "prop-types": "15.5.7",\n        "react-event-listener": "0.6.2",\n        "react-transition-group": "1.2.1",\n        "recompose": "0.26.0",\n        "simple-assign": "0.1.0",\n        "warning": "3.0.0"\n      },\n      "dependencies": {\n        "hoist-non-react-statics": {\n          "version": "2.5.5",\n          "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-2.5.5.tgz",\n          "integrity": "sha512-rqcy4pJo55FTTLWt+bU8ukscqHeE/e9KWvsOW2b/a3afxQZhwkQdT1rPPCJ0rYXdj4vNcasY8zHTH+jF/qStxw==",\n          "dev": true\n        },\n        "react-transition-group": {\n          "version": "1.2.1",\n          "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-1.2.1.tgz",\n          "integrity": "sha512-CWaL3laCmgAFdxdKbhhps+c0HRGF4c+hdM4H23+FI1QBNUyx/AMeIJGWorehPNSaKnQNOAxL7PQmqMu78CDj3Q==",\n          "dev": true,\n          "requires": {\n            "chain-function": "1.0.0",\n            "dom-helpers": "3.2.0",\n            "loose-envify": "1.3.1",\n            "prop-types": "15.5.6",\n            "warning": "3.0.0"\n          }\n        },\n        "recompose": {\n          "version": "0.26.0",\n          "resolved": "https://registry.npmjs.org/recompose/-/recompose-0.26.0.tgz",\n          "integrity": "sha512-KwOu6ztO0mN5vy3+zDcc45lgnaUoaQse/a5yLVqtzTK13czSWnFGmXbQVmnoMgDkI5POd1EwIKSbjU1V7xdZog==",\n          "dev": true,\n          "requires": {\n            "change-emitter": "0.1.2",\n            "fbjs": "0.8.1",\n            "hoist-non-react-statics": "2.3.1",\n            "symbol-observable": "1.0.4"\n          }\n        },\n        "warning": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/warning/-/warning-3.0.0.tgz",\n          "integrity": "sha1-MuU3fLVy3kqwR1O9+IIcAe1gW3w=",\n          "dev": true,\n          "requires": {\n            "loose-envify": "1.0.0"\n          }\n        }\n      }\n    },\n    "math-random": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/math-random/-/math-random-1.0.4.tgz",\n      "integrity": "sha512-rUxjysqif/BZQH2yhd5Aaq7vXMSx9NdEsQcyA07uEzIvxgI7zIr33gGsh+RU0/XjmQpCW7RsVof1vlkvQVCK5A=="\n    },\n    "md5.js": {\n      "version": "1.3.5",\n      "resolved": "https://registry.npmjs.org/md5.js/-/md5.js-1.3.5.tgz",\n      "integrity": "sha512-xitP+WxNPcTTOgnTJcrhM0xvdPepipPSf3I8EIpGKeFLjt3PlJLIDG3u8EX53ZIubkb+5U2+3rELYpEhHhzdkg==",\n      "requires": {\n        "hash-base": "3.0.0",\n        "inherits": "2.0.1",\n        "safe-buffer": "5.1.2"\n      }\n    },\n    "mdn-data": {\n      "version": "1.1.4",\n      "resolved": "https://registry.npmjs.org/mdn-data/-/mdn-data-1.1.4.tgz",\n      "integrity": "sha512-FSYbp3lyKjyj3E7fMl6rYvUdX0FBXaluGqlFoYESWQlyUTq8R+wp0rkFxoYFqZlHCvsUXGjyJmLQSnXToYhOSA=="\n    },\n    "media-typer": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",\n      "integrity": "sha1-hxDXrwqmJvj/+hzgAWhUUmMlV0g="\n    },\n    "mem": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/mem/-/mem-4.3.0.tgz",\n      "integrity": "sha512-qX2bG48pTqYRVmDB37rn/6PT7LcR8T7oAX3bf99u1Tt1nzxYfxkgqDwUwolPlXweM0XzBOBFzSx4kfp7KP1s/w==",\n      "requires": {\n        "map-age-cleaner": "0.1.1",\n        "mimic-fn": "2.0.0",\n        "p-is-promise": "2.0.0"\n      },\n      "dependencies": {\n        "mimic-fn": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz",\n          "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg=="\n        }\n      }\n    },\n    "memoize-one": {\n      "version": "5.0.4",\n      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-5.0.4.tgz",\n      "integrity": "sha512-P0z5IeAH6qHHGkJIXWw0xC2HNEgkx/9uWWBQw64FJj3/ol14VYdfVGWWr0fXfjhhv3TKVIqUq65os6O4GUNksA=="\n    },\n    "memory-fs": {\n      "version": "0.4.1",\n      "resolved": "https://registry.npmjs.org/memory-fs/-/memory-fs-0.4.1.tgz",\n      "integrity": "sha1-OpoguEYlI+RHz7x+i7gO1me/xVI=",\n      "requires": {\n        "errno": "0.1.3",\n        "readable-stream": "2.0.1"\n      }\n    },\n    "merge-deep": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/merge-deep/-/merge-deep-3.0.2.tgz",\n      "integrity": "sha512-T7qC8kg4Zoti1cFd8Cr0M+qaZfOwjlPDEdZIIPPB2JZctjaPM4fX+i7HOId69tAti2fvO6X5ldfYUONDODsrkA==",\n      "requires": {\n        "arr-union": "3.1.0",\n        "clone-deep": "0.2.4",\n        "kind-of": "3.0.2"\n      }\n    },\n    "merge-descriptors": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",\n      "integrity": "sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E="\n    },\n    "merge-stream": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/merge-stream/-/merge-stream-1.0.1.tgz",\n      "integrity": "sha1-QEEgLVCKNCugAXQAjfDCUbjBNeE=",\n      "requires": {\n        "readable-stream": "2.0.1"\n      }\n    },\n    "merge2": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.2.3.tgz",\n      "integrity": "sha512-gdUU1Fwj5ep4kplwcmftruWofEFt6lfpkkr3h860CXbAB9c3hGb55EOL2ali0Td5oebvW0E1+3Sr+Ur7XfKpRA=="\n    },\n    "methods": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",\n      "integrity": "sha1-VSmk1nZUE07cxSZmVoNbD4Ua/O4="\n    },\n    "micromatch": {\n      "version": "3.1.10",\n      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz",\n      "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==",\n      "requires": {\n        "arr-diff": "4.0.0",\n        "array-unique": "0.3.2",\n        "braces": "2.3.1",\n        "define-property": "2.0.2",\n        "extend-shallow": "3.0.2",\n        "extglob": "2.0.4",\n        "fragment-cache": "0.2.1",\n        "kind-of": "6.0.2",\n        "nanomatch": "1.2.9",\n        "object.pick": "1.3.0",\n        "regex-not": "1.0.0",\n        "snapdragon": "0.8.1",\n        "to-regex": "3.0.2"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "miller-rabin": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/miller-rabin/-/miller-rabin-4.0.1.tgz",\n      "integrity": "sha512-115fLhvZVqWwHPbClyntxEVfVDfl9DLLTuJvq3g2O/Oxi8AiNouAHvDSzHS0viUJc+V5vm3eq91Xwqn9dp4jRA==",\n      "requires": {\n        "bn.js": "4.0.0",\n        "brorand": "1.0.1"\n      }\n    },\n    "mime": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/mime/-/mime-2.4.2.tgz",\n      "integrity": "sha512-zJBfZDkwRu+j3Pdd2aHsR5GfH2jIWhmL1ZzBoc+X+3JEti2hbArWcyJ+1laC1D2/U/W1a/+Cegj0/OnEU2ybjg=="\n    },\n    "mime-db": {\n      "version": "1.40.0",\n      "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.40.0.tgz",\n      "integrity": "sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA=="\n    },\n    "mime-types": {\n      "version": "2.1.24",\n      "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.24.tgz",\n      "integrity": "sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==",\n      "requires": {\n        "mime-db": "1.40.0"\n      }\n    },\n    "mimic-fn": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/mimic-fn/-/mimic-fn-1.2.0.tgz",\n      "integrity": "sha512-jf84uxzwiuiIVKiOLpfYk7N46TSy8ubTonmneY9vrpHNAnp0QBt2BxWV9dO3/j+BoVAb+a5G6YDPW3M5HOdMWQ=="\n    },\n    "mini-css-extract-plugin": {\n      "version": "0.5.0",\n      "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.5.0.tgz",\n      "integrity": "sha512-IuaLjruM0vMKhUUT51fQdQzBYTX49dLj8w68ALEAe2A4iYNpIC4eMac67mt3NzycvjOlf07/kYxJDc0RTl1Wqw==",\n      "requires": {\n        "loader-utils": "1.1.0",\n        "schema-utils": "1.0.0",\n        "webpack-sources": "1.1.0"\n      }\n    },\n    "minimalistic-assert": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/minimalistic-assert/-/minimalistic-assert-1.0.1.tgz",\n      "integrity": "sha512-UtJcAD4yEaGtjPezWuO9wC4nwUnVH/8/Im3yEHQP4b67cXlD/Qr9hdITCU1xDbSEXg2XKNaP8jsReV7vQd00/A=="\n    },\n    "minimalistic-crypto-utils": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/minimalistic-crypto-utils/-/minimalistic-crypto-utils-1.0.1.tgz",\n      "integrity": "sha1-9sAMHAsIIkblxNmd+4x8CDsrWCo="\n    },\n    "minimatch": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",\n      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",\n      "requires": {\n        "brace-expansion": "1.1.7"\n      }\n    },\n    "minimist": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.0.tgz",\n      "integrity": "sha1-o1AIsg9BOD7sH7kU9M1d95omQoQ="\n    },\n    "mississippi": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/mississippi/-/mississippi-3.0.0.tgz",\n      "integrity": "sha512-x471SsVjUtBRtcvd4BzKE9kFC+/2TeWgKCgw0bZcw1b9l2X3QX5vCWgF+KaZaYm87Ss//rHnWryupDrgLvmSkA==",\n      "requires": {\n        "concat-stream": "1.5.0",\n        "duplexify": "3.4.2",\n        "end-of-stream": "1.1.0",\n        "flush-write-stream": "1.0.0",\n        "from2": "2.1.0",\n        "parallel-transform": "1.1.0",\n        "pump": "3.0.0",\n        "pumpify": "1.3.3",\n        "stream-each": "1.1.0",\n        "through2": "2.0.0"\n      }\n    },\n    "mixin-deep": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.1.tgz",\n      "integrity": "sha512-8ZItLHeEgaqEvd5lYBXfm4EZSFCX29Jb9K+lAHhDKzReKBQKj3R+7NOF6tjqYi9t4oI8VUfaWITJQm86wnXGNQ==",\n      "requires": {\n        "for-in": "1.0.2",\n        "is-extendable": "1.0.1"\n      },\n      "dependencies": {\n        "is-extendable": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz",\n          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==",\n          "requires": {\n            "is-plain-object": "2.0.4"\n          }\n        }\n      }\n    },\n    "mixin-object": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/mixin-object/-/mixin-object-2.0.1.tgz",\n      "integrity": "sha1-T7lJRB2rGCVA8f4DW6YOGUel5X4=",\n      "requires": {\n        "for-in": "0.1.3",\n        "is-extendable": "0.1.1"\n      },\n      "dependencies": {\n        "for-in": {\n          "version": "0.1.8",\n          "resolved": "https://registry.npmjs.org/for-in/-/for-in-0.1.8.tgz",\n          "integrity": "sha1-2Hc5COMSVhCZUrH9ubP6hn0ndeE="\n        }\n      }\n    },\n    "mkdirp": {\n      "version": "0.5.1",\n      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz",\n      "integrity": "sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=",\n      "requires": {\n        "minimist": "0.0.8"\n      },\n      "dependencies": {\n        "minimist": {\n          "version": "0.0.8",\n          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.8.tgz",\n          "integrity": "sha1-hX/Kv8M5fSYluCKCYuhqp6ARsF0="\n        }\n      }\n    },\n    "move-concurrently": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/move-concurrently/-/move-concurrently-1.0.1.tgz",\n      "integrity": "sha1-viwAX9oy4LKa8fBdfEszIUxwH5I=",\n      "requires": {\n        "aproba": "1.1.1",\n        "copy-concurrently": "1.0.0",\n        "fs-write-stream-atomic": "1.0.8",\n        "mkdirp": "0.5.1",\n        "rimraf": "2.5.4",\n        "run-queue": "1.0.3"\n      }\n    },\n    "ms": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.1.tgz",\n      "integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg=="\n    },\n    "multicast-dns": {\n      "version": "6.2.3",\n      "resolved": "https://registry.npmjs.org/multicast-dns/-/multicast-dns-6.2.3.tgz",\n      "integrity": "sha512-ji6J5enbMyGRHIAkAOu3WdV8nggqviKCEKtXcOqfphZZtQrmHKycfynJ2V7eVPUA4NhJ6V7Wf4TmGbTwKE9B6g==",\n      "requires": {\n        "dns-packet": "1.3.1",\n        "thunky": "1.0.2"\n      }\n    },\n    "multicast-dns-service-types": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/multicast-dns-service-types/-/multicast-dns-service-types-1.1.0.tgz",\n      "integrity": "sha1-iZ8R2WhuXgXLkbNdXw5jt3PPyQE="\n    },\n    "multipipe": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/multipipe/-/multipipe-0.1.2.tgz",\n      "integrity": "sha1-Ko8t33Du1WTf8tV/HhoTfZ8FB4s=",\n      "requires": {\n        "duplexer2": "0.0.2"\n      }\n    },\n    "mute-stdout": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/mute-stdout/-/mute-stdout-1.0.1.tgz",\n      "integrity": "sha512-kDcwXR4PS7caBpuRYYBUz9iVixUk3anO3f5OYFiIPwK/20vCzKCHyKoulbiDY1S53zD2bxUpxN/IJ+TnXjfvxg=="\n    },\n    "mute-stream": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-0.0.7.tgz",\n      "integrity": "sha1-MHXOk7whuPq0PhvE2n6BFe0ee6s="\n    },\n    "nan": {\n      "version": "2.13.2",\n      "resolved": "https://registry.npmjs.org/nan/-/nan-2.13.2.tgz",\n      "integrity": "sha512-TghvYc72wlMGMVMluVo9WRJc0mB8KxxF/gZ4YYFy7V2ZQX9l7rgbPg7vjS9mt6U5HXODVFVI2bOduCzwOMv/lw==",\n      "optional": true\n    },\n    "nanomatch": {\n      "version": "1.2.13",\n      "resolved": "https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz",\n      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==",\n      "requires": {\n        "arr-diff": "4.0.0",\n        "array-unique": "0.3.2",\n        "define-property": "2.0.2",\n        "extend-shallow": "3.0.2",\n        "fragment-cache": "0.2.1",\n        "is-windows": "1.0.2",\n        "kind-of": "6.0.2",\n        "object.pick": "1.3.0",\n        "regex-not": "1.0.0",\n        "snapdragon": "0.8.1",\n        "to-regex": "3.0.1"\n      },\n      "dependencies": {\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "natives": {\n      "version": "1.1.6",\n      "resolved": "https://registry.npmjs.org/natives/-/natives-1.1.6.tgz",\n      "integrity": "sha512-6+TDFewD4yxY14ptjKaS63GVdtKiES1pTPyxn9Jb0rBqPMZ7VcCiooEhPNsr+mqHtMGxa/5c/HhcC4uPEUw/nA=="\n    },\n    "natural-compare": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",\n      "integrity": "sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc="\n    },\n    "negotiator": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.1.tgz",\n      "integrity": "sha1-KzJxhOiZIQEXeyhWP7XnECrNDKk="\n    },\n    "neo-async": {\n      "version": "2.6.0",\n      "resolved": "https://registry.npmjs.org/neo-async/-/neo-async-2.6.0.tgz",\n      "integrity": "sha512-MFh0d/Wa7vkKO3Y3LlacqAEeHK0mckVqzDieUKTT+KGxi+zIpeVsFxymkIiRpbpDziHc290Xr9A1O4Om7otoRA=="\n    },\n    "next-tick": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/next-tick/-/next-tick-1.0.0.tgz",\n      "integrity": "sha1-yobR/ogoFpsBICCOPchCS524NCw="\n    },\n    "nice-try": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/nice-try/-/nice-try-1.0.5.tgz",\n      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxcQ1HXdLhx2qxxJzLNQ=="\n    },\n    "no-case": {\n      "version": "2.3.2",\n      "resolved": "https://registry.npmjs.org/no-case/-/no-case-2.3.2.tgz",\n      "integrity": "sha512-rmTZ9kz+f3rCvK2TD1Ue/oZlns7OGoIWP4fc3llxxRXlOkHKoWPPWJOfFYpITabSow43QJbRIoHQXtt10VldyQ==",\n      "requires": {\n        "lower-case": "1.1.1"\n      }\n    },\n    "node-fetch": {\n      "version": "1.7.3",\n      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-1.7.3.tgz",\n      "integrity": "sha512-NhZ4CsKx7cYm2vSrBAr2PvFOe6sWDf0UYLRqA6svUYg7+/TSfVAu49jYC4BvQ4Sms9SZgdqGBgroqfDhJdTyKQ==",\n      "requires": {\n        "encoding": "0.1.11",\n        "is-stream": "1.0.1"\n      }\n    },\n    "node-forge": {\n      "version": "0.7.5",\n      "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.7.5.tgz",\n      "integrity": "sha512-MmbQJ2MTESTjt3Gi/3yG1wGpIMhUfcIypUCGtTizFR9IiccFwxSpfp0vtIZlkFclEqERemxfnSdZEMR9VqqEFQ=="\n    },\n    "node-int64": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz",\n      "integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs="\n    },\n    "node-libs-browser": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/node-libs-browser/-/node-libs-browser-2.2.0.tgz",\n      "integrity": "sha512-5MQunG/oyOaBdttrL40dA7bUfPORLRWMUJLQtMg7nluxUvk5XwnLdL9twQHFAjRx/y7mIMkLKT9++qPbbk6BZA==",\n      "requires": {\n        "assert": "1.1.1",\n        "browserify-zlib": "0.2.0",\n        "buffer": "4.3.0",\n        "console-browserify": "1.1.0",\n        "constants-browserify": "1.0.0",\n        "crypto-browserify": "3.11.0",\n        "domain-browser": "1.1.1",\n        "events": "3.0.0",\n        "https-browserify": "1.0.0",\n        "os-browserify": "0.3.0",\n        "path-browserify": "0.0.0",\n        "process": "0.11.10",\n        "punycode": "1.2.4",\n        "querystring-es3": "0.2.0",\n        "readable-stream": "2.3.3",\n        "stream-browserify": "2.0.1",\n        "stream-http": "2.7.2",\n        "string_decoder": "1.0.0",\n        "timers-browserify": "2.0.4",\n        "tty-browserify": "0.0.0",\n        "url": "0.11.0",\n        "util": "0.11.0",\n        "vm-browserify": "0.0.4"\n      },\n      "dependencies": {\n        "punycode": {\n          "version": "1.4.1",\n          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",\n          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="\n        }\n      }\n    },\n    "node-modules-regexp": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/node-modules-regexp/-/node-modules-regexp-1.0.0.tgz",\n      "integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA="\n    },\n    "node-notifier": {\n      "version": "5.4.0",\n      "resolved": "https://registry.npmjs.org/node-notifier/-/node-notifier-5.4.0.tgz",\n      "integrity": "sha512-SUDEb+o71XR5lXSTyivXd9J7fCloE3SyP4lSgt3lU2oSANiox+SxlNRGPjDKrwU1YN3ix2KN/VGGCg0t01rttQ==",\n      "requires": {\n        "growly": "1.3.0",\n        "is-wsl": "1.1.0",\n        "semver": "5.5.0",\n        "shellwords": "0.1.1",\n        "which": "1.3.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "node-releases": {\n      "version": "1.1.15",\n      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-1.1.15.tgz",\n      "integrity": "sha512-cKV097BQaZr8LTSRUa2+oc/aX5L8UkZtPQrMSTgiJEeaW7ymTDCoRaGCoaTqk0lqnalcoSHu4wjSl0Cmj2+bMw==",\n      "requires": {\n        "semver": "5.3.0"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "node.extend": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/node.extend/-/node.extend-2.0.2.tgz",\n      "integrity": "sha512-pDT4Dchl94/+kkgdwyS2PauDFjZG0Hk0IcHIB+LkW27HLDtdoeMxHTxZh39DYbPP8UflWXWj9JcdDozF+YDOpQ==",\n      "requires": {\n        "has": "1.0.3",\n        "is": "3.2.1"\n      }\n    },\n    "nopt": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/nopt/-/nopt-4.0.1.tgz",\n      "integrity": "sha1-0NRoWv1UFRk8jHUFYC0NF81kR00=",\n      "requires": {\n        "abbrev": "1",\n        "osenv": "0.1.4"\n      }\n    },\n    "normalize-package-data": {\n      "version": "2.5.0",\n      "resolved": "https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz",\n      "integrity": "sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==",\n      "requires": {\n        "hosted-git-info": "2.1.4",\n        "resolve": "1.10.0",\n        "semver": "2 || 3 || 4 || 5",\n        "validate-npm-package-license": "3.0.1"\n      },\n      "dependencies": {\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        }\n      }\n    },\n    "normalize-path": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-2.1.1.tgz",\n      "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3/mrtk=",\n      "requires": {\n        "remove-trailing-separator": "1.0.1"\n      }\n    },\n    "normalize-range": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",\n      "integrity": "sha1-LRDAa9/TEuqXd2laTShDlFa3WUI="\n    },\n    "normalize-scroll-left": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/normalize-scroll-left/-/normalize-scroll-left-0.1.2.tgz",\n      "integrity": "sha512-F9YMRls0zCF6BFIE2YnXDRpHPpfd91nOIaNdDgrx5YMoPLo8Wqj+6jNXHQsYBavJeXP4ww8HCt0xQAKc5qk2Fg=="\n    },\n    "normalize-url": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/normalize-url/-/normalize-url-3.3.0.tgz",\n      "integrity": "sha512-U+JJi7duF1o+u2pynbp2zXDW2/PADgC30f0GsHZtRh+HOcXHnw137TrNlyxxRvWW5fjKd3bcLHPxofWuCjaeZg=="\n    },\n    "now-and-later": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/now-and-later/-/now-and-later-2.0.1.tgz",\n      "integrity": "sha512-KGvQ0cB70AQfg107Xvs/Fbu+dGmZoTRJp2TaPwcwQm3/7PteUyN2BCgk8KBMPGBUXZdVwyWS8fDCGFygBm19UQ==",\n      "requires": {\n        "once": "1.3.2"\n      }\n    },\n    "npm": {\n      "version": "6.9.0",\n      "resolved": "https://registry.npmjs.org/npm/-/npm-6.9.0.tgz",\n      "integrity": "sha512-91V+zB5hDxO+Jyp2sUKS7juHlIM95dGQxTeQtmZI1nAI/7kjWXFipPrtwwKjhyKmV4GsS2LzJhrxRjGWsU9z/w==",\n      "requires": {\n        "JSONStream": "1.3.5",\n        "abbrev": "~1.1.1",\n        "ansicolors": "~0.3.2",\n        "ansistyles": "~0.1.3",\n        "aproba": "2.0.0",\n        "archy": "~1.0.0",\n        "bin-links": "1.1.2",\n        "bluebird": "3.5.3",\n        "byte-size": "5.0.1",\n        "cacache": "11.3.2",\n        "call-limit": "~1.1.0",\n        "chownr": "1.1.1",\n        "ci-info": "2.0.0",\n        "cli-columns": "3.1.2",\n        "cli-table3": "0.5.1",\n        "cmd-shim": "~2.0.2",\n        "columnify": "~1.5.4",\n        "config-chain": "1.1.12",\n        "debuglog": "*",\n        "detect-indent": "~5.0.0",\n        "detect-newline": "2.1.0",\n        "dezalgo": "~1.0.3",\n        "editor": "~1.0.0",\n        "figgy-pudding": "3.5.1",\n        "find-npm-prefix": "1.0.2",\n        "fs-vacuum": "~1.2.10",\n        "fs-write-stream-atomic": "~1.0.10",\n        "gentle-fs": "2.0.1",\n        "glob": "7.1.3",\n        "graceful-fs": "4.1.15",\n        "has-unicode": "~2.0.1",\n        "hosted-git-info": "2.7.1",\n        "iferr": "1.0.2",\n        "imurmurhash": "*",\n        "inflight": "~1.0.6",\n        "inherits": "~2.0.3",\n        "ini": "1.3.5",\n        "init-package-json": "1.10.3",\n        "is-cidr": "3.0.0",\n        "json-parse-better-errors": "1.0.2",\n        "lazy-property": "~1.0.0",\n        "libcipm": "3.0.3",\n        "libnpm": "2.0.1",\n        "libnpmaccess": "*",\n        "libnpmhook": "5.0.2",\n        "libnpmorg": "*",\n        "libnpmsearch": "*",\n        "libnpmteam": "*",\n        "libnpx": "10.2.0",\n        "lock-verify": "2.1.0",\n        "lockfile": "1.0.4",\n        "lodash._baseindexof": "*",\n        "lodash._baseuniq": "~4.6.0",\n        "lodash._bindcallback": "*",\n        "lodash._cacheindexof": "*",\n        "lodash._createcache": "*",\n        "lodash._getnative": "*",\n        "lodash.clonedeep": "~4.5.0",\n        "lodash.restparam": "*",\n        "lodash.union": "~4.6.0",\n        "lodash.uniq": "~4.5.0",\n        "lodash.without": "~4.4.0",\n        "lru-cache": "4.1.5",\n        "meant": "~1.0.1",\n        "mississippi": "3.0.0",\n        "mkdirp": "~0.5.1",\n        "move-concurrently": "1.0.1",\n        "node-gyp": "3.8.0",\n        "nopt": "~4.0.1",\n        "normalize-package-data": "2.5.0",\n        "npm-audit-report": "1.3.2",\n        "npm-cache-filename": "~1.0.2",\n        "npm-install-checks": "~3.0.0",\n        "npm-lifecycle": "2.1.0",\n        "npm-package-arg": "6.1.0",\n        "npm-packlist": "1.4.1",\n        "npm-pick-manifest": "2.2.3",\n        "npm-profile": "*",\n        "npm-registry-fetch": "3.9.0",\n        "npm-user-validate": "~1.0.0",\n        "npmlog": "~4.1.2",\n        "once": "~1.4.0",\n        "opener": "1.5.1",\n        "osenv": "0.1.5",\n        "pacote": "9.5.0",\n        "path-is-inside": "~1.0.2",\n        "promise-inflight": "~1.0.1",\n        "qrcode-terminal": "0.12.0",\n        "query-string": "6.2.0",\n        "qw": "~1.0.1",\n        "read": "~1.0.7",\n        "read-cmd-shim": "~1.0.1",\n        "read-installed": "~4.0.3",\n        "read-package-json": "2.0.13",\n        "read-package-tree": "5.2.2",\n        "readable-stream": "3.1.1",\n        "readdir-scoped-modules": "*",\n        "request": "2.88.0",\n        "retry": "0.12.0",\n        "rimraf": "2.6.3",\n        "safe-buffer": "5.1.2",\n        "semver": "5.6.0",\n        "sha": "~2.0.1",\n        "slide": "~1.1.6",\n        "sorted-object": "~2.0.1",\n        "sorted-union-stream": "~2.1.3",\n        "ssri": "6.0.1",\n        "stringify-package": "1.0.0",\n        "tar": "4.4.8",\n        "text-table": "~0.2.0",\n        "tiny-relative-date": "1.3.0",\n        "uid-number": "0.0.6",\n        "umask": "~1.1.0",\n        "unique-filename": "1.1.1",\n        "unpipe": "~1.0.0",\n        "update-notifier": "2.5.0",\n        "uuid": "3.3.2",\n        "validate-npm-package-license": "3.0.4",\n        "validate-npm-package-name": "~3.0.0",\n        "which": "1.3.1",\n        "worker-farm": "1.6.0",\n        "write-file-atomic": "2.4.2"\n      },\n      "dependencies": {\n        "JSONStream": {\n          "version": "1.3.5",\n          "bundled": true,\n          "requires": {\n            "jsonparse": "1.2.0",\n            "through": ">=2.2.7 <3"\n          }\n        },\n        "abbrev": {\n          "version": "1.1.1",\n          "bundled": true\n        },\n        "agent-base": {\n          "version": "4.2.1",\n          "bundled": true,\n          "requires": {\n            "es6-promisify": "5.0.0"\n          }\n        },\n        "agentkeepalive": {\n          "version": "3.4.1",\n          "bundled": true,\n          "requires": {\n            "humanize-ms": "1.2.1"\n          }\n        },\n        "ajv": {\n          "version": "5.5.2",\n          "bundled": true,\n          "requires": {\n            "co": "4.6.0",\n            "fast-deep-equal": "1.0.0",\n            "fast-json-stable-stringify": "2.0.0",\n            "json-schema-traverse": "0.3.0"\n          }\n        },\n        "ansi-align": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "2.0.0"\n          }\n        },\n        "ansi-regex": {\n          "version": "2.1.1",\n          "bundled": true\n        },\n        "ansi-styles": {\n          "version": "3.2.1",\n          "bundled": true,\n          "requires": {\n            "color-convert": "1.9.0"\n          }\n        },\n        "ansicolors": {\n          "version": "0.3.2",\n          "bundled": true\n        },\n        "ansistyles": {\n          "version": "0.1.3",\n          "bundled": true\n        },\n        "aproba": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "archy": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "are-we-there-yet": {\n          "version": "1.1.4",\n          "bundled": true,\n          "requires": {\n            "delegates": "1.0.0",\n            "readable-stream": "2.0.6"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "asap": {\n          "version": "2.0.6",\n          "bundled": true\n        },\n        "asn1": {\n          "version": "0.2.4",\n          "bundled": true,\n          "requires": {\n            "safer-buffer": "~2.1.0"\n          }\n        },\n        "assert-plus": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "asynckit": {\n          "version": "0.4.0",\n          "bundled": true\n        },\n        "aws-sign2": {\n          "version": "0.7.0",\n          "bundled": true\n        },\n        "aws4": {\n          "version": "1.8.0",\n          "bundled": true\n        },\n        "balanced-match": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "bcrypt-pbkdf": {\n          "version": "1.0.2",\n          "bundled": true,\n          "optional": true,\n          "requires": {\n            "tweetnacl": "0.14.3"\n          }\n        },\n        "bin-links": {\n          "version": "1.1.2",\n          "bundled": true,\n          "requires": {\n            "bluebird": "3.5.0",\n            "cmd-shim": "2.0.2",\n            "gentle-fs": "2.0.0",\n            "graceful-fs": "4.1.11",\n            "write-file-atomic": "2.3.0"\n          }\n        },\n        "block-stream": {\n          "version": "0.0.9",\n          "bundled": true,\n          "requires": {\n            "inherits": "~2.0.0"\n          }\n        },\n        "bluebird": {\n          "version": "3.5.3",\n          "bundled": true\n        },\n        "boxen": {\n          "version": "1.3.0",\n          "bundled": true,\n          "requires": {\n            "ansi-align": "2.0.0",\n            "camelcase": "4.0.0",\n            "chalk": "2.0.1",\n            "cli-boxes": "1.0.0",\n            "string-width": "2.0.0",\n            "term-size": "1.2.0",\n            "widest-line": "2.0.0"\n          }\n        },\n        "brace-expansion": {\n          "version": "1.1.11",\n          "bundled": true,\n          "requires": {\n            "balanced-match": "1.0.0",\n            "concat-map": "0.0.1"\n          }\n        },\n        "buffer-from": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "builtins": {\n          "version": "1.0.3",\n          "bundled": true\n        },\n        "byline": {\n          "version": "5.0.0",\n          "bundled": true\n        },\n        "byte-size": {\n          "version": "5.0.1",\n          "bundled": true\n        },\n        "cacache": {\n          "version": "11.3.2",\n          "bundled": true,\n          "requires": {\n            "bluebird": "3.5.3",\n            "chownr": "1.1.1",\n            "figgy-pudding": "3.5.1",\n            "glob": "7.1.3",\n            "graceful-fs": "4.1.15",\n            "lru-cache": "5.1.1",\n            "mississippi": "3.0.0",\n            "mkdirp": "0.5.1",\n            "move-concurrently": "1.0.1",\n            "promise-inflight": "1.0.1",\n            "rimraf": "2.6.2",\n            "ssri": "6.0.1",\n            "unique-filename": "1.1.1",\n            "y18n": "4.0.0"\n          },\n          "dependencies": {\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true\n            },\n            "lru-cache": {\n              "version": "5.1.1",\n              "bundled": true,\n              "requires": {\n                "yallist": "3.0.2"\n              }\n            },\n            "unique-filename": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "unique-slug": "2.0.0"\n              }\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true\n            }\n          }\n        },\n        "call-limit": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "camelcase": {\n          "version": "4.1.0",\n          "bundled": true\n        },\n        "capture-stack-trace": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "caseless": {\n          "version": "0.12.0",\n          "bundled": true\n        },\n        "chalk": {\n          "version": "2.4.1",\n          "bundled": true,\n          "requires": {\n            "ansi-styles": "3.2.1",\n            "escape-string-regexp": "1.0.5",\n            "supports-color": "5.3.0"\n          }\n        },\n        "chownr": {\n          "version": "1.1.1",\n          "bundled": true\n        },\n        "ci-info": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "cidr-regex": {\n          "version": "2.0.10",\n          "bundled": true,\n          "requires": {\n            "ip-regex": "2.1.0"\n          }\n        },\n        "cli-boxes": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "cli-columns": {\n          "version": "3.1.2",\n          "bundled": true,\n          "requires": {\n            "string-width": "2.0.0",\n            "strip-ansi": "3.0.1"\n          }\n        },\n        "cli-table3": {\n          "version": "0.5.1",\n          "bundled": true,\n          "requires": {\n            "colors": "1.1.2",\n            "object-assign": "4.1.0",\n            "string-width": "2.1.1"\n          }\n        },\n        "cliui": {\n          "version": "4.1.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "2.1.1",\n            "strip-ansi": "4.0.0",\n            "wrap-ansi": "2.0.0"\n          },\n          "dependencies": {\n            "ansi-regex": {\n              "version": "3.0.0",\n              "bundled": true\n            },\n            "strip-ansi": {\n              "version": "4.0.0",\n              "bundled": true,\n              "requires": {\n                "ansi-regex": "3.0.0"\n              }\n            }\n          }\n        },\n        "clone": {\n          "version": "1.0.4",\n          "bundled": true\n        },\n        "cmd-shim": {\n          "version": "2.0.2",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "mkdirp": "~0.5.0"\n          }\n        },\n        "co": {\n          "version": "4.6.0",\n          "bundled": true\n        },\n        "code-point-at": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "color-convert": {\n          "version": "1.9.1",\n          "bundled": true,\n          "requires": {\n            "color-name": "1.1.1"\n          }\n        },\n        "color-name": {\n          "version": "1.1.3",\n          "bundled": true\n        },\n        "colors": {\n          "version": "1.3.3",\n          "bundled": true,\n          "optional": true\n        },\n        "columnify": {\n          "version": "1.5.4",\n          "bundled": true,\n          "requires": {\n            "strip-ansi": "3.0.0",\n            "wcwidth": "1.0.0"\n          }\n        },\n        "combined-stream": {\n          "version": "1.0.6",\n          "bundled": true,\n          "requires": {\n            "delayed-stream": "~1.0.0"\n          }\n        },\n        "concat-map": {\n          "version": "0.0.1",\n          "bundled": true\n        },\n        "concat-stream": {\n          "version": "1.6.2",\n          "bundled": true,\n          "requires": {\n            "buffer-from": "1.0.0",\n            "inherits": "2.0.3",\n            "readable-stream": "2.2.2",\n            "typedarray": "0.0.6"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "config-chain": {\n          "version": "1.1.12",\n          "bundled": true,\n          "requires": {\n            "ini": "1.3.4",\n            "proto-list": "~1.2.1"\n          }\n        },\n        "configstore": {\n          "version": "3.1.2",\n          "bundled": true,\n          "requires": {\n            "dot-prop": "4.1.0",\n            "graceful-fs": "4.1.2",\n            "make-dir": "1.0.0",\n            "unique-string": "1.0.0",\n            "write-file-atomic": "2.0.0",\n            "xdg-basedir": "3.0.0"\n          }\n        },\n        "console-control-strings": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "copy-concurrently": {\n          "version": "1.0.5",\n          "bundled": true,\n          "requires": {\n            "aproba": "1.1.1",\n            "fs-write-stream-atomic": "1.0.8",\n            "iferr": "0.1.5",\n            "mkdirp": "0.5.1",\n            "rimraf": "2.5.4",\n            "run-queue": "1.0.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            },\n            "iferr": {\n              "version": "0.1.5",\n              "bundled": true\n            }\n          }\n        },\n        "core-util-is": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "create-error-class": {\n          "version": "3.0.2",\n          "bundled": true,\n          "requires": {\n            "capture-stack-trace": "1.0.0"\n          }\n        },\n        "cross-spawn": {\n          "version": "5.1.0",\n          "bundled": true,\n          "requires": {\n            "lru-cache": "4.0.1",\n            "shebang-command": "1.2.0",\n            "which": "1.2.9"\n          }\n        },\n        "crypto-random-string": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "cyclist": {\n          "version": "0.2.2",\n          "bundled": true\n        },\n        "dashdash": {\n          "version": "1.14.1",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "1.0.0"\n          }\n        },\n        "debug": {\n          "version": "3.1.0",\n          "bundled": true,\n          "requires": {\n            "ms": "2.0.0"\n          },\n          "dependencies": {\n            "ms": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "debuglog": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "decamelize": {\n          "version": "1.2.0",\n          "bundled": true\n        },\n        "decode-uri-component": {\n          "version": "0.2.0",\n          "bundled": true\n        },\n        "deep-extend": {\n          "version": "0.5.1",\n          "bundled": true\n        },\n        "defaults": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "clone": "1.0.2"\n          }\n        },\n        "delayed-stream": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "delegates": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "detect-indent": {\n          "version": "5.0.0",\n          "bundled": true\n        },\n        "detect-newline": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "dezalgo": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "asap": "2.0.0",\n            "wrappy": "1"\n          }\n        },\n        "dot-prop": {\n          "version": "4.2.0",\n          "bundled": true,\n          "requires": {\n            "is-obj": "1.0.0"\n          }\n        },\n        "dotenv": {\n          "version": "5.0.1",\n          "bundled": true\n        },\n        "duplexer3": {\n          "version": "0.1.4",\n          "bundled": true\n        },\n        "duplexify": {\n          "version": "3.6.0",\n          "bundled": true,\n          "requires": {\n            "end-of-stream": "1.0.0",\n            "inherits": "2.0.1",\n            "readable-stream": "2.0.0",\n            "stream-shift": "1.0.0"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "ecc-jsbn": {\n          "version": "0.1.2",\n          "bundled": true,\n          "optional": true,\n          "requires": {\n            "jsbn": "~0.1.0",\n            "safer-buffer": "2.1.0"\n          }\n        },\n        "editor": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "encoding": {\n          "version": "0.1.12",\n          "bundled": true,\n          "requires": {\n            "iconv-lite": "~0.4.13"\n          }\n        },\n        "end-of-stream": {\n          "version": "1.4.1",\n          "bundled": true,\n          "requires": {\n            "once": "1.4.0"\n          }\n        },\n        "err-code": {\n          "version": "1.1.2",\n          "bundled": true\n        },\n        "errno": {\n          "version": "0.1.7",\n          "bundled": true,\n          "requires": {\n            "prr": "~1.0.1"\n          }\n        },\n        "es6-promise": {\n          "version": "4.2.6",\n          "bundled": true\n        },\n        "es6-promisify": {\n          "version": "5.0.0",\n          "bundled": true,\n          "requires": {\n            "es6-promise": "4.0.3"\n          }\n        },\n        "escape-string-regexp": {\n          "version": "1.0.5",\n          "bundled": true\n        },\n        "execa": {\n          "version": "0.7.0",\n          "bundled": true,\n          "requires": {\n            "cross-spawn": "5.0.1",\n            "get-stream": "3.0.0",\n            "is-stream": "1.1.0",\n            "npm-run-path": "2.0.0",\n            "p-finally": "1.0.0",\n            "signal-exit": "3.0.0",\n            "strip-eof": "1.0.0"\n          },\n          "dependencies": {\n            "get-stream": {\n              "version": "3.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "extend": {\n          "version": "3.0.2",\n          "bundled": true\n        },\n        "extsprintf": {\n          "version": "1.3.0",\n          "bundled": true\n        },\n        "fast-deep-equal": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "fast-json-stable-stringify": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "figgy-pudding": {\n          "version": "3.5.1",\n          "bundled": true\n        },\n        "find-npm-prefix": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "find-up": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "locate-path": "2.0.0"\n          }\n        },\n        "flush-write-stream": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "inherits": "2.0.1",\n            "readable-stream": "2.0.4"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "forever-agent": {\n          "version": "0.6.1",\n          "bundled": true\n        },\n        "form-data": {\n          "version": "2.3.2",\n          "bundled": true,\n          "requires": {\n            "asynckit": "0.4.0",\n            "combined-stream": "1.0.6",\n            "mime-types": "2.1.12"\n          }\n        },\n        "from2": {\n          "version": "2.3.0",\n          "bundled": true,\n          "requires": {\n            "inherits": "2.0.1",\n            "readable-stream": "2.0.0"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "fs-minipass": {\n          "version": "1.2.5",\n          "bundled": true,\n          "requires": {\n            "minipass": "2.2.1"\n          }\n        },\n        "fs-vacuum": {\n          "version": "1.2.10",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "path-is-inside": "1.0.1",\n            "rimraf": "2.5.2"\n          }\n        },\n        "fs-write-stream-atomic": {\n          "version": "1.0.10",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "iferr": "0.1.5",\n            "imurmurhash": "0.1.4",\n            "readable-stream": "1 || 2"\n          },\n          "dependencies": {\n            "iferr": {\n              "version": "0.1.5",\n              "bundled": true\n            },\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "fs.realpath": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "fstream": {\n          "version": "1.0.11",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "inherits": "~2.0.0",\n            "mkdirp": ">=0.5 0",\n            "rimraf": "2"\n          }\n        },\n        "gauge": {\n          "version": "2.7.4",\n          "bundled": true,\n          "requires": {\n            "aproba": "1.0.3",\n            "console-control-strings": "1.0.0",\n            "has-unicode": "2.0.0",\n            "object-assign": "4.1.0",\n            "signal-exit": "3.0.0",\n            "string-width": "1.0.1",\n            "strip-ansi": "3.0.1",\n            "wide-align": "1.1.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            },\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "requires": {\n                "code-point-at": "1.0.0",\n                "is-fullwidth-code-point": "1.0.0",\n                "strip-ansi": "3.0.0"\n              }\n            }\n          }\n        },\n        "genfun": {\n          "version": "5.0.0",\n          "bundled": true\n        },\n        "gentle-fs": {\n          "version": "2.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "1.1.2",\n            "fs-vacuum": "1.2.10",\n            "graceful-fs": "4.1.11",\n            "iferr": "0.1.5",\n            "mkdirp": "0.5.1",\n            "path-is-inside": "1.0.2",\n            "read-cmd-shim": "1.0.1",\n            "slide": "1.1.6"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            },\n            "iferr": {\n              "version": "0.1.5",\n              "bundled": true\n            }\n          }\n        },\n        "get-caller-file": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "get-stream": {\n          "version": "4.1.0",\n          "bundled": true,\n          "requires": {\n            "pump": "3.0.0"\n          }\n        },\n        "getpass": {\n          "version": "0.1.7",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "1.0.0"\n          }\n        },\n        "glob": {\n          "version": "7.1.3",\n          "bundled": true,\n          "requires": {\n            "fs.realpath": "1.0.0",\n            "inflight": "1.0.4",\n            "inherits": "2",\n            "minimatch": "3.0.4",\n            "once": "1.3.0",\n            "path-is-absolute": "1.0.0"\n          }\n        },\n        "global-dirs": {\n          "version": "0.1.1",\n          "bundled": true,\n          "requires": {\n            "ini": "1.3.4"\n          }\n        },\n        "got": {\n          "version": "6.7.1",\n          "bundled": true,\n          "requires": {\n            "create-error-class": "3.0.0",\n            "duplexer3": "0.1.4",\n            "get-stream": "3.0.0",\n            "is-redirect": "1.0.0",\n            "is-retry-allowed": "1.0.0",\n            "is-stream": "1.0.0",\n            "lowercase-keys": "1.0.0",\n            "safe-buffer": "5.0.1",\n            "timed-out": "4.0.0",\n            "unzip-response": "2.0.1",\n            "url-parse-lax": "1.0.0"\n          },\n          "dependencies": {\n            "get-stream": {\n              "version": "3.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "graceful-fs": {\n          "version": "4.1.15",\n          "bundled": true\n        },\n        "har-schema": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "har-validator": {\n          "version": "5.1.0",\n          "bundled": true,\n          "requires": {\n            "ajv": "5.3.0",\n            "har-schema": "2.0.0"\n          }\n        },\n        "has-flag": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "has-unicode": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "hosted-git-info": {\n          "version": "2.7.1",\n          "bundled": true\n        },\n        "http-cache-semantics": {\n          "version": "3.8.1",\n          "bundled": true\n        },\n        "http-proxy-agent": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "agent-base": "4",\n            "debug": "3.1.0"\n          }\n        },\n        "http-signature": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "1.0.0",\n            "jsprim": "1.2.2",\n            "sshpk": "1.7.0"\n          }\n        },\n        "https-proxy-agent": {\n          "version": "2.2.1",\n          "bundled": true,\n          "requires": {\n            "agent-base": "4.1.0",\n            "debug": "3.1.0"\n          }\n        },\n        "humanize-ms": {\n          "version": "1.2.1",\n          "bundled": true,\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "iconv-lite": {\n          "version": "0.4.23",\n          "bundled": true,\n          "requires": {\n            "safer-buffer": ">= 2.1.2 < 3"\n          }\n        },\n        "iferr": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "ignore-walk": {\n          "version": "3.0.1",\n          "bundled": true,\n          "requires": {\n            "minimatch": "3.0.4"\n          }\n        },\n        "import-lazy": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "imurmurhash": {\n          "version": "0.1.4",\n          "bundled": true\n        },\n        "inflight": {\n          "version": "1.0.6",\n          "bundled": true,\n          "requires": {\n            "once": "1.3.0",\n            "wrappy": "1"\n          }\n        },\n        "inherits": {\n          "version": "2.0.3",\n          "bundled": true\n        },\n        "ini": {\n          "version": "1.3.5",\n          "bundled": true\n        },\n        "init-package-json": {\n          "version": "1.10.3",\n          "bundled": true,\n          "requires": {\n            "glob": "7.1.1",\n            "npm-package-arg": "4.0.0 || 5.0.0 || 6.0.0",\n            "promzard": "0.3.0",\n            "read": "~1.0.1",\n            "read-package-json": "1 || 2",\n            "semver": "2.x || 3.x || 4 || 5",\n            "validate-npm-package-license": "3.0.1",\n            "validate-npm-package-name": "3.0.0"\n          }\n        },\n        "invert-kv": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "ip": {\n          "version": "1.1.5",\n          "bundled": true\n        },\n        "ip-regex": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "is-ci": {\n          "version": "1.1.0",\n          "bundled": true,\n          "requires": {\n            "ci-info": "1.0.0"\n          },\n          "dependencies": {\n            "ci-info": {\n              "version": "1.6.0",\n              "bundled": true\n            }\n          }\n        },\n        "is-cidr": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "cidr-regex": "2.0.10"\n          }\n        },\n        "is-fullwidth-code-point": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "number-is-nan": "1.0.0"\n          }\n        },\n        "is-installed-globally": {\n          "version": "0.1.0",\n          "bundled": true,\n          "requires": {\n            "global-dirs": "0.1.0",\n            "is-path-inside": "1.0.0"\n          }\n        },\n        "is-npm": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "is-obj": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "is-path-inside": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "path-is-inside": "1.0.1"\n          }\n        },\n        "is-redirect": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "is-retry-allowed": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "is-stream": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "is-typedarray": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "isarray": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "isexe": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "isstream": {\n          "version": "0.1.2",\n          "bundled": true\n        },\n        "jsbn": {\n          "version": "0.1.1",\n          "bundled": true,\n          "optional": true\n        },\n        "json-parse-better-errors": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "json-schema": {\n          "version": "0.2.3",\n          "bundled": true\n        },\n        "json-schema-traverse": {\n          "version": "0.3.1",\n          "bundled": true\n        },\n        "json-stringify-safe": {\n          "version": "5.0.1",\n          "bundled": true\n        },\n        "jsonparse": {\n          "version": "1.3.1",\n          "bundled": true\n        },\n        "jsprim": {\n          "version": "1.4.1",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "1.0.0",\n            "extsprintf": "1.3.0",\n            "json-schema": "0.2.3",\n            "verror": "1.10.0"\n          }\n        },\n        "latest-version": {\n          "version": "3.1.0",\n          "bundled": true,\n          "requires": {\n            "package-json": "4.0.0"\n          }\n        },\n        "lazy-property": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "lcid": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "invert-kv": "1.0.0"\n          }\n        },\n        "libcipm": {\n          "version": "3.0.3",\n          "bundled": true,\n          "requires": {\n            "bin-links": "1.1.2",\n            "bluebird": "3.5.1",\n            "figgy-pudding": "3.5.1",\n            "find-npm-prefix": "1.0.2",\n            "graceful-fs": "4.1.11",\n            "ini": "1.3.5",\n            "lock-verify": "2.0.2",\n            "mkdirp": "0.5.1",\n            "npm-lifecycle": "2.0.3",\n            "npm-logical-tree": "1.2.1",\n            "npm-package-arg": "6.1.0",\n            "pacote": "9.1.0",\n            "read-package-json": "2.0.13",\n            "rimraf": "2.6.2",\n            "worker-farm": "1.6.0"\n          }\n        },\n        "libnpm": {\n          "version": "2.0.1",\n          "bundled": true,\n          "requires": {\n            "bin-links": "1.1.2",\n            "bluebird": "3.5.3",\n            "find-npm-prefix": "1.0.2",\n            "libnpmaccess": "3.0.1",\n            "libnpmconfig": "1.2.1",\n            "libnpmhook": "5.0.2",\n            "libnpmorg": "1.0.0",\n            "libnpmpublish": "1.1.0",\n            "libnpmsearch": "2.0.0",\n            "libnpmteam": "1.0.1",\n            "lock-verify": "2.0.2",\n            "npm-lifecycle": "2.1.0",\n            "npm-logical-tree": "1.2.1",\n            "npm-package-arg": "6.1.0",\n            "npm-profile": "4.0.1",\n            "npm-registry-fetch": "3.8.0",\n            "npmlog": "4.1.2",\n            "pacote": "9.2.3",\n            "read-package-json": "2.0.13",\n            "stringify-package": "1.0.0"\n          }\n        },\n        "libnpmaccess": {\n          "version": "3.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "2.0.0",\n            "get-stream": "4.0.0",\n            "npm-package-arg": "6.1.0",\n            "npm-registry-fetch": "3.8.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpmconfig": {\n          "version": "1.2.1",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "3.5.1",\n            "find-up": "3.0.0",\n            "ini": "1.3.5"\n          },\n          "dependencies": {\n            "find-up": {\n              "version": "3.0.0",\n              "bundled": true,\n              "requires": {\n                "locate-path": "3.0.0"\n              }\n            },\n            "locate-path": {\n              "version": "3.0.0",\n              "bundled": true,\n              "requires": {\n                "p-locate": "3.0.0",\n                "path-exists": "3.0.0"\n              }\n            },\n            "p-limit": {\n              "version": "2.1.0",\n              "bundled": true,\n              "requires": {\n                "p-try": "2.0.0"\n              }\n            },\n            "p-locate": {\n              "version": "3.0.0",\n              "bundled": true,\n              "requires": {\n                "p-limit": "2.0.0"\n              }\n            },\n            "p-try": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpmhook": {\n          "version": "5.0.2",\n          "bundled": true,\n          "requires": {\n            "aproba": "2.0.0",\n            "figgy-pudding": "3.4.1",\n            "get-stream": "4.0.0",\n            "npm-registry-fetch": "3.8.0"\n          }\n        },\n        "libnpmorg": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "aproba": "2.0.0",\n            "figgy-pudding": "3.4.1",\n            "get-stream": "4.0.0",\n            "npm-registry-fetch": "3.8.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpmpublish": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "2.0.0",\n            "figgy-pudding": "3.5.1",\n            "get-stream": "4.0.0",\n            "lodash.clonedeep": "4.5.0",\n            "normalize-package-data": "2.4.0",\n            "npm-package-arg": "6.1.0",\n            "npm-registry-fetch": "3.8.0",\n            "semver": "5.5.1",\n            "ssri": "6.0.1"\n          }\n        },\n        "libnpmsearch": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "3.5.1",\n            "get-stream": "4.0.0",\n            "npm-registry-fetch": "3.8.0"\n          }\n        },\n        "libnpmteam": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "2.0.0",\n            "figgy-pudding": "3.4.1",\n            "get-stream": "4.0.0",\n            "npm-registry-fetch": "3.8.0"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "2.0.0",\n              "bundled": true\n            }\n          }\n        },\n        "libnpx": {\n          "version": "10.2.0",\n          "bundled": true,\n          "requires": {\n            "dotenv": "5.0.1",\n            "npm-package-arg": "6.0.0",\n            "rimraf": "2.6.2",\n            "safe-buffer": "5.1.0",\n            "update-notifier": "2.3.0",\n            "which": "1.3.0",\n            "y18n": "4.0.0",\n            "yargs": "11.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "p-locate": "2.0.0",\n            "path-exists": "3.0.0"\n          }\n        },\n        "lock-verify": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "npm-package-arg": "6.1.0",\n            "semver": "5.4.1"\n          }\n        },\n        "lockfile": {\n          "version": "1.0.4",\n          "bundled": true,\n          "requires": {\n            "signal-exit": "3.0.2"\n          }\n        },\n        "lodash._baseindexof": {\n          "version": "3.1.0",\n          "bundled": true\n        },\n        "lodash._baseuniq": {\n          "version": "4.6.0",\n          "bundled": true,\n          "requires": {\n            "lodash._createset": "~4.0.0",\n            "lodash._root": "~3.0.0"\n          }\n        },\n        "lodash._bindcallback": {\n          "version": "3.0.1",\n          "bundled": true\n        },\n        "lodash._cacheindexof": {\n          "version": "3.0.2",\n          "bundled": true\n        },\n        "lodash._createcache": {\n          "version": "3.1.2",\n          "bundled": true,\n          "requires": {\n            "lodash._getnative": "3.0.0"\n          }\n        },\n        "lodash._createset": {\n          "version": "4.0.3",\n          "bundled": true\n        },\n        "lodash._getnative": {\n          "version": "3.9.1",\n          "bundled": true\n        },\n        "lodash._root": {\n          "version": "3.0.1",\n          "bundled": true\n        },\n        "lodash.clonedeep": {\n          "version": "4.5.0",\n          "bundled": true\n        },\n        "lodash.restparam": {\n          "version": "3.6.1",\n          "bundled": true\n        },\n        "lodash.union": {\n          "version": "4.6.0",\n          "bundled": true\n        },\n        "lodash.uniq": {\n          "version": "4.5.0",\n          "bundled": true\n        },\n        "lodash.without": {\n          "version": "4.4.0",\n          "bundled": true\n        },\n        "lowercase-keys": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "lru-cache": {\n          "version": "4.1.5",\n          "bundled": true,\n          "requires": {\n            "pseudomap": "1.0.2",\n            "yallist": "2.1.2"\n          }\n        },\n        "make-dir": {\n          "version": "1.3.0",\n          "bundled": true,\n          "requires": {\n            "pify": "3.0.0"\n          }\n        },\n        "make-fetch-happen": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "agentkeepalive": "3.4.1",\n            "cacache": "11.0.1",\n            "http-cache-semantics": "3.8.1",\n            "http-proxy-agent": "2.1.0",\n            "https-proxy-agent": "2.2.1",\n            "lru-cache": "4.1.2",\n            "mississippi": "3.0.0",\n            "node-fetch-npm": "2.0.2",\n            "promise-retry": "1.1.1",\n            "socks-proxy-agent": "4.0.0",\n            "ssri": "6.0.0"\n          }\n        },\n        "meant": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "mem": {\n          "version": "1.1.0",\n          "bundled": true,\n          "requires": {\n            "mimic-fn": "1.0.0"\n          }\n        },\n        "mime-db": {\n          "version": "1.35.0",\n          "bundled": true\n        },\n        "mime-types": {\n          "version": "2.1.19",\n          "bundled": true,\n          "requires": {\n            "mime-db": "~1.35.0"\n          }\n        },\n        "mimic-fn": {\n          "version": "1.2.0",\n          "bundled": true\n        },\n        "minimatch": {\n          "version": "3.0.4",\n          "bundled": true,\n          "requires": {\n            "brace-expansion": "1.1.7"\n          }\n        },\n        "minimist": {\n          "version": "0.0.8",\n          "bundled": true\n        },\n        "minipass": {\n          "version": "2.3.3",\n          "bundled": true,\n          "requires": {\n            "safe-buffer": "5.1.2",\n            "yallist": "3.0.0"\n          },\n          "dependencies": {\n            "yallist": {\n              "version": "3.0.2",\n              "bundled": true\n            }\n          }\n        },\n        "minizlib": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "minipass": "2.2.1"\n          }\n        },\n        "mississippi": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "concat-stream": "1.5.0",\n            "duplexify": "3.4.2",\n            "end-of-stream": "1.1.0",\n            "flush-write-stream": "1.0.0",\n            "from2": "2.1.0",\n            "parallel-transform": "1.1.0",\n            "pump": "3.0.0",\n            "pumpify": "1.3.3",\n            "stream-each": "1.1.0",\n            "through2": "2.0.0"\n          }\n        },\n        "mkdirp": {\n          "version": "0.5.1",\n          "bundled": true,\n          "requires": {\n            "minimist": "0.0.8"\n          }\n        },\n        "move-concurrently": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "1.1.1",\n            "copy-concurrently": "1.0.0",\n            "fs-write-stream-atomic": "1.0.8",\n            "mkdirp": "0.5.1",\n            "rimraf": "2.5.4",\n            "run-queue": "1.0.3"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            }\n          }\n        },\n        "ms": {\n          "version": "2.1.1",\n          "bundled": true\n        },\n        "mute-stream": {\n          "version": "0.0.7",\n          "bundled": true\n        },\n        "node-fetch-npm": {\n          "version": "2.0.2",\n          "bundled": true,\n          "requires": {\n            "encoding": "0.1.11",\n            "json-parse-better-errors": "1.0.0",\n            "safe-buffer": "5.1.1"\n          }\n        },\n        "node-gyp": {\n          "version": "3.8.0",\n          "bundled": true,\n          "requires": {\n            "fstream": "1.0.0",\n            "glob": "7.0.3",\n            "graceful-fs": "4.1.2",\n            "mkdirp": "0.5.0",\n            "nopt": "2 || 3",\n            "npmlog": "0 || 1 || 2 || 3 || 4",\n            "osenv": "0",\n            "request": "2.87.0",\n            "rimraf": "2",\n            "semver": "~5.3.0",\n            "tar": "2.0.0",\n            "which": "1"\n          },\n          "dependencies": {\n            "nopt": {\n              "version": "3.0.6",\n              "bundled": true,\n              "requires": {\n                "abbrev": "1"\n              }\n            },\n            "semver": {\n              "version": "5.3.0",\n              "bundled": true\n            },\n            "tar": {\n              "version": "2.2.1",\n              "bundled": true,\n              "requires": {\n                "block-stream": "*",\n                "fstream": "1.0.2",\n                "inherits": "2"\n              }\n            }\n          }\n        },\n        "nopt": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "abbrev": "1",\n            "osenv": "0.1.4"\n          }\n        },\n        "normalize-package-data": {\n          "version": "2.5.0",\n          "bundled": true,\n          "requires": {\n            "hosted-git-info": "2.1.4",\n            "resolve": "1.10.0",\n            "semver": "2 || 3 || 4 || 5",\n            "validate-npm-package-license": "3.0.1"\n          },\n          "dependencies": {\n            "resolve": {\n              "version": "1.10.0",\n              "bundled": true,\n              "requires": {\n                "path-parse": "1.0.6"\n              }\n            }\n          }\n        },\n        "npm-audit-report": {\n          "version": "1.3.2",\n          "bundled": true,\n          "requires": {\n            "cli-table3": "0.5.0",\n            "console-control-strings": "1.1.0"\n          }\n        },\n        "npm-bundled": {\n          "version": "1.0.6",\n          "bundled": true\n        },\n        "npm-cache-filename": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "npm-install-checks": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "semver": "2.3.0 || 3.x || 4 || 5"\n          }\n        },\n        "npm-lifecycle": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "byline": "5.0.0",\n            "graceful-fs": "4.1.11",\n            "node-gyp": "3.8.0",\n            "resolve-from": "4.0.0",\n            "slide": "1.1.6",\n            "uid-number": "0.0.6",\n            "umask": "1.1.0",\n            "which": "1.3.1"\n          }\n        },\n        "npm-logical-tree": {\n          "version": "1.2.1",\n          "bundled": true\n        },\n        "npm-package-arg": {\n          "version": "6.1.0",\n          "bundled": true,\n          "requires": {\n            "hosted-git-info": "2.6.0",\n            "osenv": "0.1.5",\n            "semver": "5.5.0",\n            "validate-npm-package-name": "3.0.0"\n          }\n        },\n        "npm-packlist": {\n          "version": "1.4.1",\n          "bundled": true,\n          "requires": {\n            "ignore-walk": "3.0.1",\n            "npm-bundled": "1.0.1"\n          }\n        },\n        "npm-pick-manifest": {\n          "version": "2.2.3",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "3.5.1",\n            "npm-package-arg": "6.0.0",\n            "semver": "5.4.1"\n          }\n        },\n        "npm-profile": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "aproba": "1.1.2 || 2",\n            "figgy-pudding": "3.4.1",\n            "npm-registry-fetch": "3.8.0"\n          }\n        },\n        "npm-registry-fetch": {\n          "version": "3.9.0",\n          "bundled": true,\n          "requires": {\n            "JSONStream": "1.3.4",\n            "bluebird": "3.5.1",\n            "figgy-pudding": "3.4.1",\n            "lru-cache": "4.1.3",\n            "make-fetch-happen": "4.0.1",\n            "npm-package-arg": "6.1.0"\n          }\n        },\n        "npm-run-path": {\n          "version": "2.0.2",\n          "bundled": true,\n          "requires": {\n            "path-key": "2.0.0"\n          }\n        },\n        "npm-user-validate": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "npmlog": {\n          "version": "4.1.2",\n          "bundled": true,\n          "requires": {\n            "are-we-there-yet": "~1.1.2",\n            "console-control-strings": "~1.1.0",\n            "gauge": "~2.7.3",\n            "set-blocking": "~2.0.0"\n          }\n        },\n        "number-is-nan": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "oauth-sign": {\n          "version": "0.9.0",\n          "bundled": true\n        },\n        "object-assign": {\n          "version": "4.1.1",\n          "bundled": true\n        },\n        "once": {\n          "version": "1.4.0",\n          "bundled": true,\n          "requires": {\n            "wrappy": "1"\n          }\n        },\n        "opener": {\n          "version": "1.5.1",\n          "bundled": true\n        },\n        "os-homedir": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "os-locale": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "execa": "0.7.0",\n            "lcid": "1.0.0",\n            "mem": "1.1.0"\n          }\n        },\n        "os-tmpdir": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "osenv": {\n          "version": "0.1.5",\n          "bundled": true,\n          "requires": {\n            "os-homedir": "1.0.0",\n            "os-tmpdir": "1.0.0"\n          }\n        },\n        "p-finally": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "p-limit": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "p-try": "1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "p-limit": "1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "package-json": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "got": "6.7.1",\n            "registry-auth-token": "3.0.1",\n            "registry-url": "3.0.3",\n            "semver": "5.1.0"\n          }\n        },\n        "pacote": {\n          "version": "9.5.0",\n          "bundled": true,\n          "requires": {\n            "bluebird": "3.5.3",\n            "cacache": "11.3.2",\n            "figgy-pudding": "3.5.1",\n            "get-stream": "4.1.0",\n            "glob": "7.1.3",\n            "lru-cache": "5.1.1",\n            "make-fetch-happen": "4.0.1",\n            "minimatch": "3.0.4",\n            "minipass": "2.3.5",\n            "mississippi": "3.0.0",\n            "mkdirp": "0.5.1",\n            "normalize-package-data": "2.4.0",\n            "npm-package-arg": "6.1.0",\n            "npm-packlist": "1.1.12",\n            "npm-pick-manifest": "2.2.3",\n            "npm-registry-fetch": "3.8.0",\n            "osenv": "0.1.5",\n            "promise-inflight": "1.0.1",\n            "promise-retry": "1.1.1",\n            "protoduck": "5.0.1",\n            "rimraf": "2.6.2",\n            "safe-buffer": "5.1.2",\n            "semver": "5.6.0",\n            "ssri": "6.0.1",\n            "tar": "4.4.8",\n            "unique-filename": "1.1.1",\n            "which": "1.3.1"\n          },\n          "dependencies": {\n            "lru-cache": {\n              "version": "5.1.1",\n              "bundled": true,\n              "requires": {\n                "yallist": "3.0.2"\n              }\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "5.1.2",\n                "yallist": "3.0.0"\n              }\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true\n            }\n          }\n        },\n        "parallel-transform": {\n          "version": "1.1.0",\n          "bundled": true,\n          "requires": {\n            "cyclist": "~0.2.2",\n            "inherits": "2.0.3",\n            "readable-stream": "2.1.5"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "path-exists": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "path-is-absolute": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "path-is-inside": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "path-key": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "path-parse": {\n          "version": "1.0.6",\n          "bundled": true\n        },\n        "performance-now": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "pify": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "prepend-http": {\n          "version": "1.0.4",\n          "bundled": true\n        },\n        "process-nextick-args": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "promise-inflight": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "promise-retry": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "err-code": "1.0.0",\n            "retry": "0.10.0"\n          },\n          "dependencies": {\n            "retry": {\n              "version": "0.10.1",\n              "bundled": true\n            }\n          }\n        },\n        "promzard": {\n          "version": "0.3.0",\n          "bundled": true,\n          "requires": {\n            "read": "1"\n          }\n        },\n        "proto-list": {\n          "version": "1.2.4",\n          "bundled": true\n        },\n        "protoduck": {\n          "version": "5.0.1",\n          "bundled": true,\n          "requires": {\n            "genfun": "5.0.0"\n          }\n        },\n        "prr": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "pseudomap": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "psl": {\n          "version": "1.1.29",\n          "bundled": true\n        },\n        "pump": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "end-of-stream": "1.1.0",\n            "once": "1.3.1"\n          }\n        },\n        "pumpify": {\n          "version": "1.5.1",\n          "bundled": true,\n          "requires": {\n            "duplexify": "3.6.0",\n            "inherits": "2.0.3",\n            "pump": "2.0.0"\n          },\n          "dependencies": {\n            "pump": {\n              "version": "2.0.1",\n              "bundled": true,\n              "requires": {\n                "end-of-stream": "1.1.0",\n                "once": "1.3.1"\n              }\n            }\n          }\n        },\n        "punycode": {\n          "version": "1.4.1",\n          "bundled": true\n        },\n        "qrcode-terminal": {\n          "version": "0.12.0",\n          "bundled": true\n        },\n        "qs": {\n          "version": "6.5.2",\n          "bundled": true\n        },\n        "query-string": {\n          "version": "6.2.0",\n          "bundled": true,\n          "requires": {\n            "decode-uri-component": "0.2.0",\n            "strict-uri-encode": "2.0.0"\n          }\n        },\n        "qw": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "rc": {\n          "version": "1.2.7",\n          "bundled": true,\n          "requires": {\n            "deep-extend": "0.5.1",\n            "ini": "~1.3.0",\n            "minimist": "1.2.0",\n            "strip-json-comments": "~2.0.1"\n          },\n          "dependencies": {\n            "minimist": {\n              "version": "1.2.0",\n              "bundled": true\n            }\n          }\n        },\n        "read": {\n          "version": "1.0.7",\n          "bundled": true,\n          "requires": {\n            "mute-stream": "~0.0.4"\n          }\n        },\n        "read-cmd-shim": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.2"\n          }\n        },\n        "read-installed": {\n          "version": "4.0.3",\n          "bundled": true,\n          "requires": {\n            "debuglog": "1.0.1",\n            "graceful-fs": "4.1.2",\n            "read-package-json": "2.0.0",\n            "readdir-scoped-modules": "1.0.0",\n            "semver": "2 || 3 || 4 || 5",\n            "slide": "~1.1.3",\n            "util-extend": "1.0.1"\n          }\n        },\n        "read-package-json": {\n          "version": "2.0.13",\n          "bundled": true,\n          "requires": {\n            "glob": "7.1.1",\n            "graceful-fs": "4.1.2",\n            "json-parse-better-errors": "1.0.1",\n            "normalize-package-data": "2.0.0",\n            "slash": "1.0.0"\n          }\n        },\n        "read-package-tree": {\n          "version": "5.2.2",\n          "bundled": true,\n          "requires": {\n            "debuglog": "1.0.1",\n            "dezalgo": "1.0.0",\n            "once": "1.3.0",\n            "read-package-json": "2.0.0",\n            "readdir-scoped-modules": "1.0.0"\n          }\n        },\n        "readable-stream": {\n          "version": "3.1.1",\n          "bundled": true,\n          "requires": {\n            "inherits": "2.0.3",\n            "string_decoder": "1.1.1",\n            "util-deprecate": "1.0.1"\n          }\n        },\n        "readdir-scoped-modules": {\n          "version": "1.0.2",\n          "bundled": true,\n          "requires": {\n            "debuglog": "1.0.1",\n            "dezalgo": "1.0.0",\n            "graceful-fs": "4.1.2",\n            "once": "1.3.0"\n          }\n        },\n        "registry-auth-token": {\n          "version": "3.3.2",\n          "bundled": true,\n          "requires": {\n            "rc": "1.1.6",\n            "safe-buffer": "5.0.1"\n          }\n        },\n        "registry-url": {\n          "version": "3.1.0",\n          "bundled": true,\n          "requires": {\n            "rc": "1.0.1"\n          }\n        },\n        "request": {\n          "version": "2.88.0",\n          "bundled": true,\n          "requires": {\n            "aws-sign2": "~0.7.0",\n            "aws4": "1.8.0",\n            "caseless": "~0.12.0",\n            "combined-stream": "~1.0.6",\n            "extend": "~3.0.2",\n            "forever-agent": "~0.6.1",\n            "form-data": "~2.3.2",\n            "har-validator": "~5.1.0",\n            "http-signature": "~1.2.0",\n            "is-typedarray": "~1.0.0",\n            "isstream": "~0.1.2",\n            "json-stringify-safe": "~5.0.1",\n            "mime-types": "~2.1.19",\n            "oauth-sign": "~0.9.0",\n            "performance-now": "2.1.0",\n            "qs": "~6.5.2",\n            "safe-buffer": "5.1.2",\n            "tough-cookie": "~2.4.3",\n            "tunnel-agent": "0.6.0",\n            "uuid": "3.3.2"\n          }\n        },\n        "require-directory": {\n          "version": "2.1.1",\n          "bundled": true\n        },\n        "require-main-filename": {\n          "version": "1.0.1",\n          "bundled": true\n        },\n        "resolve-from": {\n          "version": "4.0.0",\n          "bundled": true\n        },\n        "retry": {\n          "version": "0.12.0",\n          "bundled": true\n        },\n        "rimraf": {\n          "version": "2.6.3",\n          "bundled": true,\n          "requires": {\n            "glob": "7.1.3"\n          }\n        },\n        "run-queue": {\n          "version": "1.0.3",\n          "bundled": true,\n          "requires": {\n            "aproba": "1.1.1"\n          },\n          "dependencies": {\n            "aproba": {\n              "version": "1.2.0",\n              "bundled": true\n            }\n          }\n        },\n        "safe-buffer": {\n          "version": "5.1.2",\n          "bundled": true\n        },\n        "safer-buffer": {\n          "version": "2.1.2",\n          "bundled": true\n        },\n        "semver": {\n          "version": "5.6.0",\n          "bundled": true\n        },\n        "semver-diff": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "semver": "5.0.3"\n          }\n        },\n        "set-blocking": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "sha": {\n          "version": "2.0.1",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "readable-stream": "2.0.2"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "shebang-command": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "shebang-regex": "1.0.0"\n          }\n        },\n        "shebang-regex": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "signal-exit": {\n          "version": "3.0.2",\n          "bundled": true\n        },\n        "slash": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "slide": {\n          "version": "1.1.6",\n          "bundled": true\n        },\n        "smart-buffer": {\n          "version": "4.0.1",\n          "bundled": true\n        },\n        "socks": {\n          "version": "2.2.0",\n          "bundled": true,\n          "requires": {\n            "ip": "1.1.5",\n            "smart-buffer": "4.0.1"\n          }\n        },\n        "socks-proxy-agent": {\n          "version": "4.0.1",\n          "bundled": true,\n          "requires": {\n            "agent-base": "~4.2.0",\n            "socks": "~2.2.0"\n          }\n        },\n        "sorted-object": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "sorted-union-stream": {\n          "version": "2.1.3",\n          "bundled": true,\n          "requires": {\n            "from2": "1.3.0",\n            "stream-iterate": "1.1.0"\n          },\n          "dependencies": {\n            "from2": {\n              "version": "1.3.0",\n              "bundled": true,\n              "requires": {\n                "inherits": "~2.0.1",\n                "readable-stream": "~1.1.10"\n              }\n            },\n            "isarray": {\n              "version": "0.0.1",\n              "bundled": true\n            },\n            "readable-stream": {\n              "version": "1.1.14",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.1",\n                "isarray": "0.0.1",\n                "string_decoder": "~0.10.x"\n              }\n            },\n            "string_decoder": {\n              "version": "0.10.31",\n              "bundled": true\n            }\n          }\n        },\n        "spdx-correct": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "spdx-expression-parse": "3.0.0",\n            "spdx-license-ids": "3.0.0"\n          }\n        },\n        "spdx-exceptions": {\n          "version": "2.1.0",\n          "bundled": true\n        },\n        "spdx-expression-parse": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "spdx-exceptions": "2.1.0",\n            "spdx-license-ids": "3.0.0"\n          }\n        },\n        "spdx-license-ids": {\n          "version": "3.0.3",\n          "bundled": true\n        },\n        "sshpk": {\n          "version": "1.14.2",\n          "bundled": true,\n          "requires": {\n            "asn1": "~0.2.3",\n            "assert-plus": "1.0.0",\n            "bcrypt-pbkdf": "1.0.0",\n            "dashdash": "1.12.0",\n            "ecc-jsbn": "~0.1.1",\n            "getpass": "0.1.1",\n            "jsbn": "~0.1.0",\n            "safer-buffer": "2.0.2",\n            "tweetnacl": "~0.14.0"\n          }\n        },\n        "ssri": {\n          "version": "6.0.1",\n          "bundled": true,\n          "requires": {\n            "figgy-pudding": "3.5.1"\n          }\n        },\n        "stream-each": {\n          "version": "1.2.2",\n          "bundled": true,\n          "requires": {\n            "end-of-stream": "1.1.0",\n            "stream-shift": "1.0.0"\n          }\n        },\n        "stream-iterate": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "readable-stream": "2.1.5",\n            "stream-shift": "1.0.0"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "stream-shift": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "strict-uri-encode": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "string-width": {\n          "version": "2.1.1",\n          "bundled": true,\n          "requires": {\n            "is-fullwidth-code-point": "2.0.0",\n            "strip-ansi": "4.0.0"\n          },\n          "dependencies": {\n            "ansi-regex": {\n              "version": "3.0.0",\n              "bundled": true\n            },\n            "is-fullwidth-code-point": {\n              "version": "2.0.0",\n              "bundled": true\n            },\n            "strip-ansi": {\n              "version": "4.0.0",\n              "bundled": true,\n              "requires": {\n                "ansi-regex": "3.0.0"\n              }\n            }\n          }\n        },\n        "string_decoder": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "safe-buffer": "~5.1.0"\n          }\n        },\n        "stringify-package": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "bundled": true,\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "strip-eof": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "strip-json-comments": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "supports-color": {\n          "version": "5.4.0",\n          "bundled": true,\n          "requires": {\n            "has-flag": "3.0.0"\n          }\n        },\n        "tar": {\n          "version": "4.4.8",\n          "bundled": true,\n          "requires": {\n            "chownr": "1.1.1",\n            "fs-minipass": "1.2.5",\n            "minipass": "2.3.4",\n            "minizlib": "1.1.1",\n            "mkdirp": "0.5.0",\n            "safe-buffer": "5.1.2",\n            "yallist": "3.0.2"\n          },\n          "dependencies": {\n            "chownr": {\n              "version": "1.1.1",\n              "bundled": true\n            },\n            "minipass": {\n              "version": "2.3.5",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "5.1.2",\n                "yallist": "3.0.0"\n              }\n            },\n            "yallist": {\n              "version": "3.0.3",\n              "bundled": true\n            }\n          }\n        },\n        "term-size": {\n          "version": "1.2.0",\n          "bundled": true,\n          "requires": {\n            "execa": "0.7.0"\n          }\n        },\n        "text-table": {\n          "version": "0.2.0",\n          "bundled": true\n        },\n        "through": {\n          "version": "2.3.8",\n          "bundled": true\n        },\n        "through2": {\n          "version": "2.0.3",\n          "bundled": true,\n          "requires": {\n            "readable-stream": "2.1.5",\n            "xtend": "~4.0.1"\n          },\n          "dependencies": {\n            "readable-stream": {\n              "version": "2.3.6",\n              "bundled": true,\n              "requires": {\n                "core-util-is": "~1.0.0",\n                "inherits": "~2.0.3",\n                "isarray": "~1.0.0",\n                "process-nextick-args": "~2.0.0",\n                "safe-buffer": "~5.1.1",\n                "string_decoder": "~1.1.1",\n                "util-deprecate": "~1.0.1"\n              }\n            },\n            "string_decoder": {\n              "version": "1.1.1",\n              "bundled": true,\n              "requires": {\n                "safe-buffer": "~5.1.0"\n              }\n            }\n          }\n        },\n        "timed-out": {\n          "version": "4.0.1",\n          "bundled": true\n        },\n        "tiny-relative-date": {\n          "version": "1.3.0",\n          "bundled": true\n        },\n        "tough-cookie": {\n          "version": "2.4.3",\n          "bundled": true,\n          "requires": {\n            "psl": "1.1.24",\n            "punycode": "1.4.1"\n          }\n        },\n        "tunnel-agent": {\n          "version": "0.6.0",\n          "bundled": true,\n          "requires": {\n            "safe-buffer": "5.0.1"\n          }\n        },\n        "tweetnacl": {\n          "version": "0.14.5",\n          "bundled": true,\n          "optional": true\n        },\n        "typedarray": {\n          "version": "0.0.6",\n          "bundled": true\n        },\n        "uid-number": {\n          "version": "0.0.6",\n          "bundled": true\n        },\n        "umask": {\n          "version": "1.1.0",\n          "bundled": true\n        },\n        "unique-filename": {\n          "version": "1.1.1",\n          "bundled": true,\n          "requires": {\n            "unique-slug": "2.0.0"\n          }\n        },\n        "unique-slug": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "imurmurhash": "0.1.4"\n          }\n        },\n        "unique-string": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "crypto-random-string": "1.0.0"\n          }\n        },\n        "unpipe": {\n          "version": "1.0.0",\n          "bundled": true\n        },\n        "unzip-response": {\n          "version": "2.0.1",\n          "bundled": true\n        },\n        "update-notifier": {\n          "version": "2.5.0",\n          "bundled": true,\n          "requires": {\n            "boxen": "1.2.1",\n            "chalk": "2.0.1",\n            "configstore": "3.0.0",\n            "import-lazy": "2.1.0",\n            "is-ci": "1.0.10",\n            "is-installed-globally": "0.1.0",\n            "is-npm": "1.0.0",\n            "latest-version": "3.0.0",\n            "semver-diff": "2.0.0",\n            "xdg-basedir": "3.0.0"\n          }\n        },\n        "url-parse-lax": {\n          "version": "1.0.0",\n          "bundled": true,\n          "requires": {\n            "prepend-http": "1.0.1"\n          }\n        },\n        "util-deprecate": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "util-extend": {\n          "version": "1.0.3",\n          "bundled": true\n        },\n        "uuid": {\n          "version": "3.3.2",\n          "bundled": true\n        },\n        "validate-npm-package-license": {\n          "version": "3.0.4",\n          "bundled": true,\n          "requires": {\n            "spdx-correct": "3.0.0",\n            "spdx-expression-parse": "3.0.0"\n          }\n        },\n        "validate-npm-package-name": {\n          "version": "3.0.0",\n          "bundled": true,\n          "requires": {\n            "builtins": "1.0.3"\n          }\n        },\n        "verror": {\n          "version": "1.10.0",\n          "bundled": true,\n          "requires": {\n            "assert-plus": "1.0.0",\n            "core-util-is": "1.0.2",\n            "extsprintf": "1.2.0"\n          }\n        },\n        "wcwidth": {\n          "version": "1.0.1",\n          "bundled": true,\n          "requires": {\n            "defaults": "1.0.3"\n          }\n        },\n        "which": {\n          "version": "1.3.1",\n          "bundled": true,\n          "requires": {\n            "isexe": "2.0.0"\n          }\n        },\n        "which-module": {\n          "version": "2.0.0",\n          "bundled": true\n        },\n        "wide-align": {\n          "version": "1.1.2",\n          "bundled": true,\n          "requires": {\n            "string-width": "1.0.2"\n          },\n          "dependencies": {\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "requires": {\n                "code-point-at": "1.0.0",\n                "is-fullwidth-code-point": "1.0.0",\n                "strip-ansi": "3.0.0"\n              }\n            }\n          }\n        },\n        "widest-line": {\n          "version": "2.0.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "2.1.1"\n          }\n        },\n        "worker-farm": {\n          "version": "1.6.0",\n          "bundled": true,\n          "requires": {\n            "errno": "~0.1.7"\n          }\n        },\n        "wrap-ansi": {\n          "version": "2.1.0",\n          "bundled": true,\n          "requires": {\n            "string-width": "1.0.1",\n            "strip-ansi": "3.0.1"\n          },\n          "dependencies": {\n            "string-width": {\n              "version": "1.0.2",\n              "bundled": true,\n              "requires": {\n                "code-point-at": "1.0.0",\n                "is-fullwidth-code-point": "1.0.0",\n                "strip-ansi": "3.0.0"\n              }\n            }\n          }\n        },\n        "wrappy": {\n          "version": "1.0.2",\n          "bundled": true\n        },\n        "write-file-atomic": {\n          "version": "2.4.2",\n          "bundled": true,\n          "requires": {\n            "graceful-fs": "4.1.11",\n            "imurmurhash": "0.1.4",\n            "signal-exit": "3.0.2"\n          }\n        },\n        "xdg-basedir": {\n          "version": "3.0.0",\n          "bundled": true\n        },\n        "xtend": {\n          "version": "4.0.1",\n          "bundled": true\n        },\n        "y18n": {\n          "version": "4.0.0",\n          "bundled": true\n        },\n        "yallist": {\n          "version": "2.1.2",\n          "bundled": true\n        },\n        "yargs": {\n          "version": "11.0.0",\n          "bundled": true,\n          "requires": {\n            "cliui": "4.0.0",\n            "decamelize": "1.1.1",\n            "find-up": "2.1.0",\n            "get-caller-file": "1.0.1",\n            "os-locale": "2.0.0",\n            "require-directory": "2.1.1",\n            "require-main-filename": "1.0.1",\n            "set-blocking": "2.0.0",\n            "string-width": "2.0.0",\n            "which-module": "2.0.0",\n            "y18n": "3.2.1",\n            "yargs-parser": "9.0.2"\n          },\n          "dependencies": {\n            "y18n": {\n              "version": "3.2.1",\n              "bundled": true\n            }\n          }\n        },\n        "yargs-parser": {\n          "version": "9.0.2",\n          "bundled": true,\n          "requires": {\n            "camelcase": "4.1.0"\n          }\n        }\n      }\n    },\n    "npm-run-path": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/npm-run-path/-/npm-run-path-2.0.2.tgz",\n      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",\n      "requires": {\n        "path-key": "2.0.0"\n      }\n    },\n    "nth-check": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/nth-check/-/nth-check-1.0.2.tgz",\n      "integrity": "sha512-WeBOdju8SnzPN5vTUJYxYUxLeXpCaVP5i5e0LF8fg7WORF2Wd7wFX/pk0tYZk7s8T+J7VLy0Da6J1+wCT0AtHg==",\n      "requires": {\n        "boolbase": "~1.0.0"\n      }\n    },\n    "num2fraction": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/num2fraction/-/num2fraction-1.2.2.tgz",\n      "integrity": "sha1-b2gragJ6Tp3fpFZM0lidHU5mnt4="\n    },\n    "number-is-nan": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/number-is-nan/-/number-is-nan-1.0.1.tgz",\n      "integrity": "sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0="\n    },\n    "nwsapi": {\n      "version": "2.1.3",\n      "resolved": "https://registry.npmjs.org/nwsapi/-/nwsapi-2.1.3.tgz",\n      "integrity": "sha512-RowAaJGEgYXEZfQ7tvvdtAQUKPyTR6T6wNu0fwlNsGQYr/h3yQc6oI8WnVZh3Y/Sylwc+dtAlvPqfFZjhTyk3A=="\n    },\n    "oauth-sign": {\n      "version": "0.9.0",\n      "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",\n      "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ=="\n    },\n    "object-assign": {\n      "version": "4.1.1",\n      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",\n      "integrity": "sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM="\n    },\n    "object-copy": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz",\n      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",\n      "requires": {\n        "copy-descriptor": "0.1.0",\n        "define-property": "0.2.5",\n        "kind-of": "3.0.3"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "0.1.0"\n          }\n        }\n      }\n    },\n    "object-hash": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-1.3.1.tgz",\n      "integrity": "sha512-OSuu/pU4ENM9kmREg0BdNrUDIl1heYa4mBZacJc+vVWz4GtAwu7jO8s4AIt2aGRUTqxykpWzI3Oqnsm13tTMDA=="\n    },\n    "object-keys": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",\n      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA=="\n    },\n    "object-visit": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz",\n      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",\n      "requires": {\n        "isobject": "3.0.0"\n      }\n    },\n    "object.assign": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.0.tgz",\n      "integrity": "sha512-exHJeq6kBKj58mqGyTQ9DFvrZC/eR6OwxzoM9YRoGBqrXYonaFyGiFMuc9VZrXf7DarreEwMpurG3dd+CNyW5w==",\n      "requires": {\n        "define-properties": "1.1.2",\n        "function-bind": "1.1.1",\n        "has-symbols": "1.0.0",\n        "object-keys": "1.0.11"\n      }\n    },\n    "object.defaults": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/object.defaults/-/object.defaults-1.1.0.tgz",\n      "integrity": "sha1-On+GgzS0B96gbaFtiNXNKeQ1/s8=",\n      "requires": {\n        "array-each": "1.0.1",\n        "array-slice": "1.0.0",\n        "for-own": "1.0.0",\n        "isobject": "3.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "1.0.1"\n          }\n        }\n      }\n    },\n    "object.fromentries": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.0.tgz",\n      "integrity": "sha512-9iLiI6H083uiqUuvzyY6qrlmc/Gz8hLQFOcb/Ri/0xXFkSNS3ctV+CbE6yM2+AnkYfOB3dGjdzC0wrMLIhQICA==",\n      "requires": {\n        "define-properties": "1.1.2",\n        "es-abstract": "1.11.0",\n        "function-bind": "1.1.1",\n        "has": "1.0.1"\n      }\n    },\n    "object.getownpropertydescriptors": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/object.getownpropertydescriptors/-/object.getownpropertydescriptors-2.0.3.tgz",\n      "integrity": "sha1-h1jIRvW0B62rDyNuCYbxSwUcqhY=",\n      "requires": {\n        "define-properties": "1.1.2",\n        "es-abstract": "1.5.1"\n      }\n    },\n    "object.map": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/object.map/-/object.map-1.0.1.tgz",\n      "integrity": "sha1-z4Plncj8wK1fQlDh94s7gb2AHTc=",\n      "requires": {\n        "for-own": "1.0.0",\n        "make-iterator": "1.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "1.0.1"\n          }\n        }\n      }\n    },\n    "object.omit": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/object.omit/-/object.omit-2.0.1.tgz",\n      "integrity": "sha1-Gpx0SCnznbuFjHbKNXmuKlTr0fo=",\n      "requires": {\n        "for-own": "0.1.4",\n        "is-extendable": "0.1.1"\n      }\n    },\n    "object.pick": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz",\n      "integrity": "sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=",\n      "requires": {\n        "isobject": "3.0.1"\n      }\n    },\n    "object.reduce": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/object.reduce/-/object.reduce-1.0.1.tgz",\n      "integrity": "sha1-b+NI8qx/oPlcpiEiZZkJaCW7A60=",\n      "requires": {\n        "for-own": "1.0.0",\n        "make-iterator": "1.0.0"\n      },\n      "dependencies": {\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "1.0.1"\n          }\n        }\n      }\n    },\n    "object.values": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.1.0.tgz",\n      "integrity": "sha512-8mf0nKLAoFX6VlNVdhGj31SVYpaNFtUnuoOXWyFEstsWRgU837AK+JYM0iAxwkSzGRbwn8cbFmgbyxj1j4VbXg==",\n      "requires": {\n        "define-properties": "1.1.3",\n        "es-abstract": "1.12.0",\n        "function-bind": "1.1.1",\n        "has": "1.0.3"\n      }\n    },\n    "obuf": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",\n      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg=="\n    },\n    "on-finished": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.3.0.tgz",\n      "integrity": "sha1-IPEzZIGwg811M3mSoWlxqi2QaUc=",\n      "requires": {\n        "ee-first": "1.1.1"\n      }\n    },\n    "on-headers": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/on-headers/-/on-headers-1.0.2.tgz",\n      "integrity": "sha512-pZAE+FJLoyITytdqK0U5s+FIpjN0JP3OzFi/u8Rx+EV5/W+JTWGXG8xFzevE7AjBfDqHv/8vL8qQsIhHnqRkrA=="\n    },\n    "once": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",\n      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",\n      "requires": {\n        "wrappy": "1"\n      }\n    },\n    "onetime": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz",\n      "integrity": "sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=",\n      "requires": {\n        "mimic-fn": "1.0.0"\n      }\n    },\n    "opn": {\n      "version": "5.4.0",\n      "resolved": "https://registry.npmjs.org/opn/-/opn-5.4.0.tgz",\n      "integrity": "sha512-YF9MNdVy/0qvJvDtunAOzFw9iasOQHpVthTCvGzxt61Il64AYSGdK+rYwld7NAfk9qJ7dt+hymBNSc9LNYS+Sw==",\n      "requires": {\n        "is-wsl": "1.1.0"\n      }\n    },\n    "optimist": {\n      "version": "0.6.1",\n      "resolved": "https://registry.npmjs.org/optimist/-/optimist-0.6.1.tgz",\n      "integrity": "sha1-2j6nRob6IaGaERwybpDrFaAZZoY=",\n      "requires": {\n        "minimist": "~0.0.1",\n        "wordwrap": "~0.0.2"\n      },\n      "dependencies": {\n        "minimist": {\n          "version": "0.0.10",\n          "resolved": "https://registry.npmjs.org/minimist/-/minimist-0.0.10.tgz",\n          "integrity": "sha1-3j+YVD2/lggr5IrRoMfNqDYwHc8="\n        },\n        "wordwrap": {\n          "version": "0.0.3",\n          "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-0.0.3.tgz",\n          "integrity": "sha1-o9XabNXAvAAI03I0u68b7WMFkQc="\n        }\n      }\n    },\n    "optimize-css-assets-webpack-plugin": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-5.0.1.tgz",\n      "integrity": "sha512-Rqm6sSjWtx9FchdP0uzTQDc7GXDKnwVEGoSxjezPkzMewx7gEWE9IMUYKmigTRC4U3RaNSwYVnUDLuIdtTpm0A==",\n      "requires": {\n        "cssnano": "4.1.0",\n        "last-call-webpack-plugin": "3.0.0"\n      }\n    },\n    "optionator": {\n      "version": "0.8.2",\n      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.8.2.tgz",\n      "integrity": "sha1-NkxeQJ0/TWMB1sC0wFu6UBgK62Q=",\n      "requires": {\n        "deep-is": "~0.1.3",\n        "fast-levenshtein": "~2.0.4",\n        "levn": "~0.3.0",\n        "prelude-ls": "~1.1.2",\n        "type-check": "~0.3.2",\n        "wordwrap": "~1.0.0"\n      }\n    },\n    "orchestrator": {\n      "version": "0.3.8",\n      "resolved": "https://registry.npmjs.org/orchestrator/-/orchestrator-0.3.8.tgz",\n      "integrity": "sha1-FOfp4nZPcxX7rBhOUGx6pt+UrX4=",\n      "requires": {\n        "end-of-stream": "~0.1.5",\n        "sequencify": "~0.0.7",\n        "stream-consume": "~0.1.0"\n      },\n      "dependencies": {\n        "end-of-stream": {\n          "version": "0.1.5",\n          "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-0.1.5.tgz",\n          "integrity": "sha1-jhdyBsPICDfYVjLouTWd/osvbq8=",\n          "requires": {\n            "once": "~1.3.0"\n          }\n        },\n        "once": {\n          "version": "1.3.3",\n          "resolved": "https://registry.npmjs.org/once/-/once-1.3.3.tgz",\n          "integrity": "sha1-suJhVXzkwxTsgwTz+oJmPkKXyiA=",\n          "requires": {\n            "wrappy": "1"\n          }\n        }\n      }\n    },\n    "ordered-read-streams": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/ordered-read-streams/-/ordered-read-streams-0.1.0.tgz",\n      "integrity": "sha1-/VZamvjrRHO6abbtijQ1LLVS8SY="\n    },\n    "original": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/original/-/original-1.0.2.tgz",\n      "integrity": "sha512-hyBVl6iqqUOJ8FqRe+l/gS8H+kKYjrEndd5Pm1MfBtsEKA038HkkdbAl/72EAXGyonD/PFsvmVG+EvcIpliMBg==",\n      "requires": {\n        "url-parse": "1.4.3"\n      }\n    },\n    "os-browserify": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/os-browserify/-/os-browserify-0.3.0.tgz",\n      "integrity": "sha1-hUNzx/XCMVkU/Jv8a9gjj92h7Cc="\n    },\n    "os-homedir": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/os-homedir/-/os-homedir-1.0.2.tgz",\n      "integrity": "sha1-/7xJiDNuDoM94MFox+8VISGqf7M="\n    },\n    "os-locale": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/os-locale/-/os-locale-3.1.0.tgz",\n      "integrity": "sha512-Z8l3R4wYWM40/52Z+S265okfFj8Kt2cC2MKY+xNi3kFs+XGI7WXu/I309QQQYbRW4ijiZ+yxs9pqEhJh0DqW3Q==",\n      "requires": {\n        "execa": "1.0.0",\n        "lcid": "2.0.0",\n        "mem": "4.0.0"\n      }\n    },\n    "os-tmpdir": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/os-tmpdir/-/os-tmpdir-1.0.2.tgz",\n      "integrity": "sha1-u+Z0BseaqFxc/sdm/lc0VV36EnQ="\n    },\n    "osenv": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/osenv/-/osenv-0.1.5.tgz",\n      "integrity": "sha512-0CWcCECdMVc2Rw3U5w9ZjqX6ga6ubk1xDVKxtBQPK7wis/0F2r9T6k4ydGYhecl7YUBxBVxhL5oisPsNxAPe2g==",\n      "requires": {\n        "os-homedir": "1.0.0",\n        "os-tmpdir": "1.0.0"\n      }\n    },\n    "p-defer": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-defer/-/p-defer-1.0.0.tgz",\n      "integrity": "sha1-n26xgvbJqozXQwBKfU+WsZaw+ww="\n    },\n    "p-each-series": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-each-series/-/p-each-series-1.0.0.tgz",\n      "integrity": "sha1-kw89Et0fUOdDRFeiLNbwSsatf3E=",\n      "requires": {\n        "p-reduce": "1.0.0"\n      }\n    },\n    "p-finally": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz",\n      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4="\n    },\n    "p-is-promise": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-2.1.0.tgz",\n      "integrity": "sha512-Y3W0wlRPK8ZMRbNq97l4M5otioeA5lm1z7bkNkxCka8HSPjR0xRWmpCmc9utiaLP9Jb1eD8BgeIxTW4AIF45Pg=="\n    },\n    "p-limit": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.2.0.tgz",\n      "integrity": "sha512-pZbTJpoUsCzV48Mc9Nh51VbwO0X9cuPFE8gYwx9BTCt9SF8/b7Zljd2fVgOxhIF/HDTKgpVzs+GPhyKfjLLFRQ==",\n      "requires": {\n        "p-try": "2.0.0"\n      }\n    },\n    "p-locate": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz",\n      "integrity": "sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==",\n      "requires": {\n        "p-limit": "2.0.0"\n      }\n    },\n    "p-map": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/p-map/-/p-map-1.2.0.tgz",\n      "integrity": "sha512-r6zKACMNhjPJMTl8KcFH4li//gkrXWfbD6feV8l6doRHlzljFWGJ2AP6iKaCJXyZmAUMOPtvbW7EXkbWO/pLEA=="\n    },\n    "p-reduce": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/p-reduce/-/p-reduce-1.0.0.tgz",\n      "integrity": "sha1-GMKw3ZNqRpClKfgjH1ig/bakffo="\n    },\n    "p-try": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz",\n      "integrity": "sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ=="\n    },\n    "pako": {\n      "version": "1.0.10",\n      "resolved": "https://registry.npmjs.org/pako/-/pako-1.0.10.tgz",\n      "integrity": "sha512-0DTvPVU3ed8+HNXOu5Bs+o//Mbdj9VNQMUOe9oKCwh8l0GNwpTDMKCWbRjgtD291AWnkAgkqA/LOnQS8AmS1tw=="\n    },\n    "parallel-transform": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/parallel-transform/-/parallel-transform-1.1.0.tgz",\n      "integrity": "sha1-1BDwZbBdojCB/NEPKIVMKb2jOwY=",\n      "requires": {\n        "cyclist": "~0.2.2",\n        "inherits": "2.0.3",\n        "readable-stream": "2.1.5"\n      }\n    },\n    "param-case": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/param-case/-/param-case-2.1.1.tgz",\n      "integrity": "sha1-35T9jPZTHs915r75oIWPvHK+Ikc=",\n      "requires": {\n        "no-case": "2.2.0"\n      }\n    },\n    "parent-module": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",\n      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",\n      "requires": {\n        "callsites": "3.0.0"\n      },\n      "dependencies": {\n        "callsites": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",\n          "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ=="\n        }\n      }\n    },\n    "parse-asn1": {\n      "version": "5.1.4",\n      "resolved": "https://registry.npmjs.org/parse-asn1/-/parse-asn1-5.1.4.tgz",\n      "integrity": "sha512-Qs5duJcuvNExRfFZ99HDD3z4mAi3r9Wl/FOjEOijlxwCZs7E7mW2vjTpgQ4J8LpTF8x5v+1Vn5UQFejmWT11aw==",\n      "requires": {\n        "asn1.js": "4.0.0",\n        "browserify-aes": "1.0.0",\n        "create-hash": "1.1.0",\n        "evp_bytestokey": "1.0.0",\n        "pbkdf2": "3.0.3",\n        "safe-buffer": "5.1.1"\n      }\n    },\n    "parse-filepath": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/parse-filepath/-/parse-filepath-1.0.2.tgz",\n      "integrity": "sha1-pjISf1Oq89FYdvWHLz/6x2PWyJE=",\n      "requires": {\n        "is-absolute": "1.0.0",\n        "map-cache": "0.2.0",\n        "path-root": "0.1.1"\n      }\n    },\n    "parse-glob": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/parse-glob/-/parse-glob-3.0.4.tgz",\n      "integrity": "sha1-ssN2z7EfNVE7rdFz7wu246OIORw=",\n      "requires": {\n        "glob-base": "0.3.0",\n        "is-dotfile": "1.0.0",\n        "is-extglob": "1.0.0",\n        "is-glob": "2.0.0"\n      },\n      "dependencies": {\n        "is-extglob": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-1.0.0.tgz",\n          "integrity": "sha1-rEaBd8SUNAWgkvyPKXYMb/xiBsA="\n        },\n        "is-glob": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-2.0.1.tgz",\n          "integrity": "sha1-0Jb5JqPe1WAPP9/ZEZjLCIjC2GM=",\n          "requires": {\n            "is-extglob": "1.0.0"\n          }\n        }\n      }\n    },\n    "parse-import": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/parse-import/-/parse-import-2.0.0.tgz",\n      "integrity": "sha1-KyR0Aw4AirmNt2xLy/TbWucwb18=",\n      "requires": {\n        "get-imports": "1.0.0"\n      }\n    },\n    "parse-json": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/parse-json/-/parse-json-4.0.0.tgz",\n      "integrity": "sha1-vjX1Qlvh9/bHRxhPmKeIy5lHfuA=",\n      "requires": {\n        "error-ex": "1.3.1",\n        "json-parse-better-errors": "1.0.1"\n      }\n    },\n    "parse-node-version": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/parse-node-version/-/parse-node-version-1.0.1.tgz",\n      "integrity": "sha512-3YHlOa/JgH6Mnpr05jP9eDG254US9ek25LyIxZlDItp2iJtwyaXQb57lBYLdT3MowkUFYEV2XXNAYIPlESvJlA=="\n    },\n    "parse-passwd": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/parse-passwd/-/parse-passwd-1.0.0.tgz",\n      "integrity": "sha1-bVuTSkVpk7I9N/QKOC1vFmao5cY="\n    },\n    "parse5": {\n      "version": "5.1.0",\n      "resolved": "https://registry.npmjs.org/parse5/-/parse5-5.1.0.tgz",\n      "integrity": "sha512-fxNG2sQjHvlVAYmzBZS9YlDp6PTSSDwa98vkD4QgVDDCAo84z5X1t5XyJQ62ImdLXx5NdIIfihey6xpum9/gRQ=="\n    },\n    "parseurl": {\n      "version": "1.3.3",\n      "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",\n      "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ=="\n    },\n    "pascalcase": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz",\n      "integrity": "sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ="\n    },\n    "path-browserify": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/path-browserify/-/path-browserify-0.0.0.tgz",\n      "integrity": "sha1-oLhwcpquIUAFt9UDLsLLuw+0RRo="\n    },\n    "path-dirname": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz",\n      "integrity": "sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA="\n    },\n    "path-exists": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-3.0.0.tgz",\n      "integrity": "sha1-zg6+ql94yxiSXqfYENe1mwEP1RU="\n    },\n    "path-is-absolute": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",\n      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="\n    },\n    "path-is-inside": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/path-is-inside/-/path-is-inside-1.0.2.tgz",\n      "integrity": "sha1-NlQX3t5EQw0cEa9hAn+s8HS9/FM="\n    },\n    "path-key": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/path-key/-/path-key-2.0.1.tgz",\n      "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A="\n    },\n    "path-parse": {\n      "version": "1.0.6",\n      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",\n      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw=="\n    },\n    "path-root": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/path-root/-/path-root-0.1.1.tgz",\n      "integrity": "sha1-mkpoFMrBwM1zNgqV8yCDyOpHRbc=",\n      "requires": {\n        "path-root-regex": "0.1.0"\n      }\n    },\n    "path-root-regex": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/path-root-regex/-/path-root-regex-0.1.2.tgz",\n      "integrity": "sha1-v8zcjfWxLcUsi0PsONGNcsBLqW0="\n    },\n    "path-to-regexp": {\n      "version": "0.1.7",\n      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",\n      "integrity": "sha1-32BBeABfUi8V60SQ5yR6G/qmf4w="\n    },\n    "path-type": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz",\n      "integrity": "sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==",\n      "requires": {\n        "pify": "3.0.0"\n      }\n    },\n    "pause-stream": {\n      "version": "0.0.11",\n      "resolved": "https://registry.npmjs.org/pause-stream/-/pause-stream-0.0.11.tgz",\n      "integrity": "sha1-/lo0sMvOErWqaitAPuLnO2AvFEU=",\n      "requires": {\n        "through": "~2.3"\n      }\n    },\n    "pbkdf2": {\n      "version": "3.0.17",\n      "resolved": "https://registry.npmjs.org/pbkdf2/-/pbkdf2-3.0.17.tgz",\n      "integrity": "sha512-U/il5MsrZp7mGg3mSQfn742na2T+1/vHDCG5/iTI3X9MKUuYUZVLQhyRsg06mCgDBTd57TxzgZt7P+fYfjRLtA==",\n      "requires": {\n        "create-hash": "1.1.2",\n        "create-hmac": "1.1.4",\n        "ripemd160": "2.0.1",\n        "safe-buffer": "5.0.1",\n        "sha.js": "2.4.8"\n      }\n    },\n    "performance-now": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",\n      "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="\n    },\n    "pify": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/pify/-/pify-3.0.0.tgz",\n      "integrity": "sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY="\n    },\n    "pinkie": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz",\n      "integrity": "sha1-clVrgM+g1IqXToDnckjoDtT3+HA="\n    },\n    "pinkie-promise": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz",\n      "integrity": "sha1-ITXW36ejWMBprJsXh3YogihFD/o=",\n      "requires": {\n        "pinkie": "2.0.0"\n      }\n    },\n    "pirates": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.1.tgz",\n      "integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+Men7AuVdX6TA+s+uGA==",\n      "requires": {\n        "node-modules-regexp": "1.0.0"\n      }\n    },\n    "pkg-dir": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/pkg-dir/-/pkg-dir-3.0.0.tgz",\n      "integrity": "sha512-/E57AYkoeQ25qkxMj5PBOVgF8Kiu/h7cYS30Z5+R7WaiCCBfLq58ZI/dSeaEKb9WVJV5n/03QwrN3IeWIFllvw==",\n      "requires": {\n        "find-up": "3.0.0"\n      }\n    },\n    "pkg-up": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/pkg-up/-/pkg-up-2.0.0.tgz",\n      "integrity": "sha1-yBmscoBZpGHKscOImivjxJoATX8=",\n      "requires": {\n        "find-up": "2.1.0"\n      },\n      "dependencies": {\n        "find-up": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/find-up/-/find-up-2.1.0.tgz",\n          "integrity": "sha1-RdG35QbHF93UgndaK3eSCjwMV6c=",\n          "requires": {\n            "locate-path": "2.0.0"\n          }\n        },\n        "locate-path": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-2.0.0.tgz",\n          "integrity": "sha1-K1aLJl7slExtnA3pw9u7ygNUzY4=",\n          "requires": {\n            "p-locate": "2.0.0",\n            "path-exists": "3.0.0"\n          }\n        },\n        "p-limit": {\n          "version": "1.3.0",\n          "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-1.3.0.tgz",\n          "integrity": "sha512-vvcXsLAJ9Dr5rQOPk7toZQZJApBl2K4J6dANSsEuh6QI41JYcsS/qhTGa9ErIUUgK3WNQoJYvylxvjqmiqEA9Q==",\n          "requires": {\n            "p-try": "1.0.0"\n          }\n        },\n        "p-locate": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-2.0.0.tgz",\n          "integrity": "sha1-IKAQOyIqcMj9OcwuWAaA893l7EM=",\n          "requires": {\n            "p-limit": "1.1.0"\n          }\n        },\n        "p-try": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/p-try/-/p-try-1.0.0.tgz",\n          "integrity": "sha1-y8ec26+P1CKOE/Yh8rGiN8GyB7M="\n        }\n      }\n    },\n    "plugin-error": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-1.0.1.tgz",\n      "integrity": "sha512-L1zP0dk7vGweZME2i+EeakvUNqSrdiI3F91TwEoYiGrAfUXmVv6fJIq4g82PAXxNsWOp0J7ZqQy/3Szz0ajTxA==",\n      "requires": {\n        "ansi-colors": "1.0.1",\n        "arr-diff": "4.0.0",\n        "arr-union": "3.1.0",\n        "extend-shallow": "3.0.2"\n      },\n      "dependencies": {\n        "ansi-colors": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-colors/-/ansi-colors-1.1.0.tgz",\n          "integrity": "sha512-SFKX67auSNoVR38N3L+nvsPjOE0bybKTYbkf5tRvushrAPQ9V75huw0ZxBkKVeRU9kqH3d6HA4xTckbwZ4ixmA==",\n          "requires": {\n            "ansi-wrap": "0.1.0"\n          }\n        }\n      }\n    },\n    "pn": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/pn/-/pn-1.1.0.tgz",\n      "integrity": "sha512-2qHaIQr2VLRFoxe2nASzsV6ef4yOOH+Fi9FBOVH6cqeSgUnoyySPZkxzLuzd+RYOQTRpROA0ztTMqxROKSb/nA=="\n    },\n    "pnp-webpack-plugin": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/pnp-webpack-plugin/-/pnp-webpack-plugin-1.2.1.tgz",\n      "integrity": "sha512-W6GctK7K2qQiVR+gYSv/Gyt6jwwIH4vwdviFqx+Y2jAtVf5eZyYIDf5Ac2NCDMBiX5yWscBLZElPTsyA1UtVVA==",\n      "requires": {\n        "ts-pnp": "1.0.0"\n      }\n    },\n    "popper.js": {\n      "version": "1.15.0",\n      "resolved": "https://registry.npmjs.org/popper.js/-/popper.js-1.15.0.tgz",\n      "integrity": "sha512-w010cY1oCUmI+9KwwlWki+r5jxKfTFDVoadl7MSrIujHU5MJ5OR6HTDj6Xo8aoR/QsA56x8jKjA59qGH4ELtrA=="\n    },\n    "portfinder": {\n      "version": "1.0.20",\n      "resolved": "https://registry.npmjs.org/portfinder/-/portfinder-1.0.20.tgz",\n      "integrity": "sha512-Yxe4mTyDzTd59PZJY4ojZR8F+E5e97iq2ZOHPz3HDgSvYC5siNad2tLooQ5y5QHyQhc3xVqvyk/eNA3wuoa7Sw==",\n      "requires": {\n        "async": "1.5.2",\n        "debug": "2.2.0",\n        "mkdirp": "0.5.x"\n      },\n      "dependencies": {\n        "async": {\n          "version": "1.5.2",\n          "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",\n          "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo="\n        },\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "posix-character-classes": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz",\n      "integrity": "sha1-AerA/jta9xoqbAL+q7jB/vfgDqs="\n    },\n    "postcss": {\n      "version": "7.0.14",\n      "resolved": "https://registry.npmjs.org/postcss/-/postcss-7.0.14.tgz",\n      "integrity": "sha512-NsbD6XUUMZvBxtQAJuWDJeeC4QFsmWsfozWxCJPWf3M55K9iu2iMDaKqyoOdTJ1R4usBXuxlVFAIo8rZPQD4Bg==",\n      "requires": {\n        "chalk": "2.4.2",\n        "source-map": "0.6.1",\n        "supports-color": "6.1.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        },\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "3.0.0"\n          }\n        }\n      }\n    },\n    "postcss-attribute-case-insensitive": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-attribute-case-insensitive/-/postcss-attribute-case-insensitive-4.0.1.tgz",\n      "integrity": "sha512-L2YKB3vF4PetdTIthQVeT+7YiSzMoNMLLYxPXXppOOP7NoazEAy45sh2LvJ8leCQjfBcfkYQs8TtCcQjeZTp8A==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-selector-parser": "5.0.0"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "2.0.0",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-browser-comments": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-browser-comments/-/postcss-browser-comments-2.0.0.tgz",\n      "integrity": "sha512-xGG0UvoxwBc4Yx4JX3gc0RuDl1kc4bVihCzzk6UC72YPfq5fu3c717Nu8Un3nvnq1BJ31gBnFXIG/OaUTnpHgA==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-calc": {\n      "version": "7.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-calc/-/postcss-calc-7.0.1.tgz",\n      "integrity": "sha512-oXqx0m6tb4N3JGdmeMSc/i91KppbYsFZKdH0xMOqK8V1rJlzrKlTdokz8ozUXLVejydRN6u2IddxpcijRj2FqQ==",\n      "requires": {\n        "css-unit-converter": "1.1.1",\n        "postcss": "7.0.5",\n        "postcss-selector-parser": "5.0.0-rc.4",\n        "postcss-value-parser": "3.3.1"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "2.0.0",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-color-functional-notation": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-color-functional-notation/-/postcss-color-functional-notation-2.0.1.tgz",\n      "integrity": "sha512-ZBARCypjEDofW4P6IdPVTLhDNXPRn8T2s1zHbZidW6rPaaZvcnCS2soYFIQJrMZSxiePJ2XIYTlcb2ztr/eT2g==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-color-gray": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-color-gray/-/postcss-color-gray-5.0.0.tgz",\n      "integrity": "sha512-q6BuRnAGKM/ZRpfDascZlIZPjvwsRye7UDNalqVz3s7GDxMtqPY6+Q871liNxsonUw8oC61OG+PSaysYpl1bnw==",\n      "requires": {\n        "@csstools/convert-colors": "1.4.0",\n        "postcss": "7.0.5",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-color-hex-alpha": {\n      "version": "5.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-color-hex-alpha/-/postcss-color-hex-alpha-5.0.3.tgz",\n      "integrity": "sha512-PF4GDel8q3kkreVXKLAGNpHKilXsZ6xuu+mOQMHWHLPNyjiUBOr75sp5ZKJfmv1MCus5/DWUGcK9hm6qHEnXYw==",\n      "requires": {\n        "postcss": "7.0.14",\n        "postcss-values-parser": "2.0.1"\n      }\n    },\n    "postcss-color-mod-function": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-color-mod-function/-/postcss-color-mod-function-3.0.3.tgz",\n      "integrity": "sha512-YP4VG+xufxaVtzV6ZmhEtc+/aTXH3d0JLpnYfxqTvwZPbJhWqp8bSY3nfNzNRFLgB4XSaBA82OE4VjOOKpCdVQ==",\n      "requires": {\n        "@csstools/convert-colors": "1.4.0",\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-color-rebeccapurple": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-color-rebeccapurple/-/postcss-color-rebeccapurple-4.0.1.tgz",\n      "integrity": "sha512-aAe3OhkS6qJXBbqzvZth2Au4V3KieR5sRQ4ptb2b2O8wgvB3SJBsdG+jsn2BZbbwekDG8nTfcCNKcSfe/lEy8g==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-colormin": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-colormin/-/postcss-colormin-4.0.3.tgz",\n      "integrity": "sha512-WyQFAdDZpExQh32j0U0feWisZ0dmOtPl44qYmJKkq9xFWY3p+4qnRzCHeNrkeRhwPHz9bQ3mo0/yVkaply0MNw==",\n      "requires": {\n        "browserslist": "4.0.0",\n        "color": "3.0.0",\n        "has": "1.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-convert-values": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-convert-values/-/postcss-convert-values-4.0.1.tgz",\n      "integrity": "sha512-Kisdo1y77KUC0Jmn0OXU/COOJbzM8cImvw1ZFsBgBgMgb1iL23Zs/LXRe3r+EZqM3vGYKdQ2YJVQ5VkJI+zEJQ==",\n      "requires": {\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-custom-media": {\n      "version": "7.0.8",\n      "resolved": "https://registry.npmjs.org/postcss-custom-media/-/postcss-custom-media-7.0.8.tgz",\n      "integrity": "sha512-c9s5iX0Ge15o00HKbuRuTqNndsJUbaXdiNsksnVH8H4gdc+zbLzr/UasOwNG6CTDpLFekVY4672eWdiiWu2GUg==",\n      "requires": {\n        "postcss": "7.0.14"\n      }\n    },\n    "postcss-custom-properties": {\n      "version": "8.0.10",\n      "resolved": "https://registry.npmjs.org/postcss-custom-properties/-/postcss-custom-properties-8.0.10.tgz",\n      "integrity": "sha512-GDL0dyd7++goDR4SSasYdRNNvp4Gqy1XMzcCnTijiph7VB27XXpJ8bW/AI0i2VSBZ55TpdGhMr37kMSpRfYD0Q==",\n      "requires": {\n        "postcss": "7.0.14",\n        "postcss-values-parser": "2.0.1"\n      }\n    },\n    "postcss-custom-selectors": {\n      "version": "5.1.2",\n      "resolved": "https://registry.npmjs.org/postcss-custom-selectors/-/postcss-custom-selectors-5.1.2.tgz",\n      "integrity": "sha512-DSGDhqinCqXqlS4R7KGxL1OSycd1lydugJ1ky4iRXPHdBRiozyMHrdu0H3o7qNOCiZwySZTUI5MV0T8QhCLu+w==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-selector-parser": "5.0.0-rc.3"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "2.0.0",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-dir-pseudo-class": {\n      "version": "5.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-dir-pseudo-class/-/postcss-dir-pseudo-class-5.0.0.tgz",\n      "integrity": "sha512-3pm4oq8HYWMZePJY+5ANriPs3P07q+LW6FAdTlkFH2XqDdP4HeeJYMOzn0HYLhRSjBO3fhiqSwwU9xEULSrPgw==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-selector-parser": "5.0.0-rc.3"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "2.0.0",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-discard-comments": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-discard-comments/-/postcss-discard-comments-4.0.2.tgz",\n      "integrity": "sha512-RJutN259iuRf3IW7GZyLM5Sw4GLTOH8FmsXBnv8Ab/Tc2k4SR4qbV4DNbyyY4+Sjo362SyDmW2DQ7lBSChrpkg==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-discard-duplicates": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-discard-duplicates/-/postcss-discard-duplicates-4.0.2.tgz",\n      "integrity": "sha512-ZNQfR1gPNAiXZhgENFfEglF93pciw0WxMkJeVmw8eF+JZBbMD7jp6C67GqJAXVZP2BWbOztKfbsdmMp/k8c6oQ==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-discard-empty": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-discard-empty/-/postcss-discard-empty-4.0.1.tgz",\n      "integrity": "sha512-B9miTzbznhDjTfjvipfHoqbWKwd0Mj+/fL5s1QOz06wufguil+Xheo4XpOnc4NqKYBCNqqEzgPv2aPBIJLox0w==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-discard-overridden": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-discard-overridden/-/postcss-discard-overridden-4.0.1.tgz",\n      "integrity": "sha512-IYY2bEDD7g1XM1IDEsUT4//iEYCxAmP5oDSFMVU/JVvT7gh+l4fmjciLqGgwjdWpQIdb0Che2VX00QObS5+cTg==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-double-position-gradients": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-double-position-gradients/-/postcss-double-position-gradients-1.0.0.tgz",\n      "integrity": "sha512-G+nV8EnQq25fOI8CH/B6krEohGWnF5+3A6H/+JEpOncu5dCnkS1QQ6+ct3Jkaepw1NGVqqOZH6lqrm244mCftA==",\n      "requires": {\n        "postcss": "7.0.5",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-env-function": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-env-function/-/postcss-env-function-2.0.2.tgz",\n      "integrity": "sha512-rwac4BuZlITeUbiBq60h/xbLzXY43qOsIErngWa4l7Mt+RaSkT7QBjXVGTcBHupykkblHMDrBFh30zchYPaOUw==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-flexbugs-fixes": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/postcss-flexbugs-fixes/-/postcss-flexbugs-fixes-4.1.0.tgz",\n      "integrity": "sha512-jr1LHxQvStNNAHlgco6PzY308zvLklh7SJVYuWUwyUQncofaAlD2l+P/gxKHOdqWKe7xJSkVLFF/2Tp+JqMSZA==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-focus-visible": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-focus-visible/-/postcss-focus-visible-4.0.0.tgz",\n      "integrity": "sha512-Z5CkWBw0+idJHSV6+Bgf2peDOFf/x4o+vX/pwcNYrWpXFrSfTkQ3JQ1ojrq9yS+upnAlNRHeg8uEwFTgorjI8g==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-focus-within": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-focus-within/-/postcss-focus-within-3.0.0.tgz",\n      "integrity": "sha512-W0APui8jQeBKbCGZudW37EeMCjDeVxKgiYfIIEo8Bdh5SpB9sxds/Iq8SEuzS0Q4YFOlG7EPFulbbxujpkrV2w==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-font-variant": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-font-variant/-/postcss-font-variant-4.0.0.tgz",\n      "integrity": "sha512-M8BFYKOvCrI2aITzDad7kWuXXTm0YhGdP9Q8HanmN4EF1Hmcgs1KK5rSHylt/lUJe8yLxiSwWAHdScoEiIxztg==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-gap-properties": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-gap-properties/-/postcss-gap-properties-2.0.0.tgz",\n      "integrity": "sha512-QZSqDaMgXCHuHTEzMsS2KfVDOq7ZFiknSpkrPJY6jmxbugUPTuSzs/vuE5I3zv0WAS+3vhrlqhijiprnuQfzmg==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-image-set-function": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-image-set-function/-/postcss-image-set-function-3.0.1.tgz",\n      "integrity": "sha512-oPTcFFip5LZy8Y/whto91L9xdRHCWEMs3e1MdJxhgt4jy2WYXfhkng59fH5qLXSCPN8k4n94p1Czrfe5IOkKUw==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-initial": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-initial/-/postcss-initial-3.0.0.tgz",\n      "integrity": "sha512-WzrqZ5nG9R9fUtrA+we92R4jhVvEB32IIRTzfIG/PLL8UV4CvbF1ugTEHEFX6vWxl41Xt5RTCJPEZkuWzrOM+Q==",\n      "requires": {\n        "lodash.template": "4.2.4",\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-lab-function": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-lab-function/-/postcss-lab-function-2.0.1.tgz",\n      "integrity": "sha512-whLy1IeZKY+3fYdqQFuDBf8Auw+qFuVnChWjmxm/UhHWqNHZx+B99EwxTvGYmUBqe3Fjxs4L1BoZTJmPu6usVg==",\n      "requires": {\n        "@csstools/convert-colors": "1.4.0",\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-load-config": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-2.0.0.tgz",\n      "integrity": "sha512-V5JBLzw406BB8UIfsAWSK2KSwIJ5yoEIVFb4gVkXci0QdKgA24jLmHZ/ghe/GgX0lJ0/D1uUK1ejhzEY94MChQ==",\n      "requires": {\n        "cosmiconfig": "4.0.0",\n        "import-cwd": "2.0.0"\n      },\n      "dependencies": {\n        "cosmiconfig": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/cosmiconfig/-/cosmiconfig-4.0.0.tgz",\n          "integrity": "sha512-6e5vDdrXZD+t5v0L8CrurPeybg4Fmf+FCSYxXKYVAqLUtyCSbuyqE059d0kDthTNRzKVjL7QMgNpEUlsoYH3iQ==",\n          "requires": {\n            "is-directory": "0.3.1",\n            "js-yaml": "3.9.0",\n            "parse-json": "4.0.0",\n            "require-from-string": "2.0.1"\n          }\n        }\n      }\n    },\n    "postcss-loader": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-loader/-/postcss-loader-3.0.0.tgz",\n      "integrity": "sha512-cLWoDEY5OwHcAjDnkyRQzAXfs2jrKjXpO/HQFcc5b5u/r7aa471wdmChmwfnv7x2u840iat/wi0lQ5nbRgSkUA==",\n      "requires": {\n        "loader-utils": "1.1.0",\n        "postcss": "7.0.0",\n        "postcss-load-config": "2.0.0",\n        "schema-utils": "1.0.0"\n      }\n    },\n    "postcss-logical": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-logical/-/postcss-logical-3.0.0.tgz",\n      "integrity": "sha512-1SUKdJc2vuMOmeItqGuNaC+N8MzBWFWEkAnRnLpFYj1tGGa7NqyVBujfRtgNa2gXR+6RkGUiB2O5Vmh7E2RmiA==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-media-minmax": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-media-minmax/-/postcss-media-minmax-4.0.0.tgz",\n      "integrity": "sha512-fo9moya6qyxsjbFAYl97qKO9gyre3qvbMnkOZeZwlsW6XYFsvs2DMGDlchVLfAd8LHPZDxivu/+qW2SMQeTHBw==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-merge-longhand": {\n      "version": "4.0.11",\n      "resolved": "https://registry.npmjs.org/postcss-merge-longhand/-/postcss-merge-longhand-4.0.11.tgz",\n      "integrity": "sha512-alx/zmoeXvJjp7L4mxEMjh8lxVlDFX1gqWHzaaQewwMZiVhLo42TEClKaeHbRf6J7j82ZOdTJ808RtN0ZOZwvw==",\n      "requires": {\n        "css-color-names": "0.0.4",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0",\n        "stylehacks": "4.0.0"\n      }\n    },\n    "postcss-merge-rules": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-merge-rules/-/postcss-merge-rules-4.0.3.tgz",\n      "integrity": "sha512-U7e3r1SbvYzO0Jr3UT/zKBVgYYyhAz0aitvGIYOYK5CPmkNih+WDSsS5tvPrJ8YMQYlEMvsZIiqmn7HdFUaeEQ==",\n      "requires": {\n        "browserslist": "4.0.0",\n        "caniuse-api": "3.0.0",\n        "cssnano-util-same-parent": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-selector-parser": "3.0.0",\n        "vendors": "1.0.0"\n      },\n      "dependencies": {\n        "postcss-selector-parser": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz",\n          "integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=",\n          "requires": {\n            "dot-prop": "4.1.1",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-minify-font-values": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-font-values/-/postcss-minify-font-values-4.0.2.tgz",\n      "integrity": "sha512-j85oO6OnRU9zPf04+PZv1LYIYOprWm6IA6zkXkrJXyRveDEuQggG6tvoy8ir8ZwjLxLuGfNkCZEQG7zan+Hbtg==",\n      "requires": {\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-minify-gradients": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-gradients/-/postcss-minify-gradients-4.0.2.tgz",\n      "integrity": "sha512-qKPfwlONdcf/AndP1U8SJ/uzIJtowHlMaSioKzebAXSG4iJthlWC9iSWznQcX4f66gIWX44RSA841HTHj3wK+Q==",\n      "requires": {\n        "cssnano-util-get-arguments": "4.0.0",\n        "is-color-stop": "1.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-minify-params": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-params/-/postcss-minify-params-4.0.2.tgz",\n      "integrity": "sha512-G7eWyzEx0xL4/wiBBJxJOz48zAKV2WG3iZOqVhPet/9geefm/Px5uo1fzlHu+DOjT+m0Mmiz3jkQzVHe6wxAWg==",\n      "requires": {\n        "alphanum-sort": "1.0.0",\n        "browserslist": "4.0.0",\n        "cssnano-util-get-arguments": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0",\n        "uniqs": "2.0.0"\n      }\n    },\n    "postcss-minify-selectors": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-minify-selectors/-/postcss-minify-selectors-4.0.2.tgz",\n      "integrity": "sha512-D5S1iViljXBj9kflQo4YutWnJmwm8VvIsU1GeXJGiG9j8CIg9zs4voPMdQDUmIxetUOh60VilsNzCiAFTOqu3g==",\n      "requires": {\n        "alphanum-sort": "1.0.0",\n        "has": "1.0.0",\n        "postcss": "7.0.0",\n        "postcss-selector-parser": "3.0.0"\n      },\n      "dependencies": {\n        "postcss-selector-parser": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz",\n          "integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=",\n          "requires": {\n            "dot-prop": "4.1.1",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-modules-extract-imports": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-modules-extract-imports/-/postcss-modules-extract-imports-2.0.0.tgz",\n      "integrity": "sha512-LaYLDNS4SG8Q5WAWqIJgdHPJrDDr/Lv775rMBFUbgjTz6j34lUznACHcdRWroPvXANP2Vj7yNK57vp9eFqzLWQ==",\n      "requires": {\n        "postcss": "7.0.5"\n      }\n    },\n    "postcss-modules-local-by-default": {\n      "version": "2.0.6",\n      "resolved": "https://registry.npmjs.org/postcss-modules-local-by-default/-/postcss-modules-local-by-default-2.0.6.tgz",\n      "integrity": "sha512-oLUV5YNkeIBa0yQl7EYnxMgy4N6noxmiwZStaEJUSe2xPMcdNc8WmBQuQCx18H5psYbVxz8zoHk0RAAYZXP9gA==",\n      "requires": {\n        "postcss": "7.0.6",\n        "postcss-selector-parser": "6.0.0",\n        "postcss-value-parser": "3.3.1"\n      }\n    },\n    "postcss-modules-scope": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/postcss-modules-scope/-/postcss-modules-scope-2.1.0.tgz",\n      "integrity": "sha512-91Rjps0JnmtUB0cujlc8KIKCsJXWjzuxGeT/+Q2i2HXKZ7nBUeF9YQTZZTNvHVoNYj1AthsjnGLtqDUE0Op79A==",\n      "requires": {\n        "postcss": "7.0.6",\n        "postcss-selector-parser": "6.0.0"\n      }\n    },\n    "postcss-modules-values": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-modules-values/-/postcss-modules-values-2.0.0.tgz",\n      "integrity": "sha512-Ki7JZa7ff1N3EIMlPnGTZfUMe69FFwiQPnVSXC9mnn3jozCRBYIxiZd44yJOV2AmabOo4qFf8s0dC/+lweG7+w==",\n      "requires": {\n        "icss-replace-symbols": "1.1.0",\n        "postcss": "7.0.6"\n      }\n    },\n    "postcss-nesting": {\n      "version": "7.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-nesting/-/postcss-nesting-7.0.0.tgz",\n      "integrity": "sha512-WSsbVd5Ampi3Y0nk/SKr5+K34n52PqMqEfswu6RtU4r7wA8vSD+gM8/D9qq4aJkHImwn1+9iEFTbjoWsQeqtaQ==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-normalize": {\n      "version": "7.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize/-/postcss-normalize-7.0.1.tgz",\n      "integrity": "sha512-NOp1fwrG+6kVXWo7P9SizCHX6QvioxFD/hZcI2MLxPmVnFJFC0j0DDpIuNw2tUDeCFMni59gCVgeJ1/hYhj2OQ==",\n      "requires": {\n        "@csstools/normalize.css": "9.0.1",\n        "browserslist": "4.1.1",\n        "postcss": "7.0.2",\n        "postcss-browser-comments": "2.0.0"\n      }\n    },\n    "postcss-normalize-charset": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-charset/-/postcss-normalize-charset-4.0.1.tgz",\n      "integrity": "sha512-gMXCrrlWh6G27U0hF3vNvR3w8I1s2wOBILvA87iNXaPvSNo5uZAMYsZG7XjCUf1eVxuPfyL4TJ7++SGZLc9A3g==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-normalize-display-values": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-display-values/-/postcss-normalize-display-values-4.0.2.tgz",\n      "integrity": "sha512-3F2jcsaMW7+VtRMAqf/3m4cPFhPD3EFRgNs18u+k3lTJJlVe7d0YPO+bnwqo2xg8YiRpDXJI2u8A0wqJxMsQuQ==",\n      "requires": {\n        "cssnano-util-get-match": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-positions": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-positions/-/postcss-normalize-positions-4.0.2.tgz",\n      "integrity": "sha512-Dlf3/9AxpxE+NF1fJxYDeggi5WwV35MXGFnnoccP/9qDtFrTArZ0D0R+iKcg5WsUd8nUYMIl8yXDCtcrT8JrdA==",\n      "requires": {\n        "cssnano-util-get-arguments": "4.0.0",\n        "has": "1.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-repeat-style": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-repeat-style/-/postcss-normalize-repeat-style-4.0.2.tgz",\n      "integrity": "sha512-qvigdYYMpSuoFs3Is/f5nHdRLJN/ITA7huIoCyqqENJe9PvPmLhNLMu7QTjPdtnVf6OcYYO5SHonx4+fbJE1+Q==",\n      "requires": {\n        "cssnano-util-get-arguments": "4.0.0",\n        "cssnano-util-get-match": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-string": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-string/-/postcss-normalize-string-4.0.2.tgz",\n      "integrity": "sha512-RrERod97Dnwqq49WNz8qo66ps0swYZDSb6rM57kN2J+aoyEAJfZ6bMx0sx/F9TIEX0xthPGCmeyiam/jXif0eA==",\n      "requires": {\n        "has": "1.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-timing-functions": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-timing-functions/-/postcss-normalize-timing-functions-4.0.2.tgz",\n      "integrity": "sha512-acwJY95edP762e++00Ehq9L4sZCEcOPyaHwoaFOhIwWCDfik6YvqsYNxckee65JHLKzuNSSmAdxwD2Cud1Z54A==",\n      "requires": {\n        "cssnano-util-get-match": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-unicode": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-unicode/-/postcss-normalize-unicode-4.0.1.tgz",\n      "integrity": "sha512-od18Uq2wCYn+vZ/qCOeutvHjB5jm57ToxRaMeNuf0nWVHaP9Hua56QyMF6fs/4FSUnVIw0CBPsU0K4LnBPwYwg==",\n      "requires": {\n        "browserslist": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-url": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-url/-/postcss-normalize-url-4.0.1.tgz",\n      "integrity": "sha512-p5oVaF4+IHwu7VpMan/SSpmpYxcJMtkGppYf0VbdH5B6hN8YNmVyJLuY9FmLQTzY3fag5ESUUHDqM+heid0UVA==",\n      "requires": {\n        "is-absolute-url": "2.0.0",\n        "normalize-url": "3.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-normalize-whitespace": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-normalize-whitespace/-/postcss-normalize-whitespace-4.0.2.tgz",\n      "integrity": "sha512-tO8QIgrsI3p95r8fyqKV+ufKlSHh9hMJqACqbv2XknufqEDhDvbguXGBBqxw9nsQoXWf0qOqppziKJKHMD4GtA==",\n      "requires": {\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-ordered-values": {\n      "version": "4.1.2",\n      "resolved": "https://registry.npmjs.org/postcss-ordered-values/-/postcss-ordered-values-4.1.2.tgz",\n      "integrity": "sha512-2fCObh5UanxvSxeXrtLtlwVThBvHn6MQcu4ksNT2tsaV2Fg76R2CV98W7wNSlX+5/pFwEyaDwKLLoEV7uRybAw==",\n      "requires": {\n        "cssnano-util-get-arguments": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-overflow-shorthand": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-overflow-shorthand/-/postcss-overflow-shorthand-2.0.0.tgz",\n      "integrity": "sha512-aK0fHc9CBNx8jbzMYhshZcEv8LtYnBIRYQD5i7w/K/wS9c2+0NSR6B3OVMu5y0hBHYLcMGjfU+dmWYNKH0I85g==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-page-break": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-page-break/-/postcss-page-break-2.0.0.tgz",\n      "integrity": "sha512-tkpTSrLpfLfD9HvgOlJuigLuk39wVTbbd8RKcy8/ugV2bNBUW3xU+AIqyxhDrQr1VUj1RmyJrBn1YWrqUm9zAQ==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-place": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-place/-/postcss-place-4.0.1.tgz",\n      "integrity": "sha512-Zb6byCSLkgRKLODj/5mQugyuj9bvAAw9LqJJjgwz5cYryGeXfFZfSXoP1UfveccFmeq0b/2xxwcTEVScnqGxBg==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-values-parser": "2.0.0"\n      }\n    },\n    "postcss-preset-env": {\n      "version": "6.6.0",\n      "resolved": "https://registry.npmjs.org/postcss-preset-env/-/postcss-preset-env-6.6.0.tgz",\n      "integrity": "sha512-I3zAiycfqXpPIFD6HXhLfWXIewAWO8emOKz+QSsxaUZb9Dp8HbF5kUf+4Wy/AxR33o+LRoO8blEWCHth0ZsCLA==",\n      "requires": {\n        "autoprefixer": "9.4.9",\n        "browserslist": "4.4.2",\n        "caniuse-lite": "1.0.30000939",\n        "css-blank-pseudo": "0.1.4",\n        "css-has-pseudo": "0.10.0",\n        "css-prefers-color-scheme": "3.1.1",\n        "cssdb": "4.3.0",\n        "postcss": "7.0.14",\n        "postcss-attribute-case-insensitive": "4.0.1",\n        "postcss-color-functional-notation": "2.0.1",\n        "postcss-color-gray": "5.0.0",\n        "postcss-color-hex-alpha": "5.0.2",\n        "postcss-color-mod-function": "3.0.3",\n        "postcss-color-rebeccapurple": "4.0.1",\n        "postcss-custom-media": "7.0.7",\n        "postcss-custom-properties": "8.0.9",\n        "postcss-custom-selectors": "5.1.2",\n        "postcss-dir-pseudo-class": "5.0.0",\n        "postcss-double-position-gradients": "1.0.0",\n        "postcss-env-function": "2.0.2",\n        "postcss-focus-visible": "4.0.0",\n        "postcss-focus-within": "3.0.0",\n        "postcss-font-variant": "4.0.0",\n        "postcss-gap-properties": "2.0.0",\n        "postcss-image-set-function": "3.0.1",\n        "postcss-initial": "3.0.0",\n        "postcss-lab-function": "2.0.1",\n        "postcss-logical": "3.0.0",\n        "postcss-media-minmax": "4.0.0",\n        "postcss-nesting": "7.0.0",\n        "postcss-overflow-shorthand": "2.0.0",\n        "postcss-page-break": "2.0.0",\n        "postcss-place": "4.0.1",\n        "postcss-pseudo-class-any-link": "6.0.0",\n        "postcss-replace-overflow-wrap": "3.0.0",\n        "postcss-selector-matches": "4.0.0",\n        "postcss-selector-not": "4.0.0"\n      }\n    },\n    "postcss-pseudo-class-any-link": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-pseudo-class-any-link/-/postcss-pseudo-class-any-link-6.0.0.tgz",\n      "integrity": "sha512-lgXW9sYJdLqtmw23otOzrtbDXofUdfYzNm4PIpNE322/swES3VU9XlXHeJS46zT2onFO7V1QFdD4Q9LiZj8mew==",\n      "requires": {\n        "postcss": "7.0.2",\n        "postcss-selector-parser": "5.0.0-rc.3"\n      },\n      "dependencies": {\n        "cssesc": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-2.0.0.tgz",\n          "integrity": "sha512-MsCAG1z9lPdoO/IUMLSBWBSVxVtJ1395VGIQ+Fc2gNdkQ1hNDnQdw3YhA71WJCBW1vdwA0cAnk/DnW6bqoEUYg=="\n        },\n        "postcss-selector-parser": {\n          "version": "5.0.0",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-5.0.0.tgz",\n          "integrity": "sha512-w+zLE5Jhg6Liz8+rQOWEAwtwkyqpfnmsinXjXg6cY7YIONZZtgvE0v2O0uhQBs0peNomOJwWRKt6JBfTdTd3OQ==",\n          "requires": {\n            "cssesc": "2.0.0",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "postcss-reduce-initial": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/postcss-reduce-initial/-/postcss-reduce-initial-4.0.3.tgz",\n      "integrity": "sha512-gKWmR5aUulSjbzOfD9AlJiHCGH6AEVLaM0AV+aSioxUDd16qXP1PCh8d1/BGVvpdWn8k/HiK7n6TjeoXN1F7DA==",\n      "requires": {\n        "browserslist": "4.0.0",\n        "caniuse-api": "3.0.0",\n        "has": "1.0.0",\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-reduce-transforms": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-reduce-transforms/-/postcss-reduce-transforms-4.0.2.tgz",\n      "integrity": "sha512-EEVig1Q2QJ4ELpJXMZR8Vt5DQx8/mo+dGWSR7vWXqcob2gQLyQGsionYcGKATXvQzMPn6DSN1vTN7yFximdIAg==",\n      "requires": {\n        "cssnano-util-get-match": "4.0.0",\n        "has": "1.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0"\n      }\n    },\n    "postcss-replace-overflow-wrap": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-replace-overflow-wrap/-/postcss-replace-overflow-wrap-3.0.0.tgz",\n      "integrity": "sha512-2T5hcEHArDT6X9+9dVSPQdo7QHzG4XKclFT8rU5TzJPDN7RIRTbO9c4drUISOVemLj03aezStHCR2AIcr8XLpw==",\n      "requires": {\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-safe-parser": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-safe-parser/-/postcss-safe-parser-4.0.1.tgz",\n      "integrity": "sha512-xZsFA3uX8MO3yAda03QrG3/Eg1LN3EPfjjf07vke/46HERLZyHrTsQ9E1r1w1W//fWEhtYNndo2hQplN2cVpCQ==",\n      "requires": {\n        "postcss": "7.0.0"\n      }\n    },\n    "postcss-selector-matches": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-selector-matches/-/postcss-selector-matches-4.0.0.tgz",\n      "integrity": "sha512-LgsHwQR/EsRYSqlwdGzeaPKVT0Ml7LAT6E75T8W8xLJY62CE4S/l03BWIt3jT8Taq22kXP08s2SfTSzaraoPww==",\n      "requires": {\n        "balanced-match": "1.0.0",\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-selector-not": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/postcss-selector-not/-/postcss-selector-not-4.0.0.tgz",\n      "integrity": "sha512-W+bkBZRhqJaYN8XAnbbZPLWMvZD1wKTu0UxtFKdhtGjWYmxhkUneoeOhRJKdAE5V7ZTlnbHfCR+6bNwK9e1dTQ==",\n      "requires": {\n        "balanced-match": "1.0.0",\n        "postcss": "7.0.2"\n      }\n    },\n    "postcss-selector-parser": {\n      "version": "6.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.0.2.tgz",\n      "integrity": "sha512-36P2QR59jDTOAiIkqEprfJDsoNrvwFei3eCqKd1Y0tUsBimsq39BLp7RD+JWny3WgB1zGhJX8XVePwm9k4wdBg==",\n      "requires": {\n        "cssesc": "3.0.0",\n        "indexes-of": "1.0.1",\n        "uniq": "1.0.1"\n      }\n    },\n    "postcss-svgo": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/postcss-svgo/-/postcss-svgo-4.0.2.tgz",\n      "integrity": "sha512-C6wyjo3VwFm0QgBy+Fu7gCYOkCmgmClghO+pjcxvrcBKtiKt0uCF+hvbMO1fyv5BMImRK90SMb+dwUnfbGd+jw==",\n      "requires": {\n        "is-svg": "3.0.0",\n        "postcss": "7.0.0",\n        "postcss-value-parser": "3.0.0",\n        "svgo": "1.0.0"\n      }\n    },\n    "postcss-unique-selectors": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-unique-selectors/-/postcss-unique-selectors-4.0.1.tgz",\n      "integrity": "sha512-+JanVaryLo9QwZjKrmJgkI4Fn8SBgRO6WXQBJi7KiAVPlmxikB5Jzc4EvXMT2H0/m0RjrVVm9rGNhZddm/8Spg==",\n      "requires": {\n        "alphanum-sort": "1.0.0",\n        "postcss": "7.0.0",\n        "uniqs": "2.0.0"\n      }\n    },\n    "postcss-value-parser": {\n      "version": "3.3.1",\n      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-3.3.1.tgz",\n      "integrity": "sha512-pISE66AbVkp4fDQ7VHBwRNXzAAKJjw4Vw7nWI/+Q3vuly7SNfgYXvm6i5IgFylHGK5sP/xHAbB7N49OS4gWNyQ=="\n    },\n    "postcss-values-parser": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/postcss-values-parser/-/postcss-values-parser-2.0.1.tgz",\n      "integrity": "sha512-2tLuBsA6P4rYTNKCXYG/71C7j1pU6pK503suYOmn4xYrQIzW+opD+7FAFNuGSdZC/3Qfy334QbeMu7MEb8gOxg==",\n      "requires": {\n        "flatten": "1.0.2",\n        "indexes-of": "1.0.1",\n        "uniq": "1.0.1"\n      }\n    },\n    "prelude-ls": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.1.2.tgz",\n      "integrity": "sha1-IZMqVJ9eUv/ZqCf1cOBL5iqX2lQ="\n    },\n    "preserve": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/preserve/-/preserve-0.2.0.tgz",\n      "integrity": "sha1-gV7R9uvGWSb4ZbMQwHE7yzMVzks="\n    },\n    "pretty-bytes": {\n      "version": "5.1.0",\n      "resolved": "https://registry.npmjs.org/pretty-bytes/-/pretty-bytes-5.1.0.tgz",\n      "integrity": "sha512-wa5+qGVg9Yt7PB6rYm3kXlKzgzgivYTLRandezh43jjRqgyDyP+9YxfJpJiLs9yKD1WeU8/OvtToWpW7255FtA=="\n    },\n    "pretty-error": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/pretty-error/-/pretty-error-2.1.1.tgz",\n      "integrity": "sha1-X0+HyPkeWuPzuoerTPXgOxoX8aM=",\n      "requires": {\n        "renderkid": "2.0.1",\n        "utila": "~0.4"\n      }\n    },\n    "pretty-format": {\n      "version": "24.7.0",\n      "resolved": "https://registry.npmjs.org/pretty-format/-/pretty-format-24.7.0.tgz",\n      "integrity": "sha512-apen5cjf/U4dj7tHetpC7UEFCvtAgnNZnBDkfPv3fokzIqyOJckAG9OlAPC1BlFALnqT/lGB2tl9EJjlK6eCsA==",\n      "requires": {\n        "@jest/types": "24.7.0",\n        "ansi-regex": "4.0.0",\n        "ansi-styles": "3.2.0",\n        "react-is": "16.8.4"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        }\n      }\n    },\n    "pretty-hrtime": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/pretty-hrtime/-/pretty-hrtime-1.0.3.tgz",\n      "integrity": "sha1-t+PqQkNaTJsnWdmeDyAesZWALuE="\n    },\n    "private": {\n      "version": "0.1.8",\n      "resolved": "https://registry.npmjs.org/private/-/private-0.1.8.tgz",\n      "integrity": "sha512-VvivMrbvd2nKkiG38qjULzlc+4Vx4wm/whI9pQD35YrARNnhxeiRktSOhSukRLFNlzg6Br/cJPet5J/u19r/mg=="\n    },\n    "process": {\n      "version": "0.11.10",\n      "resolved": "https://registry.npmjs.org/process/-/process-0.11.10.tgz",\n      "integrity": "sha1-czIwDoQBYb2j5podHZGn1LwW8YI="\n    },\n    "process-nextick-args": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.0.tgz",\n      "integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw=="\n    },\n    "progress": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",\n      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA=="\n    },\n    "promise": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/promise/-/promise-8.0.2.tgz",\n      "integrity": "sha512-EIyzM39FpVOMbqgzEHhxdrEhtOSDOtjMZQ0M6iVfCE+kWNgCkAyOdnuCWqfmflylftfadU6FkiMgHZA2kUzwRw==",\n      "requires": {\n        "asap": "~2.0.6"\n      }\n    },\n    "promise-inflight": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/promise-inflight/-/promise-inflight-1.0.1.tgz",\n      "integrity": "sha1-mEcocL8igTL8vdhoEputEsPAKeM="\n    },\n    "prompt-sui": {\n      "version": "3.2.1",\n      "resolved": "https://registry.npmjs.org/prompt-sui/-/prompt-sui-3.2.1.tgz",\n      "integrity": "sha512-dldrpeYMq4c8oGpHoZIzJnCya96eBECHl167PqpPsrnjdo9795gV/hxvJo0RuiKj28cMlhlqZgOYhXHfXtofHQ==",\n      "requires": {\n        "event-stream": "~3.0.20",\n        "inquirer": "3.2.x"\n      },\n      "dependencies": {\n        "ansi-escapes": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-2.0.0.tgz",\n          "integrity": "sha1-W65SvkJIeN2Xg+iRDj/Cki6DyBs="\n        },\n        "chardet": {\n          "version": "0.4.2",\n          "resolved": "https://registry.npmjs.org/chardet/-/chardet-0.4.2.tgz",\n          "integrity": "sha1-tUc7M9yXxCTl2Y3IfVXU2KKci/I="\n        },\n        "external-editor": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/external-editor/-/external-editor-2.2.0.tgz",\n          "integrity": "sha512-bSn6gvGxKt+b7+6TKEv1ZycHleA7aHhRHyAqJyp5pbUFuYYNIzpZnQDk7AsYckyWdEnTeAnay0aCy2aV6iTk9A==",\n          "requires": {\n            "chardet": "0.4.0",\n            "iconv-lite": "0.4.17",\n            "tmp": "0.0.33"\n          }\n        },\n        "inquirer": {\n          "version": "3.2.3",\n          "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-3.2.3.tgz",\n          "integrity": "sha512-Bc3KbimpDTOeQdDj18Ir/rlsGuhBSSNqdOnxaAuKhpkdnMMuKsEGbZD2v5KFF9oso2OU+BPh7+/u5obmFDRmWw==",\n          "requires": {\n            "ansi-escapes": "2.0.0",\n            "chalk": "2.0.0",\n            "cli-cursor": "2.1.0",\n            "cli-width": "2.0.0",\n            "external-editor": "2.0.4",\n            "figures": "2.0.0",\n            "lodash": "4.3.0",\n            "mute-stream": "0.0.7",\n            "run-async": "2.2.0",\n            "rx-lite": "4.0.8",\n            "rx-lite-aggregates": "4.0.8",\n            "string-width": "2.1.0",\n            "strip-ansi": "4.0.0",\n            "through": "2.3.6"\n          }\n        }\n      }\n    },\n    "prompts": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/prompts/-/prompts-2.0.4.tgz",\n      "integrity": "sha512-HTzM3UWp/99A0gk51gAegwo1QRYA7xjcZufMNe33rCclFszUYAuHe1fIN/3ZmiHeGPkUsNaRyQm1hHOfM0PKxA==",\n      "requires": {\n        "kleur": "3.0.2",\n        "sisteransi": "1.0.0"\n      }\n    },\n    "prop-types": {\n      "version": "15.7.2",\n      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.7.2.tgz",\n      "integrity": "sha512-8QQikdH7//R2vurIJSutZ1smHYTcLpRWEOlHnzcWHmBYrOGUysKwSsrC89BCiFj3CbrfJ/nXFdJepOVrY1GCHQ==",\n      "requires": {\n        "loose-envify": "1.4.0",\n        "object-assign": "4.1.1",\n        "react-is": "16.8.1"\n      }\n    },\n    "property-information": {\n      "version": "5.0.1",\n      "resolved": "https://registry.npmjs.org/property-information/-/property-information-5.0.1.tgz",\n      "integrity": "sha512-nAtBDVeSwFM3Ot/YxT7s4NqZmqXI7lLzf46BThvotEtYf2uk2yH0ACYuWQkJ7gxKs49PPtKVY0UlDGkyN9aJlw==",\n      "requires": {\n        "xtend": "4.0.1"\n      }\n    },\n    "proto-list": {\n      "version": "1.2.4",\n      "resolved": "https://registry.npmjs.org/proto-list/-/proto-list-1.2.4.tgz",\n      "integrity": "sha1-IS1b/hMYMGpCD2QCuOJv85ZHqEk="\n    },\n    "proxy-addr": {\n      "version": "2.0.5",\n      "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.5.tgz",\n      "integrity": "sha512-t/7RxHXPH6cJtP0pRG6smSr9QJidhB+3kXu0KgXnbGYMgzEnUxRQ4/LDdfOwZEMyIh3/xHb8PX3t+lfL9z+YVQ==",\n      "requires": {\n        "forwarded": "~0.1.2",\n        "ipaddr.js": "1.9.0"\n      }\n    },\n    "prr": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/prr/-/prr-1.0.1.tgz",\n      "integrity": "sha1-0/wRS6BplaRexok/SEzrHXj19HY="\n    },\n    "pseudomap": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz",\n      "integrity": "sha1-8FKijacOYYkX7wqKw0wa5aaChrM="\n    },\n    "psl": {\n      "version": "1.1.31",\n      "resolved": "https://registry.npmjs.org/psl/-/psl-1.1.31.tgz",\n      "integrity": "sha512-/6pt4+C+T+wZUieKR620OpzN/LlnNKuWjy1iFLQ/UG35JqHlR/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw=="\n    },\n    "public-encrypt": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/public-encrypt/-/public-encrypt-4.0.3.tgz",\n      "integrity": "sha512-zVpa8oKZSz5bTMTFClc1fQOnyyEzpl5ozpi1B5YcvBrdohMjH2rfsBtyXcuNuwjsDIXmBYlF2N5FlJYhR29t8Q==",\n      "requires": {\n        "bn.js": "4.1.0",\n        "browserify-rsa": "4.0.0",\n        "create-hash": "1.1.0",\n        "parse-asn1": "5.0.0",\n        "randombytes": "2.0.1",\n        "safe-buffer": "5.1.2"\n      }\n    },\n    "pump": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.0.tgz",\n      "integrity": "sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==",\n      "requires": {\n        "end-of-stream": "1.1.0",\n        "once": "1.3.1"\n      }\n    },\n    "pumpify": {\n      "version": "1.5.1",\n      "resolved": "https://registry.npmjs.org/pumpify/-/pumpify-1.5.1.tgz",\n      "integrity": "sha512-oClZI37HvuUJJxSKKrC17bZ9Cu0ZYhEAGPsPUy9KlMUmv9dKX2o77RUmq7f3XjIxbwyGwYzbzQ1L2Ks8sIradQ==",\n      "requires": {\n        "duplexify": "3.6.0",\n        "inherits": "2.0.3",\n        "pump": "2.0.0"\n      },\n      "dependencies": {\n        "pump": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/pump/-/pump-2.0.1.tgz",\n          "integrity": "sha512-ruPMNRkN3MHP1cWJc9OWr+T/xDP0jhXYCLfJcBuX54hhfIBnaQmAUMfDcG4DM5UMWByBbJY69QSphm3jtDKIkA==",\n          "requires": {\n            "end-of-stream": "1.1.0",\n            "once": "1.3.1"\n          }\n        }\n      }\n    },\n    "punycode": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",\n      "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A=="\n    },\n    "q": {\n      "version": "1.5.1",\n      "resolved": "https://registry.npmjs.org/q/-/q-1.5.1.tgz",\n      "integrity": "sha1-fjL3W0E4EpHQRhHxvxQQmsAGUdc="\n    },\n    "qs": {\n      "version": "6.5.2",\n      "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",\n      "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA=="\n    },\n    "querystring": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",\n      "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA="\n    },\n    "querystring-es3": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/querystring-es3/-/querystring-es3-0.2.1.tgz",\n      "integrity": "sha1-nsYfeQSYdXB9aUFFlv2Qek1xHnM="\n    },\n    "querystringify": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/querystringify/-/querystringify-2.1.1.tgz",\n      "integrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA=="\n    },\n    "radix-trie-js": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/radix-trie-js/-/radix-trie-js-1.0.5.tgz",\n      "integrity": "sha512-3Olqy+P8cM5G2x+mnhD231bRM8c2uxAyU7uLS/dORgwzmr2CJKhT6DeQGqZyjsfWuqCYeX415xlMr1J6Xt7M9Q=="\n    },\n    "raf": {\n      "version": "3.4.1",\n      "resolved": "https://registry.npmjs.org/raf/-/raf-3.4.1.tgz",\n      "integrity": "sha512-Sq4CW4QhwOHE8ucn6J34MqtZCeWFP2aQSmrlroYgqAV1PjStIhJXxYuTgUIfkEk7zTLjmIjLmU5q+fbD1NnOJA==",\n      "requires": {\n        "performance-now": "2.1.0"\n      }\n    },\n    "randomatic": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/randomatic/-/randomatic-3.1.1.tgz",\n      "integrity": "sha512-TuDE5KxZ0J461RVjrJZCJc+J+zCkTb1MbH9AQUq68sMhOMcy9jLcb3BrZKgp9q9Ncltdg4QVqWrH02W2EFFVYw==",\n      "requires": {\n        "is-number": "4.0.0",\n        "kind-of": "6.0.0",\n        "math-random": "1.0.1"\n      },\n      "dependencies": {\n        "is-number": {\n          "version": "4.0.0",\n          "resolved": "https://registry.npmjs.org/is-number/-/is-number-4.0.0.tgz",\n          "integrity": "sha512-rSklcAIlf1OmFdyAqbnWTLVelsQ58uvZ66S/ZyawjWqIviTWCjg2PzVGw8WUA+nNuPTqb4wgA+NszrJ+08LlgQ=="\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "randombytes": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz",\n      "integrity": "sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==",\n      "requires": {\n        "safe-buffer": "5.1.0"\n      }\n    },\n    "randomfill": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/randomfill/-/randomfill-1.0.4.tgz",\n      "integrity": "sha512-87lcbR8+MhcWcUiQ+9e+Rwx8MyR2P7qnt15ynUlbm3TU/fjbgz4GsvfSUDTemtCCtVCqb4ZcEFlyPNTh9bBTLw==",\n      "requires": {\n        "randombytes": "2.0.5",\n        "safe-buffer": "5.1.0"\n      }\n    },\n    "range-parser": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.0.tgz",\n      "integrity": "sha1-9JvmtIeJTdxA3MlKMi9hEJLgDV4="\n    },\n    "raw-body": {\n      "version": "2.3.3",\n      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.3.3.tgz",\n      "integrity": "sha512-9esiElv1BrZoI3rCDuOuKCBRbuApGGaDPQfjSflGxdy4oyzqghxu6klEkkVIvBje+FF0BX9coEv8KqW6X/7njw==",\n      "requires": {\n        "bytes": "3.0.0",\n        "http-errors": "1.6.3",\n        "iconv-lite": "0.4.23",\n        "unpipe": "1.0.0"\n      },\n      "dependencies": {\n        "iconv-lite": {\n          "version": "0.4.23",\n          "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.23.tgz",\n          "integrity": "sha512-neyTUVFtahjf0mB3dZT77u+8O0QB89jFdnBkd5P1JgYPbPaia3gXXOVL2fq8VyU2gMMD7SaN7QukTB/pmXYvDA==",\n          "requires": {\n            "safer-buffer": ">= 2.1.2 < 3"\n          }\n        }\n      }\n    },\n    "react": {\n      "version": "16.8.6",\n      "resolved": "https://registry.npmjs.org/react/-/react-16.8.6.tgz",\n      "integrity": "sha512-pC0uMkhLaHm11ZSJULfOBqV4tIZkx87ZLvbbQYunNixAAvjnC+snJCg0XQXn9VIsttVsbZP/H/ewzgsd5fxKXw==",\n      "requires": {\n        "loose-envify": "1.1.0",\n        "object-assign": "4.1.1",\n        "prop-types": "15.6.2",\n        "scheduler": "0.13.6"\n      }\n    },\n    "react-app-polyfill": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/react-app-polyfill/-/react-app-polyfill-1.0.0.tgz",\n      "integrity": "sha512-fbZxEZdfx+rVENMvGTFjUcDDOZGKHaiavA8Y+FwM2I/o8gJT6pCYZk19XfeOntVzGZH2F1qqH7SLjXMhUM+YJw==",\n      "requires": {\n        "core-js": "3.0.1",\n        "object-assign": "4.1.1",\n        "promise": "8.0.2",\n        "raf": "3.4.1",\n        "regenerator-runtime": "0.13.2",\n        "whatwg-fetch": "3.0.0"\n      }\n    },\n    "react-dev-utils": {\n      "version": "9.0.0",\n      "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-9.0.0.tgz",\n      "integrity": "sha512-HXvxOnABzIQH804ros5dBFryw4x0FU7Tl5KU2xg71jKx0EDsJYK0LuVVdj9qoLIgD1pmjzpjl7q7pjwXKIe37A==",\n      "requires": {\n        "@babel/code-frame": "7.0.0",\n        "address": "1.0.3",\n        "browserslist": "4.5.4",\n        "chalk": "2.4.2",\n        "cross-spawn": "6.0.5",\n        "detect-port-alt": "1.1.6",\n        "escape-string-regexp": "1.0.5",\n        "filesize": "3.6.1",\n        "find-up": "3.0.0",\n        "fork-ts-checker-webpack-plugin": "1.0.1",\n        "global-modules": "2.0.0",\n        "globby": "8.0.2",\n        "gzip-size": "5.0.0",\n        "immer": "1.10.0",\n        "inquirer": "6.2.2",\n        "is-root": "2.0.0",\n        "loader-utils": "1.2.3",\n        "opn": "5.4.0",\n        "pkg-up": "2.0.0",\n        "react-error-overlay": "5.1.5",\n        "recursive-readdir": "2.2.2",\n        "shell-quote": "1.6.1",\n        "sockjs-client": "1.3.0",\n        "strip-ansi": "5.2.0",\n        "text-table": "0.2.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "browserslist": {\n          "version": "4.5.4",\n          "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.5.4.tgz",\n          "integrity": "sha512-rAjx494LMjqKnMPhFkuLmLp8JWEX0o8ADTGeAbOqaF+XCvYLreZrG5uVjnPBlAQ8REZK4pzXGvp0bWgrFtKaag==",\n          "requires": {\n            "caniuse-lite": "1.0.30000955",\n            "electron-to-chromium": "1.3.122",\n            "node-releases": "1.1.13"\n          }\n        },\n        "inquirer": {\n          "version": "6.2.2",\n          "resolved": "https://registry.npmjs.org/inquirer/-/inquirer-6.2.2.tgz",\n          "integrity": "sha512-Z2rREiXA6cHRR9KBOarR3WuLlFzlIfAEIiB45ll5SSadMg7WqOh1MKEjjndfuH5ewXdixWCxqnVfGOQzPeiztA==",\n          "requires": {\n            "ansi-escapes": "3.2.0",\n            "chalk": "2.4.2",\n            "cli-cursor": "2.1.0",\n            "cli-width": "2.0.0",\n            "external-editor": "3.0.3",\n            "figures": "2.0.0",\n            "lodash": "4.17.11",\n            "mute-stream": "0.0.7",\n            "run-async": "2.2.0",\n            "rxjs": "6.4.0",\n            "string-width": "2.1.0",\n            "strip-ansi": "5.0.0",\n            "through": "2.3.6"\n          }\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "4.1.0"\n          }\n        }\n      }\n    },\n    "react-dom": {\n      "version": "16.8.6",\n      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-16.8.6.tgz",\n      "integrity": "sha512-1nL7PIq9LTL3fthPqwkvr2zY7phIPjYrT0jp4HjyEQrEROnw4dG41VVwi/wfoCneoleqrNX7iAD+pXebJZwrwA==",\n      "requires": {\n        "loose-envify": "1.1.0",\n        "object-assign": "4.1.1",\n        "prop-types": "15.6.2",\n        "scheduler": "0.13.6"\n      }\n    },\n    "react-draggable": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/react-draggable/-/react-draggable-3.3.0.tgz",\n      "integrity": "sha512-U7/jD0tAW4T0S7DCPK0kkKLyL0z61sC/eqU+NUfDjnq+JtBKaYKDHpsK2wazctiA4alEzCXUnzkREoxppOySVw==",\n      "requires": {\n        "classnames": "2.2.5",\n        "prop-types": "15.6.0"\n      }\n    },\n    "react-error-overlay": {\n      "version": "5.1.5",\n      "resolved": "https://registry.npmjs.org/react-error-overlay/-/react-error-overlay-5.1.5.tgz",\n      "integrity": "sha512-O9JRum1Zq/qCPFH5qVEvDDrVun8Jv9vbHtZXCR1EuRj9sKg1xJTlHxBzU6AkCzpvxRLuiY4OKImy3cDLQ+UTdg=="\n    },\n    "react-event-listener": {\n      "version": "0.6.6",\n      "resolved": "https://registry.npmjs.org/react-event-listener/-/react-event-listener-0.6.6.tgz",\n      "integrity": "sha512-+hCNqfy7o9wvO6UgjqFmBzARJS7qrNoda0VqzvOuioEpoEXKutiKuv92dSz6kP7rYLmyHPyYNLesi5t/aH1gfw==",\n      "requires": {\n        "@babel/runtime": "7.2.0",\n        "prop-types": "15.6.0",\n        "warning": "4.0.1"\n      }\n    },\n    "react-input-autosize": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/react-input-autosize/-/react-input-autosize-2.2.1.tgz",\n      "integrity": "sha512-3+K4CD13iE4lQQ2WlF8PuV5htfmTRLH6MDnfndHM6LuBRszuXnuyIfE7nhSKt8AzRBZ50bu0sAhkNMeS5pxQQA==",\n      "requires": {\n        "prop-types": "15.5.8"\n      }\n    },\n    "react-is": {\n      "version": "16.8.6",\n      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.8.6.tgz",\n      "integrity": "sha512-aUk3bHfZ2bRSVFFbbeVS4i+lNPZr3/WM5jT2J5omUVV1zzcs1nAaf3l51ctA5FFvCRbhrH0bdAsRRQddFJZPtA=="\n    },\n    "react-lifecycles-compat": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",\n      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="\n    },\n    "react-numeric-input": {\n      "version": "2.2.3",\n      "resolved": "https://registry.npmjs.org/react-numeric-input/-/react-numeric-input-2.2.3.tgz",\n      "integrity": "sha1-S/WRjD6v7YUagN8euZLZQQArtVI="\n    },\n    "react-pointerlock": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/react-pointerlock/-/react-pointerlock-1.1.3.tgz",\n      "integrity": "sha1-peoOvdztiMD/UNVCDqRR9nYEjzg=",\n      "requires": {\n        "classnames": "2.2.1",\n        "react": "0.14.3",\n        "react-dom": "0.14.3"\n      },\n      "dependencies": {\n        "core-js": {\n          "version": "1.2.7",\n          "resolved": "https://registry.npmjs.org/core-js/-/core-js-1.2.7.tgz",\n          "integrity": "sha1-ZSKUwUZR2yj6k70tX/KYOk8IxjY="\n        },\n        "fbjs": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/fbjs/-/fbjs-0.6.1.tgz",\n          "integrity": "sha1-lja3cF9bqWhNRLcveDISVK/IYPc=",\n          "requires": {\n            "core-js": "1.0.0",\n            "loose-envify": "1.0.0",\n            "promise": "7.0.3",\n            "ua-parser-js": "0.7.9",\n            "whatwg-fetch": "0.9.0"\n          }\n        },\n        "promise": {\n          "version": "7.3.1",\n          "resolved": "https://registry.npmjs.org/promise/-/promise-7.3.1.tgz",\n          "integrity": "sha512-nolQXZ/4L+bP/UGlkfaIujX9BKxGwmQ9OT4mOt5yvy8iK1h3wqTEJCijzGANTCCl9nWjY41juyAn2K3Q1hLLTg==",\n          "requires": {\n            "asap": "~2.0.3"\n          }\n        },\n        "react": {\n          "version": "0.14.9",\n          "resolved": "https://registry.npmjs.org/react/-/react-0.14.9.tgz",\n          "integrity": "sha1-kRCmSXxJ1EuhwO3TF67CnC4NkdE=",\n          "requires": {\n            "envify": "3.0.0",\n            "fbjs": "0.6.1"\n          }\n        },\n        "react-dom": {\n          "version": "0.14.9",\n          "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-0.14.9.tgz",\n          "integrity": "sha1-BQZKPc8PsYgKOyv8nVjFXY2fYpM="\n        },\n        "whatwg-fetch": {\n          "version": "0.9.0",\n          "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-0.9.0.tgz",\n          "integrity": "sha1-DjaExsuZlbQ+/J3wPkw2XZX9nMA="\n        }\n      }\n    },\n    "react-resizable": {\n      "version": "1.7.5",\n      "resolved": "https://registry.npmjs.org/react-resizable/-/react-resizable-1.7.5.tgz",\n      "integrity": "sha512-lauPcBsLqmxMHXHpTeOBpYenGalbSikYr8hK+lwtNYMQX1pGd2iYE+pDvZEV97nCnzuCtWM9htp7OpsBIY2Sjw==",\n      "requires": {\n        "prop-types": "15.x",\n        "react-draggable": "2.2.6 || 3.0.3"\n      }\n    },\n    "react-scripts": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/react-scripts/-/react-scripts-3.0.0.tgz",\n      "integrity": "sha512-F4HegoBuUKZvEzXYksQu05Y6vJqallhHkQUEL6M7OQ5rYLBQC/4MTK6km9ZZvEK9TqMy1XA8SSEJGJgTEr6bSQ==",\n      "requires": {\n        "@babel/core": "7.4.3",\n        "@svgr/webpack": "4.1.0",\n        "@typescript-eslint/eslint-plugin": "1.6.0",\n        "@typescript-eslint/parser": "1.6.0",\n        "babel-eslint": "10.0.1",\n        "babel-jest": "24.7.1",\n        "babel-loader": "8.0.5",\n        "babel-plugin-named-asset-import": "0.3.2",\n        "babel-preset-react-app": "8.0.0",\n        "case-sensitive-paths-webpack-plugin": "2.2.0",\n        "css-loader": "2.1.1",\n        "dotenv": "6.2.0",\n        "dotenv-expand": "4.2.0",\n        "eslint": "5.16.0",\n        "eslint-config-react-app": "4.0.0",\n        "eslint-loader": "2.1.2",\n        "eslint-plugin-flowtype": "2.50.1",\n        "eslint-plugin-import": "2.16.0",\n        "eslint-plugin-jsx-a11y": "6.2.1",\n        "eslint-plugin-react": "7.12.4",\n        "eslint-plugin-react-hooks": "1.5.0",\n        "file-loader": "3.0.1",\n        "fs-extra": "7.0.1",\n        "fsevents": "2.0.6",\n        "html-webpack-plugin": "4.0.0-beta.5",\n        "identity-obj-proxy": "3.0.0",\n        "is-wsl": "1.1.0",\n        "jest": "24.7.1",\n        "jest-environment-jsdom-fourteen": "0.1.0",\n        "jest-resolve": "24.7.1",\n        "jest-watch-typeahead": "0.3.0",\n        "mini-css-extract-plugin": "0.5.0",\n        "optimize-css-assets-webpack-plugin": "5.0.1",\n        "pnp-webpack-plugin": "1.2.1",\n        "postcss-flexbugs-fixes": "4.1.0",\n        "postcss-loader": "3.0.0",\n        "postcss-normalize": "7.0.1",\n        "postcss-preset-env": "6.6.0",\n        "postcss-safe-parser": "4.0.1",\n        "react-app-polyfill": "1.0.0",\n        "react-dev-utils": "9.0.0",\n        "resolve": "1.10.0",\n        "sass-loader": "7.1.0",\n        "semver": "6.0.0",\n        "style-loader": "0.23.1",\n        "terser-webpack-plugin": "1.2.3",\n        "url-loader": "1.1.2",\n        "webpack": "4.29.6",\n        "webpack-dev-server": "3.2.1",\n        "webpack-manifest-plugin": "2.0.4",\n        "workbox-webpack-plugin": "4.2.0"\n      }\n    },\n    "react-select": {\n      "version": "2.4.3",\n      "resolved": "https://registry.npmjs.org/react-select/-/react-select-2.4.3.tgz",\n      "integrity": "sha512-cmxNaiHpviRYkojeW9rGEUJ4jpX7QTmPe2wcscwA4d1lStzw/cJtr4ft5H2O/YhfpkrcwaLghu3XmEYdXhBo8Q==",\n      "requires": {\n        "classnames": "2.2.5",\n        "emotion": "9.1.2",\n        "memoize-one": "5.0.0",\n        "prop-types": "15.6.0",\n        "raf": "3.4.0",\n        "react-input-autosize": "2.2.1",\n        "react-transition-group": "2.2.1"\n      }\n    },\n    "react-split": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/react-split/-/react-split-2.0.4.tgz",\n      "integrity": "sha512-NBKm9MaqzG/00laMUaS8GS9RnItVSekNNwItgGLMbFTeUa9w4bIY8Co/LszNBnpza9n2am0MXIw3SmyiMnhs+w==",\n      "requires": {\n        "prop-types": "15.5.7",\n        "split.js": "1.5.9"\n      }\n    },\n    "react-tooltip": {\n      "version": "3.10.0",\n      "resolved": "https://registry.npmjs.org/react-tooltip/-/react-tooltip-3.10.0.tgz",\n      "integrity": "sha512-GGdxJvM1zSFztkTP7gCQbLTstWr1OOoMpJ5WZUGhimj0nhRY+MPz+92MpEnKmj0cftJ9Pd/M6FfSl0sfzmZWkg==",\n      "requires": {\n        "classnames": "2.2.5",\n        "prop-types": "15.6.0"\n      }\n    },\n    "react-transition-group": {\n      "version": "2.9.0",\n      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-2.9.0.tgz",\n      "integrity": "sha512-+HzNTCHpeQyl4MJ/bdE0u6XRMe9+XG/+aL4mCxVN4DnPBQ0/5bfHWPDuOZUzYdMj94daZaZdCCc1Dzt9R/xSSg==",\n      "requires": {\n        "dom-helpers": "3.4.0",\n        "loose-envify": "1.4.0",\n        "prop-types": "15.6.2",\n        "react-lifecycles-compat": "3.0.4"\n      }\n    },\n    "read-pkg": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",\n      "integrity": "sha1-nLxoaXj+5l0WwA4rGcI3/Pbjg4k=",\n      "requires": {\n        "load-json-file": "4.0.0",\n        "normalize-package-data": "2.3.2",\n        "path-type": "3.0.0"\n      }\n    },\n    "read-pkg-up": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-4.0.0.tgz",\n      "integrity": "sha512-6etQSH7nJGsK0RbG/2TeDzZFa8shjQ1um+SwQQ5cwKy0dhSXdOncEhb1CPpvQG4h7FyOV6EB6YlV0yJvZQNAkA==",\n      "requires": {\n        "find-up": "3.0.0",\n        "read-pkg": "3.0.0"\n      }\n    },\n    "readable-stream": {\n      "version": "2.3.6",\n      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.6.tgz",\n      "integrity": "sha512-tQtKA9WIAhBF3+VLAseyMqZeBjW0AHJoxOtYqSUZNJxauErmLbVm2FW1y+J/YA9dUrAC39ITejlZWhVIwawkKw==",\n      "requires": {\n        "core-util-is": "~1.0.0",\n        "inherits": "~2.0.3",\n        "isarray": "~1.0.0",\n        "process-nextick-args": "~2.0.0",\n        "safe-buffer": "~5.1.1",\n        "string_decoder": "~1.1.1",\n        "util-deprecate": "~1.0.1"\n      }\n    },\n    "readdirp": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-2.2.1.tgz",\n      "integrity": "sha512-1JU/8q+VgFZyxwrJ+SVIOsh+KywWGpds3NTqikiKpDMZWScmAYyKIgqkO+ARvNWJfXeXR1zxz7aHF4u4CyH6vQ==",\n      "requires": {\n        "graceful-fs": "4.1.11",\n        "micromatch": "3.1.10",\n        "readable-stream": "2.0.2"\n      }\n    },\n    "realpath-native": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/realpath-native/-/realpath-native-1.1.0.tgz",\n      "integrity": "sha512-wlgPA6cCIIg9gKz0fgAPjnzh4yR/LnXovwuo9hvyGvx3h8nX4+/iLZplfUWasXpqD8BdnGnP5njOFjkUwPzvjA==",\n      "requires": {\n        "util.promisify": "1.0.0"\n      }\n    },\n    "recast": {\n      "version": "0.11.23",\n      "resolved": "https://registry.npmjs.org/recast/-/recast-0.11.23.tgz",\n      "integrity": "sha1-RR/TAEqx5N+bTktmN2sqIZEkYtM=",\n      "requires": {\n        "ast-types": "0.9.6",\n        "esprima": "~3.1.0",\n        "private": "~0.1.5",\n        "source-map": "~0.5.0"\n      },\n      "dependencies": {\n        "esprima": {\n          "version": "3.1.3",\n          "resolved": "https://registry.npmjs.org/esprima/-/esprima-3.1.3.tgz",\n          "integrity": "sha1-/cpRzuYTOJXjyI1TXOSdv/YqRjM="\n        }\n      }\n    },\n    "rechoir": {\n      "version": "0.6.2",\n      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.6.2.tgz",\n      "integrity": "sha1-hSBLVNuoLVdC4oyWdW70OvUOM4Q=",\n      "requires": {\n        "resolve": "1.1.6"\n      }\n    },\n    "recompose": {\n      "version": "0.30.0",\n      "resolved": "https://registry.npmjs.org/recompose/-/recompose-0.30.0.tgz",\n      "integrity": "sha512-ZTrzzUDa9AqUIhRk4KmVFihH0rapdCSMFXjhHbNrjAWxBuUD/guYlyysMnuHjlZC/KRiOKRtB4jf96yYSkKE8w==",\n      "requires": {\n        "@babel/runtime": "7.0.0",\n        "change-emitter": "0.1.2",\n        "fbjs": "0.8.1",\n        "hoist-non-react-statics": "2.3.1",\n        "react-lifecycles-compat": "3.0.2",\n        "symbol-observable": "1.0.4"\n      },\n      "dependencies": {\n        "hoist-non-react-statics": {\n          "version": "2.5.5",\n          "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-2.5.5.tgz",\n          "integrity": "sha512-rqcy4pJo55FTTLWt+bU8ukscqHeE/e9KWvsOW2b/a3afxQZhwkQdT1rPPCJ0rYXdj4vNcasY8zHTH+jF/qStxw=="\n        }\n      }\n    },\n    "recursive-readdir": {\n      "version": "2.2.2",\n      "resolved": "https://registry.npmjs.org/recursive-readdir/-/recursive-readdir-2.2.2.tgz",\n      "integrity": "sha512-nRCcW9Sj7NuZwa2XvH9co8NPeXUBhZP7CRKJtU+cS6PW9FpCIFoI5ib0NT1ZrbNuPoRy0ylyCaUL8Gih4LSyFg==",\n      "requires": {\n        "minimatch": "3.0.4"\n      }\n    },\n    "regenerate": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/regenerate/-/regenerate-1.4.0.tgz",\n      "integrity": "sha512-1G6jJVDWrt0rK99kBjvEtziZNCICAuvIPkSiUFIQxVP06RCVpq3dmDo2oi6ABpYaDYaTRr67BEhL8r1wgEZZKg=="\n    },\n    "regenerate-unicode-properties": {\n      "version": "8.0.2",\n      "resolved": "https://registry.npmjs.org/regenerate-unicode-properties/-/regenerate-unicode-properties-8.0.2.tgz",\n      "integrity": "sha512-SbA/iNrBUf6Pv2zU8Ekv1Qbhv92yxL4hiDa2siuxs4KKn4oOoMDHXjAf7+Nz9qinUQ46B1LcWEi/PhJfPWpZWQ==",\n      "requires": {\n        "regenerate": "1.4.0"\n      }\n    },\n    "regenerator-runtime": {\n      "version": "0.13.2",\n      "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.2.tgz",\n      "integrity": "sha512-S/TQAZJO+D3m9xeN1WTI8dLKBBiRgXBlTJvbWjCThHWZj9EvHK70Ff50/tYj2J/fvBY6JtFVwRuazHN2E7M9BA=="\n    },\n    "regenerator-transform": {\n      "version": "0.13.4",\n      "resolved": "https://registry.npmjs.org/regenerator-transform/-/regenerator-transform-0.13.4.tgz",\n      "integrity": "sha512-T0QMBjK3J0MtxjPmdIMXm72Wvj2Abb0Bd4HADdfijwMdoIsyQZ6fWC7kDFhk2YinBBEMZDL7Y7wh0J1sGx3S4A==",\n      "requires": {\n        "private": "0.1.6"\n      }\n    },\n    "regex-cache": {\n      "version": "0.4.4",\n      "resolved": "https://registry.npmjs.org/regex-cache/-/regex-cache-0.4.4.tgz",\n      "integrity": "sha512-nVIZwtCjkC9YgvWkpM55B5rBhBYRZhAaJbgcFYXXsHnbZ9UZI9nnVWYZpBlCqv9ho2eZryPnWrZGsOdPwVWXWQ==",\n      "requires": {\n        "is-equal-shallow": "0.1.3"\n      }\n    },\n    "regex-not": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz",\n      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==",\n      "requires": {\n        "extend-shallow": "3.0.2",\n        "safe-regex": "1.1.0"\n      }\n    },\n    "regexp-tree": {\n      "version": "0.1.5",\n      "resolved": "https://registry.npmjs.org/regexp-tree/-/regexp-tree-0.1.5.tgz",\n      "integrity": "sha512-nUmxvfJyAODw+0B13hj8CFVAxhe7fDEAgJgaotBu3nnR+IgGgZq59YedJP5VYTlkEfqjuK6TuRpnymKdatLZfQ=="\n    },\n    "regexpp": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/regexpp/-/regexpp-2.0.1.tgz",\n      "integrity": "sha512-lv0M6+TkDVniA3aD1Eg0DVpfU/booSu7Eev3TDO/mZKHBfVjgCGTV4t4buppESEYDtkArYFOxTJWv6S5C+iaNw=="\n    },\n    "regexpu-core": {\n      "version": "4.5.4",\n      "resolved": "https://registry.npmjs.org/regexpu-core/-/regexpu-core-4.5.4.tgz",\n      "integrity": "sha512-BtizvGtFQKGPUcTy56o3nk1bGRp4SZOTYrDtGNlqCQufptV5IkkLN6Emw+yunAJjzf+C9FQFtvq7IoA3+oMYHQ==",\n      "requires": {\n        "regenerate": "1.4.0",\n        "regenerate-unicode-properties": "8.0.2",\n        "regjsgen": "0.5.0",\n        "regjsparser": "0.6.0",\n        "unicode-match-property-ecmascript": "1.0.4",\n        "unicode-match-property-value-ecmascript": "1.1.0"\n      }\n    },\n    "regjsgen": {\n      "version": "0.5.0",\n      "resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.5.0.tgz",\n      "integrity": "sha512-RnIrLhrXCX5ow/E5/Mh2O4e/oa1/jW0eaBKTSy3LaCj+M3Bqvm97GWDp2yUtzIs4LEn65zR2yiYGFqb2ApnzDA=="\n    },\n    "regjsparser": {\n      "version": "0.6.0",\n      "resolved": "https://registry.npmjs.org/regjsparser/-/regjsparser-0.6.0.tgz",\n      "integrity": "sha512-RQ7YyokLiQBomUJuUG8iGVvkgOLxwyZM8k6d3q5SAXpg4r5TZJZigKFvC6PpD+qQ98bCDC5YelPeA3EucDoNeQ==",\n      "requires": {\n        "jsesc": "~0.5.0"\n      },\n      "dependencies": {\n        "jsesc": {\n          "version": "0.5.0",\n          "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-0.5.0.tgz",\n          "integrity": "sha1-597mbjXW/Bb3EP6R1c9p9w8IkR0="\n        }\n      }\n    },\n    "rehype-parse": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/rehype-parse/-/rehype-parse-6.0.0.tgz",\n      "integrity": "sha512-V2OjMD0xcSt39G4uRdMTqDXXm6HwkUbLMDayYKA/d037j8/OtVSQ+tqKwYWOuyBeoCs/3clXRe30VUjeMDTBSA==",\n      "requires": {\n        "hast-util-from-parse5": "5.0.0",\n        "parse5": "5.0.0",\n        "xtend": "4.0.1"\n      }\n    },\n    "relateurl": {\n      "version": "0.2.7",\n      "resolved": "https://registry.npmjs.org/relateurl/-/relateurl-0.2.7.tgz",\n      "integrity": "sha1-VNvzd+UUQKypCkzSdGANP/LYiKk="\n    },\n    "remove-bom-buffer": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/remove-bom-buffer/-/remove-bom-buffer-3.0.0.tgz",\n      "integrity": "sha512-8v2rWhaakv18qcvNeli2mZ/TMTL2nEyAKRvzo1WtnZBl15SHyEhrCu2/xKlJyUFKHiHgfXIyuY6g2dObJJycXQ==",\n      "requires": {\n        "is-buffer": "1.1.5",\n        "is-utf8": "0.2.1"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        }\n      }\n    },\n    "remove-bom-stream": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/remove-bom-stream/-/remove-bom-stream-1.2.0.tgz",\n      "integrity": "sha1-BfGlk/FuQuH7kOv1nejlaVJflSM=",\n      "requires": {\n        "remove-bom-buffer": "3.0.0",\n        "safe-buffer": "5.1.0",\n        "through2": "2.0.3"\n      }\n    },\n    "remove-trailing-separator": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/remove-trailing-separator/-/remove-trailing-separator-1.1.0.tgz",\n      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8="\n    },\n    "renderkid": {\n      "version": "2.0.3",\n      "resolved": "https://registry.npmjs.org/renderkid/-/renderkid-2.0.3.tgz",\n      "integrity": "sha512-z8CLQp7EZBPCwCnncgf9C4XAi3WR0dv+uWu/PjIyhhAb5d6IJ/QZqlHFprHeKT+59//V6BNUsLbvN8+2LarxGA==",\n      "requires": {\n        "css-select": "1.1.0",\n        "dom-converter": "0.2",\n        "htmlparser2": "3.3.0",\n        "strip-ansi": "3.0.0",\n        "utila": "0.4.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "css-select": {\n          "version": "1.2.0",\n          "resolved": "https://registry.npmjs.org/css-select/-/css-select-1.2.0.tgz",\n          "integrity": "sha1-KzoRBTnFNV8c2NMUYj6HCxIeyFg=",\n          "requires": {\n            "boolbase": "~1.0.0",\n            "css-what": "2.1",\n            "domutils": "1.5.1",\n            "nth-check": "~1.0.1"\n          }\n        },\n        "domutils": {\n          "version": "1.5.1",\n          "resolved": "https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz",\n          "integrity": "sha1-3NhIiib1Y9YQeeSMn3t+Mjc2gs8=",\n          "requires": {\n            "dom-serializer": "0",\n            "domelementtype": "1"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        }\n      }\n    },\n    "repeat-element": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.3.tgz",\n      "integrity": "sha512-ahGq0ZnV5m5XtZLMb+vP76kcAM5nkLqk0lpqAuojSKGgQtn4eRi4ZZGm2olo2zKFH+sMsWaqOCW1dqAnOru72g=="\n    },\n    "repeat-string": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz",\n      "integrity": "sha1-jcrkcOHIirwtYA//Sndihtp15jc="\n    },\n    "replace-ext": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-1.0.0.tgz",\n      "integrity": "sha1-3mMSg3P8v3w8z6TeWkgMRaZ5WOs="\n    },\n    "replace-homedir": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/replace-homedir/-/replace-homedir-1.0.0.tgz",\n      "integrity": "sha1-6H9tUTuSjd6AgmDBK+f+xv9ueYw=",\n      "requires": {\n        "homedir-polyfill": "1.0.1",\n        "is-absolute": "1.0.0",\n        "remove-trailing-separator": "1.1.0"\n      }\n    },\n    "replacestream": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/replacestream/-/replacestream-4.0.3.tgz",\n      "integrity": "sha512-AC0FiLS352pBBiZhd4VXB1Ab/lh0lEgpP+GGvZqbQh8a5cmXVoTe5EX/YeTFArnp4SRGTHh1qCHu9lGs1qG8sA==",\n      "requires": {\n        "escape-string-regexp": "1.0.3",\n        "object-assign": "4.0.1",\n        "readable-stream": "2.0.2"\n      }\n    },\n    "request": {\n      "version": "2.88.0",\n      "resolved": "https://registry.npmjs.org/request/-/request-2.88.0.tgz",\n      "integrity": "sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2/A0hg==",\n      "requires": {\n        "aws-sign2": "~0.7.0",\n        "aws4": "1.8.0",\n        "caseless": "~0.12.0",\n        "combined-stream": "~1.0.6",\n        "extend": "~3.0.2",\n        "forever-agent": "~0.6.1",\n        "form-data": "~2.3.2",\n        "har-validator": "~5.1.0",\n        "http-signature": "~1.2.0",\n        "is-typedarray": "~1.0.0",\n        "isstream": "~0.1.2",\n        "json-stringify-safe": "~5.0.1",\n        "mime-types": "~2.1.19",\n        "oauth-sign": "~0.9.0",\n        "performance-now": "2.1.0",\n        "qs": "~6.5.2",\n        "safe-buffer": "5.1.2",\n        "tough-cookie": "~2.4.3",\n        "tunnel-agent": "0.6.0",\n        "uuid": "3.3.2"\n      },\n      "dependencies": {\n        "punycode": {\n          "version": "1.4.1",\n          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.4.1.tgz",\n          "integrity": "sha1-wNWmOycYgArY4esPpSachN1BhF4="\n        },\n        "tough-cookie": {\n          "version": "2.4.3",\n          "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.4.3.tgz",\n          "integrity": "sha512-Q5srk/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe/+TxjWB/GlFAnYEbkYVlON9FMk/fE3h2RLpPXo4lQ==",\n          "requires": {\n            "psl": "1.1.24",\n            "punycode": "1.4.1"\n          }\n        }\n      }\n    },\n    "request-promise-core": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.2.tgz",\n      "integrity": "sha512-UHYyq1MO8GsefGEt7EprS8UrXsm1TxEvFUX1IMTuSLU2Rh7fTIdFtl8xD7JiEYiWU2dl+NYAjCTksTehQUxPag==",\n      "requires": {\n        "lodash": "4.17.11"\n      }\n    },\n    "request-promise-native": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/request-promise-native/-/request-promise-native-1.0.7.tgz",\n      "integrity": "sha512-rIMnbBdgNViL37nZ1b3L/VfPOpSi0TqVDQPAvO6U14lMzOLrt5nilxCQqtDKhZeDiW0/hkCXGoQjhgJd/tCh6w==",\n      "requires": {\n        "request-promise-core": "1.1.2",\n        "stealthy-require": "1.1.1",\n        "tough-cookie": "2.3.3"\n      }\n    },\n    "require-directory": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",\n      "integrity": "sha1-jGStX9MNqxyXbiNE/+f3kqam30I="\n    },\n    "require-dot-file": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/require-dot-file/-/require-dot-file-0.4.0.tgz",\n      "integrity": "sha1-tb9ValWJXC1ZDl3srUU1cXhQqek="\n    },\n    "require-from-string": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz",\n      "integrity": "sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw=="\n    },\n    "require-main-filename": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",\n      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="\n    },\n    "requireindex": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/requireindex/-/requireindex-1.2.0.tgz",\n      "integrity": "sha512-L9jEkOi3ASd9PYit2cwRfyppc9NoABujTP8/5gFcbERmo5jUoAKovIC3fsF17pkTnGsrByysqX+Kxd2OTNI1ww=="\n    },\n    "requires-port": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/requires-port/-/requires-port-1.0.0.tgz",\n      "integrity": "sha1-kl0mAdOaxIXgkc8NpcbmlNw9yv8="\n    },\n    "resolve": {\n      "version": "1.10.0",\n      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.10.0.tgz",\n      "integrity": "sha512-3sUr9aq5OfSg2S9pNtPA9hL1FVEAjvfOC4leW0SNf/mpnaakz2a9femSd6LqAww2RaFctwyf1lCqnTHuF1rxDg==",\n      "requires": {\n        "path-parse": "1.0.6"\n      }\n    },\n    "resolve-cwd": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-2.0.0.tgz",\n      "integrity": "sha1-AKn3OHVW4nA46uIyyqNypqWbZlo=",\n      "requires": {\n        "resolve-from": "3.0.0"\n      }\n    },\n    "resolve-dir": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/resolve-dir/-/resolve-dir-1.0.1.tgz",\n      "integrity": "sha1-eaQGRMNivoLybv/nOcm7U4IEb0M=",\n      "requires": {\n        "expand-tilde": "2.0.0",\n        "global-modules": "1.0.0"\n      },\n      "dependencies": {\n        "global-modules": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/global-modules/-/global-modules-1.0.0.tgz",\n          "integrity": "sha512-sKzpEkf11GpOFuw0Zzjzmt4B4UZwjOcG757PPvrfhxcLFbq0wpsgpOqxpxtxFiCG4DtG93M6XRVbF2oGdev7bg==",\n          "requires": {\n            "global-prefix": "1.0.1",\n            "is-windows": "1.0.1",\n            "resolve-dir": "1.0.0"\n          }\n        },\n        "global-prefix": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/global-prefix/-/global-prefix-1.0.2.tgz",\n          "integrity": "sha1-2/dDxsFJklk8ZVVoy2btMsASLr4=",\n          "requires": {\n            "expand-tilde": "2.0.2",\n            "homedir-polyfill": "1.0.1",\n            "ini": "1.3.4",\n            "is-windows": "1.0.1",\n            "which": "1.2.14"\n          }\n        }\n      }\n    },\n    "resolve-from": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",\n      "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g="\n    },\n    "resolve-options": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/resolve-options/-/resolve-options-1.1.0.tgz",\n      "integrity": "sha1-MrueOcBtZzONyTeMDW1gdFZq0TE=",\n      "requires": {\n        "value-or-function": "3.0.0"\n      }\n    },\n    "resolve-url": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",\n      "integrity": "sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo="\n    },\n    "restore-cursor": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz",\n      "integrity": "sha1-n37ih/gv0ybU/RYpI9YhKe7g368=",\n      "requires": {\n        "onetime": "2.0.0",\n        "signal-exit": "3.0.2"\n      }\n    },\n    "ret": {\n      "version": "0.1.15",\n      "resolved": "https://registry.npmjs.org/ret/-/ret-0.1.15.tgz",\n      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg=="\n    },\n    "rework": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/rework/-/rework-1.0.1.tgz",\n      "integrity": "sha1-MIBqhBNCtUUQqkEQhQzUhTQUSqc=",\n      "requires": {\n        "convert-source-map": "0.3.3",\n        "css": "2.0.0"\n      },\n      "dependencies": {\n        "convert-source-map": {\n          "version": "0.3.5",\n          "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-0.3.5.tgz",\n          "integrity": "sha1-8dgClQr33SYxof6+BZZVDIarMZA="\n        }\n      }\n    },\n    "rework-import": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/rework-import/-/rework-import-2.1.0.tgz",\n      "integrity": "sha1-wm7StTFZrHvi7GDaIj74lgPB7x8=",\n      "requires": {\n        "css": "2.0.0",\n        "globby": "2.0.0",\n        "parse-import": "2.0.0",\n        "url-regex": "3.0.0"\n      },\n      "dependencies": {\n        "async": {\n          "version": "1.5.2",\n          "resolved": "https://registry.npmjs.org/async/-/async-1.5.2.tgz",\n          "integrity": "sha1-7GphrlZIDAw8skHJVhjiCJL5Zyo="\n        },\n        "glob": {\n          "version": "5.0.15",\n          "resolved": "https://registry.npmjs.org/glob/-/glob-5.0.15.tgz",\n          "integrity": "sha1-G8k2ueAvSmA/zCIuz3Yz0wuLk7E=",\n          "requires": {\n            "inflight": "1.0.4",\n            "inherits": "2",\n            "minimatch": "2 || 3",\n            "once": "1.3.0",\n            "path-is-absolute": "1.0.0"\n          }\n        },\n        "globby": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/globby/-/globby-2.1.0.tgz",\n          "integrity": "sha1-npGSvNM/Srak+JTl5+qLcTITxII=",\n          "requires": {\n            "array-union": "1.0.1",\n            "async": "1.2.1",\n            "glob": "5.0.3",\n            "object-assign": "3.0.0"\n          }\n        },\n        "object-assign": {\n          "version": "3.0.0",\n          "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-3.0.0.tgz",\n          "integrity": "sha1-m+3VygiXlJvKR+f/QIBi1Un1h/I="\n        }\n      }\n    },\n    "rework-plugin-function": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/rework-plugin-function/-/rework-plugin-function-1.0.2.tgz",\n      "integrity": "sha1-Es5G+1sptdk1FGaD9rmM9J0jc7k=",\n      "requires": {\n        "rework-visit": "1.0.0"\n      }\n    },\n    "rework-plugin-url": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/rework-plugin-url/-/rework-plugin-url-1.1.0.tgz",\n      "integrity": "sha1-q1PosQV7nV7MHIJz/32xhgg3XEU=",\n      "requires": {\n        "rework-plugin-function": "1.0.0"\n      }\n    },\n    "rework-visit": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/rework-visit/-/rework-visit-1.0.0.tgz",\n      "integrity": "sha1-mUWygD8hni96ygCtuLyfZA+ELJo="\n    },\n    "rgb-regex": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/rgb-regex/-/rgb-regex-1.0.1.tgz",\n      "integrity": "sha1-wODWiC3w4jviVKR16O3UGRX+rrE="\n    },\n    "rgba-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/rgba-regex/-/rgba-regex-1.0.0.tgz",\n      "integrity": "sha1-QzdOLiyglosO8VI0YLfXMP8i7rM="\n    },\n    "right-align": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/right-align/-/right-align-0.1.3.tgz",\n      "integrity": "sha1-YTObci/mo1FWiSENJOFMlhSGE+8=",\n      "requires": {\n        "align-text": "0.1.1"\n      }\n    },\n    "rimraf": {\n      "version": "2.6.3",\n      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-2.6.3.tgz",\n      "integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",\n      "requires": {\n        "glob": "7.1.3"\n      }\n    },\n    "ripemd160": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/ripemd160/-/ripemd160-2.0.2.tgz",\n      "integrity": "sha512-ii4iagi25WusVoiC4B4lq7pbXfAp3D9v5CwfkY33vffw2+pkDjY1D8GaN7spsxvCSx8dkPqOZCEZyfxcmJG2IA==",\n      "requires": {\n        "hash-base": "3.0.0",\n        "inherits": "2.0.1"\n      }\n    },\n    "rsvp": {\n      "version": "4.8.4",\n      "resolved": "https://registry.npmjs.org/rsvp/-/rsvp-4.8.4.tgz",\n      "integrity": "sha512-6FomvYPfs+Jy9TfXmBpBuMWNH94SgCsZmJKcanySzgNNP6LjWxBvyLTa9KaMfDDM5oxRfrKDB0r/qeRsLwnBfA=="\n    },\n    "rtlcss": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/rtlcss/-/rtlcss-2.4.0.tgz",\n      "integrity": "sha512-hdjFhZ5FCI0ABOfyXOMOhBtwPWtANLCG7rOiOcRf+yi5eDdxmDjqBruWouEnwVdzfh/TWF6NNncIEsigOCFZOA==",\n      "requires": {\n        "chalk": "2.3.0",\n        "findup": "0.1.5",\n        "mkdirp": "0.5.1",\n        "postcss": "6.0.14",\n        "strip-json-comments": "2.0.0"\n      },\n      "dependencies": {\n        "postcss": {\n          "version": "6.0.23",\n          "resolved": "https://registry.npmjs.org/postcss/-/postcss-6.0.23.tgz",\n          "integrity": "sha512-soOk1h6J3VMTZtVeVpv15/Hpdl2cBLX3CAw4TAbkpTJiNPk9YP/zWcD1ND+xEtvyuuvKzbxliTOIyvkSeSJ6ag==",\n          "requires": {\n            "chalk": "2.4.1",\n            "source-map": "0.6.1",\n            "supports-color": "5.4.0"\n          }\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "run-async": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/run-async/-/run-async-2.3.0.tgz",\n      "integrity": "sha1-A3GrSuC91yDUFm19/aZP96RFpsA=",\n      "requires": {\n        "is-promise": "2.1.0"\n      }\n    },\n    "run-queue": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/run-queue/-/run-queue-1.0.3.tgz",\n      "integrity": "sha1-6Eg5bwV9Ij8kOGkkYY4laUFh7Ec=",\n      "requires": {\n        "aproba": "1.1.1"\n      }\n    },\n    "run-sequence": {\n      "version": "2.2.1",\n      "resolved": "https://registry.npmjs.org/run-sequence/-/run-sequence-2.2.1.tgz",\n      "integrity": "sha512-qkzZnQWMZjcKbh3CNly2srtrkaO/2H/SI5f2eliMCapdRD3UhMrwjfOAZJAnZ2H8Ju4aBzFZkBGXUqFs9V0yxw==",\n      "requires": {\n        "chalk": "1.1.3",\n        "fancy-log": "1.3.2",\n        "plugin-error": "0.1.2"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "ansi-styles": {\n          "version": "2.2.1",\n          "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz",\n          "integrity": "sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4="\n        },\n        "arr-diff": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/arr-diff/-/arr-diff-1.1.0.tgz",\n          "integrity": "sha1-aHwydYFjWI/vfeezb6vklesaOZo=",\n          "requires": {\n            "arr-flatten": "1.0.1",\n            "array-slice": "0.2.3"\n          }\n        },\n        "arr-union": {\n          "version": "2.1.0",\n          "resolved": "https://registry.npmjs.org/arr-union/-/arr-union-2.1.0.tgz",\n          "integrity": "sha1-IPnqtexw9cfSFbEHexw5Fh0pLH0="\n        },\n        "array-slice": {\n          "version": "0.2.3",\n          "resolved": "https://registry.npmjs.org/array-slice/-/array-slice-0.2.3.tgz",\n          "integrity": "sha1-3Tz7gO15c6dRF82sabC5nshhhvU="\n        },\n        "chalk": {\n          "version": "1.1.3",\n          "resolved": "https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz",\n          "integrity": "sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=",\n          "requires": {\n            "ansi-styles": "2.2.1",\n            "escape-string-regexp": "1.0.2",\n            "has-ansi": "2.0.0",\n            "strip-ansi": "3.0.0",\n            "supports-color": "2.0.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "1.1.4",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-1.1.4.tgz",\n          "integrity": "sha1-Gda/lN/AnXa6cR85uHLSH/TdkHE=",\n          "requires": {\n            "kind-of": "1.1.0"\n          }\n        },\n        "kind-of": {\n          "version": "1.1.0",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-1.1.0.tgz",\n          "integrity": "sha1-FAo9LUGjbS78+pN3tiwk+ElaXEQ="\n        },\n        "plugin-error": {\n          "version": "0.1.2",\n          "resolved": "https://registry.npmjs.org/plugin-error/-/plugin-error-0.1.2.tgz",\n          "integrity": "sha1-O5uzM1zPAPQl4HQ34ZJ2ln2kes4=",\n          "requires": {\n            "ansi-cyan": "0.1.1",\n            "ansi-red": "0.1.1",\n            "arr-diff": "1.0.1",\n            "arr-union": "2.0.1",\n            "extend-shallow": "1.1.2"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz",\n          "integrity": "sha1-U10EXOa2Nj+kARcIRimZXp3zJMc="\n        }\n      }\n    },\n    "rx-lite": {\n      "version": "4.0.8",\n      "resolved": "https://registry.npmjs.org/rx-lite/-/rx-lite-4.0.8.tgz",\n      "integrity": "sha1-Cx4Rr4vESDbwSmQH6S2kJGe3lEQ="\n    },\n    "rx-lite-aggregates": {\n      "version": "4.0.8",\n      "resolved": "https://registry.npmjs.org/rx-lite-aggregates/-/rx-lite-aggregates-4.0.8.tgz",\n      "integrity": "sha1-dTuHqJoRyVRnxKwWJsTvxOBcZ74=",\n      "requires": {\n        "rx-lite": "*"\n      }\n    },\n    "rxjs": {\n      "version": "6.4.0",\n      "resolved": "https://registry.npmjs.org/rxjs/-/rxjs-6.4.0.tgz",\n      "integrity": "sha512-Z9Yfa11F6B9Sg/BK9MnqnQ+aQYicPLtilXBp2yUtDt2JRCE0h26d33EnfO3ZxoNxG0T92OUucP3Ct7cpfkdFfw==",\n      "requires": {\n        "tslib": "1.9.0"\n      }\n    },\n    "safe-buffer": {\n      "version": "5.1.2",\n      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",\n      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="\n    },\n    "safe-regex": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz",\n      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",\n      "requires": {\n        "ret": "~0.1.10"\n      }\n    },\n    "safer-buffer": {\n      "version": "2.1.2",\n      "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",\n      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="\n    },\n    "sane": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/sane/-/sane-4.1.0.tgz",\n      "integrity": "sha512-hhbzAgTIX8O7SHfp2c8/kREfEn4qO/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNbY9mWd6paKVmKbAgLfZA==",\n      "requires": {\n        "@cnakazawa/watch": "1.0.3",\n        "anymatch": "2.0.0",\n        "capture-exit": "2.0.0",\n        "exec-sh": "0.3.2",\n        "execa": "1.0.0",\n        "fb-watchman": "2.0.0",\n        "micromatch": "3.1.4",\n        "minimist": "1.1.1",\n        "walker": "~1.0.5"\n      }\n    },\n    "sass-loader": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-7.1.0.tgz",\n      "integrity": "sha512-+G+BKGglmZM2GUSfT9TLuEp6tzehHPjAMoRRItOojWIqIGPloVCMhNIQuG639eJ+y033PaGTSjLaTHts8Kw79w==",\n      "requires": {\n        "clone-deep": "2.0.1",\n        "loader-utils": "1.0.1",\n        "lodash.tail": "4.1.1",\n        "neo-async": "2.5.0",\n        "pify": "3.0.0",\n        "semver": "5.5.0"\n      },\n      "dependencies": {\n        "clone-deep": {\n          "version": "2.0.2",\n          "resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-2.0.2.tgz",\n          "integrity": "sha512-SZegPTKjCgpQH63E+eN6mVEEPdQBOUzjyJm5Pora4lrwWRFS8I0QAxV/KD6vV/i0WuijHZWQC1fMsPEdxfdVCQ==",\n          "requires": {\n            "for-own": "1.0.0",\n            "is-plain-object": "2.0.4",\n            "kind-of": "6.0.0",\n            "shallow-clone": "1.0.0"\n          }\n        },\n        "for-own": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/for-own/-/for-own-1.0.0.tgz",\n          "integrity": "sha1-xjMy9BXO3EsE2/5wz4NklMU8tEs=",\n          "requires": {\n            "for-in": "1.0.1"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "shallow-clone": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-1.0.0.tgz",\n          "integrity": "sha512-oeXreoKR/SyNJtRJMAKPDSvd28OqEwG4eR/xc856cRGBII7gX9lvAqDxusPm0846z/w/hWYjI1NpKwJ00NHzRA==",\n          "requires": {\n            "is-extendable": "0.1.1",\n            "kind-of": "5.0.0",\n            "mixin-object": "2.0.1"\n          },\n          "dependencies": {\n            "kind-of": {\n              "version": "5.1.0",\n              "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz",\n              "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw=="\n            }\n          }\n        }\n      }\n    },\n    "sax": {\n      "version": "1.2.4",\n      "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",\n      "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="\n    },\n    "saxes": {\n      "version": "3.1.9",\n      "resolved": "https://registry.npmjs.org/saxes/-/saxes-3.1.9.tgz",\n      "integrity": "sha512-FZeKhJglhJHk7eWG5YM0z46VHmI3KJpMBAQm3xa9meDvd+wevB5GuBB0wc0exPInZiBBHqi00DbS8AcvCGCFMw==",\n      "requires": {\n        "xmlchars": "1.3.1"\n      }\n    },\n    "scheduler": {\n      "version": "0.13.6",\n      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.13.6.tgz",\n      "integrity": "sha512-IWnObHt413ucAYKsD9J1QShUKkbKLQQHdxRyw73sw4FN26iWr3DY/H34xGPe4nmL1DwXyWmSWmMrA9TfQbE/XQ==",\n      "requires": {\n        "loose-envify": "1.1.0",\n        "object-assign": "4.1.1"\n      }\n    },\n    "schema-utils": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/schema-utils/-/schema-utils-1.0.0.tgz",\n      "integrity": "sha512-i27Mic4KovM/lnGsy8whRCHhc7VicJajAjTrYg11K9zfZXnYIt4k5F+kZkwjnrhKzLic/HLU4j11mjsz2G/75g==",\n      "requires": {\n        "ajv": "6.1.0",\n        "ajv-errors": "1.0.0",\n        "ajv-keywords": "3.1.0"\n      }\n    },\n    "select-hose": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/select-hose/-/select-hose-2.0.0.tgz",\n      "integrity": "sha1-Yl2GWPhlr0Psliv8N2o3NZpJlMo="\n    },\n    "selfsigned": {\n      "version": "1.10.4",\n      "resolved": "https://registry.npmjs.org/selfsigned/-/selfsigned-1.10.4.tgz",\n      "integrity": "sha512-9AukTiDmHXGXWtWjembZ5NDmVvP2695EtpgbCsxCa68w3c88B+alqbmZ4O3hZ4VWGXeGWzEVdvqgAJD8DQPCDw==",\n      "requires": {\n        "node-forge": "0.7.5"\n      }\n    },\n    "semantic-ui": {\n      "version": "2.4.2",\n      "resolved": "https://registry.npmjs.org/semantic-ui/-/semantic-ui-2.4.2.tgz",\n      "integrity": "sha512-Nr7LDK/MbIM1Imxiktqhz9KOUCUz00rgxEkHb0xZvQUscK0z73SByrF9LYZaat0DQQA1u2dxj0EtEU7xWRu+zg==",\n      "requires": {\n        "better-console": "*",\n        "del": "3.0.0",\n        "extend": "3.0.2",\n        "gulp": "3.9.1",\n        "gulp-autoprefixer": "6.0.0",\n        "gulp-chmod": "2.0.0",\n        "gulp-clean-css": "3.10.0",\n        "gulp-clone": "2.0.1",\n        "gulp-concat": "2.6.1",\n        "gulp-concat-css": "3.1.0",\n        "gulp-copy": "4.0.1",\n        "gulp-dedupe": "0.0.2",\n        "gulp-flatten": "0.4.0",\n        "gulp-header": "2.0.5",\n        "gulp-help": "1.6.1",\n        "gulp-if": "2.0.2",\n        "gulp-json-editor": "2.4.2",\n        "gulp-less": "4.0.1",\n        "gulp-notify": "3.2.0",\n        "gulp-plumber": "1.2.0",\n        "gulp-print": "5.0.0",\n        "gulp-rename": "1.4.0",\n        "gulp-replace": "1.0.0",\n        "gulp-rtlcss": "1.3.0",\n        "gulp-uglify": "3.0.1",\n        "gulp-watch": "5.0.1",\n        "jquery": "3.3.1",\n        "map-stream": "0.1.0",\n        "merge-stream": "1.0.0",\n        "mkdirp": "0.5.1",\n        "prompt-sui": "3.2.1",\n        "replace-ext": "1.0.0",\n        "require-dot-file": "0.4.0",\n        "run-sequence": "2.2.1",\n        "wrench-sui": "0.0.3",\n        "yamljs": "0.3.0"\n      }\n    },\n    "semantic-ui-react": {\n      "version": "0.86.0",\n      "resolved": "https://registry.npmjs.org/semantic-ui-react/-/semantic-ui-react-0.86.0.tgz",\n      "integrity": "sha512-t/psK15zX9bEaezpRDwoXAZovp+I083SgsicAnMig/mxqaRI2FHZpr/G+lfzizrTpmYjgi4/Th6/QAol8pa7JQ==",\n      "dev": true,\n      "requires": {\n        "@babel/runtime": "7.1.2",\n        "@semantic-ui-react/event-stack": "3.1.0",\n        "classnames": "2.2.6",\n        "keyboard-key": "1.0.4",\n        "lodash": "4.17.11",\n        "prop-types": "15.6.2",\n        "react-is": "16.7.0",\n        "shallowequal": "1.1.0"\n      }\n    },\n    "semver": {\n      "version": "6.0.0",\n      "resolved": "https://registry.npmjs.org/semver/-/semver-6.0.0.tgz",\n      "integrity": "sha512-0UewU+9rFapKFnlbirLi3byoOuhrSsli/z/ihNnvM24vgF+8sNBiI1LZPBSH9wJKUwaUbw+s3hToDLCXkrghrQ=="\n    },\n    "semver-greatest-satisfied-range": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/semver-greatest-satisfied-range/-/semver-greatest-satisfied-range-1.1.0.tgz",\n      "integrity": "sha1-E+jCZYq5aRywzXEJMkAoDTb3els=",\n      "requires": {\n        "sver-compat": "1.5.0"\n      }\n    },\n    "send": {\n      "version": "0.16.2",\n      "resolved": "https://registry.npmjs.org/send/-/send-0.16.2.tgz",\n      "integrity": "sha512-E64YFPUssFHEFBvpbbjr44NCLtI1AohxQ8ZSiJjQLskAdKuriYEP6VyGEsRDH8ScozGpkaX1BGvhanqCwkcEZw==",\n      "requires": {\n        "debug": "2.6.9",\n        "depd": "~1.1.2",\n        "destroy": "~1.0.4",\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "etag": "~1.8.1",\n        "fresh": "0.5.2",\n        "http-errors": "~1.6.2",\n        "mime": "1.4.1",\n        "ms": "2.0.0",\n        "on-finished": "~2.3.0",\n        "range-parser": "~1.2.0",\n        "statuses": "~1.4.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "mime": {\n          "version": "1.4.1",\n          "resolved": "https://registry.npmjs.org/mime/-/mime-1.4.1.tgz",\n          "integrity": "sha512-KI1+qOZu5DcW6wayYHSzR/tXKCDC5Om4s1z2QJjDULzLcmf3DvzS7oluY4HCTrc+9FiKmWUgeNLg7W3uIQvxtQ=="\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "sequencify": {\n      "version": "0.0.7",\n      "resolved": "https://registry.npmjs.org/sequencify/-/sequencify-0.0.7.tgz",\n      "integrity": "sha1-kM/xnQLgcCf9dn9erT57ldHnOAw="\n    },\n    "serialize-javascript": {\n      "version": "1.7.0",\n      "resolved": "https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-1.7.0.tgz",\n      "integrity": "sha512-ke8UG8ulpFOxO8f8gRYabHQe/ZntKlcig2Mp+8+URDP1D8vJZ0KUt7LYo07q25Z/+JVSgpr/cui9PIp5H6/+nA=="\n    },\n    "serve-index": {\n      "version": "1.9.1",\n      "resolved": "https://registry.npmjs.org/serve-index/-/serve-index-1.9.1.tgz",\n      "integrity": "sha1-03aNabHn2C5c4FD/9bRTvqEqkjk=",\n      "requires": {\n        "accepts": "~1.3.4",\n        "batch": "0.6.1",\n        "debug": "2.6.9",\n        "escape-html": "~1.0.3",\n        "http-errors": "~1.6.2",\n        "mime-types": "~2.1.17",\n        "parseurl": "~1.3.2"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "serve-static": {\n      "version": "1.13.2",\n      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.13.2.tgz",\n      "integrity": "sha512-p/tdJrO4U387R9oMjb1oj7qSMaMfmOyd4j9hOFoxZe2baQszgHcSWjuya/CiT5kgZZKRudHNOA0pYXOl8rQ5nw==",\n      "requires": {\n        "encodeurl": "~1.0.2",\n        "escape-html": "~1.0.3",\n        "parseurl": "~1.3.2",\n        "send": "0.16.2"\n      }\n    },\n    "set-blocking": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz",\n      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc="\n    },\n    "set-value": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/set-value/-/set-value-2.0.0.tgz",\n      "integrity": "sha512-hw0yxk9GT/Hr5yJEYnHNKYXkIA8mVJgd9ditYZCe16ZczcaELYYcfvaXesNACk2O8O0nTiPQcQhGUQj8JLzeeg==",\n      "requires": {\n        "extend-shallow": "2.0.1",\n        "is-extendable": "0.1.1",\n        "is-plain-object": "2.0.3",\n        "split-string": "3.0.1"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        }\n      }\n    },\n    "setimmediate": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/setimmediate/-/setimmediate-1.0.5.tgz",\n      "integrity": "sha1-KQy7Iy4waULX1+qbg3Mqt4VvgoU="\n    },\n    "setprototypeof": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.1.0.tgz",\n      "integrity": "sha512-BvE/TwpZX4FXExxOxZyRGQQv651MSwmWKZGqvmPcRIjDqWub67kTKuIMx43cZZrS/cBBzwBcNDWoFxt2XEFIpQ=="\n    },\n    "sha.js": {\n      "version": "2.4.11",\n      "resolved": "https://registry.npmjs.org/sha.js/-/sha.js-2.4.11.tgz",\n      "integrity": "sha512-QMEp5B7cftE7APOjk5Y6xgrbWu+WkLVQwk8JNjZ8nKRciZaByEW6MubieAiToS7+dwvrjGhH8jRXz3MVd0AYqQ==",\n      "requires": {\n        "inherits": "2.0.1",\n        "safe-buffer": "5.0.1"\n      }\n    },\n    "shallow-clone": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/shallow-clone/-/shallow-clone-0.1.2.tgz",\n      "integrity": "sha1-WQnodLp3EG1zrEFM/sH/yofZcGA=",\n      "requires": {\n        "is-extendable": "0.1.1",\n        "kind-of": "2.0.1",\n        "lazy-cache": "0.2.3",\n        "mixin-object": "2.0.1"\n      },\n      "dependencies": {\n        "is-buffer": {\n          "version": "1.1.6",\n          "resolved": "https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz",\n          "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w=="\n        },\n        "kind-of": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-2.0.1.tgz",\n          "integrity": "sha1-AY7HpM5+OobLkUG+UZ0kyPqpgbU=",\n          "requires": {\n            "is-buffer": "1.0.2"\n          }\n        },\n        "lazy-cache": {\n          "version": "0.2.7",\n          "resolved": "https://registry.npmjs.org/lazy-cache/-/lazy-cache-0.2.7.tgz",\n          "integrity": "sha1-f+3fLctu23fRHvHRF6tf/fCrG2U="\n        }\n      }\n    },\n    "shallowequal": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/shallowequal/-/shallowequal-1.1.0.tgz",\n      "integrity": "sha512-y0m1JoUZSlPAjXVtPPW70aZWfIL/dSP7AFkRnniLCrK/8MDKog3TySTBmckD+RObVxH0v4Tox67+F14PdED2oQ==",\n      "dev": true\n    },\n    "shebang-command": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-1.2.0.tgz",\n      "integrity": "sha1-RKrGW2lbAzmJaMOfNj/uXer98eo=",\n      "requires": {\n        "shebang-regex": "1.0.0"\n      }\n    },\n    "shebang-regex": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-1.0.0.tgz",\n      "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO/qM="\n    },\n    "shell-quote": {\n      "version": "1.6.1",\n      "resolved": "https://registry.npmjs.org/shell-quote/-/shell-quote-1.6.1.tgz",\n      "integrity": "sha1-9HgZSczkAmlxJ0MOo7PFR29IF2c=",\n      "requires": {\n        "array-filter": "~0.0.0",\n        "array-map": "~0.0.0",\n        "array-reduce": "~0.0.0",\n        "jsonify": "~0.0.0"\n      }\n    },\n    "shellwords": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/shellwords/-/shellwords-0.1.1.tgz",\n      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYItiP3NdJqNVqetYAww=="\n    },\n    "sigmund": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/sigmund/-/sigmund-1.0.1.tgz",\n      "integrity": "sha1-P/IfGYytIXX587eBhT/ZTQ0ZtZA="\n    },\n    "signal-exit": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.2.tgz",\n      "integrity": "sha1-tf3AjxKH6hF4Yo5BXiUTK3NkbG0="\n    },\n    "simple-assign": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/simple-assign/-/simple-assign-0.1.0.tgz",\n      "integrity": "sha1-F/0wZqXz13OPUDIbsPFMooHMS6o=",\n      "dev": true\n    },\n    "simple-swizzle": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/simple-swizzle/-/simple-swizzle-0.2.2.tgz",\n      "integrity": "sha1-pNprY1/8zMoz9w0Xy5JZLeleVXo=",\n      "requires": {\n        "is-arrayish": "0.3.1"\n      },\n      "dependencies": {\n        "is-arrayish": {\n          "version": "0.3.2",\n          "resolved": "https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.3.2.tgz",\n          "integrity": "sha512-eVRqCvVlZbuw3GrM63ovNSNAeA1K16kaR/LRY/92w0zxQ5/1YzwblUX652i4Xs9RwAGjW9d9y6X88t8OaAJfWQ=="\n        }\n      }\n    },\n    "sisteransi": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.0.tgz",\n      "integrity": "sha512-N+z4pHB4AmUv0SjveWRd6q1Nj5w62m5jodv+GD8lvmbY/83T/rpbJGZOnK5T149OldDj4Db07BSv9xY4K6NTPQ=="\n    },\n    "slash": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/slash/-/slash-2.0.0.tgz",\n      "integrity": "sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A=="\n    },\n    "slice-ansi": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/slice-ansi/-/slice-ansi-2.1.0.tgz",\n      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJoSOetjx9QWOJ5mYoQ==",\n      "requires": {\n        "ansi-styles": "3.2.0",\n        "astral-regex": "1.0.0",\n        "is-fullwidth-code-point": "2.0.0"\n      }\n    },\n    "snapdragon": {\n      "version": "0.8.2",\n      "resolved": "https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz",\n      "integrity": "sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==",\n      "requires": {\n        "base": "0.11.1",\n        "debug": "2.2.0",\n        "define-property": "0.2.5",\n        "extend-shallow": "2.0.1",\n        "map-cache": "0.2.2",\n        "source-map": "0.5.6",\n        "source-map-resolve": "0.5.0",\n        "use": "3.1.0"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "2.6.9",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",\n          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",\n          "requires": {\n            "ms": "2.0.0"\n          }\n        },\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "0.1.0"\n          }\n        },\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        },\n        "ms": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",\n          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="\n        }\n      }\n    },\n    "snapdragon-node": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz",\n      "integrity": "sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==",\n      "requires": {\n        "define-property": "1.0.0",\n        "isobject": "3.0.0",\n        "snapdragon-util": "3.0.1"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz",\n          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm/sOY=",\n          "requires": {\n            "is-descriptor": "1.0.0"\n          }\n        },\n        "is-accessor-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz",\n          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-data-descriptor": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz",\n          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==",\n          "requires": {\n            "kind-of": "6.0.0"\n          }\n        },\n        "is-descriptor": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz",\n          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==",\n          "requires": {\n            "is-accessor-descriptor": "1.0.0",\n            "is-data-descriptor": "1.0.0",\n            "kind-of": "6.0.2"\n          }\n        },\n        "kind-of": {\n          "version": "6.0.2",\n          "resolved": "https://registry.npmjs.org/kind-of/-/kind-of-6.0.2.tgz",\n          "integrity": "sha512-s5kLOcnH0XqDO+FvuaLX8DDjZ18CGFk7VygH40QoKPUQhW4e2rvM0rwUq0t8IQDOwYSeLK01U90OjzBTme2QqA=="\n        }\n      }\n    },\n    "snapdragon-util": {\n      "version": "3.0.1",\n      "resolved": "https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz",\n      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==",\n      "requires": {\n        "kind-of": "3.2.0"\n      }\n    },\n    "sockjs": {\n      "version": "0.3.19",\n      "resolved": "https://registry.npmjs.org/sockjs/-/sockjs-0.3.19.tgz",\n      "integrity": "sha512-V48klKZl8T6MzatbLlzzRNhMepEys9Y4oGFpypBFFn1gLI/QQ9HtLLyWJNbPlwGLelOVOEijUbTTJeLLI59jLw==",\n      "requires": {\n        "faye-websocket": "0.10.0",\n        "uuid": "3.0.1"\n      },\n      "dependencies": {\n        "faye-websocket": {\n          "version": "0.10.0",\n          "resolved": "https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.10.0.tgz",\n          "integrity": "sha1-TkkvjQTftviQA1B/btvy1QHnxvQ=",\n          "requires": {\n            "websocket-driver": ">=0.5.1"\n          }\n        }\n      }\n    },\n    "sockjs-client": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/sockjs-client/-/sockjs-client-1.3.0.tgz",\n      "integrity": "sha512-R9jxEzhnnrdxLCNln0xg5uGHqMnkhPSTzUZH2eXcR03S/On9Yvoq2wyUZILRUhZCNVu2PmwWVoyuiPz8th8zbg==",\n      "requires": {\n        "debug": "3.2.5",\n        "eventsource": "1.0.7",\n        "faye-websocket": "~0.11.1",\n        "inherits": "2.0.3",\n        "json3": "3.3.2",\n        "url-parse": "1.4.3"\n      },\n      "dependencies": {\n        "debug": {\n          "version": "3.2.6",\n          "resolved": "https://registry.npmjs.org/debug/-/debug-3.2.6.tgz",\n          "integrity": "sha512-mel+jf7nrtEl5Pn1Qx46zARXKDpBbvzezse7p7LqINmdoIk8PYP5SySaxEmYv6TZ0JyEKA1hsCId6DIhgITtWQ==",\n          "requires": {\n            "ms": "2.1.1"\n          }\n        }\n      }\n    },\n    "source-list-map": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/source-list-map/-/source-list-map-2.0.1.tgz",\n      "integrity": "sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw=="\n    },\n    "source-map": {\n      "version": "0.5.7",\n      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",\n      "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w="\n    },\n    "source-map-resolve": {\n      "version": "0.5.2",\n      "resolved": "https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.2.tgz",\n      "integrity": "sha512-MjqsvNwyz1s0k81Goz/9vRBe9SZdB09Bdw+/zYyO+3CuPk6fouTaxscHkgtE8jKvf01kVfl8riHzERQ/kefaSA==",\n      "requires": {\n        "atob": "2.1.1",\n        "decode-uri-component": "0.2.0",\n        "resolve-url": "0.2.1",\n        "source-map-url": "0.4.0",\n        "urix": "0.1.0"\n      }\n    },\n    "source-map-support": {\n      "version": "0.5.12",\n      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.12.tgz",\n      "integrity": "sha512-4h2Pbvyy15EE02G+JOZpUCmqWJuqrs+sEkzewTm++BPi7Hvn/HwcqLAcNxYAyI0x13CpPPn+kMjl+hplXMHITQ==",\n      "requires": {\n        "buffer-from": "1.0.0",\n        "source-map": "0.6.0"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "source-map-url": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.0.tgz",\n      "integrity": "sha1-PpNdfd1zYxuXZZlW1VEo6HtQhKM="\n    },\n    "space-separated-tokens": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/space-separated-tokens/-/space-separated-tokens-1.1.3.tgz",\n      "integrity": "sha512-/M5RAdBuQlSDPNfA5ube+fkHbHyY08pMuADLmsAQURzo56w90r681oiOoz3o3ZQyWdSeNucpTFjL+Ggd5qui3w=="\n    },\n    "sparkles": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/sparkles/-/sparkles-1.0.1.tgz",\n      "integrity": "sha512-dSO0DDYUahUt/0/pD/Is3VIm5TGJjludZ0HVymmhYF6eNA53PVLhnUk0znSYbH8IYBuJdCE+1luR22jNLMaQdw=="\n    },\n    "spdx-correct": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.0.tgz",\n      "integrity": "sha512-lr2EZCctC2BNR7j7WzJ2FpDznxky1sjfxvvYEyzxNyb6lZXHODmEoJeFu4JupYlkfha1KZpJyoqiJ7pgA1qq8Q==",\n      "requires": {\n        "spdx-expression-parse": "3.0.0",\n        "spdx-license-ids": "3.0.0"\n      }\n    },\n    "spdx-exceptions": {\n      "version": "2.2.0",\n      "resolved": "https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.2.0.tgz",\n      "integrity": "sha512-2XQACfElKi9SlVb1CYadKDXvoajPgBVPn/gOQLrTvHdElaVhr7ZEbqJaRnJLVNeaI4cMEAgVCeBMKF6MWRDCRA=="\n    },\n    "spdx-expression-parse": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.0.tgz",\n      "integrity": "sha512-Yg6D3XpRD4kkOmTpdgbUiEJFKghJH03fiC1OPll5h/0sO6neh2jqRDVHOQ4o/LMea0tgCkbMgea5ip/e+MkWyg==",\n      "requires": {\n        "spdx-exceptions": "2.1.0",\n        "spdx-license-ids": "3.0.0"\n      }\n    },\n    "spdx-license-ids": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.4.tgz",\n      "integrity": "sha512-7j8LYJLeY/Yb6ACbQ7F76qy5jHkp0U6jgBfJsk97bwWlVUnUWsAgpyaCvo17h0/RQGnQ036tVDomiwoI4pDkQA=="\n    },\n    "spdy": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/spdy/-/spdy-4.0.0.tgz",\n      "integrity": "sha512-ot0oEGT/PGUpzf/6uk4AWLqkq+irlqHXkrdbk51oWONh3bxQmBuljxPNl66zlRRcIJStWq0QkLUCPOPjgjvU0Q==",\n      "requires": {\n        "debug": "4.1.0",\n        "handle-thing": "2.0.0",\n        "http-deceiver": "1.2.7",\n        "select-hose": "2.0.0",\n        "spdy-transport": "3.0.0"\n      }\n    },\n    "spdy-transport": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/spdy-transport/-/spdy-transport-3.0.0.tgz",\n      "integrity": "sha512-hsLVFE5SjA6TCisWeJXFKniGGOpBgMLmerfO2aCyCU5s7nJ/rpAepqmFifv/GCbSbueEeAJJnmSQ2rKC/g8Fcw==",\n      "requires": {\n        "debug": "4.1.0",\n        "detect-node": "2.0.4",\n        "hpack.js": "2.1.6",\n        "obuf": "1.1.2",\n        "readable-stream": "3.0.6",\n        "wbuf": "1.7.3"\n      },\n      "dependencies": {\n        "readable-stream": {\n          "version": "3.3.0",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.3.0.tgz",\n          "integrity": "sha512-EsI+s3k3XsW+fU8fQACLN59ky34AZ14LoeVZpYwmZvldCFo0r0gnelwF2TcMjLor/BTL5aDJVBMkss0dthToPw==",\n          "requires": {\n            "inherits": "2.0.3",\n            "string_decoder": "1.1.1",\n            "util-deprecate": "1.0.1"\n          }\n        }\n      }\n    },\n    "split": {\n      "version": "0.2.10",\n      "resolved": "https://registry.npmjs.org/split/-/split-0.2.10.tgz",\n      "integrity": "sha1-Zwl8YB1pfOE2j0GPBs0gHPBSGlc=",\n      "requires": {\n        "through": "2"\n      }\n    },\n    "split-string": {\n      "version": "3.1.0",\n      "resolved": "https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz",\n      "integrity": "sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==",\n      "requires": {\n        "extend-shallow": "3.0.0"\n      }\n    },\n    "split.js": {\n      "version": "1.5.10",\n      "resolved": "https://registry.npmjs.org/split.js/-/split.js-1.5.10.tgz",\n      "integrity": "sha512-/J52X5c4ZypVwu4WAhD8E1T9uXQtNokvG6mIBHauzyA1aKH6bmETVSv3RPjBXEz6Gcc4mIThgmjGQL39LD16jQ=="\n    },\n    "sprintf-js": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",\n      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="\n    },\n    "sshpk": {\n      "version": "1.16.1",\n      "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",\n      "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",\n      "requires": {\n        "asn1": "~0.2.3",\n        "assert-plus": "1.0.0",\n        "bcrypt-pbkdf": "1.0.0",\n        "dashdash": "1.12.0",\n        "ecc-jsbn": "~0.1.1",\n        "getpass": "0.1.1",\n        "jsbn": "~0.1.0",\n        "safer-buffer": "2.0.2",\n        "tweetnacl": "~0.14.0"\n      }\n    },\n    "ssri": {\n      "version": "6.0.1",\n      "resolved": "https://registry.npmjs.org/ssri/-/ssri-6.0.1.tgz",\n      "integrity": "sha512-3Wge10hNcT1Kur4PDFwEieXSCMCJs/7WvSACcrMYrNp+b8kDL1/0wJch5Ni2WrtwEa2IO8OsVfeKIciKCDx/QA==",\n      "requires": {\n        "figgy-pudding": "3.5.1"\n      }\n    },\n    "stable": {\n      "version": "0.1.8",\n      "resolved": "https://registry.npmjs.org/stable/-/stable-0.1.8.tgz",\n      "integrity": "sha512-ji9qxRnOVfcuLDySj9qzhGSEFVobyt1kIOSkj1qZzYLzq7Tos/oUUWvotUPQLlrsidqsK6tBH89Bc9kL5zHA6w=="\n    },\n    "stack-trace": {\n      "version": "0.0.10",\n      "resolved": "https://registry.npmjs.org/stack-trace/-/stack-trace-0.0.10.tgz",\n      "integrity": "sha1-VHxws0fo0ytOEI6hoqFZ5f3eGcA="\n    },\n    "stack-utils": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/stack-utils/-/stack-utils-1.0.2.tgz",\n      "integrity": "sha512-MTX+MeG5U994cazkjd/9KNAapsHnibjMLnfXodlkXw76JEea0UiNzrqidzo1emMwk7w5Qhc9jd4Bn9TBb1MFwA=="\n    },\n    "stat-mode": {\n      "version": "0.2.2",\n      "resolved": "https://registry.npmjs.org/stat-mode/-/stat-mode-0.2.2.tgz",\n      "integrity": "sha1-5sgLYjEj19gM8TLOU480YokHJQI="\n    },\n    "static-extend": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz",\n      "integrity": "sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=",\n      "requires": {\n        "define-property": "0.2.5",\n        "object-copy": "0.1.0"\n      },\n      "dependencies": {\n        "define-property": {\n          "version": "0.2.5",\n          "resolved": "https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz",\n          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",\n          "requires": {\n            "is-descriptor": "0.1.0"\n          }\n        }\n      }\n    },\n    "statuses": {\n      "version": "1.4.0",\n      "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.4.0.tgz",\n      "integrity": "sha512-zhSCtt8v2NDrRlPQpCNtw/heZLtfUDqxBM1udqikb/Hbk52LK4nQSwr10u77iopCW5LsyHpuXS0GnEc48mLeew=="\n    },\n    "stealthy-require": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",\n      "integrity": "sha1-NbCYdbT/SfJqd35QmzCQoyJr8ks="\n    },\n    "stream-browserify": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/stream-browserify/-/stream-browserify-2.0.2.tgz",\n      "integrity": "sha512-nX6hmklHs/gr2FuxYDltq8fJA1GDlxKQCz8O/IM4atRqBH8OORmBNgfvW5gG10GT/qQ9u0CzIvr2X5Pkt6ntqg==",\n      "requires": {\n        "inherits": "~2.0.1",\n        "readable-stream": "2.0.2"\n      }\n    },\n    "stream-combiner": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/stream-combiner/-/stream-combiner-0.0.4.tgz",\n      "integrity": "sha1-TV5DPBhSYd3mI8o/RMWGvPXErRQ=",\n      "requires": {\n        "duplexer": "~0.1.1"\n      }\n    },\n    "stream-consume": {\n      "version": "0.1.1",\n      "resolved": "https://registry.npmjs.org/stream-consume/-/stream-consume-0.1.1.tgz",\n      "integrity": "sha512-tNa3hzgkjEP7XbCkbRXe1jpg+ievoa0O4SCFlMOYEscGSS4JJsckGL8swUyAa/ApGU3Ae4t6Honor4HhL+tRyg=="\n    },\n    "stream-each": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/stream-each/-/stream-each-1.2.3.tgz",\n      "integrity": "sha512-vlMC2f8I2u/bZGqkdfLQW/13Zihpej/7PmSiMQsbYddxuTsJp8vRe2x2FvVExZg7FaOds43ROAuFJwPR4MTZLw==",\n      "requires": {\n        "end-of-stream": "1.1.0",\n        "stream-shift": "1.0.0"\n      }\n    },\n    "stream-exhaust": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/stream-exhaust/-/stream-exhaust-1.0.2.tgz",\n      "integrity": "sha512-b/qaq/GlBK5xaq1yrK9/zFcyRSTNxmcZwFLGSTG0mXgZl/4Z6GgiyYOXOvY7N3eEvFRAG1bkDRz5EPGSvPYQlw=="\n    },\n    "stream-http": {\n      "version": "2.8.3",\n      "resolved": "https://registry.npmjs.org/stream-http/-/stream-http-2.8.3.tgz",\n      "integrity": "sha512-+TSkfINHDo4J+ZobQLWiMouQYB+UVYFttRA94FpEzzJ7ZdqcL4uUUQ7WkdkI4DSozGmgBUE/a47L+38PenXhUw==",\n      "requires": {\n        "builtin-status-codes": "3.0.0",\n        "inherits": "2.0.1",\n        "readable-stream": "2.3.6",\n        "to-arraybuffer": "1.0.0",\n        "xtend": "4.0.0"\n      }\n    },\n    "stream-shift": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/stream-shift/-/stream-shift-1.0.0.tgz",\n      "integrity": "sha1-1cdSgl5TZ+eG944Y5EXqIjoVWVI="\n    },\n    "string-length": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/string-length/-/string-length-2.0.0.tgz",\n      "integrity": "sha1-1A27aGo6zpYMHP/KVivyxF+DY+0=",\n      "requires": {\n        "astral-regex": "1.0.0",\n        "strip-ansi": "4.0.0"\n      }\n    },\n    "string-width": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/string-width/-/string-width-2.1.1.tgz",\n      "integrity": "sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==",\n      "requires": {\n        "is-fullwidth-code-point": "2.0.0",\n        "strip-ansi": "4.0.0"\n      }\n    },\n    "string_decoder": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",\n      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",\n      "requires": {\n        "safe-buffer": "~5.1.0"\n      }\n    },\n    "stringify-object": {\n      "version": "3.3.0",\n      "resolved": "https://registry.npmjs.org/stringify-object/-/stringify-object-3.3.0.tgz",\n      "integrity": "sha512-rHqiFh1elqCQ9WPLIC8I0Q/g/wj5J1eMkyoiD6eoQApWHP0FtlK7rqnhmabL5VUY9JQCcqwwvlOaSuutekgyrw==",\n      "requires": {\n        "get-own-enumerable-property-symbols": "3.0.0",\n        "is-obj": "1.0.1",\n        "is-regexp": "1.0.0"\n      }\n    },\n    "strip-ansi": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz",\n      "integrity": "sha1-qEeQIusaw2iocTibY1JixQXuNo8=",\n      "requires": {\n        "ansi-regex": "3.0.0"\n      }\n    },\n    "strip-bom": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-3.0.0.tgz",\n      "integrity": "sha1-IzTBjpx1n3vdVv3vfprj1YjmjtM="\n    },\n    "strip-bom-stream": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/strip-bom-stream/-/strip-bom-stream-2.0.0.tgz",\n      "integrity": "sha1-+H217yYT9paKpUWr/h7HKLaoKco=",\n      "requires": {\n        "first-chunk-stream": "2.0.0",\n        "strip-bom": "2.0.0"\n      },\n      "dependencies": {\n        "first-chunk-stream": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/first-chunk-stream/-/first-chunk-stream-2.0.0.tgz",\n          "integrity": "sha1-G97NuOCDwGZLkZRVgVd6Q6nzHXA=",\n          "requires": {\n            "readable-stream": "2.0.2"\n          }\n        },\n        "strip-bom": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",\n          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",\n          "requires": {\n            "is-utf8": "0.2.0"\n          }\n        }\n      }\n    },\n    "strip-comments": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/strip-comments/-/strip-comments-1.0.2.tgz",\n      "integrity": "sha512-kL97alc47hoyIQSV165tTt9rG5dn4w1dNnBhOQ3bOU1Nc1hel09jnXANaHJ7vzHLd4Ju8kseDGzlev96pghLFw==",\n      "requires": {\n        "babel-extract-comments": "1.0.0",\n        "babel-plugin-transform-object-rest-spread": "6.26.0"\n      }\n    },\n    "strip-eof": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/strip-eof/-/strip-eof-1.0.0.tgz",\n      "integrity": "sha1-u0P/VZim6wXYm1n80SnJgzE2Br8="\n    },\n    "strip-json-comments": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",\n      "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="\n    },\n    "style-loader": {\n      "version": "0.23.1",\n      "resolved": "https://registry.npmjs.org/style-loader/-/style-loader-0.23.1.tgz",\n      "integrity": "sha512-XK+uv9kWwhZMZ1y7mysB+zoihsEj4wneFWAS5qoiLwzW0WzSqMrrsIy+a3zkQJq0ipFtBpX5W3MqyRIBF/WFGg==",\n      "requires": {\n        "loader-utils": "1.1.0",\n        "schema-utils": "1.0.0"\n      }\n    },\n    "stylehacks": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/stylehacks/-/stylehacks-4.0.3.tgz",\n      "integrity": "sha512-7GlLk9JwlElY4Y6a/rmbH2MhVlTyVmiJd1PfTCqFaIBEGMYNsrO/v3SeGTdhBThLg4Z+NbOk/qFMwCa+J+3p/g==",\n      "requires": {\n        "browserslist": "4.0.0",\n        "postcss": "7.0.0",\n        "postcss-selector-parser": "3.0.0"\n      },\n      "dependencies": {\n        "postcss-selector-parser": {\n          "version": "3.1.1",\n          "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-3.1.1.tgz",\n          "integrity": "sha1-T4dfSvsMllc9XPTXQBGu4lCn6GU=",\n          "requires": {\n            "dot-prop": "4.1.1",\n            "indexes-of": "1.0.1",\n            "uniq": "1.0.1"\n          }\n        }\n      }\n    },\n    "stylis": {\n      "version": "3.5.4",\n      "resolved": "https://registry.npmjs.org/stylis/-/stylis-3.5.4.tgz",\n      "integrity": "sha512-8/3pSmthWM7lsPBKv7NXkzn2Uc9W7NotcwGNpJaa3k7WMM1XDCA4MgT5k/8BIexd5ydZdboXtU90XH9Ec4Bv/Q=="\n    },\n    "stylis-rule-sheet": {\n      "version": "0.0.10",\n      "resolved": "https://registry.npmjs.org/stylis-rule-sheet/-/stylis-rule-sheet-0.0.10.tgz",\n      "integrity": "sha512-nTbZoaqoBnmK+ptANthb10ZRZOGC+EmTLLUxeYIuHNkEKcmKgXX1XWKkUBT2Ac4es3NybooPe0SmvKdhKJZAuw=="\n    },\n    "supports-color": {\n      "version": "5.5.0",\n      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",\n      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",\n      "requires": {\n        "has-flag": "3.0.0"\n      }\n    },\n    "sver-compat": {\n      "version": "1.5.0",\n      "resolved": "https://registry.npmjs.org/sver-compat/-/sver-compat-1.5.0.tgz",\n      "integrity": "sha1-PPh9/rTQe0o/FIJ7wYaz/QxkXNg=",\n      "requires": {\n        "es6-iterator": "2.0.1",\n        "es6-symbol": "3.1.1"\n      }\n    },\n    "svgo": {\n      "version": "1.2.2",\n      "resolved": "https://registry.npmjs.org/svgo/-/svgo-1.2.2.tgz",\n      "integrity": "sha512-rAfulcwp2D9jjdGu+0CuqlrAUin6bBWrpoqXWwKDZZZJfXcUXQSxLJOFJCQCSA0x0pP2U0TxSlJu2ROq5Bq6qA==",\n      "requires": {\n        "chalk": "2.4.1",\n        "coa": "2.0.2",\n        "css-select": "2.0.0",\n        "css-select-base-adapter": "0.1.1",\n        "css-tree": "1.0.0-alpha.28",\n        "css-url-regex": "1.1.0",\n        "csso": "3.5.1",\n        "js-yaml": "3.13.1",\n        "mkdirp": "~0.5.1",\n        "object.values": "1.1.0",\n        "sax": "~1.2.4",\n        "stable": "0.1.8",\n        "unquote": "~1.1.1",\n        "util.promisify": "~1.0.0"\n      }\n    },\n    "symbol-observable": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/symbol-observable/-/symbol-observable-1.2.0.tgz",\n      "integrity": "sha512-e900nM8RRtGhlV36KGEU9k65K3mPb1WV70OdjfxlG2EAuM1noi/E/BaW/uMhL7bPEssK8QV57vN3esixjUvcXQ=="\n    },\n    "symbol-tree": {\n      "version": "3.2.2",\n      "resolved": "https://registry.npmjs.org/symbol-tree/-/symbol-tree-3.2.2.tgz",\n      "integrity": "sha1-rifbOPZgp64uHDt9G8KQgZuFGeY="\n    },\n    "table": {\n      "version": "5.2.3",\n      "resolved": "https://registry.npmjs.org/table/-/table-5.2.3.tgz",\n      "integrity": "sha512-N2RsDAMvDLvYwFcwbPyF3VmVSSkuF+G1e+8inhBLtHpvwXGw4QRPEZhihQNeEN0i1up6/f6ObCJXNdlRG3YVyQ==",\n      "requires": {\n        "ajv": "6.9.1",\n        "lodash": "4.17.11",\n        "slice-ansi": "2.1.0",\n        "string-width": "3.0.0"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-4.1.0.tgz",\n          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p/rmMueb7tWZjQ1rx4Loy1ArBggoqGpfqqdI4rondg=="\n        },\n        "string-width": {\n          "version": "3.1.0",\n          "resolved": "https://registry.npmjs.org/string-width/-/string-width-3.1.0.tgz",\n          "integrity": "sha512-vafcv6KjVZKSgz06oM/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJPQ1b+KDUqDFctkdRW44e1w==",\n          "requires": {\n            "emoji-regex": "7.0.1",\n            "is-fullwidth-code-point": "2.0.0",\n            "strip-ansi": "5.1.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "5.2.0",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-5.2.0.tgz",\n          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPmPmMMJ6W773MaA3J+lbiWA==",\n          "requires": {\n            "ansi-regex": "4.1.0"\n          }\n        }\n      }\n    },\n    "tapable": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/tapable/-/tapable-1.1.3.tgz",\n      "integrity": "sha512-4WK/bYZmj8xLr+HUCODHGF1ZFzsYffasLUgEiMBY4fgtltdO6B4WJtlSbPaDTLpYTcGVwM2qLnFTICEcNxs3kA=="\n    },\n    "ternary-stream": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/ternary-stream/-/ternary-stream-2.0.1.tgz",\n      "integrity": "sha1-Bk5Im0tb9gumpre8fy9cJ07Pgmk=",\n      "requires": {\n        "duplexify": "3.5.0",\n        "fork-stream": "0.0.4",\n        "merge-stream": "1.0.0",\n        "through2": "2.0.1"\n      }\n    },\n    "terser": {\n      "version": "3.17.0",\n      "resolved": "https://registry.npmjs.org/terser/-/terser-3.17.0.tgz",\n      "integrity": "sha512-/FQzzPJmCpjAH9Xvk2paiWrFq+5M6aVOf+2KRbwhByISDX/EujxsK+BAvrhb6H+2rtrLCHK9N01wO014vrIwVQ==",\n      "requires": {\n        "commander": "2.19.0",\n        "source-map": "~0.6.1",\n        "source-map-support": "~0.5.10"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "terser-webpack-plugin": {\n      "version": "1.2.3",\n      "resolved": "https://registry.npmjs.org/terser-webpack-plugin/-/terser-webpack-plugin-1.2.3.tgz",\n      "integrity": "sha512-GOK7q85oAb/5kE12fMuLdn2btOS9OBZn4VsecpHDywoUC/jLhSAKOiYo0ezx7ss2EXPMzyEWFoE0s1WLE+4+oA==",\n      "requires": {\n        "cacache": "11.0.2",\n        "find-cache-dir": "2.0.0",\n        "schema-utils": "1.0.0",\n        "serialize-javascript": "1.4.0",\n        "source-map": "0.6.1",\n        "terser": "3.16.1",\n        "webpack-sources": "1.1.0",\n        "worker-farm": "1.5.2"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "test-exclude": {\n      "version": "5.2.2",\n      "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-5.2.2.tgz",\n      "integrity": "sha512-N2pvaLpT8guUpb5Fe1GJlmvmzH3x+DAKmmyEQmFP792QcLYoGE1syxztSvPD1V8yPe6VrcCt6YGQVjSRjCASsA==",\n      "requires": {\n        "glob": "7.1.3",\n        "minimatch": "3.0.4",\n        "read-pkg-up": "4.0.0",\n        "require-main-filename": "2.0.0"\n      }\n    },\n    "text-table": {\n      "version": "0.2.0",\n      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",\n      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ="\n    },\n    "textextensions": {\n      "version": "2.4.0",\n      "resolved": "https://registry.npmjs.org/textextensions/-/textextensions-2.4.0.tgz",\n      "integrity": "sha512-qftQXnX1DzpSV8EddtHIT0eDDEiBF8ywhFYR2lI9xrGtxqKN+CvLXhACeCIGbCpQfxxERbrkZEFb8cZcDKbVZA=="\n    },\n    "throat": {\n      "version": "4.1.0",\n      "resolved": "https://registry.npmjs.org/throat/-/throat-4.1.0.tgz",\n      "integrity": "sha1-iQN8vJLFarGJJua6TLsgDhVnKmo="\n    },\n    "through": {\n      "version": "2.3.8",\n      "resolved": "https://registry.npmjs.org/through/-/through-2.3.8.tgz",\n      "integrity": "sha1-DdTJ/6q8NXlgsbckEV1+Doai4fU="\n    },\n    "through2": {\n      "version": "2.0.5",\n      "resolved": "https://registry.npmjs.org/through2/-/through2-2.0.5.tgz",\n      "integrity": "sha512-/mrRod8xqpA+IHSLyGCQ2s8SPHiCDEeQJSep1jqLYeEUClOFG2Qsh+4FU6G9VeqpZnGW/Su8LQGc4YKni5rYSQ==",\n      "requires": {\n        "readable-stream": "~2.3.6",\n        "xtend": "~4.0.1"\n      }\n    },\n    "through2-filter": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/through2-filter/-/through2-filter-3.0.0.tgz",\n      "integrity": "sha512-jaRjI2WxN3W1V8/FMZ9HKIBXixtiqs3SQSX4/YGIiP3gL6djW48VoZq9tDqeCWs3MT8YY5wb/zli8VW8snY1CA==",\n      "requires": {\n        "through2": "~2.0.0",\n        "xtend": "~4.0.0"\n      }\n    },\n    "thunky": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/thunky/-/thunky-1.0.3.tgz",\n      "integrity": "sha512-YwT8pjmNcAXBZqrubu22P4FYsh2D4dxRmnWBOL8Jk8bUcRUtc5326kx32tuTmFDAZtLOGEVNl8POAR8j896Iow=="\n    },\n    "tildify": {\n      "version": "1.2.0",\n      "resolved": "https://registry.npmjs.org/tildify/-/tildify-1.2.0.tgz",\n      "integrity": "sha1-3OwD9V3Km3qj5bBPIYF+tW5jWIo=",\n      "requires": {\n        "os-homedir": "1.0.0"\n      }\n    },\n    "time-stamp": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/time-stamp/-/time-stamp-1.1.0.tgz",\n      "integrity": "sha1-dkpaEa9QVhkhsTPztE5hhofg9cM="\n    },\n    "timers-browserify": {\n      "version": "2.0.10",\n      "resolved": "https://registry.npmjs.org/timers-browserify/-/timers-browserify-2.0.10.tgz",\n      "integrity": "sha512-YvC1SV1XdOUaL6gx5CoGroT3Gu49pK9+TZ38ErPldOWW4j49GI1HKs9DV+KGq/w6y+LZ72W1c8cKz2vzY+qpzg==",\n      "requires": {\n        "setimmediate": "1.0.4"\n      }\n    },\n    "timsort": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",\n      "integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="\n    },\n    "tmp": {\n      "version": "0.0.33",\n      "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",\n      "integrity": "sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==",\n      "requires": {\n        "os-tmpdir": "~1.0.2"\n      }\n    },\n    "tmpl": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/tmpl/-/tmpl-1.0.4.tgz",\n      "integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE="\n    },\n    "to-absolute-glob": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/to-absolute-glob/-/to-absolute-glob-2.0.2.tgz",\n      "integrity": "sha1-GGX0PZ50sIItufFFt4z/fQ98hJs=",\n      "requires": {\n        "is-absolute": "1.0.0",\n        "is-negated-glob": "1.0.0"\n      }\n    },\n    "to-arraybuffer": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/to-arraybuffer/-/to-arraybuffer-1.0.1.tgz",\n      "integrity": "sha1-fSKbH8xjfkZsoIEYCDanqr/4P0M="\n    },\n    "to-fast-properties": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",\n      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og/YW4="\n    },\n    "to-object-path": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz",\n      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",\n      "requires": {\n        "kind-of": "3.0.2"\n      }\n    },\n    "to-regex": {\n      "version": "3.0.2",\n      "resolved": "https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz",\n      "integrity": "sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==",\n      "requires": {\n        "define-property": "2.0.2",\n        "extend-shallow": "3.0.2",\n        "regex-not": "1.0.2",\n        "safe-regex": "1.1.0"\n      }\n    },\n    "to-regex-range": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz",\n      "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",\n      "requires": {\n        "is-number": "3.0.0",\n        "repeat-string": "1.6.1"\n      }\n    },\n    "to-through": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/to-through/-/to-through-2.0.0.tgz",\n      "integrity": "sha1-/JKtq6ByZHvAtn1rA2ZKoZUJOvY=",\n      "requires": {\n        "through2": "2.0.3"\n      }\n    },\n    "topo": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/topo/-/topo-3.0.3.tgz",\n      "integrity": "sha512-IgpPtvD4kjrJ7CRA3ov2FhWQADwv+Tdqbsf1ZnPUSAtCJ9e1Z44MmoSGDXGk4IppoZA7jd/QRkNddlLJWlUZsQ==",\n      "requires": {\n        "hoek": "6.x.x"\n      }\n    },\n    "touch": {\n      "version": "2.0.2",\n      "resolved": "https://registry.npmjs.org/touch/-/touch-2.0.2.tgz",\n      "integrity": "sha512-qjNtvsFXTRq7IuMLweVgFxmEuQ6gLbRs2jQxL80TtZ31dEKWYIxRXquij6w6VimyDek5hD3PytljHmEtAs2u0A==",\n      "requires": {\n        "nopt": "~1.0.10"\n      },\n      "dependencies": {\n        "nopt": {\n          "version": "1.0.10",\n          "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",\n          "integrity": "sha1-bd0hvSoxQXuScn3Vhfim83YI6+4=",\n          "requires": {\n            "abbrev": "1"\n          }\n        }\n      }\n    },\n    "tough-cookie": {\n      "version": "2.5.0",\n      "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",\n      "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",\n      "requires": {\n        "psl": "1.1.28",\n        "punycode": "2.1.1"\n      }\n    },\n    "tr46": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/tr46/-/tr46-1.0.1.tgz",\n      "integrity": "sha1-qLE/1r/SSJUZZ0zN5VujaTtwbQk=",\n      "requires": {\n        "punycode": "2.1.0"\n      }\n    },\n    "trim-right": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/trim-right/-/trim-right-1.0.1.tgz",\n      "integrity": "sha1-yy4SAwZ+DI3h9hQJS5/kVwTqYAM="\n    },\n    "trough": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/trough/-/trough-1.0.3.tgz",\n      "integrity": "sha512-fwkLWH+DimvA4YCy+/nvJd61nWQQ2liO/nF/RjkTpiOGi+zxZzVkhb1mvbHIIW4b/8nDsYI8uTmAlc0nNkRMOw=="\n    },\n    "ts-pnp": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/ts-pnp/-/ts-pnp-1.1.2.tgz",\n      "integrity": "sha512-f5Knjh7XCyRIzoC/z1Su1yLLRrPrFCgtUAh/9fCSP6NKbATwpOL1+idQVXQokK9GRFURn/jYPGPfegIctwunoA=="\n    },\n    "tslib": {\n      "version": "1.9.3",\n      "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.9.3.tgz",\n      "integrity": "sha512-4krF8scpejhaOgqzBEcGM7yDIEfi0/8+8zDRZhNZZ2kjmHJ4hv3zCbQWxoJGz1iw5U0Jl0nma13xzHXcncMavQ=="\n    },\n    "tsutils": {\n      "version": "3.10.0",\n      "resolved": "https://registry.npmjs.org/tsutils/-/tsutils-3.10.0.tgz",\n      "integrity": "sha512-q20XSMq7jutbGB8luhKKsQldRKWvyBO2BGqni3p4yq8Ys9bEP/xQw3KepKmMRt9gJ4lvQSScrihJrcKdKoSU7Q==",\n      "requires": {\n        "tslib": "1.8.1"\n      }\n    },\n    "tty-browserify": {\n      "version": "0.0.0",\n      "resolved": "https://registry.npmjs.org/tty-browserify/-/tty-browserify-0.0.0.tgz",\n      "integrity": "sha1-oVe6QC2iTpv5V/mqadUk7tQpAaY="\n    },\n    "tunnel-agent": {\n      "version": "0.6.0",\n      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",\n      "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",\n      "requires": {\n        "safe-buffer": "5.0.1"\n      }\n    },\n    "tweetnacl": {\n      "version": "0.14.5",\n      "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",\n      "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="\n    },\n    "type-check": {\n      "version": "0.3.2",\n      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.3.2.tgz",\n      "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",\n      "requires": {\n        "prelude-ls": "~1.1.2"\n      }\n    },\n    "type-is": {\n      "version": "1.6.16",\n      "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.16.tgz",\n      "integrity": "sha512-HRkVv/5qY2G6I8iab9cI7v1bOIdhm94dVjQCPFElW9W+3GeDOSHmy2EBYe4VTApuzolPcmgFTN3ftVJRKR2J9Q==",\n      "requires": {\n        "media-typer": "0.3.0",\n        "mime-types": "~2.1.18"\n      }\n    },\n    "typedarray": {\n      "version": "0.0.6",\n      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",\n      "integrity": "sha1-hnrHTjhkGHsdPUfZlqeOxciDB3c="\n    },\n    "ua-parser-js": {\n      "version": "0.7.19",\n      "resolved": "https://registry.npmjs.org/ua-parser-js/-/ua-parser-js-0.7.19.tgz",\n      "integrity": "sha512-T3PVJ6uz8i0HzPxOF9SWzWAlfN/DavlpQqepn22xgve/5QecC+XMCAtmUNnY7C9StehaV6exjUCI801lOI7QlQ=="\n    },\n    "uglify-js": {\n      "version": "3.4.10",\n      "resolved": "https://registry.npmjs.org/uglify-js/-/uglify-js-3.4.10.tgz",\n      "integrity": "sha512-Y2VsbPVs0FIshJztycsO2SfPk7/KAF/T72qzv9u5EpQ4kB2hQoHlhNQTsNyy6ul7lQtqJN/AoWeS23OzEiEFxw==",\n      "requires": {\n        "commander": "~2.19.0",\n        "source-map": "~0.6.1"\n      },\n      "dependencies": {\n        "commander": {\n          "version": "2.19.0",\n          "resolved": "https://registry.npmjs.org/commander/-/commander-2.19.0.tgz",\n          "integrity": "sha512-6tvAOO+D6OENvRAh524Dh9jcfKTYDQAqvqezbCW82xj5X0pSrcpxtvRKHLG0yBY6SD7PSDrJaj+0AiOcKVd1Xg=="\n        },\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "uglify-to-browserify": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/uglify-to-browserify/-/uglify-to-browserify-1.0.2.tgz",\n      "integrity": "sha1-bgkk1r2mta/jSeOabWMoUKD4grc=",\n      "optional": true\n    },\n    "unc-path-regex": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/unc-path-regex/-/unc-path-regex-0.1.2.tgz",\n      "integrity": "sha1-5z3T17DXxe2G+6xrCufYxqadUPo="\n    },\n    "undertaker": {\n      "version": "1.2.1",\n      "resolved": "https://registry.npmjs.org/undertaker/-/undertaker-1.2.1.tgz",\n      "integrity": "sha512-71WxIzDkgYk9ZS+spIB8iZXchFhAdEo2YU8xYqBYJ39DIUIqziK78ftm26eecoIY49X0J2MLhG4hr18Yp6/CMA==",\n      "requires": {\n        "arr-flatten": "1.0.1",\n        "arr-map": "2.0.0",\n        "bach": "1.0.0",\n        "collection-map": "1.0.0",\n        "es6-weak-map": "2.0.1",\n        "last-run": "1.1.0",\n        "object.defaults": "1.0.0",\n        "object.reduce": "1.0.0",\n        "undertaker-registry": "1.0.0"\n      }\n    },\n    "undertaker-registry": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/undertaker-registry/-/undertaker-registry-1.0.1.tgz",\n      "integrity": "sha1-XkvaMI5KiirlhPm5pDWaSZglzFA="\n    },\n    "unicode-canonical-property-names-ecmascript": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",\n      "integrity": "sha512-jDrNnXWHd4oHiTZnx/ZG7gtUTVp+gCcTTKr8L0HjlwphROEW3+Him+IpvC+xcJEFegapiMZyZe02CyuOnRmbnQ=="\n    },\n    "unicode-match-property-ecmascript": {\n      "version": "1.0.4",\n      "resolved": "https://registry.npmjs.org/unicode-match-property-ecmascript/-/unicode-match-property-ecmascript-1.0.4.tgz",\n      "integrity": "sha512-L4Qoh15vTfntsn4P1zqnHulG0LdXgjSO035fEpdtp6YxXhMT51Q6vgM5lYdG/5X3MjS+k/Y9Xw4SFCY9IkR0rg==",\n      "requires": {\n        "unicode-canonical-property-names-ecmascript": "1.0.4",\n        "unicode-property-aliases-ecmascript": "1.0.4"\n      }\n    },\n    "unicode-match-property-value-ecmascript": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/unicode-match-property-value-ecmascript/-/unicode-match-property-value-ecmascript-1.1.0.tgz",\n      "integrity": "sha512-hDTHvaBk3RmFzvSl0UVrUmC3PuW9wKVnpoUDYH0JDkSIovzw+J5viQmeYHxVSBptubnr7PbH2e0fnpDRQnQl5g=="\n    },\n    "unicode-property-aliases-ecmascript": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/unicode-property-aliases-ecmascript/-/unicode-property-aliases-ecmascript-1.0.5.tgz",\n      "integrity": "sha512-L5RAqCfXqAwR3RriF8pM0lU0w4Ryf/GgzONwi6KnL1taJQa7x1TCxdJnILX59WIGOwR57IVxn7Nej0fz1Ny6fw=="\n    },\n    "unified": {\n      "version": "7.1.0",\n      "resolved": "https://registry.npmjs.org/unified/-/unified-7.1.0.tgz",\n      "integrity": "sha512-lbk82UOIGuCEsZhPj8rNAkXSDXd6p0QLzIuSsCdxrqnqU56St4eyOB+AlXsVgVeRmetPTYydIuvFfpDIed8mqw==",\n      "requires": {\n        "@types/unist": "2.0.0",\n        "@types/vfile": "3.0.0",\n        "bail": "1.0.0",\n        "extend": "3.0.0",\n        "is-plain-obj": "1.1.0",\n        "trough": "1.0.0",\n        "vfile": "3.0.0",\n        "x-is-string": "0.1.0"\n      },\n      "dependencies": {\n        "vfile": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/vfile/-/vfile-3.0.1.tgz",\n          "integrity": "sha512-y7Y3gH9BsUSdD4KzHsuMaCzRjglXN0W2EcMf0gpvu6+SbsGhMje7xDc8AEoeXy6mIwCKMI6BkjMsRjzQbhMEjQ==",\n          "requires": {\n            "is-buffer": "2.0.0",\n            "replace-ext": "1.0.0",\n            "unist-util-stringify-position": "1.0.0",\n            "vfile-message": "1.0.0"\n          }\n        }\n      }\n    },\n    "union-value": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/union-value/-/union-value-1.0.0.tgz",\n      "integrity": "sha1-XHHDTLW61dzr4+oM0IIHulqhrqQ=",\n      "requires": {\n        "arr-union": "3.1.0",\n        "get-value": "2.0.6",\n        "is-extendable": "0.1.1",\n        "set-value": "0.4.3"\n      },\n      "dependencies": {\n        "extend-shallow": {\n          "version": "2.0.1",\n          "resolved": "https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz",\n          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",\n          "requires": {\n            "is-extendable": "0.1.0"\n          }\n        },\n        "set-value": {\n          "version": "0.4.3",\n          "resolved": "https://registry.npmjs.org/set-value/-/set-value-0.4.3.tgz",\n          "integrity": "sha1-fbCPnT0i3H945Trzw79GZuzfzPE=",\n          "requires": {\n            "extend-shallow": "2.0.1",\n            "is-extendable": "0.1.1",\n            "is-plain-object": "2.0.1",\n            "to-object-path": "0.3.0"\n          }\n        }\n      }\n    },\n    "uniq": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/uniq/-/uniq-1.0.1.tgz",\n      "integrity": "sha1-sxxa6CVIRKOoKBVBzisEuGWnNP8="\n    },\n    "uniqs": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/uniqs/-/uniqs-2.0.0.tgz",\n      "integrity": "sha1-/+3ks2slKQaW5uFl1KWe25mOawI="\n    },\n    "unique-filename": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/unique-filename/-/unique-filename-1.1.1.tgz",\n      "integrity": "sha512-Vmp0jIp2ln35UTXuryvjzkjGdRyf9b2lTXuSYUiPmzRcl3FDtYqAwOnTJkAngD9SWhnoJzDbTKwaOrZ+STtxNQ==",\n      "requires": {\n        "unique-slug": "2.0.0"\n      }\n    },\n    "unique-slug": {\n      "version": "2.0.1",\n      "resolved": "https://registry.npmjs.org/unique-slug/-/unique-slug-2.0.1.tgz",\n      "integrity": "sha512-n9cU6+gITaVu7VGj1Z8feKMmfAjEAQGhwD9fE3zvpRRa0wEIx8ODYkVGfSc94M2OX00tUFV8wH3zYbm1I8mxFg==",\n      "requires": {\n        "imurmurhash": "0.1.4"\n      }\n    },\n    "unique-stream": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/unique-stream/-/unique-stream-1.0.0.tgz",\n      "integrity": "sha1-1ZpKdUJ0R9mqbJHnAmP40mpLEEs="\n    },\n    "unist-util-stringify-position": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-1.1.2.tgz",\n      "integrity": "sha512-pNCVrk64LZv1kElr0N1wPiHEUoXNVFERp+mlTg/s9R5Lwg87f9bM/3sQB99w+N9D/qnM9ar3+AKDBwo/gm/iQQ=="\n    },\n    "universalify": {\n      "version": "0.1.2",\n      "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz",\n      "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg=="\n    },\n    "unpipe": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",\n      "integrity": "sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw="\n    },\n    "unquote": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/unquote/-/unquote-1.1.1.tgz",\n      "integrity": "sha1-j97XMk7G6IoP+LkF58CYzcCG1UQ="\n    },\n    "unset-value": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz",\n      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",\n      "requires": {\n        "has-value": "0.3.1",\n        "isobject": "3.0.0"\n      },\n      "dependencies": {\n        "has-value": {\n          "version": "0.3.1",\n          "resolved": "https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz",\n          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",\n          "requires": {\n            "get-value": "2.0.3",\n            "has-values": "0.1.4",\n            "isobject": "2.0.0"\n          },\n          "dependencies": {\n            "isobject": {\n              "version": "2.1.0",\n              "resolved": "https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz",\n              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",\n              "requires": {\n                "isarray": "1.0.0"\n              }\n            }\n          }\n        },\n        "has-values": {\n          "version": "0.1.4",\n          "resolved": "https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz",\n          "integrity": "sha1-bWHeldkd/Km5oCCJrThL/49it3E="\n        }\n      }\n    },\n    "upath": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/upath/-/upath-1.1.2.tgz",\n      "integrity": "sha512-kXpym8nmDmlCBr7nKdIx8P2jNBa+pBpIUFRnKJ4dr8htyYGJFokkr2ZvERRtUN+9SY+JqXouNgUPtv6JQva/2Q=="\n    },\n    "upper-case": {\n      "version": "1.1.3",\n      "resolved": "https://registry.npmjs.org/upper-case/-/upper-case-1.1.3.tgz",\n      "integrity": "sha1-9rRQHC7EzdJrp4vnIilh3ndiFZg="\n    },\n    "uri-js": {\n      "version": "4.2.2",\n      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",\n      "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",\n      "requires": {\n        "punycode": "2.1.0"\n      }\n    },\n    "urix": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/urix/-/urix-0.1.0.tgz",\n      "integrity": "sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI="\n    },\n    "url": {\n      "version": "0.11.0",\n      "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",\n      "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",\n      "requires": {\n        "punycode": "1.3.2",\n        "querystring": "0.2.0"\n      },\n      "dependencies": {\n        "punycode": {\n          "version": "1.3.2",\n          "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",\n          "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="\n        }\n      }\n    },\n    "url-loader": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/url-loader/-/url-loader-1.1.2.tgz",\n      "integrity": "sha512-dXHkKmw8FhPqu8asTc1puBfe3TehOCo2+RmOOev5suNCIYBcT626kxiWg1NBVkwc4rO8BGa7gP70W7VXuqHrjg==",\n      "requires": {\n        "loader-utils": "1.1.0",\n        "mime": "2.0.3",\n        "schema-utils": "1.0.0"\n      }\n    },\n    "url-parse": {\n      "version": "1.4.6",\n      "resolved": "https://registry.npmjs.org/url-parse/-/url-parse-1.4.6.tgz",\n      "integrity": "sha512-/B8AD9iQ01seoXmXf9z/MjLZQIdOoYl/+gvsQF6+mpnxaTfG9P7srYaiqaDMyKkR36XMXfhqSHss5MyFAO8lew==",\n      "requires": {\n        "querystringify": "2.0.0",\n        "requires-port": "1.0.0"\n      }\n    },\n    "url-regex": {\n      "version": "3.2.0",\n      "resolved": "https://registry.npmjs.org/url-regex/-/url-regex-3.2.0.tgz",\n      "integrity": "sha1-260eDJ4p4QXdCx8J9oYvf9tIJyQ=",\n      "requires": {\n        "ip-regex": "1.0.1"\n      },\n      "dependencies": {\n        "ip-regex": {\n          "version": "1.0.3",\n          "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-1.0.3.tgz",\n          "integrity": "sha1-3FiQdvZZ9BnCIgOaMzFvHHOH7/0="\n        }\n      }\n    },\n    "use": {\n      "version": "3.1.1",\n      "resolved": "https://registry.npmjs.org/use/-/use-3.1.1.tgz",\n      "integrity": "sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ=="\n    },\n    "user-home": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/user-home/-/user-home-1.1.1.tgz",\n      "integrity": "sha1-K1viOjK2Onyd640PKNSFcko98ZA="\n    },\n    "util": {\n      "version": "0.11.1",\n      "resolved": "https://registry.npmjs.org/util/-/util-0.11.1.tgz",\n      "integrity": "sha512-HShAsny+zS2TZfaXxD9tYj4HQGlBezXZMZuM/S5PKLLoZkShZiGk9o5CzukI1LVHZvjdvZ2Sj1aW/Ndn2NB/HQ==",\n      "requires": {\n        "inherits": "2.0.3"\n      }\n    },\n    "util-deprecate": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",\n      "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="\n    },\n    "util.promisify": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/util.promisify/-/util.promisify-1.0.0.tgz",\n      "integrity": "sha512-i+6qA2MPhvoKLuxnJNpXAGhg7HphQOSUq2LKMZD0m15EiskXUkMvKdF4Uui0WYeCUGea+o2cw/ZuwehtfsrNkA==",\n      "requires": {\n        "define-properties": "1.1.2",\n        "object.getownpropertydescriptors": "2.0.3"\n      }\n    },\n    "utila": {\n      "version": "0.4.0",\n      "resolved": "https://registry.npmjs.org/utila/-/utila-0.4.0.tgz",\n      "integrity": "sha1-ihagXURWV6Oupe7MWxKk+lN5dyw="\n    },\n    "utils-merge": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",\n      "integrity": "sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM="\n    },\n    "uuid": {\n      "version": "3.3.2",\n      "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.3.2.tgz",\n      "integrity": "sha512-yXJmeNaw3DnnKAOKJE51sL/ZaYfWJRl1pK9dr19YFCu0ObS231AB1/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA=="\n    },\n    "v8flags": {\n      "version": "2.1.1",\n      "resolved": "https://registry.npmjs.org/v8flags/-/v8flags-2.1.1.tgz",\n      "integrity": "sha1-qrGh+jDUX4jdMhFIh1rALAtV5bQ=",\n      "requires": {\n        "user-home": "1.1.1"\n      }\n    },\n    "validate-npm-package-license": {\n      "version": "3.0.4",\n      "resolved": "https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz",\n      "integrity": "sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==",\n      "requires": {\n        "spdx-correct": "3.0.0",\n        "spdx-expression-parse": "3.0.0"\n      }\n    },\n    "value-or-function": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/value-or-function/-/value-or-function-3.0.0.tgz",\n      "integrity": "sha1-HCQ6ULWVwb5Up1S/7OhWO5/42BM="\n    },\n    "vary": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",\n      "integrity": "sha1-IpnwLG3tMNSllhsLn3RSShj2NPw="\n    },\n    "vendors": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/vendors/-/vendors-1.0.2.tgz",\n      "integrity": "sha512-w/hry/368nO21AN9QljsaIhb9ZiZtZARoVH5f3CsFbawdLdayCgKRPup7CggujvySMxx0I91NOyxdVENohprLQ=="\n    },\n    "verror": {\n      "version": "1.10.0",\n      "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",\n      "integrity": "sha1-OhBcoXBTr1XW4nDB+CiGguGNpAA=",\n      "requires": {\n        "assert-plus": "1.0.0",\n        "core-util-is": "1.0.2",\n        "extsprintf": "1.2.0"\n      }\n    },\n    "vfile": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/vfile/-/vfile-4.0.0.tgz",\n      "integrity": "sha512-WMNeHy5djSl895BqE86D7WqA0Ie5fAIeGCa7V1EqiXyJg5LaGch2SUaZueok5abYQGH6mXEAsZ45jkoILIOlyA==",\n      "requires": {\n        "@types/unist": "2.0.2",\n        "is-buffer": "2.0.0",\n        "replace-ext": "1.0.0",\n        "unist-util-stringify-position": "2.0.0",\n        "vfile-message": "2.0.0"\n      },\n      "dependencies": {\n        "unist-util-stringify-position": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-2.0.0.tgz",\n          "integrity": "sha512-Uz5negUTrf9zm2ZT2Z9kdOL7Mr7FJLyq3ByqagUi7QZRVK1HnspVazvSqwHt73jj7APHtpuJ4K110Jm8O6/elw==",\n          "requires": {\n            "@types/unist": "2.0.2"\n          }\n        },\n        "vfile-message": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-2.0.0.tgz",\n          "integrity": "sha512-YS6qg6UpBfIeiO+6XlhPOuJaoLvt1Y9g2cmlwqhBOOU0XRV8j5RLeoz72t6PWLvNXq3EBG1fQ05wNPrUoz0deQ==",\n          "requires": {\n            "@types/unist": "2.0.2",\n            "unist-util-stringify-position": "1.1.1"\n          },\n          "dependencies": {\n            "unist-util-stringify-position": {\n              "version": "1.1.2",\n              "resolved": "https://registry.npmjs.org/unist-util-stringify-position/-/unist-util-stringify-position-1.1.2.tgz",\n              "integrity": "sha512-pNCVrk64LZv1kElr0N1wPiHEUoXNVFERp+mlTg/s9R5Lwg87f9bM/3sQB99w+N9D/qnM9ar3+AKDBwo/gm/iQQ=="\n            }\n          }\n        }\n      }\n    },\n    "vfile-message": {\n      "version": "1.1.1",\n      "resolved": "https://registry.npmjs.org/vfile-message/-/vfile-message-1.1.1.tgz",\n      "integrity": "sha512-1WmsopSGhWt5laNir+633LszXvZ+Z/lxveBf6yhGsqnQIhlhzooZae7zV6YVM1Sdkw68dtAW3ow0pOdPANugvA==",\n      "requires": {\n        "unist-util-stringify-position": "1.1.1"\n      }\n    },\n    "vinyl": {\n      "version": "0.5.3",\n      "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.5.3.tgz",\n      "integrity": "sha1-sEVbOPxeDPMNQyUTLkYZcMIJHN4=",\n      "requires": {\n        "clone": "1.0.0",\n        "clone-stats": "0.0.1",\n        "replace-ext": "0.0.1"\n      },\n      "dependencies": {\n        "replace-ext": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",\n          "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="\n        }\n      }\n    },\n    "vinyl-file": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/vinyl-file/-/vinyl-file-2.0.0.tgz",\n      "integrity": "sha1-p+v1/779obfRjRQPyweyI++2dRo=",\n      "requires": {\n        "graceful-fs": "4.1.2",\n        "pify": "2.3.0",\n        "pinkie-promise": "2.0.0",\n        "strip-bom": "2.0.0",\n        "strip-bom-stream": "2.0.0",\n        "vinyl": "1.1.0"\n      },\n      "dependencies": {\n        "pify": {\n          "version": "2.3.0",\n          "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",\n          "integrity": "sha1-7RQaasBDqEnqWISY59yosVMw6Qw="\n        },\n        "replace-ext": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/replace-ext/-/replace-ext-0.0.1.tgz",\n          "integrity": "sha1-KbvZIHinOfC8zitO5B6DeVNSKSQ="\n        },\n        "strip-bom": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-2.0.0.tgz",\n          "integrity": "sha1-YhmoVhZSBJHzV4i9vxRHqZx+aw4=",\n          "requires": {\n            "is-utf8": "0.2.0"\n          }\n        },\n        "vinyl": {\n          "version": "1.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-1.2.0.tgz",\n          "integrity": "sha1-XIgDbPVl5d8FVYv8kR+GVt8hiIQ=",\n          "requires": {\n            "clone": "1.0.0",\n            "clone-stats": "0.0.1",\n            "replace-ext": "0.0.1"\n          }\n        }\n      }\n    },\n    "vinyl-fs": {\n      "version": "0.3.14",\n      "resolved": "https://registry.npmjs.org/vinyl-fs/-/vinyl-fs-0.3.14.tgz",\n      "integrity": "sha1-mmhRzhysHBzqX+hsCTHWIMLPqeY=",\n      "requires": {\n        "defaults": "1.0.0",\n        "glob-stream": "3.1.5",\n        "glob-watcher": "0.0.6",\n        "graceful-fs": "3.0.0",\n        "mkdirp": "0.5.0",\n        "strip-bom": "1.0.0",\n        "through2": "0.6.1",\n        "vinyl": "0.4.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "0.2.0",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-0.2.0.tgz",\n          "integrity": "sha1-xhJqkK1Pctv1rNskPMN3JP6T/B8="\n        },\n        "graceful-fs": {\n          "version": "3.0.11",\n          "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-3.0.11.tgz",\n          "integrity": "sha1-dhPHeKGv6mLyXGMKCG1/Osu92Bg=",\n          "requires": {\n            "natives": "1.1.0"\n          }\n        },\n        "isarray": {\n          "version": "0.0.1",\n          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",\n          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="\n        },\n        "readable-stream": {\n          "version": "1.0.34",\n          "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-1.0.34.tgz",\n          "integrity": "sha1-Elgg40vIQtLyqq+v5MKRbuMsFXw=",\n          "requires": {\n            "core-util-is": "~1.0.0",\n            "inherits": "~2.0.1",\n            "isarray": "0.0.1",\n            "string_decoder": "~0.10.x"\n          }\n        },\n        "string_decoder": {\n          "version": "0.10.31",\n          "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-0.10.31.tgz",\n          "integrity": "sha1-YuIDvEF2bGwoyfyEMB2rHFMQ+pQ="\n        },\n        "strip-bom": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/strip-bom/-/strip-bom-1.0.0.tgz",\n          "integrity": "sha1-hbiGLzhEtabV7IRnqTWYFzo295Q=",\n          "requires": {\n            "first-chunk-stream": "1.0.0",\n            "is-utf8": "0.2.0"\n          }\n        },\n        "through2": {\n          "version": "0.6.5",\n          "resolved": "https://registry.npmjs.org/through2/-/through2-0.6.5.tgz",\n          "integrity": "sha1-QaucZ7KdVyCQcUEOHXp6lozTrUg=",\n          "requires": {\n            "readable-stream": ">=1.0.33-1 <1.1.0-0",\n            "xtend": ">=4.0.0 <4.1.0-0"\n          }\n        },\n        "vinyl": {\n          "version": "0.4.6",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-0.4.6.tgz",\n          "integrity": "sha1-LzVsh6VQolVGHza76ypbqL94SEc=",\n          "requires": {\n            "clone": "0.2.0",\n            "clone-stats": "0.0.1"\n          }\n        }\n      }\n    },\n    "vinyl-sourcemap": {\n      "version": "1.1.0",\n      "resolved": "https://registry.npmjs.org/vinyl-sourcemap/-/vinyl-sourcemap-1.1.0.tgz",\n      "integrity": "sha1-kqgAWTo4cDqM2xHYswCtS+Y7PhY=",\n      "requires": {\n        "append-buffer": "1.0.2",\n        "convert-source-map": "1.5.0",\n        "graceful-fs": "4.1.6",\n        "normalize-path": "2.1.1",\n        "now-and-later": "2.0.0",\n        "remove-bom-buffer": "3.0.0",\n        "vinyl": "2.0.0"\n      },\n      "dependencies": {\n        "clone": {\n          "version": "2.1.2",\n          "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",\n          "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18="\n        },\n        "clone-stats": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/clone-stats/-/clone-stats-1.0.0.tgz",\n          "integrity": "sha1-s3gt/4u1R04Yuba/D9/ngvh3doA="\n        },\n        "vinyl": {\n          "version": "2.2.0",\n          "resolved": "https://registry.npmjs.org/vinyl/-/vinyl-2.2.0.tgz",\n          "integrity": "sha512-MBH+yP0kC/GQ5GwBqrTPTzEfiiLjta7hTtvQtbxBgTeSXsmKQRQecjibMbxIXzVT3Y9KJK+drOz1/k+vsu8Nkg==",\n          "requires": {\n            "clone": "2.1.1",\n            "clone-buffer": "1.0.0",\n            "clone-stats": "1.0.0",\n            "cloneable-readable": "1.0.0",\n            "remove-trailing-separator": "1.0.1",\n            "replace-ext": "1.0.0"\n          }\n        }\n      }\n    },\n    "vinyl-sourcemaps-apply": {\n      "version": "0.2.1",\n      "resolved": "https://registry.npmjs.org/vinyl-sourcemaps-apply/-/vinyl-sourcemaps-apply-0.2.1.tgz",\n      "integrity": "sha1-q2VJ1h0XLCsbh75cUI0jnI74dwU=",\n      "requires": {\n        "source-map": "0.5.1"\n      }\n    },\n    "vm-browserify": {\n      "version": "0.0.4",\n      "resolved": "https://registry.npmjs.org/vm-browserify/-/vm-browserify-0.0.4.tgz",\n      "integrity": "sha1-XX6kW7755Kb/ZflUOOCofDV9WnM=",\n      "requires": {\n        "indexof": "0.0.1"\n      }\n    },\n    "w3c-hr-time": {\n      "version": "1.0.1",\n      "resolved": "https://registry.npmjs.org/w3c-hr-time/-/w3c-hr-time-1.0.1.tgz",\n      "integrity": "sha1-gqwr/2PZUOqeMYmlimViX+3xkEU=",\n      "requires": {\n        "browser-process-hrtime": "0.1.2"\n      }\n    },\n    "w3c-xmlserializer": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/w3c-xmlserializer/-/w3c-xmlserializer-1.1.2.tgz",\n      "integrity": "sha512-p10l/ayESzrBMYWRID6xbuCKh2Fp77+sA0doRuGn4tTIMrrZVeqfpKjXHY+oDh3K4nLdPgNwMTVP6Vp4pvqbNg==",\n      "requires": {\n        "domexception": "1.0.1",\n        "webidl-conversions": "4.0.2",\n        "xml-name-validator": "3.0.0"\n      }\n    },\n    "walker": {\n      "version": "1.0.7",\n      "resolved": "https://registry.npmjs.org/walker/-/walker-1.0.7.tgz",\n      "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",\n      "requires": {\n        "makeerror": "1.0.x"\n      }\n    },\n    "warning": {\n      "version": "4.0.3",\n      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",\n      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",\n      "requires": {\n        "loose-envify": "1.0.0"\n      }\n    },\n    "watchpack": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.6.0.tgz",\n      "integrity": "sha512-i6dHe3EyLjMmDlU1/bGQpEw25XSjkJULPuAVKCbNRefQVq48yXKUpwg538F7AZTf9kyr57zj++pQFltUa5H7yA==",\n      "requires": {\n        "chokidar": "2.0.2",\n        "graceful-fs": "4.1.2",\n        "neo-async": "2.5.0"\n      }\n    },\n    "wbuf": {\n      "version": "1.7.3",\n      "resolved": "https://registry.npmjs.org/wbuf/-/wbuf-1.7.3.tgz",\n      "integrity": "sha512-O84QOnr0icsbFGLS0O3bI5FswxzRr8/gHwWkDlQFskhSPryQXvrTMxjxGP4+iWYoauLoBvfDpkrOauZ+0iZpDA==",\n      "requires": {\n        "minimalistic-assert": "1.0.0"\n      }\n    },\n    "web-namespaces": {\n      "version": "1.1.2",\n      "resolved": "https://registry.npmjs.org/web-namespaces/-/web-namespaces-1.1.2.tgz",\n      "integrity": "sha512-II+n2ms4mPxK+RnIxRPOw3zwF2jRscdJIUE9BfkKHm4FYEg9+biIoTMnaZF5MpemE3T+VhMLrhbyD4ilkPCSbg=="\n    },\n    "webidl-conversions": {\n      "version": "4.0.2",\n      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-4.0.2.tgz",\n      "integrity": "sha512-YQ+BmxuTgd6UXZW3+ICGfyqRyHXVlD5GtQr5+qjiNW7bF0cqrzX500HVXPBOvgXb5YnzDd+h0zqyv61KUD7+Sg=="\n    },\n    "webpack": {\n      "version": "4.29.6",\n      "resolved": "https://registry.npmjs.org/webpack/-/webpack-4.29.6.tgz",\n      "integrity": "sha512-MwBwpiE1BQpMDkbnUUaW6K8RFZjljJHArC6tWQJoFm0oQtfoSebtg4Y7/QHnJ/SddtjYLHaKGX64CFjG5rehJw==",\n      "requires": {\n        "@webassemblyjs/ast": "1.8.5",\n        "@webassemblyjs/helper-module-context": "1.8.5",\n        "@webassemblyjs/wasm-edit": "1.8.5",\n        "@webassemblyjs/wasm-parser": "1.8.5",\n        "acorn": "6.0.5",\n        "acorn-dynamic-import": "4.0.0",\n        "ajv": "6.1.0",\n        "ajv-keywords": "3.1.0",\n        "chrome-trace-event": "1.0.0",\n        "enhanced-resolve": "4.1.0",\n        "eslint-scope": "4.0.0",\n        "json-parse-better-errors": "1.0.2",\n        "loader-runner": "2.3.0",\n        "loader-utils": "1.1.0",\n        "memory-fs": "~0.4.1",\n        "micromatch": "3.1.8",\n        "mkdirp": "~0.5.0",\n        "neo-async": "2.5.0",\n        "node-libs-browser": "2.0.0",\n        "schema-utils": "1.0.0",\n        "tapable": "1.1.0",\n        "terser-webpack-plugin": "1.1.0",\n        "watchpack": "1.5.0",\n        "webpack-sources": "1.3.0"\n      }\n    },\n    "webpack-dev-middleware": {\n      "version": "3.6.2",\n      "resolved": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.6.2.tgz",\n      "integrity": "sha512-A47I5SX60IkHrMmZUlB0ZKSWi29TZTcPz7cha1Z75yYOsgWh/1AcPmQEbC8ZIbU3A1ytSv1PMU0PyPz2Lmz2jg==",\n      "requires": {\n        "memory-fs": "0.4.1",\n        "mime": "2.3.1",\n        "range-parser": "1.0.3",\n        "webpack-log": "2.0.0"\n      }\n    },\n    "webpack-dev-server": {\n      "version": "3.2.1",\n      "resolved": "https://registry.npmjs.org/webpack-dev-server/-/webpack-dev-server-3.2.1.tgz",\n      "integrity": "sha512-sjuE4mnmx6JOh9kvSbPYw3u/6uxCLHNWfhWaIPwcXWsvWOPN+nc5baq4i9jui3oOBRXGonK9+OI0jVkaz6/rCw==",\n      "requires": {\n        "ansi-html": "0.0.7",\n        "bonjour": "3.5.0",\n        "chokidar": "2.0.0",\n        "compression": "1.5.2",\n        "connect-history-api-fallback": "1.3.0",\n        "debug": "4.1.1",\n        "del": "3.0.0",\n        "express": "4.16.2",\n        "html-entities": "1.2.0",\n        "http-proxy-middleware": "0.19.1",\n        "import-local": "2.0.0",\n        "internal-ip": "4.2.0",\n        "ip": "1.1.5",\n        "killable": "1.0.0",\n        "loglevel": "1.4.1",\n        "opn": "5.1.0",\n        "portfinder": "1.0.9",\n        "schema-utils": "1.0.0",\n        "selfsigned": "1.9.1",\n        "semver": "5.6.0",\n        "serve-index": "1.7.2",\n        "sockjs": "0.3.19",\n        "sockjs-client": "1.3.0",\n        "spdy": "4.0.0",\n        "strip-ansi": "3.0.0",\n        "supports-color": "6.1.0",\n        "url": "0.11.0",\n        "webpack-dev-middleware": "3.5.1",\n        "webpack-log": "2.0.0",\n        "yargs": "12.0.2"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "camelcase": {\n          "version": "4.1.0",\n          "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",\n          "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0="\n        },\n        "decamelize": {\n          "version": "2.0.0",\n          "resolved": "https://registry.npmjs.org/decamelize/-/decamelize-2.0.0.tgz",\n          "integrity": "sha512-Ikpp5scV3MSYxY39ymh45ZLEecsTdv/Xj2CaQfI8RLMuwi7XvjX9H/fhraiSuU+C5w5NTDu4ZU72xNiZnurBPg==",\n          "requires": {\n            "xregexp": "4.0.0"\n          }\n        },\n        "require-main-filename": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",\n          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="\n        },\n        "semver": {\n          "version": "5.7.0",\n          "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.0.tgz",\n          "integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA=="\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        },\n        "supports-color": {\n          "version": "6.1.0",\n          "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-6.1.0.tgz",\n          "integrity": "sha512-qe1jfm1Mg7Nq/NSh6XE24gPXROEVsWHxC1LIx//XNlD9iw7YZQGjZNjYN7xGaEG6iKdA8EtNFW6R0gjnVXp+wQ==",\n          "requires": {\n            "has-flag": "3.0.0"\n          }\n        },\n        "yargs": {\n          "version": "12.0.2",\n          "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.2.tgz",\n          "integrity": "sha512-e7SkEx6N6SIZ5c5H22RTZae61qtn3PYUE8JYbBFlK9sYmh3DMQ6E5ygtaG/2BW0JZi4WGgTR2IV5ChqlqrDGVQ==",\n          "requires": {\n            "cliui": "4.0.0",\n            "decamelize": "2.0.0",\n            "find-up": "3.0.0",\n            "get-caller-file": "1.0.1",\n            "os-locale": "3.0.0",\n            "require-directory": "2.1.1",\n            "require-main-filename": "1.0.1",\n            "set-blocking": "2.0.0",\n            "string-width": "2.0.0",\n            "which-module": "2.0.0",\n            "y18n": "3.2.1 || 4.0.0",\n            "yargs-parser": "10.1.0"\n          }\n        },\n        "yargs-parser": {\n          "version": "10.1.0",\n          "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-10.1.0.tgz",\n          "integrity": "sha512-VCIyR1wJoEBZUqk5PA+oOBF6ypbwh5aNB3I50guxAL/quggdfs4TtNHQrSazFA3fYZ+tEqfs0zIGlv0c/rgjbQ==",\n          "requires": {\n            "camelcase": "4.1.0"\n          }\n        }\n      }\n    },\n    "webpack-log": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/webpack-log/-/webpack-log-2.0.0.tgz",\n      "integrity": "sha512-cX8G2vR/85UYG59FgkoMamwHUIkSSlV3bBMRsbxVXVUk2j6NleCKjQ/WE9eYg9WY4w25O9w8wKP4rzNZFmUcUg==",\n      "requires": {\n        "ansi-colors": "3.0.0",\n        "uuid": "3.3.2"\n      }\n    },\n    "webpack-manifest-plugin": {\n      "version": "2.0.4",\n      "resolved": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-2.0.4.tgz",\n      "integrity": "sha512-nejhOHexXDBKQOj/5v5IZSfCeTO3x1Dt1RZEcGfBSul891X/eLIcIVH31gwxPDdsi2Z8LKKFGpM4w9+oTBOSCg==",\n      "requires": {\n        "fs-extra": "7.0.0",\n        "lodash": ">=3.5 <5",\n        "tapable": "1.0.0"\n      }\n    },\n    "webpack-sources": {\n      "version": "1.3.0",\n      "resolved": "https://registry.npmjs.org/webpack-sources/-/webpack-sources-1.3.0.tgz",\n      "integrity": "sha512-OiVgSrbGu7NEnEvQJJgdSFPl2qWKkWq5lHMhgiToIiN9w34EBnjYzSYs+VbL5KoYiLNtFFa7BZIKxRED3I32pA==",\n      "requires": {\n        "source-list-map": "2.0.0",\n        "source-map": "~0.6.1"\n      },\n      "dependencies": {\n        "source-map": {\n          "version": "0.6.1",\n          "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",\n          "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g=="\n        }\n      }\n    },\n    "websocket-driver": {\n      "version": "0.7.0",\n      "resolved": "https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.7.0.tgz",\n      "integrity": "sha1-DK+dLXVdk67gSdS90NP+LMoqJOs=",\n      "requires": {\n        "http-parser-js": ">=0.4.0",\n        "websocket-extensions": ">=0.1.1"\n      }\n    },\n    "websocket-extensions": {\n      "version": "0.1.3",\n      "resolved": "https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.3.tgz",\n      "integrity": "sha512-nqHUnMXmBzT0w570r2JpJxfiSD1IzoI+HGVdd3aZ0yNi3ngvQ4jv1dtHt5VGxfI2yj5yqImPhOK4vmIh2xMbGg=="\n    },\n    "whatwg-encoding": {\n      "version": "1.0.5",\n      "resolved": "https://registry.npmjs.org/whatwg-encoding/-/whatwg-encoding-1.0.5.tgz",\n      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/KNh8rxSo9DKQrnUEw==",\n      "requires": {\n        "iconv-lite": "0.4.24"\n      }\n    },\n    "whatwg-fetch": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.0.0.tgz",\n      "integrity": "sha512-9GSJUgz1D4MfyKU7KRqwOjXCXTqWdFNvEr7eUBYchQiVc744mqK/MzXPNR2WsPkmkOa4ywfg8C2n8h+13Bey1Q=="\n    },\n    "whatwg-mimetype": {\n      "version": "2.3.0",\n      "resolved": "https://registry.npmjs.org/whatwg-mimetype/-/whatwg-mimetype-2.3.0.tgz",\n      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV/vi0IC5lEAGFgrjGv/g=="\n    },\n    "whatwg-url": {\n      "version": "6.5.0",\n      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-6.5.0.tgz",\n      "integrity": "sha512-rhRZRqx/TLJQWUpQ6bmrt2UV4f0HCQ463yQuONJqC6fO2VoEb1pTYddbe59SkYq87aoM5A3bdhMZiUiVws+fzQ==",\n      "requires": {\n        "lodash.sortby": "4.7.0",\n        "tr46": "1.0.1",\n        "webidl-conversions": "4.0.2"\n      }\n    },\n    "when": {\n      "version": "3.7.8",\n      "resolved": "https://registry.npmjs.org/when/-/when-3.7.8.tgz",\n      "integrity": "sha1-xxMLan6gRpPoQs3J56Hyqjmjn4I="\n    },\n    "which": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/which/-/which-1.3.1.tgz",\n      "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==",\n      "requires": {\n        "isexe": "2.0.0"\n      }\n    },\n    "which-module": {\n      "version": "2.0.0",\n      "resolved": "https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz",\n      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho="\n    },\n    "window-size": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/window-size/-/window-size-0.1.0.tgz",\n      "integrity": "sha1-VDjNLqk7IC76Ohn+iIeu58lPnJ0="\n    },\n    "wordwrap": {\n      "version": "1.0.0",\n      "resolved": "https://registry.npmjs.org/wordwrap/-/wordwrap-1.0.0.tgz",\n      "integrity": "sha1-J1hIEIkUVqQXHI0CJkQa3pDLyus="\n    },\n    "workbox-background-sync": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-background-sync/-/workbox-background-sync-4.3.0.tgz",\n      "integrity": "sha512-rmDqz1k2mnG8wj68rBapoFP3iCKmdPeTdD0/GLtErDcaQsKnGlsFmjjJ7OuQbuBa+W0FfVWCE+s3VwqL0D/+DA==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-broadcast-update": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-broadcast-update/-/workbox-broadcast-update-4.3.0.tgz",\n      "integrity": "sha512-YYdz+8FAVdy1ZTsXpapWyd5t2nH7KdBIQ9rFlsRMSGFS7LzcKfZy8Tka1W8byMNM1II5cxlFr7f6+3vLahzrCg==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-build": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-build/-/workbox-build-4.3.0.tgz",\n      "integrity": "sha512-D2fQa2Isp/BboJ8edYmvsTCrBrPWwVCYa7zMDysLViIaGVQTFMgazRXx8wZ2gZKud13M0maUR5Ln4wS5UiqAIA==",\n      "requires": {\n        "@babel/runtime": "7.3.4",\n        "common-tags": "1.8.0",\n        "fs-extra": "4.0.2",\n        "glob": "7.1.3",\n        "joi": "14.3.1",\n        "lodash.template": "4.4.0",\n        "pretty-bytes": "5.1.0",\n        "stringify-object": "3.3.0",\n        "strip-comments": "1.0.2",\n        "workbox-background-sync": "4.3.0",\n        "workbox-broadcast-update": "4.3.0",\n        "workbox-cacheable-response": "4.3.0",\n        "workbox-core": "4.3.0",\n        "workbox-expiration": "4.3.0",\n        "workbox-google-analytics": "4.3.0",\n        "workbox-navigation-preload": "4.3.0",\n        "workbox-precaching": "4.3.0",\n        "workbox-range-requests": "4.3.0",\n        "workbox-routing": "4.3.0",\n        "workbox-strategies": "4.3.0",\n        "workbox-streams": "4.3.0",\n        "workbox-sw": "4.3.0",\n        "workbox-window": "4.3.0"\n      },\n      "dependencies": {\n        "fs-extra": {\n          "version": "4.0.3",\n          "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-4.0.3.tgz",\n          "integrity": "sha512-q6rbdDd1o2mAnQreO7YADIxf/Whx4AHBiRf6d+/cVT8h44ss+lHgxf1FemcqDnQt9X3ct4McHr+JMGlYSsK7Cg==",\n          "requires": {\n            "graceful-fs": "4.1.2",\n            "jsonfile": "4.0.0",\n            "universalify": "0.1.0"\n          }\n        }\n      }\n    },\n    "workbox-cacheable-response": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-cacheable-response/-/workbox-cacheable-response-4.3.0.tgz",\n      "integrity": "sha512-GlnPS1WtEoPNFVPVW1Ss0CrNPlhB7FpMTh2XwpqdJKq7K/aDI8LKdFpRcZBZ2pfRpOf8b6AjAiDZr0hrJ9EFtQ==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-core": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-core/-/workbox-core-4.3.0.tgz",\n      "integrity": "sha512-k5j6yfyznkK7zHiYLbCsrJfYWUcJ9ZnFFzI4KSbr7D43rWwQkusHsPmOG3OT1YZseACtLRSnUUzb+Cg2arVXtw=="\n    },\n    "workbox-expiration": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-expiration/-/workbox-expiration-4.3.0.tgz",\n      "integrity": "sha512-mcTWxsBHVkDBlIXOZ9uT3m0bAc7OJ3NTj1pTjWzwVZ6sqvT1I88ewIyppv44GO9JqnwE87lODpdEUIKp9V4lNA==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-google-analytics": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-google-analytics/-/workbox-google-analytics-4.3.0.tgz",\n      "integrity": "sha512-itAfcN/rVNf5WqAMW5/OA/pMkFxZjYuk2ZmOCIuy0fFJeQ4F0PfD3Y1DzX1JrKHPMIPeXvvZiAGY8+HRuJjy7w==",\n      "requires": {\n        "workbox-background-sync": "4.3.0",\n        "workbox-core": "4.3.0",\n        "workbox-routing": "4.3.0",\n        "workbox-strategies": "4.3.0"\n      }\n    },\n    "workbox-navigation-preload": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-navigation-preload/-/workbox-navigation-preload-4.3.0.tgz",\n      "integrity": "sha512-1RoaOZD8mMTPjvTNG/FWSQZmfTlTP5FC7c6ZwKWWGoULcxPCmiqI8uWOnMg1/S+eAjYTtNfToW2pfvK4zi5ihA==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-precaching": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-precaching/-/workbox-precaching-4.3.0.tgz",\n      "integrity": "sha512-wEsF7+I1opRbyJysYWtn8c1liHqA3bvtaTk4FohE3ViZfn2MIEzORuk7G1kEBZEdJnGf7QcfVJ2tNFYv72yQZQ==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-range-requests": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-range-requests/-/workbox-range-requests-4.3.0.tgz",\n      "integrity": "sha512-2NskkW6Qmkm9YQPh7swODfB6u3yALqdUqxb0i/3tYp4OKEux50ju9B1OK/u3V/INJ6q2s/CwYmxwxJHhXi9Nfg==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-routing": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-routing/-/workbox-routing-4.3.0.tgz",\n      "integrity": "sha512-/lqWiZRjtyKi3If3J8jWHXJQIjaSLv8WKbGnriOcTxFEG7t+AJ79QYIxWXv0UQo4KFpjQRQUag+38T9spbV0IA==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-strategies": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-strategies/-/workbox-strategies-4.3.0.tgz",\n      "integrity": "sha512-yzhs07UZg7CR0thFFsUDI5hp+I0WoKd9IHSj4ckHoUAslyKLpmwGnOInsPeq2WQfXn7CkyinRjwUrwv3FMw1Gw==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-streams": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-streams/-/workbox-streams-4.3.0.tgz",\n      "integrity": "sha512-CIA9inxuFELQOO+/7+JpE50cBhpTWOYcLK7tQpriQ6PJod2tAMgo9X89vt9vLk1pN0PMd749MqurAz8FgLHHEg==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "workbox-sw": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-sw/-/workbox-sw-4.3.0.tgz",\n      "integrity": "sha512-d4INzCxFrHixUrhYV5z+6+zX1AKO3T77JY7l1ZKh15blW3Mz9u0FpJATzz3NWaI9X/cxgRyOsR8J7deu3XjlEg=="\n    },\n    "workbox-webpack-plugin": {\n      "version": "4.2.0",\n      "resolved": "https://registry.npmjs.org/workbox-webpack-plugin/-/workbox-webpack-plugin-4.2.0.tgz",\n      "integrity": "sha512-YZsiA+y/ns/GdWRaBsfYv8dln1ebWtGnJcTOg1ppO0pO1tScAHX0yGtHIjndxz3L/UUhE8b0NQE9KeLNwJwA5A==",\n      "requires": {\n        "@babel/runtime": "7.0.0",\n        "json-stable-stringify": "1.0.1",\n        "workbox-build": "4.2.0"\n      }\n    },\n    "workbox-window": {\n      "version": "4.3.0",\n      "resolved": "https://registry.npmjs.org/workbox-window/-/workbox-window-4.3.0.tgz",\n      "integrity": "sha512-Lf5Da+4VdmUZSVhBFEcZSBWNHm9x7Zr2FUp1mgUZhrIwnkfL4qmjpG7TyAzaPm7QLc/O+yxDDC5cgEvMtE1fjQ==",\n      "requires": {\n        "workbox-core": "4.3.0"\n      }\n    },\n    "worker-farm": {\n      "version": "1.6.0",\n      "resolved": "https://registry.npmjs.org/worker-farm/-/worker-farm-1.6.0.tgz",\n      "integrity": "sha512-6w+3tHbM87WnSWnENBUvA2pxJPLhQUg5LKwUQHq3r+XPhIM+Gh2R5ycbwPCyuGbNg+lPgdcnQUhuC02kJCvffQ==",\n      "requires": {\n        "errno": "~0.1.7"\n      }\n    },\n    "wrap-ansi": {\n      "version": "2.1.0",\n      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-2.1.0.tgz",\n      "integrity": "sha1-2Pw9KE3QV5T+hJc8rs3Rz4JP3YU=",\n      "requires": {\n        "string-width": "1.0.1",\n        "strip-ansi": "3.0.1"\n      },\n      "dependencies": {\n        "ansi-regex": {\n          "version": "2.1.1",\n          "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-2.1.1.tgz",\n          "integrity": "sha1-w7M6te42DYbg5ijwRorn7yfWVN8="\n        },\n        "is-fullwidth-code-point": {\n          "version": "1.0.0",\n          "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz",\n          "integrity": "sha1-754xOG8DGn8NZDr4L95QxFfvAMs=",\n          "requires": {\n            "number-is-nan": "1.0.0"\n          }\n        },\n        "string-width": {\n          "version": "1.0.2",\n          "resolved": "https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz",\n          "integrity": "sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=",\n          "requires": {\n            "code-point-at": "1.0.0",\n            "is-fullwidth-code-point": "1.0.0",\n            "strip-ansi": "3.0.0"\n          }\n        },\n        "strip-ansi": {\n          "version": "3.0.1",\n          "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-3.0.1.tgz",\n          "integrity": "sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=",\n          "requires": {\n            "ansi-regex": "2.0.0"\n          }\n        }\n      }\n    },\n    "wrappy": {\n      "version": "1.0.2",\n      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",\n      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="\n    },\n    "wrench-sui": {\n      "version": "0.0.3",\n      "resolved": "https://registry.npmjs.org/wrench-sui/-/wrench-sui-0.0.3.tgz",\n      "integrity": "sha1-1hoSAwwf2NZxs90VqmyeD83E4sg="\n    },\n    "write": {\n      "version": "1.0.3",\n      "resolved": "https://registry.npmjs.org/write/-/write-1.0.3.tgz",\n      "integrity": "sha512-/lg70HAjtkUgWPVZhZcm+T4hkL8Zbtp1nFNOn3lRrxnlv50SRBv7cR7RqR+GMsd3hUXy9hWBo4CHTbFTcOYwig==",\n      "requires": {\n        "mkdirp": "0.5.1"\n      }\n    },\n    "write-file-atomic": {\n      "version": "2.4.1",\n      "resolved": "https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-2.4.1.tgz",\n      "integrity": "sha512-TGHFeZEZMnv+gBFRfjAcxL5bPHrsGKtnb4qsFAws7/vlh+QfwAaySIw4AXP9ZskTTh5GWu3FLuJhsWVdiJPGvg==",\n      "requires": {\n        "graceful-fs": "4.1.11",\n        "imurmurhash": "0.1.4",\n        "signal-exit": "3.0.2"\n      }\n    },\n    "ws": {\n      "version": "5.2.2",\n      "resolved": "https://registry.npmjs.org/ws/-/ws-5.2.2.tgz",\n      "integrity": "sha512-jaHFD6PFv6UgoIVda6qZllptQsMlDEJkTQcybzzXDYM1XO9Y8em691FGMPmM46WGyLU4z9KMgQN+qrux/nhlHA==",\n      "requires": {\n        "async-limiter": "~1.0.0"\n      }\n    },\n    "x-is-string": {\n      "version": "0.1.0",\n      "resolved": "https://registry.npmjs.org/x-is-string/-/x-is-string-0.1.0.tgz",\n      "integrity": "sha1-R0tQhlrzpJqcRlfwWs0UVFj3fYI="\n    },\n    "xml-name-validator": {\n      "version": "3.0.0",\n      "resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz",\n      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz/qizqzJKOMIfUJHETbBw/sFaDxgd6fxm1ewUaM0jZ444Fc5vC5ROYurg/4Pw=="\n    },\n    "xmlchars": {\n      "version": "1.3.1",\n      "resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-1.3.1.tgz",\n      "integrity": "sha512-tGkGJkN8XqCod7OT+EvGYK5Z4SfDQGD30zAa58OcnAa0RRWgzUEK72tkXhsX1FZd+rgnhRxFtmO+ihkp8LHSkw=="\n    },\n    "xregexp": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/xregexp/-/xregexp-4.0.0.tgz",\n      "integrity": "sha512-PHyM+sQouu7xspQQwELlGwwd05mXUFqwFYfqPO0cC7x4fxyHnnuetmQr6CjJiafIDoH4MogHb9dOoJzR/Y4rFg=="\n    },\n    "xtend": {\n      "version": "4.0.1",\n      "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.1.tgz",\n      "integrity": "sha1-pcbVMr5lbiPbgg77lDofBJmNY68="\n    },\n    "y18n": {\n      "version": "4.0.0",\n      "resolved": "https://registry.npmjs.org/y18n/-/y18n-4.0.0.tgz",\n      "integrity": "sha512-r9S/ZyXu/Xu9q1tYlpsLIsa3EeLXXk0VwlxqTcFRfg9EhMW+17kbt9G0NrgCmhGb5vT2hyhJZLfDGx+7+5Uj/w=="\n    },\n    "yallist": {\n      "version": "3.0.3",\n      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.0.3.tgz",\n      "integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A=="\n    },\n    "yamljs": {\n      "version": "0.3.0",\n      "resolved": "https://registry.npmjs.org/yamljs/-/yamljs-0.3.0.tgz",\n      "integrity": "sha512-C/FsVVhht4iPQYXOInoxUM/1ELSf9EsgKH34FofQOp6hwCPrW4vG4w5++TED3xRUo8gD7l0P1J1dLlDYzODsTQ==",\n      "requires": {\n        "argparse": "1.0.7",\n        "glob": "7.0.5"\n      }\n    },\n    "yargs": {\n      "version": "12.0.5",\n      "resolved": "https://registry.npmjs.org/yargs/-/yargs-12.0.5.tgz",\n      "integrity": "sha512-Lhz8TLaYnxq/2ObqHDql8dX8CJi97oHxrjUcYtzKbbykPtVW9WB+poxI+NM2UIzsMgNCZTIf0AQwsjK5yMAqZw==",\n      "requires": {\n        "cliui": "4.0.0",\n        "decamelize": "1.2.0",\n        "find-up": "3.0.0",\n        "get-caller-file": "1.0.1",\n        "os-locale": "3.0.0",\n        "require-directory": "2.1.1",\n        "require-main-filename": "1.0.1",\n        "set-blocking": "2.0.0",\n        "string-width": "2.0.0",\n        "which-module": "2.0.0",\n        "y18n": "3.2.1 || 4.0.0",\n        "yargs-parser": "11.1.1"\n      },\n      "dependencies": {\n        "require-main-filename": {\n          "version": "1.0.1",\n          "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-1.0.1.tgz",\n          "integrity": "sha1-l/cXtp1IeE9fUmpsWqj/3aBVpNE="\n        }\n      }\n    },\n    "yargs-parser": {\n      "version": "11.1.1",\n      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-11.1.1.tgz",\n      "integrity": "sha512-C6kB/WJDiaxONLJQnF8ccx9SEeoTTLek8RVbaOIsrAUS8VrBEXfmeSnCZxygc+XC2sNMBIwOOnfcxiynjHsVSQ==",\n      "requires": {\n        "camelcase": "5.0.0",\n        "decamelize": "1.2.0"\n      }\n    }\n  }\n}\n'
ans='{\n  "name": "liac",\n  "version": "0.1.0",\n  "private": true,\n  "dependencies": {\n    "@material-ui/core": "^3.9.3",\n    "@material-ui/icons": "^3.0.2",\n    "i": "^0.3.6",\n    "install": "^0.12.2",\n    "npm": "^6.9.0",\n    "prop-types": "^15.7.2",\n    "radix-trie-js": "^1.0.5",\n    "react": "^16.8.6",\n    "react-dom": "^16.8.6",\n    "react-numeric-input": "^2.2.3",\n    "react-pointerlock": "^1.1.3",\n    "react-resizable": "^1.7.5",\n    "react-scripts": "3.0.0",\n    "react-select": "^2.4.3",\n    "react-split": "^2.0.4",\n    "react-tooltip": "^3.10.0",\n    "semantic-ui": "^2.4.2"\n  },\n  "scripts": {\n    "start": "react-scripts start",\n    "build": "react-scripts build",\n    "test": "react-scripts test",\n    "eject": "react-scripts eject"\n  },\n  "eslintConfig": {\n    "extends": "react-app"\n  },\n  "browserslist": {\n    "production": [\n      ">0.2%",\n      "not dead",\n      "not op_mini all"\n    ],\n    "development": [\n      "last 1 chrome version",\n      "last 1 firefox version",\n      "last 1 safari version"\n    ]\n  },\n  "devDependencies": {\n    "material-ui": "^0.20.2",\n    "semantic-ui-react": "^0.86.0"\n  }\n}\n'
ans=ans.replace('^','')
ans='/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube-New'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 2:11:29AM     ###########
############################################################
ans=['.gitignore', 'node_modules/react-scripts/template/gitignore', 'node_modules/react-scripts/template-typescript/gitignore', 'node_modules/globby/gitignore.js', '.gitignore', 'public/Three/Plugins/threejs-slice-geometry/.gitignore', 'build/Three/Plugins/threejs-slice-geometry/.gitignore', 'shelved/Exports/dist/submodule/build/Three/Plugins/threejs-slice-geometry/.gitignore']
__import__("rp").delete_path('/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube-Full/.gitignore')# /Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube-Full/.gitignore


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 2:27:59AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/Lab-In-A-Cube_LUMPO');sys.path.append(os.getcwd())# CD Lab-In-A-Cube_LUMPO
a=get_all_paths(relative=True,recursive=True)
import sys,os;os.chdir('/Users/Ryan/Desktop');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/Lab-In-A-Cube_LUnew');sys.path.append(os.getcwd())# CD Lab-In-A-Cube_LUnew
b=get_all_paths(relative=True,recursive=True)
ans=set(a)-set(b)
ans=set(b)-set(a)
ans=random_batch(a,40)
__import__('rp').os.system("zsh");


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Oct 28, 2021 at 1:47:53AM     ###########
############################################################
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CDB
__import__("rp").rename_path('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2/public','public_old')# /Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2/public
ans='public'
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2/public');sys.path.append(os.getcwd())# CD public
__import__('rp').os.system("zsh");
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CD ..
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2/node_modules');sys.path.append(os.getcwd())# CD node_modules
ans='react-scripts'
import sys,os;os.chdir('/Users/Ryan/Desktop/CleanCode/Sandbox/Lab-In-A-Cube_2');sys.path.append(os.getcwd())# CD ..
__import__('rp').os.system("zsh");


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Fri Oct 29, 2021 at 8:18:50PM     ###########
############################################################
ans=len('fiwannabeagirlA1')
ans=len('fiwannabeagirlA1!')
ans=26**17
ans=26**16


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sat Oct 30, 2021 at 3:20:12AM     ###########
############################################################
ans='\u001b[1;32Hello'
ans='\u001b[1;32Hello'
print('\u001b[1;32Hello')
ans=''
import os;os.system('')#SRUNA
ans=__import__('os').system('reset')
print('\u001b[1;32Hello')
ans=3
ans=3
ans=3
ans=2
ans=3
ans=3
ans=2
ans=3
ans=2
print('\u001b[1;32Hello')
print('\u001b[1;32Hello')
print('\x1b[1;32Hello')
ans=fansi('Hello','green')
ans=repr(fansi('Hello','green'))
print(ans)
print(exec(ans))
print('\x1b[32mHello\x1b[0m')
print('\u001b[32mHello\x1b[0m')
print('\u001b[32;bmHello\x1b[0m')
print('\u001b[32;bmHello\x1b[0m')
print('\u001b[32;bmHello\x1b[0m')
print('\u001b[32;bmHello\x1b[0m')
print('\u001b[32;qmHello\x1b[0m')
print('\u001b[32;bmHello\x1b[0m')
print('\u001b[32;cmHello\x1b[0m')
print('\u001b[32;amHello\x1b[0m')
print('\u001b[32;2mHello\x1b[0m')
print('\u001b[32;2mHello\x1b[0m')
print_fansi_reference_table()
ans=repr(fansi('Hello','green','bold'))
print('\x1b[1;32mHello\x1b[0m')
print('\u001b[1;32mHello\x1b[0m')
print('\u001b[1;32mHello\x1b[0m')
ans='\u001b'
ans=ord(ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sun Oct 31, 2021 at 3:26:41PM     ###########
############################################################
ans='https://raw.githubusercontent.com/eriklindernoren/PyTorch-GAN/master/implementations/unit/unit.py'
ans='import argparse\nimport os\nimport numpy as np\nimport math\nimport itertools\nimport datetime\nimport time\nimport sys\n\nimport torchvision.transforms as transforms\nfrom torchvision.utils import save_image\n\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets\nfrom torch.autograd import Variable\n\nfrom models import *\nfrom datasets import *\n\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch\n\nparser = argparse.ArgumentParser()\nparser.add_argument("--epoch", type=int, default=0, help="epoch to start training from")\nparser.add_argument("--n_epochs", type=int, default=200, help="number of epochs of training")\nparser.add_argument("--dataset_name", type=str, default="apple2orange", help="name of the dataset")\nparser.add_argument("--batch_size", type=int, default=1, help="size of the batches")\nparser.add_argument("--lr", type=float, default=0.0001, help="adam: learning rate")\nparser.add_argument("--b1", type=float, default=0.5, help="adam: decay of first order momentum of gradient")\nparser.add_argument("--b2", type=float, default=0.999, help="adam: decay of first order momentum of gradient")\nparser.add_argument("--decay_epoch", type=int, default=100, help="epoch from which to start lr decay")\nparser.add_argument("--n_cpu", type=int, default=8, help="number of cpu threads to use during batch generation")\nparser.add_argument("--img_height", type=int, default=256, help="size of image height")\nparser.add_argument("--img_width", type=int, default=256, help="size of image width")\nparser.add_argument("--channels", type=int, default=3, help="number of image channels")\nparser.add_argument("--sample_interval", type=int, default=100, help="interval between saving generator samples")\nparser.add_argument("--checkpoint_interval", type=int, default=-1, help="interval between saving model checkpoints")\nparser.add_argument("--n_downsample", type=int, default=2, help="number downsampling layers in encoder")\nparser.add_argument("--dim", type=int, default=64, help="number of filters in first encoder layer")\nopt = parser.parse_args()\nprint(opt)\n\ncuda = True if torch.cuda.is_available() else False\n\n# Create sample and checkpoint directories\nos.makedirs("images/%s" % opt.dataset_name, exist_ok=True)\nos.makedirs("saved_models/%s" % opt.dataset_name, exist_ok=True)\n\n# Losses\ncriterion_GAN = torch.nn.MSELoss()\ncriterion_pixel = torch.nn.L1Loss()\n\ninput_shape = (opt.channels, opt.img_height, opt.img_width)\n\n# Dimensionality (channel-wise) of image embedding\nshared_dim = opt.dim * 2 ** opt.n_downsample\n\n# Initialize generator and discriminator\nshared_E = ResidualBlock(features=shared_dim)\nE1 = Encoder(dim=opt.dim, n_downsample=opt.n_downsample, shared_block=shared_E)\nE2 = Encoder(dim=opt.dim, n_downsample=opt.n_downsample, shared_block=shared_E)\nshared_G = ResidualBlock(features=shared_dim)\nG1 = Generator(dim=opt.dim, n_upsample=opt.n_downsample, shared_block=shared_G)\nG2 = Generator(dim=opt.dim, n_upsample=opt.n_downsample, shared_block=shared_G)\nD1 = Discriminator(input_shape)\nD2 = Discriminator(input_shape)\n\nif cuda:\n    E1 = E1.cuda()\n    E2 = E2.cuda()\n    G1 = G1.cuda()\n    G2 = G2.cuda()\n    D1 = D1.cuda()\n    D2 = D2.cuda()\n    criterion_GAN.cuda()\n    criterion_pixel.cuda()\n\nif opt.epoch != 0:\n    # Load pretrained models\n    E1.load_state_dict(torch.load("saved_models/%s/E1_%d.pth" % (opt.dataset_name, opt.epoch)))\n    E2.load_state_dict(torch.load("saved_models/%s/E2_%d.pth" % (opt.dataset_name, opt.epoch)))\n    G1.load_state_dict(torch.load("saved_models/%s/G1_%d.pth" % (opt.dataset_name, opt.epoch)))\n    G2.load_state_dict(torch.load("saved_models/%s/G2_%d.pth" % (opt.dataset_name, opt.epoch)))\n    D1.load_state_dict(torch.load("saved_models/%s/D1_%d.pth" % (opt.dataset_name, opt.epoch)))\n    D2.load_state_dict(torch.load("saved_models/%s/D2_%d.pth" % (opt.dataset_name, opt.epoch)))\nelse:\n    # Initialize weights\n    E1.apply(weights_init_normal)\n    E2.apply(weights_init_normal)\n    G1.apply(weights_init_normal)\n    G2.apply(weights_init_normal)\n    D1.apply(weights_init_normal)\n    D2.apply(weights_init_normal)\n\n# Loss weights\nlambda_0 = 10  # GAN\nlambda_1 = 0.1  # KL (encoded images)\nlambda_2 = 100  # ID pixel-wise\nlambda_3 = 0.1  # KL (encoded translated images)\nlambda_4 = 100  # Cycle pixel-wise\n\n# Optimizers\noptimizer_G = torch.optim.Adam(\n    itertools.chain(E1.parameters(), E2.parameters(), G1.parameters(), G2.parameters()),\n    lr=opt.lr,\n    betas=(opt.b1, opt.b2),\n)\noptimizer_D1 = torch.optim.Adam(D1.parameters(), lr=opt.lr, betas=(opt.b1, opt.b2))\noptimizer_D2 = torch.optim.Adam(D2.parameters(), lr=opt.lr, betas=(opt.b1, opt.b2))\n\n# Learning rate update schedulers\nlr_scheduler_G = torch.optim.lr_scheduler.LambdaLR(\n    optimizer_G, lr_lambda=LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step\n)\nlr_scheduler_D1 = torch.optim.lr_scheduler.LambdaLR(\n    optimizer_D1, lr_lambda=LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step\n)\nlr_scheduler_D2 = torch.optim.lr_scheduler.LambdaLR(\n    optimizer_D2, lr_lambda=LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step\n)\n\nTensor = torch.cuda.FloatTensor if cuda else torch.Tensor\n\n# Image transformations\ntransforms_ = [\n    transforms.Resize(int(opt.img_height * 1.12), Image.BICUBIC),\n    transforms.RandomCrop((opt.img_height, opt.img_width)),\n    transforms.RandomHorizontalFlip(),\n    transforms.ToTensor(),\n    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5)),\n]\n\n# Training data loader\ndataloader = DataLoader(\n    ImageDataset("../../data/%s" % opt.dataset_name, transforms_=transforms_, unaligned=True),\n    batch_size=opt.batch_size,\n    shuffle=True,\n    num_workers=opt.n_cpu,\n)\n# Test data loader\nval_dataloader = DataLoader(\n    ImageDataset("../../data/%s" % opt.dataset_name, transforms_=transforms_, unaligned=True, mode="test"),\n    batch_size=5,\n    shuffle=True,\n    num_workers=1,\n)\n\n\ndef sample_images(batches_done):\n    """Saves a generated sample from the test set"""\n    imgs = next(iter(val_dataloader))\n    X1 = Variable(imgs["A"].type(Tensor))\n    X2 = Variable(imgs["B"].type(Tensor))\n    _, Z1 = E1(X1)\n    _, Z2 = E2(X2)\n    fake_X1 = G1(Z2)\n    fake_X2 = G2(Z1)\n    img_sample = torch.cat((X1.data, fake_X2.data, X2.data, fake_X1.data), 0)\n    save_image(img_sample, "images/%s/%s.png" % (opt.dataset_name, batches_done), nrow=5, normalize=True)\n\n\ndef compute_kl(mu):\n    mu_2 = torch.pow(mu, 2)\n    loss = torch.mean(mu_2)\n    return loss\n\n\n# ----------\n#  Training\n# ----------\n\nprev_time = time.time()\nfor epoch in range(opt.epoch, opt.n_epochs):\n    for i, batch in enumerate(dataloader):\n\n        # Set model input\n        X1 = Variable(batch["A"].type(Tensor))\n        X2 = Variable(batch["B"].type(Tensor))\n\n        # Adversarial ground truths\n        valid = Variable(Tensor(np.ones((X1.size(0), *D1.output_shape))), requires_grad=False)\n        fake = Variable(Tensor(np.zeros((X1.size(0), *D1.output_shape))), requires_grad=False)\n\n        # -------------------------------\n        #  Train Encoders and Generators\n        # -------------------------------\n\n        optimizer_G.zero_grad()\n\n        # Get shared latent representation\n        mu1, Z1 = E1(X1)\n        mu2, Z2 = E2(X2)\n\n        # Reconstruct images\n        recon_X1 = G1(Z1)\n        recon_X2 = G2(Z2)\n\n        # Translate images\n        fake_X1 = G1(Z2)\n        fake_X2 = G2(Z1)\n\n        # Cycle translation\n        mu1_, Z1_ = E1(fake_X1)\n        mu2_, Z2_ = E2(fake_X2)\n        cycle_X1 = G1(Z2_)\n        cycle_X2 = G2(Z1_)\n\n        # Losses\n        loss_GAN_1 = lambda_0 * criterion_GAN(D1(fake_X1), valid)\n        loss_GAN_2 = lambda_0 * criterion_GAN(D2(fake_X2), valid)\n        loss_KL_1 = lambda_1 * compute_kl(mu1)\n        loss_KL_2 = lambda_1 * compute_kl(mu2)\n        loss_ID_1 = lambda_2 * criterion_pixel(recon_X1, X1)\n        loss_ID_2 = lambda_2 * criterion_pixel(recon_X2, X2)\n        loss_KL_1_ = lambda_3 * compute_kl(mu1_)\n        loss_KL_2_ = lambda_3 * compute_kl(mu2_)\n        loss_cyc_1 = lambda_4 * criterion_pixel(cycle_X1, X1)\n        loss_cyc_2 = lambda_4 * criterion_pixel(cycle_X2, X2)\n\n        # Total loss\n        loss_G = (\n            loss_KL_1\n            + loss_KL_2\n            + loss_ID_1\n            + loss_ID_2\n            + loss_GAN_1\n            + loss_GAN_2\n            + loss_KL_1_\n            + loss_KL_2_\n            + loss_cyc_1\n            + loss_cyc_2\n        )\n\n        loss_G.backward()\n        optimizer_G.step()\n\n        # -----------------------\n        #  Train Discriminator 1\n        # -----------------------\n\n        optimizer_D1.zero_grad()\n\n        loss_D1 = criterion_GAN(D1(X1), valid) + criterion_GAN(D1(fake_X1.detach()), fake)\n\n        loss_D1.backward()\n        optimizer_D1.step()\n\n        # -----------------------\n        #  Train Discriminator 2\n        # -----------------------\n\n        optimizer_D2.zero_grad()\n\n        loss_D2 = criterion_GAN(D2(X2), valid) + criterion_GAN(D2(fake_X2.detach()), fake)\n\n        loss_D2.backward()\n        optimizer_D2.step()\n\n        # --------------\n        #  Log Progress\n        # --------------\n\n        # Determine approximate time left\n        batches_done = epoch * len(dataloader) + i\n        batches_left = opt.n_epochs * len(dataloader) - batches_done\n        time_left = datetime.timedelta(seconds=batches_left * (time.time() - prev_time))\n        prev_time = time.time()\n\n        # Print log\n        sys.stdout.write(\n            "\\r[Epoch %d/%d] [Batch %d/%d] [D loss: %f] [G loss: %f] ETA: %s"\n            % (epoch, opt.n_epochs, i, len(dataloader), (loss_D1 + loss_D2).item(), loss_G.item(), time_left)\n        )\n\n        # If at sample interval save image\n        if batches_done % opt.sample_interval == 0:\n            sample_images(batches_done)\n\n    # Update learning rates\n    lr_scheduler_G.step()\n    lr_scheduler_D1.step()\n    lr_scheduler_D2.step()\n\n    if opt.checkpoint_interval != -1 and epoch % opt.checkpoint_interval == 0:\n        # Save model checkpoints\n        torch.save(E1.state_dict(), "saved_models/%s/E1_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(E2.state_dict(), "saved_models/%s/E2_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(G1.state_dict(), "saved_models/%s/G1_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(G2.state_dict(), "saved_models/%s/G2_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(D1.state_dict(), "saved_models/%s/D1_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(D2.state_dict(), "saved_models/%s/D2_%d.pth" % (opt.dataset_name, epoch))\n'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sun Oct 31, 2021 at 3:32:01PM     ###########
############################################################
ans='https://raw.githubusercontent.com/eriklindernoren/PyTorch-GAN/master/implementations/unit/unit.py'
ans='import argparse\nimport os\nimport numpy as np\nimport math\nimport itertools\nimport datetime\nimport time\nimport sys\n\nimport torchvision.transforms as transforms\nfrom torchvision.utils import save_image\n\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets\nfrom torch.autograd import Variable\n\nfrom models import *\nfrom datasets import *\n\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch\n\nparser = argparse.ArgumentParser()\nparser.add_argument("--epoch", type=int, default=0, help="epoch to start training from")\nparser.add_argument("--n_epochs", type=int, default=200, help="number of epochs of training")\nparser.add_argument("--dataset_name", type=str, default="apple2orange", help="name of the dataset")\nparser.add_argument("--batch_size", type=int, default=1, help="size of the batches")\nparser.add_argument("--lr", type=float, default=0.0001, help="adam: learning rate")\nparser.add_argument("--b1", type=float, default=0.5, help="adam: decay of first order momentum of gradient")\nparser.add_argument("--b2", type=float, default=0.999, help="adam: decay of first order momentum of gradient")\nparser.add_argument("--decay_epoch", type=int, default=100, help="epoch from which to start lr decay")\nparser.add_argument("--n_cpu", type=int, default=8, help="number of cpu threads to use during batch generation")\nparser.add_argument("--img_height", type=int, default=256, help="size of image height")\nparser.add_argument("--img_width", type=int, default=256, help="size of image width")\nparser.add_argument("--channels", type=int, default=3, help="number of image channels")\nparser.add_argument("--sample_interval", type=int, default=100, help="interval between saving generator samples")\nparser.add_argument("--checkpoint_interval", type=int, default=-1, help="interval between saving model checkpoints")\nparser.add_argument("--n_downsample", type=int, default=2, help="number downsampling layers in encoder")\nparser.add_argument("--dim", type=int, default=64, help="number of filters in first encoder layer")\nopt = parser.parse_args()\nprint(opt)\n\ncuda = True if torch.cuda.is_available() else False\n\n# Create sample and checkpoint directories\nos.makedirs("images/%s" % opt.dataset_name, exist_ok=True)\nos.makedirs("saved_models/%s" % opt.dataset_name, exist_ok=True)\n\n# Losses\ncriterion_GAN = torch.nn.MSELoss()\ncriterion_pixel = torch.nn.L1Loss()\n\ninput_shape = (opt.channels, opt.img_height, opt.img_width)\n\n# Dimensionality (channel-wise) of image embedding\nshared_dim = opt.dim * 2 ** opt.n_downsample\n\n# Initialize generator and discriminator\nshared_E = ResidualBlock(features=shared_dim)\nE1 = Encoder(dim=opt.dim, n_downsample=opt.n_downsample, shared_block=shared_E)\nE2 = Encoder(dim=opt.dim, n_downsample=opt.n_downsample, shared_block=shared_E)\nshared_G = ResidualBlock(features=shared_dim)\nG1 = Generator(dim=opt.dim, n_upsample=opt.n_downsample, shared_block=shared_G)\nG2 = Generator(dim=opt.dim, n_upsample=opt.n_downsample, shared_block=shared_G)\nD1 = Discriminator(input_shape)\nD2 = Discriminator(input_shape)\n\nif cuda:\n    E1 = E1.cuda()\n    E2 = E2.cuda()\n    G1 = G1.cuda()\n    G2 = G2.cuda()\n    D1 = D1.cuda()\n    D2 = D2.cuda()\n    criterion_GAN.cuda()\n    criterion_pixel.cuda()\n\nif opt.epoch != 0:\n    # Load pretrained models\n    E1.load_state_dict(torch.load("saved_models/%s/E1_%d.pth" % (opt.dataset_name, opt.epoch)))\n    E2.load_state_dict(torch.load("saved_models/%s/E2_%d.pth" % (opt.dataset_name, opt.epoch)))\n    G1.load_state_dict(torch.load("saved_models/%s/G1_%d.pth" % (opt.dataset_name, opt.epoch)))\n    G2.load_state_dict(torch.load("saved_models/%s/G2_%d.pth" % (opt.dataset_name, opt.epoch)))\n    D1.load_state_dict(torch.load("saved_models/%s/D1_%d.pth" % (opt.dataset_name, opt.epoch)))\n    D2.load_state_dict(torch.load("saved_models/%s/D2_%d.pth" % (opt.dataset_name, opt.epoch)))\nelse:\n    # Initialize weights\n    E1.apply(weights_init_normal)\n    E2.apply(weights_init_normal)\n    G1.apply(weights_init_normal)\n    G2.apply(weights_init_normal)\n    D1.apply(weights_init_normal)\n    D2.apply(weights_init_normal)\n\n# Loss weights\nlambda_0 = 10  # GAN\nlambda_1 = 0.1  # KL (encoded images)\nlambda_2 = 100  # ID pixel-wise\nlambda_3 = 0.1  # KL (encoded translated images)\nlambda_4 = 100  # Cycle pixel-wise\n\n# Optimizers\noptimizer_G = torch.optim.Adam(\n    itertools.chain(E1.parameters(), E2.parameters(), G1.parameters(), G2.parameters()),\n    lr=opt.lr,\n    betas=(opt.b1, opt.b2),\n)\noptimizer_D1 = torch.optim.Adam(D1.parameters(), lr=opt.lr, betas=(opt.b1, opt.b2))\noptimizer_D2 = torch.optim.Adam(D2.parameters(), lr=opt.lr, betas=(opt.b1, opt.b2))\n\n# Learning rate update schedulers\nlr_scheduler_G = torch.optim.lr_scheduler.LambdaLR(\n    optimizer_G, lr_lambda=LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step\n)\nlr_scheduler_D1 = torch.optim.lr_scheduler.LambdaLR(\n    optimizer_D1, lr_lambda=LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step\n)\nlr_scheduler_D2 = torch.optim.lr_scheduler.LambdaLR(\n    optimizer_D2, lr_lambda=LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step\n)\n\nTensor = torch.cuda.FloatTensor if cuda else torch.Tensor\n\n# Image transformations\ntransforms_ = [\n    transforms.Resize(int(opt.img_height * 1.12), Image.BICUBIC),\n    transforms.RandomCrop((opt.img_height, opt.img_width)),\n    transforms.RandomHorizontalFlip(),\n    transforms.ToTensor(),\n    transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5)),\n]\n\n# Training data loader\ndataloader = DataLoader(\n    ImageDataset("../../data/%s" % opt.dataset_name, transforms_=transforms_, unaligned=True),\n    batch_size=opt.batch_size,\n    shuffle=True,\n    num_workers=opt.n_cpu,\n)\n# Test data loader\nval_dataloader = DataLoader(\n    ImageDataset("../../data/%s" % opt.dataset_name, transforms_=transforms_, unaligned=True, mode="test"),\n    batch_size=5,\n    shuffle=True,\n    num_workers=1,\n)\n\n\ndef sample_images(batches_done):\n    """Saves a generated sample from the test set"""\n    imgs = next(iter(val_dataloader))\n    X1 = Variable(imgs["A"].type(Tensor))\n    X2 = Variable(imgs["B"].type(Tensor))\n    _, Z1 = E1(X1)\n    _, Z2 = E2(X2)\n    fake_X1 = G1(Z2)\n    fake_X2 = G2(Z1)\n    img_sample = torch.cat((X1.data, fake_X2.data, X2.data, fake_X1.data), 0)\n    save_image(img_sample, "images/%s/%s.png" % (opt.dataset_name, batches_done), nrow=5, normalize=True)\n\n\ndef compute_kl(mu):\n    mu_2 = torch.pow(mu, 2)\n    loss = torch.mean(mu_2)\n    return loss\n\n\n# ----------\n#  Training\n# ----------\n\nprev_time = time.time()\nfor epoch in range(opt.epoch, opt.n_epochs):\n    for i, batch in enumerate(dataloader):\n\n        # Set model input\n        X1 = Variable(batch["A"].type(Tensor))\n        X2 = Variable(batch["B"].type(Tensor))\n\n        # Adversarial ground truths\n        valid = Variable(Tensor(np.ones((X1.size(0), *D1.output_shape))), requires_grad=False)\n        fake = Variable(Tensor(np.zeros((X1.size(0), *D1.output_shape))), requires_grad=False)\n\n        # -------------------------------\n        #  Train Encoders and Generators\n        # -------------------------------\n\n        optimizer_G.zero_grad()\n\n        # Get shared latent representation\n        mu1, Z1 = E1(X1)\n        mu2, Z2 = E2(X2)\n\n        # Reconstruct images\n        recon_X1 = G1(Z1)\n        recon_X2 = G2(Z2)\n\n        # Translate images\n        fake_X1 = G1(Z2)\n        fake_X2 = G2(Z1)\n\n        # Cycle translation\n        mu1_, Z1_ = E1(fake_X1)\n        mu2_, Z2_ = E2(fake_X2)\n        cycle_X1 = G1(Z2_)\n        cycle_X2 = G2(Z1_)\n\n        # Losses\n        loss_GAN_1 = lambda_0 * criterion_GAN(D1(fake_X1), valid)\n        loss_GAN_2 = lambda_0 * criterion_GAN(D2(fake_X2), valid)\n        loss_KL_1 = lambda_1 * compute_kl(mu1)\n        loss_KL_2 = lambda_1 * compute_kl(mu2)\n        loss_ID_1 = lambda_2 * criterion_pixel(recon_X1, X1)\n        loss_ID_2 = lambda_2 * criterion_pixel(recon_X2, X2)\n        loss_KL_1_ = lambda_3 * compute_kl(mu1_)\n        loss_KL_2_ = lambda_3 * compute_kl(mu2_)\n        loss_cyc_1 = lambda_4 * criterion_pixel(cycle_X1, X1)\n        loss_cyc_2 = lambda_4 * criterion_pixel(cycle_X2, X2)\n\n        # Total loss\n        loss_G = (\n            loss_KL_1\n            + loss_KL_2\n            + loss_ID_1\n            + loss_ID_2\n            + loss_GAN_1\n            + loss_GAN_2\n            + loss_KL_1_\n            + loss_KL_2_\n            + loss_cyc_1\n            + loss_cyc_2\n        )\n\n        loss_G.backward()\n        optimizer_G.step()\n\n        # -----------------------\n        #  Train Discriminator 1\n        # -----------------------\n\n        optimizer_D1.zero_grad()\n\n        loss_D1 = criterion_GAN(D1(X1), valid) + criterion_GAN(D1(fake_X1.detach()), fake)\n\n        loss_D1.backward()\n        optimizer_D1.step()\n\n        # -----------------------\n        #  Train Discriminator 2\n        # -----------------------\n\n        optimizer_D2.zero_grad()\n\n        loss_D2 = criterion_GAN(D2(X2), valid) + criterion_GAN(D2(fake_X2.detach()), fake)\n\n        loss_D2.backward()\n        optimizer_D2.step()\n\n        # --------------\n        #  Log Progress\n        # --------------\n\n        # Determine approximate time left\n        batches_done = epoch * len(dataloader) + i\n        batches_left = opt.n_epochs * len(dataloader) - batches_done\n        time_left = datetime.timedelta(seconds=batches_left * (time.time() - prev_time))\n        prev_time = time.time()\n\n        # Print log\n        sys.stdout.write(\n            "\\r[Epoch %d/%d] [Batch %d/%d] [D loss: %f] [G loss: %f] ETA: %s"\n            % (epoch, opt.n_epochs, i, len(dataloader), (loss_D1 + loss_D2).item(), loss_G.item(), time_left)\n        )\n\n        # If at sample interval save image\n        if batches_done % opt.sample_interval == 0:\n            sample_images(batches_done)\n\n    # Update learning rates\n    lr_scheduler_G.step()\n    lr_scheduler_D1.step()\n    lr_scheduler_D2.step()\n\n    if opt.checkpoint_interval != -1 and epoch % opt.checkpoint_interval == 0:\n        # Save model checkpoints\n        torch.save(E1.state_dict(), "saved_models/%s/E1_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(E2.state_dict(), "saved_models/%s/E2_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(G1.state_dict(), "saved_models/%s/G1_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(G2.state_dict(), "saved_models/%s/G2_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(D1.state_dict(), "saved_models/%s/D1_%d.pth" % (opt.dataset_name, epoch))\n        torch.save(D2.state_dict(), "saved_models/%s/D2_%d.pth" % (opt.dataset_name, epoch))\n'


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Nov 04, 2021 at 5:59:29AM     ###########
############################################################
string_to_text_file(get_module_path(r),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Nov 10, 2021 at 2:24:01AM     ###########
############################################################
from math import log, exp
ans=log(exp(39))
ans=float('inf')
ans=exp(-ans)

def sums(A,B):
	def tagged(iterable,tag):
		for element in iterable:
			yield (element,tag)

	from itertools import merge

	A_seen,B_seen=[],[]

	for val,tag in merge(tagged(A,'A'),tagged(B,'B')):
		#Space can be optimized by getting rod of A_seen and B_seen, which are prefixes of A and B
		#I have a midterm tomorrow so Imma not optimize this I sholdn't even be up rn
		if tag=='A':
			A_seen.append(val)
			for x in B_seen:
				yield x+val
		if tag=='B':
			B_seen.append(val)
			for x in A_seen:
				yield x+val



def sums(A,B):
    def tagged(iterable,tag):
        for element in iterable:
            yield (element,tag)

    from itertools import merge

    A_seen,B_seen=[],[]

    for val,tag in merge(tagged(A,'A'),tagged(B,'B')):
        #Space can be optimized by getting rod of A_seen and B_seen, which are prefixes of A and B
        #I have a midterm tomorrow so Imma not optimize this I sholdn't even be up rn
        if tag=='A':
            A_seen.append(val)
            for x in B_seen:
                yield x+val
        if tag=='B':
            B_seen.append(val)
            for x in A_seen:
                yield x+val


ans=sums([1,2,3,8,9],[2,5,7,8,8])

def sums(A,B):
    def tagged(iterable,tag):
        for element in iterable:
            yield (element,tag)

    from heapq import merge

    A_seen,B_seen=[],[]

    for val,tag in merge(tagged(A,'A'),tagged(B,'B')):
        #Space can be optimized by getting rod of A_seen and B_seen, which are prefixes of A and B
        #I have a midterm tomorrow so Imma not optimize this I sholdn't even be up rn
        if tag=='A':
            A_seen.append(val)
            for x in B_seen:
                yield x+val
        if tag=='B':
            B_seen.append(val)
            for x in A_seen:
                yield x+val


ans=sums([1,2,3,8,9],[2,5,7,8,8])
ans=list(ans)

def sums(A,B):
    def tagged(iterable,tag):
        for element in iterable:
            yield (element,tag)

    from heapq import merge

    A_seen,B_seen=[],[]

    for val,tag in merge(tagged(A,'A'),tagged(B,'B')):
        #Space can be optimized by getting rod of A_seen and B_seen, which are prefixes of A and B
        #I have a midterm tomorrow so Imma not optimize this I sholdn't even be up rn
        if tag=='A':
            A_seen.append(val)
            for x in B_seen:
                yield x+val
        if tag=='B':
            B_seen.append(val)
            for x in A_seen:
                yield x+val
ans=sums([1,2,3,8,9],[2,5,7,8,8])
ans=list(ans)
ans=len(ans)
ans=sums([1,2,3,8,9]*3,[2,5,7,8,8]*3)
ans=list(ans)
ans=len(ans)
ans=15*15
ans=sums([1,2,4,5,6],[3,5,7,9])
ans=list(ans)
ans=sums([1,2,4,5,6],[3,5,7,9,10])
ans=list(ans)
ans=list(sums([1,2,4,5],[3,5,7,9]))
ans=list(sums([1,2,4],[3,5,7]))
ans=list(sums([1,4],[3,7]))
ans=list(sums([1,4],[3,7]))
ans=list(sums([1,2,4],[3,5,7]))
ans=list(sums([1,4],[3,5,7]))
ans=list(sums([1,2,4],[3,5,7]))
ans=list(sums([1,2,4],[3,5,99]))
ans=list(sums([1,2,4],[3,5]))
ans=list(sums([1,4],[3,5]))
ans=list(sums([1,4],[3,5]))


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Wed Nov 17, 2021 at 5:57:26AM     ###########
############################################################
ans=iter([])
ans=StopIteration()
from heapq import merge
ans=np.random.rand(5,5)
m= ans
m*=(m>.1)
ans=m
ans=np.all(m,axis=1)
ans=m*np.all(m,axis=1)
ans=m*np.all(m,axis=0)
ans=m*np.all(m,axis=0,keepdims=True)
ans=m*np.all(m,axis=1,keepdims=True)
ans=m*np.all(m,axis=1,keepdims=True)
ans=m
ans=m
ans=m
ans=m*np.all(m,axis=1,keepdims=True)
ans=m*np.all(m,axis=1,keepdims=True)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Nov 18, 2021 at 3:44:25AM     ###########
############################################################
ans="%------------------------\n% Resume Template\n% Author : Anubhav Singh\n% Github : https://github.com/xprilion\n% License : MIT\n%------------------------\n\n\\documentclass[a4paper,20pt]{article}\n\n\\usepackage{latexsym}\n\\usepackage[empty]{fullpage}\n\\usepackage{titlesec}\n\\usepackage{marvosym}\n\\usepackage[usenames,dvipsnames]{color}\n\\usepackage{verbatim}\n\\usepackage{enumitem}\n\\usepackage[pdftex]{hyperref}\n\\usepackage{fancyhdr}\n\n\\pagestyle{fancy}\n\\fancyhf{} % clear all header and footer fields\n\\fancyfoot{}\n\\renewcommand{\\headrulewidth}{0pt}\n\\renewcommand{\\footrulewidth}{0pt}\n\n% Adjust margins\n\\addtolength{\\oddsidemargin}{-0.530in}\n\\addtolength{\\evensidemargin}{-0.375in}\n\\addtolength{\\textwidth}{1in}\n\\addtolength{\\topmargin}{-.45in}\n\\addtolength{\\textheight}{1in}\n\n\\urlstyle{rm}\n\n\\raggedbottom\n\\raggedright\n\\setlength{\\tabcolsep}{0in}\n\n% Sections formatting\n\\titleformat{\\section}{\n  \\vspace{-10pt}\\scshape\\raggedright\\large\n}{}{0em}{}[\\color{black}\\titlerule \\vspace{-6pt}]\n\n%-------------------------\n% Custom commands\n\\newcommand{\\resumeItem}[2]{\n  \\item\\small{\n    \\textbf{#1}{: #2\\vspace{-2pt}}\n  }\n}\n\n\\newcommand{\\resumeItemWithoutTitle}[1]{\n  \\item\\small{\n    {\\vspace{-2pt}}\n  }\n}\n\n%%Author's original style: Had too much fluff for my taste\n\\newcommand{\\resumeSubheading}[4]{\n  \\vspace{-1pt}\\item\n    \\begin{tabular*}{0.97\\textwidth}{l@{\\extracolsep{\\fill}}r}\n      \\textbf{#1} & #2 \\\\\n      \\textit{#3} & \\textit{#4} \\\\\n    \\end{tabular*}\\vspace{-5pt}\n}\n\n\\newcommand{\\resumeSubheadingCompact}[4]{\n  \\vspace{-1pt}\\item\n    \\begin{tabular*}{0.97\\textwidth}{l@{\\extracolsep{\\fill}}r}\n      \\textbf{#1}: #3 & \\textit{#4} \\\\\n    \\end{tabular*}\\vspace{-5pt}\n}\n\n\n\\newcommand{\\resumeSubItem}[2]{\\resumeItem{#1}{#2}\\vspace{-3pt}}\n\n\\renewcommand{\\labelitemii}{$\\circ$}\n\n\\newcommand{\\resumeSubHeadingListStart}{\\begin{itemize}[leftmargin=*]}\n\\newcommand{\\resumeSubHeadingListEnd}{\\end{itemize}}\n\\newcommand{\\resumeItemListStart}{\\begin{itemize}}\n\\newcommand{\\resumeItemListEnd}{\\end{itemize}\\vspace{-5pt}}\n\n%-----------------------------\n%%%%%%  CV STARTS HERE  %%%%%%\n\n\\begin{document}\n\\vspace*{\\fill} %Put this at the beginning and end of the document to vertically center the page\n\n\n%----------HEADING-----------------\n\\begin{tabular*}{\\textwidth}{l@{\\extracolsep{\\fill}}r}\n    \\textbf{{\\LARGE Ryan Burgert}} & Email: \\href{mailto:rburgert@cs.stonybrook.edu}{rburgert@cs.stonybrook.edu}\\\\\n    \\href{https://ryanburgert.com}{Website: ryanburgert.com} & Mobile:~~~+1-631-624-0994 \\\\\n    \\href{https://github.com/RyannDaGreat}{Github: ~~github.com/RyannDaGreat} \\\\\n\\end{tabular*}\n\n%-----------EDUCATION-----------------\n\\section{~~Education}\n\\resumeSubHeadingListStart\n\n    \\resumeSubheading\n    {Stony Brook University: PhD Student of Computer Science}{}%{Stony Brook, NY}\n    {Research Areas: Robotics, Reinforcement Learning, Computer Vision}{Aug 2020 - Present}\n    {\\scriptsize \\textit{ \\footnotesize{\\newline{}\\textbf{Relevant Courses:} Computational Geometry, Computer Vision, Machine Learning, Introduction to Robotics}}}\n    \n    \\resumeSubheading\n    {Stony Brook University: Bachelors of Science}{}%{Stony Brook, NY}\n    {Double Major: Computer Science and Applied Mathematics}{Sep 2015 - May 2020}\n    {\\scriptsize \\textit{ \\footnotesize{\\newline{}\\textbf{Honors:} Graduated Cum Laude, University Scholars Program, Honors CS Program, CEAS Dean's Scholarship, Presidential Scholarship }}}\n    \n\\resumeSubHeadingListEnd\n        \n%-----------EXPERIENCE-----------------\n\\vspace{-5pt}\n\\section{Experience}\n\n\\resumeSubHeadingListStart\n\n    \\resumeSubheadingCompact{Research Assistant}{Stony Brook, NY}\n    {Stony Brook University (Full Time)}{May 2021 - Present}\n    \\resumeItemListStart\n        \\resumeItem{Topics}{Researching the use of differentiable rendering to bridge the reality gap for robotic simulations used for robotic reinforcement learning. Also working on a project to train a robot to follow humans in a crowd using LIDAR data.}\n        \\resumeItem{Advisor}{Advised by Professor Michael Ryoo.}\n        %\\resumeItem{Advisor}{Professor Michael Ryoo}\n    \\resumeItemListEnd\n    \n    %\\resumeSubheadingCompact{Teaching Assistant}{Stony Brook, NY}\n    %{Stony Brook University (Full Time)}{May 2021 - Present}\n    %\\resumeItemListStart\n    %    \\resumeItem{Topic}{Researching the use of differentiable rendering to bridge the reality gap for robotic simulations used for reinforcement learning.}\n    %    \\resumeItem{Advisor}{Professor Michael Ryoo}\n    %\\resumeItemListEnd\n\n    \\resumeSubheadingCompact{iRobot}{Remote}\n    {Machine Learning Intern (Full-time)}{May 2020 - Aug 2020}\n    \\resumeItemListStart\n        \\resumeItem{Project}\n        {Used Blender3D to create synthetic training data, and used unpaired image translation algorithms to make the renderings more realistic, such as CycleGAN in PyTorch.}\n        \\resumeItem{Impact}\n        {The new training data yielded better real-world accuracy in object detection and classification tasks.}\n    \\resumeItemListEnd\n\n    \\resumeSubheadingCompact{Zebra Technologies}{Holtsville, NY}\n    {Computer Vision Intern (Full-time, then part-time)}{May 2019 - Feb 2020}\n    \\resumeItemListStart\n        \\resumeItem{Project}\n        {Used OpenCV and Python to create a new template matching algorithm, using contours instead of SIFT.}\n        \\resumeItem{Impact}\n        {Outperformed company's previous implementation speed by factor of 30. See \\url{imgur.com/a/BOxxT6d}}\n    \\resumeItemListEnd\n\n    \\resumeSubheadingCompact{Zebra Technologies}{Holtsville, NY}\n    {Software Engineering Intern (Full-time)}{May 2018 - Aug 2018}\n    \\resumeItemListStart\n        \\resumeItem{Project}\n        {Designed and implemented computer-vision system to increase worker productivity by tracking boxes in warehouses for augmented reality application using OpenCV, C++, and NVIDIA Jetson.}\n        \\resumeItem{Impact}\n        {My key contribution to this project is now patented by Zebra. See \\url{imgur.com/a/eyFBoYJ}}\n    \\resumeItemListEnd  \n    \n    \\resumeSubheadingCompact{Air Techniques}{Melville, NY}\n    {Software Engineering Intern (Full-time)}{May 2017 - Aug 2017, Dec 2017 - Feb 2018}\n    \\resumeItemListStart\n        \\resumeItem{Project}\n        {Used MATLAB to create software that automatically analyzes the image quality of dental x-ray scanners.}\n        \\resumeItem{Impact}\n        {Saved over \\$40,000 annually by letting engineers test hardware in-house instead of outsourcing to Germany}\n    \\resumeItemListEnd\n\n\\resumeSubHeadingListEnd\n\n%-----------RESEARCH-----------------\n\\vspace{-5pt}\n\\section{Research}\n\n\\resumeSubHeadingListStart\n\n    \\resumeSubItem{Biomedical Research}\n    {Analyzed patients' facial expressions reacting to stimuli using computer vision techniques such as digital image correlation. This technology will be extended to providing an objective measurement to the severity of comas. Our paper is currently under review. Working with Professor Sima Mofakham of Stony Brook's department of Neurosurgery.}\n\n    \\vspace{2pt}\n\n    \\resumeSubItem{Physics Research}\n    {Co-authored ``A Fish Out of Water: The Archer Fish's Rocket-Like Launch,'' presented at Gallery of Fluid Motion, 71st Annual Meeting of the APS Division of Fluid Dynamics, 2018. Created photorealistic animation using Blender 3D: \\url{youtu.be/auodWP98vas}}\n\n    \\vspace{2pt}\n\n    \\resumeSubItem{Undergraduate Honors CS Thesis}\n    {Designed custom 3D game engine, programming language, and editor using ThreeJS, React, and MongoDB. Lead a team of 9 students to create a web-based biomedical virtual laboratory, ``Lab in a Cube,'' which provides a GUI for professors to create custom labs for their students. Presented in Conference on Instruction and Technology 2019, a statewide symposium. For a demo, open \\url{bit.ly/labinacube}, click ``load Lab'', enter ``ANNZ.''}\n    \n\\resumeSubHeadingListEnd\n\n\n%-----------PROJECTS-----------------\n\\vspace{-5pt}\n\\section{Projects}\n\n\\resumeSubHeadingListStart\n\n    \\resumeSubItem{Lightwave}\n    {An electronic synth instrument invented as a personal project. In addition to Music and Medicine Club, I performed for the incoming class of CS students during Orientation 2018. It regularly attracts crowds of people when I play it, and children love it, even the ones confined to their beds (when performing for patients at the hospital): \\url{vimeo.com/262693133}}\n\n    \\vspace{2pt}\n\n    \\resumeSubItem{CEWIT Hackathon 2017}\n    {Won two awards at the inaugural CEWIT hackathon for ``Know Before You Go'' app, which uses computer vision to tell people where available parking spaces are in Stony Brook University. Project was featured in both \\textit{Newsday} and \\textit{The Statesman}}\n\n    \\vspace{2pt}\n\n    \\resumeSubItem{Light Painting Robot}\n    {Created a robotic arm that creates colorful 3D light paintings, controlled with a Wacom tablet. See \\url{youtu.be/6rcRQtEdCII}. Created for an undergraduate robotics course.}\n    \n\\resumeSubHeadingListEnd\n\n\n%-----------PROFICINCIES-----------------\n\\vspace{-5pt}\n\\section{Skills}\n\\resumeSubHeadingListStart\n\n    \\resumeSubItem{Languages}{\n    \t\\textit{(Proficient)}: Python, Java, JavaScript, MATLAB, C, C++\n\t\t;\n\t\t\\textit{(Familiar)}: C\\#, MIPS, \\LaTeX, SQL, Go\n    }\n    \n        \n    \\resumeSubItem{Libraries}{\n    \t%TODO Filter through these\n    \t\\textit{~~(Unordered)}:\n    \tPyTorch, OpenCV, ThreeJS, Node.JS, React, MPI, Prompt Toolkit\n\t}\n    \n    \\resumeSubItem{Software}{\n    \t%TODO Filter through these\n    \t\\textit{~~(Unordered)}:\n    \tBlender3D, Arduino, Git, Unreal Engine, Unity3D, Photoshop, Audacity, FL Studio, Jupyter\n\t\t%Zsh, Filter Forge, Repetier, Simplify3D, Processing,  Vim, \n    }\n    \n\\resumeSubHeadingListEnd\n\n\n%-----------END-----------------\n\n\\vspace*{\\fill} %Put this at the beginning and end of the document to vertically center the page\n\\end{document}\n"


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Thu Nov 18, 2021 at 10:03:30PM    ###########
############################################################
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-s)
        s,n=s_,n_
        print(s,n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a+s)
        s,n=s_,n_
        print(s,n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a+s)
        s,n=s_,n_
        print(s,'\t',n)
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a+s)
        s,n=s_,n_
        print(s,'\t',n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        n=max(0,n+a+s)
        s_=min(a,0 if n<=0 else s)
        print(s,'\t',n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        n=max(0,n+a+s)
        s=min(a,0 if n<=0 else s)
        print(s,'\t',n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n=max(0,n+a+max(s,s_))
        print(s,'\t',n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n=max(0,n+a-min(s,s_))
        print(s,'\t',n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n=max(0,n+a(s,s_))
        print(s,'\t',n)
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s,n=s_,n_
        print(s,'\t',n)
f([3,-7,9,-8,-4,-4,-4,2,2,2,6,-5,-20,2,4,-6,7])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s,n=s_,n_
        #print(s,'\t',n)
    return n
ans=f([1,-2,-2,3])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s,n=s_,n_
        print(s,'\t',n)
    return n
ans=f([1,-2,-2,3])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s_=max(s_,0)
        s,n=s_,n_
        print(s,'\t',n)
    return n
ans=f([1,-2,-2,3])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s_=max(s_,0) if n_==0 else s_
        s,n=s_,n_
        print(s,'\t',n)
    return n
ans=f([1,-2,-2,3])
def f(A):
    s=n=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s_=max(s_,0) if n_==0 else s_
        s,n=s_,n_
        print(s,'\t',n)
    return n
ans=f([11,-10,-11,8,7,-6,9,4,11,6,5,0])
def f(A):
    if max(A)<0:
        #We must have at least 1 element
        return max(A)
    
    s=n=m=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s_=max(s_,0) if n_==0 else s_
        s,n=s_,n_
        m=max(n,m)
        print(s,'\t',n,'\t',m)
    return m
ans=f([11,-10,-11,8,7,-6,9,4,11,6,5,0])
ans=sum([11,-10,-11,8,7,-6,9,4,11,6,5,0])
ans=sum([11,-10,-11,8,7,-6,9,4,11,6,5,0])-min([11,-10,-11,8,7,-6,9,4,11,6,5,0])
def f(A):
    if max(A)<0:
        #We must have at least 1 element
        return max(A)
    
    s=n=m=0
    for a in A:
        s_=min(a,0 if n<=0 else s)
        n_=max(0,n+a-(s_-s))
        s_=max(s_,0) if n_==0 else s_
        s,n=s_,n_
        m=max(n,m)
        print(a,'\t',s,'\t',n,'\t',m)
    return m
ans=f([11,-10,-11,8,7,-6,9,4,11,6,5,0])
ans=f([8,7,-6,9,4,11,6,5,0])
ans=([11,-10,-11,8+7,-6,9+4+11+6+5])
ans=f(ans)
ans=f([11, -10, -11, 15, -16, 35])
ans=f([11, -10, -11, 15, -19, 35])
ans=f([11, -10, -11, 15, -11, 35])
ans=f([11, -10, -11, 15, -11, 5])
ans=f([4, -3, -4, 15, -4, 5])
ans=f([4, -3, -4, 4, -4, 4])
ans=f([4, -4, -4, 4, -4, 4])
ans=f([4, -3, -4, 4, -4, 4])
ans=f([2, -1, -2, 2, -2, 2])
ans=f([1, -1, -2, 2, -2, 2])
ans=f([2, -1, -2, 2, -2, 2])
ans="def f(A):\n    if max(A)<0:\n        #We must have at least 1 element\n        return max(A)\n    \n    s=n=m=0\n    for a in A:\n        if a>=0:\n            n+=a\n        else:\n            assert a<0f([11,-10,-11,8,7,-6,9,4,11,6,5,0])''\n            s_=min(a,0 if n<=0 else s)\n            n_=max(0,n+a-(s_-s))\n            s_=max(s_,0) if n_==0 else s_\n            s,n=s_,n_\n            m=max(n,m)\n        print(a,'\\t',s,'\\t',n,'\\t',m)\n    return m"
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return -1
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = int(7)
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return -1
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = 4
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return -1
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = 4
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return -1
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = 4
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return -1
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = 4
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return -1
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = 4
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
ans='# Python code to demonstrate working\n# of binary search in library\n  \ndef BinarySearch(a, x):\n    from bisect import bisect_left\n    i = bisect_left(a, x)\n    if i:\n        return (i-1)\n    else:\n        return -1\n  \n# Driver code\na  = [1, 2, 4, 4, 8]\nx = 4\nres = BinarySearch(a, x)\nif res == -1:\n    print("No value smaller than ", x)\nelse:\n    print("Largest value smaller than ", x, " is at index ", res)'
# Python code to demonstrate working
# of binary search in library
from bisect import bisect_left
  
def BinarySearch(a, x):
    i = bisect_left(a, x)
    if i:
        return (i-1)
    else:
        return i
  
# Driver code
a  = [1, 2, 4, 4, 8]
x = -9
res = BinarySearch(a, x)
if res == -1:
    print("No value smaller than ", x)
else:
    print("Largest value smaller than ", x, " is at index ", res)
def argmax_less_than_or_equal_to(l:list,x:int):
    #Return index of largest element in l that's less than x
    #Assumes l is sorted
    if not l:
        return None
    if l[0]>x:
        return None
    
    from bisect import bisect_left
    i = bisect_left(l, x)
    if i:
        if i==len(l):
            return len(l)-1
        return i
    elif l[0]<=x:
        return 0
    else:
        return None



############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sat Nov 20, 2021 at 10:19:23PM    ###########
############################################################
import rp.rp_ptpython.key_bindings as kibble
string_to_text_file(get_module_path(kibble),ans)


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sat Nov 20, 2021 at 10:22:45PM    ###########
############################################################
import rp.rp_ptpython.key_bindings as kibble
ans='soidjsdiofj'
ans='soidjsdiofj'
ans='soidjsdiofj'
ans='soidjsdiofj'
ans='soidjsdiofj'
None
ans='soidjsdiofj'
ans=234
import os;os.system('vim')


############################################################
########### BEGINNING OF PSEUDO TERMINAL SESSION ###########
###########    Sat Nov 20, 2021 at 10:24:23PM    ###########
############################################################
import rp.rp_ptpython.key_bindings as kibble
ans='#TODO on space, if current name is not a function\n#TODO fix autocomplete issues: backspace shouldn\'t erase everything, it should be faster, should highlight callables a different color, should let me immediately search in the middle of a word,3 shouldn\'t be persistent when I hit the enter key and the cursor is no longer on the keyword,\n#TODO add a way to add a space without any of my autocomplete nonsense\n\n#RULES:\n    #Should follow normal typing even (such as import import --> import)\n    #Should not use memory outisde current text (a few exceptions but they\'re exceptions not the rule)\n    #Should be activated on the fringes of useless or invalid syntax\n\n#TODO: Autocomplete "is" and "in" and "is not" and "and" and "or" (and any other alphabetic operators):\n    #When NOT in a string: (WE NEED STRING AREA DETECTION):\n        #On press \'a\': "x |" ---> "x and |"\n        #(because in no other situation would you need that space)\n    #How to handle conflict: "in" vs "is":\n        #Branch prediction: figure out how to predict which one the user uses more often.  #Let\'s say they use \'in\' more often; more specifically, if the variable to the left has a __contains__ function:\n            #On press i: "x |" ---> "x in |"\n        #Let\'s say that the user actually wanted "is". Because of the rule that normal typing should be supported:\n            #On press s: "x in |" ---> "x is |"\n    #Shouldn\'t REALLY be limited to just spaces (should also allow \')\',\']\',\'\')\n\n#Hold alt to make space act normal.\n\n\nfrom __future__ import unicode_literals\nimport re\nfrom rp.prompt_toolkit.document                    import Document\nfrom rp.prompt_toolkit.enums                       import DEFAULT_BUFFER\nfrom rp.prompt_toolkit.filters                     import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\nfrom rp.prompt_toolkit.key_binding.vi_state        import InputMode\nfrom rp.prompt_toolkit.key_binding.registry        import Registry,_Binding\nfrom rp.prompt_toolkit.keys                        import Keys,Key\nfrom rp.prompt_toolkit.buffer                      import Buffer\nfrom rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent\n\ndef get_all_function_names(code:str):        \n    #Return all the names of all functions defined in the given code, in the order that they appear\n    from rp import lrstrip_all_lines,line_split\n    lines=line_split(lrstrip_all_lines(code))\n    import re\n    defs=[line for line in lines if re.fullmatch(r\'\\s*def\\s+\\w+\\s*\\(.*\',line)]\n    func_names=[d[len(\'def \'):d.find(\'(\')].strip() for d in defs]\n    return func_names\n\ndef run_code_without_destroying_buffer(event,put_in_history=True):\n    #Run the code in the buffer without clearing it or destroying cursor position etc\n    buffer=event.cli.current_buffer\n    import rp.r_iterm_comm as ric\n    ric.dont_erase_buffer_on_enter+=[\'DO IT\']\n    buffer.accept_action.validate_and_handle(event.cli, buffer,put_in_history=put_in_history)\n\ndef run_arbitrary_code_without_destroying_buffer(code,event,put_in_history=True):\n    buffer=event.cli.current_buffer\n    original_document=buffer.document\n    buffer.document = Document(text=code)#Temporarily change the text in the buffer\n        # cursor_position=len(\'\'.join(lines_before + reshaped_text)))\n    run_code_without_destroying_buffer(event,put_in_history=put_in_history)\n    buffer.document=original_document#Put the old text/cursor pos/etc back. Dont mutate the buffer\n\ndef handle_run_cell(event):\n    #Happens when we press control+w or alt+w\n    #Run current cell between the boundary prefixes\n    buffer=event.cli.current_buffer\n    def main():\n        text=buffer.document.text\n        cursor_pos=buffer.cursor_position\n        cell_code=get_cell_code(text,cursor_pos,cell_boundary_prefix)\n        from rp import fansi_print\n        # fansi_print("RUNNING CODE CELL:",\'blue\',\'bold\')\n        # fansi_print(cell_code,\'blue\')\n\n        #When we do this, don\'t include that spam in our history...right? Maybe I\'ll change my mind in the future...I can\'t decide...like, it\'s annoying but it\'s truthful...\n        run_arbitrary_code_without_destroying_buffer(cell_code,event,put_in_history=True)#To include or not to include...which one??\n    main()\n\ndef edit_event_buffer_in_vim(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        text=buffer.document.text   \n        from rp import text_file_to_string,temporary_file_path,string_to_text_file\n        import subprocess\n\n        path=temporary_file_path()+\'.py\'\n        string_to_text_file(path,text)\n\n        lineno=document.text_before_cursor.count(\'\\n\')\n        colno=document.cursor_position_col\n\n        #+=1 because vim\'s line/col numbers start at 1, not 0\n        colno+=1\n        lineno+=1\n\n        try:\n            try:\n                subprocess.call(["vim",path,\'+call cursor(%i,%i)\'%(lineno,colno),\'+normal zz\'])#https://stackoverflow.com/questions/3313418/starting-vim-at-a-certain-position-line-and-column-of-a-file\n            except:\n                subprocess.call(["vi",path,\'+call cursor(%i,%i)\'%(lineno,colno),\'+normal zz\'])#If it doesn\'t work with vim, try vi. vi is installed on basically every computer by default (except windows)\n        except FileNotFoundError as error:\n            buffer.insert_text(\'#ERROR: Cant find vim. Are you sure its installed? \'+str(error))\n            return True\n\n        text=text_file_to_string(path)\n\n        from rp import delete_file\n        delete_file(path)\n\n        if text!=\'\':\n            #That means the user saved the file\n            buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n\n        event.cli.renderer.clear()#Refresh the screen\n\n        try:\n            #Attempt to restore the cursor position from vim and use it in rp\n            #I\'m still not 100% sure if this will always work; so for now I\'m going to squelch any errors.\n            import os\n            def get_viminfo():return \'\\n\'.join(open(os.path.expanduser(\'~/.viminfo\'),errors=\'ignore\').readlines())\n            def get_last_cursor_row_in_vim():    return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[ 1]))\n            def get_last_cursor_column_in_vim(): return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[ 2]))\n            def get_last_path_edited_in_vim():   return     os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[-1])\n            from rp import get_file_name\n            if get_file_name(get_last_path_edited_in_vim())==get_file_name(path):\n                #We recently edited the file, and we should attempt to restore the cursor\n                buffer.set_cursor_column(get_last_cursor_column_in_vim())\n                buffer.set_cursor_row(get_last_cursor_row_in_vim()-1 )\n        except:\n            pass\n\ndef split_python_tokens(string,return_tokens=False,ignore_errors=True):\n    #return_tokens is as opposed to returning the strings of those tokens, and thus returning a list of strings (the default behaviour)\n    #if ignore_errors, ignore any parsing errors and keep parsing tokens (return all tokens, even the ones that causes errors such as unterminated strings etc)\n    #EXAMPLES:\n    #    ⮤ split_python_tokens(\'aosid aoisjd aois   j d; \')\n    #    ans = [\'aosid\', \'aoisjd\', \'aois\', \'j\', \'d\', \';\']\n    #    ⮤ split_python_tokens(\' lambda x: 3,1\')\n    #    ans = [\' \', \'lambda\', \'x\', \':\', \'3\', \',\', \'1\', \'\']\n    import tokenize\n    i=iter(string.splitlines())\n    def f():return next(i).encode()\n    token_iterator=tokenize.tokenize(f)\n    tokens=[]\n    while True:\n        try:\n            tokens.append(next(token_iterator))\n        except StopIteration:\n            break\n        except:\n            if ignore_errors:\n                continue\n            else:\n                raise\n    tokens=tokens[1:]#The first and last token are never useful (just begin/end of field tokens. Even tokenizing an empty string would yield these two tokens.)\n    if tokens and tokens[-1].type==tokenize.ENDMARKER:#This token is useless imho. Especially when we\'re trying to return strings split from python tokens. It just adds an empty string to the end of the output. Useless...\n        del tokens[-1]\n    if return_tokens:\n        return tokens\n    else:\n        return [token.string for token in tokens]\n\ndef get_ans():\n    import rp.r_iterm_comm as ric\n    if \'ans\' in ric.globa:\n        return ric.globa[\'ans\']\n    else:\n        return None\n\n\ndef do_vim_copy(string):\n    import rp\n    global _copied_string\n    rp.vim_copy(string)\n    # _copied_string=string\n\ndef do_local_copy(string):\n    import rp\n    global _copied_string\n    rp.local_copy(string)\n    # _copied_string=string\n\ndef do_tmux_copy(string):\n    import rp\n    global _copied_string\n    rp.tmux_copy(string)\n    # _copied_string=string\n\ndef do_vim_paste(buffer,repr_mode=False,commented=None):\n    import rp\n    try:\n        if repr_mode:\n            text=repr(rp.vim_paste())\n        else:\n            text=str(rp.vim_paste())\n\n        if commented is not None:\n            text=commented_string(buffer,text,spaces=commented)\n\n        buffer.insert_text(text)\n    except:\n        pass\n\ndef do_tmux_paste(buffer,repr_mode=False,commented=None):\n    import rp\n    try:\n        if repr_mode:\n            text=repr(rp.tmux_paste())\n        else:\n            text=str(rp.tmux_paste())\n\n        if commented is not None:\n            text=commented_string(buffer,text,spaces=commented)\n\n        buffer.insert_text(text)\n    except:\n        pass\n\ndef do_web_copy(string):\n    import rp\n    global _copied_string\n    rp.web_copy(string)\n    # _copied_string=string\n\ndef do_local_paste(buffer,repr_mode=False):\n    import rp\n    try:\n        if repr_mode:\n            buffer.insert_text(repr(str(rp.local_paste())))\n        else:\n            buffer.insert_text(str(rp.local_paste()))\n    except:\n        pass\ndef do_web_paste(buffer,repr_mode=False):\n    import rp\n    try:\n        if repr_mode:\n            buffer.insert_text(repr(str(rp.web_paste())))\n        else:\n            buffer.insert_text(str(rp.web_paste()))\n    except:\n        pass\n\n_copied_string=""\ndef do_copy(string):\n    import rp\n    global _copied_string\n    rp.string_to_clipboard(string)\n    _copied_string=string\n\ndef commented_string(buffer,string,spaces=0):\n    if isinstance(spaces,int):\n        spaces=\' \'*spaces\n    cursor_column=buffer.document.cursor_position_col\n    string=string.split(\'\\n\')\n    string=[\'#\'+spaces+x for x in string]\n    flag=False\n    for index,line in enumerate(string):\n        if flag:\n            string[index]=\' \'*cursor_column+line\n        flag=True\n    string=\'\\n\'.join(string)\n    return string\n\ndef do_paste(buffer,commented:int=None):\n    import rp\n    string=rp.string_from_clipboard()\n    if commented is not None:string=commented_string(buffer,string,spaces=commented)\n    buffer.insert_text(string)\n\ndef do_string_paste(buffer):\n    import rp\n    buffer.insert_text(repr(rp.string_from_clipboard()))\nimport rp.r_iterm_comm as ric\nenable_space_autocompletions=ric.enable_space_autocompletions#This variable is a list that\'s mutated between being empty and being full, which toggles it\'s truth value. This feature isn\'t completely figured out yet...I suppose it\'s better to disable it for the time being...\n\nfrom rp import *\n__all__ = (\n    \'load_python_bindings\',\n    \'load_sidebar_bindings\',\n    \'load_confirm_exit_bindings\',\n)\nfrom rp import *\n\ndef toggle_top_line_text(buffer,top_line=\'debug()\\n\'):\n    text=buffer.document.text\n    old_cursor_pos=buffer.document.cursor_position\n    buffer.cursor_up(99999)\n    buffer.cursor_left(99999)\n    if text.startswith(top_line):\n        #Delete \'debug()\' from the top\n        buffer.delete(len(top_line))\n        buffer.document=Document(buffer.document.text,old_cursor_pos-len(top_line),buffer.document.selection)\n    else:\n        #Insert \'debug()\' at the top\n        buffer.insert_text(top_line)\n        buffer.document=Document(buffer.document.text,old_cursor_pos+len(top_line),buffer.document.selection)\ndef toggle_bottom_line_text(buffer,bottom_line):\n    def toggled_last_line(string,line):\n        # print()\n        # print("BEFORE:"+repr(string))\n        lines=string.splitlines() or [\'\']\n        if line==lines[-1]:\n            del lines[-1]\n        else:\n            lines.append(line)\n        out=\'\\n\'.join(lines)\n        # print("AFTER:"+repr(out))\n        # print()\n        return out\n    text=buffer.document.text\n    old_cursor_pos=buffer.document.cursor_position\n    new_text=toggled_last_line(text,bottom_line)\n    buffer.document=Document(new_text,min(old_cursor_pos,len(new_text)-1),buffer.document.selection)\n\nn_makes_in_and_s_makes_is=True#This is imperfect and got annoying\ns_makes_is=True#This is imperfect and got annoying\n\ndef text_to_speech(words):\n    try:\n        from rp import text_to_speech\n        text_to_speech(words)\n    except:pass#Who cares if this doesn\'t work, it\'s just for debugging anyway...\n\n\n# alt_updown_speed=\n# def any_key_pressed_prefix(key,buffer):\n#     #This function should include only things that happen during every keystroke. \n#     #If this function returns True, it cancels the rest of the execution. \n#     #This function happens before anything else.\n#     alt_updown_speed=3\n#     return False\n\n\n#region code cells\n#See https://asciinema.org/a/Hwj84iFknDtqIh5Tag2Eug6aj\ncell_boundary_prefix=\'##\'#SETTINGS\ndef separator_boundaries(code,separator_token):\n    #Return cursor positions of the beginning of each boundary, including the start and end of the string\n    #code="""@handle(Keys.ControlU)\n#    def _(event):\n#        +++\n#        +\n#            buffer=event.cli.current_buffer\n#            buffer.insert_text(\'UNDO\')\n#            +++\n#        @handle(Keys.ControlP)\n#        def _(event):\n#            +++  Hello\n#            -\n#            buffer=event.cli.current_buffer\n#+++"""\n    #separator_boundaries(code,\'+++\')  ->  [0, 40, 145, 214, 295, 299]\n    #NOTE THE -1 and len()+1 at either side were originally 0 and len(), but for practicality (executing cells where the cursor is at the beginning or end of the text) I did this as a quick hack.\n     # The examples are slightly different than the current code because of this.\n    return [-1]+[x.span()[0] for x in re.finditer(r\'((?<=(\\n))|^) *\'+re.escape(separator_token),code)]+[len(code)+1]\ndef above_and_below(value,L):\n    #Examples:\n    # ⮤ above_and_below(30,[2, 3, 13, 27, 28, 35, 35, 52, 90, 95])\n    #ans = (28, 35)\n    #\n    # ⮤ above_and_below(4,[1,3,7,8,9])\n    #ans = (3, 7)\n    # ⮤ above_and_below(100,[1,3,7,8,9])\n    #ans = (9, 100)\n    # ⮤ above_and_below(0,[3,7,8,9])\n    #ans = (0, 3)\n    return max((x for x in L if x<=value),default=min(L)),min((x for x in L if x>=value),default=max(L))\ndef get_cell_code(text,cursor_pos,prefix=cell_boundary_prefix):\n    #EXAMPLE:\n    # ⮤ code\n    #ans = @handle(Keys.ControlU)\n    #    def _(event):\n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    #            ###  Hello\n    #            -\n    #            buffer=event.cli.current_buffer\n    ####\n    # ⮤ separator_boundaries(code,\'###\')\n    #ans = [0, 40, 145, 214, 295, 299]\n    # ⮤ get_cell_code(code,30,\'###\')\n    #ans = @handle(Keys.ControlU)\n    #    def _(event):\n    # ⮤ get_cell_code(code,41,\'###\')\n    #ans = \n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    # ⮤ get_cell_code(code,67,\'###\')\n    #ans = \n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    # ⮤ get_cell_code(code,213,\'###\')\n    #ans = \n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    # ⮤ get_cell_code(code,150,\'###\')\n    #ans = \n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    start,end=above_and_below(cursor_pos,separator_boundaries(text,prefix))\n    return text[max(0,start):min(len(text),end)]\n#endregion\n\ndef swap_from_import(line):\n    try:\n        #EXAMPLES:\n        #     >>> swap_from_import(\'   import jugio as gi\')\n        #    ans =    from jugio import\n        #     >>> swap_from_import(\'   from bugg.malo import bees\')\n        #    ans =    import bugg.malo\n        whitespace=line[:len(line)-len(line.lstrip())]\n        line=line[len(whitespace):]\n        items=line.split()\n        items=items[:2]\n        if items[0]==\'from\':\n            items[0]=\'import\'\n        elif items[0]==\'import\':\n            items[0]=\'from\'\n            items.append(\'import \')        \n        line=\' \'.join(items)\n        return whitespace+line\n    except Exception:\n        return line\n\nalign_char=\'→\'\ndef align_lines_to_char(string,char=align_char,space=\' \'):\n    #EXAMPLE:\n    #    SPASTE\n    #    ans = from rp.prompt_toolkit.document →import Document\n    #    from rp.prompt_toolkit.enums →import DEFAULT_BUFFER\n    #    from rp.prompt_toolkit.filters →import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\n    #    from rp.prompt_toolkit.key_binding.vi_state →import InputMode\n    #    from rp.prompt_toolkit.key_binding.registry →import Registry\n    #    from rp.prompt_toolkit.keys →import Keys,Key\n    #    from rp.prompt_toolkit.buffer →import Buffer\n    #    ⮤ print(align(ans))\n    #    from rp.prompt_toolkit.document             import Document\n    #    from rp.prompt_toolkit.enums                import DEFAULT_BUFFER\n    #    from rp.prompt_toolkit.filters              import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\n    #    from rp.prompt_toolkit.key_binding.vi_state import InputMode\n    #    from rp.prompt_toolkit.key_binding.registry import Registry\n    #    from rp.prompt_toolkit.keys                 import Keys,Key\n    #    from rp.prompt_toolkit.buffer               import Buffer\n    assert len(space)==1\n    lines=string.splitlines()\n    while any([char in x for x in lines]):\n        alignto=0\n        for i,line in enumerate(lines):\n            if char in line:\n                alignto=max(line.find(char),alignto)\n        for i,line in enumerate(lines):\n            if char in line:\n                pos=line.find(char)\n                line=line[:pos]+space*(alignto-pos)+(line[pos+1:] if len(line)-1!=pos else \'\')\n                lines[i]=line\n    out=\'\\n\'.join(lines)\n    return out\n\ndef split_def_arguments_into_multiple_lines(single_line_def):    \n    # print("GOT "+repr(single_line_def))\n    #EXAMPLE:\n    #INPUT:  \'def play_chord(*semitones:list,t=1,block=True,sampler=triangle_tone_sampler):\'\n    #OUTPUT:\n    #def play_chord(*semitones:list,\n    #               t=1,\n    #               block=True,\n    #               sampler=triangle_tone_sampler):\n    s=single_line_def\n    try:\n        import re\n        assert re.fullmatch(r\' *def .*: *(#.*)?\',s)\n        l=s.split(\',\')\n        w=l[0].find(\'(\')\n        assert w!=-1\n        o=[]\n        o.append(l.pop(0)+\',\')\n        for _ in range(len(l)):\n            o.append(\' \'+\' \'*w+l.pop(0)+\',\')\n        o=\'\\n\'.join(o)\n        o=o[:-1]\n        return o\n    except Exception as E:\n        return s\n            \ndef keys(root):\n    #Stolen from rinsp_search\n    out=set()\n    try:out.update(dir(root))\n    except:pass\n    try:out.update(root.__dict__)\n    except:pass\n    return sorted(out)\n            \ndef find_all_substring_matches(string,substring):\n    #Return a list of starting indices\n    #https://stackoverflow.com/questions/4664850/how-to-find-all-occurrences-of-a-substring\n    #EXAMPLE:\n    #    ⮤ find_all_substring_matches(\'jojo my jojo its jojo\',\'jojo\')\n    #    ans = [0, 8, 17]\n    return [m.start() for m in re.finditer(re.escape(substring), string)]\ndef token_exists(token_name):\n    from rp import is_namespaceable\n    if not is_namespaceable(token_name):\n        return False#We don\'t want to run eval on anything except tokens...\n    try:\n        eval(token_name,ric.globa)\n        return True\n    except:\n        return False#be on the safe side with space-function completions\ndef token_name_found_of_interest(before_line)->(str,object,bool):\n    from rp import is_namespaceable\n    token_of_interest=name_of_interest=None\n    try:\n        # fansi_print("\\n\\n"+split[-1]+"\\n\\n")\n\n        string=\'\'\n        for char in reversed(before_line):\n            if not (is_namespaceable(char) or char in \'0987654321\') and char not in \'.\':\n                break\n            string=char+string\n        name_of_interest=string\n        # print("HE")\n        token_of_interest=eval(string,r_iterm_comm.globa)  # ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects\n        # print("HOO",token_of_interest)\n        #\n        # for char in string:\n        #     if not char.isalnum() and char not in \'.\' and not is_namespaceable(char):\n        #         string=string.replace(char,\' \')\n        # name_of_interest=string\n        # token_of_interest=eval(string,r_iterm_comm.globa)# ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects\n    except:token_of_interest,name_of_interest,False#No variable called that was found\n    return token_of_interest,name_of_interest,True\ndef starts_with_any(string,*prefixes):\n    for p in prefixes:\n        if string.startswith(p):\n            return True\n    return False\n\ndef cursor_on_string(text,cpos):\n    #NOT accurate, dont put into the main RP library\n    #EXAMPLE:\n    # ⮤ def f(s):\n    #2     print(s)\n    #3     print(\'\'.join([str(int(bool(cursor_on_string(s,i))))for i in  range(len(s))]))\n    #4 \n    #⮤ f(\'hello="Helo"+234\')\n    #hello="Helo"+234   <--- this works well because theresno whitespace between hello and = and "Helo"\n    #0000001111110000\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            try:\n                return isinstance(eval(token),str)\n            except:\n                return False\n        count+=len(token)\n    return False\n\ndef cursor_on_comment(text,cpos,tokens):\n    #NOT accurate, dont put into the main RP library\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            try:\n                return token.startswith(\'#\')\n            except:\n                return False\n        count+=len(token)\n    return False\n\ndef current_token(text,cpos):\n    #NOT accurate, dont put into the main RP library\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            return token\n        count+=len(token)\n    return \'\'\n\ndef true_get_if_in_string_or_comment(before_line,after_line,buffer):\n    #This function IS not totally acurate, becauwe of a hack where I replace whitespace with other characters to trick the tokenizer into keeping cursor positoin relevant\n    text=buffer.document.text#+\' \'#add space to prevent last char from returning false\n    text=text.replace(\' \',\'+\').replace(\'\\n\',\'\\n+\')#Python tokenize gets rid of whitespace and newlines which we need to count but adding +\'s still preserves whats  a string and whats a comment. its a quick cheap hack.\'\n    cpos=buffer.document.cursor_position-1\n    token=current_token(text,cpos)\n    out=False\n    try:\n        if isinstance(eval(token),str):\n            out= True\n    except:pass\n    out=out or token.startswith(\'#\')\n    if out:\n        # print("WAH")\n        return True \n    return False\n\n    # if cursor_on_string(text,cpos) or cursor_on_comment(text,cpos):\n        # print("WAHH")\n        # return True\n    # return False\n    # return \'"\' in before_line and after_line.count(\'"\')==before_line.count(\'"\') or \\\n                                       # "\'" in before_line and after_line.count("\'")==before_line.count("\'") or \\\n                                       # \'#\' in before_line\n\n_previous_after_line=None\n_previous_before_line=None\n_previous_result=False\ndef get_if_in_string_or_comment(before_line,after_line,buffer):\n    if not \'\\n\' in buffer.text:\n        if re.fullmatch(r\'((!|!!|CD |RUN |([A-Z]+ )).*)\',before_line):#Things we want to turn microcompletions off for\n            return True\n    #This function attempts to make an nearly equivalent but faster version of true_get_if_in_string_or_comment\n    global _previous_result,_previous_after_line,_previous_before_line\n    if after_line!=_previous_after_line or\\\n          before_line.count(\'#\')!=_previous_before_line.count(\'#\') or\\\n          before_line.count("\'")!=_previous_before_line.count("\'") or\\\n          before_line.count(\'"\')!=_previous_before_line.count(\'"\'):\n        _previous_result=true_get_if_in_string_or_comment(before_line,after_line,buffer)\n    _previous_after_line =after_line\n    _previous_before_line=before_line\n    return _previous_result \n\n\n_meta_pressed=[]\ndef meta_pressed(clear=True):#This should only be called once per keystroke\n    out=bool(_meta_pressed)\n    if clear:\n        _meta_pressed.clear()\n    return out\n\ndef line_above(buffer):\n    return line_above_document(buffer.document)\n\ndef line_above_document(document):\n    before=document.text_before_cursor\n    if not \'\\n\' in before:\n        return None\n    before_lines=before.split("\\n")\n    return before_lines[-2]\n\n\ndef beginswithany(a,*b):\n    for x in b:\n        if a.startswith(x):\n            return True\n    return False\n\ndef ends_with_namespaceable(s):\n    #      ⮤ ends_with_namespaceable(\'oaisjdoiasd\')\n    # ans = True\n    #  ⮤ ends_with_namespaceable(\'oaisj[doiasd\')\n    # ans = True\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doiasd\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doi4asd\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doi4as5d\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[234234\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'234,oaisj\')\n    from rp import is_namespaceable\n    last_char=\'\'\n    for c in reversed(s):\n        if not is_namespaceable(c) and not c.isnumeric():\n            return not last_char.isnumeric()\n        last_char=c\n    return bool(last_char)\ndef ends_with_number(s):\n    #  ⮤ ends_with_number(\'osdi[f[4\')\n    # ans = True\n    #  ⮤ ends_with_number(\'osdi[f[d4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdiasdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia34534sdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia3asdfasd.4534sdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia3asdfasd.4534sdf.4\')\n    # ans = True\n    from rp import is_namespaceable\n    last_char=\'\'\n    for c in reversed(s):\n        if not c.isnumeric():\n            return not is_namespaceable(c)\n        last_char=c\n    return bool(last_char)\ndef so_far(s):\n    #EXAMPLES:\n    # >> so_far(\'asod jasoidj a: soajdo is\')\n    #ans = \'soajdo is\'\n    # >> so_far(\'asod jasoidj a: soaasd ajdo is\')\n    #ans = \'soaasd ajdo is\'\n    # >> so_far(\'asod jasoidj a:retu\')\n    #ans = \'retu\'\n    i=s.rfind(\':\')\n    s=s[i+1:]\n    s=s.strip()\n    return s\ndef splinterify(x):\n    #For use in regex expression prefixes\n    #EXAMPLES:\n    # >> splinterify(\'hello\')\n    #ans = \'h|he|hel|hell\'\n    # >> splinterify(\'world\')\n    #ans = \'w|wo|wor|worl\'\n    out=[]\n    for i in range(1,len(x)):\n        out.append(x[:i])\n    return \'|\'.join(out)\ndef indent_hiearchy(s:str):\n    """\n    Takes a str such as:\n\'\'\'\ndef hiu(iub):\n    ewq(ojhi)\n    if h:\n        apple\n        hio\n            iuy\n              ioo\'\'\'\n    And returns:\n    [\'              ioo\',\n     \'            iuy\',\n     \'        hio\',\n     \'    if h:\',\n     \'def hiu(iub):\']\n    """\n    o=None\n    for l in reversed(s.splitlines()):\n        if o is None or not l.startswith(o):\n            yield l\n            o=get_indent(l)\n            if not o:\n                break\ndef find_header(code:str,*line_starts:str)->str:\n    #(was originally just find_level, see it\'s purpose)\n    #this function returns the entire line itself instead of just the number of indents\n    #returns None if not in such a block\n    for i,e in enumerate(indent_hiearchy(code)):\n        if starts_with_any(e.lstrip(),*line_starts):\n            return e\n    return None\ndef find_level(code:str,*line_starts:str)->int:\n    #return the unindents needed (assumed to be spaces) to reach block starting with any string from line_starts\n    #returns None if not in such a block\n    header=find_header(code,line_starts)\n    if header is None:\n        return None\n    return len(get_indent(header))\ndef get_indent(line):\n    #returns a string that just contains the line\'s indent\n    return line[:len(line)-len(line.lstrip())]\ndef endswithany(a,*b):\n    for x in b:\n        if a.endswith(x):\n            return True\n    return False\ndef in_class_func_decl(buffer):#can be easily memoized but i wont bother unless its an issue; (prob got bigger probs tbh)\n    document=buffer.document\n    current_line=document.current_line\n    before_line=document.current_line_before_cursor\n    after_line=document.current_line_after_cursor\n    before=document.text_before_cursor\n    after= document.text_after_cursor\n    lines=reversed(before.split(\'\\n\'))\n    indent=get_indent(before_line)\n    for line in lines:\n        if not line.startswith(indent):\n            return line.lstrip().startswith(\'class \')\n    return False\nclass TabShouldInsertWhitespaceFilter(Filter):\n    """\n    When the \'tab\' key is pressed with only whitespace character before the\n    cursor, do autocompletion. Otherwise, insert indentation.\n\n    Except for the first character at the first line. Then always do a\n    completion. It doesn\'t make sense to start the first line with\n    indentation.\n    """\n    def __call__(self, cli):\n        b = cli.current_buffer\n        before_cursor = b.document.current_line_before_cursor\n\n        return bool(b.text and (not before_cursor or before_cursor.isspace()))\n\ndef has_selected_completion(buffer):# If we have a completion visibly selected on the menu\n    return buffer.complete_state and buffer.complete_state.complete_index is not None\nlast_pressed_dash=False\n\n\nclass CommentedParenthesizerAutomator:\n    def __init__(self,\n        upper_marker=\'#\',\n        lower_marker=\'#\',\n        match_indent=True\n        ):\n    # def __init__(self,\n    #     upper_marker=\'#╵\',\n    #     lower_marker=\'#╷\',\n    #     match_indent=True\n    #     ):\n        self.upper_marker=upper_marker\n        self.lower_marker=lower_marker\n        self.match_indent=match_indent#If true, indent the parnthesis comments along with the rest of the code. Otherwise, start the parenthesizer comments at the very beginning of the line\n\n    def parenthezized_line(self,line:str)->str:\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n\n        from rp import parenthesizer_automator\n\n        original_line=line\n\n        if self.match_indent:\n            whitespace=line[:len(line)-len(line.lstrip())]\n            assert line[len(whitespace):]==line.lstrip()\n        else:\n            whitespace=\'\'\n\n        middle_line  =line[len(whitespace):]\n        parenth_lines=parenthesizer_automator(middle_line).splitlines()\n\n        assert len(parenth_lines)==0 or len(parenth_lines)%2,\'Internal logical assertion (this should never fail unless this function is broken) due to the nature of rp.parenthesizer_automator: rp.parenthesizer_automator should always return an odd number of lines, unless it returns 0 lines\'\n        if len(parenth_lines)<=1:\n            return original_line\n\n        upper_lines=parenth_lines[:len(parenth_lines)//2   ]\n        lower_lines=parenth_lines[ len(parenth_lines)//2+1:]\n\n        upper_lines=[(self.upper_marker+(upper_line[len(self.upper_marker):] if len(upper_line)>=len(self.upper_marker) else \'\')) for upper_line in upper_lines]\n        lower_lines=[(self.lower_marker+(lower_line[len(self.lower_marker):] if len(lower_line)>=len(self.lower_marker) else \'\')) for lower_line in lower_lines]\n\n        out_lines=[*upper_lines,middle_line,*lower_lines]\n        out_lines=[whitespace+out_line for out_line in out_lines]\n\n        out=\'\\n\'.join(out_lines)\n\n        return out\n\n    def is_upper_line(self,line:str)->bool:\n        if not isinstance(line,str):return False#Can\'t be an upper line if it\'s not a line...\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n        return line.lstrip().startswith(self.upper_marker) and set(line.strip())<=set(\' #│┌┐\') and set(line)&set(\'│└┘┌┐\')\n\n    def is_lower_line(self,line:str)->bool:\n        if not isinstance(line,str):return False#Can\'t be a lower line if it\'s not a line...\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n        return line.lstrip().startswith(self.lower_marker) and set(line.strip())<=set(\' #│└┘\') and set(line)&set(\'│└┘┌┐\')\n\n    def is_parenthesized_at_line(self,string:str,line_number:int)->bool:\n        #Returns true if there are visible parenthesizer comments above and below the given linenumber in the given string\n        #Check for comments with the right markers above and below that line\n        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)\n\n        if line_number==0:\n            return False #You can\'t have any upper parenthesis if we\'re on the first line\n\n        lines=string.splitlines()\n        try:\n            line_above=lines[line_number-1]\n            line_below=lines[line_number+1]\n            return self.is_lower_line(line_below) and self.is_upper_line(line_above)\n        except IndexError:\n            return False\n\n    def unparenthesized(self,string,line_number)->str:\n        #Remove the parenthesizer comments around a given line number on the given string\n        lines=string.splitlines()\n\n        #Delete all lower lines\n        while True:\n            try:\n                line_below_index=line_number+1\n                line_below=lines[line_below_index]\n                if self.is_lower_line(line_below):\n                    del lines[line_below_index]\n                else:\n                    break\n            except IndexError:\n                break\n\n        #Delete all upper lines\n        line_above_index=line_number-1\n        while line_above_index>=0:\n            try:\n                line_above=lines[line_above_index]\n                if self.is_upper_line(line_above):\n                    del lines[line_above_index]\n                    line_above_index-=1\n                else:\n                    break\n            except IndexError:\n                break\n\n        return \'\\n\'.join(lines)\n\n\n    def parenthesized_at_line(self,string,line_number)->str:\n        #Insert parenthesizer comments around a given line in a string and return the result\n        lines=string.splitlines()\n        line =lines[ line_number]\n        lines=lines[line_number:line_number+1]=self.parenthezized_line(line).splitlines()\n        return \'\\n\'.join(lines)\n        \n    def unparenthesize_buffer(self,buffer)->None:\n        #Remove the parenthesizer comments around the cursor in the given buffer\n        #Delete all lower lines\n        while self.is_lower_line(buffer.document.current_line_below):\n            from rp import random_chance\n            buffer.delete_line_below_cursor()\n\n        #Delete all upper lines\n        while self.is_upper_line(buffer.document.current_line_above):\n            buffer.delete_line_above_cursor()\n\n    def parenthesize_buffer(self,buffer)->None:\n        #Insert parenthesizer comments around the cursor in a given buffer\n        current_line =buffer.document.current_line\n        cursor_column=buffer.document.cursor_position_col\n        buffer.cursor_right(999999)\n        buffer.delete_before_cursor(len(current_line))\n        new_text=self.parenthezized_line(current_line)\n        buffer.insert_text(new_text)\n        if \'\\n\' in new_text:\n            buffer.cursor_up(new_text.count(\'\\n\')//2)\n        buffer.set_cursor_column(cursor_column)\n\n    def buffer_is_parenthesized_at_cursor(self,buffer)->bool:\n        #Returns true if there are visible parenthesizer comments above and below the buffer\'s cursor\n        #Check for comments with the right markers above and below that line\n        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)\n        return self.is_parenthesized_at_line(buffer.document.text,buffer.document.cursor_position_row)\n\n    def buffer_refresh_parenthesization(self,buffer)->None:\n        if self.buffer_is_parenthesized_at_cursor(buffer):\n            #Refresh the parenthesization\n            self.unparenthesize_buffer(buffer)\n            self.parenthesize_buffer(buffer)\n        else:\n            pass\n\n    def buffer_toggle_parenthesization(self,buffer)->None:\n        if self.buffer_is_parenthesized_at_cursor(buffer):\n            self.unparenthesize_buffer(buffer)\n        else:\n            self.parenthesize_buffer(buffer)\n\n\n        \ncommented_parenthesizer_automator=CommentedParenthesizerAutomator()\n\n\n_global_event=None\ndef post_handler(binding:_Binding,event:KeyPressEvent,old_document:Document):\n    #This function should be very lightweight, as it\'s called once after EVERY keystroke in the editor (including ones like control+e which don\'t even modify the text)\n    #I made sure that post_handler is called on every keystroke by modifying input_processor.py and replacing key_bindings.py\'s \'@handle\' with a lambda that also ensures this function is called\n    #Get the pressed char\n    char=event.data\n\n    assert isinstance(char,str)\n\n    #Get information about old_document\n    old_text         = old_document.text\n    old_current_line = old_document.current_line\n    old_after_line   = old_document.current_line_after_cursor\n    old_before_line  = old_document.current_line_before_cursor\n    old_before       = old_document.text_before_cursor\n    old_after        = old_document.text_after_cursor\n    old_above_line   = line_above_document(old_document)\n\n    #Get the buffer and related information\n    buffer=event.cli.current_buffer\n    text=document=current_line=after_line=before_line=before=after=above_line=None\n    def refresh_strings_from_buffer():\n        nonlocal text,document,current_line,after_line,before_line,before,after,above_line\n        document     = buffer.document\n        text         = buffer.document.text\n        current_line = buffer.document.current_line\n        after_line   = buffer.document.current_line_after_cursor\n        before_line  = buffer.document.current_line_before_cursor\n        before       = buffer.document.text_before_cursor\n        after        = buffer.document.text_after_cursor\n        above_line   = line_above(buffer)\n    refresh_strings_from_buffer()\n\n    if text!=old_text:\n        commented_parenthesizer_automator.buffer_refresh_parenthesization(buffer)#This is optimized and only makes changes if nessecary\n\n\ndef handle_character(buffer,char,event=None):\n    #This function should receive all VISIBLE keystrokes (such as \'a\',\'b\',\'c\',\'1\',\'2\',\'3\' but also \' \',\'\\n\',\'.\',\'$\' etc)\n    #But it should NOT receive things like backspace, backtab, or other control keys that aren\'t actually part of the code\n    #If this function returns true it overrides the other code that handles that specific char\n    from rp import is_namespaceable\n    global last_pressed_dash\n    import rp.r_iterm_comm as ric\n    import tokenize\n\n    if False:#No microcompletions\n        buffer.insert_text(char)\n        return True\n\n    text=current_line=after_line=before_line=before=after=above_line=before_tokens=after_tokens=before_line_ends_with_number=None\n    def refresh_strings_from_buffer():\n        nonlocal text,current_line,after_line,before_line,before,after,above_line,before_tokens,after_tokens,before_line_ends_with_number\n        text                = buffer.document.text\n        current_line        = buffer.document.current_line\n        after_line          = buffer.document.current_line_after_cursor\n        before_line         = buffer.document.current_line_before_cursor\n        before              = buffer.document.text_before_cursor\n        after               = buffer.document.text_after_cursor\n        above_line          = line_above(buffer)\n\n        after_tokens        = split_python_tokens(after_line ,True)\n        before_tokens       = split_python_tokens(before_line,True)\n        before_line_ends_with_number=before_tokens and before_tokens[-1].type==tokenize.NUMBER\n    refresh_strings_from_buffer()\n\n    if char==\'\\n\' and after_line in [\'"\',"\'"]:\n        #Even if (especially if) we\'re in a string...\n        #On \\n:  ‹\'|\'›  -/->  ‹\'\\n|\'›\n        #On \\n:  ‹\'|\'›  --->  ‹\'\'\\n|›\n        buffer.cursor_right(100)\n\n    if char==\' \' and meta_pressed(clear=False):\n        buffer.insert_text(\' \')#This should always work\n        meta_pressed(clear=True)\n        return True\n\n    if char==\'v\' and meta_pressed(clear=True):\n        edit_event_buffer_in_vim(event)\n        return True\n\n    if char==\'r\' and meta_pressed(clear=True):\n        run_arbitrary_code_without_destroying_buffer(repr(text),event,put_in_history=True)#To include or not to include...which one??\n        buffer.document=Document(\'\',0,buffer.document.selection)\n        return True\n\n    if char==\'q\' and meta_pressed(clear=True):\n        #Delete all\n        #Equivalent to \\da\n        buffer.document=Document(\'\',0,buffer.document.selection)\n        return True\n\n    if char==\'w\' and meta_pressed(clear=True):\n        handle_run_cell(event)\n        return True\n\n    in_string_or_comment=get_if_in_string_or_comment(before_line,after_line,buffer)\n    if char not in \'\\n\\\'\\"\' and in_string_or_comment:\n        buffer.insert_text(char)#Don\'t do anything but write the damn character lol\n        return True\n\n    if last_pressed_dash and char in \'-=\' and not in_string_or_comment and not after_line.strip() and re.fullmatch(r\' *[a-zA-Z_0-9]+\\_\',before_line):\n        buffer.delete_before_cursor()\n        buffer.insert_text(\'-\')#Trigger \'--\' or \'-=\' indirectly by replacing the \'_\' with a \'-\' where applicable (aka NOT if the user made the _ by typing _ with the shift key. This is one of the rare instances where stateful is OK)\n    if char==\'-\':last_pressed_dash=True\n    else:        last_pressed_dash=False\n\n        \n    if char in \'/\\n\' and before_line.endswith(\'?/\') and not after:\n        #This rule is a HACK to preserve the functionality of ?/\n        #Without this rule, pressing enter after ?/ will turn it into ??\n        if char==\'\\n\':\n            return False\n        #if char==\'/\':\n        #    #Actually this rule isn\'t nessecary...pressing enter on // turns it into ??\n        #    buffer.delete_before_cursor()\n        #    buffer.insert_text(\'?\')\n        #    return True\n    if char==\'/\' and before.endswith(\'???\') and not after:\n        return True\n            \n\n\n\n    if not in_string_or_comment:#This is just for visual purposes, so I can put the lines in a block of code and document ,after_line)it\n      #region ..= and =.. in-place operators\n        if char==\'.\' and before_line.endswith(\'=.\') and not \' \' in before_line.strip() and before_line.count(\'=.\')==1 and not before_line.endswith(\'==.\') and not before_line.endswith(\'!=.\'):\n            #The \'=..\' in-place operator\n            #On \'.\': right=.| --> right=|.right\n            #`right=..cursor` —>  `right=cursor.right`\n            varname=before_line[:-2]\n            varname=varname.strip()\n            buffer.insert_text(varname)\n            buffer.cursor_left(len(varname)+1)\n            return True\n        if char==\'=\' and before_line.endswith(\'..\'):\n            #The \'..=\' in-place operator\n            #On \'=\': cursor..| --> cursor.|=cursor\n            #`cursor..=right` —>  `cursor.right=cursor`\n            varname=before_line[:-2]\n            varname=varname.strip()\n            buffer.delete_before_cursor()\n            buffer.insert_text(varname)\n            buffer.cursor_left(len(varname))\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'.=\')\n            buffer.cursor_left()\n            return True\n      #endregion\n\n      #region pluralize list comprehension (must come before space stoppers)\n        if char==\' \' and (starts_with_any(after_line,\']\',\':\')) and re.fullmatch(r\'((.* for)|(for)) [a-zA-Z_0-9]+ in \',before_line):\n            #[thing(index) for index in |] --->  [thing(index) for index in indices|] #TO BE IMPROVED LATER. THIS IS JUST A PROOF OF CONCEPT RIGHT NOW.\n            name=before_line.rstrip().split(\' \')[-2]\n            from rp import plural_noun,is_singular_noun_of,is_iterable,is_plural_noun,plural_noun\n            refresh_strings_from_buffer()\n            candidates=set(list(ric.globa)) | set(split_python_tokens(before+after))\n            plural_name=plural_noun(name)\n            if plural_name in candidates:#If this succeeds it makes the next loop a lot faster...\n                buffer.insert_text(plural_name)\n                return True\n            for candidate in candidates:#Search all existing known names looking for a plural match to the iterator variable\n                focus_name=name\n                if not is_namespaceable(candidate) or candidate[:2]!=name[:2]:\n                    continue#Speed things up\n                if is_singular_noun_of(name,candidate) and is_plural_noun(candidate):\n                    buffer.insert_text(plural_noun(candidate))\n                    return True\n            if \'\\n\' not in text and after==\']\' and before.count(\'[\')==1:\n                #[x for x in |] --->  [x for x in ans|]\n                buffer.insert_text(\'ans\')\n                return True\n            # buffer.insert_text(plural_noun(name))#If we can\'t find a name that fits, and \'ans\' isn\'t an option, just choose a plural name\n            # return True \n        keywords={\'async\',\'await\',\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\'}\n        from rp import is_namespaceable\n        if char==\' \' and (before_line==\'for \' or before_line.endswith(\' for \')) and starts_with_any(after_line,\' in]\',\'in)\',\'in}\',\' in \'):\n            before_tokens=split_python_tokens(before_line)[:-1]#Get rid of the \'for\'\n            # dont_use_these_tokens=set(split_python_tokens(text))-set(before_tokens)\n            for token in reversed(before_tokens):\n                # if token==\'[\':#Technically correct but returns false negatives\n                    # break#Welp..we failed to find a unique new variable...\n                if is_namespaceable(token) and token not in keywords:\n                    if token not in ric.globa:# and token not in dont_use_these_tokens:\n                        buffer.insert_text(token)\n                        buffer.cursor_right(len(\' in\'))\n                        if not after_line.startswith(\' in \'):\n                            buffer.insert_text(\' \')\n                        return True\n        if char==\' \' and re.fullmatch(r\' *[a-zA-Z_0-9]+\\(\',before_line) and after_line==\')\':\n            for line in before.splitlines()[::-1][1:]:\n                if starts_with_any(line.lstrip(),*\'for if while elif\'.split()):\n                    tokens=split_python_tokens(line.strip())\n                    tokens=[token for token in tokens if is_namespaceable(token) and not token in keywords]\n                    if tokens:\n                        focus_name=tokens[0]\n                        #ON SPACE:\n                        #for focus_name in ans:\n                        #   print(|)\n                        #--->\n                        #for focus_name in ans:\n                        #   print(focus_name,)\n                        buffer.insert_text(focus_name+\',\')\n                        return True\n      #endregion\n\n      #region stopping double-spaces after \'or\', \'and\' etc\n\n        if char==\' \': \n            #TODO Possibly replace the below with something more useful than \'_\', such as the focus in the for loop or ans if there is no focus or perhaps \'True\'\n            if re.fullmatch(r\' *for \',before_line) and re.fullmatch(r\' in : *\',after_line):\n                #`    for | in :  `  --->  `    for _ in |:  `\n                buffer.insert_text(\'_\')\n                buffer.cursor_right(len(\' in \'))\n                refresh_strings_from_buffer()\n            if re.fullmatch(r\' *(if|while) \',before_line) and re.fullmatch(r\': *\',after_line):\n                #`    if |:  `  --->  `    if _ |:  `   --->   `    if _:|  `\n                #`    while |:  `  --->  `    while _ |:  `  --->  `    while _:|  `\n                buffer.insert_text(\'_ \')\n                refresh_strings_from_buffer()\n\n        if char==\' \':\n            partial_correctables=\'or and not for if\'.split(\' \')\n            if before_line.endswith(\']\') and after_line.startswith(\']\'):\n                #  [[[]|]]  --->  [[[]]|]\n                buffer.cursor_right()\n                return True\n            if before_line.endswith(\'[\') and after_line.startswith(\'[\'):\n                #  [[|[[]]]]  --->  [[[|[]]]]\n                buffer.cursor_right()\n                return True\n            for c in partial_correctables:\n                if before_line.strip().startswith(c+\' \'):\n                    continue#We don\'t want `for f in y:` to be messed up\n                if before_line.endswith(\' \'+c+\' \'+c[1:]):\n                    #Leftovers from having \'a\' --> \'and\' or \'o\'-->\'or\' if you just type out the whole thing\n                    #AKA `a ob`-->`a or b` therefore `a or b`-->`a or rb` which is bad...this fixes that:\n                    #  `a or r|` --> `a or |`\n                    #  `a and nd|` --> `a and |`\n                    buffer.delete_before_cursor(len(\' \'+c[1:]))\n                    refresh_strings_from_buffer()\n                    if c in \'for\':\n                        buffer.insert_text(\' \')\n                        return True#[x for or| in] --->  [x for | in]\n                elif before_line.endswith(\' \'+c+\' \'):\n                    return True#Do nothing\n            full_correctables=\'return else or and not in\'.split(\' \')\n            for c in full_correctables:\n                if c==\'in\' and not starts_with_any(after_line,\')\',\'}\',\']\'):\n                    #This block is NOT used for list comprehension aka [x for x in in|]--->[x for x in |]\n                    #It IS used for \'nin\', which stands for \'not in\'\n                    if before_line.endswith(\' \'+c+\' \'+c):\n                        if before_line.lstrip().startswith(\'for \'):\n                            buffer.delete_before_cursor(len(\'in\'))\n                            return True\n                        else:\n                            buffer.delete_before_cursor(len(\'in in\'))\n                            buffer.insert_text(\'not in \')\n                            return True\n                if before_line.endswith(\' \'+c+\' \'+c):\n                    #`x if y else else|` ---> `x if y else |`\n                    buffer.delete_before_cursor(len(\' \'+c))\n                    refresh_strings_from_buffer()\n                # elif before_line.endswith(\' \'+c+\' \'):\n                    # return True#Do nothing\n            if before_line.endswith(\' if \') and starts_with_any(after_line,\'}\',\')\',\']\'):\n                #[x for x in y if |] ---> [x for x in y if |]\n                return True\n            for keyword in \'or and not in is\'.split():\n                if before_line.endswith(\' else \'+keyword):\n                    #`a=x ify and z w` ---> `a=x if y and z else w` \n                    buffer.delete_before_cursor(len(\' \'+keyword))\n                    buffer.cursor_left(len(\' else\'))\n                    buffer.insert_text(\' \'+keyword+\' \')\n                    return True\n            for keyword in \'not in\'.split():\n                if before_line.endswith(keyword) and re.fullmatch(r\' else(([^a-zA-Z0-9_].*)|())\',after_line):\n                    #a=x if not| else z   --->   a=x if not | else z\n                    buffer.insert_text(\' \')\n                    return True\n            if endswithany(before_line,\' in \',\' is \'):\n                #on space: `x in y |` --> `x in y |`\n                #on space: `x is y |` --> `x is y |`\n                if after_line==\':\':\n                    buffer.insert_text(\'ans\')\n                return True\n        if n_makes_in_and_s_makes_is and char==\'t\':\n            if before_line.endswith(\' in o\'):\n                #Because \'n\' --> \'in\', \'not\'-->\'in ot\'\n                #On t: \' in o|\'-->\' not \'\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'not \')\n                return True\n      #endregion\n\n      #region spacebar to commas in lists\n        #TODO: Make this much more general (beyond just lists and numbers) to move it out of the \'misc tweaks\' section\n        if char==\' \':\n            if after_line.startswith(\']\') and re.fullmatch(r\' *[0-9]+\\-? *(\\, *[0-9]+\\-? *)*\\[ *(([^a-zA-Z\\)\\]].*)|())\',before_line[::-1]):#If NOT used as an index but is a list of number literals)\n                # if char==\' \' and after_line.startswith(\']\') and re.fullmatch(r\' *[0-9]+\\-? *(\\, *[0-9]+\\-? *)*\\[ *((nruter)|[\\:\\,\\=]|(dleiy)|(ni )).*\',before_line[::-1]):#<---- Possible alternative regex to the above\n                #When creating list literals with numbers and hitting space, don\'t add a space; add a comma.\n                #This helps when copying down lists of numbers from a piece of paper onto my mac (no numpad) without having to look up to put my fingers back on the right numbers (moving them back from the comma key, which I can\'t use my thumb for)\n                buffer.insert_text(\',\')\n                return True\n            if after_line.startswith(\']]\'):\n                if before_line.endswith(\',\'):\n                    #On space:  [[1,2,3,|]]  --->   [[1,2,3],[|]]\n                    buffer.delete_before_cursor()\n                    buffer.cursor_right()\n                    buffer.insert_text(\',[]\')\n                    buffer.cursor_left()\n                    return True\n                if after_line.startswith(\']]]\') and before_line.endswith(\',[\'):\n                    #On space: [[[1,2,3],[|]]]  --->   [[[1,2,3]],[[|]]]\n                    #(and then by other completions...)   on space:  [[[1,2,3]],[[|]]] -->  [[[1,2,3]],[|]]\n                    buffer.delete_before_cursor(2)\n                    buffer.delete()\n                    buffer.cursor_right()\n                    # n=re.match(r\'^\\]*\',after_line).span()[1]#How many ]\'s does the after_line start with\n                    n=re.match(r\'^\\[\\,\\]*\',before_line[::-1]).span()[1]-1\n                    # assert n>=3#Because in the \'if\' condition, after_line.startswith(\']]]\')\n                    # n-=1\n                    buffer.insert_text(\',\'+n*\'[\'+\']\'*n)\n                    buffer.cursor_left(n)\n                    return True\n        if char==\' \' and before_line.endswith(\'[[\') and after_line.startswith(\']]\'):\n            #On space: [[[|]]]  -->  [[|]]\n            buffer.delete_before_cursor()\n            buffer.delete()\n            return True\n        if char in \' \\n*.+[)},\' and re.fullmatch(r\'.*\\[.* +\',before_line) and after_line.startswith(\']\'):#All the valid characters that might commonly follow a list literal\n            #On space or enter key: [1,2,3, |]      --->   [1,2,3]|\n            #On space or enter key: [1,2,3,     |]  --->   [1,2,3]|\n            #The space between the \'3,\' and the \']\' is important\n            #For all keys except the space key, proceed as usual (don\'t cancel further completions)\n            number_of_spaces=len(before_line)-len(before_line.rstrip())\n            buffer.delete_before_cursor(number_of_spaces)\n            if before_line.rstrip().endswith(\',\'):\n                buffer.delete_before_cursor()#Delete the comma\n            buffer.cursor_right()\n            refresh_strings_from_buffer()\n            if char==\' \':return True#For all keys except the space key, proceed as usual (don\'t cancel further completions)\n\n      #endregion\n\n      #region\n        if char==\'-\':\n            if re.fullmatch(r\'.* for [a-zA-Z_0-9]+\',before_line):\n                #[x for y| in]  --->  [x for y_| in]\n                buffer.insert_text(\'_\')\n                return True\n            if before_line.lstrip().startswith(\'def \') and after_line.strip()==\'):\':\n                try:\n                    if before_tokens[-2].string==\',\':\n                        #ON -: def f(x,y|):  -->  def f(x,y_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-1].string==\',\':\n                        #ON -: def f(x,|):  -->  def f(x,_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-3].string==\'def\':\n                        #ON -: def f(|):  -->  def f(_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-4].string==\'def\':\n                        #ON -: def f(x|):  -->  def f(x,y_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                except IndexError:\n                    #Probably an error getting some index of before_tokens. This is perfectly ok...just ignore it.\n                    pass\n      #endregion\n\n      #region\n        # if ,before_line_ends_with_number:\n        if char==\' \' and before_line_ends_with_number and after_line.startswith(\']\') and len(before_tokens)>=2 and before_tokens[-2].string==\'[\':\n            #ON Space:\n            # a[0|]  --->  a[0][|]\n            buffer.cursor_right()\n            buffer.insert_text(\'[]\')\n            buffer.cursor_left()\n            return True\n        if before_line.endswith(\'[\') and after_line.startswith(\']\'):\n            if char in \'+&^%@<>/,|\' or char==\'=\' and not (len(before_tokens)>=2 and before_tokens[-2].type==tokenize.NAME):#This last part about \'=\' being special is so we can have the \'[=\' operator\n                #Intentionally did not include any \'*.!~-\' as they can be unary operators that go before things. + is also technically a unary operator because \'+5\' is a valid int, but who even does that...\n                #ON +:\n                # a[0][|]  --->  a[0]+|\n                buffer.delete()\n                buffer.delete_before_cursor()\n                buffer.insert_text(char)\n                return True\n      #endregion\n\n      #region\n        # EXAMPLES FOR THIS SECTION:\n        # {a:5}..a\\n   —>   {a:5}[\'a\'] \n        # {a:5}..a..b..c\\n   —>   {a:5}[‘a’][‘b’][‘c’]\n        # {a:5}..a..b..c+5\\n   —>   {a:5}[‘a’][‘b’][‘c’]+5\n        # L..0\\n   —>   L[0]\\n\n        # L.123+    —>  L[123]+\n        # L..123+   —>  L[\'123\']+\n        # L.0.1.2\\n   —>  L[0][1][2]\n        # L.-1\\n    —>   L[-1]\\n\n        # L.1;5\\n  —>  L[1:5]\\n\n        # L.1;5.0\\n   —>  L[1:5][0]\\n\n        # L.0;1.0;;1.-1.0;-1.0;;-1.1;\\n   —>   L[1:1][0::1][-1][0:-1][0::-1][1:]   (first is len 26, second is len33  — so this saved 7 keystrokes)\n        # L.;;3\\n —>  L[::3]\\n\n        # image.;,;,0  —>  image[:,:,0]\n        # “f f x  .y”  —>  f(f(x).y)\n        # “f f x  .5”  —>  f(f(x),.5)\n        # “L.4[5”   —>   L[4][5]\n        # “f f x  .y.0.1..a”   —>  f(f(x).y[0][1][‘a’])\n        # “f f x  .5”  —>   f(f(x),.5)   BUT    “f f x  .a”  —>   f(f(x).a)    AND NOT  “f f x  .a”  —>   f(f(x)[‘a’])\n        # “d f a 8b 8c”   —>  def f(a,*b,**c):\n        # “i.;.;.0”  —>  i[:,:,0]\n        # “i.;,;,0”  —>  i[:,:,0]\n        if before_line.endswith(\').\') and char.isnumeric():\n            #On pressing 5: f(x().|)  --->  f(x(),.5|)  (To conuter a side-effect of one of the next blocks)\n            #“f f x  .y”  —>  f(f(x).y)\n            #“f f x  .5”  —>  f(f(x),.5)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\',.\')\n            refresh_strings_from_buffer()\n        if \'..\' in before_line:\n            i=before_line.rfind(\'..\')\n            key=before_line[i+2:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"\n            if key and not key.isnumeric():\n                do_number_key=key.isnumeric() and not char.isnumeric()#Do a    a..1   --->   a[1] completion  (no quotes)\n                do_string_key=is_namespaceable(key) and key and not is_namespaceable(key+char)#Do a    a..b   --->   a[\'b\'] completion (with quotes)\n                assert not do_number_key or not do_string_key,\'can only do one or the other. this is internal logic this should never break. key=\'+repr(key)\n                if do_number_key or do_string_key:\n                    #Javascript-like x.y ==== x[\'y\'] notation by using \'..\' instead of \'.\'\n                    #Example: On \'+\' (which isn\'t namespaceable):   ..stuff|   --->   ..[\'stuff\']+|\n                    q="\'"*do_string_key\n                    buffer.insert_text(q+"]")\n                    l=len(before_line)-i#Amount we have to move left#Ignore the shift caused by adding "\']" because of buffer.delete_before_cursor(2)\n                    buffer.cursor_left(l-do_number_key)\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text("["+q)\n                    buffer.cursor_right(l-do_number_key)\n        if \'.\' in before_line and char not in \',:-\':\n            i=before_line.rfind(\'.\')\n            key=before_line[i+1:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"\n            before_key=before_line[:i]\n            #someList.5   --->   someList[5]\n            numeric_key_candidate=key.replace(\':\',\'\').replace(\',\',\'\').replace(\'-\',\'\')\n            do_number_key=numeric_key_candidate.isnumeric() and not (char.isnumeric() or (char==\'-\' and not (key and key[-1]==\'-\')))#Do a    a..1   --->   a[1] completion  (no quotes)\n            if char==\';\' and (do_number_key or not numeric_key_candidate):\n                buffer.insert_text(\':\')\n                return True\n            if char==\'.\' and key and not numeric_key_candidate:\n                #Allow for "i.;.;.0"   --->   "i.;,;,0"  -->  "i[:,:,0]"  (have to worry about one less character (can forget about the comma in this particular case. The alternative is to give an invalid completion aka \'i.;.;.0\'  -->  \'i.:[:,0]\'))\n                buffer.insert_text(\',\')\n                return True\n            if do_number_key and numeric_key_candidate and not (not before_key or endswithany(before_key,\',\')) and not ends_with_number(before_key):\n                buffer.insert_text("]")\n                l=len(before_line)-i\n                buffer.cursor_left(l)\n                buffer.delete_before_cursor(1)\n                buffer.insert_text("[")\n                buffer.cursor_right(l)\n            elif char in \'.\\n-+*&^%#/()[]{}@<>=\':\n                refresh_strings_from_buffer()\n               #match=re.match(r\'[0-9\\,\\:]+\\-?\\.[^= ]\',before_line[::-1])\n               #match=re.match(r\'((([0-9]+\\-?)|\\:)(\\,([0-9]+\\-?)|\\:)*)\\-?\\.[^= ]\',before_line[::-1])\n                match=re.match(r\'(((([0-9]+\\-?)|\\:)*)(\\,(([0-9]+\\-?)|\\:)*)*)\\.[^= ]\',before_line[::-1])\n                bad_match=bool(re.match(r\'[0-9]+\\.[0-9]+\'         ,before_line[::-1]))\\\n                  and not bool(re.match(r\'[0-9]+\\.[0-9]+\\-?[a-zA-Z_\\,]\',before_line[::-1]))#Not part of a variale name but we still have before_line ending with something like 34234.32423\n                bad_match=bad_match or\\\n                          bool(re.match(r\'[0-9]+\\.[0-9]*\\-\'       ,before_line[::-1]))\n                bad_match=bad_match or before_line.endswith(\'.\')\n                if match and not bad_match and not re.fullmatch(r\'.*[^\\)\\]a-zA-Z_\\\'\\"][0-9]+\',before_line) and\\\n                             not re.fullmatch(r\'.*[0-9]+\\,\\w*\',before_line):#To fix ‹[.5,.›  -/->  ‹[[.5,].|]›\n                    double_dot=bool(re.match(r\'[0123456789\\,\\:]+\\.\\.\',before_line[::-1]))\n                    start,end=match.span()#Number of digits\n                    assert start==0\n                    assert end>1\n                    buffer.cursor_left(end)\n                    buffer.delete_before_cursor()\n                    if double_dot:buffer.delete_before_cursor()#;print(\'\\n\',end)# x.1.2..3.  -->  x[1][2][\'3\'].;\n                    else:pass#x.1.2.3.4.5.   --->   x[1][2][3][4][5].\n                    buffer.insert_text(\'[\')\n                    if double_dot:buffer.insert_text("\'")\n                    buffer.cursor_right(end)\n                    if double_dot:buffer.insert_text("\'")\n                    buffer.insert_text(\']\')\n                    refresh_strings_from_buffer()\n\n        if char in \'&^+/%|\' and before_line.endswith(\',\') and not get_if_in_string_or_comment(before_line,after_line,buffer):#Not \'-\' because \'-\' can be a prefix for a number\n            #Note: < and > purposely excluded because they\'re commands to swap arguments etc\n            #On +: f(x,y,z,|)  --->  f(x,y,z+|)\n            #“f f x  .y”  —>  f(f(x).y)\n            #“f f x  .5”  —>  f(f(x),.5)\n            buffer.delete_before_cursor()\n            # return False#We should keep going if there are any other completions that could have been trigggered by this\n        if char.isalpha() and before_line.endswith(\',.\'):\n            #On y: f(x,.|)  --->  f(x.y|)\n            buffer.cursor_left()\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n        if char==\',\' and before_line.endswith(\'(\') and after_line.startswith(\')\'):\n            #Spacebar makes f(g(|)) --> f(g,)\n            #So, on \',\': f(g(|))  -->  f(g(),)\n            buffer.cursor_right()\n        if char.isalpha() and not after_line.strip() and before_line.lstrip()==\'2\':\n            #Don\'t need to press shift to make the @ decorator symbol\n            #Example:\n            #\'2memoized\\ndf \' --->   \'@memoized\\ndef f():\'\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'@\')\n        if char.isalpha() and before_line.endswith(\'=.\'):\n            #fixed the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key\n            # On press \'w\' for example:\n            # self=.|   --->   self.w|=  --->  self.w|=w   (and then type foo to get self.foo=foo)\n            buffer.delete_before_cursor()\n            buffer.cursor_left()\n            buffer.insert_text(\'.\')\n            refresh_strings_from_buffer()\n\n      #endregion\n\n      #region async and await\n        if char==\' \' and before_line.lstrip in (\'async\',\'await\') and not after_line.strip():\n            buffer.insert_text(\' \')\n            return True\n      #endregion\n\n\n      #region misc tweaks\n\n        if char==\'\\n\' and not after_line and before_line.endswith(\':\'):\n            buffer.insert_text(\'\\n\'+get_indent(before_line)+\'    \')\n            return True\n        if char==\'=\' and before_line.endswith(\'.\') and after_line.strip():\n            #`if x.=5`   -->  `if x>=5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'>\')\n            refresh_strings_from_buffer()\n        if char==\'=\' and before_line.endswith(\',\') and after_line.strip():\n            #NOTE This is a stylistic, heuristic choice. Technically, \'if x,=y:\' is valid syntax. However, I find that I rarely ever do that. On the flip side, I do `if x<=y` much more often.\n            #`if x,=5`   -->  `if x<=5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'<\')\n            refresh_strings_from_buffer()\n\n        if char==\'\\n\':\n            #A tweak meant to make ]= and )= operators betters\n            if re.fullmatch(r\'[^\\=]+\\=[^\\=]+\',before_line) and \\\n               after_line.startswith(\'(\') or after_line.startswith(\'[\'):\n              #We\'re on the right-hand-side of some assignment...  \n                buffer.cursor_right(999999)#`i)=5\\n`  -/->  `i=i\\n|(5)` INSTEAD `i)=5\\n`  --->  `i=i(5)\\n|`\n            refresh_strings_from_buffer()\n        if char==\' \' and re.fullmatch(r\'.*[\\,\\(](and|or|not|nin|in|is)\',before_line):\n            #With function f: `f x and y` -/->  `f(x,and,y)\n            #With function f: `f x and y` --->  `f(x and y)\n            #Same goes for and,or,not,in,is,etc...\n            for kw in \'and or not nin in is\'.split():\n                if before_line.endswith(kw):\n                    if kw != \'not\':\n                        buffer.cursor_left(len(kw))\n                        refresh_strings_from_buffer()\n                        if not before_line.endswith(\'(\'):\n                            buffer.delete_before_cursor()\n                            buffer.insert_text(\' \')\n                        buffer.cursor_right(len(kw))\n                    buffer.insert_text(\' \')\n                    if kw==\'nin\':\n                        buffer.delete_before_cursor(len(\'nin \'))\n                        buffer.insert_text(\'not in \')\n                    if kw==\'isnt\':\n                        buffer.delete_before_cursor(len(\'isnt \'))\n                        buffer.insert_text(\'is not \')\n                    return True\n        if char==\' \' and re.fullmatch(r\'.*[^\\w]is nt\',before_line):\n            #isn\'t ---> is not \n            #`x isnt y`  -->  `x is not y|`\n            buffer.delete_before_cursor(len(\'is nt\'))\n            buffer.insert_text(\'is not \')\n            return True\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_\':\n            if not after:\n                if before==\'5\':\n                    #`5edit` --->  `%edit` #For ipython magics, turn 5 into % if at the beginning of a line\n                    buffer.delete_before_cursor()\n                    buffer.insert_text(\'%\')\n                elif before==\'55\':\n                    #`55edit` --->  `%%edit` #For ipython magics, turn 5 into % if at the beginning of a line\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text(\'%%\')\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM[({_\' and re.fullmatch(r\'.*[^a-zA-Z_0-9]1\',before_line):\n            if char!=\'j\':#1j is a valid literal. Don\'t destroy it.\n                #Interperet ! or 1 as \'not \'\n                #`x f1y z` --->  `x if not y else z`\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'not \')\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_({[\\\'"\':\n            #8 to * in function calls and lists etc\n            if re.fullmatch(r\'.*[\\(\\[\\{\\,] *8\',before_line):\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'*\')\n                refresh_strings_from_buffer()\n            elif re.fullmatch(r\'.*[\\(\\[\\{\\,] *88\',before_line):\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\'**\')\n                refresh_strings_from_buffer()\n        if char in \'"\\\'\' and re.fullmatch(r\'.*\\*\',before_line) and re.fullmatch(r\'[\\]\\}\\)]\',after_line):\n            #auto Double quotes. Dont know where the other part in this code is and I\'ll make this more coherent later.\n            buffer.insert_text(char)\n            buffer.cursor_left()\n            buffer.insert_text(char)\n            return True\n        if char==\'-\':\n            if re.fullmatch(r\'( )*for [a-zA-Z_]+\',before_line):\n                #`   for abc|`  --->   `   for abc_|`\n                buffer.insert_text(\'_\')\n                return True\n            if re.fullmatch(r\' *(from |import ).*\',before_line):\n                #import thingy-5 as stuff-6   --->  import thingy_5 as stuff_6\n                buffer.insert_text(\'_\')#`from itertools import product as cartesian-` should do _ instead of -\n                return True\n        if char==\'\\n\' and \'\\n\' not in before and \'\\n\' in after:\n            #Fixing a bug in a hacky way: Don\'t enter commands if our cursor is on the first character and we\'re multi-line\n            buffer.insert_text(\'\\n\')\n            return True\n        if char==\'\\n\' and text==\'ans[]\' and after_line==\']\':\n            #THIS IS BROKEN\n            #TODO: Why does this never get triggered?\n            #Space -->  ans[|]  -->  ans\\n   (when we just want to see the answer but hitting space tries to index an array)\n            buffer.delete()\n            buffer.delete_before_cursor()\n        if char in \'.\\n\' and re.fullmatch(r\'[a-zA-Z_]+\\=(\\/)+\',current_line) and after_line==\'\':\n            #On hitting enter, `torch=/`  -->  `torch?`\n            #On hitting enter, `torch=//`  -->  `torch??`\n            #On hitting enter, `torch=///`  -->  `torch???`\n            #On hitting enter, `torch=////`  -->  `torch????`\n            #Because `import torch\\n=/\\n` shows help for torch\n            # print("AOSD")\n            I=0\n            for c in reversed(before_line):\n                if c!=\'/\':\n                    break\n                I+=1\n\n            buffer.delete_before_cursor(len(\'=\')+I)\n            buffer.insert_text(\'?\'*I)\n        if char==\'\\n\' and after==\'\' and before_line.endswith(\';\'):\n            #Insert a new line if we end with \';\' to make life easier\n            #on \'\\n\': `single_line_stuff();|`  --->  `single_line_stuff()\\n|`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'\\n\')\n            return True\n        if (char!=\'=\' and re.fullmatch(r\'.*\\=\',before_line) and not re.fullmatch(r\'.*\\=\\=\',before_line) and starts_with_any(after_line,\']\') and not (len(after_line.strip())==2 and after_line.strip()[1]==\':\')) and not endswithany(before_line,\'==\',\'1=\',\'!=\'):\n            #On a letter or number \'q\':  i[w=|]  -->  i[w]=q\n            if before_line.endswith(\'>=\') or before_line.endswith(\'<=\'):\n                buffer.insert_text(char)\n                return\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(\'=\')\n        any_keyword_regex=r\'False|class|finally|is|return|None|continue|for|lambda|try|True|def|from|nonlocal|while|and|del|global|not|with|as|elif|if|or|yield|assert|else|import|pass|break|except|in|raise\'\n        if char==\'=\' and     re.fullmatch(r\'.*([^\\+\\-\\(\\[\\,\\/\\@\\%\\^\\&\\*\\~\\<\\>\\=]|(([a-zA-Z_0-9]*) +))1\',before_line) \\\n                     and not re.fullmatch(r\'.*(\'+any_keyword_regex+r\') +1\',before_line)\\\n                     and not re.fullmatch(r\'\\s*\\w+\',before_line):#we don\'t want h1=5 to turn into h!=5\n            #`x 1=y` -->  \'x !=y\'\n            #TODO: Check to make sure that variable x1 is not in the text, nor is it in globa scope. Then we can be sure we meant to use != instead of ==, and that it is not just a number literal (we don\'t want 21=  to 2!=)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'!=\')\n            return True\n        if char==\' \' and re.fullmatch(r\' *(from |import ).*\',before_line) and after_line.strip().startswith(\'#\'):\n            buffer.insert_text(\' \')#FIX: on space: `import x as y#Comment|` —> `import x as y#Comment|, ` \n            return True\n        for kw in \'return break yield continue assert\'.split():\n            if char==\' \' and not after_line.strip() and re.fullmatch(r" *(for|while|if|with|try|def|elif|else|except|finally)(( .*\\:)|( *\\:)) *("+splinterify(kw)+")",before_line):\n                assert so_far(before_line) in kw,\'Internal logical assertion should never fail\'\n                buffer.insert_text(kw[len(so_far(before_line)):])\n                refresh_strings_from_buffer()\n                #on space: `if x:re`         -->  `if x:return|`  -->  `if x:return |`\n                #on space: `if x:y`          -->  `if x:yield|`   -->  `if x:yield |`\n                #on space: `with x as y:con  -->  `if x:return|`  -->  `if x:continue |`\n        if char==\' \' and re.fullmatch(r\'.*[\\(\\[\\, ]\\-\',before_line):\n            #if -|:   --->   if _ |:\n            #print(-|)   --->   print(_,|)\n            #print(_,-|)   --->   print(_,_|)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            refresh_strings_from_buffer()\n        if char==\'\\n\' \\\n             and before_line.endswith(\'-\')\\\n             and (re.fullmatch(r\' *[^\\w\\(\\{].*\',after_line) or not after_line.strip())\\\n             and re.fullmatch(r\'(\\s*)|(.*[^\\w\\s]\\s*\\-)\',before_line):\n            #On \\n:   `[_ and -|]`  --->  `[_ and _]\\n\n            #On \\n:   `x and -`  --->  `x and _\n            #On \\n:   `x+-`  --->  `x+-`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            refresh_strings_from_buffer()\n        if char==\' \' and re.fullmatch(\' *for len\',before_line) and re.fullmatch(\' in : *\',after_line):\n            #`   for len| in :`  --->  `   for _ in range(len(|)):`\n            buffer.delete_before_cursor(len(\'len\'))\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in \'))\n            buffer.insert_text(\'range(len())\')\n            buffer.cursor_left(len(\'))\'))\n            return True\n        if char in \'p\' and meta_pressed(clear=True):\n            run_arbitrary_code_without_destroying_buffer(\'PREV\',event,put_in_history=True)\n            return True\n        if char in \'n\' and meta_pressed(clear=True):\n            run_arbitrary_code_without_destroying_buffer(\'NEXT\',event,put_in_history=True)\n            return True\n        if char in \'{([])}\' and meta_pressed(clear=False):\n            #When holding alt, add a ) or ] or } to the end of the line, instead of autocompleting it where it is currently\n            #TODO: Add example\n            if char in \'{([\':\n                buffer.insert_text(char)\n                char={\'(\':\')\',\'[\':\']\',\'{\':\'}\'}[char]\n            meta_pressed(clear=True)\n            # l=after_line.find(\':\')#In the event that we\'re in "for x in func(|thing:" we want "for x in func(|thing):" and not "for x in func(|thing:)"\n            l=len(after_line)-1 if after_line.endswith(\':\') else len(after_line)\n            buffer.cursor_right(l)\n            buffer.insert_text(char)\n            buffer.cursor_left(l+1)\n            return True\n        if char==\'=\' and re.fullmatch(r\' *[\\-][\\)\\]\\.\\+\\*\\&\\%\\@\\>\\<\\/\\[\\(]\',before_line):\n            #  `-+=x`  --->     `_+=x|`\n            #`  -)=f`  --->   `  _=f(_|)`\n            # ` -.=x`  --->    ` _=_.x|`\n            buffer.cursor_left()\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            buffer.cursor_right()\n        if char==\'=\' and re.fullmatch(r\' +[\\-]\',before_line):\n            #`if _:\\n\\t-=5`  --->   `if _:\\n\\t_=5|`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n        if char==\'=\' and re.fullmatch(r\' *\\w+\\(\',before_line) and after_line==\')\':\n            #Fixing the (= operator\n            #`f(=x`   --->   `f=f(x|)`\n            buffer.delete_before_cursor()\n            buffer.delete()\n            buffer.insert_text(\'=\')\n            buffer.insert_text(before_line[:-1].strip())\n            buffer.insert_text(\'()\')\n            buffer.cursor_left()\n            return True\n        if char==\'=\' and before_line.endswith(\'-\') and after_line.strip().endswith(\':\'):\n            #   `if -=5`  --->  `if _=5:`  --->  `if _==5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n        if char in \'<>/%^&@+[,*\' and before_line.endswith(\'-\'):\n            #- is treated like _ when an syntax-breaking operator comes after it\n            #`-*5` --->  `_*5`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n\n        if char==\'=\' and not endswithany(before_line,\'=\',\'>\',\'<\') and after_line.strip().endswith(\':\') and not starts_with_any(before_line.strip(),\'def \'):\n            if before_line.endswith(\'(\') and after_line.startswith(\')\'):\n                #On \'=\': `if f(|):` --->  `if f()==|:`\n                buffer.cursor_right()\n            if before_line.endswith(\',\') and starts_with_any(after_line,*\'])}\'):\n                #On \'=\': `if f(x,|):` --->  `if f(x)==|:`\n                #On \'=\': `if l[i,|]:` --->  `if l[i]==|:`\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n            buffer.insert_text(\'==\')\n            return True\n        if char==\'=\' and endswithany(before_line,\'<=\',\'>=\',\'!=\'):\n            #Drag the >= or <= or !=\n            #`if f(x>==y`  --->  `if f(x)>=y`\n            ending=before_line[-2:]\n            buffer.delete_before_cursor(2)\n            buffer.cursor_right()\n            buffer.insert_text(ending)\n            return True\n        if char in \'<>\' and before_line.endswith(char):\n            #Drag > and <\n            #`if f(x>>y`  --->  `if f(x)>y`\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(char)\n            return True\n        if char==\'\\n\' and after_line==\'):\' and before_line.endswith(\',\') and before_line.strip().startswith(\'def \'):\n            #On enter, `def f(x,|):`  --->  `def f(x):\\n\\t|`\n            buffer.delete_before_cursor()\n        if char==\'\\n\' and before_line.lstrip()==\'d\' and not after_line and in_class_func_decl(buffer):\n            buffer.delete_before_cursor()\n            if not \'__init__\' in before:\n                buffer.insert_text(\'def __init__(self):\')\n            else:\n                buffer.insert_text(\'def _(self):\')\n        if char==\'\\n\' and re.fullmatch(r\'\\s*(from|import)\\s.* as \',before_line):\n            buffer.delete_before_cursor(len(\' as \'))\n        if char.isnumeric() and before_line.endswith(\' for \') and after_line.startswith(\' in\'):\n            #[x f4  --->  [x for x in range(4|)]\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in\'))\n            buffer.insert_text(\' range(\'+char+\')\')\n            buffer.cursor_left()\n            return True\n        if char==\' \' and before==\'from \' and after==\' import\':\n            #On space: `from | import`   --->   `for | in :`\n            buffer.delete(len(after))\n            buffer.delete_before_cursor(len(before))\n            buffer.insert_text(\'for  in :\')\n            buffer.cursor_left(len(\' in :\'))\n            return True\n        if char==\' \' and re.fullmatch(r\'.*[^\\w]not\',before_line) and starts_with_any(after_line,*\')]}\'):\n            #Patch: `print x is not y`  -/->  `print(x is not,y|)`\n            #Patch: `print x is not y`  --->  `print(x is not y|)`\n            buffer.insert_text(\' \')\n            return True\n        if char==\';\' and after_line==\')\':\n            #On ‹;›: ‹print(|)›  -->  ‹print();|›\n            buffer.cursor_right(9999)\n            buffer.insert_text(\';\')\n            return True\n        if char==\' \' and before_line.lstrip()==\'for \' and after_line==\' in :\':\n            #`for | in :` --->  `for _| in :` --->  `for _ in |:`\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in \'))\n            return True\n        if char in \'- \\n\' and starts_with_any(before_line.lstrip(),\'nonlocal \',\'global \',\'del \'):\n            #After nonlocal and global,\n            if char==\'-\':\n                #‹nonlocal -var-name› ---> ‹nonlocal _var_name›\n                #  ‹global -var-name› --->   ‹global _var_name›\n                buffer.insert_text(\'_\')\n                return True\n            if char==\' \':\n                if re.fullmatch(r\'.*\\w\',before_line):\n                    # ‹nonlocal x y z› ---> ‹nonlocal x,y,z›\n                    buffer.insert_text(\',\')\n                    return True\n            if char==\'\\n\' and not after_line.strip():\n                #On enter: ‹global x,y,  |›  --->  ‹global x,y\\n|›\n                if before_line.strip().endswith(\',\'):\n                    while before_line.strip().endswith(\',\'):\n                        buffer.delete_before_cursor()\n                        refresh_strings_from_buffer()\n        if char==\'n\' and before_line.endswith(\',not i\'):\n            #On ‹n›: ‹print(x,not i|)›  --->  ‹print(x not in |)›\n            buffer.cursor_left(len(\'not i\'))\n            buffer.delete_before_cursor()\n            buffer.insert_text(\' \')\n            buffer.cursor_right(len(\'not i\'))\n            buffer.insert_text(\'n \')\n            return True\n        if before and char==\'\\n\' and not after and \'print\'.startswith(before) and not before in ric.globa:\n            #If the variable doesn\'t exist and would cause an error,\n            #Replace something like ‹pri› --->  ‹print(ans)›\n            #Pseudo terminal does this by default without this microcompletion, but it\'s tidier to do it here\n            buffer.delete_before_cursor(99999)\n            buffer.insert_text(\'print(ans)\')\n        if (char.isalpha() or char==\'_\') and before in [\'1\',\'11\']:\n            #‹1ls› --> ‹!ls|›\n            #‹11ls› --> ‹!!ls|›\n            refresh_strings_from_buffer()\n            buffer.delete_before_cursor(len(before))\n            buffer.insert_text(\'!\'*len(before))\n        if char in \'?/\' and before_line.endswith(\'(\') and after==\')\' and not \'\\n\' in text:\n            #On /: some_function(|) --> some_function?|\n            #On ?: some_function(|) --> some_function?|\n            buffer.delete_before_cursor()\n            buffer.delete()\n            buffer.insert_text(\'?\')\n            return True\n        if char==\'/\' and endswithany(before_line,\'??\',\'?/\',\'//\') and not \'\\n\' in text:\n            #‹x///› ---> ‹x?/›\n            #‹x////› ---> ‹x??›\n            #‹x/////› ---> ‹x???›\n            #‹x//////› ---> ‹x????›\n            #‹x///////› ---> ‹x?????›\n            if before_line.endswith(\'?/\'):\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'??\')\n            elif before_line.endswith(\'//\'):\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\'?/\')\n            else:\n                buffer.insert_text(\'?\')\n            return True\n        if (char.isalpha() or char==\'_\') and not \'\\n\' in text and not after and before.endswith(\'/.\'):\n            #On ‹c›: ‹np/.|›  --->  ‹np?.c|›\n            #`np/.conv` --->  `np?.conv`\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'?.\')\n        if char in \'.([?+/*@&|\\n\' and before and not \'\\n\' in before and not after and ric.current_candidates and re.fullmatch(r\'[\\w\\.]*[\\ws]+\',before):\n            #`np.lin.cho.geta.`  --->  `np.linalg.cholesky.__getattribute__.|`\n            if not before_line.isnumeric():\n                current=before_line.split(\'.\')[-1]\n                if (False or current not in ric.current_candidates) and (not char==\'\\n\' or \'.\' in before_line):#If enter key, must have some . in the line to do anything\n                    candidate=ric.current_candidates[0]#First autocompletion candidate\n                    if not \'.\' in before:\n                        buffer.delete_before_cursor(99999)\n                    else:\n                        while not before.endswith(\'.\'):\n                            buffer.delete_before_cursor()\n                            refresh_strings_from_buffer()\n                    buffer.insert_text(candidate)\n        if char==\'\\n\' and not \'\\n\' in text and not after and before.endswith(\'/\') and not before_line.endswith(\'?/\'):\n            #On \\n: ‹thing/›     --->  ‹thing?\\n›\n            #On \\n: ‹thing//›    --->  ‹thing??\\n›\n            #On \\n: ‹thing///›   --->  ‹thing???\\n›\n            #On \\n: ‹thing////›  --->  ‹thing????\\n›\n            i=0\n            while before.endswith(\'/\'):\n                i+=1\n                buffer.delete_before_cursor()\n                refresh_strings_from_buffer()\n            buffer.insert_text(\'?\'*i)\n        if char==\'\\n\' and before_line.lstrip() in {\'while \',\'if \'} and after_line.strip()==\':\':\n            buffer.insert_text(\'True\')\n        if char==\';\' and after_line.startswith(\'}\'):\n            #On ‹;›: ‹{x|}›  --->  ‹x:|›\n            buffer.insert_text(\':\')\n            return True\n        if char==\';\' and after_line.startswith(\')\') and before_line.lstrip().startswith(\'def \'):\n            #On ‹;›: ‹def f(x|):›  --->  ‹def f(x:|):›\n            buffer.insert_text(\':\')\n            return True\n\n        if char==\'-\' and before_line.lstrip().startswith(\'def \') and before_line.endswith(\')\') and after_line==\':\':\n            buffer.insert_text(\'->\')\n            return True\n        if (char==\'-\' or char==\'>\') and before_line.lstrip().startswith(\'def \') and before_line.endswith(\')->\') and after_line==\':\':\n            #Do nothing\n            return True\n\n        if before==\'cd\' and not after and char==\' \':\n            #Allow \'cd thing\' to be \'CD thing\'\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'CD \')\n            return True\n\n        if set(after)<=set(\'])}\') and not \'\\n\' in before:\n            if char==\'\\n\' and before.endswith(\'/\'):\n                # On enter:  ans[5/|]  --->  ans[5]?|\n                buffer.delete_before_cursor()\n                buffer.cursor_right(9999)\n                buffer.insert_text(\'?\')\n                return False\n            if char==\'\\n\' and before.endswith(\'//\'):\n                # On enter:  ans[5//|]  --->  ans[5]??|\n                buffer.delete_before_cursor(2)\n                buffer.cursor_right(9999)\n                buffer.insert_text(\'??\')\n                return False\n            # if char==\'/\' and before.endswith(\'//\'):\n            #     # On /:  ans[5//|]  --->  ans[5]???|\n            #     buffer.delete_before_cursor(2)\n            #     buffer.cursor_right(9999)\n            #     buffer.insert_text(\'???\')\n            #     return True\n            if char==\'?\':\n                # On ?:  ans[5|]  --->  ans[5]?|\n                buffer.cursor_right(9999)\n                return False\n                \n        \n        import rp.r_iterm_comm as ric\n        if char in \'./?=\' and text=="" and ric.successful_commands:\n            last_command=ric.successful_commands[-1]\n            if not \'\\n\' in last_command and not \';\' in last_command:\n                if last_command.startswith(\'from \') or last_command.startswith(\'import \'):\n                    #import numpy\n                    #<on .>\n                    #numpy.|\n                    buffer.insert_text(last_command.split()[-1]+char)\n                    if char==\'=\':\n                        buffer.delete_before_cursor()\n                    return True\n                \n\n        # if char==\' \' and after_line.startswith(\')\') and endswithany(before_line,*\'\\\'"\'):\n        #     #print(\'hello\'|) ---> print(\'hello\',|)\n        #     #print(\'hello\'|) -/-> print(\'hello\' |)\n        #     buffer.insert_text(\',\')\n        #     return True\n\n\n\n\n      #endregion\n    return False\n\n\nans_dot_completion_string=None\n\n\ndef original_ptpython_load_python_bindings(python_input):\n    #THIS IS NOT USED RIGHT NOW. But if this was used instead of load_python_bindings, there would be no microcompletions. Mayybe you want that? I certainly dont.\n    """\n    Custom key bindings.\n    """\n    registry = Registry()\n\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n    handle = registry.add_binding\n    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)\n    # handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)\n    has_selection = HasSelection()\n    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)\n\n    @handle(Keys.ControlL)\n    def _(event):\n        """\n        Clear whole screen and render again -- also when the sidebar is visible.\n        """\n        event.cli.renderer.clear()\n\n    @handle(Keys.F2)\n    def _(event):\n        """\n        Show/hide sidebar.\n        """\n        python_input.show_sidebar = not python_input.show_sidebar\n\n    @handle(Keys.F3)\n    def _(event):\n        """\n        Select from the history.\n        """\n        python_input.enter_history(event.cli)\n\n    @handle(Keys.F4)\n    def _(event):\n        """\n        Toggle between Vi and Emacs mode.\n        """\n        python_input.vi_mode = not python_input.vi_mode\n        print(event.cli.vi_state)\n        event.cli.vi_state.input_mode = \'vi-navigation\'\n\n    @handle(Keys.F6)\n    def _(event):\n        """\n        Enable/Disable paste mode.\n        """\n        python_input.paste_mode = not python_input.paste_mode\n\n    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        event.cli.current_buffer.insert_text(\'    \')\n\n    @handle(Keys.ControlJ, filter= ~sidebar_visible & ~has_selection &\n            (ViInsertMode() | EmacsInsertMode()) &\n            HasFocus(DEFAULT_BUFFER) & IsMultiline())\n    def _(event):\n        """\n        Behaviour of the Enter key.\n\n        Auto indent after newline/Enter.\n        (When not in Vi navigaton mode, and when multiline is enabled.)\n        """\n        b = event.current_buffer\n        empty_lines_required = python_input.accept_input_on_enter or 10000\n\n        def at_the_end(b):\n            """ we consider the cursor at the end when there is no text after\n            the cursor, or only whitespace. """\n            text = b.document.text_after_cursor\n            return text == \'\' or (text.isspace() and not \'\\n\' in text)\n\n        if python_input.paste_mode:\n            # In paste mode, always insert text.\n            b.insert_text(\'\\n\')\n\n        elif at_the_end(b) and b.document.text.replace(\' \', \'\').endswith(\n                    \'\\n\' * (empty_lines_required - 1)):\n            if b.validate():\n                # When the cursor is at the end, and we have an empty line:\n                # drop the empty lines, but return the value.\n                b.document = Document(\n                    text=b.text.rstrip(),\n                    cursor_position=len(b.text.rstrip()))\n\n                b.accept_action.validate_and_handle(event.cli, b)\n        else:\n            auto_newline(b)\n\n    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:\n            # Only when the `confirm_exit` flag is set.\n            python_input.confirm_exit and\n            # And the current buffer is empty.\n            cli.current_buffer_name == DEFAULT_BUFFER and\n            not cli.current_buffer.text))\n    def _(event):\n        """\n        Override Control-D exit, to ask for confirmation.\n        """\n        python_input.show_exit_confirmation = True\n\n    return registry\n\ndef load_python_bindings(python_input):\n    """\n    Author: Ryan Burgert\n    """\n    registry = Registry()\n\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n    # handle = registry.add_binding # <---- OLD CODE\n    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)# <---- NEW CODE: Make sure post_handler is called after every keystroke\n    has_selection = HasSelection()\n    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)\n    # microcompletions_enabled = Condition(lambda cli: True)\n    microcompletions_enabled = Condition(lambda cli: getattr(python_input,\'enable_microcompletions\',False))\n\n    #region Ryan Burgert Stuff\n    from rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent\n    from rp.prompt_toolkit.document import Document\n    #region Template\n    def _(event):# Parenthesis completion\n        #\n        assert isinstance(event,KeyPressEvent)\n        #\n        from rp.prompt_toolkit.buffer import Buffer\n        buffer=event.cli.current_buffer\n        assert isinstance(buffer,Buffer)\n        #\n        document=buffer.document\n        assert isinstance(document,Document)\n        document.insert_after()\n        #\n        text=document.text_after_cursor\n        assert isinstance(text,str)\n        #\n    # buffer.insert_text("(")\n    # if not text or text[0] in " \\t\\n":\n    #     buffer.insert_text(")")\n    #     buffer.cursor_left(count=1)\n#endregion\n    for char in \'\'\'`~!@#$%^&*()-_=+[{]}\\|;:\'",<.>/?\']\'\'\':\n        def go(c):\n            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                buffer.insert_text(c)\n        go(char)\n    for char in \'~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?`1234567890-=qwertyuiop[]\\\\asdfghjkl;\\\'zxcvbnm,./\':# Normal keyboard inputs\n        def go(c):\n            @handle(c,filter=has_selection & ~vi_mode_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                # buffer.on_text_changed+=lambda *x:buffer.save_to_undo_stack(clear_redo_stack=False)\n                buffer.cut_selection()# Overwrite text if we have something selected\n                buffer.insert_text(c)\n        go(char)\n    from rp import regex_match\n    def self_dot_var_equals_var(buffer,char_to_insert=None):\n        #(upon typing foo)\n        #\n        #class x:\n        #   def __init__(foo):\n        #       self.|=\n        #\n        #    --->\n        #\n        #class x:\n        #   def __init__(foo):\n        #       self.foo|=foo\n\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        #Are we donig this shenanagin right now? (Where we do self.foo=foo, and self.bar=bar...etc)\n        if not \'.\' in before_line:return False\n        self=before_line.lstrip()[:before_line.lstrip().find(\'.\')]\n        if not (before_line.lstrip().startswith(self+\'.\') and after_line.lstrip().startswith(\'=\')):\n            return False\n\n        before_var_name=before_line.lstrip()[len(self+\'.\'):]#might be blank, but that\'s OK\n        after_var_name=after_line[1:].strip()\n        # print("\\nbefore_var_name="+before_var_name+\', after_var_name=\'+after_var_name)\n        out=before_var_name==after_var_name\n        var_name=before_var_name#or after_name, makes no difference\n\n        if out and char_to_insert is not None:\n            if char_to_insert ==\'\\b\':\n                if var_name.strip():\n                    assert buffer is not None#internal logic of how you use this function\n                    buffer.delete_before_cursor()\n                    buffer.cursor_right(len(\'=\'+var_name))\n                    buffer.delete_before_cursor()\n                    buffer.cursor_left(len(\'=\'+var_name)-1)\n            else:\n                assert buffer is not None#internal logic of how you use this function\n                buffer.insert_text(char_to_insert)\n                buffer.cursor_right(len(\'=\'+var_name))\n                buffer.insert_text(char_to_insert)\n                buffer.cursor_left(len(char_to_insert))\n                buffer.cursor_left(len(\'=\'+var_name))\n        return out\n    def setting_index(buffer,char):\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        if regex_match(before_line,r\'.*\\[.*=\') and after_line==\']\':\n            #a[b=|]  --->  a[b]=|\n            if before_line.endswith(\'==\'):\n                #But NOT this:\n                #a[b==|]  --->  a[b=]=|\n                return False\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(\'=\'+char)\n            return True\n        return False\n    @handle(\';\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\';\',event):return\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        if after_line.startswith(\']\'):\n            #We can avoid pressing the shift-key here:\n            #L[|]  --->  L[:]\n            buffer.insert_text(\':\')\n        else:\n            buffer.insert_text(\';\')\n        return\n    for char in \'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm_\':#Letter inputs\n            def go(char):\n                @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)\n                def _(event):\n                    buffer=event.cli.current_buffer\n                    if handle_character(buffer,char,event):return\n                    document=buffer.document\n                    current_line=document.current_line\n                    before_line=document.current_line_before_cursor\n                    after_line=document.current_line_after_cursor\n                    before=document.text_before_cursor\n                    after= document.text_after_cursor\n                    if self_dot_var_equals_var(buffer,char) or setting_index(buffer,char):\n                        return\n                    token,name,found=token_name_found_of_interest(before_line)\n                    # print(token,repr(name),found)\n                    if (found and name in (\'9\',\'9j\',\'9J\') or name==\'\') and endswithany(before_line,\'j\',\'J\',\'9\'):\n                        if not (before_line.endswith(\'9\') and char in \'jJ\'):#9j is a legit imaginary literal. That\'s an edge case...\n                            #Tokens can\'t start with a digit and end with a letter. \n                            #So, because of that, we can start a () region by using the 9 key without holding shift\n                            #(Later we\'d want to extend this to quotes, or any other breaking syntax)\n                            #(on press x, for ex)    [9|]  --->   [(x|)]\n                            buffer.delete_before_cursor()\n                            if before_line.lower().endswith(\'j\'):\n                                buffer.delete_before_cursor()\n                            buffer.insert_text(\'(\')\n                            if before_line.lower().endswith(\'j\'):\n                                buffer.insert_text(before_line[-1])\n                            buffer.insert_text(char)\n                            buffer.insert_text(\')\')\n                            buffer.cursor_left()\n                            return\n                    def writing_namespace_breaks_syntax(before_line):\n                        return endswithany(before_line,\' \',#This is like [x |for] (space to the left of |)\n                            \')\',\']\',\'}\',*\'1234567890\',\'"\',"\'")#All of these are breaking syntax...\n                    might_be_in_string_or_comment=\'"\' in before_line and after_line.count(\'"\')==before_line.count(\'"\') or \\\n                                       "\'" in before_line and after_line.count("\'")==before_line.count("\'") or \\\n                                       \'#\' in before_line\n                    keywords={\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\', \'async\', \'await\'}\n                    if before_line.strip() and not might_be_in_string_or_comment:\n                        if not starts_with_any(before_line.lstrip() , \'from \',\'import \'):\n                            i_triggers_ifelse=False\n                            if True:\n                                # if writing_namespace_breaks_syntax(before_line) and char==\'i\' and i_triggers_ifelse and not endswithany(before_line.rstrip(),\'else\',*(keywords-{\'True\',\'False\'})):\n                                #     buffer.insert_text(\'if  else\')\n                                #     buffer.cursor_left(len(\' else\'))\n                                #     return\n                                # if endswithany(before_line,\']i\',\')i\',\'}i\',\'"i\',"\'i",\' i\') and char==\'f\' or char==\'i\':\n                                if before_line.endswith(\'i\') and writing_namespace_breaks_syntax(before_line[:-1]) and char==\'f\' and not (endswithany(before_line[:-1].rstrip(),*(keywords-{\'True\',\'False\'}))) or \\\n                                           i_triggers_ifelse and writing_namespace_breaks_syntax(before_line     ) and char==\'i\' and not (endswithany(before_line     .rstrip(),*(keywords-{\'True\',\'False\'}))):\n                                    #Ternary completion\n                                    # if writing_namespace_breaks_syntax(before_line[:-1]):\n                                        flag=True\n                                        if char==\'i\':\n                                            buffer.insert_text(\'i\')\n                                        if char==\'f\':\n                                            if not before_line[:-1].strip():\n                                                #We don\'t want to complete \'if | else\' on an empty line where we want \'if |:\'\n                                                flag=False\n                                        if flag:\n                                            buffer.insert_text(\'f \')\n                                            if not (starts_with_any(after_line.strip(),\']\',\'}\') and \'for\' in before_line):#This is an imperfect, sloppy check to see if we\'re in a list comprehension and we want \'x for x in y if z\' instead of \'x for x in y if z else\'\n                                                 buffer.insert_text(\' else\')\n                                                 buffer.cursor_left(len(\' else\'))\n                                            return\n                                if before_line.endswith(\'i\') and char==\'n\':\n                                    #Add space after writing \'in\'\n                                    if before_line.strip()!=\'i\':#A blank line starting with \'in\' generally is bad\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +i\',before_line):\n                                            if not (before_line.endswith(\' i\') and endswithany(before_line[:-2],*(set(keywords)-{\'True\',\'False\',\'not\'}))):\n                                                if writing_namespace_breaks_syntax(before_line[:-1]):\n                                                    buffer.insert_text(\'n \')\n                                                    return\n\n                                if before_line.endswith(\'i\') and char==\'s\':\n                                    #Add space after writing \'is\'\n                                    if before_line.strip()!=\'i\':#A blank line starting with \'in\' generally is bad\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +i\',before_line):\n                                            if not (before_line.endswith(\' i\') and endswithany(before_line[:-2],*(set(keywords)-{\'True\',\'False\'}))):\n                                                if writing_namespace_breaks_syntax(before_line[:-1]):\n                                                    buffer.insert_text(\'s \')\n                                                    return\n                                # if char==\'f\':\n                                #     if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,\')\',\'}\',\']\') and not endswithany(before_line.rstrip(),\' in\',\'if\'):\n                                #         #Attempt Comprehension autocompletion\n                                #         #[x |]  --->  [x for | in]\n                                #         #[(a,b)|]  --->  [(a,b)for | in]\n                                #         if re.fullmatch(r\'^.*[a-zA-Z_\\)\\}\\]\\\'\\"] +\',before_line):\n                                #             if not endswithany(before_line.rstrip(),*(\' \'+x for x in keywords)):\n                                #                 buffer.insert_text(\'for  in\')\n                                #                 buffer.cursor_left(len(\' in\'))\n                                #                 return\n                                if char in \'fi\':\n                                    if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,\')\',\'}\',\']\') and not endswithany(before_line.rstrip(),\' in\',\'if\'):\n                                        #Attempt Comprehension autocompletion\n                                        #[x |]  --->  [x for | in]\n                                        #[(a,b)|]  --->  [(a,b)for | in]\n                                        if re.fullmatch(r\'^.*(([a-zA-Z_0-9] +)|([\\)\\}\\]\\\'\\"] *))\',before_line):\n                                            if not endswithany(before_line.rstrip(),*(\' \'+x for x in keywords)):\n                                                if not re.fullmatch(r\'.*for [^\\[\\(\\{]+ in [^\\[\\(\\{]+ \',before_line):\n                                                    if char==\'f\':\n                                                        if not before_line.endswith(\' \'):\n                                                            buffer.insert_text(\' \')#For the sake of aesthetics, [[x] for x in y] looks better than [[x]for x in y]\n                                                        buffer.insert_text(\'for  in\')\n                                                        buffer.cursor_left(len(\' in\'))\n                                                        return\n                                                else:\n                                                    #On press i or f: [x for x in y |] ---> [x for x in y if |]\n                                                    buffer.insert_text(\'if \')\n                                                    # buffer.cursor_left(len(\' else\'))\n                                                    return\n                                if char==\'f\':\n                                    #f-->if\n                                    if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +\',before_line):\n                                        #x=x f|   --->   x=x if | else\n                                        if not endswithany(before_line.strip(),*keywords):\n                                            if not before_line.endswith(\' for \')and not after_line.endswith(\' in\'):\n                                                if not re.match(r\'\\w.*\',after_line):\n                                                    buffer.insert_text(\'if  else\')\n                                                    buffer.cursor_left(len(\' else\'))\n                                                    return\n\n\n\n                            if  not endswithany(before_line.rstrip(),*(keywords-{\'True\',\'False\',\'and\',\'or\',\'not\'})) and writing_namespace_breaks_syntax(before_line):\n                                if not endswithany(before_line.rstrip(),*(keywords-{\'not\',\'True\',\'False\'})):\n                                    if  not endswithany(before_line.rstrip(),*(keywords-{\'True\',\'False\'})):\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +\',before_line):\n                                            if char==\'o\':\n                                                buffer.insert_text(\'or \')\n                                                return\n                                            if char==\'a\':\n                                                buffer.insert_text(\'and \')\n                                                return\n                                # if not endswithany(before_line.rstrip(),*(keywords-{\'and\',\'or\'})):\n                                #     if char==\'t\':\n                                #         buffer.insert_text(\'not \')\n                                #         return\n                                # TODO CORRECTION: \'t\' --> \'not \' should NOT be handled here, this should be handled as a space completion instead. I\'ll do that later...\n                                # n_makes_in_and_s_makes_is=True#This is imperfect and got annoying\n                                if n_makes_in_and_s_makes_is:#This completion is a real trouble-maker for edge cases...\n                                    if char==\'n\' or char==\'s\':\n                                        if before_line.strip() and not (before_line.endswith(\' \') and endswithany(before_line[:-1],*(set(keywords)-{\'not\',\'True\',\'False\'}))):\n                                            if re.fullmatch(r\'.*[\\]\\}\\)\\\'\\"a-zA-Z0-9_] *\',before_line):\n                                                if not re.fullmatch(r\'.*[^a-zA-Z0-9_](if|and|or|not|while|with|else|elif|is|yield) \',before_line):#prevent: return x if not negative  ——> return x if not in egative| else\n                                                    if not re.fullmatch(r\'[0-9]+[a-zA-Z_].*\',before_line[::-1]):#Prevent: nuts2nuts  —>  nuts2 in uts\n                                                        buffer.insert_text(\'in \' if char==\'n\' else \'is \')\n                                                        return\n\n                    if char==\'m\' and meta_pressed(clear=True):\n                        # ⌥ + m ---> MORE\n                        # ⌥ + m twice ---> MMORE\n                        if before_line==\'MORE\':\n                            buffer.cursor_left(4)\n                            buffer.insert_text(\'M\')\n                            buffer.cursor_right(4)\n                            return\n                        if before_line==\'\':\n                            buffer.insert_text(\'MORE\')\n                            return\n                        if before_line==\'MMORE\':\n                            buffer.cursor_left(4)\n                            buffer.delete_before_cursor()\n                            buffer.cursor_right(4)\n                            return\n                    if True:#not \'"\' in after_line and not "\'" in after_line:\n                        #Jump cursor to headers with special commands following the \'\\\' key\n                        #(on press d)\n                        #def f():\n                        #   return\\|\n                        #   --->\n                        #|def f():\n                        #   return\n                        def jump_cursor_to_beginning_of_header(command:str=\'\\\\db\',header:str=\'def \'):\n                            if before_line.endswith(command):\n                                blines=before.splitlines()[:-1]\n                                if any(x.lstrip().startswith(header)for x in blines):\n                                    cline=lambda:buffer.document.current_line\n                                    buffer.cursor_up()\n                                    while not cline().lstrip().startswith(header):\n                                        buffer.cursor_up()\n                                        buffer.cursor_left(99999)\n                                    buffer.cursor_right(99999)\n                                    buffer.cursor_right(len(get_indent(cline())))\n                                    return\n                        # header_jump_commands={\n                        #                  \'\\\\db\':\'def \',\n                        #                  \'\\\\cl\':\'class \',\n                        #                  \'\\\\if\':\'if \',#go ...etc\n                        #                  \'\\\\wh\':\'while \',\n                        #                  \'\\\\wi\':\'with \',\n                        #                  \'\\\\fo\':\'for \',#go f\n                        #                  \'\\\\el\':\'el\'}#go e\n                        header_arg_commands={\n                                             \'\\\\re\':\'replace\',\n                                             \'\\\\py\':\'python\',\n                                             \'\\\\dtl\':\'delete to line\',\n                                             \'\\\\go\':\'goto\',\n                                             \'\\\\lo\':\'load\',\n                                             \'\\\\sa\':\'save\',\n                                             \'\\\\wr\':\'write\',\n                                             \'\\\\ca\':\'cancel\',\n                                             \'\\\\t3pa\':\'tmux_comment_paste\',\n                                             \'\\\\3tpa\':\'tmux_comment_paste\',\n                                             \'\\\\3an\':\'comment_ans\',\n                                             \'\\\\/c\':\'source_code\',\n                                             \'\\\\?c\':\'source_code\',\n                                             }\n                        header_commands={\n                                         \'\\\\sim\':\'sort_imports\',\n                                         \'\\\\bla\':\'black\',\n                                         \'\\\\sg\':\'save_gist\',\n                                         \'\\\\lg\':\'load_gist\',\n                                         \'\\\\co\':\'copy\',\n                                         \'\\\\pa\':\'paste\',\n                                         \'\\\\3pa\':\'comment_paste\',\n                                         \'\\\\vpa\':\'vim_paste\',\n                                         \'\\\\vspa\':\'vim_string_paste\',\n                                         \'\\\\vco\':\'vim_copy\',\n                                         \'\\\\tpa\':\'tmux_paste\',\n                                         \'\\\\tspa\':\'tmux_string_paste\',\n                                         \'\\\\tco\':\'tmux_copy\',\n                                         \'\\\\lpa\':\'local_paste\',\n                                         \'\\\\lspa\':\'local_string_paste\',\n                                         \'\\\\wpa\':\'web_paste\',\n                                         \'\\\\wspa\':\'web_string_paste\',\n                                         \'\\\\rpr\':\'repr\',\n                                         \'\\\\rpa\':\'repr ans\',\n                                         \'\\\\wco\':\'web_copy\',\n                                         \'\\\\ed\':\'editor\',\n                                         \'\\\\vi\':\'vim\',\n                                         \'\\\\al\':\'align_lines\',\n                                         \'\\\\ac\':\'align_char\',\n                                         \'\\\\sw\':\'strip_whitespace\',\n                                         \'\\\\sc\':\'strip_comments\',\n                                         \'\\\\mla\':\'multi line arguments\',\n                                         \'\\\\fo\':\'for\',\n                                         \'\\\\fi\':\'import_from_swap\',\n                                         \'\\\\de\':\'def\',\n                                         \'\\\\wh\':\'while\',\n                                         \'\\\\da\':\'delete all\',\n                                         \'\\\\lss\':\'LSS\',\n                                         \'\\\\lsr\':\'Relative LSS\',\n                                         \'\\\\an\':\'ans\',\n                                         \'\\\\san\':\'string ans\',\n                                         \'\\\\tbp\':\'toggle_big_parenthesis\',\n                                         \'\\\\spa\':\'string_paste\',\n                                         \'\\\\d0l\':\'delete_empty_lines\',\n                                         \'\\\\dtt\':\'delete_to_top\',\n                                         \'\\\\dtb\':\'delete_to_bottom\',\n                                         \'\\\\sl\':\'sort_lines\',\n                                         \'\\\\rl\':\'reverse_lines\',\n                                         \'\\\\ya\':\'yapf autoformat\',\n                                         \'\\\\gg\':\'go to top\',\n                                         \'\\\\GG\':\'go to bottom\',\n                                         \'\\\\vO\':\'vim open up\',\n                                         \'\\\\vo\':\'vim open down\',\n                                         \'\\\\fn\':\'function_name\',\n                                         \'\\\\tts\':\'tabs to spaces\',\n                                         \'\\\\23p\':\'python_2_to_3\',\n                                         \'\\\\db\':\'debug\',\n                                         \'\\\\pu\':\'pudb\',\n                                         \'\\\\wi\':\'workingindex\',\n                                         \'\\\\en\':\'enumerate\',\n                                         }\n                        # header_commands.update(header_jump_commands)\n                        header_commands.update(header_arg_commands)\n\n                        for command,header in header_commands.items():\n                            key=command[-1]\n                            chopped_command=command[:-1]\n                            if before_line.endswith(chopped_command) and char==key:\n                                buffer.delete_before_cursor(len(chopped_command))\n                                # if command in header_jump_commands:\n                                #     jump_cursor_to_beginning_of_header(chopped_command,header)\n                                if command in header_arg_commands and \'`\' in before_line:\n                                    if header==\'replace\':\n                                        #DEMO: Type\n                                        #`foo`bar\\r\n                                        #into the buffer (with a whole bunch of foo\'s which will be turned into bar\'s\')\n                                        if before_line.count(\'`\')==2:#dumb assumption im makin\n                                            arg1=before_line.split(\'`\')[1]\n                                            arg2=before_line.split(\'`\')[2].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg1+\'`\'+arg2+\'`\'))\n                                            text=buffer.document.text.replace(arg1,arg2)\n                                            buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)\n                                    if header==\'cancel\':\n                                        #Cancel whatever command you\'ve written and delete it. Beats having to delete it manually.\n                                        if before_line.count(\'`\')==2:#dumb assumption im makin\n                                            arg1=before_line.split(\'`\')[1]\n                                            arg2=before_line.split(\'`\')[2].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg1+\'`\'+arg2+\'`\'))\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                    if header==\'python\':\n                                         #DEMO: Type        \n                                         #`lambda x:x.replace(\'foo\',\'bar\')\\p\n                                         #into the buffer (with a whole bunch of foo\'s which will be turned into bar\'s\')\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                modifier=eval(arg,r_iterm_comm.globa);text=modifier(text);buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'load\':\n                                        #Load a file into the buffer\n                                        from rp import text_file_to_string, string_to_text_file\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                new_text=text_file_to_string(arg)\n                                                buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'write\':\n                                        #Write a file from the buffer (without asking to overwrite)\n                                        from rp import text_file_to_string, string_to_text_file\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                string_to_text_file(arg,text)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'save\':\n                                        #A safer alternative to write, which will create a backup file if we\'re overwriting it\n                                        from rp import text_file_to_string  , \\\n                                                       string_to_text_file  , \\\n                                                       file_exists          , \\\n                                                       get_parent_directory , \\\n                                                       get_file_name        , \\\n                                                       path_join            , \\\n                                                       get_current_date\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            path=arg\n                                            if file_exists(path):\n                                                try:\n                                                    file_name=get_file_name(path)\n                                                    directory=get_parent_directory(path)\n                                                    backup_path=path_join(directory,\'.\'+file_name+\'.backup.\'+str(get_current_date()).replace(\' \',\'_\')+\'.py\')\n                                                    file_contents=text_file_to_string(path)\n                                                    string_to_text_file(backup_path,file_contents)\n                                                except BaseException as E:\n                                                    buffer.insert_text(\'#Failed to backup file \'+repr(path)+\', aborting the save. (Undo to make me go away). Error: \'+repr(E))\n                                                    return\n                                            buffer.delete_before_cursor(len(path+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                string_to_text_file(path,text)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                                \n                                        header=\'aoisjdaosijdoiasjdaosijd\' #Prevent string ans from triggering\n                                        # else:\n                                            # buffer.insert_text(\'\\\\sa\')#For \'\\san\' for string ans\n\n                                    if header==\'goto\':\n                                        if before_line.count(\'`\')==1:\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                n=int(arg)\n                                                go_to_line_number(n,buffer)\n                                            except Exception as e:\n                                                buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                                pass\n                                    if header==\'delete to line\':\n                                        if before_line.count(\'`\')==1:\n                                            # buffer.insert_text(\'\\n#we: \')\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                _i=current_line_index(buffer)+1\n                                                _n=int(arg)\n                                                if _n<_i:\n                                                    go_to_line_number(_n,buffer)\n                                                for _ in range(abs(_n-_i)+1):\n                                                    delete_current_line(buffer)\n                                            except Exception as e:\n                                                buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                                pass\n                                    # if header==\'delete\':\n                                    #     if before_line.count(\'`\')==1:\n                                    #         arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                    #         buffer.delete_before_cursor(len(arg+\'`\'))\n                                    #         text=buffer.document.text\n                                    #         try:\n                                    #             _i=current_line_index(buffer)\n                                    #             _n=int(arg)\n                                    #             if n<i:\n                                    #                 go_to_line_number(_n,buffer)\n                                    #             for _ in range(abs(_n-_i)+1):\n                                    #                 delete_current_line(buffer)\n                                    #         except Exception as e:\n                                    #             buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                    #             pass\n                                \n                                if header==\'load\' and not \'`\' in before_line:\n                                    from rp import text_file_to_string, string_to_text_file, input_select_file\n                                    try:\n                                        print(end=\'\\033[999B\\n\\033[999D\\n\')#Move the cursor to the bottom left of the screenhttps://tldp.org/HOWTO/Bash-Prompt-HOWTO/x361.html\n                                        arg=input_select_file(message=\'Please select a python file to load into the buffer\')\n                                        new_text=text_file_to_string(arg)\n                                        buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)\n                                    except BaseException as E:\n                                        buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    \n                                if header==\'LSS\':\n                                    #LSS refers to the command \'LSS\' aka \'LS SEL\' in rp\'s pseudo_terminal.\n                                    try:\n                                        import rp\n                                        rp.clear_terminal_screen()\n                                        buffer.insert_text(repr(rp.input_select_path()))\n                                    except:pass\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    \n                                if header==\'Relative LSS\':\n                                    #LSS refers to the command \'LSS\' aka \'LS SEL\' in rp\'s pseudo_terminal.\n                                    try:\n                                        import rp\n                                        rp.clear_terminal_screen()\n                                        buffer.insert_text(repr(rp.get_relative_path(rp.input_select_path())))\n                                    except:pass\n                                    event.cli.renderer.clear()#Refresh the screen\n                                        \n                                if header==\'workingindex\':\n                                    buffer.insert_text(\'#\'+str(buffer.working_index))\n\n                                if header==\'debug\':\n                                    toggle_top_line_text(buffer,"from rp import debug;debug()\\n")\n                                    # toggle_bottom_line_text(buffer,"pip_import(\'sys\').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py\n                                if header==\'pudb\':\n                                    line="from rp import pip_import;pip_import(\'pudb\').set_trace()"\n                                    import rp\n                                    if rp.currently_running_windows():\n                                        line+=\'#WARNING: pudb crashes on windows; it\\\'s unix-only\'\n                                    line+=\'\\n\'\n                                    toggle_top_line_text(buffer,line)\n                                    # toggle_bottom_line_text(buffer,"pip_import(\'sys\').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py\n                                if header==\'align_lines\':\n                                    #Insert the alignment char that cant normally be typed on a keyboard in this app\n                                    text=buffer.document.text\n                                    text=align_lines_to_char(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'align_char\':\n                                    buffer.insert_text(align_char)\n                                    buffer.cursor_left()\n                                if header==\'strip_whitespace\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(line.rstrip() for line in text.split(\'\\n\'))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'import_from_swap\':\n                                    before_line=buffer.document.current_line_before_cursor\n                                    after_line=buffer.document.current_line_after_cursor\n                                    current_line=buffer.document.current_line\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    buffer.insert_text(swap_from_import(current_line))\n                                if header==\'enumerate\':\n                                    def uses_enumerate(line):\n                                        ans=line\n                                        ans=ans.split(\' in \')\n                                        ans=ans[1]\n                                        ans=ans.strip()\n                                        ans=ans.startswith(\'enumerate\')\n                                        return ans\n\n                                    def transform_var(line):\n                                        ans=line\n                                        ans=ans.split(\' in \')\n                                        l=ans\n                                        ans=ans[0]\n                                        ans=ans.strip()\n                                        ans=ans[len(\'for \'):]\n                                        oldvar=ans\n                                        if not ans.isalnum():\n                                            ans=\'(\'+ans+\')\'\n                                        ans=\',\'+ans\n                                        var=ans\n                                        return line.replace(oldvar,var,1)\n                                    def enumeratify(line):\n                                        ans=line.rstrip()\n                                        ans=ans[:ans.find(\' in \')+len(\' in \')]+\'enumerate(\'+ans[ans.find(\' in \')+len(\' in \'):-1]+\'):\'\n                                        return ans\n                                    before_line=buffer.document.current_line_before_cursor\n                                    after_line=buffer.document.current_line_after_cursor\n                                    current_line=buffer.document.current_line\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    buffer.insert_text(swap_from_import(current_line))\n                                    leading_whitespace=current_line[:len(current_line)-len(current_line.lstrip())]\n                                    buffer.cursor_right(9999)\n                                    buffer.delete_before_cursor(len(current_line))\n                                    new_line=transform_var(enumeratify(current_line))\n                                    buffer.insert_text(leading_whitespace+new_line)\n                                    buffer.cursor_left(9999)\n                                    buffer.cursor_right(len(leading_whitespace+\'for \'))\n\n                                if header==\'toggle_big_parenthesis\':\n                                    if not \'\\n\' in before+after:\n                                        #If has a single line, add a new line to avoid a glitch where we get too many parenthesis\n                                        text=buffer.document.text\n                                        buffer.document=Document(buffer.document.text+\'\\n\',min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    commented_parenthesizer_automator.buffer_toggle_parenthesization(buffer)\n                                if header==\'delete_to_top\':\n                                    text=buffer.document.text\n                                    lineno=document.text_before_cursor.count(\'\\n\')\n                                    colno=document.cursor_position_col\n                                    text=text.splitlines()[lineno:]\n                                    text=\'\\n\'.join(text)\n                                    buffer.document=Document(text,colno-len(r\'\\dt\'),buffer.document.selection)\n                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'delete_to_bottom\':\n                                    text=buffer.document.text\n                                    lineno=document.text_before_cursor.count(\'\\n\')\n                                    colno=document.cursor_position_col\n                                    text=text.splitlines()[:lineno+1]\n                                    text=\'\\n\'.join(text)\n                                    buffer.document=Document(text,text.rfind(\'\\n\')+colno-len(r\'\\dt\'),buffer.document.selection)\n                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'delete_empty_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(line for line in text.split(\'\\n\') if line.strip())\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'sort_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(sorted(text.split(\'\\n\')))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'reverse_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(reversed(text.split(\'\\n\')))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'strip_comments\':\n                                    from rp import strip_python_comments\n                                    text=buffer.document.text\n                                    text=strip_python_comments(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'repr\':\n                                    #A shortcut to `repr\\py\n                                    text=buffer.document.text\n                                    buffer.document=Document(repr(text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'black\':\n                                    from rp import pip_import\n                                    try:\n                                        pip_import(\'black\')\n                                        import black\n                                        text=buffer.document.text\n                                        text=black.format_str(text,mode=black.Mode())\n                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#sort_imports: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'sort_imports\':\n                                    from rp import pip_import\n                                    try:\n                                        pip_import(\'isort\')\n                                        import isort\n                                        text=buffer.document.text\n                                        text=isort.code(text)\n                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#sort_imports: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'source_code\':\n                                    #Sets ans=rp.get_source_code(current buffer)\n                                    indent=\'\'\n                                    if before_line.count(\'`\')==1:\n                                        commented_arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                        buffer.delete_before_cursor(len(commented_arg+\'`\'))\n                                        before_line=buffer.document.current_line_before_cursor\n                                        indent=\' \'*(len(before_line)-len(before_line.lstrip()))\n                                        text=commented_arg\n                                    else:\n                                        text=buffer.document.text\n                                        buffer.delete_before_cursor(99999999)\n                                        buffer.delete(99999999)\n                                    try:\n                                        item=eval(text,r_iterm_comm.globa)\n                                        from rp import get_source_code\n                                        code=get_source_code(item)\n                                        code=code.splitlines()\n                                        code=code[::-1]\n                                        code[:-1]=[indent+line for line in code[:-1]] \n                                        code=code[::-1]\n                                        code=\'\\n\'.join(code)\n                                        # buffer.document=Document(code,min(len(code),buffer.document.cursor_position),buffer.document.selection)\n                                        buffer.insert_text(code)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#get_source_code: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'save_gist\':\n                                    #Sets ans=str(current buffer)\n                                    text=buffer.document.text\n                                    text=repr(text)\n                                    text=\'from rp import save_gist;ans=save_gist(%s)\'%text\n                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??\n                                if header==\'load_gist\':\n                                    from rp import load_gist\n                                    text=buffer.document.text\n                                    try:\n                                        try:\n                                            text=load_gist(text)\n                                        except Exception:\n                                            text=\'git.io/\'+text\n                                            text=load_gist(text)\n                                    except Exception:\n                                        text=\'#Failed to load gist at specified url\'\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'repr ans\':\n                                    #Sets ans=str(current buffer)\n                                    text=buffer.document.text\n                                    text=repr(text)\n                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??\n                                if header==\'tabs to spaces\':\n                                    text=buffer.document.text\n                                    text=text.replace(\'\\t\',\'    \')\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'function_name\':\n                                    #Insert the current function\'s name\n                                    func_names=get_all_function_names(buffer.document.text_before_cursor)\n                                    buffer.insert_text(func_names[-1] if func_names else \'\')\n                                if header==\'python_2_to_3\':\n                                    text=buffer.document.text\n                                    from rp import python_2_to_3\n                                    text=python_2_to_3(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'while\':\n                                    text=buffer.document.text\n                                    text=\'while True:\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,10,buffer.document.selection)\n                                if header==\'for\':\n                                    text=buffer.document.text\n                                    text=\'for  in :\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,4,buffer.document.selection)\n                                if header==\'def\':\n                                    text=buffer.document.text\n                                    text=\'def ():\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,4,buffer.document.selection)\n                                if header==\'go to top\':\n                                    buffer.cursor_up(1000000)\n                                if header==\'go to bottom\':\n                                    buffer.cursor_down(1000000)\n                                if header==\'vim open down\':\n                                    buffer.delete_before_cursor()\n                                    buffer.cursor_up()\n                                    buffer.cursor_right(1000000)\n                                    buffer.insert_text(\'\\n\'+get_indent(current_line))\n                                if header==\'vim open up\':\n                                    buffer.delete_before_cursor()\n                                    buffer.cursor_left(1000000)\n                                    buffer.insert_text(\'\\n\')\n                                    buffer.cursor_up()\n                                    buffer.insert_text(get_indent(current_line))\n                                if header==\'multi line arguments\':\n                                    #Meant to split a def(x,y,z,w,asd,as,das,d,asd,aoisdaiosdiasidasd,as,d,asd,a,sd,as,da,sd,as,da,sd,asd,): onto multiple lines to make it more readable. see split_def_arguments_into_multiple_lines\'s documentation for an example.\n                                    before_line=before_line[:-3]#get rid of the \\ml\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    # print("\\n\\n\\n"+before_line+after_line+\'\\n\\n\\n\')\n                                    new_def=split_def_arguments_into_multiple_lines(before_line+after_line)\n                                    # print("THEN")\n                                    # print("\\n\\n\\n"+new_def+\'\\n\\n\\n\')\n                                    # print("END")\n                                    # print(new_def)\n                                    buffer.insert_text(new_def)\n                                if header==\'local_copy\':\n                                    import rp\n                                    do_local_copy(buffer.document.text)\n                                if header==\'vim_copy\':\n                                    import rp\n                                    do_vim_copy(buffer.document.text)\n                                if header==\'tmux_copy\':\n                                    import rp\n                                    do_tmux_copy(buffer.document.text)\n                                if header==\'web_copy\':\n                                    import rp\n                                    do_web_copy(buffer.document.text)\n                                if header==\'copy\':\n                                    import rp\n                                    do_copy(buffer.document.text)\n                                if header==\'editor\':\n                                    text=buffer.document.text   \n                                    try:\n                                        from rp import pip_import\n                                        editor=pip_import(\'editor\')\n                                        text=editor.edit(contents=text,use_tty=True,suffix=\'.py\').decode()\n                                        buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                        event.cli.renderer.clear()#Refresh the screen\n                                    except ImportError:\n                                        buffer.insert_text("#ERROR: Cannot import \'editor\'. Try pip install python-editor")\n                                if header==\'vim\':\n                                    edit_event_buffer_in_vim(event)\n                                if header==\'save\' or header==\'string ans\':#header==\'save\' because of the conflict of \\sa in the dict\n                                    buffer.insert_text(repr(str(get_ans())))\n                                if header==\'ans\':\n                                    buffer.insert_text(str(get_ans()))\n\n                                if header==\'web_string_paste\'   : do_web_paste(buffer,repr_mode=True)\n                                if header==\'tmux_string_paste\'  : do_tmux_paste(buffer,repr_mode=True)\n                                if header==\'vim_string_paste\'  : do_vim_paste(buffer,repr_mode=True)\n                                if header==\'local_string_paste\' : do_local_paste(buffer,repr_mode=True)\n\n                                if header==\'web_paste\'          : do_web_paste(buffer,repr_mode=False)\n                                if header==\'tmux_paste\'         : do_tmux_paste(buffer,repr_mode=False)\n                                if header==\'vim_paste\'         : do_vim_paste(buffer,repr_mode=False)\n                                if header==\'local_paste\'        : do_local_paste(buffer,repr_mode=False)\n\n                                if \'comment_paste\' in header or \'comment_ans\'==header:\n                                    commented_arg=\'\'\n                                    if before_line.count(\'`\')==1:\n                                            commented_arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(commented_arg+\'`\'))\n                                    \n                                    if header==\'tmux_comment_paste\' : do_tmux_paste(buffer,repr_mode=False,commented=commented_arg)\n                                    if header==\'comment_paste\'      : do_paste(buffer,commented=commented_arg)\n                                    if header==\'comment_ans\'      : \n\n                                        ans=str(get_ans())\n                                        ans=commented_string(buffer,ans,spaces=commented_arg)\n                                        buffer.insert_text(ans)\n\n                                if header==\'paste\'              : do_paste(buffer)\n                                if header==\'string_paste\'       : do_string_paste(buffer)\n\n                                if header==\'delete all\':\n                                    buffer.document=Document(\'\',0,buffer.document.selection)\n                                if header==\'yapf autoformat\':\n                                    try:\n                                        from rp import pip_import\n                                        yapf=pip_import(\'yapf\')\n                                    except:\n                                        fansi_print("ERROR: To use yapf\'s autoformat, you must first install yapf. \'pip install yapf\' is an option. See https://github.com/google/yapf",\'red\',\'bold\')\n                                        return\n                                    try:\n                                        # buffer.delete_before_cursor(len(\'\\\\ya\'))\n                                        buffer.document=Document(yapf.yapf_api.FormatCode(buffer.document.text)[0],buffer.document.cursor_position,buffer.document.selection)\n                                    except Exception as e:\n                                        from rp import fansi_print \n                                        buffer.insert_text("\\n#ERROR Using yapf autoformatter: "+str(e))\n                                return\n\n                    if char in {\'d\',\'c\'} and not before_line.strip():\n                        above=line_above(buffer)#returns None if there are no above lines\n                        if above is not None and get_indent(above)==get_indent(before_line):\n                            if above.strip().startswith(\'@\'):#we have a decorator on our hands...\n                                #when we\'re below a decorator and we press d or c, the only valid syntax is to create a \'def\' or a \'class\' keyword \n                                if char==\'d\':\n                                    if in_class_func_decl(buffer):\n                                        #class c:\n                                        #   @decorator\n                                        #   |\n                                        #\n                                        #   --->\n                                        # \n                                        #class c:\n                                        #   @decorator\n                                        #   def |(self):\n                                        buffer.insert_text(\'def (self):\')\n                                        buffer.cursor_left(7)\n                                        return\n                                    else:\n                                        #@decorator\n                                        #|\n                                        #\n                                        #--->\n                                        # \n                                        #@decorator\n                                        #def |():\n                                        buffer.insert_text(\'def ():\')\n                                        buffer.cursor_left(3)\n                                        return\n                                if char==\'c\':\n                                        #@decorator\n                                        #|\n                                        #\n                                        #--->\n                                        # \n                                        #@decorator\n                                        #class |:\n                                        buffer.insert_text(\'class :\')\n                                        buffer.cursor_left(1)\n                                        return\n                    if char==\'s\':\n                            # cl=find_level("class ")#class level\n                            # dl=find_level("def ")#def level\n                            # dh=find_header("def ")#def header\n                            # if cl is not None and dl is not None and dl>cl:\n                            #     if \'(self\' in dh:\n                            if meta_pressed(clear=True):\n                                buffer.insert_text(\'self\')\n                                return \n                    # if char==\'e\':\n                            # buffer.insert_text(\'trans\')\n                            # if meta_pressed(clear=False):\n                                # buffer.accept_action.run_in_terminal(render_cli_done=True)\n                                # buffer.accept_action.validate_and_handle(event.cli, buffer)\n                                # buffer.insert_text(\'elf\')\n                                # buffer.insert_text(\'self\')\n                                # return \n                    if regex_match(before_line,r\'\\s*for _ in range\\(\\d+\'):\n                        #(let\'s say we press Y)\n                        #for _ in range(123|):  --->  for _ in range(Y|):\n                        buffer.delete_before_cursor(len(before_line.lstrip())-len(\'for _ in range(\'))\n                        buffer.insert_text(char)\n                        return\n                    buffer.insert_text(char) \n            go(char)\n            meta_pressed(clear=True)#Reset: we don\'t want to keep the esc key pressed (this should go after every keystroke. Period. But it doesnt yet cause ima be a lazy...)\n    for char in \'1234567890\':#Digit inputs\n        def go(c):\n            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                if self_dot_var_equals_var(buffer,c) or setting_index(buffer,c):\n                    return\n                document=buffer.document\n                current_line=document.current_line\n                before_line=document.current_line_before_cursor\n                after_line=document.current_line_after_cursor\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                above_line=line_above(buffer)\n                single_line=above_line is None\n                #\n                if c==\'3\':\n                    if before_line.endswith(\':\') and not after_line and starts_with_any(before_line.lstrip(),\'def \',\'for \',\'if \',\'while \',\'except \',\'try:\'):\n                        #Adding comments to the end of function declarations...what meaningful function would start with \'3\'?\n                        buffer.insert_text(\'#\')\n                        return\n                    if not single_line and not before_line.strip():\n                        #Why reach for the shift key?\n                        #What meaningful text could you write on a line starting with 3....on multi lines....\n                        buffer.insert_text(\'#\')\n                        return\n                    if meta_pressed():\n                        buffer.cursor_right(123123)\n                        buffer.insert_text(\'#\')\n                        return\n                    if endswithany(before_line,\')\',\']\') and after_line==\'\':\n                        #If inserting \'3\' would be break syntax and \'#\' would not, insert \'#\'\n                        #This saves a shift-key stroke\n                        buffer.insert_text(\'#\')\n                        return\n                if before == \'from \' and after == \' import\':\n                    #Lets us do \'f 5\' to get a for loop in the first line, instead of trying to import something\n                    #from | import    --->   for _ in range(4|):\n                    buffer.delete_before_cursor(999)\n                    buffer.delete(999)\n                    buffer.insert_text(\'for _ in range(\'+c+\'):\')\n                    buffer.cursor_left(2)\n                    return\n                if regex_match(before_line,r\'\\s*for\\s+\\w+\\s+in\\s+\') and after_line.strip()==\':\':\n                    #(let\'s say c=3...)\n                    #for x in |: --> for x in range(3|):\n                    buffer.insert_text(\'range(\'+c+\')\')\n                    buffer.cursor_left()\n                    return\n                if before_line.endswith(\'for \') and endswithany(after_line,\' in]\',\' in)\',\' in}\'):\n                    #[x for | in]  --->  [x for _ in range(9|)]\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(3)\n                    buffer.insert_text(\' range()\')\n                    buffer.cursor_left()\n                    buffer.insert_text(c)\n                    return\n                if before_line.endswith(\' in \') and endswithany(after_line,\']\',\')\',\'}\'):\n                    #[x for y in |]  --->  [x for y in range(9)]\n                    buffer.insert_text(\'range()\')\n                    buffer.cursor_left()\n                    buffer.insert_text(c)\n                    return\n                if before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n                    #(let\'s say c=3...)\n                    #for | in : --> for _ in range(3|):\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(len(\' in \'))\n                    buffer.insert_text(\'range(\'+c+\')\')\n                    buffer.cursor_left()\n                    return\n                if c==\'8\' and before_line.lstrip().startswith(\'def \') and after_line.endswith(\'):\') and before_line.count(\'(\')==1 and endswithany(before_line,\'(\',\',\',\'*\'):\n                    #Why use the shift key to make kwargs?\n                    #(on pressing 8)\n                    #def f(|)   --->   def f(*|)\n                    #def f(a,b,*|)   --->   def f(a,b,**|)\n                    buffer.insert_text(\'*\')\n                    return\n                if before_line.lstrip()==\'def \'and after_line in [\'():\',\':\']:\n                    #8 is the key that makes the * chracter. We can\'t start function names with numbers, so let\'s make this the default...\n                    #On press 8:\n                    #def |:   --->   def _(*args,**kwargs):|\n                    buffer.delete(len(before_line))\n                    buffer.insert_text(\'_(*args,**kwargs):\')\n                    return\n                if before==\'ans.\' and not after:\n                    if ans_dot_completion_string:\n                        # Let\'s say c=3...\n                        # (middle \'ans.|\' is current state)\n                        #   ans(|)   -->   ans.|   -->   ans(.3|)\n                        #                   AND\n                        #   ans[|]   -->   ans.|   -->   ans[.3|]\n                        buffer.delete_before_cursor()\n                        buffer.insert_text(ans_dot_completion_string)\n                        buffer.cursor_left()\n                        buffer.insert_text(\'.\')\n                    else:\n                        # Let\'s say c=3...\n                        #   ans.|   -->  .3|\n                        # This lets use the \'ans.\' completion from just typing \'.\', without sacrificing the ability to type \'.4\'\n                        buffer.delete_before_cursor(len(before))\n                        buffer.insert_text(\'.\')\n                buffer.insert_text(c)\n        go(char)\n\n\n    # @handle(\'Ω\')\n    # def _(event):\n    #     import rp.prompt_toolkit.key_binding.bindings.vi as vi \n    #     try:\n    #         vi.ryan_go_to_vim_navigation_mode(event)\n    #     except:pass\n    #\n    @handle(Keys.ShiftLeft)\n    def _(event):\n        """\n        Select from the history.\n        """\n        buffer=event.cli.current_buffer\n        before_line=buffer.document.current_line_before_cursor\n        if before_line.lstrip():\n            #····blah|   --->   ····|blah\n            buffer.cursor_left(len(before_line.lstrip()))\n        elif before_line:\n            #····|blah   --->   |····blah\n            buffer.cursor_left(1000000)\n        elif buffer.cursor_position:\n            after=buffer.document.text_after_cursor\n            if after.count(\'\\n\'):\n                buffer.cursor_up()\n                move_line_down(buffer)\n                buffer.cursor_up()\n            else:\n                move_line_down(buffer)\n            buffer.cursor_left(1000000)\n\n#     @handle(Keys.ControlBackslash)\n#     def _(event):\n#         buffer=event.cli.current_buffer\n#         pseudo_terminal(merge_dicts(r_iterm_comm.globa,{ans:buffer.document.text}))\n\n    @handle(Keys.ShiftRight)\n    def _(event):\n        buffer=event.cli.current_buffer\n        after_line=buffer.document.current_line_after_cursor\n        before_line=buffer.document.current_line_before_cursor    \n        if after_line and before_line.strip() or after_line and after_line==after_line.lstrip():\n            #····|blah   --->   ····blah|\n            buffer.cursor_right(1000000)\n        elif after_line:\n            #|····blah   --->   ····|blah\n            buffer.cursor_right(len(after_line)-len(after_line.lstrip()))\n        else:\n            after=buffer.document.text_after_cursor\n            if after.count(\'\\n\')==0:\n                return#We\'re on the bottom\n            elif after.count(\'\\n\')==1:\n                buffer.cursor_down()\n                move_line_down(buffer)\n                buffer.cursor_down()\n            else:\n                move_line_down(buffer)\n    def move_line_down(buffer,up=False):\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        buffer.cursor_left(1000000)\n        if not buffer.cursor_position:\n            buffer.delete(2)\n        buffer.cursor_right(1000000)\n        # print("Ima doing/ it!")\n        delete_current_line(buffer)\n        buffer.cursor_right(10000)\n        buffer.cursor_down(1)\n        buffer.cursor_left(10000)\n        #region Adaptive indentation: Currently not implemented. Sticking to simplicity.\n        if False:\n            buffer.insert_line_above(copy_margin=not up)\n            buffer.insert_text(current_line.lstrip() if not up else current_line)\n            text=buffer.document.text\n            lstrip=text.lstrip()\n        else:\n            buffer.insert_line_above(copy_margin=False)\n            buffer.insert_text(current_line)\n            lstrip=text=buffer.document.text\n\n        # buffer.cursor_down(1)\n        # buffer.cursor_right(1000000)\n        buffer.document=Document(lstrip,buffer.document.cursor_position+(len(lstrip)-len(text)),buffer.document.selection)\n\n    #These keys don\'t respond on the mac terminal\n    # @handle(Keys.ShiftUp)\n    # def _(event):\n    #     print(324982308974078923)\n    #     event.cli.current_buffer.cursor_right(1000000)\n    #\n    # @handle(Keys.ShiftDown)\n    # def _(event):\n    #     print(324982308974078923)\n    #     buffer=event.cli.current_buffer\n    #     document=buffer.document\n    #     current_line=document.current_line\n\n    @handle(Keys.ControlD)# Duplicate current line Only applies when there\'s text, else it will trigger the exit\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        buffer.cursor_right(10000)\n        current_line=document.current_line\n        # buffer.insert_line_below()\n        buffer.insert_text("\\n"+current_line)\n    def current_line_index(buffer):\n        #returns current line number, starting from 0\n        return buffer.document.text_before_cursor.count(\'\\n\')\n    def go_to_line_number(n,buffer):\n        i=current_line_index(buffer)\n        delta=i-n\n        if delta<0:\n            buffer.cursor_down(abs(delta))\n        else:\n            buffer.cursor_up(abs(delta))\n        buffer.cursor_up()\n    def delete_current_line(buffer):\n        buffer.delete_line_at_cursor()\n        # document=buffer.document\n        # current_line=document.current_line\n        # buffer.cursor_left(10000)\n        # firstline=buffer.cursor_position==0\n        # buffer.delete(len(current_line))\n        # buffer.delete_before_cursor()\n        # if firstline:\n        #     buffer.delete()\n        # else:\n        #     buffer.cursor_down()\n\n    #region Bracket Match Writers\n    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar\n    can_take_no_args=False# Doesn\'t practically matter right now if function_comma_flag is false\n\n\n    @handle(Keys.ControlDelete)# Delete current line\n    def _(event):\n        buffer=event.cli.current_buffer\n        delete_current_line(buffer)\n\n    #region Bracket Match Writers\n    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar\n    can_take_no_args=False# Doesn\'t practically matter right now if function_comma_flag is false\n\n    @handle(\'.\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):# period \'.\' event handler function thingy\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'.\',event):return\n        if self_dot_var_equals_var(buffer,\'.\'):\n            #self.foo|=foo   --->   self.foo.|=self.foo.\n            return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n\n\n\n        # if before_line.endswith(\'=\') and not before_line.endswith(\'==\'):\n            #Moved this functionality elsewhere to fix the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key\n            #self=|   --->   self.|=   (and then type foo to get self.foo=foo)\n            # buffer.cursor_left()\n            # buffer.insert_text(\'.\')\n            # return\n        if not before and not after:\n            buffer.insert_text(\'ans.\')\n            return\n        import rp.r_iterm_comm\n        var=rp.r_iterm_comm.last_assignable_comm\n        # if before.endswith(\'=\') and before[:-1]==var:\n            #THIS COMLPETION IS COMMENTED OUT EVEN THOUGH IT WORKS. IT GOT ANNOYING FOR TETING THE =.. OPERATOR, WHICH I THINK MIGHT BE MORE IMPORTANT FOR DEMOING RPTERM\n            #var=|  -->  var.|\n            #You can use a sequence like:\n            #  (What you type)   (What rp types)\n            #   i numpy np          import numpy as np\n            #   =.array?            np.array?\n            # buffer.delete_before_cursor()\n        if before_line.endswith("\'\'") and not before_line.endswith("\'\'\'") and after_line.startswith("\'\'") and not after_line.startswith("\'\'\'") or\\\n           before_line.endswith(\'""\') and not before_line.endswith(\'"""\') and after_line.startswith(\'""\') and not after_line.startswith(\'"""\'):\n           # “\'\'.[\'“   —>  \'\'.join([\'\'])\n            buffer.insert_text(\'.join()\')\n            buffer.delete(2)\n            buffer.cursor_left()\n            return\n        if before_line.endswith("\'\'.join(") and after_line.startswith(\')\'):\n            # “\'\'..[“        —>     \'\'.join(map(str,[]))\n            # “\'\'.[\'\'“       —>     \'\'.join([\'\'])\n            buffer.insert_text(\'map(str,)\')\n            buffer.cursor_left()\n            return\n        if before+after in {\'ans[]\',\'ans()\'} and after in {\']\',\')\'}:\n            #ans[|]  -->  ans.|\n            #       AND\n            #ans(|)  -->  ans.|\n            #\n            #For space-completing \'ans\' then wanting to use a \'.\', but can\'t \n            #\n            #Edge case: when we want to write ans(.25) where ans is a float-function\n            #   This is handled like so:\n            #       ans(|)  -->  ans.|  -->  ans(.25)  \n            #   Basically, the parenthesis are put back because the character following the \'.\' is a digit\n            #   (This is handled in the digit handler, search for "ans_dot_completion_string")\n            buffer.delete()\n            buffer.delete_before_cursor()\n            global ans_dot_completion_string\n            ans_dot_completion_string=before[-1]+after[0]# is either () or []\n        buffer.insert_text(\'.\')\n\n\n    @handle(Keys.Escape,filter=~vi_mode_enabled)#microcompletions_enabled)\n    def _(event):\n        _meta_pressed.append(True)#This is meant to be flipped to false immediately after anything reads it, with meta_pressed(). We\'re using a list to easily keep track of this after this method is @\'d outta this file somewhere else idk where\n\n    @handle(\' \',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):# Spacebar event handle spacebar\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\' \',event):return\n        single_line = line_above(buffer) is None\n        if meta_pressed():#No shenanagins -- just give me a space.\n            buffer.insert_text(\' \')\n            return\n        nonlocal function_comma_flag# ,can_take_no_args\n        # from rp import mini_terminal\n        # exec(mini_terminal)\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n\n        if document.text==\'\':# What else would we possibly want the spacebar for on an empty input? Spacebar invokes functions, and the default variable is ans.\n            import rp.r_iterm_comm as ric\n            if callable(ric.ans):\n                buffer.insert_text(\'ans()\')\n                buffer.cursor_left()\n                function_comma_flag=True\n            elif hasattr(ric.ans,\'__getitem__\'):#if we can do ans[0], ans[1] etc\n                buffer.insert_text(\'ans[]\')#we cant call it...might want to iterate through it though!\n                buffer.cursor_left()\n                function_comma_flag=True\n            else:\n                buffer.insert_text(\'ans\')#Bleh it\'s boring\n            return\n\n\n        if before.startswith(\'!\'):# Don\'t do anything special\n            buffer.insert_text(\' \')\n            return\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if before_line.endswith(\' in len\') and starts_with_any(after_line,*\'}])\'):\n                #[x for x in len|]  --->  [x for x in range(len(|))]\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n        if before_line.lstrip().startswith(\'class \') and after_line.startswith(\':\'):\n            #class c|:   --->   class c(|):\n            buffer.insert_text(\'()\')\n            buffer.cursor_left()\n            return\n        if before_line.lstrip().startswith(\'class \') and after_line.startswith(\'):\'):\n            if before_line.endswith(\',\'):\n                #class c(x,|):   --->   class c(x):|\n                buffer.delete_before_cursor()\n                buffer.cursor_right(2)\n                return\n            if before_line.endswith(\'(\'):\n                #class c(|):   --->   class c:|\n                buffer.delete_before_cursor()\n                buffer.delete()\n                buffer.cursor_right()\n                return\n        if before_line.lstrip().startswith(\'def \'): \n            if before_line.endswith(\'def __\') and after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __init__(self,|):\n                buffer.insert_text(\'init\')\n                buffer.cursor_right(7)\n                buffer.insert_text(\',\')\n                return\n            if before_line.strip()==\'def\' and after_line.startswith(\'(self):\'):\n                #class x:\n                #   def |(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __|__(self):\n                buffer.insert_text(\'____\')\n                buffer.cursor_left(2)\n                return\n            if after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __eq|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __eq__(self|):\n                if before_line.endswith(\'__\'):\n                    #autocomplete might have messed things up, this is a sloppy hack to fix that...\n                    #def __eq__|__(self):   --->   #def __eq__(self|): \n                    buffer.delete_before_cursor(2)\n                buffer.cursor_right(7)\n                return\n            if after_line.startswith(\'(self):\'):\n                #def f|(self):   --->   def f(self,|):\n                buffer.cursor_right(5)\n                buffer.insert_text(\',\')\n                return\n            if before_line.endswith(\':\') and not after_line.strip():\n                #def f(x):|   --->   def f(x):return |\n                buffer.insert_text(\'return \')\n                return\n            if before_line.strip()==\'def __\' and after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __init__(self|):\n                buffer.insert_text(\'init\')\n                buffer.cursor_right(7)\n                return\n            if before_line.strip()==\'def\' and after_line.startswith(\'():\'):\n                def on_first_line():\n                    return \'\\n\' not in (before+after)\n                function_title=\'ans\' if on_first_line() else \'_\'\n                #def |():   --->   def _(|):   (sometimes, when using decorators, you want an anonymous function)\n                #def |():   --->   def ans(|): (if we\'re defining a function on the first line, perhaps we want to use it as our answer? I haven\'t actually used this yet; it\'s just an idea, I\'ll see how much I like it...)\n                buffer.insert_text(function_title)\n                buffer.cursor_right(1)\n                return\n        if before_line.strip()==\'def\' and not after_line.strip().endswith(\':\'):\n            buffer.insert_text(\' :\')\n            buffer.cursor_left()\n            return\n        if before_line.strip().startswith(\'def \') and endswithany(before_line.strip(),\',\',\'(\') and after_line.strip()==\'):\':\n            if before_line.endswith(\',\'):\n                buffer.delete_before_cursor()\n            buffer.cursor_right(2)#If we want a one-line function\n            return\n        if self_dot_var_equals_var(buffer):\n            #self.|foo=foo   --->   self.foo=foo|\n            buffer.cursor_right(999999)\n        from rp import is_namespaceable,space_split\n        if before_line.strip().startswith(\'def \') and len(space_split(before_line.strip()))==2:\n            if after_line.strip()==\':\' and is_namespaceable(before_line.split(\' \')[-1]):\n                buffer.insert_text(\'()\')\n                buffer.cursor_left()\n                return\n        if after_line==\'):\' and before_line.endswith(\',\'):\n            buffer.delete_before_cursor()\n            if starts_with_any(before_line.strip(),*\'if while\'.split()):\n                #if f(x,|):  --->  if f(x) |:\n                buffer.cursor_right(1)\n                buffer.insert_text(\' \')#Lets us trigger things like a--->and\n            else:\n                #for x in range(5,|):   --->   for x in range(5):|\n                buffer.cursor_right(2)\n            return\n        if before_line.endswith(\' imoprt\') or before_line.startswith("imoprt"):# This is a really common typo for me\n            buffer.delete_before_cursor(6)\n            buffer.insert_text(\'import \')\n            return\n        from rp import regex_match\n        if regex_match(before_line.lstrip(),r\'for\\s+\\w+\\s+in\\s+len\'):\n                #(Also implemented upon pressing \'(\')\n                #for x in len|   -->  for x in range(len(|))\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n        if before_line.lstrip()==\'if \' and after_line.rstrip()==\':\':\n            #if |:   --->   import |\n            buffer.delete_before_cursor(3)\n            buffer.insert_text(\'import \')\n            buffer.delete()\n            return\n        if before_line.lstrip()==\'import \' and not after_line.rstrip():\n            #import |   --->   if |:\n            buffer.delete_before_cursor(len(\'import \'))\n            buffer.insert_text(\'if :\')\n            buffer.cursor_left()\n            return\n        # if before_line.lstrip()==\'for \' and after_line==\' in :\':\n        #     #"for | in :"  --->  "for _ in |:"\n        #     buffer.insert_text(\'ans\')\n        #     return\n        keywords={\'async\',\'await\',\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\'}\n\n        if regex_match(before,r\'\\s*for\\s+\\w+\\s+in\\s+\') and after.strip()==\':\':\n            #"for x in |:"  --->  "for x in ans:"\n            #(better alternative than "for x in |:" ---> "for x in:|", which is in the next block...)\n            buffer.insert_text(\'ans\')\n            return\n        elif starts_with_any(before_line.lstrip(),\'if \',\'for \',\'while \') and before_line.endswith(\' \') and after_line.rstrip()==\':\':# This is a really common typo for me\n            #if x|:   --->   if x:|\n            buffer.delete_before_cursor(1)\n            buffer.cursor_right(2)\n            return\n        from rp import space_split,is_namespaceable\n        import rp.r_iterm_comm as r_iterm_comm\n        split=space_split(before_line)\n        from rp import printed\n        from_or_import_on_beginning_of_line=before_line.lstrip().startswith("import ") or before_line.lstrip().startswith("from ")\n        def is_callable_token(token_name):\n            try:\n                return callable(eval(token_name,r_iterm_comm.globa))\n            except:\n                return False#be on the safe side with space-function completions\n        try:\n            function_comma_flag=function_comma_flag and( after_line.startswith(")") or after_line.startswith("\'") or after_line.startswith(\'"\') or after_line.startswith(\']\') or after_line.startswith(\']\') )\n            token_of_interest,name_of_interest,found_token_of_interest=token_name_found_of_interest(before_line)\n            from rp import regex_match\n            def is_autocompletable_prefix(big,suffixes=[\'\'],allow_single_liner=True,use_name_of_interest=False):\n                #leave suffixes [] or None to allow any suffix\n                if not allow_single_liner:\n                    if \'\\n\' not in before+after:\n                        return False\n                if use_name_of_interest:\n                    name=name_of_interest\n                else:\n                    name=before_line.strip()\n                return big.strip() != name and big.startswith(name) and before_line.strip() and (not suffixes or after_line in suffixes)#Shouldn\'t trigger when r is a function, because of where this is in the elif chain\n            def autocomplete_prefix(big,left=1,remove_suffix=False):\n                if remove_suffix:#used in \'except|:\' --> \'except | as :\', which is also \'except|\' --> \'except | as :\'\n                    buffer.cursor_right(len(after_line))\n                    buffer.delete_before_cursor(len(after_line))\n                buffer.insert_text(big[len(name_of_interest):])\n                buffer.cursor_left(left)\n                try_to_autounindent(buffer)\n\n            def try_autocompleting_functions(N,not_just_functions=False):\n                from rp import ring_terminal_bell\n                # if not_just_functions:\n                    # ring_terminal_bell\n                #TODO: right now not_just_functions doesn\'t do anything, it\'s supposed to let you space complete functions while importing\n                nonlocal before_line,after_line,before,after\n\n                #go through the top N current autocompletion results, and if one of them is callable, call it.\n                # if before.count(\' \')+before.count(\'\\n\')>1:\n                    # return False #Don\'t autocomplete like this unless we are doing a one-liner\n                bs=before_line.lstrip()#Before Strip  (bs)\n                if not not_just_functions:\n                    if not \'\\n\' in before.strip() and before.strip().isupper() or beginswithany(bs,\'import \',\'from \',\'def \') or \'lambda\' in bs:#Basically, any place we\'re allowed to declare new variable names, we shouldn\'t be autocompleting them. lambda is bit tricky so I\'m just sayig \'no space function completion on lines that contain lambda\'.\n                        return False#We might be typing something like \'UNDO ALL\', in which case we do NOT want the \'UNDO\' to be autocompleted\n                import rp.r_iterm_comm as ric\n                for candidate in ric.current_candidates:#Don\'t autocomplete if our current word to complete allready exists. For example, don\'t complete \'in\' into \'inverse\', etc.\n                    try:\n                        if hasattr(candidate,\'text\') and candidate.text==name_of_interest or candidate==name_of_interest:\n                            return False\n                    except:pass\n                # ring_terminal_bell()\n                # print(ric.current_candidates)\n                if not_just_functions:\n                    if not ric.current_candidates or  \'.\' in before_line:\n                        return False#Problem avoided: Used to be \'import scipy.stats\' -/-> \'import stats as |s\'\n                    buffer.delete_before_cursor(len(name_of_interest))#erase the current line\n                    #space completions: \n                    #import num|   --->   import numpy as |\n                    #(etc)\n                    space_completion=ric.current_candidates[0]\n                    if before_line.endswith(space_completion):\n                        return False#Problem avoided: Used to be \'import cv2|\' -/-> \'import cv2cv2 as |s\'\n                    #region Erase before and after so we don\'t do stupid things: Example, on autocompleting \'print\', we want:\n                    #   \'pr|i\'  --->  \'print|\'\n                    #       and NOT\n                    #   \'pr|i\'  --->  \'prprint|i\'\n                    if is_namespaceable(space_completion):\n                        #Allready taken care of in above line commented "erase the current line"\n                        # while before_line and before_line[-1] in space_completion:\n                        #     buffer.delete_before_cursor()\n                        #     before_line=before_line[:-1]\n                        #     before     =before     [:-1]\n                        while after_line  and  after_line[ 0] in space_completion:\n                            buffer.delete()\n                            after_line =after_line [1: ]\n                            after      =after      [1: ]\n                    #endregion\n                    buffer.insert_text(space_completion)\n                    return True \n                for x in ric.current_candidates[:N]:\n                    if is_callable_token(x) or not_just_functions and not (after_line.strip()==\'():\' and before_line.rstrip().startswith(\'def \')):\n                        # if re.fullmatch(r\'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]\',before_line):\n                            buffer.delete_before_cursor(len(name_of_interest))#erase the current line\n                            buffer.insert_text(x+(\'\' if  not_just_functions else \'()\'))\n                            buffer.cursor_left()\n                            nonlocal function_comma_flag\n                            function_comma_flag=True\n                            return True\n            if before_line.lstrip().startswith(\'def \') and before_line.endswith("=lambda")and after_line.startswith(\')\'):#When passing a lambda as an argument in a function definition default value (a nichey case, but important nevertheless), add a space so the rest of the program knows its a lambda (which it uses spaces to see)\n                buffer.cursor_left(6)\n                buffer.insert_text(\' \')\n                buffer.cursor_right(6)\n\n            if not from_or_import_on_beginning_of_line \\\n                and not before_line.endswith(" ") \\\n                and callable(token_of_interest)  \\\n                and not (after_line.strip()==\'():\' and before_line.rstrip().startswith(\'def \'))\\\n                and not re.fullmatch(r\'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]+\',before_line)\\\n                and not re.fullmatch(r\' *def [a-zA-Z0-9_]+\\( *[a-zA-Z0-9_]+( *\\, *[a-zA-Z0-9_]+ *)*\',before_line)\\\n            :\n                function_comma_flag=True\n                import inspect\n                #space-function implementation HERE\n                #ON SPACE\n                # callable_function|   --->   callable_function(|)\n                #This is a big deal. I use this ALL THE TIME.\n\n                # try:\n                #     can_take_no_args=len(inspect.getfullargspec(token_of_interest).args)==0\n                # except:# Probably a builtin function\n                #     can_take_no_args=0 or token_of_interest is print\n                if before_line.count(\'=\')==1 and after_line==\'(\'+before_line.split(\'=\')[0].strip()+\')\':\n                    #We came from using the )= operator. We want `matrix)=np.asarray float` --->  `matrix=np.asarray(matrix,float)` and not `matrix=np.asarray(float)(matrix)` (which would happen without this block)\n                    buffer.cursor_right(99999)\n                    buffer.cursor_left()\n                    buffer.insert_text(\',\')\n                else:\n                    buffer.insert_text(\'()\')\n                    buffer.cursor_left(count=1)\n            # region Brackets....they work but conceptually they\'re annoying.\n            # elif not from_or_import_on_beginning_of_line and not before_line.endswith(" ") and hasattr(token_of_interest,\'__getitem__\'):\n            #     buffer.insert_text(\'[]\')\n            #     buffer.cursor_left(count=1)\n            #endregion\n\n            elif regex_match(before_line.lstrip(),r\'(from .*)|(import \\w*)\') and try_autocompleting_functions(N=1,not_just_functions=True):\n                if(before_line.lstrip().startswith(\'from \')):\n                    buffer.cursor_right(len(\' import\'))\n                    buffer.insert_text(\' \')\n                elif(before_line.lstrip().startswith(\'import \')):\n                    buffer.insert_text(\' as \')#Without this, space would be redundant with respect to tab\n            elif regex_match(before_line.lstrip(),r\'from \\w* import \'):\n                #\'from rp import |\'  -->  \'from rp import *\'\n                buffer.insert_text(\'*\')\n            elif regex_match(before_line.lstrip(),r\'from \\w* import \\*\'):\n                #\'from rp import *|\'  -->  \'from rp import \'\n                buffer.delete_before_cursor()\n\n            elif before_line.lstrip().startswith(\'with \') and after_line.startswith(\':\') and not before_line.endswith(\' as \'):\n                buffer.insert_text(\' as \')\n\n            elif endswithany(before_line,\' in len\',\' in le\',\' in l\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in l|]   --->   [x for x in range(len(|))]\n                #for x in l|:      --->   for x in range(len(|)):\n                buffer.delete_before_cursor(1 if before_line.endswith(\'l\') else 2 if before_line.endswith(\'le\') else 3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n            elif name_of_interest in {\'l\',\'la\',\'lam\',\'lamb\',\'lambd\',\'lambda\'} \\\n                and not \'import \'in before_line \\\n                and not before_line.lstrip() in {\'for \'+name_of_interest,\'with \'+name_of_interest} \\\n                and not re.fullmatch(r\'( *def .*)|(.*[^a-zA-Z0-9_]lambda [^\\:]*)|(.*[^a-zA-Z0-9_](for|in|as) (l|la|lam|lamb|lambd|lambda))\',before_line) \\\n                :\n                #Make a lambda from l\n                #Shouldn\'t trigger when l is a function, because of where this is in the elif chain\n                noil=len(name_of_interest)#noil stands for ((name of interest) length)\n                if before_line.strip()!=name_of_interest:#don\'t do this at the beginning of an empty line\n                    buffer.cursor_left(noil)\n                    if not buffer.document.text_before_cursor.endswith(\' \'):\n                        buffer.insert_text(\' \')\n                    buffer.cursor_right(noil)\n                buffer.insert_text(\'lambda :\'[noil:])\n                buffer.cursor_left()\n            elif regex_match(before_line.strip(),r\'(for .* in in)\') and after_line.strip()==\':\':\n                buffer.delete_before_cursor(2)\n            elif regex_match(before_line.strip(),r\'(from \\w* import import)\') and after_line.strip()==\'\':\n                buffer.delete_before_cursor(len(\'import\'))\n            elif before_line.endswith(\'lambda:\'):\n                #The default, most boring kind of lambda...\n                #"lambda:|"   --->  "lambda:None|"\n                buffer.insert_text(\'None\')\n\n            #None of the \'is_autocompletable_prefix\'s ahead should trigger when the prefix is a function, so as not to interfere with normal autocompletion in most cases\n            elif is_autocompletable_prefix(\'def ():\'):\n                if in_class_func_decl(buffer):  autocomplete_prefix(\'def (self):\',left=7)\n                else:           autocomplete_prefix(\'def ():\',left=3)\n            elif before_line.lstrip().startswith(\'def \') and after_line.rstrip().endswith(\'):\') and after_line.startswith(\'(\'):buffer.cursor_right()\n\n\n            elif after_line.startswith(\' in)\'):\n                #print(x for y| in)  -->  print(x for y in |)\n                buffer.cursor_right(len(\' in\'))\n                buffer.insert_text(\' \')\n            elif before_line.endswith(\',for\'):\n                #print(x,for|)  -->  print(x for | in)\n                buffer.delete_before_cursor(len(\',for\'))\n                buffer.insert_text(\' for  in\')\n                buffer.cursor_left(len(\' in\'))\n            elif before_line.endswith(\',if\'):\n                #Because when we\'re in functions, hitting space makes commas, we can still do \'for\', \'if\', etc\n                #print(x,if)  -->  print(x for | in)\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\' if  else\')\n                buffer.cursor_left(len(\' else\'))\n            elif before_line.lstrip()==\'else:\'and not after_line.strip():\n                #else:|   --->   elif |:\n                buffer.delete_before_cursor(len(\'else:\'))\n                buffer.insert_text(\'elif :\')\n                buffer.cursor_left()\n            elif before_line.lstrip()==\'elif \'and after_line.rstrip()==\':\':\n                #elif:|   --->   else:\n                buffer.delete_before_cursor(len(\'elif \'))\n                buffer.insert_text(\'else\')\n                buffer.cursor_right()\n            elif before_line.lstrip()==\'f\' and not after_line.strip() and single_line:\n                #f|   --->   from | import         ONLY ON ONE-LINERS\n                buffer.insert_text(\'rom  import\')\n                buffer.cursor_left(len(\' import\'))\n            #Note that this was created after some other things in this file, and might even be redundant sometimes. For example, \'if\'-->\'if |:\' is allready covered elsewhere in key_bindings.py\n            elif is_autocompletable_prefix(\'return \',allow_single_liner=False):autocomplete_prefix(\'return \',left=0)\n            elif is_autocompletable_prefix(\'while :\'):autocomplete_prefix(\'while :\')\n            elif is_autocompletable_prefix(\'class :\'):autocomplete_prefix(\'class :\')\n            elif is_autocompletable_prefix(\'for  in :\'):autocomplete_prefix(\'for  in :\',left=5)\n            elif not (before==\'i\' and not after) and is_autocompletable_prefix(\'if :\'):autocomplete_prefix(\'if :\',left=1)#\'i|\' ---> \'if |:\' ONLY IF we\'ve typed something else in this buffer allready (often, I dedicate an input line to nothing but importing something)\n            elif is_autocompletable_prefix(\'import \'):autocomplete_prefix(\'import \',left=0)\n            elif is_autocompletable_prefix(\'from  import\'):autocomplete_prefix(\'from  import\',left=7)\n            elif is_autocompletable_prefix(\'elif :\',allow_single_liner=False):autocomplete_prefix(\'elif :\',left=1)\n            elif is_autocompletable_prefix(\'else:\',allow_single_liner=False):autocomplete_prefix(\'else:\',left=0)\n            elif is_autocompletable_prefix(\'try:\'):autocomplete_prefix(\'try:\',left=0)\n            # elif is_autocompletable_prefix(\'True \',suffixes=[\' \']):autocomplete_prefix(\'True \',left=0)\n            # elif is_autocompletable_prefix(\'False \',suffixes=[\' \']):autocomplete_prefix(\'False \',left=0)\n            elif is_autocompletable_prefix(\'break\',allow_single_liner=False):autocomplete_prefix(\'break\',left=0)\n            elif is_autocompletable_prefix(\'continue\',allow_single_liner=False):autocomplete_prefix(\'continue\',left=0)\n            elif is_autocompletable_prefix(\'yield \',allow_single_liner=False):autocomplete_prefix(\'yield \',left=0)\n            elif before_line.lstrip()!=\'yield\' and is_autocompletable_prefix(\'yield from \',allow_single_liner=False):autocomplete_prefix(\'from \',left=0)\n            # elif is_autocompletable_prefix(\'print()\'):autocomplete_prefix(\'print()\',left=1)#not a keyword, but used so frequently...\n            elif is_autocompletable_prefix(\'assert \'):autocomplete_prefix(\'assert \',left=0)\n            elif is_autocompletable_prefix(\'nonlocal \'):autocomplete_prefix(\'nonlocal \',left=0)\n            elif is_autocompletable_prefix(\'global \'):autocomplete_prefix(\'global \',left=0)\n            elif is_autocompletable_prefix(\'raise \'):autocomplete_prefix(\'raise \',left=0)\n            elif is_autocompletable_prefix(\'async \'):autocomplete_prefix(\'async \',left=0)\n            # elif is_autocompletable_prefix(\'async def ():\'):autocomplete_prefix(\'def ():\',left=3)\n\n            elif is_autocompletable_prefix(\'print()\',allow_single_liner=True):autocomplete_prefix(\'print()\',left=1);function_comma_flag=True\n            elif is_autocompletable_prefix(\'pass\',allow_single_liner=False):autocomplete_prefix(\'pass\',left=0);function_comma_flag=True\n\n            elif is_autocompletable_prefix(\'except :\',allow_single_liner=False):autocomplete_prefix(\'except :\',left=1)\n            elif is_autocompletable_prefix(\'with :\'):autocomplete_prefix(\'with :\',left=1)\n            elif ((not \'\\n\' in before and not after and re.fullmatch(r\'\\w+\',before_line) and not any(before_line.endswith(keyword) for keyword in keywords)) #space-completions are enabled if we\'re typing a function out as a comand, because then we know we don\'t have to worry about messy edge cases. space-functions are really convenient...\\\n                    or enable_space_autocompletions) \\\n                  and not regex_match(before_line.lstrip(),r\'(def .*)|(for \\w*)\') \\\n                  and not name_of_interest.isdigit() \\\n                  and name_of_interest \\\n                  and try_autocompleting_functions(N=20):\\\n                    pass#"not name_of_interest.isdigit() and name_of_interest " because \'5\' --> \'display_color_255\' without it, which is REALLY annoying\n            # elif is_autocompletable_prefix(\'except :\',[\':\',\'\']):autocomplete_prefix(\'except :\',left=1,remove_suffix=True)\n            # elif is_autocompletable_prefix(\'except  as :\',[\':\',\'\']):autocomplete_prefix(\'except  as :\',left=5,remove_suffix=True)\n            elif before_line.lstrip()==\'except \' and after_line.rstrip()==\':\':\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n                return\n            # elif before_line.endswith(\' is \'):\n                #"x is |" --> "x is not |"\n                # buffer.insert_text(\'not \')\n                # return\n            elif before_line.endswith(\' is not \'):\n                #"x is not |" --> "x is |"\n                buffer.delete_before_cursor(4)\n                return\n            elif before_line.lstrip()==\'yield from \':\n                #"yield from |" --> "yield |"\n                buffer.delete_before_cursor(len(\'from \'))\n                return\n            elif before_line.lstrip().startswith(\'except\') and before_line.strip().endswith(":") and not after_line.rstrip():\n                buffer.insert_text(\'pass\')\n                return\n            elif starts_with_any(before_line.lstrip(),\'except \',\'with \') and before_line.endswith(\' as \') and after_line.strip()==\':\':\n                #except A as |:   --->   except A:|\n                buffer.delete_before_cursor(len(\' as \'))\n                buffer.cursor_right()\n            elif before_line.lstrip().startswith(\'except \') and not \'(\' in before_line:#not \'(\' in before_line because it won\'t properly complete functions for some reason inside the \'except\' lines\n                if before_line.lstrip()==\'except \' and after_line.rstrip()==\' as :\':\n                    #\'except | as :\' --> \'except|:\'\n                    buffer.cursor_right(len(\' as \'))#leave the \':\' alone\n                    buffer.delete_before_cursor(len(\' as \'))\n                    buffer.delete_before_cursor()\n                else:\n                    if after_line==\' as :\':\n                        #\'except stuff | as :\' --> \'except stuff as |:\'\n                        buffer.cursor_right(4)\n                    elif after_line==\':\' and not \' as \' in before_line and not before_line.endswith(\'as\'):\n                        if before_line.endswith(\' \'):\n                            buffer.delete_before_cursor()#when we have two spaces because of a function \'()\' --> \' \'\n                        if before_line.lstrip()==\'except \':\n                            buffer.delete_before_cursor()\n                        else:\n                            buffer.insert_text(\' as \')\n                        # buffer.cursor_right(0)\n                    else:\n                        buffer.insert_text(\' \')\n            elif before_line.lstrip().startswith(\'except \') and before_line.endswith(\'(\') and after_line.startswith(\')\'):\n                #except Exception()|:   -->   except Exception as |:\n                buffer.cursor_right()\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\' as \')\n            elif before_line.lstrip().startswith(\'for \') and after_line.rstrip()==\' in :\':\n                if before_line.lstrip()==\'for \':#if we haven\'t given any variable name to iterate yet, switch to the \'from\' shortcut instead because from and for both start with f\n                    #Switch between \'for\' and \'from\'\n                    buffer.cursor_right(len(\' in :\'))\n                    buffer.delete_before_cursor(len(\'for \'+\' in :\'))\n                    buffer.insert_text(\'from  import\')\n                    buffer.cursor_left(len(\'import \'))\n                    return\n                #Shouldn\'t trigger when r is a function, because of where this is in the elif chain\n                buffer.cursor_right(4)\n            elif before_line.endswith(\'lambda \')and after_line.startswith(\':\'):\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n            elif endswithany(before_line,\' -\',\'[-\',\'(-\',\'{-\'):\n                #[-|] ---> [_ |]\n                #[x and -|] ---> [x and _ |]\n                #Posible imperfection: Maybe _ is a function. If it is, this current (sloppy) method of handling it won\'t call _, it will just add a space after it.\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'_ \')\n                return \n            elif starts_with_any(after_line,\' in]\',\' in}\',\'in )\'):\n                #A follow-up to a completion after pressing the f-key to create a comprehension\n                #[x for x| in]   --->   [x for x in |]\n                buffer.cursor_right(3)\n                buffer.insert_text(\' \')\n                return\n            elif single_line and before_line.endswith(\' in \') and starts_with_any(after_line,\']\',\'}\',\')\'):\n                #List comprehension on single-liners\n                #[x for x in |] --->  [x for x in ans]\n                buffer.insert_text(\'ans\')\n                return                \n            elif endswithany(before_line,\' in e\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in e|]   --->   [x for x in enumerate(|)]\n                #for x in e|:      --->   for x in enumerate(|):\n                buffer.insert_text(\'numerate()\')\n                buffer.cursor_left()\n                return\n            elif endswithany(before_line,\' in z\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in z|]   --->   [x for x in zip(|)]\n                #for x in z|:      --->   for x in zip(|):\n                buffer.insert_text(\'ip()\')\n                function_comma_flag=True\n                buffer.cursor_left()\n                return\n            elif endswithany(before_line,\' in r\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in r|]   --->   [x for x in range(|)]\n                #for x in r|:      --->   for x in range(|):\n                buffer.insert_text(\'ange()\')\n                buffer.cursor_left()\n                return\n            elif before_line.endswith(\'if \') and after_line.startswith(\' else\'):\n                #Probably didn\'t mean to press the space-bar, out of habit...this works because of other completions\n                #if | else    --->    if | else\n                return\n            elif (starts_with_any(after_line,\' else]\',\n                                            \' else \',\n                                            \' else)\',\n                                            \' else}\',\n                                            \' else,\',\n                                            \' else:\') or after_line==\' else\') and not \\\n                                            endswithany(before_line,\' if \',\n                                                                    \']if \',\n                                                                    \')if \',\n                                                                    \'}if \',\n                                                                    \'"if \',\n                                                                    "\'if ",\n                                                                    ):\n                #[x if y| else] ---> [x if y else |]\n                buffer.cursor_right(len(\' else\'))\n                buffer.insert_text(\' \')\n            elif before_line and after_line and before_line[-1]+after_line[0] in [\'()\',\'[]\',\'{}\']:\n                if document.text in [\'ans()\',\'ans[]\']:\n                    buffer.delete()\n                    buffer.delete_before_cursor(count=40000)\n                    buffer.insert_text(\' \')\n                    return\n                if \'\\n\' not in before and after==\')\':\n                    #\'print()|\' --> \'print(ans,|)\'\n                    #NOTE that upon hitting the enter key, the extra comma dissapears (\'print(a,b,c,ans,|)\'   --->   \'print(a,b,c,ans)\')\n                    buffer.insert_text(\'ans,\')\n                    return\n                buffer.cursor_right(count=1)\n                buffer.delete_before_cursor(count=2)\n                # if can_take_no_args:\n                #     if function_comma_flag:\n                #             buffer.insert_text(\',\')\n                #     else:\n                #             buffer.insert_text(\'(),\')\n                # else:\n                #     if function_comma_flag:\n                #         buffer.insert_text(\',\')\n                #     else:\n                #         buffer.insert_text(\' \')\n                if function_comma_flag and after_line.startswith("))"):\n                    buffer.insert_text(\',\')\n                else:\n                    buffer.insert_text(\' \')\n            elif function_comma_flag and after_line.startswith(\')\'):\n                if before_line.endswith(","):\n                    if \'\\n\' not in before and after==\')\':#(meant for one-liners, not multiliners. I wanted a convenient way to write ans into functions like this.)\n                        #print(a,b,c,|) --> print(a,b,c,ans,|)\n                        buffer.insert_text(\'ans,\')\n                        #NOTE that upon hitting the enter key, the extra comma dissapears (\'print(a,b,c,ans,|)\'   --->   \'print(a,b,c,ans)\\n|\')\n                    else:\n                        #print(|) --> print\n                        buffer.delete_before_cursor()\n                        buffer.cursor_right()\n                        if after_line.startswith("))"):\n                            #print(f(|)) --> print(f(),|)\n                            buffer.insert_text(\',\')\n                elif before_line.endswith("lambda"):#special case to detect and space-autocomplete lambda syntax inside functions (normally, space in a function would make a comma; but we want print(lambda|) to go to print(lambda |:), not print(lambda,|))\n\n                    buffer.cursor_left(count=6)\n                    rev=document.text_before_cursor[::-1]\n                    buffer.insert_text(\' \')#This space is just an easy patch to let lambdas be easily put inside function arguments (before it was kinda annoying and didnt work well but not it does. yay. )\n                    buffer.cursor_right(count=6)\n                    buffer.insert_text(\' :\')\n                    buffer.cursor_left(count=1)\n                else:\n                    buffer.insert_text(\',\')\n            elif not after_line and all(is_namespaceable(x) for x in split) and len(split)==2 and split[0]==\'def\':\n                buffer.insert_text(\'():\')\n                buffer.cursor_left(count=2)\n            elif (before_line.lstrip() in[\'if\',\'while\',\'for\',\'with\',\'try\',\'except\'] or split and  name_of_interest==\'lambda\') and not after_line.strip().startswith(":"):\n                buffer.insert_text(\' :\')\n                buffer.cursor_left(count=1)\n            elif before_line and after_line and before_line[-1]==\',\'and after_line[0]==\':\':# for after lambda x,a,b,c,cursor:\n                buffer.delete_before_cursor(count=1)\n                buffer.cursor_right(count=1)\n                buffer.insert_text(\' \')\n\n            elif len(split)>=2 and split[-2]==\'lambda\' and \':\'not in name_of_interest or after_line==\'):\' and not before_line.rstrip().endswith(\',\') and before_line.lstrip().startswith(\'def \'):# new argument in def\n                #def f(x|): --> def f(x,):\n                buffer.insert_text(\',\')\n            elif before_line.lstrip()==\'i\':#Quick shortcut for importing. Type \'i\' then press space. THis should only come after checking if i is a function, which should happen in some other if/else case above this line.\n                #"i|" --> "import |"\n                buffer.insert_text(\'mport \')\n            elif before_line.lstrip()==\'f\':#Quick shortcut for \'from * import * style importing\'. Type \'f\' then press space.\n                #"f|" --> "from | import"\n                buffer.insert_text(\'rom  import\')\n                buffer.cursor_left(7)\n            elif not after_line and (before_line.lstrip().startswith(\'import \') or before_line.lstrip().startswith(\'from \')):\n                if before_line.endswith(\' as\'):\n                    #for when the user doesn\'t know about or forgets about the \'as\' autocompletion, so we don\'t end up with \'as as\'\n                    #\'import x as as|\'  -->  \'import x as |\'\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text(\'\')#To trigger autocompletion\n                    return\n                if before_line.endswith(\',\'):\n                    #\'import x,\'  -->  \'import x, |\'\n                    #Weird behavior if we don\'t do this an the user manually puts a comma without a space before this function would\n                    buffer.insert_text(\' \')\n                    return\n                #not after_line, so we\'re at the end of the line, which means we are done inputting the module name after \'from\' or \'input\'\n                l=space_split(before_line)\n                allready_end_with_an_as=len(l)>=2 and l[-2]==\'as\'\n                if before_line.endswith(\' as \'):\n                    #import x as | --> import x,|\n                    buffer.delete_before_cursor(4)\n                    buffer.insert_text(\', \')\n                elif before_line.rstrip().endswith(\',\'):\n                    #import x,| --> import x as |\n                    buffer.delete_before_cursor(2)\n                    # if allready_end_with_an_as:\n                        # return\n                    # buffer.insert_text(\' as \')\n                elif \'import \' in before_line:#to protect against "from x|" --> "from x as |" if we decide to type out the whole thing (naively)\n                    #import x| --> import x as |\n                    buffer.insert_text(\', \' if allready_end_with_an_as else \' as \')#We default to the \' as \' instead of \',\' because \' as \' starts with a space, which is the key we pressed. This is as opposed to functions, which default to using the comma on space by default.\n                else:\n                    buffer.insert_text(\' \')\n            elif before_line.lstrip().count(\' \')==1 and before_line.lstrip().startswith(\'from \') and after_line==\' import\':#Quick shortcut for \'from * import * style importing\'. Type \'f\' then press space.\n                # "from *| import" --> "from * import |"\n                if before_line.lstrip()==\'from \' and after_line.startswith(\' import\'):#we have no module name specified yet\n                    #Switch between \'for\' and \'from\'\n                    buffer.cursor_right(len(\' import\'))\n                    buffer.delete_before_cursor(len(\'from \'+\' import\'))\n                    buffer.delete_before_cursor(13)\n                    buffer.insert_text(\'for  in :\')\n                    buffer.cursor_left(len(\' in :\'))\n                    return\n                buffer.cursor_right(7)\n                buffer.insert_text(\' \')\n            elif starts_with_any(before_line.lstrip(),\'for \',\'except \') and after_line==\':\':#If we want a one-line if, elif, etc.\n                if before_line.lstrip not in [\'for \',\'except \']:#make sure it\'s not empty; we don\'t want to override completion etc\n                    buffer.cursor_right(1)#Note that we exclude things we\'d normally want to say, like "if x in y:"\n                    buffer.insert_text(\'\')#To trigger autocompletion\n                    return\n            else:\n                buffer.insert_text(\' \')\n            buffer.insert_text(\'\')#To trigger autocompletion\n\n        except Exception as e:\n            from rp import print_stack_trace\n            print_stack_trace(e)\n\n    @handle("?",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'?\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        # after= document.text_after_cursor\n\n        # before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        # after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if before.endswith(\'=\'):\n            #x=| --> x?   (meant because I often want to use ? on something that I\'ve just imported, and this is a small, stable way to do it)\n            buffer.delete_before_cursor()\n        buffer.insert_text(\'?\')\n    @handle("!",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'!\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        if not before:\n            buffer.insert_text(\'!\')\n            return\n\n        # after= document.text_after_cursor\n\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        # after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if len(before)<3 and not (before_line.count("\'")%2 or before_line.count(\'"\')%2):#not in a string\n            #if not in the beginning (for a ! or !! shell command) and not in string, the only time we\'d want ! is for !=\n            buffer.insert_text(\'!=\')\n            return\n        buffer.insert_text(\'!\')\n    @handle(":",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\':\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if after_line==\':\':\n            buffer.cursor_right(count=1)\n        else:\n            buffer.insert_text(\':\')\n    @handle(\'=\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        import rp.r_iterm_comm as r_iterm_comm\n\n        def buffer_insert(text):\n            if(text==\'==\'):#text cannot be \'=\' because we still want to be able to use the \'-=\' augmented assignment\n                if before_line.endswith(\'-\'):\n                    #An easy way to type \'+\' without the shift key: \'-=\', in places where that token would normally be invalid. Chosen because \'-\' and \'=\' are right next to each other.\n                    buffer.delete_before_cursor()\n                    buffer.insert_text(\'+\')\n                    return\n            # if text in \'==\':\n                # if before_line.endswith(\'==\'):\n                    # return\n            buffer.insert_text(text)\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'=\',event):return\n        document=buffer.document\n        #\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n\n\n        for l,r in {\'()\',\'[]\'}:\n            if (not \' \' in before_line.strip() and before_line.endswith(r) and before_line.count(l)<=before_line.count(r) and not after_line) \\\n                and before_line.count(l)<before_line.count(r):\n                #The \')=\' operator\n                #The \']=\' operator\n                #alpha)|   --->   alpha=|(alpha)\n                #foo(bar)[0])|   --->   foo(bar[0])=|(foo(bar[0]))\n                buffer.delete_before_cursor()\n                arg=\'=\'+l+before_line.lstrip()\n                buffer.insert_text(arg)\n                buffer.cursor_left(len(arg))\n                buffer.cursor_right()\n                return\n            if endswithany(before_line,\'==\',\'<=\',\'>=\') and after_line.startswith(r):\n                #i[0==|]  --->  i[0]==|\n                #f(x==|)  --->  f(x)==|\n                #f(x>=|)  --->  f(x)>=|\n                #f(x<=|)  --->  f(x)<=|\n                end=before_line[-2:]\n                buffer.delete_before_cursor(2)\n                buffer.cursor_right()\n                buffer_insert(end)\n                return\n\n        if after_line.startswith(\')\'):\n            if   before_line.endswith(\'(\'):\n                #if f(|):   --->   if f()==|:\n                buffer.cursor_right()\n                buffer_insert(\'==\')\n                return\n            elif before_line.endswith(\',\'):\n                #if f(x,|):  --->   if f(x)==|:\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n                buffer_insert(\'==\')\n                return\n        if starts_with_any(before_line.lstrip(),\'elif\',\'if\',\'while\'):\n            # if x==y:\n            #     blah\n            # elif |: —> elif x==|:\n            #\n            # AND a cooler use-case: (because it only copies the variable from the same indent layer)\n            #   if x==5:\n            #       if y==6:\n            #           pass\n            #   elif x==7:\n            #       if y==7:\n            start=None\n            starts={\'elif\',\'if\',\'while\'}\n            for x in starts:\n                if before_line.strip()==x:\n                    indent=before_line[:before_line.find(x)]\n                    start=x\n            if start is not None:\n                assert before_line.startswith(indent)\n                i=-2\n                try:\n                    while True:\n                        match=before.split(\'\\n\')[i]\n                        # if match[:len(indent)].strip():#If wrong indentation level. This check is kinda rigid, maybe it would be nice to not have it...\n                            # break\n                        for match_start in starts:\n                            if match.startswith(indent+match_start) and \'==\' in match:\n                                match=match[match.find(match_start)+len(match_start):]\n                                match=match[:match.find(\'==\')]\n                                match=match.strip()\n                                if before_line[-1].strip():\n                                    buffer_insert(\' :\')\n                                    buffer.cursor_left()\n                                buffer_insert(match+\'==\')\n                                return\n                        i-=1\n                    return\n                except:pass\n        if (False or #\'=\' in before_line and not \'==\' in before_line or #We allready have some assignment operation on this line, therefore all other =\'s must belong to ==\'s....ALMOST ALL THE TIME. There is the edge case where we say "a=b=c=d=e" etc.\n            not function_comma_flag  and not after_line.startswith(\')\') and starts_with_any(before_line.lstrip(),\'if \',\'elif \',\'while \',\'not \',\'assert \',\'return \',\'yield \',\'for \',\'lambda \',\'with \',\'not \')) and\\\n                not (before_line.count("\'")%2 or before_line.count(\'"\')%2):#not in a string\n            #if x|:  -->  if x==|:\n            #   and\n            #if x==|:  -->  if x==|:\n            if not re.fullmatch(r\'.*(\\>|\\<)\',before_line):\n                from rp import text_to_speech as tts \n                # tts("r")\n                if before_line.endswith(\'!\'):\n                    buffer_insert(\'=\')\n                    return\n                if not before_line.endswith(\'==\') or before_line.endswith(\'!=\'):\n                    buffer_insert(\'==\')\n                return\n\n\n\n\n        char_operators=[\'\',\'+\',\'-\',\'*\',\'/\',\'%\',\'//\',\'**\',\'&\',\'|\',\'^\',\'>>\',\'<<\',\'~\']\n        letter_operators=[\'and\',\'or\',\'not\',\'==\',\'!=\',\'>=\',\'<=\']\n        var=r_iterm_comm.last_assignable_comm\n        # the .=, (=, and [= operators:\n        if endswithany(before_line.lstrip(),\'.\',\'(\',\'[\') and\\\n            (before_line.endswith(\'.\') and not after_line.strip() or\n             before_line.endswith(\'(\') and after_line.strip() in [\'\',\')\'] or\n             before_line.endswith(\'[\') and after_line.strip() in [\'\',\']\']):\n            if before_line.lstrip()==\'ans.\':\n                #Prevent: \'|\' --> \'ans.|\' --> \'ans=ans.\'\n                #Because last_assignable_comm is more useful in this case.\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'.\')\n                document=buffer.document\n                before_line=document.current_line_before_cursor\n                before     =document.text_before_cursor\n            #x.=y --> x=x.y\n            #x.|  --> x=x.|\n            #AND\n            #x(|) --> x=x(|)\n            #x[|] --> x=x[|]\n            operator=before_line.lstrip()[-1]\n            buffer.delete_before_cursor(count=1)\n            assign_to=before_line.lstrip()\n            if var and not assign_to[:-1]:\n                #.|  -->  ans=ans.|\n                buffer_insert(var+\'=\'+var+operator)\n                return\n            buffer_insert("="+assign_to)\n        elif before==\'ans(\'and after==\')\':# Space + equals -> import torch;\n            buffer.delete()\n            buffer.delete_before_cursor(count=1000)\n            buffer_insert("ans="+str(var))\n\n        elif var and before==var+"=":\n            buffer.delete_before_cursor(count=1000)\n            # tts("t")\n            buffer_insert("==")\n\n        elif var and not after and before in letter_operators:# User hasn\'t typed anything in yet\n            buffer.cursor_left(count=10000)\n            buffer_insert(var)\n            buffer_insert("=")\n            buffer_insert(var)\n            if before.isalpha():# and, or, not\n                buffer_insert(" ")# We need a space\n            buffer.cursor_right(count=10000)\n        elif var and not after and before in char_operators:# User hasn\'t typed anything in yet\n            buffer.cursor_left(count=10000)\n            buffer_insert(var)\n            buffer.cursor_right(count=10000)\n            buffer_insert(\'=\')\n        else:\n            buffer_insert(\'=\')\n\n    import os\n    if os.name != \'nt\':#If we are NOT running windows, which screws EVERYTHING up...\n        # @handle(Keys.ControlC)\n        # def _(event):\n        #     buffer=event.cli.current_buffer\n        #     # document=buffer.document\n        #     # before=document.text_before_cursor\n        #     # after= document.text_after_cursor\n        #     buffer.insert_text(\'RETURN\')\n\n\n        @handle(Keys.ControlH,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            #On ubuntu, shift+backspace triggers this; and inserting \'HISTORY\' is very annoying when we just want to backspace\n            buffer.delete_before_cursor()\n            # buffer.insert_text(\'HISTORY\')\n        @handle(Keys.ControlE)\n        def _(event):\n            #Run the buffer without erasing it or disturbing cursor position\n            run_code_without_destroying_buffer(event)\n\n        @handle(Keys.ControlW)\n        def _(event):\n            handle_run_cell(event)\n\n\n\n\n\n        @handle(Keys.ControlU,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            buffer.insert_text(\'UNDO\')\n        @handle(Keys.ControlP,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            before_line=buffer.document.current_line_before_cursor\n            after_line=buffer.document.current_line_after_cursor\n            if before_line==\'PREV\' and not after_line:\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'NEXT\')\n            elif before_line in [\'\',\'NEXT\'] and not after_line:\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'PREV\')\n\n    def move_arg(buffer,delta_positions:int):\n        assert delta_positions in {1,-1}\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n\n        def chop_at_parenthesis_level(s:str,l:int):\n            n=0\n            for i,c in enumerate(s):\n                if c in \'([{\':n+=1\n                if c in \'])}\':n-=1\n                if n==l:return s[:i]\n            return s\n\n        after_line=chop_at_parenthesis_level(after_line,-1)#Count and match parenthesis (we want \'A(B)(C)D)E\' --> \'A(B)(C)D\') (when we\'re dealing with after_line)\n        before_line=before_line[::-1]\n        before_line=chop_at_parenthesis_level(before_line,1)\n        before_line=before_line[::-1]\n\n\n        bargs=before_line.split(\',\')\n        aargs=after_line.split(\',\')\n        aarg=aargs[0]\n        barg=bargs[-1]\n        laarg=len(aarg)\n        lbarg=len(barg)\n        arg=barg+aarg\n        larg=len(arg)\n\n        def erase_arg():\n            buffer.delete_before_cursor(lbarg)\n            buffer.delete              (laarg)\n\n        if delta_positions==1:\n            if not \',\' in after_line:return#Otherwise we glitch and delete the rest of it\n            if len(aargs)==1:return\n            erase_arg()\n            buffer.delete()\n            buffer.cursor_right(len(aargs[1]))#Shouldn\'t get index error if called properly (where cursor is AFTER a comma)\n            buffer.insert_text(\',\'+arg)\n            buffer.cursor_left(larg)\n        if delta_positions==-1:\n            # if not \',\' in after_line:return#Otherwise we glitch and delete the rest of it\n            #     buffer.delete_before_cursor()\n            #     buffer.delete(laarg)\n            #     buffer.cursor_left(lbarg)\n            #     buffer.insert_text(arg+\',\')\n            erase_arg()\n            buffer.delete_before_cursor()\n            buffer.cursor_left(len(bargs[-2]))\n            buffer.insert_text(arg+\',\')\n            if len(bargs)>2:\n                buffer.cursor_left(larg+1)\n\n\n\n\n    @handle(\'<\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'<\',event):return\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.endswith(\',\'):\n            #Swap arguments around parenthesis! (Warning: Doesn\'t handle parenthesis inside strings as an edge case)\n            #(apple,f(x),|[\'bananna\'])   --->   (apple,|[\'bananna\'],f(x))\n            try:move_arg(buffer,-1)\n            except:print("JAM")\n            return\n        buffer.insert_text(\'<\')\n    @handle(\'>\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'>\',event):return\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.endswith(\',\'):\n            #Swap arguments around parenthesis! (Warning: Doesn\'t handle parenthesis inside strings as an edge case)\n            #(apple,|f(x),[\'bananna\'])   --->   (apple,[\'bananna\'],f(x))\n            try:move_arg(buffer,1)\n            except:print("JAM")\n            return\n        buffer.insert_text(\'>\')\n    def do_backspace(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if self_dot_var_equals_var(buffer,\'\\b\') and after_line.strip()!=\'=\':\n            #self.foo|=foo   --->   self.fo|=fo\n            return\n        if before_line.endswith(\' as \'):\n            #(I\'m often trigger-happy with the space-bar on using imports, and try to correct it with backspace. This saves me some time...)\n            #import osaidf as |   --->   import osaidf\n            buffer.delete_before_cursor(len(\' as \'))\n            return\n        if before_line.endswith(\', \'):\n            #import osaidf as c, |   --->   import osaidf as c|\n            buffer.delete_before_cursor(len(\', \'))\n            return\n        selection_tuples=list(document.selection_ranges())\n        if not selection_tuples:\n            before=document.text_before_cursor\n            after= document.text_after_cursor\n            if not after and before ==\'ans.\':\n                buffer.delete_before_cursor(len(before))\n                return\n            if not before_line.strip():\n                #(backspace entire indent when it\'s empty. example:)\n                #def f(x):\n                #····|return x\n                #  --->\n                #def f(x):return x\n                buffer.delete_before_cursor(len(before_line))\n            bl=before_line.lstrip()\n            al=after_line.rstrip()\n            if bl+\'|\'+al in {\'from | import\',\'for | in :\',\'while |:\',\'if |:\',\'elif |:\',\'except |:\',\'lambda :\',\'with |:\'}|\\\n                            {\'import |\',\'return |\',\'return|\',\'pass|\',\'else:|\',\'yield |\',\'assert |\'}:\n                            #Delete from both sides of the cursor on constructs we tend to make automatically (to make it less annoying)\n                buffer.cursor_right(len(al))\n                buffer.delete_before_cursor(len(bl+al))\n                return\n            if before and after:\n                if after_line.strip()in {\':\',\'():\'} and before_line.lstrip() in {\'def \',\'while \',\'for \',\'class \',\'if \',\'elif \',\'else\',\'except \',\'lambda \',\'with \',\'try\'}:\n                    #  \'    def |:\'   -->   \'    |\'\n                    buffer.delete(len(after_line))\n                    buffer.delete_before_cursor(len(before_line.lstrip()))\n                    return\n                pair=before[-1]+after[0]\n                if pair in [\'()\',\'{}\',\'[]\',"\'\'",\'""\']:\n                    #  \'f(|)\'   -->   \'f|\'\n                    buffer.cursor_right(count=1)\n                    buffer.delete_before_cursor(count=2)\n                    buffer.insert_text(\'\')#trigger autocompletion\n                    return\n            buffer.delete_before_cursor(count=1)\n        else:\n            buffer.cut_selection()\n        buffer.insert_text("")#Using this to trigger autocompletion on backspace\n    def alt_backspace_char_class(event):\n        #get char before cursor and distinguish between whitespace, alphanumerics, and other chars\n        c=event.cli.current_buffer.document.text_before_cursor\n        if not c:\n            return None#no chars behind cursor\n        c=c[-1]\n        if c.isalnum():\n            return 1\n        elif not c.strip():\n            return 2\n        else:\n            return 3\n\n    @handle(Keys.Backspace,eager=True)\n    def _(event):\n        if meta_pressed():\n            do_backspace(event)#We expect at least two characters to dissapear; so eat through one-char wide spaces (for example, "def |a()" --> "|a()", not "def|a()")\n            c=alt_backspace_char_class(event)\n            while c is not None and c==alt_backspace_char_class(event):\n                do_backspace(event)\n            return\n        do_backspace(event)\n\n    @handle(Keys.Right)\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        selection_tuples=list(document.selection_ranges())\n        for t in selection_tuples:\n            buffer._set_cursor_position(t[1])\n            buffer.exit_selection()\n        else:\n            cpos=buffer.cursor_position\n            buffer.cursor_right(1)\n            if buffer.cursor_position==cpos:\n                buffer=event.cli.current_buffer\n                buffer._set_cursor_position(min(buffer.cursor_position + 1,len(buffer.document.text)))\n            # buffer.cursor_right(0)# Gets stuck on ends of lines. Not as good as the new version\n\n    @handle(Keys.Left)\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        selection_tuples=list(document.selection_ranges())\n        for t in selection_tuples:# Handle arrow-keys on selection by putting the cursor on beginning or end of selection\n            buffer._set_cursor_position(min(t[0]+1,len(buffer.document.text)))\n            buffer.exit_selection()\n        else:\n            cpos=buffer.cursor_position\n            buffer.cursor_left(1)\n            if cpos==buffer.cursor_position:\n                buffer=event.cli.current_buffer\n                buffer._set_cursor_position(max(buffer.cursor_position - 1,0))\n\n    @handle(Keys.Down)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if meta_pressed():\n            buffer.cursor_down(10)\n        else:\n            buffer.auto_down(ryan_allow_completion_navigation=False)\n        # document=buffer.document\n        # assert isinstance(buffer,Buffer)\n        # if not has_selected_comlpetion(buffer):\n            \n        # if has_selected_completion(buffer) or not \'\\n\' in buffer.document.text:\n            # buffer.auto_down()# Will select next completion\n            # try:\n            #     if not has_selected_completion(buffer) or not \'\\n\' in buffer.document.text3:#\n            #         buffer.auto_down()# So we don\'t get stuck when we come back around again\n            # except:pass\n        # else:\n        #     temp=buffer.complete_state\n        #     try:\n        #         buffer.complete_state=False\n        #         buffer.auto_down()# Will select next completion\n        #     finally:\n        #         buffer.complete_state=temp\n\n    @handle(Keys.Up)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if meta_pressed():\n            buffer.cursor_up(10)\n        else:\n            buffer.auto_up(ryan_allow_completion_navigation=False)\n            return\n            assert isinstance(buffer,Buffer)\n            if has_selected_completion(buffer):#  Up is the only one that can initially select a history item\n                buffer.auto_up()# Will select next completion\n                if not has_selected_completion(buffer):\n                    buffer.auto_up()# So we don\'t get stuck when we come back around again\n            else:\n                temp=buffer.complete_state\n                try:\n                    buffer.complete_state=False# So we don\'t select a completion\n                    buffer.auto_up()# Will select next completion\n                finally:\n                    buffer.complete_state=temp\n\n\n\n\n\n    @handle(Keys.ControlZ)\n    def _(event):\n        buffer=event.cli.current_buffer\n        # print(buffer._redo_stack)\n        buffer.undo()\n\n    @handle(Keys.ControlY)\n    def _(event):\n        buffer=event.cli.current_buffer\n        # print(buffer._redo_stack)\n        buffer.redo()\n\n    @handle(Keys.ControlQ)\n    def _(event):\n        #Abandon the current buffer. But still save it to history.\n\n        buffer=event.cli.current_buffer\n        buffer.append_to_history()\n        event.cli.abort()\n        # print(buffer._redo_stack)\n        # buffer.redo()\n\n    import rp.r_iterm_comm as r_iterm_comm\n\n    @handle(Keys.ControlV)# On mac this is alt+z\n    def _(event):\n        if meta_pressed(clear=True):\n            edit_event_buffer_in_vim(event)\n        else:\n            buffer=event.cli.current_buffer\n            from rp import string_from_clipboard\n            clip=r_iterm_comm.clipboard_text\n            try:\n                clip=string_from_clipboard()\n                buffer.cut_selection()\n                buffer.insert_text(clip)\n            except:\n                pass# Paste failed\n\n    @handle(Keys.ControlA)# On mac this is alt+z\n    def _(event):\n        reprify=False\n        if meta_pressed(clear=True):\n            reprify=True\n        if True:\n            buffer=event.cli.current_buffer\n            try:\n                if reprify:\n                    clip=repr(str(get_ans()))\n                else:\n                    clip=str(get_ans())\n                buffer.cut_selection()\n                buffer.insert_text(clip)\n            except:\n                pass# Paste failed\n\n    @handle(Keys.ControlC)# ,filter=has_selection)# On mac this is alt+z\n    def _(event):\n        buffer=event.cli.current_buffer\n        selection_tuples=list(buffer.document.selection_ranges())\n\n        #region\n        if not selection_tuples:\n            selection_tuples=[]\n            line=buffer.document.current_line\n            to_copy="\\n" + line# \' \' * (len(line)-len(line.lstrip()))\n            buffer.cursor_right(12323213)\n        else:\n            to_copy=""\n            for t in selection_tuples:\n                to_copy+=buffer.document.text[t[0]:t[1]+1]\n        r_iterm_comm.clipboard_text=to_copy\n        from rp import string_to_clipboard\n        try:\n            string_to_clipboard(to_copy)\n        except:\n            pass# Copy failed\n\n\n    def inc_dec(inc_or_dec:str):# ++ ⟶ +=1\n        #increment or decrement\n        @handle(inc_or_dec,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,inc_or_dec,event):return\n            document=buffer.document\n            before=document.text_before_cursor\n            before_line=document.current_line_before_cursor\n            after_line=document.current_line_after_cursor\n            after= document.text_after_cursor\n            current_line= document.current_line\n            above_line=    line_above(buffer)\n            single_line=above_line is None\n            # import r_iterm_comm\n            # if not after and r_iterm_comm.last_assignable_comm and before[-1]==inc_or_dec:# So you can do ++ -> assignable ++= (because +=1 -> assignable+=1)\n            #     buffer.cursor_left(count=1000)\n            #     buffer.insert_text(r_iterm_comm.last_assignable_comm)\n            #     buffer.cursor_right(count=1000)\n            #     return\n            # print(\'GAGAGAGA\')\n\n            from rp import is_namespaceable\n            if inc_or_dec == \'-\' and all(is_namespaceable(x) for x in before_line if x not in \' \') and starts_with_any(before_line.lstrip(),\'def \',\'class \'):# When writing the title of a function, you don\'t have to use _ you can type - and it will turn it into _\n                #(on -)\n                #def |(): ---> def _|():\n                #     AND\n                #def f|(): ---> def _f_|():\n                buffer.insert_text(\'_\')\n                return\n            if inc_or_dec==\'-\' :\n                if is_namespaceable(before_line.strip()) and before_line.rstrip()==before_line and not single_line:\n                    #If multiline, and we\'re starting a line, and we\'re continuing some variable name, assume that we don\'t want to create an expression.\n                    #Example:\n                    #def f():\n                    #   x|   ---->    x_\n                    buffer.insert_text(\'_\')\n                    return\n\n                if before_line.endswith(\'for \')and starts_with_any(after_line,\' in)\',\' in}\',\' in]\'):\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(3)\n                    buffer.insert_text(\' \')\n                    return\n                skip=False\n                token,name,found=token_name_found_of_interest(before_line)\n                if before_line==\'from \'and after_line==\' import\':\n                    buffer.cursor_right(1233)\n                    buffer.delete_before_cursor(len(\'from  import\'))\n                elif found:\n                    # print("NAME IS "+name)\n                    if name==\'f\'==before_line.strip() and not callable(token):\n                        buffer.delete_before_cursor()\n                    else:\n                        skip=True   \n                if not skip:\n                    buffer.insert_text(\'for _ in :\')\n                    buffer.cursor_left()\n                    return \n\n            if (inc_or_dec==\'+\' or False) and (after_line.startswith(\'"\') or after_line.startswith("\'")):\n                #(on + followed by +) (for combining strings more easily)\n                #"Hello"|"World"  --->  "Hello"|+"World"  --->  "Hello"+|+"World"\n                #       AND\n                #\'Hello\'|\'World\'  --->  \'Hello\'|+\'World\'  --->  \'Hello\'+|+\'World\'\n                buffer.insert_text(\'+\')\n                buffer.cursor_left()\n                return\n            # if (inc_or_dec==\'-\' or True) and (endswithany(before_line,\'"\',"\'") and after_line.startswith("+")):\n            #     #On pressing the \'-\' key, (because string literals don\'t implement the \'-\') operator\n            #     #"Hello"|+"World"  --->  "Hello"+|+"World"\n            #     buffer.insert_text(\'+\')\n            #     return\n\n            if inc_or_dec==\'-\' and before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n                #(on -)\n                #for | in : --> for _ in |:\n                buffer.insert_text(\'_\')\n                buffer.cursor_right(len(\' in \'))\n                return\n            if len(before_line.strip())>1 and before and before[-1]==inc_or_dec and is_namespaceable(before_line[:-1].lstrip()):\n                #(on +) x+|  --->  x+=1\n                #       AND\n                #(on -) x-|  --->  x-=1\n                if not after_line:\n                    buffer.insert_text("=1")\n                else:\n                    buffer.insert_text(inc_or_dec)\n                    buffer.cursor_left()\n            elif inc_or_dec==\'-\' and before_line.endswith(\'-\'):\n                #becuase then we dont have to reach for the shify key (default blank vairable is _ in for loops)\n                #print(-|) ---> print(_|)\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'_\')\n            elif inc_or_dec==\'-\' and before_line.endswith(\'-=1\'):\n                #(when we wanted to make an underscore but got -=1, just press - again...)\n                #x-=1| ---> x_| \n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'_\')\n            else:\n                buffer.insert_text(inc_or_dec)\n            # if inc_or_dec==\'+\':\n            #     print("ewfoijfdsijoijowfijofejio")\n            #     if before.endswith(\'+\') and after and after[0] in \'\\\'"\':\n            #         buffer.cursor_left()\n    inc_dec(\'+\')\n    inc_dec(\'-\')\n\n    # @handle("h")\n    # def sploo(x):\n    #     print("A")\n    # @handle("h")\n    # def sploo(x):\n    #     print("B")\n\n\n    bracket_pairs={"()","[]","{}"}\n    def thing(begin,end):\n        @handle(begin,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,begin,event):return\n            if(begin==\'(\'):\n                document=buffer.document\n                before_line=document.current_line_before_cursor\n                after_line =document.current_line_after_cursor\n                if regex_match(before_line.lstrip(),r\'for\\s+\\w+\\s+in\\s+len\'):\n                    #for x in len|   -->  for x in range(len(|))\n                    buffer.delete_before_cursor(3)\n                    buffer.insert_text(\'range(len())\')\n                    buffer.cursor_left(2)\n                    return\n                if before_line.rstrip().startswith(\'def \') and after_line.strip()==\'():\':\n                    #def f|() --> def f(|):\n                    buffer.cursor_right()\n                    return\n            if not surround(buffer,begin,end):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                buffer.insert_text(begin)\n                if after.strip()==\':\' or not after or after[0].isspace() or before and before[-1]+after[0]in bracket_pairs or document.find_matching_bracket_position()!=0:\n                    buffer.insert_text(end)\n                    buffer.cursor_left(count=1)\n        @handle(end,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,end,event):return\n            if not surround(buffer,begin,end):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                if not after or after[0]!=end:#  or before.count(begin)>before.count(end):#Last part is checking for parenthesis matches. I know somewhere there\'s a way to do this already thats better and isnt confused by strings but idk where that is\n                    buffer.insert_text(end)\n                else:\n                    buffer.cursor_right(count=1)\n    for bracket_pair in bracket_pairs:\n        thing(bracket_pair[0],bracket_pair[1])\n\n    def surround(buffer,begin,end):\n        from rp.prompt_toolkit.selection import SelectionState\n        document=buffer.document\n        text=document.text\n        selection_tuples=list(document.selection_ranges())\n        for range in selection_tuples:\n            buffer.document=Document(text=text[:range[0]]+begin+text[range[0]:range[1]+1]+end +text[range[1]+1:],cursor_position=range[0]+1,selection=None)\n            buffer.document._selection=SelectionState(original_cursor_position=range[1]+1,type=document.selection.type)\n        # exec(mini_terminal)\n        # from rp.rp_ptpython.utils import get_jedi_script_from_document\n        # script=get_jedi_script_from_document(document,r_iterm_comm.globa,r_iterm_comm.globa)\n        # script.call_signatures()\n        return bool(selection_tuples)# Returns whether we have a selection\n    def thing2(char):\n        @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event,filter=has_selection):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,char,event):return\n            if not surround(buffer,char,char):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                before_line=document.current_line_before_cursor\n                after_line=document.current_line_after_cursor\n\n                if after.startswith(char) and not before.endswith(char):\n                    buffer.cursor_right()\n                # else:\n                #     buffer.insert_text(char)\n                #     buffer.cursor_left()\n                #     buffer.insert_text(char)\n\n                elif (before and after and before[-1]+after[0] in {"[]","()","{}",",}",",)",",]",\'+)\',\'+,\',\'+}\',\'+]\'}) or (not after_line or not before and not after or before and after and before[-1]in\'(=!#%&*+,-./:;<>^|~\' and after[0]in\')=!#%&*+,-./ :;<>^|~\' or before and after and before[-1]+after[0] in 2*char):\n                    #| --> "|"\n                    #| --> \'|\'\n                    buffer.insert_text(char)\n                    buffer.cursor_left()\n                    buffer.insert_text(char)\n                elif before.endswith(char):\n                    #For splitting strings into two pieces\n                    #(" pressed twice)\n                    #"Hello|World!"  -->  "Hello"|World!"  -->  "Hello"|"World!"\n                    buffer.insert_text(char)\n                    buffer.cursor_left()\n                else:\n                    buffer.insert_text(char)\n\n    for char in \'"\\\'\':\n        thing2(char)\n    @handle(\',\',filter=~vi_mode_enabled&microcompletions_enabled)  \n    def _(event):\n        #Comma event\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\',\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n            #for | in:  --->  for i,e in enumerate(|):\n            buffer.insert_text(\'i,e\')\n            buffer.cursor_right(len(\' in \'))\n            buffer.insert_text(\'enumerate()\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\'for \') and starts_with_any(after_line,\' in]\',\' in)\',\' in}\'):\n            #[x for | in]  --->  [x for i,e in enumerate(|)]\n            buffer.insert_text(\'i,e\')\n            buffer.cursor_right(len(\' in\'))\n            buffer.insert_text(\' enumerate()\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\',\') and after_line.startswith(\',\'):\n            #We prevent from accidently putting in more parenthesis than make sense\n            #x,|,y  --->  x,|,y    (no change)...\n            return\n        if before_line.endswith(\',\') and \\\n            not before_line.endswith(\',,\'):#...however, we do allow ,,,,,,,:   x,,|y  --->  x,,,|y  \n            #y,|x  -->  y,|,x\n            buffer.insert_text(\',\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\'-\'):\n            #Turning the \'-\' into a \'_\' where a \'-\' would be syntactically invalid\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            \n        if after_line.startswith(\',\'):\n            #f(a,b,c|,)   --->   [a,b,c,|)\n            #(don\'t waste commas)\n            buffer.cursor_right()\n            return\n        if not (before_line.endswith(\',\') and after_line.startswith(\']\')):\n            #[x,y|]  -->  [x,y,|]\n            #       AND\n            #[x,y,|]  -->  [x,y,|]\n            #for when I spam the [12,3123,12,31,23,12,31,23,123,1,23,123,12,31,23] and don\'t want accidental \',,\'s\n            buffer.insert_text(\',\')\n            return\n\n    # @handle(\',\')\n    # def thing3(char):\n    #     @handle(char)\n    #     def _(event,filter=~has_selection):# Parenthesis completion\n    #         buffer=event.cli.current_buffer\n    #         document=buffer.document\n    #         before=document.text_before_cursor\n    #         after= document.text_after_cursor\n    #         if before.endswith(\'(\') and after.startswith(\')\'):\n    #             buffer.cursor_right()\n    #         buffer.insert_text(char)\n    # for char in \'!#%&*,./:;<>^|~\':# + and - allready taken\n    #     thing3(char)\n\n    @handle(Keys.Delete)\n    def _(event):\n        event.cli.current_buffer.delete()\n\n    @handle(Keys.ControlSpace)# For commenting\n    def _(event):  # Parenthesis completion\n        # def toggle_comment_on_line(x):\n        #     y=x.lstrip()\n        #     if y.startswith("#"):# Line is commented out\n        #         i=x.find(\'#\')\n        #         return x[:i]+x[i+1:]\n        #     l=len(x)-len(y)\n        #     return l*\' \' +\'#\' + y\n\n        buffer=event.cli.current_buffer\n        # buffer.transform_current_line(toggle_comment_on_line)\n        # buffer.insert_text("ⵁ")\n        # buffer.delete_before_cursor\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        buffer.cursor_left(10000)\n        lstrip=current_line.lstrip()\n        w=len(current_line)-len(lstrip)\n        buffer.cursor_right(w)\n        if current_line.lstrip().startswith(\'#\'):\n            buffer.delete()\n        else:\n            buffer.insert_text(\'#\')\n        buffer.cursor_down()\n    #endregion\n\n    @handle(Keys.ControlT,eager=True)\n    def _(event):\n        """\n        Cursor to top.\n        """\n        event.cli.current_buffer.history_backward()\n    @handle(Keys.ControlB,eager=True)\n    def _(event):\n        """\n        Cursor to top.\n        """\n        event.cli.current_buffer.history_forward()\n\n    @handle(Keys.ControlL)\n    def _(event):\n        """\n        Clear whole screen and render again -- also when the sidebar is visible.\n        """\n        event.cli.renderer.clear()\n    @handle(Keys.F2)\n    def _(event):\n        """\n        Show/hide sidebar.\n        """\n        python_input.show_sidebar = not python_input.show_sidebar\n\n    @handle(Keys.F3)\n    def _(event):\n        """\n        Select from the history.\n        """\n        python_input.enter_history(event.cli)\n\n    @handle(Keys.F4)\n    def _(event):\n        """\n        Toggle between Vi and Emacs mode.\n        """\n        event.cli.vi_state.input_mode = \'vi-navigation\'\n        python_input.vi_mode = not python_input.vi_mode#If we\'re switching out of RP-Emacs, its most likely because we want them good ol\' vim bindings for manipulating text. \n        # print(event.cli.vi_state)\n        # python_input.vi_mode = not python_input.vi_mode\n\n    @handle(Keys.F6)\n    def _(event):\n        """\n        Enable/Disable paste mode.\n        """\n        python_input.paste_mode = not python_input.paste_mode\n\n    @handle(Keys.F1)\n    def _(event):\n        """\n        Enable/Disable mouse mode.\n        """\n        python_input.enable_mouse_support = not python_input.enable_mouse_support\n\n    @handle(Keys.F8)\n    def _(event):\n        """\n        Enable/Disable microcopletions.\n        """\n        python_input.enable_microcompletions = not python_input.enable_microcompletions\n\n    @handle(Keys.F7)\n    def _(event):\n        """\n        Enable/Disable line wraps.\n        """\n        python_input.wrap_lines = not python_input.wrap_lines\n        \n    def number_of_leading_spaces(string):\n        i=0\n        for x in string:\n            if x==\' \':\n                i+=1\n            else:\n                break\n        return i\n    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'\\t\',event):return\n        buffer.insert_text(\'    \')\n        after_line = buffer.document.current_line_after_cursor\n        before_line = buffer.document.current_line_after_cursor\n        # N=number_of_leading_spaces(before_line+after_line)\n        # if not before_line.strip() and N%4:\n            # buffer.insert_text(\' \'*(4-N%4))\n            # return\n        if after_line.lstrip():\n            buffer.cursor_left(4)\n    #region  Ryan Burgert Method\n\n    @handle(Keys.BackTab,filter=IsMultiline())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        # from r import mini_terminal\n        buffer=event.cli.current_buffer\n        after_line = buffer.document.current_line_after_cursor\n        before_line = buffer.document.current_line_before_cursor\n        # flag=before_line.strip() and before_line#has some whitespace characters on it\n        N=min(4,number_of_leading_spaces(before_line+after_line))\n        # i=0\n        if not after_line.strip() and not before_line.strip():\n            for i in range(4):\n                if buffer.document.current_line_before_cursor:\n                    buffer.delete_before_cursor(1)\n\n            return\n        for _ in range(N):\n            try:\n                if buffer.document.current_line.startswith(\' \') or not has_selected_completion(buffer):\n                    flag=False\n                    if not buffer.document.current_line_after_cursor:#Otherwise it might jump to another line if we dont do this first\n                        buffer.cursor_left()\n                        flag=True\n                    buffer.transform_current_line(lambda x:x[1:])\n                    if not flag and buffer.document.current_line_before_cursor.strip():\n                        buffer.cursor_left()\n                # buffer.transform_current_line(lambda x:(x[1:]if x.startswith(\' \'*4)else x.lstrip()))\n                # buffer.transform_current_line(lambda x:(x[4:]if x.startswith(\' \'*4)else x.lstrip()))\n            except:\n                pass# Error migght happen if cursor is in bad place. Not sure what to do about that; but its an edge case so I\'m just gonna squelch it.\n        #endregion\n        # if flag:\n            # buffer.cursor_right(i)\n    from rp import ring_terminal_bell ,text_to_speech\n    def try_to_unindent(buffer,*matching_prefixes):\n        b=buffer\n        current_line = b.document.current_line\n        after_line = b.document.current_line_after_cursor\n        before_line = b.document.current_line_before_cursor\n        before=b.document.text_before_cursor\n        after= b.document.text_after_cursor\n        l=find_level(before,*matching_prefixes)\n        if l is None:\n            # ring_terminal_bell()\n            # text_to_speech(\'a\')\n            return#We\'re at a bit of a loss on what to do here...\n        i=get_indent(current_line)\n        d=len(i)-l\n        L=len(before_line.lstrip())\n        # ring_terminal_bell()\n        buffer.cursor_left(L)\n        buffer.delete_before_cursor(d)\n        buffer.cursor_right(L)\n        # text_to_speech(\'b\')\n    indent_block_matches={\n            \'except\':{\'try\',\'finally\'},#cant add except for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)\n            \'finally\':{\'try\',\'except\',\'else\'},\n            \'else\':{\'if\',\'elif\',\'for\',\'while\',\'except\'},\n            \'elif\':{\'if\'},#cant add elif for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)\n            }\n    def try_to_autounindent(buffer):\n        b=buffer\n        current_line = b.document.current_line\n        after_line = b.document.current_line_after_cursor\n        before_line = b.document.current_line_before_cursor\n        before=b.document.text_before_cursor\n        after= b.document.text_after_cursor\n        if current_line.rstrip().endswith(\':\'):\n            \n            for m in indent_block_matches:\n                if current_line.lstrip().startswith(m):\n                    try_to_unindent(buffer,*indent_block_matches[m])\n                    # text_to_speech(\'c\')\n                    return\n        # text_to_speech(\'d\')\n        return\n\n\n\n    @handle(Keys.ControlJ, filter= ~vi_mode_enabled & ~sidebar_visible & ~has_selection &( ViInsertMode() | EmacsInsertMode()) &HasFocus(DEFAULT_BUFFER) )#& IsMultiline())\n    def _(event):\n        """\n        Behaviour of the Enter key. enter key\n\n        Auto indent after newline/Enter.\n        (When not in Vi navigaton mode, and when multiline is enabled.)\n        """\n        b = event.current_buffer\n        buffer=b\n        if handle_character(buffer,\'\\n\',event):return\n        empty_lines_required = python_input.accept_input_on_enter or 10000\n        text=current_line=after_line=before_line=before=after=above_line=None\n        def refresh_strings_from_buffer():\n            nonlocal text,current_line,after_line,before_line,before,after,above_line\n            text =         b.document.text_after_cursor\n            current_line = b.document.current_line\n            after_line =   b.document.current_line_after_cursor\n            before_line =  b.document.current_line_before_cursor\n            before=        b.document.text_before_cursor\n            after=         b.document.text_after_cursor\n            above_line=    line_above(b)\n        refresh_strings_from_buffer()\n\n        single_line = above_line is None\n        def auto_pass():#try automatically adding a \'pass\' keyword if it helps to avoid a syntax error; return True if we add a \'pass\'\n            if not single_line and not current_line.strip() and above_line.rstrip().endswith(\':\'):\n                #Implicitly add \'pass\' when hitting enter below an if/for/def block (which would otherwise be a syntax error because of the autounindent)\n                buffer.insert_text(\'pass\')\n                refresh_strings_from_buffer()\n                return True\n            return False\n        auto_pass()\n        if before_line.endswith(\' enumerate(\') and after_line.startswith(\')\'):\n            #for i,e in enumerate(|):   --->   for i,e in enumerate(ans):\\n|\n            buffer.insert_text(\'ans\')\n        elif before_line.lstrip()==\'f,\' and not \'f\' in r_iterm_comm.globa:\n            #f,|   --->   for i,e in enumerate(ans):\\n|\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'for i,e in enumerate(ans):\')\n        for end in \')]}\':\n            if current_line.endswith(\',\'+end) and before_line.endswith(\',\') and after_line==end:\n                #print(ans,|)   --->   print(ans|)\n                #[1,2,3,|]      --->   [1,2,3|]\n                #{1,2,3,|}      --->   {1,2,3|}\n                buffer.delete_before_cursor()\n                refresh_strings_from_buffer()\n        # if endswithany(before_line,\',-\',\'(-\',\'[-\',\'{-\'):\n            #A BETTER VERSION OF THIS HAS BEEN MOVED TO MISC TWEAKS WITH A BUG FIX \n            #BUG IN THIS BLOCK: On \\n: ‹(-|10)› –––>  ‹(_10)\\n|›\n            #Completing the \'-\' dash to the underscore variable \'_\' in one of many instances where it makes sense\n            #print(-|) ---> print(_)\\n|\n            # buffer.delete_before_cursor()\n            # buffer.insert_text(\'_\')\n            # refresh_strings_from_buffer()\n        #a line with a sigle letter on it is useless, so let\'s make it useful.\n        #TODO: Make it semantically aware: make \'e\' write \'except\' when in a try block, and \'else\' when in an \'if\' or after a \'for\' block. Same logic SHOULD (but doesn\'t yet) apply to all of these (see below line)\n        if before_line.lstrip()==\'#\':\n            #\'#|\' ---> \'|\'  (so we can hit enter twice to break out of a comment)\n            buffer.delete_before_cursor()\n            return\n        continue_comment=before_line.lstrip().startswith(\'#\')\n        if before_line==\'from \'and after_line==\' import\':\n            #With current completions, which come in the next few \'if\' blocks, we get this:\n            #from | import ---> for _ in ans:\\n\\t\n            buffer.delete_before_cursor(len(\'from \'))\n            buffer.delete(len(\' import\'))\n            buffer.insert_text(\'for  in :\')\n            buffer.cursor_left(len(\' in :\'))\n            refresh_strings_from_buffer()\n\n        if before_line.lstrip()==\'for \'and after_line.rstrip()==\' in :\':\n            #for | in :   --->   for _ in |:   (we don\'t stop here, it eventually goes to "for _ in ans": see the next \'if\' block)\n            buffer.insert_text(\'_\')\n            # buffer.insert_text(\'ans\')\n            # \n            refresh_strings_from_buffer()\n\n        if after_line.rstrip()==\' in :\':\n            buffer.cursor_right(len(\' in \'))\n            # \n            refresh_strings_from_buffer()\n\n        if after_line.rstrip()==\':\':\n            #for spaoddsg in |:   --->   for spaoddsg in ans:\n            spl=before_line.split()\n            if len(spl)==3 and spl[0]==\'for\' and spl[2]==\'in\':\n                buffer.insert_text(\'ans\')\n                # \n                refresh_strings_from_buffer()\n        if not (single_line and token_exists(current_line.strip())):\n            import rp.r_iterm_comm\n            enter_completable_keywords=dict(fo=\'for _ in ans:\',e=\'else:\',t=\'try:\',b=\'break\',c=\'continue\',f=\'finally:\',p=\'pass\',r=\'return\',y=\'yield\',d=\'def _():\',w=\'while True:\',i=\'if True:\')#enter-completion of keywords that don\'t need to take arguments\n            single_line_enabled_keywords={\'fo\',\'f\',\'i\',\'t\',\'d\',\'w\'}-set(rp.r_iterm_comm.globa)\n            keyword=current_line.lstrip()\n            if single_line and before_line and \'class \'.startswith(before_line) and not after_line:\n                #c|   --->  class _:\\n|\n                #cla|   --->  class _:\\n|\n                buffer.delete_before_cursor(100)\n                buffer.insert_text(\'class _:\\n    \')\n                return\n            if (not single_line or keyword in single_line_enabled_keywords) and keyword in enter_completable_keywords:\n                #Examples:\n                #\'e|\' ---> \'else:\\n    |\'\n                #\'t|\' ---> \'try:\\n    |\'\n                #\'r|\' ---> \'return\\n|\'\n                char=current_line.lstrip()\n                replacement=enter_completable_keywords[char]\n                level=lambda candidate:find_level(before,*indent_block_matches[candidate])\n                if replacement==\'else:\':\n                    exl=level(\'except\')\n                    ell=level(\'else\')\n                    if ell is None and exl is not None or exl is not None and exl>ell:\n                        text_to_speech(\'q\')\n                        replacement=\'except:\'\n                if \'_\' in replacement:\n                    if single_line:\n                        replacement=replacement.replace(\'_\',\'ans\')\n                if not \'try\' in text and replacement==\'finally:\':\n                    replacement=\'for _ in ans:\'\n                buffer.delete_before_cursor(len(char))\n                refresh_strings_from_buffer()\n                indent=current_line\n                assert not current_line.strip()\n                # if auto_pass():buffer.insert_text(\'\\n\'+indent)\n                buffer.insert_text(replacement)\n                try_to_autounindent(buffer)   \n                refresh_strings_from_buffer()\n\n            if not after and before.startswith(\'import \') and before.endswith(\', \'):\n                #Sometimes when using my import microcompletions I hit the space key by accident, which causes this:\n                #import w as x,y as z, |\n                #Which is a syntax error. Autocorrect it to:\n                #import w as x,y as z\n                buffer.delete_before_cursor(2)\n            if before_line.lstrip() in (\'def \',\'class \') and current_line.strip() in (\'def ():\',\'def (self):\',\'class :\') :\n                #def |():  --->  \'def ans():\\n|\'  or \'def _():\\n|\' \n                #class |:  --->  class _:\\n|\n                if single_line:\n                    buffer.insert_text(\'ans\')\n                else:\n                    buffer.insert_text(\'_\')\n            #we might have made some changes; refreshing:\n            refresh_strings_from_buffer()\n\n        # if  (after_line.startswith(\'"""\') and before_line.endswith (\'"""\')) or\\\n        #     (after_line.startswith("\'\'\'") and before_line.endswith ("\'\'\'")):\n        #     print("ASOID")\n        #     b.insert_text(\'\\n\')\n        #     return\n        def at_the_end(b):\n            """ we consider the cursor at the end when there is no text after\n            the cursor, or only whitespace. """\n            assert isinstance(b,Buffer)\n            refresh_strings_from_buffer()\n            #region RYAN BURGERT STUFF\n            text=after\n            assert isinstance(text,str)\n            if self_dot_var_equals_var(buffer) or (before_line.lstrip() and not beginswithany(before_line[::-1],\' \',\',\',\':\',\';\',\'{\',\'[\',\'"""\',"\'\'\'") and not \'"""\' in before_line and not "\'\'\'" in before_line and \'(\' in before_line or beginswithany(before_line.lstrip(),\'for \',\'def \',\'lambda \',\'while \',\'with \',\'if \',\'except \',\'try \') or not text or text.split(\'\\n\')[0] in ["):",\']\',\')\',\'}\',\':\']):# Presumably at the end of def( a,b,c,d,e^): where ^ is cursor\n                event.cli.current_buffer.cursor_right(1000000)# Move cursor to end of line then proceed as normal\n                text = b.document.text_after_cursor\n            #endregion\n            return text == \'\' or (text.isspace() and not \'\\n\' in text)\n        if single_line:#single-line commands are entered immediately.\n            if not current_line.rstrip().endswith(\':\') \\\n            and not     endswithany(current_line.lstrip(),\'@\',"\'\'\'",\'"""\') \\\n            and not starts_with_any(current_line.lstrip(),\'@\',"\'\'\'",\'"""\'):\n                b.accept_action.validate_and_handle(event.cli, b)\n                # print("JI")\n                # return\n        # if at_the_end(b):# TODO Stuff here\n            # print("""def a b c d e (enter)\n# ->\n# def a(b,c,d,e):\n# """)\n        if python_input.paste_mode:\n            # In paste mode, always insert text.\n            b.insert_text(\'\\n\')\n\n        elif at_the_end(b) and b.document.text.replace(\' \', \'\').endswith(\'\\n\' * (empty_lines_required - 1)):\n            if b.validate():\n                # When the cursor is at the end, and we have an empty line:\n                # drop the empty lines, but return the value.\n                b.document = Document(\n                    text=b.text.rstrip(),\n                    cursor_position=len(b.text.rstrip()))\n                b.accept_action.validate_and_handle(event.cli, b)\n        else:\n            auto_newline(b)\n            if continue_comment:\n                #\'#Foo|\'-->\'#Foo\\n#|\'\n                buffer.insert_text(\'#\')\n\n\n    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:\n            # Only when the `confirm_exit` flag is set.\n            python_input.confirm_exit and\n            # And the current buffer is empty.\n            cli.current_buffer_name == DEFAULT_BUFFER and\n            not cli.current_buffer.text))\n    def _(event):\n        """\n        Override Control-D exit, to ask for confirmation.\n        """\n        python_input.show_exit_confirmation = True\n\n\n\n\n    @handle(Keys.F5, filter=Condition(lambda cli: python_input.show_sidebar))#Only activate when the sidebar is visible\n    def _(event):\n        from rp.prompt_toolkit.shortcuts import confirm\n        from rp import input_yes_no,clear_terminal_screen\n\n        import rp.rp_ptpython.python_input as rrpi\n\n        clear_terminal_screen()\n        if input_yes_no("Ryan Python\\nPlease Confirm: Are you sure you want to this menu\'s settings (the F2 menu)?\\nIf you choose yes, they\'ll be saved for the next time you boot rp.\\nNote: You can also do this with the \'PT SAVE\' command."):\n            run_arbitrary_code_without_destroying_buffer("PT SAVE",event)\n            print("Saved the F2 menu\'s current settings; you\'ll see them again when you reboot rp!")\n        else:\n            clear_terminal_screen()\n            event.cli.renderer.clear()\n\n    return registry\n\n\ndef load_sidebar_bindings(python_input):\n    """\n    Load bindings for the navigation in the sidebar.\n    """\n    registry = Registry()\n\n    handle = registry.add_binding\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n\n    @handle(Keys.Up, filter=sidebar_visible)\n    @handle(Keys.ControlP, filter=sidebar_visible)\n    @handle(\'k\', filter=sidebar_visible)\n    def _(event):\n        " Go to previous option. "\n        python_input.selected_option_index = (\n            (python_input.selected_option_index - 1) % python_input.option_count)\n\n    @handle(Keys.Down, filter=sidebar_visible)\n    @handle(Keys.ControlN, filter=sidebar_visible)\n    @handle(\'j\', filter=sidebar_visible)\n    def _(event):\n        " Go to next option. "\n        python_input.selected_option_index = (\n            (python_input.selected_option_index + 1) % python_input.option_count)\n\n    @handle(Keys.Right, filter=sidebar_visible)\n    @handle(\'l\', filter=sidebar_visible)\n    @handle(\' \', filter=sidebar_visible)\n    def _(event):\n        " Select next value for current option. "\n        option = python_input.selected_option\n        option.activate_next()\n\n    @handle(Keys.Left, filter=sidebar_visible)\n    @handle(\'h\', filter=sidebar_visible)\n    def _(event):\n        " Select previous value for current option. "\n        option = python_input.selected_option\n        option.activate_previous()\n\n    @handle(Keys.ControlC, filter=sidebar_visible)\n    @handle(Keys.ControlG, filter=sidebar_visible)\n    @handle(Keys.ControlD, filter=sidebar_visible)\n    @handle(Keys.ControlJ, filter=sidebar_visible)\n    @handle(Keys.Escape, filter=sidebar_visible)\n    def _(event):\n        " Hide sidebar. "\n        python_input.show_sidebar = False\n\n    return registry\n\n\ndef load_confirm_exit_bindings(python_input):\n    """\n    Handle yes/no key presses when the exit confirmation is shown.\n    """\n    registry = Registry()\n\n    handle = registry.add_binding\n    confirmation_visible = Condition(lambda cli: python_input.show_exit_confirmation)\n\n    @handle(\'y\', filter=confirmation_visible)\n    @handle(\'Y\', filter=confirmation_visible)\n    @handle(Keys.ControlJ, filter=confirmation_visible)\n    @handle(Keys.ControlD, filter=confirmation_visible)\n    def _(event):\n        """\n        Really quit.\n        """\n        event.cli.exit()\n\n    @handle("n", filter=confirmation_visible)\n    # @handle("N", filter=confirmation_visible)\n    @handle(Keys.Any, filter=confirmation_visible)\n    def _(event):\n        """\n        Cancel exit.\n        """\n        python_input.show_exit_confirmation = False\n\n    return registry\ndiddly=0\n\ndef auto_newline(buffer):\n    r"""\n    Insert \\n at the cursor position. Also add necessary padding.\n    """\n    insert_text = buffer.insert_text\n\n    if buffer.document.current_line_after_cursor:\n        # When we are in the middle of a line. Always insert a newline.\n        insert_text(\'\\n\')\n    else:\n        # Go to new line, but also add indentation.\n        current_line = buffer.document.current_line_before_cursor.rstrip()\n        insert_text(\'\\n\')\n\n        # Unident if the last line ends with \'pass\', remove four spaces.\n        unindent = current_line.rstrip().endswith(\' pass\') or current_line.lstrip().startswith(\'return \') or current_line.lstrip().startswith(\'raise \')  or current_line.strip()==(\'break\') or  current_line.strip()==(\'continue\') or  current_line.strip()==(\'raise\') or  current_line.strip()==(\'pass\')or  current_line.strip()==(\'return\')\n\n        # Copy whitespace from current line\n        current_line2 = current_line[4:] if unindent else current_line\n\n        for c in current_line2:\n            if c.isspace():\n                insert_text(c)\n            else:\n                break\n\n        # If the last line ends with a colon, add four extra spaces.\n        if current_line[-1:] == \':\':\n            for x in range(4):\n                insert_text(\' \')\n\n'
'#TODO on space, if current name is not a function\n#TODO fix autocomplete issues: backspace shouldn\'t erase everything, it should be faster, should highlight callables a different color, should let me immediately search in the middle of a word,3 shouldn\'t be persistent when I hit the enter key and the cursor is no longer on the keyword,\n#TODO add a way to add a space without any of my autocomplete nonsense\n\n#RULES:\n    #Should follow normal typing even (such as import import --> import)\n    #Should not use memory outisde current text (a few exceptions but they\'re exceptions not the rule)\n    #Should be activated on the fringes of useless or invalid syntax\n\n#TODO: Autocomplete "is" and "in" and "is not" and "and" and "or" (and any other alphabetic operators):\n    #When NOT in a string: (WE NEED STRING AREA DETECTION):\n        #On press \'a\': "x |" ---> "x and |"\n        #(because in no other situation would you need that space)\n    #How to handle conflict: "in" vs "is":\n        #Branch prediction: figure out how to predict which one the user uses more often.  #Let\'s say they use \'in\' more often; more specifically, if the variable to the left has a __contains__ function:\n            #On press i: "x |" ---> "x in |"\n        #Let\'s say that the user actually wanted "is". Because of the rule that normal typing should be supported:\n            #On press s: "x in |" ---> "x is |"\n    #Shouldn\'t REALLY be limited to just spaces (should also allow \')\',\']\',\'\')\n\n#Hold alt to make space act normal.\n\n\nfrom __future__ import unicode_literals\nimport re\nfrom rp.prompt_toolkit.document                    import Document\nfrom rp.prompt_toolkit.enums                       import DEFAULT_BUFFER\nfrom rp.prompt_toolkit.filters                     import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\nfrom rp.prompt_toolkit.key_binding.vi_state        import InputMode\nfrom rp.prompt_toolkit.key_binding.registry        import Registry,_Binding\nfrom rp.prompt_toolkit.keys                        import Keys,Key\nfrom rp.prompt_toolkit.buffer                      import Buffer\nfrom rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent\n\ndef get_all_function_names(code:str):        \n    #Return all the names of all functions defined in the given code, in the order that they appear\n    from rp import lrstrip_all_lines,line_split\n    lines=line_split(lrstrip_all_lines(code))\n    import re\n    defs=[line for line in lines if re.fullmatch(r\'\\s*def\\s+\\w+\\s*\\(.*\',line)]\n    func_names=[d[len(\'def \'):d.find(\'(\')].strip() for d in defs]\n    return func_names\n\ndef run_code_without_destroying_buffer(event,put_in_history=True):\n    #Run the code in the buffer without clearing it or destroying cursor position etc\n    buffer=event.cli.current_buffer\n    import rp.r_iterm_comm as ric\n    ric.dont_erase_buffer_on_enter+=[\'DO IT\']\n    buffer.accept_action.validate_and_handle(event.cli, buffer,put_in_history=put_in_history)\n\ndef run_arbitrary_code_without_destroying_buffer(code,event,put_in_history=True):\n    buffer=event.cli.current_buffer\n    original_document=buffer.document\n    buffer.document = Document(text=code)#Temporarily change the text in the buffer\n        # cursor_position=len(\'\'.join(lines_before + reshaped_text)))\n    run_code_without_destroying_buffer(event,put_in_history=put_in_history)\n    buffer.document=original_document#Put the old text/cursor pos/etc back. Dont mutate the buffer\n\ndef handle_run_cell(event):\n    #Happens when we press control+w or alt+w\n    #Run current cell between the boundary prefixes\n    buffer=event.cli.current_buffer\n    def main():\n        text=buffer.document.text\n        cursor_pos=buffer.cursor_position\n        cell_code=get_cell_code(text,cursor_pos,cell_boundary_prefix)\n        from rp import fansi_print\n        # fansi_print("RUNNING CODE CELL:",\'blue\',\'bold\')\n        # fansi_print(cell_code,\'blue\')\n\n        #When we do this, don\'t include that spam in our history...right? Maybe I\'ll change my mind in the future...I can\'t decide...like, it\'s annoying but it\'s truthful...\n        run_arbitrary_code_without_destroying_buffer(cell_code,event,put_in_history=True)#To include or not to include...which one??\n    main()\n\ndef edit_event_buffer_in_vim(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        text=buffer.document.text   \n        from rp import text_file_to_string,temporary_file_path,string_to_text_file\n        import subprocess\n\n        path=temporary_file_path()+\'.py\'\n        string_to_text_file(path,text)\n\n        lineno=document.text_before_cursor.count(\'\\n\')\n        colno=document.cursor_position_col\n\n        #+=1 because vim\'s line/col numbers start at 1, not 0\n        colno+=1\n        lineno+=1\n\n        try:\n            try:\n                subprocess.call(["vim",path,\'+call cursor(%i,%i)\'%(lineno,colno),\'+normal zz\'])#https://stackoverflow.com/questions/3313418/starting-vim-at-a-certain-position-line-and-column-of-a-file\n            except:\n                subprocess.call(["vi",path,\'+call cursor(%i,%i)\'%(lineno,colno),\'+normal zz\'])#If it doesn\'t work with vim, try vi. vi is installed on basically every computer by default (except windows)\n        except FileNotFoundError as error:\n            buffer.insert_text(\'#ERROR: Cant find vim. Are you sure its installed? \'+str(error))\n            return True\n\n        text=text_file_to_string(path)\n\n        from rp import delete_file\n        delete_file(path)\n\n        if text!=\'\':\n            #That means the user saved the file\n            buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n\n        event.cli.renderer.clear()#Refresh the screen\n\n        try:\n            #Attempt to restore the cursor position from vim and use it in rp\n            #I\'m still not 100% sure if this will always work; so for now I\'m going to squelch any errors.\n            import os\n            def get_viminfo():return \'\\n\'.join(open(os.path.expanduser(\'~/.viminfo\'),errors=\'ignore\').readlines())\n            def get_last_cursor_row_in_vim():    return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[ 1]))\n            def get_last_cursor_column_in_vim(): return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[ 2]))\n            def get_last_path_edited_in_vim():   return     os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[-1])\n            from rp import get_file_name\n            if get_file_name(get_last_path_edited_in_vim())==get_file_name(path):\n                #We recently edited the file, and we should attempt to restore the cursor\n                buffer.set_cursor_column(get_last_cursor_column_in_vim())\n                buffer.set_cursor_row(get_last_cursor_row_in_vim()-1 )\n        except:\n            pass\n\ndef split_python_tokens(string,return_tokens=False,ignore_errors=True):\n    #return_tokens is as opposed to returning the strings of those tokens, and thus returning a list of strings (the default behaviour)\n    #if ignore_errors, ignore any parsing errors and keep parsing tokens (return all tokens, even the ones that causes errors such as unterminated strings etc)\n    #EXAMPLES:\n    #    ⮤ split_python_tokens(\'aosid aoisjd aois   j d; \')\n    #    ans = [\'aosid\', \'aoisjd\', \'aois\', \'j\', \'d\', \';\']\n    #    ⮤ split_python_tokens(\' lambda x: 3,1\')\n    #    ans = [\' \', \'lambda\', \'x\', \':\', \'3\', \',\', \'1\', \'\']\n    import tokenize\n    i=iter(string.splitlines())\n    def f():return next(i).encode()\n    token_iterator=tokenize.tokenize(f)\n    tokens=[]\n    while True:\n        try:\n            tokens.append(next(token_iterator))\n        except StopIteration:\n            break\n        except:\n            if ignore_errors:\n                continue\n            else:\n                raise\n    tokens=tokens[1:]#The first and last token are never useful (just begin/end of field tokens. Even tokenizing an empty string would yield these two tokens.)\n    if tokens and tokens[-1].type==tokenize.ENDMARKER:#This token is useless imho. Especially when we\'re trying to return strings split from python tokens. It just adds an empty string to the end of the output. Useless...\n        del tokens[-1]\n    if return_tokens:\n        return tokens\n    else:\n        return [token.string for token in tokens]\n\ndef get_ans():\n    import rp.r_iterm_comm as ric\n    if \'ans\' in ric.globa:\n        return ric.globa[\'ans\']\n    else:\n        return None\n\n\ndef do_vim_copy(string):\n    import rp\n    global _copied_string\n    rp.vim_copy(string)\n    # _copied_string=string\n\ndef do_local_copy(string):\n    import rp\n    global _copied_string\n    rp.local_copy(string)\n    # _copied_string=string\n\ndef do_tmux_copy(string):\n    import rp\n    global _copied_string\n    rp.tmux_copy(string)\n    # _copied_string=string\n\ndef do_vim_paste(buffer,repr_mode=False,commented=None):\n    import rp\n    try:\n        if repr_mode:\n            text=repr(rp.vim_paste())\n        else:\n            text=str(rp.vim_paste())\n\n        if commented is not None:\n            text=commented_string(buffer,text,spaces=commented)\n\n        buffer.insert_text(text)\n    except:\n        pass\n\ndef do_tmux_paste(buffer,repr_mode=False,commented=None):\n    import rp\n    try:\n        if repr_mode:\n            text=repr(rp.tmux_paste())\n        else:\n            text=str(rp.tmux_paste())\n\n        if commented is not None:\n            text=commented_string(buffer,text,spaces=commented)\n\n        buffer.insert_text(text)\n    except:\n        pass\n\ndef do_web_copy(string):\n    import rp\n    global _copied_string\n    rp.web_copy(string)\n    # _copied_string=string\n\ndef do_local_paste(buffer,repr_mode=False):\n    import rp\n    try:\n        if repr_mode:\n            buffer.insert_text(repr(str(rp.local_paste())))\n        else:\n            buffer.insert_text(str(rp.local_paste()))\n    except:\n        pass\ndef do_web_paste(buffer,repr_mode=False):\n    import rp\n    try:\n        if repr_mode:\n            buffer.insert_text(repr(str(rp.web_paste())))\n        else:\n            buffer.insert_text(str(rp.web_paste()))\n    except:\n        pass\n\n_copied_string=""\ndef do_copy(string):\n    import rp\n    global _copied_string\n    rp.string_to_clipboard(string)\n    _copied_string=string\n\ndef commented_string(buffer,string,spaces=0):\n    if isinstance(spaces,int):\n        spaces=\' \'*spaces\n    cursor_column=buffer.document.cursor_position_col\n    string=string.split(\'\\n\')\n    string=[\'#\'+spaces+x for x in string]\n    flag=False\n    for index,line in enumerate(string):\n        if flag:\n            string[index]=\' \'*cursor_column+line\n        flag=True\n    string=\'\\n\'.join(string)\n    return string\n\ndef do_paste(buffer,commented:int=None):\n    import rp\n    string=rp.string_from_clipboard()\n    if commented is not None:string=commented_string(buffer,string,spaces=commented)\n    buffer.insert_text(string)\n\ndef do_string_paste(buffer):\n    import rp\n    buffer.insert_text(repr(rp.string_from_clipboard()))\nimport rp.r_iterm_comm as ric\nenable_space_autocompletions=ric.enable_space_autocompletions#This variable is a list that\'s mutated between being empty and being full, which toggles it\'s truth value. This feature isn\'t completely figured out yet...I suppose it\'s better to disable it for the time being...\n\nfrom rp import *\n__all__ = (\n    \'load_python_bindings\',\n    \'load_sidebar_bindings\',\n    \'load_confirm_exit_bindings\',\n)\nfrom rp import *\n\ndef toggle_top_line_text(buffer,top_line=\'debug()\\n\'):\n    text=buffer.document.text\n    old_cursor_pos=buffer.document.cursor_position\n    buffer.cursor_up(99999)\n    buffer.cursor_left(99999)\n    if text.startswith(top_line):\n        #Delete \'debug()\' from the top\n        buffer.delete(len(top_line))\n        buffer.document=Document(buffer.document.text,old_cursor_pos-len(top_line),buffer.document.selection)\n    else:\n        #Insert \'debug()\' at the top\n        buffer.insert_text(top_line)\n        buffer.document=Document(buffer.document.text,old_cursor_pos+len(top_line),buffer.document.selection)\ndef toggle_bottom_line_text(buffer,bottom_line):\n    def toggled_last_line(string,line):\n        # print()\n        # print("BEFORE:"+repr(string))\n        lines=string.splitlines() or [\'\']\n        if line==lines[-1]:\n            del lines[-1]\n        else:\n            lines.append(line)\n        out=\'\\n\'.join(lines)\n        # print("AFTER:"+repr(out))\n        # print()\n        return out\n    text=buffer.document.text\n    old_cursor_pos=buffer.document.cursor_position\n    new_text=toggled_last_line(text,bottom_line)\n    buffer.document=Document(new_text,min(old_cursor_pos,len(new_text)-1),buffer.document.selection)\n\nn_makes_in_and_s_makes_is=True#This is imperfect and got annoying\ns_makes_is=True#This is imperfect and got annoying\n\ndef text_to_speech(words):\n    try:\n        from rp import text_to_speech\n        text_to_speech(words)\n    except:pass#Who cares if this doesn\'t work, it\'s just for debugging anyway...\n\n\n# alt_updown_speed=\n# def any_key_pressed_prefix(key,buffer):\n#     #This function should include only things that happen during every keystroke. \n#     #If this function returns True, it cancels the rest of the execution. \n#     #This function happens before anything else.\n#     alt_updown_speed=3\n#     return False\n\n\n#region code cells\n#See https://asciinema.org/a/Hwj84iFknDtqIh5Tag2Eug6aj\ncell_boundary_prefix=\'##\'#SETTINGS\ndef separator_boundaries(code,separator_token):\n    #Return cursor positions of the beginning of each boundary, including the start and end of the string\n    #code="""@handle(Keys.ControlU)\n#    def _(event):\n#        +++\n#        +\n#            buffer=event.cli.current_buffer\n#            buffer.insert_text(\'UNDO\')\n#            +++\n#        @handle(Keys.ControlP)\n#        def _(event):\n#            +++  Hello\n#            -\n#            buffer=event.cli.current_buffer\n#+++"""\n    #separator_boundaries(code,\'+++\')  ->  [0, 40, 145, 214, 295, 299]\n    #NOTE THE -1 and len()+1 at either side were originally 0 and len(), but for practicality (executing cells where the cursor is at the beginning or end of the text) I did this as a quick hack.\n     # The examples are slightly different than the current code because of this.\n    return [-1]+[x.span()[0] for x in re.finditer(r\'((?<=(\\n))|^) *\'+re.escape(separator_token),code)]+[len(code)+1]\ndef above_and_below(value,L):\n    #Examples:\n    # ⮤ above_and_below(30,[2, 3, 13, 27, 28, 35, 35, 52, 90, 95])\n    #ans = (28, 35)\n    #\n    # ⮤ above_and_below(4,[1,3,7,8,9])\n    #ans = (3, 7)\n    # ⮤ above_and_below(100,[1,3,7,8,9])\n    #ans = (9, 100)\n    # ⮤ above_and_below(0,[3,7,8,9])\n    #ans = (0, 3)\n    return max((x for x in L if x<=value),default=min(L)),min((x for x in L if x>=value),default=max(L))\ndef get_cell_code(text,cursor_pos,prefix=cell_boundary_prefix):\n    #EXAMPLE:\n    # ⮤ code\n    #ans = @handle(Keys.ControlU)\n    #    def _(event):\n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    #            ###  Hello\n    #            -\n    #            buffer=event.cli.current_buffer\n    ####\n    # ⮤ separator_boundaries(code,\'###\')\n    #ans = [0, 40, 145, 214, 295, 299]\n    # ⮤ get_cell_code(code,30,\'###\')\n    #ans = @handle(Keys.ControlU)\n    #    def _(event):\n    # ⮤ get_cell_code(code,41,\'###\')\n    #ans = \n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    # ⮤ get_cell_code(code,67,\'###\')\n    #ans = \n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    # ⮤ get_cell_code(code,213,\'###\')\n    #ans = \n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    # ⮤ get_cell_code(code,150,\'###\')\n    #ans = \n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    start,end=above_and_below(cursor_pos,separator_boundaries(text,prefix))\n    return text[max(0,start):min(len(text),end)]\n#endregion\n\ndef swap_from_import(line):\n    try:\n        #EXAMPLES:\n        #     >>> swap_from_import(\'   import jugio as gi\')\n        #    ans =    from jugio import\n        #     >>> swap_from_import(\'   from bugg.malo import bees\')\n        #    ans =    import bugg.malo\n        whitespace=line[:len(line)-len(line.lstrip())]\n        line=line[len(whitespace):]\n        items=line.split()\n        items=items[:2]\n        if items[0]==\'from\':\n            items[0]=\'import\'\n        elif items[0]==\'import\':\n            items[0]=\'from\'\n            items.append(\'import \')        \n        line=\' \'.join(items)\n        return whitespace+line\n    except Exception:\n        return line\n\nalign_char=\'→\'\ndef align_lines_to_char(string,char=align_char,space=\' \'):\n    #EXAMPLE:\n    #    SPASTE\n    #    ans = from rp.prompt_toolkit.document →import Document\n    #    from rp.prompt_toolkit.enums →import DEFAULT_BUFFER\n    #    from rp.prompt_toolkit.filters →import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\n    #    from rp.prompt_toolkit.key_binding.vi_state →import InputMode\n    #    from rp.prompt_toolkit.key_binding.registry →import Registry\n    #    from rp.prompt_toolkit.keys →import Keys,Key\n    #    from rp.prompt_toolkit.buffer →import Buffer\n    #    ⮤ print(align(ans))\n    #    from rp.prompt_toolkit.document             import Document\n    #    from rp.prompt_toolkit.enums                import DEFAULT_BUFFER\n    #    from rp.prompt_toolkit.filters              import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\n    #    from rp.prompt_toolkit.key_binding.vi_state import InputMode\n    #    from rp.prompt_toolkit.key_binding.registry import Registry\n    #    from rp.prompt_toolkit.keys                 import Keys,Key\n    #    from rp.prompt_toolkit.buffer               import Buffer\n    assert len(space)==1\n    lines=string.splitlines()\n    while any([char in x for x in lines]):\n        alignto=0\n        for i,line in enumerate(lines):\n            if char in line:\n                alignto=max(line.find(char),alignto)\n        for i,line in enumerate(lines):\n            if char in line:\n                pos=line.find(char)\n                line=line[:pos]+space*(alignto-pos)+(line[pos+1:] if len(line)-1!=pos else \'\')\n                lines[i]=line\n    out=\'\\n\'.join(lines)\n    return out\n\ndef split_def_arguments_into_multiple_lines(single_line_def):    \n    # print("GOT "+repr(single_line_def))\n    #EXAMPLE:\n    #INPUT:  \'def play_chord(*semitones:list,t=1,block=True,sampler=triangle_tone_sampler):\'\n    #OUTPUT:\n    #def play_chord(*semitones:list,\n    #               t=1,\n    #               block=True,\n    #               sampler=triangle_tone_sampler):\n    s=single_line_def\n    try:\n        import re\n        assert re.fullmatch(r\' *def .*: *(#.*)?\',s)\n        l=s.split(\',\')\n        w=l[0].find(\'(\')\n        assert w!=-1\n        o=[]\n        o.append(l.pop(0)+\',\')\n        for _ in range(len(l)):\n            o.append(\' \'+\' \'*w+l.pop(0)+\',\')\n        o=\'\\n\'.join(o)\n        o=o[:-1]\n        return o\n    except Exception as E:\n        return s\n            \ndef keys(root):\n    #Stolen from rinsp_search\n    out=set()\n    try:out.update(dir(root))\n    except:pass\n    try:out.update(root.__dict__)\n    except:pass\n    return sorted(out)\n            \ndef find_all_substring_matches(string,substring):\n    #Return a list of starting indices\n    #https://stackoverflow.com/questions/4664850/how-to-find-all-occurrences-of-a-substring\n    #EXAMPLE:\n    #    ⮤ find_all_substring_matches(\'jojo my jojo its jojo\',\'jojo\')\n    #    ans = [0, 8, 17]\n    return [m.start() for m in re.finditer(re.escape(substring), string)]\ndef token_exists(token_name):\n    from rp import is_namespaceable\n    if not is_namespaceable(token_name):\n        return False#We don\'t want to run eval on anything except tokens...\n    try:\n        eval(token_name,ric.globa)\n        return True\n    except:\n        return False#be on the safe side with space-function completions\ndef token_name_found_of_interest(before_line)->(str,object,bool):\n    from rp import is_namespaceable\n    token_of_interest=name_of_interest=None\n    try:\n        # fansi_print("\\n\\n"+split[-1]+"\\n\\n")\n\n        string=\'\'\n        for char in reversed(before_line):\n            if not (is_namespaceable(char) or char in \'0987654321\') and char not in \'.\':\n                break\n            string=char+string\n        name_of_interest=string\n        # print("HE")\n        token_of_interest=eval(string,r_iterm_comm.globa)  # ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects\n        # print("HOO",token_of_interest)\n        #\n        # for char in string:\n        #     if not char.isalnum() and char not in \'.\' and not is_namespaceable(char):\n        #         string=string.replace(char,\' \')\n        # name_of_interest=string\n        # token_of_interest=eval(string,r_iterm_comm.globa)# ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects\n    except:token_of_interest,name_of_interest,False#No variable called that was found\n    return token_of_interest,name_of_interest,True\ndef starts_with_any(string,*prefixes):\n    for p in prefixes:\n        if string.startswith(p):\n            return True\n    return False\n\ndef cursor_on_string(text,cpos):\n    #NOT accurate, dont put into the main RP library\n    #EXAMPLE:\n    # ⮤ def f(s):\n    #2     print(s)\n    #3     print(\'\'.join([str(int(bool(cursor_on_string(s,i))))for i in  range(len(s))]))\n    #4 \n    #⮤ f(\'hello="Helo"+234\')\n    #hello="Helo"+234   <--- this works well because theresno whitespace between hello and = and "Helo"\n    #0000001111110000\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            try:\n                return isinstance(eval(token),str)\n            except:\n                return False\n        count+=len(token)\n    return False\n\ndef cursor_on_comment(text,cpos,tokens):\n    #NOT accurate, dont put into the main RP library\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            try:\n                return token.startswith(\'#\')\n            except:\n                return False\n        count+=len(token)\n    return False\n\ndef current_token(text,cpos):\n    #NOT accurate, dont put into the main RP library\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            return token\n        count+=len(token)\n    return \'\'\n\ndef true_get_if_in_string_or_comment(before_line,after_line,buffer):\n    #This function IS not totally acurate, becauwe of a hack where I replace whitespace with other characters to trick the tokenizer into keeping cursor positoin relevant\n    text=buffer.document.text#+\' \'#add space to prevent last char from returning false\n    text=text.replace(\' \',\'+\').replace(\'\\n\',\'\\n+\')#Python tokenize gets rid of whitespace and newlines which we need to count but adding +\'s still preserves whats  a string and whats a comment. its a quick cheap hack.\'\n    cpos=buffer.document.cursor_position-1\n    token=current_token(text,cpos)\n    out=False\n    try:\n        if isinstance(eval(token),str):\n            out= True\n    except:pass\n    out=out or token.startswith(\'#\')\n    if out:\n        # print("WAH")\n        return True \n    return False\n\n    # if cursor_on_string(text,cpos) or cursor_on_comment(text,cpos):\n        # print("WAHH")\n        # return True\n    # return False\n    # return \'"\' in before_line and after_line.count(\'"\')==before_line.count(\'"\') or \\\n                                       # "\'" in before_line and after_line.count("\'")==before_line.count("\'") or \\\n                                       # \'#\' in before_line\n\n_previous_after_line=None\n_previous_before_line=None\n_previous_result=False\ndef get_if_in_string_or_comment(before_line,after_line,buffer):\n    if not \'\\n\' in buffer.text:\n        if re.fullmatch(r\'((!|!!|CD |RUN |([A-Z]+ )).*)\',before_line):#Things we want to turn microcompletions off for\n            return True\n    #This function attempts to make an nearly equivalent but faster version of true_get_if_in_string_or_comment\n    global _previous_result,_previous_after_line,_previous_before_line\n    if after_line!=_previous_after_line or\\\n          before_line.count(\'#\')!=_previous_before_line.count(\'#\') or\\\n          before_line.count("\'")!=_previous_before_line.count("\'") or\\\n          before_line.count(\'"\')!=_previous_before_line.count(\'"\'):\n        _previous_result=true_get_if_in_string_or_comment(before_line,after_line,buffer)\n    _previous_after_line =after_line\n    _previous_before_line=before_line\n    return _previous_result \n\n\n_meta_pressed=[]\ndef meta_pressed(clear=True):#This should only be called once per keystroke\n    out=bool(_meta_pressed)\n    if clear:\n        _meta_pressed.clear()\n    return out\n\ndef line_above(buffer):\n    return line_above_document(buffer.document)\n\ndef line_above_document(document):\n    before=document.text_before_cursor\n    if not \'\\n\' in before:\n        return None\n    before_lines=before.split("\\n")\n    return before_lines[-2]\n\n\ndef beginswithany(a,*b):\n    for x in b:\n        if a.startswith(x):\n            return True\n    return False\n\ndef ends_with_namespaceable(s):\n    #      ⮤ ends_with_namespaceable(\'oaisjdoiasd\')\n    # ans = True\n    #  ⮤ ends_with_namespaceable(\'oaisj[doiasd\')\n    # ans = True\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doiasd\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doi4asd\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doi4as5d\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[234234\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'234,oaisj\')\n    from rp import is_namespaceable\n    last_char=\'\'\n    for c in reversed(s):\n        if not is_namespaceable(c) and not c.isnumeric():\n            return not last_char.isnumeric()\n        last_char=c\n    return bool(last_char)\ndef ends_with_number(s):\n    #  ⮤ ends_with_number(\'osdi[f[4\')\n    # ans = True\n    #  ⮤ ends_with_number(\'osdi[f[d4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdiasdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia34534sdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia3asdfasd.4534sdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia3asdfasd.4534sdf.4\')\n    # ans = True\n    from rp import is_namespaceable\n    last_char=\'\'\n    for c in reversed(s):\n        if not c.isnumeric():\n            return not is_namespaceable(c)\n        last_char=c\n    return bool(last_char)\ndef so_far(s):\n    #EXAMPLES:\n    # >> so_far(\'asod jasoidj a: soajdo is\')\n    #ans = \'soajdo is\'\n    # >> so_far(\'asod jasoidj a: soaasd ajdo is\')\n    #ans = \'soaasd ajdo is\'\n    # >> so_far(\'asod jasoidj a:retu\')\n    #ans = \'retu\'\n    i=s.rfind(\':\')\n    s=s[i+1:]\n    s=s.strip()\n    return s\ndef splinterify(x):\n    #For use in regex expression prefixes\n    #EXAMPLES:\n    # >> splinterify(\'hello\')\n    #ans = \'h|he|hel|hell\'\n    # >> splinterify(\'world\')\n    #ans = \'w|wo|wor|worl\'\n    out=[]\n    for i in range(1,len(x)):\n        out.append(x[:i])\n    return \'|\'.join(out)\ndef indent_hiearchy(s:str):\n    """\n    Takes a str such as:\n\'\'\'\ndef hiu(iub):\n    ewq(ojhi)\n    if h:\n        apple\n        hio\n            iuy\n              ioo\'\'\'\n    And returns:\n    [\'              ioo\',\n     \'            iuy\',\n     \'        hio\',\n     \'    if h:\',\n     \'def hiu(iub):\']\n    """\n    o=None\n    for l in reversed(s.splitlines()):\n        if o is None or not l.startswith(o):\n            yield l\n            o=get_indent(l)\n            if not o:\n                break\ndef find_header(code:str,*line_starts:str)->str:\n    #(was originally just find_level, see it\'s purpose)\n    #this function returns the entire line itself instead of just the number of indents\n    #returns None if not in such a block\n    for i,e in enumerate(indent_hiearchy(code)):\n        if starts_with_any(e.lstrip(),*line_starts):\n            return e\n    return None\ndef find_level(code:str,*line_starts:str)->int:\n    #return the unindents needed (assumed to be spaces) to reach block starting with any string from line_starts\n    #returns None if not in such a block\n    header=find_header(code,line_starts)\n    if header is None:\n        return None\n    return len(get_indent(header))\ndef get_indent(line):\n    #returns a string that just contains the line\'s indent\n    return line[:len(line)-len(line.lstrip())]\ndef endswithany(a,*b):\n    for x in b:\n        if a.endswith(x):\n            return True\n    return False\ndef in_class_func_decl(buffer):#can be easily memoized but i wont bother unless its an issue; (prob got bigger probs tbh)\n    document=buffer.document\n    current_line=document.current_line\n    before_line=document.current_line_before_cursor\n    after_line=document.current_line_after_cursor\n    before=document.text_before_cursor\n    after= document.text_after_cursor\n    lines=reversed(before.split(\'\\n\'))\n    indent=get_indent(before_line)\n    for line in lines:\n        if not line.startswith(indent):\n            return line.lstrip().startswith(\'class \')\n    return False\nclass TabShouldInsertWhitespaceFilter(Filter):\n    """\n    When the \'tab\' key is pressed with only whitespace character before the\n    cursor, do autocompletion. Otherwise, insert indentation.\n\n    Except for the first character at the first line. Then always do a\n    completion. It doesn\'t make sense to start the first line with\n    indentation.\n    """\n    def __call__(self, cli):\n        b = cli.current_buffer\n        before_cursor = b.document.current_line_before_cursor\n\n        return bool(b.text and (not before_cursor or before_cursor.isspace()))\n\ndef has_selected_completion(buffer):# If we have a completion visibly selected on the menu\n    return buffer.complete_state and buffer.complete_state.complete_index is not None\nlast_pressed_dash=False\n\n\nclass CommentedParenthesizerAutomator:\n    def __init__(self,\n        upper_marker=\'#\',\n        lower_marker=\'#\',\n        match_indent=True\n        ):\n    # def __init__(self,\n    #     upper_marker=\'#╵\',\n    #     lower_marker=\'#╷\',\n    #     match_indent=True\n    #     ):\n        self.upper_marker=upper_marker\n        self.lower_marker=lower_marker\n        self.match_indent=match_indent#If true, indent the parnthesis comments along with the rest of the code. Otherwise, start the parenthesizer comments at the very beginning of the line\n\n    def parenthezized_line(self,line:str)->str:\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n\n        from rp import parenthesizer_automator\n\n        original_line=line\n\n        if self.match_indent:\n            whitespace=line[:len(line)-len(line.lstrip())]\n            assert line[len(whitespace):]==line.lstrip()\n        else:\n            whitespace=\'\'\n\n        middle_line  =line[len(whitespace):]\n        parenth_lines=parenthesizer_automator(middle_line).splitlines()\n\n        assert len(parenth_lines)==0 or len(parenth_lines)%2,\'Internal logical assertion (this should never fail unless this function is broken) due to the nature of rp.parenthesizer_automator: rp.parenthesizer_automator should always return an odd number of lines, unless it returns 0 lines\'\n        if len(parenth_lines)<=1:\n            return original_line\n\n        upper_lines=parenth_lines[:len(parenth_lines)//2   ]\n        lower_lines=parenth_lines[ len(parenth_lines)//2+1:]\n\n        upper_lines=[(self.upper_marker+(upper_line[len(self.upper_marker):] if len(upper_line)>=len(self.upper_marker) else \'\')) for upper_line in upper_lines]\n        lower_lines=[(self.lower_marker+(lower_line[len(self.lower_marker):] if len(lower_line)>=len(self.lower_marker) else \'\')) for lower_line in lower_lines]\n\n        out_lines=[*upper_lines,middle_line,*lower_lines]\n        out_lines=[whitespace+out_line for out_line in out_lines]\n\n        out=\'\\n\'.join(out_lines)\n\n        return out\n\n    def is_upper_line(self,line:str)->bool:\n        if not isinstance(line,str):return False#Can\'t be an upper line if it\'s not a line...\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n        return line.lstrip().startswith(self.upper_marker) and set(line.strip())<=set(\' #│┌┐\') and set(line)&set(\'│└┘┌┐\')\n\n    def is_lower_line(self,line:str)->bool:\n        if not isinstance(line,str):return False#Can\'t be a lower line if it\'s not a line...\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n        return line.lstrip().startswith(self.lower_marker) and set(line.strip())<=set(\' #│└┘\') and set(line)&set(\'│└┘┌┐\')\n\n    def is_parenthesized_at_line(self,string:str,line_number:int)->bool:\n        #Returns true if there are visible parenthesizer comments above and below the given linenumber in the given string\n        #Check for comments with the right markers above and below that line\n        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)\n\n        if line_number==0:\n            return False #You can\'t have any upper parenthesis if we\'re on the first line\n\n        lines=string.splitlines()\n        try:\n            line_above=lines[line_number-1]\n            line_below=lines[line_number+1]\n            return self.is_lower_line(line_below) and self.is_upper_line(line_above)\n        except IndexError:\n            return False\n\n    def unparenthesized(self,string,line_number)->str:\n        #Remove the parenthesizer comments around a given line number on the given string\n        lines=string.splitlines()\n\n        #Delete all lower lines\n        while True:\n            try:\n                line_below_index=line_number+1\n                line_below=lines[line_below_index]\n                if self.is_lower_line(line_below):\n                    del lines[line_below_index]\n                else:\n                    break\n            except IndexError:\n                break\n\n        #Delete all upper lines\n        line_above_index=line_number-1\n        while line_above_index>=0:\n            try:\n                line_above=lines[line_above_index]\n                if self.is_upper_line(line_above):\n                    del lines[line_above_index]\n                    line_above_index-=1\n                else:\n                    break\n            except IndexError:\n                break\n\n        return \'\\n\'.join(lines)\n\n\n    def parenthesized_at_line(self,string,line_number)->str:\n        #Insert parenthesizer comments around a given line in a string and return the result\n        lines=string.splitlines()\n        line =lines[ line_number]\n        lines=lines[line_number:line_number+1]=self.parenthezized_line(line).splitlines()\n        return \'\\n\'.join(lines)\n        \n    def unparenthesize_buffer(self,buffer)->None:\n        #Remove the parenthesizer comments around the cursor in the given buffer\n        #Delete all lower lines\n        while self.is_lower_line(buffer.document.current_line_below):\n            from rp import random_chance\n            buffer.delete_line_below_cursor()\n\n        #Delete all upper lines\n        while self.is_upper_line(buffer.document.current_line_above):\n            buffer.delete_line_above_cursor()\n\n    def parenthesize_buffer(self,buffer)->None:\n        #Insert parenthesizer comments around the cursor in a given buffer\n        current_line =buffer.document.current_line\n        cursor_column=buffer.document.cursor_position_col\n        buffer.cursor_right(999999)\n        buffer.delete_before_cursor(len(current_line))\n        new_text=self.parenthezized_line(current_line)\n        buffer.insert_text(new_text)\n        if \'\\n\' in new_text:\n            buffer.cursor_up(new_text.count(\'\\n\')//2)\n        buffer.set_cursor_column(cursor_column)\n\n    def buffer_is_parenthesized_at_cursor(self,buffer)->bool:\n        #Returns true if there are visible parenthesizer comments above and below the buffer\'s cursor\n        #Check for comments with the right markers above and below that line\n        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)\n        return self.is_parenthesized_at_line(buffer.document.text,buffer.document.cursor_position_row)\n\n    def buffer_refresh_parenthesization(self,buffer)->None:\n        if self.buffer_is_parenthesized_at_cursor(buffer):\n            #Refresh the parenthesization\n            self.unparenthesize_buffer(buffer)\n            self.parenthesize_buffer(buffer)\n        else:\n            pass\n\n    def buffer_toggle_parenthesization(self,buffer)->None:\n        if self.buffer_is_parenthesized_at_cursor(buffer):\n            self.unparenthesize_buffer(buffer)\n        else:\n            self.parenthesize_buffer(buffer)\n\n\n        \ncommented_parenthesizer_automator=CommentedParenthesizerAutomator()\n\n\n_global_event=None\ndef post_handler(binding:_Binding,event:KeyPressEvent,old_document:Document):\n    #This function should be very lightweight, as it\'s called once after EVERY keystroke in the editor (including ones like control+e which don\'t even modify the text)\n    #I made sure that post_handler is called on every keystroke by modifying input_processor.py and replacing key_bindings.py\'s \'@handle\' with a lambda that also ensures this function is called\n    #Get the pressed char\n    char=event.data\n\n    assert isinstance(char,str)\n\n    #Get information about old_document\n    old_text         = old_document.text\n    old_current_line = old_document.current_line\n    old_after_line   = old_document.current_line_after_cursor\n    old_before_line  = old_document.current_line_before_cursor\n    old_before       = old_document.text_before_cursor\n    old_after        = old_document.text_after_cursor\n    old_above_line   = line_above_document(old_document)\n\n    #Get the buffer and related information\n    buffer=event.cli.current_buffer\n    text=document=current_line=after_line=before_line=before=after=above_line=None\n    def refresh_strings_from_buffer():\n        nonlocal text,document,current_line,after_line,before_line,before,after,above_line\n        document     = buffer.document\n        text         = buffer.document.text\n        current_line = buffer.document.current_line\n        after_line   = buffer.document.current_line_after_cursor\n        before_line  = buffer.document.current_line_before_cursor\n        before       = buffer.document.text_before_cursor\n        after        = buffer.document.text_after_cursor\n        above_line   = line_above(buffer)\n    refresh_strings_from_buffer()\n\n    if text!=old_text:\n        commented_parenthesizer_automator.buffer_refresh_parenthesization(buffer)#This is optimized and only makes changes if nessecary\n\n\ndef handle_character(buffer,char,event=None):\n    #This function should receive all VISIBLE keystrokes (such as \'a\',\'b\',\'c\',\'1\',\'2\',\'3\' but also \' \',\'\\n\',\'.\',\'$\' etc)\n    #But it should NOT receive things like backspace, backtab, or other control keys that aren\'t actually part of the code\n    #If this function returns true it overrides the other code that handles that specific char\n    from rp import is_namespaceable\n    global last_pressed_dash\n    import rp.r_iterm_comm as ric\n    import tokenize\n\n    if False:#No microcompletions\n        buffer.insert_text(char)\n        return True\n\n    text=current_line=after_line=before_line=before=after=above_line=before_tokens=after_tokens=before_line_ends_with_number=None\n    def refresh_strings_from_buffer():\n        nonlocal text,current_line,after_line,before_line,before,after,above_line,before_tokens,after_tokens,before_line_ends_with_number\n        text                = buffer.document.text\n        current_line        = buffer.document.current_line\n        after_line          = buffer.document.current_line_after_cursor\n        before_line         = buffer.document.current_line_before_cursor\n        before              = buffer.document.text_before_cursor\n        after               = buffer.document.text_after_cursor\n        above_line          = line_above(buffer)\n\n        after_tokens        = split_python_tokens(after_line ,True)\n        before_tokens       = split_python_tokens(before_line,True)\n        before_line_ends_with_number=before_tokens and before_tokens[-1].type==tokenize.NUMBER\n    refresh_strings_from_buffer()\n\n    if char==\'\\n\' and after_line in [\'"\',"\'"]:\n        #Even if (especially if) we\'re in a string...\n        #On \\n:  ‹\'|\'›  -/->  ‹\'\\n|\'›\n        #On \\n:  ‹\'|\'›  --->  ‹\'\'\\n|›\n        buffer.cursor_right(100)\n\n    if char==\' \' and meta_pressed(clear=False):\n        buffer.insert_text(\' \')#This should always work\n        meta_pressed(clear=True)\n        return True\n\n    if char==\'v\' and meta_pressed(clear=True):\n        edit_event_buffer_in_vim(event)\n        return True\n\n    if char==\'r\' and meta_pressed(clear=True):\n        run_arbitrary_code_without_destroying_buffer(repr(text),event,put_in_history=True)#To include or not to include...which one??\n        buffer.document=Document(\'\',0,buffer.document.selection)\n        return True\n\n    if char==\'q\' and meta_pressed(clear=True):\n        #Delete all\n        #Equivalent to \\da\n        buffer.document=Document(\'\',0,buffer.document.selection)\n        return True\n\n    if char==\'w\' and meta_pressed(clear=True):\n        handle_run_cell(event)\n        return True\n\n    in_string_or_comment=get_if_in_string_or_comment(before_line,after_line,buffer)\n    if char not in \'\\n\\\'\\"\' and in_string_or_comment:\n        buffer.insert_text(char)#Don\'t do anything but write the damn character lol\n        return True\n\n    if last_pressed_dash and char in \'-=\' and not in_string_or_comment and not after_line.strip() and re.fullmatch(r\' *[a-zA-Z_0-9]+\\_\',before_line):\n        buffer.delete_before_cursor()\n        buffer.insert_text(\'-\')#Trigger \'--\' or \'-=\' indirectly by replacing the \'_\' with a \'-\' where applicable (aka NOT if the user made the _ by typing _ with the shift key. This is one of the rare instances where stateful is OK)\n    if char==\'-\':last_pressed_dash=True\n    else:        last_pressed_dash=False\n\n        \n    if char in \'/\\n\' and before_line.endswith(\'?/\') and not after:\n        #This rule is a HACK to preserve the functionality of ?/\n        #Without this rule, pressing enter after ?/ will turn it into ??\n        if char==\'\\n\':\n            return False\n        #if char==\'/\':\n        #    #Actually this rule isn\'t nessecary...pressing enter on // turns it into ??\n        #    buffer.delete_before_cursor()\n        #    buffer.insert_text(\'?\')\n        #    return True\n    if char==\'/\' and before.endswith(\'???\') and not after:\n        return True\n            \n\n\n\n    if not in_string_or_comment:#This is just for visual purposes, so I can put the lines in a block of code and document ,after_line)it\n      #region ..= and =.. in-place operators\n        if char==\'.\' and before_line.endswith(\'=.\') and not \' \' in before_line.strip() and before_line.count(\'=.\')==1 and not before_line.endswith(\'==.\') and not before_line.endswith(\'!=.\'):\n            #The \'=..\' in-place operator\n            #On \'.\': right=.| --> right=|.right\n            #`right=..cursor` —>  `right=cursor.right`\n            varname=before_line[:-2]\n            varname=varname.strip()\n            buffer.insert_text(varname)\n            buffer.cursor_left(len(varname)+1)\n            return True\n        if char==\'=\' and before_line.endswith(\'..\'):\n            #The \'..=\' in-place operator\n            #On \'=\': cursor..| --> cursor.|=cursor\n            #`cursor..=right` —>  `cursor.right=cursor`\n            varname=before_line[:-2]\n            varname=varname.strip()\n            buffer.delete_before_cursor()\n            buffer.insert_text(varname)\n            buffer.cursor_left(len(varname))\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'.=\')\n            buffer.cursor_left()\n            return True\n      #endregion\n\n      #region pluralize list comprehension (must come before space stoppers)\n        if char==\' \' and (starts_with_any(after_line,\']\',\':\')) and re.fullmatch(r\'((.* for)|(for)) [a-zA-Z_0-9]+ in \',before_line):\n            #[thing(index) for index in |] --->  [thing(index) for index in indices|] #TO BE IMPROVED LATER. THIS IS JUST A PROOF OF CONCEPT RIGHT NOW.\n            name=before_line.rstrip().split(\' \')[-2]\n            from rp import plural_noun,is_singular_noun_of,is_iterable,is_plural_noun,plural_noun\n            refresh_strings_from_buffer()\n            candidates=set(list(ric.globa)) | set(split_python_tokens(before+after))\n            plural_name=plural_noun(name)\n            if plural_name in candidates:#If this succeeds it makes the next loop a lot faster...\n                buffer.insert_text(plural_name)\n                return True\n            for candidate in candidates:#Search all existing known names looking for a plural match to the iterator variable\n                focus_name=name\n                if not is_namespaceable(candidate) or candidate[:2]!=name[:2]:\n                    continue#Speed things up\n                if is_singular_noun_of(name,candidate) and is_plural_noun(candidate):\n                    buffer.insert_text(plural_noun(candidate))\n                    return True\n            if \'\\n\' not in text and after==\']\' and before.count(\'[\')==1:\n                #[x for x in |] --->  [x for x in ans|]\n                buffer.insert_text(\'ans\')\n                return True\n            # buffer.insert_text(plural_noun(name))#If we can\'t find a name that fits, and \'ans\' isn\'t an option, just choose a plural name\n            # return True \n        keywords={\'async\',\'await\',\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\'}\n        from rp import is_namespaceable\n        if char==\' \' and (before_line==\'for \' or before_line.endswith(\' for \')) and starts_with_any(after_line,\' in]\',\'in)\',\'in}\',\' in \'):\n            before_tokens=split_python_tokens(before_line)[:-1]#Get rid of the \'for\'\n            # dont_use_these_tokens=set(split_python_tokens(text))-set(before_tokens)\n            for token in reversed(before_tokens):\n                # if token==\'[\':#Technically correct but returns false negatives\n                    # break#Welp..we failed to find a unique new variable...\n                if is_namespaceable(token) and token not in keywords:\n                    if token not in ric.globa:# and token not in dont_use_these_tokens:\n                        buffer.insert_text(token)\n                        buffer.cursor_right(len(\' in\'))\n                        if not after_line.startswith(\' in \'):\n                            buffer.insert_text(\' \')\n                        return True\n        if char==\' \' and re.fullmatch(r\' *[a-zA-Z_0-9]+\\(\',before_line) and after_line==\')\':\n            for line in before.splitlines()[::-1][1:]:\n                if starts_with_any(line.lstrip(),*\'for if while elif\'.split()):\n                    tokens=split_python_tokens(line.strip())\n                    tokens=[token for token in tokens if is_namespaceable(token) and not token in keywords]\n                    if tokens:\n                        focus_name=tokens[0]\n                        #ON SPACE:\n                        #for focus_name in ans:\n                        #   print(|)\n                        #--->\n                        #for focus_name in ans:\n                        #   print(focus_name,)\n                        buffer.insert_text(focus_name+\',\')\n                        return True\n      #endregion\n\n      #region stopping double-spaces after \'or\', \'and\' etc\n\n        if char==\' \': \n            #TODO Possibly replace the below with something more useful than \'_\', such as the focus in the for loop or ans if there is no focus or perhaps \'True\'\n            if re.fullmatch(r\' *for \',before_line) and re.fullmatch(r\' in : *\',after_line):\n                #`    for | in :  `  --->  `    for _ in |:  `\n                buffer.insert_text(\'_\')\n                buffer.cursor_right(len(\' in \'))\n                refresh_strings_from_buffer()\n            if re.fullmatch(r\' *(if|while) \',before_line) and re.fullmatch(r\': *\',after_line):\n                #`    if |:  `  --->  `    if _ |:  `   --->   `    if _:|  `\n                #`    while |:  `  --->  `    while _ |:  `  --->  `    while _:|  `\n                buffer.insert_text(\'_ \')\n                refresh_strings_from_buffer()\n\n        if char==\' \':\n            partial_correctables=\'or and not for if\'.split(\' \')\n            if before_line.endswith(\']\') and after_line.startswith(\']\'):\n                #  [[[]|]]  --->  [[[]]|]\n                buffer.cursor_right()\n                return True\n            if before_line.endswith(\'[\') and after_line.startswith(\'[\'):\n                #  [[|[[]]]]  --->  [[[|[]]]]\n                buffer.cursor_right()\n                return True\n            for c in partial_correctables:\n                if before_line.strip().startswith(c+\' \'):\n                    continue#We don\'t want `for f in y:` to be messed up\n                if before_line.endswith(\' \'+c+\' \'+c[1:]):\n                    #Leftovers from having \'a\' --> \'and\' or \'o\'-->\'or\' if you just type out the whole thing\n                    #AKA `a ob`-->`a or b` therefore `a or b`-->`a or rb` which is bad...this fixes that:\n                    #  `a or r|` --> `a or |`\n                    #  `a and nd|` --> `a and |`\n                    buffer.delete_before_cursor(len(\' \'+c[1:]))\n                    refresh_strings_from_buffer()\n                    if c in \'for\':\n                        buffer.insert_text(\' \')\n                        return True#[x for or| in] --->  [x for | in]\n                elif before_line.endswith(\' \'+c+\' \'):\n                    return True#Do nothing\n            full_correctables=\'return else or and not in\'.split(\' \')\n            for c in full_correctables:\n                if c==\'in\' and not starts_with_any(after_line,\')\',\'}\',\']\'):\n                    #This block is NOT used for list comprehension aka [x for x in in|]--->[x for x in |]\n                    #It IS used for \'nin\', which stands for \'not in\'\n                    if before_line.endswith(\' \'+c+\' \'+c):\n                        if before_line.lstrip().startswith(\'for \'):\n                            buffer.delete_before_cursor(len(\'in\'))\n                            return True\n                        else:\n                            buffer.delete_before_cursor(len(\'in in\'))\n                            buffer.insert_text(\'not in \')\n                            return True\n                if before_line.endswith(\' \'+c+\' \'+c):\n                    #`x if y else else|` ---> `x if y else |`\n                    buffer.delete_before_cursor(len(\' \'+c))\n                    refresh_strings_from_buffer()\n                # elif before_line.endswith(\' \'+c+\' \'):\n                    # return True#Do nothing\n            if before_line.endswith(\' if \') and starts_with_any(after_line,\'}\',\')\',\']\'):\n                #[x for x in y if |] ---> [x for x in y if |]\n                return True\n            for keyword in \'or and not in is\'.split():\n                if before_line.endswith(\' else \'+keyword):\n                    #`a=x ify and z w` ---> `a=x if y and z else w` \n                    buffer.delete_before_cursor(len(\' \'+keyword))\n                    buffer.cursor_left(len(\' else\'))\n                    buffer.insert_text(\' \'+keyword+\' \')\n                    return True\n            for keyword in \'not in\'.split():\n                if before_line.endswith(keyword) and re.fullmatch(r\' else(([^a-zA-Z0-9_].*)|())\',after_line):\n                    #a=x if not| else z   --->   a=x if not | else z\n                    buffer.insert_text(\' \')\n                    return True\n            if endswithany(before_line,\' in \',\' is \'):\n                #on space: `x in y |` --> `x in y |`\n                #on space: `x is y |` --> `x is y |`\n                if after_line==\':\':\n                    buffer.insert_text(\'ans\')\n                return True\n        if n_makes_in_and_s_makes_is and char==\'t\':\n            if before_line.endswith(\' in o\'):\n                #Because \'n\' --> \'in\', \'not\'-->\'in ot\'\n                #On t: \' in o|\'-->\' not \'\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'not \')\n                return True\n      #endregion\n\n      #region spacebar to commas in lists\n        #TODO: Make this much more general (beyond just lists and numbers) to move it out of the \'misc tweaks\' section\n        if char==\' \':\n            if after_line.startswith(\']\') and re.fullmatch(r\' *[0-9]+\\-? *(\\, *[0-9]+\\-? *)*\\[ *(([^a-zA-Z\\)\\]].*)|())\',before_line[::-1]):#If NOT used as an index but is a list of number literals)\n                # if char==\' \' and after_line.startswith(\']\') and re.fullmatch(r\' *[0-9]+\\-? *(\\, *[0-9]+\\-? *)*\\[ *((nruter)|[\\:\\,\\=]|(dleiy)|(ni )).*\',before_line[::-1]):#<---- Possible alternative regex to the above\n                #When creating list literals with numbers and hitting space, don\'t add a space; add a comma.\n                #This helps when copying down lists of numbers from a piece of paper onto my mac (no numpad) without having to look up to put my fingers back on the right numbers (moving them back from the comma key, which I can\'t use my thumb for)\n                buffer.insert_text(\',\')\n                return True\n            if after_line.startswith(\']]\'):\n                if before_line.endswith(\',\'):\n                    #On space:  [[1,2,3,|]]  --->   [[1,2,3],[|]]\n                    buffer.delete_before_cursor()\n                    buffer.cursor_right()\n                    buffer.insert_text(\',[]\')\n                    buffer.cursor_left()\n                    return True\n                if after_line.startswith(\']]]\') and before_line.endswith(\',[\'):\n                    #On space: [[[1,2,3],[|]]]  --->   [[[1,2,3]],[[|]]]\n                    #(and then by other completions...)   on space:  [[[1,2,3]],[[|]]] -->  [[[1,2,3]],[|]]\n                    buffer.delete_before_cursor(2)\n                    buffer.delete()\n                    buffer.cursor_right()\n                    # n=re.match(r\'^\\]*\',after_line).span()[1]#How many ]\'s does the after_line start with\n                    n=re.match(r\'^\\[\\,\\]*\',before_line[::-1]).span()[1]-1\n                    # assert n>=3#Because in the \'if\' condition, after_line.startswith(\']]]\')\n                    # n-=1\n                    buffer.insert_text(\',\'+n*\'[\'+\']\'*n)\n                    buffer.cursor_left(n)\n                    return True\n        if char==\' \' and before_line.endswith(\'[[\') and after_line.startswith(\']]\'):\n            #On space: [[[|]]]  -->  [[|]]\n            buffer.delete_before_cursor()\n            buffer.delete()\n            return True\n        if char in \' \\n*.+[)},\' and re.fullmatch(r\'.*\\[.* +\',before_line) and after_line.startswith(\']\'):#All the valid characters that might commonly follow a list literal\n            #On space or enter key: [1,2,3, |]      --->   [1,2,3]|\n            #On space or enter key: [1,2,3,     |]  --->   [1,2,3]|\n            #The space between the \'3,\' and the \']\' is important\n            #For all keys except the space key, proceed as usual (don\'t cancel further completions)\n            number_of_spaces=len(before_line)-len(before_line.rstrip())\n            buffer.delete_before_cursor(number_of_spaces)\n            if before_line.rstrip().endswith(\',\'):\n                buffer.delete_before_cursor()#Delete the comma\n            buffer.cursor_right()\n            refresh_strings_from_buffer()\n            if char==\' \':return True#For all keys except the space key, proceed as usual (don\'t cancel further completions)\n\n      #endregion\n\n      #region\n        if char==\'-\':\n            if re.fullmatch(r\'.* for [a-zA-Z_0-9]+\',before_line):\n                #[x for y| in]  --->  [x for y_| in]\n                buffer.insert_text(\'_\')\n                return True\n            if before_line.lstrip().startswith(\'def \') and after_line.strip()==\'):\':\n                try:\n                    if before_tokens[-2].string==\',\':\n                        #ON -: def f(x,y|):  -->  def f(x,y_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-1].string==\',\':\n                        #ON -: def f(x,|):  -->  def f(x,_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-3].string==\'def\':\n                        #ON -: def f(|):  -->  def f(_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-4].string==\'def\':\n                        #ON -: def f(x|):  -->  def f(x,y_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                except IndexError:\n                    #Probably an error getting some index of before_tokens. This is perfectly ok...just ignore it.\n                    pass\n      #endregion\n\n      #region\n        # if ,before_line_ends_with_number:\n        if char==\' \' and before_line_ends_with_number and after_line.startswith(\']\') and len(before_tokens)>=2 and before_tokens[-2].string==\'[\':\n            #ON Space:\n            # a[0|]  --->  a[0][|]\n            buffer.cursor_right()\n            buffer.insert_text(\'[]\')\n            buffer.cursor_left()\n            return True\n        if before_line.endswith(\'[\') and after_line.startswith(\']\'):\n            if char in \'+&^%@<>/,|\' or char==\'=\' and not (len(before_tokens)>=2 and before_tokens[-2].type==tokenize.NAME):#This last part about \'=\' being special is so we can have the \'[=\' operator\n                #Intentionally did not include any \'*.!~-\' as they can be unary operators that go before things. + is also technically a unary operator because \'+5\' is a valid int, but who even does that...\n                #ON +:\n                # a[0][|]  --->  a[0]+|\n                buffer.delete()\n                buffer.delete_before_cursor()\n                buffer.insert_text(char)\n                return True\n      #endregion\n\n      #region\n        # EXAMPLES FOR THIS SECTION:\n        # {a:5}..a\\n   —>   {a:5}[\'a\'] \n        # {a:5}..a..b..c\\n   —>   {a:5}[‘a’][‘b’][‘c’]\n        # {a:5}..a..b..c+5\\n   —>   {a:5}[‘a’][‘b’][‘c’]+5\n        # L..0\\n   —>   L[0]\\n\n        # L.123+    —>  L[123]+\n        # L..123+   —>  L[\'123\']+\n        # L.0.1.2\\n   —>  L[0][1][2]\n        # L.-1\\n    —>   L[-1]\\n\n        # L.1;5\\n  —>  L[1:5]\\n\n        # L.1;5.0\\n   —>  L[1:5][0]\\n\n        # L.0;1.0;;1.-1.0;-1.0;;-1.1;\\n   —>   L[1:1][0::1][-1][0:-1][0::-1][1:]   (first is len 26, second is len33  — so this saved 7 keystrokes)\n        # L.;;3\\n —>  L[::3]\\n\n        # image.;,;,0  —>  image[:,:,0]\n        # “f f x  .y”  —>  f(f(x).y)\n        # “f f x  .5”  —>  f(f(x),.5)\n        # “L.4[5”   —>   L[4][5]\n        # “f f x  .y.0.1..a”   —>  f(f(x).y[0][1][‘a’])\n        # “f f x  .5”  —>   f(f(x),.5)   BUT    “f f x  .a”  —>   f(f(x).a)    AND NOT  “f f x  .a”  —>   f(f(x)[‘a’])\n        # “d f a 8b 8c”   —>  def f(a,*b,**c):\n        # “i.;.;.0”  —>  i[:,:,0]\n        # “i.;,;,0”  —>  i[:,:,0]\n        if before_line.endswith(\').\') and char.isnumeric():\n            #On pressing 5: f(x().|)  --->  f(x(),.5|)  (To conuter a side-effect of one of the next blocks)\n            #“f f x  .y”  —>  f(f(x).y)\n            #“f f x  .5”  —>  f(f(x),.5)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\',.\')\n            refresh_strings_from_buffer()\n        if \'..\' in before_line:\n            i=before_line.rfind(\'..\')\n            key=before_line[i+2:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"\n            if key and not key.isnumeric():\n                do_number_key=key.isnumeric() and not char.isnumeric()#Do a    a..1   --->   a[1] completion  (no quotes)\n                do_string_key=is_namespaceable(key) and key and not is_namespaceable(key+char)#Do a    a..b   --->   a[\'b\'] completion (with quotes)\n                assert not do_number_key or not do_string_key,\'can only do one or the other. this is internal logic this should never break. key=\'+repr(key)\n                if do_number_key or do_string_key:\n                    #Javascript-like x.y ==== x[\'y\'] notation by using \'..\' instead of \'.\'\n                    #Example: On \'+\' (which isn\'t namespaceable):   ..stuff|   --->   ..[\'stuff\']+|\n                    q="\'"*do_string_key\n                    buffer.insert_text(q+"]")\n                    l=len(before_line)-i#Amount we have to move left#Ignore the shift caused by adding "\']" because of buffer.delete_before_cursor(2)\n                    buffer.cursor_left(l-do_number_key)\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text("["+q)\n                    buffer.cursor_right(l-do_number_key)\n        if \'.\' in before_line and char not in \',:-\':\n            i=before_line.rfind(\'.\')\n            key=before_line[i+1:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"\n            before_key=before_line[:i]\n            #someList.5   --->   someList[5]\n            numeric_key_candidate=key.replace(\':\',\'\').replace(\',\',\'\').replace(\'-\',\'\')\n            do_number_key=numeric_key_candidate.isnumeric() and not (char.isnumeric() or (char==\'-\' and not (key and key[-1]==\'-\')))#Do a    a..1   --->   a[1] completion  (no quotes)\n            if char==\';\' and (do_number_key or not numeric_key_candidate):\n                buffer.insert_text(\':\')\n                return True\n            if char==\'.\' and key and not numeric_key_candidate:\n                #Allow for "i.;.;.0"   --->   "i.;,;,0"  -->  "i[:,:,0]"  (have to worry about one less character (can forget about the comma in this particular case. The alternative is to give an invalid completion aka \'i.;.;.0\'  -->  \'i.:[:,0]\'))\n                buffer.insert_text(\',\')\n                return True\n            if do_number_key and numeric_key_candidate and not (not before_key or endswithany(before_key,\',\')) and not ends_with_number(before_key):\n                buffer.insert_text("]")\n                l=len(before_line)-i\n                buffer.cursor_left(l)\n                buffer.delete_before_cursor(1)\n                buffer.insert_text("[")\n                buffer.cursor_right(l)\n            elif char in \'.\\n-+*&^%#/()[]{}@<>=\':\n                refresh_strings_from_buffer()\n               #match=re.match(r\'[0-9\\,\\:]+\\-?\\.[^= ]\',before_line[::-1])\n               #match=re.match(r\'((([0-9]+\\-?)|\\:)(\\,([0-9]+\\-?)|\\:)*)\\-?\\.[^= ]\',before_line[::-1])\n                match=re.match(r\'(((([0-9]+\\-?)|\\:)*)(\\,(([0-9]+\\-?)|\\:)*)*)\\.[^= ]\',before_line[::-1])\n                bad_match=bool(re.match(r\'[0-9]+\\.[0-9]+\'         ,before_line[::-1]))\\\n                  and not bool(re.match(r\'[0-9]+\\.[0-9]+\\-?[a-zA-Z_\\,]\',before_line[::-1]))#Not part of a variale name but we still have before_line ending with something like 34234.32423\n                bad_match=bad_match or\\\n                          bool(re.match(r\'[0-9]+\\.[0-9]*\\-\'       ,before_line[::-1]))\n                bad_match=bad_match or before_line.endswith(\'.\')\n                if match and not bad_match and not re.fullmatch(r\'.*[^\\)\\]a-zA-Z_\\\'\\"][0-9]+\',before_line) and\\\n                             not re.fullmatch(r\'.*[0-9]+\\,\\w*\',before_line):#To fix ‹[.5,.›  -/->  ‹[[.5,].|]›\n                    double_dot=bool(re.match(r\'[0123456789\\,\\:]+\\.\\.\',before_line[::-1]))\n                    start,end=match.span()#Number of digits\n                    assert start==0\n                    assert end>1\n                    buffer.cursor_left(end)\n                    buffer.delete_before_cursor()\n                    if double_dot:buffer.delete_before_cursor()#;print(\'\\n\',end)# x.1.2..3.  -->  x[1][2][\'3\'].;\n                    else:pass#x.1.2.3.4.5.   --->   x[1][2][3][4][5].\n                    buffer.insert_text(\'[\')\n                    if double_dot:buffer.insert_text("\'")\n                    buffer.cursor_right(end)\n                    if double_dot:buffer.insert_text("\'")\n                    buffer.insert_text(\']\')\n                    refresh_strings_from_buffer()\n\n        if char in \'&^+/%|\' and before_line.endswith(\',\') and not get_if_in_string_or_comment(before_line,after_line,buffer):#Not \'-\' because \'-\' can be a prefix for a number\n            #Note: < and > purposely excluded because they\'re commands to swap arguments etc\n            #On +: f(x,y,z,|)  --->  f(x,y,z+|)\n            #“f f x  .y”  —>  f(f(x).y)\n            #“f f x  .5”  —>  f(f(x),.5)\n            buffer.delete_before_cursor()\n            # return False#We should keep going if there are any other completions that could have been trigggered by this\n        if char.isalpha() and before_line.endswith(\',.\'):\n            #On y: f(x,.|)  --->  f(x.y|)\n            buffer.cursor_left()\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n        if char==\',\' and before_line.endswith(\'(\') and after_line.startswith(\')\'):\n            #Spacebar makes f(g(|)) --> f(g,)\n            #So, on \',\': f(g(|))  -->  f(g(),)\n            buffer.cursor_right()\n        if char.isalpha() and not after_line.strip() and before_line.lstrip()==\'2\':\n            #Don\'t need to press shift to make the @ decorator symbol\n            #Example:\n            #\'2memoized\\ndf \' --->   \'@memoized\\ndef f():\'\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'@\')\n        if char.isalpha() and before_line.endswith(\'=.\'):\n            #fixed the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key\n            # On press \'w\' for example:\n            # self=.|   --->   self.w|=  --->  self.w|=w   (and then type foo to get self.foo=foo)\n            buffer.delete_before_cursor()\n            buffer.cursor_left()\n            buffer.insert_text(\'.\')\n            refresh_strings_from_buffer()\n\n      #endregion\n\n      #region async and await\n        if char==\' \' and before_line.lstrip in (\'async\',\'await\') and not after_line.strip():\n            buffer.insert_text(\' \')\n            return True\n      #endregion\n\n\n      #region misc tweaks\n\n        if char==\'\\n\' and not after_line and before_line.endswith(\':\'):\n            buffer.insert_text(\'\\n\'+get_indent(before_line)+\'    \')\n            return True\n        if char==\'=\' and before_line.endswith(\'.\') and after_line.strip():\n            #`if x.=5`   -->  `if x>=5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'>\')\n            refresh_strings_from_buffer()\n        if char==\'=\' and before_line.endswith(\',\') and after_line.strip():\n            #NOTE This is a stylistic, heuristic choice. Technically, \'if x,=y:\' is valid syntax. However, I find that I rarely ever do that. On the flip side, I do `if x<=y` much more often.\n            #`if x,=5`   -->  `if x<=5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'<\')\n            refresh_strings_from_buffer()\n\n        if char==\'\\n\':\n            #A tweak meant to make ]= and )= operators betters\n            if re.fullmatch(r\'[^\\=]+\\=[^\\=]+\',before_line) and \\\n               after_line.startswith(\'(\') or after_line.startswith(\'[\'):\n              #We\'re on the right-hand-side of some assignment...  \n                buffer.cursor_right(999999)#`i)=5\\n`  -/->  `i=i\\n|(5)` INSTEAD `i)=5\\n`  --->  `i=i(5)\\n|`\n            refresh_strings_from_buffer()\n        if char==\' \' and re.fullmatch(r\'.*[\\,\\(](and|or|not|nin|in|is)\',before_line):\n            #With function f: `f x and y` -/->  `f(x,and,y)\n            #With function f: `f x and y` --->  `f(x and y)\n            #Same goes for and,or,not,in,is,etc...\n            for kw in \'and or not nin in is\'.split():\n                if before_line.endswith(kw):\n                    if kw != \'not\':\n                        buffer.cursor_left(len(kw))\n                        refresh_strings_from_buffer()\n                        if not before_line.endswith(\'(\'):\n                            buffer.delete_before_cursor()\n                            buffer.insert_text(\' \')\n                        buffer.cursor_right(len(kw))\n                    buffer.insert_text(\' \')\n                    if kw==\'nin\':\n                        buffer.delete_before_cursor(len(\'nin \'))\n                        buffer.insert_text(\'not in \')\n                    if kw==\'isnt\':\n                        buffer.delete_before_cursor(len(\'isnt \'))\n                        buffer.insert_text(\'is not \')\n                    return True\n        if char==\' \' and re.fullmatch(r\'.*[^\\w]is nt\',before_line):\n            #isn\'t ---> is not \n            #`x isnt y`  -->  `x is not y|`\n            buffer.delete_before_cursor(len(\'is nt\'))\n            buffer.insert_text(\'is not \')\n            return True\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_\':\n            if not after:\n                if before==\'5\':\n                    #`5edit` --->  `%edit` #For ipython magics, turn 5 into % if at the beginning of a line\n                    buffer.delete_before_cursor()\n                    buffer.insert_text(\'%\')\n                elif before==\'55\':\n                    #`55edit` --->  `%%edit` #For ipython magics, turn 5 into % if at the beginning of a line\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text(\'%%\')\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM[({_\' and re.fullmatch(r\'.*[^a-zA-Z_0-9]1\',before_line):\n            if char!=\'j\':#1j is a valid literal. Don\'t destroy it.\n                #Interperet ! or 1 as \'not \'\n                #`x f1y z` --->  `x if not y else z`\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'not \')\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_({[\\\'"\':\n            #8 to * in function calls and lists etc\n            if re.fullmatch(r\'.*[\\(\\[\\{\\,] *8\',before_line):\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'*\')\n                refresh_strings_from_buffer()\n            elif re.fullmatch(r\'.*[\\(\\[\\{\\,] *88\',before_line):\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\'**\')\n                refresh_strings_from_buffer()\n        if char in \'"\\\'\' and re.fullmatch(r\'.*\\*\',before_line) and re.fullmatch(r\'[\\]\\}\\)]\',after_line):\n            #auto Double quotes. Dont know where the other part in this code is and I\'ll make this more coherent later.\n            buffer.insert_text(char)\n            buffer.cursor_left()\n            buffer.insert_text(char)\n            return True\n        if char==\'-\':\n            if re.fullmatch(r\'( )*for [a-zA-Z_]+\',before_line):\n                #`   for abc|`  --->   `   for abc_|`\n                buffer.insert_text(\'_\')\n                return True\n            if re.fullmatch(r\' *(from |import ).*\',before_line):\n                #import thingy-5 as stuff-6   --->  import thingy_5 as stuff_6\n                buffer.insert_text(\'_\')#`from itertools import product as cartesian-` should do _ instead of -\n                return True\n        if char==\'\\n\' and \'\\n\' not in before and \'\\n\' in after:\n            #Fixing a bug in a hacky way: Don\'t enter commands if our cursor is on the first character and we\'re multi-line\n            buffer.insert_text(\'\\n\')\n            return True\n        if char==\'\\n\' and text==\'ans[]\' and after_line==\']\':\n            #THIS IS BROKEN\n            #TODO: Why does this never get triggered?\n            #Space -->  ans[|]  -->  ans\\n   (when we just want to see the answer but hitting space tries to index an array)\n            buffer.delete()\n            buffer.delete_before_cursor()\n        if char in \'.\\n\' and re.fullmatch(r\'[a-zA-Z_]+\\=(\\/)+\',current_line) and after_line==\'\':\n            #On hitting enter, `torch=/`  -->  `torch?`\n            #On hitting enter, `torch=//`  -->  `torch??`\n            #On hitting enter, `torch=///`  -->  `torch???`\n            #On hitting enter, `torch=////`  -->  `torch????`\n            #Because `import torch\\n=/\\n` shows help for torch\n            # print("AOSD")\n            I=0\n            for c in reversed(before_line):\n                if c!=\'/\':\n                    break\n                I+=1\n\n            buffer.delete_before_cursor(len(\'=\')+I)\n            buffer.insert_text(\'?\'*I)\n        if char==\'\\n\' and after==\'\' and before_line.endswith(\';\'):\n            #Insert a new line if we end with \';\' to make life easier\n            #on \'\\n\': `single_line_stuff();|`  --->  `single_line_stuff()\\n|`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'\\n\')\n            return True\n        if (char!=\'=\' and re.fullmatch(r\'.*\\=\',before_line) and not re.fullmatch(r\'.*\\=\\=\',before_line) and starts_with_any(after_line,\']\') and not (len(after_line.strip())==2 and after_line.strip()[1]==\':\')) and not endswithany(before_line,\'==\',\'1=\',\'!=\'):\n            #On a letter or number \'q\':  i[w=|]  -->  i[w]=q\n            if before_line.endswith(\'>=\') or before_line.endswith(\'<=\'):\n                buffer.insert_text(char)\n                return\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(\'=\')\n        any_keyword_regex=r\'False|class|finally|is|return|None|continue|for|lambda|try|True|def|from|nonlocal|while|and|del|global|not|with|as|elif|if|or|yield|assert|else|import|pass|break|except|in|raise\'\n        if char==\'=\' and     re.fullmatch(r\'.*([^\\+\\-\\(\\[\\,\\/\\@\\%\\^\\&\\*\\~\\<\\>\\=]|(([a-zA-Z_0-9]*) +))1\',before_line) \\\n                     and not re.fullmatch(r\'.*(\'+any_keyword_regex+r\') +1\',before_line)\\\n                     and not re.fullmatch(r\'\\s*\\w+\',before_line):#we don\'t want h1=5 to turn into h!=5\n            #`x 1=y` -->  \'x !=y\'\n            #TODO: Check to make sure that variable x1 is not in the text, nor is it in globa scope. Then we can be sure we meant to use != instead of ==, and that it is not just a number literal (we don\'t want 21=  to 2!=)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'!=\')\n            return True\n        if char==\' \' and re.fullmatch(r\' *(from |import ).*\',before_line) and after_line.strip().startswith(\'#\'):\n            buffer.insert_text(\' \')#FIX: on space: `import x as y#Comment|` —> `import x as y#Comment|, ` \n            return True\n        for kw in \'return break yield continue assert\'.split():\n            if char==\' \' and not after_line.strip() and re.fullmatch(r" *(for|while|if|with|try|def|elif|else|except|finally)(( .*\\:)|( *\\:)) *("+splinterify(kw)+")",before_line):\n                assert so_far(before_line) in kw,\'Internal logical assertion should never fail\'\n                buffer.insert_text(kw[len(so_far(before_line)):])\n                refresh_strings_from_buffer()\n                #on space: `if x:re`         -->  `if x:return|`  -->  `if x:return |`\n                #on space: `if x:y`          -->  `if x:yield|`   -->  `if x:yield |`\n                #on space: `with x as y:con  -->  `if x:return|`  -->  `if x:continue |`\n        if char==\' \' and re.fullmatch(r\'.*[\\(\\[\\, ]\\-\',before_line):\n            #if -|:   --->   if _ |:\n            #print(-|)   --->   print(_,|)\n            #print(_,-|)   --->   print(_,_|)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            refresh_strings_from_buffer()\n        if char==\'\\n\' \\\n             and before_line.endswith(\'-\')\\\n             and (re.fullmatch(r\' *[^\\w\\(\\{].*\',after_line) or not after_line.strip())\\\n             and re.fullmatch(r\'(\\s*)|(.*[^\\w\\s]\\s*\\-)\',before_line):\n            #On \\n:   `[_ and -|]`  --->  `[_ and _]\\n\n            #On \\n:   `x and -`  --->  `x and _\n            #On \\n:   `x+-`  --->  `x+-`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            refresh_strings_from_buffer()\n        if char==\' \' and re.fullmatch(\' *for len\',before_line) and re.fullmatch(\' in : *\',after_line):\n            #`   for len| in :`  --->  `   for _ in range(len(|)):`\n            buffer.delete_before_cursor(len(\'len\'))\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in \'))\n            buffer.insert_text(\'range(len())\')\n            buffer.cursor_left(len(\'))\'))\n            return True\n        if char in \'p\' and meta_pressed(clear=True):\n            run_arbitrary_code_without_destroying_buffer(\'PREV\',event,put_in_history=True)\n            return True\n        if char in \'n\' and meta_pressed(clear=True):\n            run_arbitrary_code_without_destroying_buffer(\'NEXT\',event,put_in_history=True)\n            return True\n        if char in \'{([])}\' and meta_pressed(clear=False):\n            #When holding alt, add a ) or ] or } to the end of the line, instead of autocompleting it where it is currently\n            #TODO: Add example\n            if char in \'{([\':\n                buffer.insert_text(char)\n                char={\'(\':\')\',\'[\':\']\',\'{\':\'}\'}[char]\n            meta_pressed(clear=True)\n            # l=after_line.find(\':\')#In the event that we\'re in "for x in func(|thing:" we want "for x in func(|thing):" and not "for x in func(|thing:)"\n            l=len(after_line)-1 if after_line.endswith(\':\') else len(after_line)\n            buffer.cursor_right(l)\n            buffer.insert_text(char)\n            buffer.cursor_left(l+1)\n            return True\n        if char==\'=\' and re.fullmatch(r\' *[\\-][\\)\\]\\.\\+\\*\\&\\%\\@\\>\\<\\/\\[\\(]\',before_line):\n            #  `-+=x`  --->     `_+=x|`\n            #`  -)=f`  --->   `  _=f(_|)`\n            # ` -.=x`  --->    ` _=_.x|`\n            buffer.cursor_left()\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            buffer.cursor_right()\n        if char==\'=\' and re.fullmatch(r\' +[\\-]\',before_line):\n            #`if _:\\n\\t-=5`  --->   `if _:\\n\\t_=5|`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n        if char==\'=\' and re.fullmatch(r\' *\\w+\\(\',before_line) and after_line==\')\':\n            #Fixing the (= operator\n            #`f(=x`   --->   `f=f(x|)`\n            buffer.delete_before_cursor()\n            buffer.delete()\n            buffer.insert_text(\'=\')\n            buffer.insert_text(before_line[:-1].strip())\n            buffer.insert_text(\'()\')\n            buffer.cursor_left()\n            return True\n        if char==\'=\' and before_line.endswith(\'-\') and after_line.strip().endswith(\':\'):\n            #   `if -=5`  --->  `if _=5:`  --->  `if _==5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n        if char in \'<>/%^&@+[,*\' and before_line.endswith(\'-\'):\n            #- is treated like _ when an syntax-breaking operator comes after it\n            #`-*5` --->  `_*5`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n\n        if char==\'=\' and not endswithany(before_line,\'=\',\'>\',\'<\') and after_line.strip().endswith(\':\') and not starts_with_any(before_line.strip(),\'def \'):\n            if before_line.endswith(\'(\') and after_line.startswith(\')\'):\n                #On \'=\': `if f(|):` --->  `if f()==|:`\n                buffer.cursor_right()\n            if before_line.endswith(\',\') and starts_with_any(after_line,*\'])}\'):\n                #On \'=\': `if f(x,|):` --->  `if f(x)==|:`\n                #On \'=\': `if l[i,|]:` --->  `if l[i]==|:`\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n            buffer.insert_text(\'==\')\n            return True\n        if char==\'=\' and endswithany(before_line,\'<=\',\'>=\',\'!=\'):\n            #Drag the >= or <= or !=\n            #`if f(x>==y`  --->  `if f(x)>=y`\n            ending=before_line[-2:]\n            buffer.delete_before_cursor(2)\n            buffer.cursor_right()\n            buffer.insert_text(ending)\n            return True\n        if char in \'<>\' and before_line.endswith(char):\n            #Drag > and <\n            #`if f(x>>y`  --->  `if f(x)>y`\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(char)\n            return True\n        if char==\'\\n\' and after_line==\'):\' and before_line.endswith(\',\') and before_line.strip().startswith(\'def \'):\n            #On enter, `def f(x,|):`  --->  `def f(x):\\n\\t|`\n            buffer.delete_before_cursor()\n        if char==\'\\n\' and before_line.lstrip()==\'d\' and not after_line and in_class_func_decl(buffer):\n            buffer.delete_before_cursor()\n            if not \'__init__\' in before:\n                buffer.insert_text(\'def __init__(self):\')\n            else:\n                buffer.insert_text(\'def _(self):\')\n        if char==\'\\n\' and re.fullmatch(r\'\\s*(from|import)\\s.* as \',before_line):\n            buffer.delete_before_cursor(len(\' as \'))\n        if char.isnumeric() and before_line.endswith(\' for \') and after_line.startswith(\' in\'):\n            #[x f4  --->  [x for x in range(4|)]\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in\'))\n            buffer.insert_text(\' range(\'+char+\')\')\n            buffer.cursor_left()\n            return True\n        if char==\' \' and before==\'from \' and after==\' import\':\n            #On space: `from | import`   --->   `for | in :`\n            buffer.delete(len(after))\n            buffer.delete_before_cursor(len(before))\n            buffer.insert_text(\'for  in :\')\n            buffer.cursor_left(len(\' in :\'))\n            return True\n        if char==\' \' and re.fullmatch(r\'.*[^\\w]not\',before_line) and starts_with_any(after_line,*\')]}\'):\n            #Patch: `print x is not y`  -/->  `print(x is not,y|)`\n            #Patch: `print x is not y`  --->  `print(x is not y|)`\n            buffer.insert_text(\' \')\n            return True\n        if char==\';\' and after_line==\')\':\n            #On ‹;›: ‹print(|)›  -->  ‹print();|›\n            buffer.cursor_right(9999)\n            buffer.insert_text(\';\')\n            return True\n        if char==\' \' and before_line.lstrip()==\'for \' and after_line==\' in :\':\n            #`for | in :` --->  `for _| in :` --->  `for _ in |:`\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in \'))\n            return True\n        if char in \'- \\n\' and starts_with_any(before_line.lstrip(),\'nonlocal \',\'global \',\'del \'):\n            #After nonlocal and global,\n            if char==\'-\':\n                #‹nonlocal -var-name› ---> ‹nonlocal _var_name›\n                #  ‹global -var-name› --->   ‹global _var_name›\n                buffer.insert_text(\'_\')\n                return True\n            if char==\' \':\n                if re.fullmatch(r\'.*\\w\',before_line):\n                    # ‹nonlocal x y z› ---> ‹nonlocal x,y,z›\n                    buffer.insert_text(\',\')\n                    return True\n            if char==\'\\n\' and not after_line.strip():\n                #On enter: ‹global x,y,  |›  --->  ‹global x,y\\n|›\n                if before_line.strip().endswith(\',\'):\n                    while before_line.strip().endswith(\',\'):\n                        buffer.delete_before_cursor()\n                        refresh_strings_from_buffer()\n        if char==\'n\' and before_line.endswith(\',not i\'):\n            #On ‹n›: ‹print(x,not i|)›  --->  ‹print(x not in |)›\n            buffer.cursor_left(len(\'not i\'))\n            buffer.delete_before_cursor()\n            buffer.insert_text(\' \')\n            buffer.cursor_right(len(\'not i\'))\n            buffer.insert_text(\'n \')\n            return True\n        if before and char==\'\\n\' and not after and \'print\'.startswith(before) and not before in ric.globa:\n            #If the variable doesn\'t exist and would cause an error,\n            #Replace something like ‹pri› --->  ‹print(ans)›\n            #Pseudo terminal does this by default without this microcompletion, but it\'s tidier to do it here\n            buffer.delete_before_cursor(99999)\n            buffer.insert_text(\'print(ans)\')\n        if (char.isalpha() or char==\'_\') and before in [\'1\',\'11\']:\n            #‹1ls› --> ‹!ls|›\n            #‹11ls› --> ‹!!ls|›\n            refresh_strings_from_buffer()\n            buffer.delete_before_cursor(len(before))\n            buffer.insert_text(\'!\'*len(before))\n        if char in \'?/\' and before_line.endswith(\'(\') and after==\')\' and not \'\\n\' in text:\n            #On /: some_function(|) --> some_function?|\n            #On ?: some_function(|) --> some_function?|\n            buffer.delete_before_cursor()\n            buffer.delete()\n            buffer.insert_text(\'?\')\n            return True\n        if char==\'/\' and endswithany(before_line,\'??\',\'?/\',\'//\') and not \'\\n\' in text:\n            #‹x///› ---> ‹x?/›\n            #‹x////› ---> ‹x??›\n            #‹x/////› ---> ‹x???›\n            #‹x//////› ---> ‹x????›\n            #‹x///////› ---> ‹x?????›\n            if before_line.endswith(\'?/\'):\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'??\')\n            elif before_line.endswith(\'//\'):\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\'?/\')\n            else:\n                buffer.insert_text(\'?\')\n            return True\n        if (char.isalpha() or char==\'_\') and not \'\\n\' in text and not after and before.endswith(\'/.\'):\n            #On ‹c›: ‹np/.|›  --->  ‹np?.c|›\n            #`np/.conv` --->  `np?.conv`\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'?.\')\n        if char in \'.([?+/*@&|\\n\' and before and not \'\\n\' in before and not after and ric.current_candidates and re.fullmatch(r\'[\\w\\.]*[\\ws]+\',before):\n            #`np.lin.cho.geta.`  --->  `np.linalg.cholesky.__getattribute__.|`\n            if not before_line.isnumeric():\n                current=before_line.split(\'.\')[-1]\n                if (False or current not in ric.current_candidates) and (not char==\'\\n\' or \'.\' in before_line):#If enter key, must have some . in the line to do anything\n                    candidate=ric.current_candidates[0]#First autocompletion candidate\n                    if not \'.\' in before:\n                        buffer.delete_before_cursor(99999)\n                    else:\n                        while not before.endswith(\'.\'):\n                            buffer.delete_before_cursor()\n                            refresh_strings_from_buffer()\n                    buffer.insert_text(candidate)\n        if char==\'\\n\' and not \'\\n\' in text and not after and before.endswith(\'/\') and not before_line.endswith(\'?/\'):\n            #On \\n: ‹thing/›     --->  ‹thing?\\n›\n            #On \\n: ‹thing//›    --->  ‹thing??\\n›\n            #On \\n: ‹thing///›   --->  ‹thing???\\n›\n            #On \\n: ‹thing////›  --->  ‹thing????\\n›\n            i=0\n            while before.endswith(\'/\'):\n                i+=1\n                buffer.delete_before_cursor()\n                refresh_strings_from_buffer()\n            buffer.insert_text(\'?\'*i)\n        if char==\'\\n\' and before_line.lstrip() in {\'while \',\'if \'} and after_line.strip()==\':\':\n            buffer.insert_text(\'True\')\n        if char==\';\' and after_line.startswith(\'}\'):\n            #On ‹;›: ‹{x|}›  --->  ‹x:|›\n            buffer.insert_text(\':\')\n            return True\n        if char==\';\' and after_line.startswith(\')\') and before_line.lstrip().startswith(\'def \'):\n            #On ‹;›: ‹def f(x|):›  --->  ‹def f(x:|):›\n            buffer.insert_text(\':\')\n            return True\n\n        if char==\'-\' and before_line.lstrip().startswith(\'def \') and before_line.endswith(\')\') and after_line==\':\':\n            buffer.insert_text(\'->\')\n            return True\n        if (char==\'-\' or char==\'>\') and before_line.lstrip().startswith(\'def \') and before_line.endswith(\')->\') and after_line==\':\':\n            #Do nothing\n            return True\n\n        if before==\'cd\' and not after and char==\' \':\n            #Allow \'cd thing\' to be \'CD thing\'\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'CD \')\n            return True\n\n        if set(after)<=set(\'])}\') and not \'\\n\' in before:\n            if char==\'\\n\' and before.endswith(\'/\'):\n                # On enter:  ans[5/|]  --->  ans[5]?|\n                buffer.delete_before_cursor()\n                buffer.cursor_right(9999)\n                buffer.insert_text(\'?\')\n                return False\n            if char==\'\\n\' and before.endswith(\'//\'):\n                # On enter:  ans[5//|]  --->  ans[5]??|\n                buffer.delete_before_cursor(2)\n                buffer.cursor_right(9999)\n                buffer.insert_text(\'??\')\n                return False\n            # if char==\'/\' and before.endswith(\'//\'):\n            #     # On /:  ans[5//|]  --->  ans[5]???|\n            #     buffer.delete_before_cursor(2)\n            #     buffer.cursor_right(9999)\n            #     buffer.insert_text(\'???\')\n            #     return True\n            if char==\'?\':\n                # On ?:  ans[5|]  --->  ans[5]?|\n                buffer.cursor_right(9999)\n                return False\n                \n        \n        import rp.r_iterm_comm as ric\n        if char in \'./?=\' and text=="" and ric.successful_commands:\n            last_command=ric.successful_commands[-1]\n            if not \'\\n\' in last_command and not \';\' in last_command:\n                if last_command.startswith(\'from \') or last_command.startswith(\'import \'):\n                    #import numpy\n                    #<on .>\n                    #numpy.|\n                    buffer.insert_text(last_command.split()[-1]+char)\n                    if char==\'=\':\n                        buffer.delete_before_cursor()\n                    return True\n                \n\n        # if char==\' \' and after_line.startswith(\')\') and endswithany(before_line,*\'\\\'"\'):\n        #     #print(\'hello\'|) ---> print(\'hello\',|)\n        #     #print(\'hello\'|) -/-> print(\'hello\' |)\n        #     buffer.insert_text(\',\')\n        #     return True\n\n\n\n\n      #endregion\n    return False\n\n\nans_dot_completion_string=None\n\n\ndef original_ptpython_load_python_bindings(python_input):\n    #THIS IS NOT USED RIGHT NOW. But if this was used instead of load_python_bindings, there would be no microcompletions. Mayybe you want that? I certainly dont.\n    """\n    Custom key bindings.\n    """\n    registry = Registry()\n\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n    handle = registry.add_binding\n    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)\n    # handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)\n    has_selection = HasSelection()\n    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)\n\n    @handle(Keys.ControlL)\n    def _(event):\n        """\n        Clear whole screen and render again -- also when the sidebar is visible.\n        """\n        event.cli.renderer.clear()\n\n    @handle(Keys.F2)\n    def _(event):\n        """\n        Show/hide sidebar.\n        """\n        python_input.show_sidebar = not python_input.show_sidebar\n\n    @handle(Keys.F3)\n    def _(event):\n        """\n        Select from the history.\n        """\n        python_input.enter_history(event.cli)\n\n    @handle(Keys.F4)\n    def _(event):\n        """\n        Toggle between Vi and Emacs mode.\n        """\n        python_input.vi_mode = not python_input.vi_mode\n        print(event.cli.vi_state)\n        event.cli.vi_state.input_mode = \'vi-navigation\'\n\n    @handle(Keys.F6)\n    def _(event):\n        """\n        Enable/Disable paste mode.\n        """\n        python_input.paste_mode = not python_input.paste_mode\n\n    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        event.cli.current_buffer.insert_text(\'    \')\n\n    @handle(Keys.ControlJ, filter= ~sidebar_visible & ~has_selection &\n            (ViInsertMode() | EmacsInsertMode()) &\n            HasFocus(DEFAULT_BUFFER) & IsMultiline())\n    def _(event):\n        """\n        Behaviour of the Enter key.\n\n        Auto indent after newline/Enter.\n        (When not in Vi navigaton mode, and when multiline is enabled.)\n        """\n        b = event.current_buffer\n        empty_lines_required = python_input.accept_input_on_enter or 10000\n\n        def at_the_end(b):\n            """ we consider the cursor at the end when there is no text after\n            the cursor, or only whitespace. """\n            text = b.document.text_after_cursor\n            return text == \'\' or (text.isspace() and not \'\\n\' in text)\n\n        if python_input.paste_mode:\n            # In paste mode, always insert text.\n            b.insert_text(\'\\n\')\n\n        elif at_the_end(b) and b.document.text.replace(\' \', \'\').endswith(\n                    \'\\n\' * (empty_lines_required - 1)):\n            if b.validate():\n                # When the cursor is at the end, and we have an empty line:\n                # drop the empty lines, but return the value.\n                b.document = Document(\n                    text=b.text.rstrip(),\n                    cursor_position=len(b.text.rstrip()))\n\n                b.accept_action.validate_and_handle(event.cli, b)\n        else:\n            auto_newline(b)\n\n    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:\n            # Only when the `confirm_exit` flag is set.\n            python_input.confirm_exit and\n            # And the current buffer is empty.\n            cli.current_buffer_name == DEFAULT_BUFFER and\n            not cli.current_buffer.text))\n    def _(event):\n        """\n        Override Control-D exit, to ask for confirmation.\n        """\n        python_input.show_exit_confirmation = True\n\n    return registry\n\ndef load_python_bindings(python_input):\n    """\n    Author: Ryan Burgert\n    """\n    registry = Registry()\n\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n    # handle = registry.add_binding # <---- OLD CODE\n    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)# <---- NEW CODE: Make sure post_handler is called after every keystroke\n    has_selection = HasSelection()\n    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)\n    # microcompletions_enabled = Condition(lambda cli: True)\n    microcompletions_enabled = Condition(lambda cli: getattr(python_input,\'enable_microcompletions\',False))\n\n    #region Ryan Burgert Stuff\n    from rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent\n    from rp.prompt_toolkit.document import Document\n    #region Template\n    def _(event):# Parenthesis completion\n        #\n        assert isinstance(event,KeyPressEvent)\n        #\n        from rp.prompt_toolkit.buffer import Buffer\n        buffer=event.cli.current_buffer\n        assert isinstance(buffer,Buffer)\n        #\n        document=buffer.document\n        assert isinstance(document,Document)\n        document.insert_after()\n        #\n        text=document.text_after_cursor\n        assert isinstance(text,str)\n        #\n    # buffer.insert_text("(")\n    # if not text or text[0] in " \\t\\n":\n    #     buffer.insert_text(")")\n    #     buffer.cursor_left(count=1)\n#endregion\n    for char in \'\'\'`~!@#$%^&*()-_=+[{]}\\|;:\'",<.>/?\']\'\'\':\n        def go(c):\n            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                buffer.insert_text(c)\n        go(char)\n    for char in \'~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?`1234567890-=qwertyuiop[]\\\\asdfghjkl;\\\'zxcvbnm,./\':# Normal keyboard inputs\n        def go(c):\n            @handle(c,filter=has_selection & ~vi_mode_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                # buffer.on_text_changed+=lambda *x:buffer.save_to_undo_stack(clear_redo_stack=False)\n                buffer.cut_selection()# Overwrite text if we have something selected\n                buffer.insert_text(c)\n        go(char)\n    from rp import regex_match\n    def self_dot_var_equals_var(buffer,char_to_insert=None):\n        #(upon typing foo)\n        #\n        #class x:\n        #   def __init__(foo):\n        #       self.|=\n        #\n        #    --->\n        #\n        #class x:\n        #   def __init__(foo):\n        #       self.foo|=foo\n\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        #Are we donig this shenanagin right now? (Where we do self.foo=foo, and self.bar=bar...etc)\n        if not \'.\' in before_line:return False\n        self=before_line.lstrip()[:before_line.lstrip().find(\'.\')]\n        if not (before_line.lstrip().startswith(self+\'.\') and after_line.lstrip().startswith(\'=\')):\n            return False\n\n        before_var_name=before_line.lstrip()[len(self+\'.\'):]#might be blank, but that\'s OK\n        after_var_name=after_line[1:].strip()\n        # print("\\nbefore_var_name="+before_var_name+\', after_var_name=\'+after_var_name)\n        out=before_var_name==after_var_name\n        var_name=before_var_name#or after_name, makes no difference\n\n        if out and char_to_insert is not None:\n            if char_to_insert ==\'\\b\':\n                if var_name.strip():\n                    assert buffer is not None#internal logic of how you use this function\n                    buffer.delete_before_cursor()\n                    buffer.cursor_right(len(\'=\'+var_name))\n                    buffer.delete_before_cursor()\n                    buffer.cursor_left(len(\'=\'+var_name)-1)\n            else:\n                assert buffer is not None#internal logic of how you use this function\n                buffer.insert_text(char_to_insert)\n                buffer.cursor_right(len(\'=\'+var_name))\n                buffer.insert_text(char_to_insert)\n                buffer.cursor_left(len(char_to_insert))\n                buffer.cursor_left(len(\'=\'+var_name))\n        return out\n    def setting_index(buffer,char):\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        if regex_match(before_line,r\'.*\\[.*=\') and after_line==\']\':\n            #a[b=|]  --->  a[b]=|\n            if before_line.endswith(\'==\'):\n                #But NOT this:\n                #a[b==|]  --->  a[b=]=|\n                return False\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(\'=\'+char)\n            return True\n        return False\n    @handle(\';\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\';\',event):return\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        if after_line.startswith(\']\'):\n            #We can avoid pressing the shift-key here:\n            #L[|]  --->  L[:]\n            buffer.insert_text(\':\')\n        else:\n            buffer.insert_text(\';\')\n        return\n    for char in \'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm_\':#Letter inputs\n            def go(char):\n                @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)\n                def _(event):\n                    buffer=event.cli.current_buffer\n                    if handle_character(buffer,char,event):return\n                    document=buffer.document\n                    current_line=document.current_line\n                    before_line=document.current_line_before_cursor\n                    after_line=document.current_line_after_cursor\n                    before=document.text_before_cursor\n                    after= document.text_after_cursor\n                    if self_dot_var_equals_var(buffer,char) or setting_index(buffer,char):\n                        return\n                    token,name,found=token_name_found_of_interest(before_line)\n                    # print(token,repr(name),found)\n                    if (found and name in (\'9\',\'9j\',\'9J\') or name==\'\') and endswithany(before_line,\'j\',\'J\',\'9\'):\n                        if not (before_line.endswith(\'9\') and char in \'jJ\'):#9j is a legit imaginary literal. That\'s an edge case...\n                            #Tokens can\'t start with a digit and end with a letter. \n                            #So, because of that, we can start a () region by using the 9 key without holding shift\n                            #(Later we\'d want to extend this to quotes, or any other breaking syntax)\n                            #(on press x, for ex)    [9|]  --->   [(x|)]\n                            buffer.delete_before_cursor()\n                            if before_line.lower().endswith(\'j\'):\n                                buffer.delete_before_cursor()\n                            buffer.insert_text(\'(\')\n                            if before_line.lower().endswith(\'j\'):\n                                buffer.insert_text(before_line[-1])\n                            buffer.insert_text(char)\n                            buffer.insert_text(\')\')\n                            buffer.cursor_left()\n                            return\n                    def writing_namespace_breaks_syntax(before_line):\n                        return endswithany(before_line,\' \',#This is like [x |for] (space to the left of |)\n                            \')\',\']\',\'}\',*\'1234567890\',\'"\',"\'")#All of these are breaking syntax...\n                    might_be_in_string_or_comment=\'"\' in before_line and after_line.count(\'"\')==before_line.count(\'"\') or \\\n                                       "\'" in before_line and after_line.count("\'")==before_line.count("\'") or \\\n                                       \'#\' in before_line\n                    keywords={\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\', \'async\', \'await\'}\n                    if before_line.strip() and not might_be_in_string_or_comment:\n                        if not starts_with_any(before_line.lstrip() , \'from \',\'import \'):\n                            i_triggers_ifelse=False\n                            if True:\n                                # if writing_namespace_breaks_syntax(before_line) and char==\'i\' and i_triggers_ifelse and not endswithany(before_line.rstrip(),\'else\',*(keywords-{\'True\',\'False\'})):\n                                #     buffer.insert_text(\'if  else\')\n                                #     buffer.cursor_left(len(\' else\'))\n                                #     return\n                                # if endswithany(before_line,\']i\',\')i\',\'}i\',\'"i\',"\'i",\' i\') and char==\'f\' or char==\'i\':\n                                if before_line.endswith(\'i\') and writing_namespace_breaks_syntax(before_line[:-1]) and char==\'f\' and not (endswithany(before_line[:-1].rstrip(),*(keywords-{\'True\',\'False\'}))) or \\\n                                           i_triggers_ifelse and writing_namespace_breaks_syntax(before_line     ) and char==\'i\' and not (endswithany(before_line     .rstrip(),*(keywords-{\'True\',\'False\'}))):\n                                    #Ternary completion\n                                    # if writing_namespace_breaks_syntax(before_line[:-1]):\n                                        flag=True\n                                        if char==\'i\':\n                                            buffer.insert_text(\'i\')\n                                        if char==\'f\':\n                                            if not before_line[:-1].strip():\n                                                #We don\'t want to complete \'if | else\' on an empty line where we want \'if |:\'\n                                                flag=False\n                                        if flag:\n                                            buffer.insert_text(\'f \')\n                                            if not (starts_with_any(after_line.strip(),\']\',\'}\') and \'for\' in before_line):#This is an imperfect, sloppy check to see if we\'re in a list comprehension and we want \'x for x in y if z\' instead of \'x for x in y if z else\'\n                                                 buffer.insert_text(\' else\')\n                                                 buffer.cursor_left(len(\' else\'))\n                                            return\n                                if before_line.endswith(\'i\') and char==\'n\':\n                                    #Add space after writing \'in\'\n                                    if before_line.strip()!=\'i\':#A blank line starting with \'in\' generally is bad\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +i\',before_line):\n                                            if not (before_line.endswith(\' i\') and endswithany(before_line[:-2],*(set(keywords)-{\'True\',\'False\',\'not\'}))):\n                                                if writing_namespace_breaks_syntax(before_line[:-1]):\n                                                    buffer.insert_text(\'n \')\n                                                    return\n\n                                if before_line.endswith(\'i\') and char==\'s\':\n                                    #Add space after writing \'is\'\n                                    if before_line.strip()!=\'i\':#A blank line starting with \'in\' generally is bad\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +i\',before_line):\n                                            if not (before_line.endswith(\' i\') and endswithany(before_line[:-2],*(set(keywords)-{\'True\',\'False\'}))):\n                                                if writing_namespace_breaks_syntax(before_line[:-1]):\n                                                    buffer.insert_text(\'s \')\n                                                    return\n                                # if char==\'f\':\n                                #     if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,\')\',\'}\',\']\') and not endswithany(before_line.rstrip(),\' in\',\'if\'):\n                                #         #Attempt Comprehension autocompletion\n                                #         #[x |]  --->  [x for | in]\n                                #         #[(a,b)|]  --->  [(a,b)for | in]\n                                #         if re.fullmatch(r\'^.*[a-zA-Z_\\)\\}\\]\\\'\\"] +\',before_line):\n                                #             if not endswithany(before_line.rstrip(),*(\' \'+x for x in keywords)):\n                                #                 buffer.insert_text(\'for  in\')\n                                #                 buffer.cursor_left(len(\' in\'))\n                                #                 return\n                                if char in \'fi\':\n                                    if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,\')\',\'}\',\']\') and not endswithany(before_line.rstrip(),\' in\',\'if\'):\n                                        #Attempt Comprehension autocompletion\n                                        #[x |]  --->  [x for | in]\n                                        #[(a,b)|]  --->  [(a,b)for | in]\n                                        if re.fullmatch(r\'^.*(([a-zA-Z_0-9] +)|([\\)\\}\\]\\\'\\"] *))\',before_line):\n                                            if not endswithany(before_line.rstrip(),*(\' \'+x for x in keywords)):\n                                                if not re.fullmatch(r\'.*for [^\\[\\(\\{]+ in [^\\[\\(\\{]+ \',before_line):\n                                                    if char==\'f\':\n                                                        if not before_line.endswith(\' \'):\n                                                            buffer.insert_text(\' \')#For the sake of aesthetics, [[x] for x in y] looks better than [[x]for x in y]\n                                                        buffer.insert_text(\'for  in\')\n                                                        buffer.cursor_left(len(\' in\'))\n                                                        return\n                                                else:\n                                                    #On press i or f: [x for x in y |] ---> [x for x in y if |]\n                                                    buffer.insert_text(\'if \')\n                                                    # buffer.cursor_left(len(\' else\'))\n                                                    return\n                                if char==\'f\':\n                                    #f-->if\n                                    if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +\',before_line):\n                                        #x=x f|   --->   x=x if | else\n                                        if not endswithany(before_line.strip(),*keywords):\n                                            if not before_line.endswith(\' for \')and not after_line.endswith(\' in\'):\n                                                if not re.match(r\'\\w.*\',after_line):\n                                                    buffer.insert_text(\'if  else\')\n                                                    buffer.cursor_left(len(\' else\'))\n                                                    return\n\n\n\n                            if  not endswithany(before_line.rstrip(),*(keywords-{\'True\',\'False\',\'and\',\'or\',\'not\'})) and writing_namespace_breaks_syntax(before_line):\n                                if not endswithany(before_line.rstrip(),*(keywords-{\'not\',\'True\',\'False\'})):\n                                    if  not endswithany(before_line.rstrip(),*(keywords-{\'True\',\'False\'})):\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +\',before_line):\n                                            if char==\'o\':\n                                                buffer.insert_text(\'or \')\n                                                return\n                                            if char==\'a\':\n                                                buffer.insert_text(\'and \')\n                                                return\n                                # if not endswithany(before_line.rstrip(),*(keywords-{\'and\',\'or\'})):\n                                #     if char==\'t\':\n                                #         buffer.insert_text(\'not \')\n                                #         return\n                                # TODO CORRECTION: \'t\' --> \'not \' should NOT be handled here, this should be handled as a space completion instead. I\'ll do that later...\n                                # n_makes_in_and_s_makes_is=True#This is imperfect and got annoying\n                                if n_makes_in_and_s_makes_is:#This completion is a real trouble-maker for edge cases...\n                                    if char==\'n\' or char==\'s\':\n                                        if before_line.strip() and not (before_line.endswith(\' \') and endswithany(before_line[:-1],*(set(keywords)-{\'not\',\'True\',\'False\'}))):\n                                            if re.fullmatch(r\'.*[\\]\\}\\)\\\'\\"a-zA-Z0-9_] *\',before_line):\n                                                if not re.fullmatch(r\'.*[^a-zA-Z0-9_](if|and|or|not|while|with|else|elif|is|yield) \',before_line):#prevent: return x if not negative  ——> return x if not in egative| else\n                                                    if not re.fullmatch(r\'[0-9]+[a-zA-Z_].*\',before_line[::-1]):#Prevent: nuts2nuts  —>  nuts2 in uts\n                                                        buffer.insert_text(\'in \' if char==\'n\' else \'is \')\n                                                        return\n\n                    if char==\'m\' and meta_pressed(clear=True):\n                        # ⌥ + m ---> MORE\n                        # ⌥ + m twice ---> MMORE\n                        if before_line==\'MORE\':\n                            buffer.cursor_left(4)\n                            buffer.insert_text(\'M\')\n                            buffer.cursor_right(4)\n                            return\n                        if before_line==\'\':\n                            buffer.insert_text(\'MORE\')\n                            return\n                        if before_line==\'MMORE\':\n                            buffer.cursor_left(4)\n                            buffer.delete_before_cursor()\n                            buffer.cursor_right(4)\n                            return\n                    if True:#not \'"\' in after_line and not "\'" in after_line:\n                        #Jump cursor to headers with special commands following the \'\\\' key\n                        #(on press d)\n                        #def f():\n                        #   return\\|\n                        #   --->\n                        #|def f():\n                        #   return\n                        def jump_cursor_to_beginning_of_header(command:str=\'\\\\db\',header:str=\'def \'):\n                            if before_line.endswith(command):\n                                blines=before.splitlines()[:-1]\n                                if any(x.lstrip().startswith(header)for x in blines):\n                                    cline=lambda:buffer.document.current_line\n                                    buffer.cursor_up()\n                                    while not cline().lstrip().startswith(header):\n                                        buffer.cursor_up()\n                                        buffer.cursor_left(99999)\n                                    buffer.cursor_right(99999)\n                                    buffer.cursor_right(len(get_indent(cline())))\n                                    return\n                        # header_jump_commands={\n                        #                  \'\\\\db\':\'def \',\n                        #                  \'\\\\cl\':\'class \',\n                        #                  \'\\\\if\':\'if \',#go ...etc\n                        #                  \'\\\\wh\':\'while \',\n                        #                  \'\\\\wi\':\'with \',\n                        #                  \'\\\\fo\':\'for \',#go f\n                        #                  \'\\\\el\':\'el\'}#go e\n                        header_arg_commands={\n                                             \'\\\\re\':\'replace\',\n                                             \'\\\\py\':\'python\',\n                                             \'\\\\dtl\':\'delete to line\',\n                                             \'\\\\go\':\'goto\',\n                                             \'\\\\lo\':\'load\',\n                                             \'\\\\sa\':\'save\',\n                                             \'\\\\wr\':\'write\',\n                                             \'\\\\ca\':\'cancel\',\n                                             \'\\\\t3pa\':\'tmux_comment_paste\',\n                                             \'\\\\3tpa\':\'tmux_comment_paste\',\n                                             \'\\\\3an\':\'comment_ans\',\n                                             \'\\\\/c\':\'source_code\',\n                                             \'\\\\?c\':\'source_code\',\n                                             }\n                        header_commands={\n                                         \'\\\\sim\':\'sort_imports\',\n                                         \'\\\\bla\':\'black\',\n                                         \'\\\\sg\':\'save_gist\',\n                                         \'\\\\lg\':\'load_gist\',\n                                         \'\\\\co\':\'copy\',\n                                         \'\\\\pa\':\'paste\',\n                                         \'\\\\3pa\':\'comment_paste\',\n                                         \'\\\\vpa\':\'vim_paste\',\n                                         \'\\\\vspa\':\'vim_string_paste\',\n                                         \'\\\\vco\':\'vim_copy\',\n                                         \'\\\\tpa\':\'tmux_paste\',\n                                         \'\\\\tspa\':\'tmux_string_paste\',\n                                         \'\\\\tco\':\'tmux_copy\',\n                                         \'\\\\lpa\':\'local_paste\',\n                                         \'\\\\lspa\':\'local_string_paste\',\n                                         \'\\\\wpa\':\'web_paste\',\n                                         \'\\\\wspa\':\'web_string_paste\',\n                                         \'\\\\rpr\':\'repr\',\n                                         \'\\\\rpa\':\'repr ans\',\n                                         \'\\\\wco\':\'web_copy\',\n                                         \'\\\\ed\':\'editor\',\n                                         \'\\\\vi\':\'vim\',\n                                         \'\\\\al\':\'align_lines\',\n                                         \'\\\\ac\':\'align_char\',\n                                         \'\\\\sw\':\'strip_whitespace\',\n                                         \'\\\\sc\':\'strip_comments\',\n                                         \'\\\\mla\':\'multi line arguments\',\n                                         \'\\\\fo\':\'for\',\n                                         \'\\\\fi\':\'import_from_swap\',\n                                         \'\\\\de\':\'def\',\n                                         \'\\\\wh\':\'while\',\n                                         \'\\\\da\':\'delete all\',\n                                         \'\\\\lss\':\'LSS\',\n                                         \'\\\\lsr\':\'Relative LSS\',\n                                         \'\\\\an\':\'ans\',\n                                         \'\\\\san\':\'string ans\',\n                                         \'\\\\tbp\':\'toggle_big_parenthesis\',\n                                         \'\\\\spa\':\'string_paste\',\n                                         \'\\\\d0l\':\'delete_empty_lines\',\n                                         \'\\\\dtt\':\'delete_to_top\',\n                                         \'\\\\dtb\':\'delete_to_bottom\',\n                                         \'\\\\sl\':\'sort_lines\',\n                                         \'\\\\rl\':\'reverse_lines\',\n                                         \'\\\\ya\':\'yapf autoformat\',\n                                         \'\\\\gg\':\'go to top\',\n                                         \'\\\\GG\':\'go to bottom\',\n                                         \'\\\\vO\':\'vim open up\',\n                                         \'\\\\vo\':\'vim open down\',\n                                         \'\\\\fn\':\'function_name\',\n                                         \'\\\\tts\':\'tabs to spaces\',\n                                         \'\\\\23p\':\'python_2_to_3\',\n                                         \'\\\\db\':\'debug\',\n                                         \'\\\\pu\':\'pudb\',\n                                         \'\\\\wi\':\'workingindex\',\n                                         \'\\\\en\':\'enumerate\',\n                                         }\n                        # header_commands.update(header_jump_commands)\n                        header_commands.update(header_arg_commands)\n\n                        for command,header in header_commands.items():\n                            key=command[-1]\n                            chopped_command=command[:-1]\n                            if before_line.endswith(chopped_command) and char==key:\n                                buffer.delete_before_cursor(len(chopped_command))\n                                # if command in header_jump_commands:\n                                #     jump_cursor_to_beginning_of_header(chopped_command,header)\n                                if command in header_arg_commands and \'`\' in before_line:\n                                    if header==\'replace\':\n                                        #DEMO: Type\n                                        #`foo`bar\\r\n                                        #into the buffer (with a whole bunch of foo\'s which will be turned into bar\'s\')\n                                        if before_line.count(\'`\')==2:#dumb assumption im makin\n                                            arg1=before_line.split(\'`\')[1]\n                                            arg2=before_line.split(\'`\')[2].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg1+\'`\'+arg2+\'`\'))\n                                            text=buffer.document.text.replace(arg1,arg2)\n                                            buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)\n                                    if header==\'cancel\':\n                                        #Cancel whatever command you\'ve written and delete it. Beats having to delete it manually.\n                                        if before_line.count(\'`\')==2:#dumb assumption im makin\n                                            arg1=before_line.split(\'`\')[1]\n                                            arg2=before_line.split(\'`\')[2].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg1+\'`\'+arg2+\'`\'))\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                    if header==\'python\':\n                                         #DEMO: Type        \n                                         #`lambda x:x.replace(\'foo\',\'bar\')\\p\n                                         #into the buffer (with a whole bunch of foo\'s which will be turned into bar\'s\')\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                modifier=eval(arg,r_iterm_comm.globa);text=modifier(text);buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'load\':\n                                        #Load a file into the buffer\n                                        from rp import text_file_to_string, string_to_text_file\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                new_text=text_file_to_string(arg)\n                                                buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'write\':\n                                        #Write a file from the buffer (without asking to overwrite)\n                                        from rp import text_file_to_string, string_to_text_file\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                string_to_text_file(arg,text)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'save\':\n                                        #A safer alternative to write, which will create a backup file if we\'re overwriting it\n                                        from rp import text_file_to_string  , \\\n                                                       string_to_text_file  , \\\n                                                       file_exists          , \\\n                                                       get_parent_directory , \\\n                                                       get_file_name        , \\\n                                                       path_join            , \\\n                                                       get_current_date\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            path=arg\n                                            if file_exists(path):\n                                                try:\n                                                    file_name=get_file_name(path)\n                                                    directory=get_parent_directory(path)\n                                                    backup_path=path_join(directory,\'.\'+file_name+\'.backup.\'+str(get_current_date()).replace(\' \',\'_\')+\'.py\')\n                                                    file_contents=text_file_to_string(path)\n                                                    string_to_text_file(backup_path,file_contents)\n                                                except BaseException as E:\n                                                    buffer.insert_text(\'#Failed to backup file \'+repr(path)+\', aborting the save. (Undo to make me go away). Error: \'+repr(E))\n                                                    return\n                                            buffer.delete_before_cursor(len(path+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                string_to_text_file(path,text)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                                \n                                        header=\'aoisjdaosijdoiasjdaosijd\' #Prevent string ans from triggering\n                                        # else:\n                                            # buffer.insert_text(\'\\\\sa\')#For \'\\san\' for string ans\n\n                                    if header==\'goto\':\n                                        if before_line.count(\'`\')==1:\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                n=int(arg)\n                                                go_to_line_number(n,buffer)\n                                            except Exception as e:\n                                                buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                                pass\n                                    if header==\'delete to line\':\n                                        if before_line.count(\'`\')==1:\n                                            # buffer.insert_text(\'\\n#we: \')\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                _i=current_line_index(buffer)+1\n                                                _n=int(arg)\n                                                if _n<_i:\n                                                    go_to_line_number(_n,buffer)\n                                                for _ in range(abs(_n-_i)+1):\n                                                    delete_current_line(buffer)\n                                            except Exception as e:\n                                                buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                                pass\n                                    # if header==\'delete\':\n                                    #     if before_line.count(\'`\')==1:\n                                    #         arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                    #         buffer.delete_before_cursor(len(arg+\'`\'))\n                                    #         text=buffer.document.text\n                                    #         try:\n                                    #             _i=current_line_index(buffer)\n                                    #             _n=int(arg)\n                                    #             if n<i:\n                                    #                 go_to_line_number(_n,buffer)\n                                    #             for _ in range(abs(_n-_i)+1):\n                                    #                 delete_current_line(buffer)\n                                    #         except Exception as e:\n                                    #             buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                    #             pass\n                                \n                                if header==\'load\' and not \'`\' in before_line:\n                                    from rp import text_file_to_string, string_to_text_file, input_select_file\n                                    try:\n                                        print(end=\'\\033[999B\\n\\033[999D\\n\')#Move the cursor to the bottom left of the screenhttps://tldp.org/HOWTO/Bash-Prompt-HOWTO/x361.html\n                                        arg=input_select_file(message=\'Please select a python file to load into the buffer\')\n                                        new_text=text_file_to_string(arg)\n                                        buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)\n                                    except BaseException as E:\n                                        buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    \n                                if header==\'LSS\':\n                                    #LSS refers to the command \'LSS\' aka \'LS SEL\' in rp\'s pseudo_terminal.\n                                    try:\n                                        import rp\n                                        rp.clear_terminal_screen()\n                                        buffer.insert_text(repr(rp.input_select_path()))\n                                    except:pass\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    \n                                if header==\'Relative LSS\':\n                                    #LSS refers to the command \'LSS\' aka \'LS SEL\' in rp\'s pseudo_terminal.\n                                    try:\n                                        import rp\n                                        rp.clear_terminal_screen()\n                                        buffer.insert_text(repr(rp.get_relative_path(rp.input_select_path())))\n                                    except:pass\n                                    event.cli.renderer.clear()#Refresh the screen\n                                        \n                                if header==\'workingindex\':\n                                    buffer.insert_text(\'#\'+str(buffer.working_index))\n\n                                if header==\'debug\':\n                                    toggle_top_line_text(buffer,"from rp import debug;debug()\\n")\n                                    # toggle_bottom_line_text(buffer,"pip_import(\'sys\').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py\n                                if header==\'pudb\':\n                                    line="from rp import pip_import;pip_import(\'pudb\').set_trace()"\n                                    import rp\n                                    if rp.currently_running_windows():\n                                        line+=\'#WARNING: pudb crashes on windows; it\\\'s unix-only\'\n                                    line+=\'\\n\'\n                                    toggle_top_line_text(buffer,line)\n                                    # toggle_bottom_line_text(buffer,"pip_import(\'sys\').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py\n                                if header==\'align_lines\':\n                                    #Insert the alignment char that cant normally be typed on a keyboard in this app\n                                    text=buffer.document.text\n                                    text=align_lines_to_char(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'align_char\':\n                                    buffer.insert_text(align_char)\n                                    buffer.cursor_left()\n                                if header==\'strip_whitespace\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(line.rstrip() for line in text.split(\'\\n\'))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'import_from_swap\':\n                                    before_line=buffer.document.current_line_before_cursor\n                                    after_line=buffer.document.current_line_after_cursor\n                                    current_line=buffer.document.current_line\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    buffer.insert_text(swap_from_import(current_line))\n                                if header==\'enumerate\':\n                                    def uses_enumerate(line):\n                                        ans=line\n                                        ans=ans.split(\' in \')\n                                        ans=ans[1]\n                                        ans=ans.strip()\n                                        ans=ans.startswith(\'enumerate\')\n                                        return ans\n\n                                    def transform_var(line):\n                                        ans=line\n                                        ans=ans.split(\' in \')\n                                        l=ans\n                                        ans=ans[0]\n                                        ans=ans.strip()\n                                        ans=ans[len(\'for \'):]\n                                        oldvar=ans\n                                        if not ans.isalnum():\n                                            ans=\'(\'+ans+\')\'\n                                        ans=\',\'+ans\n                                        var=ans\n                                        return line.replace(oldvar,var,1)\n                                    def enumeratify(line):\n                                        ans=line.rstrip()\n                                        ans=ans[:ans.find(\' in \')+len(\' in \')]+\'enumerate(\'+ans[ans.find(\' in \')+len(\' in \'):-1]+\'):\'\n                                        return ans\n                                    before_line=buffer.document.current_line_before_cursor\n                                    after_line=buffer.document.current_line_after_cursor\n                                    current_line=buffer.document.current_line\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    buffer.insert_text(swap_from_import(current_line))\n                                    leading_whitespace=current_line[:len(current_line)-len(current_line.lstrip())]\n                                    buffer.cursor_right(9999)\n                                    buffer.delete_before_cursor(len(current_line))\n                                    new_line=transform_var(enumeratify(current_line))\n                                    buffer.insert_text(leading_whitespace+new_line)\n                                    buffer.cursor_left(9999)\n                                    buffer.cursor_right(len(leading_whitespace+\'for \'))\n\n                                if header==\'toggle_big_parenthesis\':\n                                    if not \'\\n\' in before+after:\n                                        #If has a single line, add a new line to avoid a glitch where we get too many parenthesis\n                                        text=buffer.document.text\n                                        buffer.document=Document(buffer.document.text+\'\\n\',min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    commented_parenthesizer_automator.buffer_toggle_parenthesization(buffer)\n                                if header==\'delete_to_top\':\n                                    text=buffer.document.text\n                                    lineno=document.text_before_cursor.count(\'\\n\')\n                                    colno=document.cursor_position_col\n                                    text=text.splitlines()[lineno:]\n                                    text=\'\\n\'.join(text)\n                                    buffer.document=Document(text,colno-len(r\'\\dt\'),buffer.document.selection)\n                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'delete_to_bottom\':\n                                    text=buffer.document.text\n                                    lineno=document.text_before_cursor.count(\'\\n\')\n                                    colno=document.cursor_position_col\n                                    text=text.splitlines()[:lineno+1]\n                                    text=\'\\n\'.join(text)\n                                    buffer.document=Document(text,text.rfind(\'\\n\')+colno-len(r\'\\dt\'),buffer.document.selection)\n                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'delete_empty_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(line for line in text.split(\'\\n\') if line.strip())\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'sort_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(sorted(text.split(\'\\n\')))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'reverse_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(reversed(text.split(\'\\n\')))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'strip_comments\':\n                                    from rp import strip_python_comments\n                                    text=buffer.document.text\n                                    text=strip_python_comments(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'repr\':\n                                    #A shortcut to `repr\\py\n                                    text=buffer.document.text\n                                    buffer.document=Document(repr(text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'black\':\n                                    from rp import pip_import\n                                    try:\n                                        pip_import(\'black\')\n                                        import black\n                                        text=buffer.document.text\n                                        text=black.format_str(text,mode=black.Mode())\n                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#sort_imports: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'sort_imports\':\n                                    from rp import pip_import\n                                    try:\n                                        pip_import(\'isort\')\n                                        import isort\n                                        text=buffer.document.text\n                                        text=isort.code(text)\n                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#sort_imports: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'source_code\':\n                                    #Sets ans=rp.get_source_code(current buffer)\n                                    indent=\'\'\n                                    if before_line.count(\'`\')==1:\n                                        commented_arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                        buffer.delete_before_cursor(len(commented_arg+\'`\'))\n                                        before_line=buffer.document.current_line_before_cursor\n                                        indent=\' \'*(len(before_line)-len(before_line.lstrip()))\n                                        text=commented_arg\n                                    else:\n                                        text=buffer.document.text\n                                        buffer.delete_before_cursor(99999999)\n                                        buffer.delete(99999999)\n                                    try:\n                                        item=eval(text,r_iterm_comm.globa)\n                                        from rp import get_source_code\n                                        code=get_source_code(item)\n                                        code=code.splitlines()\n                                        code=code[::-1]\n                                        code[:-1]=[indent+line for line in code[:-1]] \n                                        code=code[::-1]\n                                        code=\'\\n\'.join(code)\n                                        # buffer.document=Document(code,min(len(code),buffer.document.cursor_position),buffer.document.selection)\n                                        buffer.insert_text(code)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#get_source_code: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'save_gist\':\n                                    #Sets ans=str(current buffer)\n                                    text=buffer.document.text\n                                    text=repr(text)\n                                    text=\'from rp import save_gist;ans=save_gist(%s)\'%text\n                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??\n                                if header==\'load_gist\':\n                                    from rp import load_gist\n                                    text=buffer.document.text\n                                    try:\n                                        try:\n                                            text=load_gist(text)\n                                        except Exception:\n                                            text=\'git.io/\'+text\n                                            text=load_gist(text)\n                                    except Exception:\n                                        text=\'#Failed to load gist at specified url\'\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'repr ans\':\n                                    #Sets ans=str(current buffer)\n                                    text=buffer.document.text\n                                    text=repr(text)\n                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??\n                                if header==\'tabs to spaces\':\n                                    text=buffer.document.text\n                                    text=text.replace(\'\\t\',\'    \')\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'function_name\':\n                                    #Insert the current function\'s name\n                                    func_names=get_all_function_names(buffer.document.text_before_cursor)\n                                    buffer.insert_text(func_names[-1] if func_names else \'\')\n                                if header==\'python_2_to_3\':\n                                    text=buffer.document.text\n                                    from rp import python_2_to_3\n                                    text=python_2_to_3(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'while\':\n                                    text=buffer.document.text\n                                    text=\'while True:\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,10,buffer.document.selection)\n                                if header==\'for\':\n                                    text=buffer.document.text\n                                    text=\'for  in :\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,4,buffer.document.selection)\n                                if header==\'def\':\n                                    text=buffer.document.text\n                                    text=\'def ():\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,4,buffer.document.selection)\n                                if header==\'go to top\':\n                                    buffer.cursor_up(1000000)\n                                if header==\'go to bottom\':\n                                    buffer.cursor_down(1000000)\n                                if header==\'vim open down\':\n                                    buffer.delete_before_cursor()\n                                    buffer.cursor_up()\n                                    buffer.cursor_right(1000000)\n                                    buffer.insert_text(\'\\n\'+get_indent(current_line))\n                                if header==\'vim open up\':\n                                    buffer.delete_before_cursor()\n                                    buffer.cursor_left(1000000)\n                                    buffer.insert_text(\'\\n\')\n                                    buffer.cursor_up()\n                                    buffer.insert_text(get_indent(current_line))\n                                if header==\'multi line arguments\':\n                                    #Meant to split a def(x,y,z,w,asd,as,das,d,asd,aoisdaiosdiasidasd,as,d,asd,a,sd,as,da,sd,as,da,sd,asd,): onto multiple lines to make it more readable. see split_def_arguments_into_multiple_lines\'s documentation for an example.\n                                    before_line=before_line[:-3]#get rid of the \\ml\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    # print("\\n\\n\\n"+before_line+after_line+\'\\n\\n\\n\')\n                                    new_def=split_def_arguments_into_multiple_lines(before_line+after_line)\n                                    # print("THEN")\n                                    # print("\\n\\n\\n"+new_def+\'\\n\\n\\n\')\n                                    # print("END")\n                                    # print(new_def)\n                                    buffer.insert_text(new_def)\n                                if header==\'local_copy\':\n                                    import rp\n                                    do_local_copy(buffer.document.text)\n                                if header==\'vim_copy\':\n                                    import rp\n                                    do_vim_copy(buffer.document.text)\n                                if header==\'tmux_copy\':\n                                    import rp\n                                    do_tmux_copy(buffer.document.text)\n                                if header==\'web_copy\':\n                                    import rp\n                                    do_web_copy(buffer.document.text)\n                                if header==\'copy\':\n                                    import rp\n                                    do_copy(buffer.document.text)\n                                if header==\'editor\':\n                                    text=buffer.document.text   \n                                    try:\n                                        from rp import pip_import\n                                        editor=pip_import(\'editor\')\n                                        text=editor.edit(contents=text,use_tty=True,suffix=\'.py\').decode()\n                                        buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                        event.cli.renderer.clear()#Refresh the screen\n                                    except ImportError:\n                                        buffer.insert_text("#ERROR: Cannot import \'editor\'. Try pip install python-editor")\n                                if header==\'vim\':\n                                    edit_event_buffer_in_vim(event)\n                                if header==\'save\' or header==\'string ans\':#header==\'save\' because of the conflict of \\sa in the dict\n                                    buffer.insert_text(repr(str(get_ans())))\n                                if header==\'ans\':\n                                    buffer.insert_text(str(get_ans()))\n\n                                if header==\'web_string_paste\'   : do_web_paste(buffer,repr_mode=True)\n                                if header==\'tmux_string_paste\'  : do_tmux_paste(buffer,repr_mode=True)\n                                if header==\'vim_string_paste\'  : do_vim_paste(buffer,repr_mode=True)\n                                if header==\'local_string_paste\' : do_local_paste(buffer,repr_mode=True)\n\n                                if header==\'web_paste\'          : do_web_paste(buffer,repr_mode=False)\n                                if header==\'tmux_paste\'         : do_tmux_paste(buffer,repr_mode=False)\n                                if header==\'vim_paste\'         : do_vim_paste(buffer,repr_mode=False)\n                                if header==\'local_paste\'        : do_local_paste(buffer,repr_mode=False)\n\n                                if \'comment_paste\' in header or \'comment_ans\'==header:\n                                    commented_arg=\'\'\n                                    if before_line.count(\'`\')==1:\n                                            commented_arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(commented_arg+\'`\'))\n                                    \n                                    if header==\'tmux_comment_paste\' : do_tmux_paste(buffer,repr_mode=False,commented=commented_arg)\n                                    if header==\'comment_paste\'      : do_paste(buffer,commented=commented_arg)\n                                    if header==\'comment_ans\'      : \n\n                                        ans=str(get_ans())\n                                        ans=commented_string(buffer,ans,spaces=commented_arg)\n                                        buffer.insert_text(ans)\n\n                                if header==\'paste\'              : do_paste(buffer)\n                                if header==\'string_paste\'       : do_string_paste(buffer)\n\n                                if header==\'delete all\':\n                                    buffer.document=Document(\'\',0,buffer.document.selection)\n                                if header==\'yapf autoformat\':\n                                    try:\n                                        from rp import pip_import\n                                        yapf=pip_import(\'yapf\')\n                                    except:\n                                        fansi_print("ERROR: To use yapf\'s autoformat, you must first install yapf. \'pip install yapf\' is an option. See https://github.com/google/yapf",\'red\',\'bold\')\n                                        return\n                                    try:\n                                        # buffer.delete_before_cursor(len(\'\\\\ya\'))\n                                        buffer.document=Document(yapf.yapf_api.FormatCode(buffer.document.text)[0],buffer.document.cursor_position,buffer.document.selection)\n                                    except Exception as e:\n                                        from rp import fansi_print \n                                        buffer.insert_text("\\n#ERROR Using yapf autoformatter: "+str(e))\n                                return\n\n                    if char in {\'d\',\'c\'} and not before_line.strip():\n                        above=line_above(buffer)#returns None if there are no above lines\n                        if above is not None and get_indent(above)==get_indent(before_line):\n                            if above.strip().startswith(\'@\'):#we have a decorator on our hands...\n                                #when we\'re below a decorator and we press d or c, the only valid syntax is to create a \'def\' or a \'class\' keyword \n                                if char==\'d\':\n                                    if in_class_func_decl(buffer):\n                                        #class c:\n                                        #   @decorator\n                                        #   |\n                                        #\n                                        #   --->\n                                        # \n                                        #class c:\n                                        #   @decorator\n                                        #   def |(self):\n                                        buffer.insert_text(\'def (self):\')\n                                        buffer.cursor_left(7)\n                                        return\n                                    else:\n                                        #@decorator\n                                        #|\n                                        #\n                                        #--->\n                                        # \n                                        #@decorator\n                                        #def |():\n                                        buffer.insert_text(\'def ():\')\n                                        buffer.cursor_left(3)\n                                        return\n                                if char==\'c\':\n                                        #@decorator\n                                        #|\n                                        #\n                                        #--->\n                                        # \n                                        #@decorator\n                                        #class |:\n                                        buffer.insert_text(\'class :\')\n                                        buffer.cursor_left(1)\n                                        return\n                    if char==\'s\':\n                            # cl=find_level("class ")#class level\n                            # dl=find_level("def ")#def level\n                            # dh=find_header("def ")#def header\n                            # if cl is not None and dl is not None and dl>cl:\n                            #     if \'(self\' in dh:\n                            if meta_pressed(clear=True):\n                                buffer.insert_text(\'self\')\n                                return \n                    # if char==\'e\':\n                            # buffer.insert_text(\'trans\')\n                            # if meta_pressed(clear=False):\n                                # buffer.accept_action.run_in_terminal(render_cli_done=True)\n                                # buffer.accept_action.validate_and_handle(event.cli, buffer)\n                                # buffer.insert_text(\'elf\')\n                                # buffer.insert_text(\'self\')\n                                # return \n                    if regex_match(before_line,r\'\\s*for _ in range\\(\\d+\'):\n                        #(let\'s say we press Y)\n                        #for _ in range(123|):  --->  for _ in range(Y|):\n                        buffer.delete_before_cursor(len(before_line.lstrip())-len(\'for _ in range(\'))\n                        buffer.insert_text(char)\n                        return\n                    buffer.insert_text(char) \n            go(char)\n            meta_pressed(clear=True)#Reset: we don\'t want to keep the esc key pressed (this should go after every keystroke. Period. But it doesnt yet cause ima be a lazy...)\n    for char in \'1234567890\':#Digit inputs\n        def go(c):\n            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                if self_dot_var_equals_var(buffer,c) or setting_index(buffer,c):\n                    return\n                document=buffer.document\n                current_line=document.current_line\n                before_line=document.current_line_before_cursor\n                after_line=document.current_line_after_cursor\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                above_line=line_above(buffer)\n                single_line=above_line is None\n                #\n                if c==\'3\':\n                    if before_line.endswith(\':\') and not after_line and starts_with_any(before_line.lstrip(),\'def \',\'for \',\'if \',\'while \',\'except \',\'try:\'):\n                        #Adding comments to the end of function declarations...what meaningful function would start with \'3\'?\n                        buffer.insert_text(\'#\')\n                        return\n                    if not single_line and not before_line.strip():\n                        #Why reach for the shift key?\n                        #What meaningful text could you write on a line starting with 3....on multi lines....\n                        buffer.insert_text(\'#\')\n                        return\n                    if meta_pressed():\n                        buffer.cursor_right(123123)\n                        buffer.insert_text(\'#\')\n                        return\n                    if endswithany(before_line,\')\',\']\') and after_line==\'\':\n                        #If inserting \'3\' would be break syntax and \'#\' would not, insert \'#\'\n                        #This saves a shift-key stroke\n                        buffer.insert_text(\'#\')\n                        return\n                if before == \'from \' and after == \' import\':\n                    #Lets us do \'f 5\' to get a for loop in the first line, instead of trying to import something\n                    #from | import    --->   for _ in range(4|):\n                    buffer.delete_before_cursor(999)\n                    buffer.delete(999)\n                    buffer.insert_text(\'for _ in range(\'+c+\'):\')\n                    buffer.cursor_left(2)\n                    return\n                if regex_match(before_line,r\'\\s*for\\s+\\w+\\s+in\\s+\') and after_line.strip()==\':\':\n                    #(let\'s say c=3...)\n                    #for x in |: --> for x in range(3|):\n                    buffer.insert_text(\'range(\'+c+\')\')\n                    buffer.cursor_left()\n                    return\n                if before_line.endswith(\'for \') and endswithany(after_line,\' in]\',\' in)\',\' in}\'):\n                    #[x for | in]  --->  [x for _ in range(9|)]\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(3)\n                    buffer.insert_text(\' range()\')\n                    buffer.cursor_left()\n                    buffer.insert_text(c)\n                    return\n                if before_line.endswith(\' in \') and endswithany(after_line,\']\',\')\',\'}\'):\n                    #[x for y in |]  --->  [x for y in range(9)]\n                    buffer.insert_text(\'range()\')\n                    buffer.cursor_left()\n                    buffer.insert_text(c)\n                    return\n                if before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n                    #(let\'s say c=3...)\n                    #for | in : --> for _ in range(3|):\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(len(\' in \'))\n                    buffer.insert_text(\'range(\'+c+\')\')\n                    buffer.cursor_left()\n                    return\n                if c==\'8\' and before_line.lstrip().startswith(\'def \') and after_line.endswith(\'):\') and before_line.count(\'(\')==1 and endswithany(before_line,\'(\',\',\',\'*\'):\n                    #Why use the shift key to make kwargs?\n                    #(on pressing 8)\n                    #def f(|)   --->   def f(*|)\n                    #def f(a,b,*|)   --->   def f(a,b,**|)\n                    buffer.insert_text(\'*\')\n                    return\n                if before_line.lstrip()==\'def \'and after_line in [\'():\',\':\']:\n                    #8 is the key that makes the * chracter. We can\'t start function names with numbers, so let\'s make this the default...\n                    #On press 8:\n                    #def |:   --->   def _(*args,**kwargs):|\n                    buffer.delete(len(before_line))\n                    buffer.insert_text(\'_(*args,**kwargs):\')\n                    return\n                if before==\'ans.\' and not after:\n                    if ans_dot_completion_string:\n                        # Let\'s say c=3...\n                        # (middle \'ans.|\' is current state)\n                        #   ans(|)   -->   ans.|   -->   ans(.3|)\n                        #                   AND\n                        #   ans[|]   -->   ans.|   -->   ans[.3|]\n                        buffer.delete_before_cursor()\n                        buffer.insert_text(ans_dot_completion_string)\n                        buffer.cursor_left()\n                        buffer.insert_text(\'.\')\n                    else:\n                        # Let\'s say c=3...\n                        #   ans.|   -->  .3|\n                        # This lets use the \'ans.\' completion from just typing \'.\', without sacrificing the ability to type \'.4\'\n                        buffer.delete_before_cursor(len(before))\n                        buffer.insert_text(\'.\')\n                buffer.insert_text(c)\n        go(char)\n\n\n    # @handle(\'Ω\')\n    # def _(event):\n    #     import rp.prompt_toolkit.key_binding.bindings.vi as vi \n    #     try:\n    #         vi.ryan_go_to_vim_navigation_mode(event)\n    #     except:pass\n    #\n    @handle(Keys.ShiftLeft)\n    def _(event):\n        """\n        Select from the history.\n        """\n        buffer=event.cli.current_buffer\n        before_line=buffer.document.current_line_before_cursor\n        if before_line.lstrip():\n            #····blah|   --->   ····|blah\n            buffer.cursor_left(len(before_line.lstrip()))\n        elif before_line:\n            #····|blah   --->   |····blah\n            buffer.cursor_left(1000000)\n        elif buffer.cursor_position:\n            after=buffer.document.text_after_cursor\n            if after.count(\'\\n\'):\n                buffer.cursor_up()\n                move_line_down(buffer)\n                buffer.cursor_up()\n            else:\n                move_line_down(buffer)\n            buffer.cursor_left(1000000)\n\n#     @handle(Keys.ControlBackslash)\n#     def _(event):\n#         buffer=event.cli.current_buffer\n#         pseudo_terminal(merge_dicts(r_iterm_comm.globa,{ans:buffer.document.text}))\n\n    @handle(Keys.ShiftRight)\n    def _(event):\n        buffer=event.cli.current_buffer\n        after_line=buffer.document.current_line_after_cursor\n        before_line=buffer.document.current_line_before_cursor    \n        if after_line and before_line.strip() or after_line and after_line==after_line.lstrip():\n            #····|blah   --->   ····blah|\n            buffer.cursor_right(1000000)\n        elif after_line:\n            #|····blah   --->   ····|blah\n            buffer.cursor_right(len(after_line)-len(after_line.lstrip()))\n        else:\n            after=buffer.document.text_after_cursor\n            if after.count(\'\\n\')==0:\n                return#We\'re on the bottom\n            elif after.count(\'\\n\')==1:\n                buffer.cursor_down()\n                move_line_down(buffer)\n                buffer.cursor_down()\n            else:\n                move_line_down(buffer)\n    def move_line_down(buffer,up=False):\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        buffer.cursor_left(1000000)\n        if not buffer.cursor_position:\n            buffer.delete(2)\n        buffer.cursor_right(1000000)\n        # print("Ima doing/ it!")\n        delete_current_line(buffer)\n        buffer.cursor_right(10000)\n        buffer.cursor_down(1)\n        buffer.cursor_left(10000)\n        #region Adaptive indentation: Currently not implemented. Sticking to simplicity.\n        if False:\n            buffer.insert_line_above(copy_margin=not up)\n            buffer.insert_text(current_line.lstrip() if not up else current_line)\n            text=buffer.document.text\n            lstrip=text.lstrip()\n        else:\n            buffer.insert_line_above(copy_margin=False)\n            buffer.insert_text(current_line)\n            lstrip=text=buffer.document.text\n\n        # buffer.cursor_down(1)\n        # buffer.cursor_right(1000000)\n        buffer.document=Document(lstrip,buffer.document.cursor_position+(len(lstrip)-len(text)),buffer.document.selection)\n\n    #These keys don\'t respond on the mac terminal\n    # @handle(Keys.ShiftUp)\n    # def _(event):\n    #     print(324982308974078923)\n    #     event.cli.current_buffer.cursor_right(1000000)\n    #\n    # @handle(Keys.ShiftDown)\n    # def _(event):\n    #     print(324982308974078923)\n    #     buffer=event.cli.current_buffer\n    #     document=buffer.document\n    #     current_line=document.current_line\n\n    @handle(Keys.ControlD)# Duplicate current line Only applies when there\'s text, else it will trigger the exit\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        buffer.cursor_right(10000)\n        current_line=document.current_line\n        # buffer.insert_line_below()\n        buffer.insert_text("\\n"+current_line)\n    def current_line_index(buffer):\n        #returns current line number, starting from 0\n        return buffer.document.text_before_cursor.count(\'\\n\')\n    def go_to_line_number(n,buffer):\n        i=current_line_index(buffer)\n        delta=i-n\n        if delta<0:\n            buffer.cursor_down(abs(delta))\n        else:\n            buffer.cursor_up(abs(delta))\n        buffer.cursor_up()\n    def delete_current_line(buffer):\n        buffer.delete_line_at_cursor()\n        # document=buffer.document\n        # current_line=document.current_line\n        # buffer.cursor_left(10000)\n        # firstline=buffer.cursor_position==0\n        # buffer.delete(len(current_line))\n        # buffer.delete_before_cursor()\n        # if firstline:\n        #     buffer.delete()\n        # else:\n        #     buffer.cursor_down()\n\n    #region Bracket Match Writers\n    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar\n    can_take_no_args=False# Doesn\'t practically matter right now if function_comma_flag is false\n\n\n    @handle(Keys.ControlDelete)# Delete current line\n    def _(event):\n        buffer=event.cli.current_buffer\n        delete_current_line(buffer)\n\n    #region Bracket Match Writers\n    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar\n    can_take_no_args=False# Doesn\'t practically matter right now if function_comma_flag is false\n\n    @handle(\'.\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):# period \'.\' event handler function thingy\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'.\',event):return\n        if self_dot_var_equals_var(buffer,\'.\'):\n            #self.foo|=foo   --->   self.foo.|=self.foo.\n            return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n\n\n\n        # if before_line.endswith(\'=\') and not before_line.endswith(\'==\'):\n            #Moved this functionality elsewhere to fix the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key\n            #self=|   --->   self.|=   (and then type foo to get self.foo=foo)\n            # buffer.cursor_left()\n            # buffer.insert_text(\'.\')\n            # return\n        if not before and not after:\n            buffer.insert_text(\'ans.\')\n            return\n        import rp.r_iterm_comm\n        var=rp.r_iterm_comm.last_assignable_comm\n        # if before.endswith(\'=\') and before[:-1]==var:\n            #THIS COMLPETION IS COMMENTED OUT EVEN THOUGH IT WORKS. IT GOT ANNOYING FOR TETING THE =.. OPERATOR, WHICH I THINK MIGHT BE MORE IMPORTANT FOR DEMOING RPTERM\n            #var=|  -->  var.|\n            #You can use a sequence like:\n            #  (What you type)   (What rp types)\n            #   i numpy np          import numpy as np\n            #   =.array?            np.array?\n            # buffer.delete_before_cursor()\n        if before_line.endswith("\'\'") and not before_line.endswith("\'\'\'") and after_line.startswith("\'\'") and not after_line.startswith("\'\'\'") or\\\n           before_line.endswith(\'""\') and not before_line.endswith(\'"""\') and after_line.startswith(\'""\') and not after_line.startswith(\'"""\'):\n           # “\'\'.[\'“   —>  \'\'.join([\'\'])\n            buffer.insert_text(\'.join()\')\n            buffer.delete(2)\n            buffer.cursor_left()\n            return\n        if before_line.endswith("\'\'.join(") and after_line.startswith(\')\'):\n            # “\'\'..[“        —>     \'\'.join(map(str,[]))\n            # “\'\'.[\'\'“       —>     \'\'.join([\'\'])\n            buffer.insert_text(\'map(str,)\')\n            buffer.cursor_left()\n            return\n        if before+after in {\'ans[]\',\'ans()\'} and after in {\']\',\')\'}:\n            #ans[|]  -->  ans.|\n            #       AND\n            #ans(|)  -->  ans.|\n            #\n            #For space-completing \'ans\' then wanting to use a \'.\', but can\'t \n            #\n            #Edge case: when we want to write ans(.25) where ans is a float-function\n            #   This is handled like so:\n            #       ans(|)  -->  ans.|  -->  ans(.25)  \n            #   Basically, the parenthesis are put back because the character following the \'.\' is a digit\n            #   (This is handled in the digit handler, search for "ans_dot_completion_string")\n            buffer.delete()\n            buffer.delete_before_cursor()\n            global ans_dot_completion_string\n            ans_dot_completion_string=before[-1]+after[0]# is either () or []\n        buffer.insert_text(\'.\')\n\n\n    @handle(Keys.Escape,filter=~vi_mode_enabled)#microcompletions_enabled)\n    def _(event):\n        _meta_pressed.append(True)#This is meant to be flipped to false immediately after anything reads it, with meta_pressed(). We\'re using a list to easily keep track of this after this method is @\'d outta this file somewhere else idk where\n\n    @handle(\' \',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):# Spacebar event handle spacebar\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\' \',event):return\n        single_line = line_above(buffer) is None\n        if meta_pressed():#No shenanagins -- just give me a space.\n            buffer.insert_text(\' \')\n            return\n        nonlocal function_comma_flag# ,can_take_no_args\n        # from rp import mini_terminal\n        # exec(mini_terminal)\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n\n        if document.text==\'\':# What else would we possibly want the spacebar for on an empty input? Spacebar invokes functions, and the default variable is ans.\n            import rp.r_iterm_comm as ric\n            if callable(ric.ans):\n                buffer.insert_text(\'ans()\')\n                buffer.cursor_left()\n                function_comma_flag=True\n            elif hasattr(ric.ans,\'__getitem__\'):#if we can do ans[0], ans[1] etc\n                buffer.insert_text(\'ans[]\')#we cant call it...might want to iterate through it though!\n                buffer.cursor_left()\n                function_comma_flag=True\n            else:\n                buffer.insert_text(\'ans\')#Bleh it\'s boring\n            return\n\n\n        if before.startswith(\'!\'):# Don\'t do anything special\n            buffer.insert_text(\' \')\n            return\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if before_line.endswith(\' in len\') and starts_with_any(after_line,*\'}])\'):\n                #[x for x in len|]  --->  [x for x in range(len(|))]\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n        if before_line.lstrip().startswith(\'class \') and after_line.startswith(\':\'):\n            #class c|:   --->   class c(|):\n            buffer.insert_text(\'()\')\n            buffer.cursor_left()\n            return\n        if before_line.lstrip().startswith(\'class \') and after_line.startswith(\'):\'):\n            if before_line.endswith(\',\'):\n                #class c(x,|):   --->   class c(x):|\n                buffer.delete_before_cursor()\n                buffer.cursor_right(2)\n                return\n            if before_line.endswith(\'(\'):\n                #class c(|):   --->   class c:|\n                buffer.delete_before_cursor()\n                buffer.delete()\n                buffer.cursor_right()\n                return\n        if before_line.lstrip().startswith(\'def \'): \n            if before_line.endswith(\'def __\') and after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __init__(self,|):\n                buffer.insert_text(\'init\')\n                buffer.cursor_right(7)\n                buffer.insert_text(\',\')\n                return\n            if before_line.strip()==\'def\' and after_line.startswith(\'(self):\'):\n                #class x:\n                #   def |(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __|__(self):\n                buffer.insert_text(\'____\')\n                buffer.cursor_left(2)\n                return\n            if after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __eq|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __eq__(self|):\n                if before_line.endswith(\'__\'):\n                    #autocomplete might have messed things up, this is a sloppy hack to fix that...\n                    #def __eq__|__(self):   --->   #def __eq__(self|): \n                    buffer.delete_before_cursor(2)\n                buffer.cursor_right(7)\n                return\n            if after_line.startswith(\'(self):\'):\n                #def f|(self):   --->   def f(self,|):\n                buffer.cursor_right(5)\n                buffer.insert_text(\',\')\n                return\n            if before_line.endswith(\':\') and not after_line.strip():\n                #def f(x):|   --->   def f(x):return |\n                buffer.insert_text(\'return \')\n                return\n            if before_line.strip()==\'def __\' and after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __init__(self|):\n                buffer.insert_text(\'init\')\n                buffer.cursor_right(7)\n                return\n            if before_line.strip()==\'def\' and after_line.startswith(\'():\'):\n                def on_first_line():\n                    return \'\\n\' not in (before+after)\n                function_title=\'ans\' if on_first_line() else \'_\'\n                #def |():   --->   def _(|):   (sometimes, when using decorators, you want an anonymous function)\n                #def |():   --->   def ans(|): (if we\'re defining a function on the first line, perhaps we want to use it as our answer? I haven\'t actually used this yet; it\'s just an idea, I\'ll see how much I like it...)\n                buffer.insert_text(function_title)\n                buffer.cursor_right(1)\n                return\n        if before_line.strip()==\'def\' and not after_line.strip().endswith(\':\'):\n            buffer.insert_text(\' :\')\n            buffer.cursor_left()\n            return\n        if before_line.strip().startswith(\'def \') and endswithany(before_line.strip(),\',\',\'(\') and after_line.strip()==\'):\':\n            if before_line.endswith(\',\'):\n                buffer.delete_before_cursor()\n            buffer.cursor_right(2)#If we want a one-line function\n            return\n        if self_dot_var_equals_var(buffer):\n            #self.|foo=foo   --->   self.foo=foo|\n            buffer.cursor_right(999999)\n        from rp import is_namespaceable,space_split\n        if before_line.strip().startswith(\'def \') and len(space_split(before_line.strip()))==2:\n            if after_line.strip()==\':\' and is_namespaceable(before_line.split(\' \')[-1]):\n                buffer.insert_text(\'()\')\n                buffer.cursor_left()\n                return\n        if after_line==\'):\' and before_line.endswith(\',\'):\n            buffer.delete_before_cursor()\n            if starts_with_any(before_line.strip(),*\'if while\'.split()):\n                #if f(x,|):  --->  if f(x) |:\n                buffer.cursor_right(1)\n                buffer.insert_text(\' \')#Lets us trigger things like a--->and\n            else:\n                #for x in range(5,|):   --->   for x in range(5):|\n                buffer.cursor_right(2)\n            return\n        if before_line.endswith(\' imoprt\') or before_line.startswith("imoprt"):# This is a really common typo for me\n            buffer.delete_before_cursor(6)\n            buffer.insert_text(\'import \')\n            return\n        from rp import regex_match\n        if regex_match(before_line.lstrip(),r\'for\\s+\\w+\\s+in\\s+len\'):\n                #(Also implemented upon pressing \'(\')\n                #for x in len|   -->  for x in range(len(|))\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n        if before_line.lstrip()==\'if \' and after_line.rstrip()==\':\':\n            #if |:   --->   import |\n            buffer.delete_before_cursor(3)\n            buffer.insert_text(\'import \')\n            buffer.delete()\n            return\n        if before_line.lstrip()==\'import \' and not after_line.rstrip():\n            #import |   --->   if |:\n            buffer.delete_before_cursor(len(\'import \'))\n            buffer.insert_text(\'if :\')\n            buffer.cursor_left()\n            return\n        # if before_line.lstrip()==\'for \' and after_line==\' in :\':\n        #     #"for | in :"  --->  "for _ in |:"\n        #     buffer.insert_text(\'ans\')\n        #     return\n        keywords={\'async\',\'await\',\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\'}\n\n        if regex_match(before,r\'\\s*for\\s+\\w+\\s+in\\s+\') and after.strip()==\':\':\n            #"for x in |:"  --->  "for x in ans:"\n            #(better alternative than "for x in |:" ---> "for x in:|", which is in the next block...)\n            buffer.insert_text(\'ans\')\n            return\n        elif starts_with_any(before_line.lstrip(),\'if \',\'for \',\'while \') and before_line.endswith(\' \') and after_line.rstrip()==\':\':# This is a really common typo for me\n            #if x|:   --->   if x:|\n            buffer.delete_before_cursor(1)\n            buffer.cursor_right(2)\n            return\n        from rp import space_split,is_namespaceable\n        import rp.r_iterm_comm as r_iterm_comm\n        split=space_split(before_line)\n        from rp import printed\n        from_or_import_on_beginning_of_line=before_line.lstrip().startswith("import ") or before_line.lstrip().startswith("from ")\n        def is_callable_token(token_name):\n            try:\n                return callable(eval(token_name,r_iterm_comm.globa))\n            except:\n                return False#be on the safe side with space-function completions\n        try:\n            function_comma_flag=function_comma_flag and( after_line.startswith(")") or after_line.startswith("\'") or after_line.startswith(\'"\') or after_line.startswith(\']\') or after_line.startswith(\']\') )\n            token_of_interest,name_of_interest,found_token_of_interest=token_name_found_of_interest(before_line)\n            from rp import regex_match\n            def is_autocompletable_prefix(big,suffixes=[\'\'],allow_single_liner=True,use_name_of_interest=False):\n                #leave suffixes [] or None to allow any suffix\n                if not allow_single_liner:\n                    if \'\\n\' not in before+after:\n                        return False\n                if use_name_of_interest:\n                    name=name_of_interest\n                else:\n                    name=before_line.strip()\n                return big.strip() != name and big.startswith(name) and before_line.strip() and (not suffixes or after_line in suffixes)#Shouldn\'t trigger when r is a function, because of where this is in the elif chain\n            def autocomplete_prefix(big,left=1,remove_suffix=False):\n                if remove_suffix:#used in \'except|:\' --> \'except | as :\', which is also \'except|\' --> \'except | as :\'\n                    buffer.cursor_right(len(after_line))\n                    buffer.delete_before_cursor(len(after_line))\n                buffer.insert_text(big[len(name_of_interest):])\n                buffer.cursor_left(left)\n                try_to_autounindent(buffer)\n\n            def try_autocompleting_functions(N,not_just_functions=False):\n                from rp import ring_terminal_bell\n                # if not_just_functions:\n                    # ring_terminal_bell\n                #TODO: right now not_just_functions doesn\'t do anything, it\'s supposed to let you space complete functions while importing\n                nonlocal before_line,after_line,before,after\n\n                #go through the top N current autocompletion results, and if one of them is callable, call it.\n                # if before.count(\' \')+before.count(\'\\n\')>1:\n                    # return False #Don\'t autocomplete like this unless we are doing a one-liner\n                bs=before_line.lstrip()#Before Strip  (bs)\n                if not not_just_functions:\n                    if not \'\\n\' in before.strip() and before.strip().isupper() or beginswithany(bs,\'import \',\'from \',\'def \') or \'lambda\' in bs:#Basically, any place we\'re allowed to declare new variable names, we shouldn\'t be autocompleting them. lambda is bit tricky so I\'m just sayig \'no space function completion on lines that contain lambda\'.\n                        return False#We might be typing something like \'UNDO ALL\', in which case we do NOT want the \'UNDO\' to be autocompleted\n                import rp.r_iterm_comm as ric\n                for candidate in ric.current_candidates:#Don\'t autocomplete if our current word to complete allready exists. For example, don\'t complete \'in\' into \'inverse\', etc.\n                    try:\n                        if hasattr(candidate,\'text\') and candidate.text==name_of_interest or candidate==name_of_interest:\n                            return False\n                    except:pass\n                # ring_terminal_bell()\n                # print(ric.current_candidates)\n                if not_just_functions:\n                    if not ric.current_candidates or  \'.\' in before_line:\n                        return False#Problem avoided: Used to be \'import scipy.stats\' -/-> \'import stats as |s\'\n                    buffer.delete_before_cursor(len(name_of_interest))#erase the current line\n                    #space completions: \n                    #import num|   --->   import numpy as |\n                    #(etc)\n                    space_completion=ric.current_candidates[0]\n                    if before_line.endswith(space_completion):\n                        return False#Problem avoided: Used to be \'import cv2|\' -/-> \'import cv2cv2 as |s\'\n                    #region Erase before and after so we don\'t do stupid things: Example, on autocompleting \'print\', we want:\n                    #   \'pr|i\'  --->  \'print|\'\n                    #       and NOT\n                    #   \'pr|i\'  --->  \'prprint|i\'\n                    if is_namespaceable(space_completion):\n                        #Allready taken care of in above line commented "erase the current line"\n                        # while before_line and before_line[-1] in space_completion:\n                        #     buffer.delete_before_cursor()\n                        #     before_line=before_line[:-1]\n                        #     before     =before     [:-1]\n                        while after_line  and  after_line[ 0] in space_completion:\n                            buffer.delete()\n                            after_line =after_line [1: ]\n                            after      =after      [1: ]\n                    #endregion\n                    buffer.insert_text(space_completion)\n                    return True \n                for x in ric.current_candidates[:N]:\n                    if is_callable_token(x) or not_just_functions and not (after_line.strip()==\'():\' and before_line.rstrip().startswith(\'def \')):\n                        # if re.fullmatch(r\'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]\',before_line):\n                            buffer.delete_before_cursor(len(name_of_interest))#erase the current line\n                            buffer.insert_text(x+(\'\' if  not_just_functions else \'()\'))\n                            buffer.cursor_left()\n                            nonlocal function_comma_flag\n                            function_comma_flag=True\n                            return True\n            if before_line.lstrip().startswith(\'def \') and before_line.endswith("=lambda")and after_line.startswith(\')\'):#When passing a lambda as an argument in a function definition default value (a nichey case, but important nevertheless), add a space so the rest of the program knows its a lambda (which it uses spaces to see)\n                buffer.cursor_left(6)\n                buffer.insert_text(\' \')\n                buffer.cursor_right(6)\n\n            if not from_or_import_on_beginning_of_line \\\n                and not before_line.endswith(" ") \\\n                and callable(token_of_interest)  \\\n                and not (after_line.strip()==\'():\' and before_line.rstrip().startswith(\'def \'))\\\n                and not re.fullmatch(r\'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]+\',before_line)\\\n                and not re.fullmatch(r\' *def [a-zA-Z0-9_]+\\( *[a-zA-Z0-9_]+( *\\, *[a-zA-Z0-9_]+ *)*\',before_line)\\\n            :\n                function_comma_flag=True\n                import inspect\n                #space-function implementation HERE\n                #ON SPACE\n                # callable_function|   --->   callable_function(|)\n                #This is a big deal. I use this ALL THE TIME.\n\n                # try:\n                #     can_take_no_args=len(inspect.getfullargspec(token_of_interest).args)==0\n                # except:# Probably a builtin function\n                #     can_take_no_args=0 or token_of_interest is print\n                if before_line.count(\'=\')==1 and after_line==\'(\'+before_line.split(\'=\')[0].strip()+\')\':\n                    #We came from using the )= operator. We want `matrix)=np.asarray float` --->  `matrix=np.asarray(matrix,float)` and not `matrix=np.asarray(float)(matrix)` (which would happen without this block)\n                    buffer.cursor_right(99999)\n                    buffer.cursor_left()\n                    buffer.insert_text(\',\')\n                else:\n                    buffer.insert_text(\'()\')\n                    buffer.cursor_left(count=1)\n            # region Brackets....they work but conceptually they\'re annoying.\n            # elif not from_or_import_on_beginning_of_line and not before_line.endswith(" ") and hasattr(token_of_interest,\'__getitem__\'):\n            #     buffer.insert_text(\'[]\')\n            #     buffer.cursor_left(count=1)\n            #endregion\n\n            elif regex_match(before_line.lstrip(),r\'(from .*)|(import \\w*)\') and try_autocompleting_functions(N=1,not_just_functions=True):\n                if(before_line.lstrip().startswith(\'from \')):\n                    buffer.cursor_right(len(\' import\'))\n                    buffer.insert_text(\' \')\n                elif(before_line.lstrip().startswith(\'import \')):\n                    buffer.insert_text(\' as \')#Without this, space would be redundant with respect to tab\n            elif regex_match(before_line.lstrip(),r\'from \\w* import \'):\n                #\'from rp import |\'  -->  \'from rp import *\'\n                buffer.insert_text(\'*\')\n            elif regex_match(before_line.lstrip(),r\'from \\w* import \\*\'):\n                #\'from rp import *|\'  -->  \'from rp import \'\n                buffer.delete_before_cursor()\n\n            elif before_line.lstrip().startswith(\'with \') and after_line.startswith(\':\') and not before_line.endswith(\' as \'):\n                buffer.insert_text(\' as \')\n\n            elif endswithany(before_line,\' in len\',\' in le\',\' in l\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in l|]   --->   [x for x in range(len(|))]\n                #for x in l|:      --->   for x in range(len(|)):\n                buffer.delete_before_cursor(1 if before_line.endswith(\'l\') else 2 if before_line.endswith(\'le\') else 3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n            elif name_of_interest in {\'l\',\'la\',\'lam\',\'lamb\',\'lambd\',\'lambda\'} \\\n                and not \'import \'in before_line \\\n                and not before_line.lstrip() in {\'for \'+name_of_interest,\'with \'+name_of_interest} \\\n                and not re.fullmatch(r\'( *def .*)|(.*[^a-zA-Z0-9_]lambda [^\\:]*)|(.*[^a-zA-Z0-9_](for|in|as) (l|la|lam|lamb|lambd|lambda))\',before_line) \\\n                :\n                #Make a lambda from l\n                #Shouldn\'t trigger when l is a function, because of where this is in the elif chain\n                noil=len(name_of_interest)#noil stands for ((name of interest) length)\n                if before_line.strip()!=name_of_interest:#don\'t do this at the beginning of an empty line\n                    buffer.cursor_left(noil)\n                    if not buffer.document.text_before_cursor.endswith(\' \'):\n                        buffer.insert_text(\' \')\n                    buffer.cursor_right(noil)\n                buffer.insert_text(\'lambda :\'[noil:])\n                buffer.cursor_left()\n            elif regex_match(before_line.strip(),r\'(for .* in in)\') and after_line.strip()==\':\':\n                buffer.delete_before_cursor(2)\n            elif regex_match(before_line.strip(),r\'(from \\w* import import)\') and after_line.strip()==\'\':\n                buffer.delete_before_cursor(len(\'import\'))\n            elif before_line.endswith(\'lambda:\'):\n                #The default, most boring kind of lambda...\n                #"lambda:|"   --->  "lambda:None|"\n                buffer.insert_text(\'None\')\n\n            #None of the \'is_autocompletable_prefix\'s ahead should trigger when the prefix is a function, so as not to interfere with normal autocompletion in most cases\n            elif is_autocompletable_prefix(\'def ():\'):\n                if in_class_func_decl(buffer):  autocomplete_prefix(\'def (self):\',left=7)\n                else:           autocomplete_prefix(\'def ():\',left=3)\n            elif before_line.lstrip().startswith(\'def \') and after_line.rstrip().endswith(\'):\') and after_line.startswith(\'(\'):buffer.cursor_right()\n\n\n            elif after_line.startswith(\' in)\'):\n                #print(x for y| in)  -->  print(x for y in |)\n                buffer.cursor_right(len(\' in\'))\n                buffer.insert_text(\' \')\n            elif before_line.endswith(\',for\'):\n                #print(x,for|)  -->  print(x for | in)\n                buffer.delete_before_cursor(len(\',for\'))\n                buffer.insert_text(\' for  in\')\n                buffer.cursor_left(len(\' in\'))\n            elif before_line.endswith(\',if\'):\n                #Because when we\'re in functions, hitting space makes commas, we can still do \'for\', \'if\', etc\n                #print(x,if)  -->  print(x for | in)\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\' if  else\')\n                buffer.cursor_left(len(\' else\'))\n            elif before_line.lstrip()==\'else:\'and not after_line.strip():\n                #else:|   --->   elif |:\n                buffer.delete_before_cursor(len(\'else:\'))\n                buffer.insert_text(\'elif :\')\n                buffer.cursor_left()\n            elif before_line.lstrip()==\'elif \'and after_line.rstrip()==\':\':\n                #elif:|   --->   else:\n                buffer.delete_before_cursor(len(\'elif \'))\n                buffer.insert_text(\'else\')\n                buffer.cursor_right()\n            elif before_line.lstrip()==\'f\' and not after_line.strip() and single_line:\n                #f|   --->   from | import         ONLY ON ONE-LINERS\n                buffer.insert_text(\'rom  import\')\n                buffer.cursor_left(len(\' import\'))\n            #Note that this was created after some other things in this file, and might even be redundant sometimes. For example, \'if\'-->\'if |:\' is allready covered elsewhere in key_bindings.py\n            elif is_autocompletable_prefix(\'return \',allow_single_liner=False):autocomplete_prefix(\'return \',left=0)\n            elif is_autocompletable_prefix(\'while :\'):autocomplete_prefix(\'while :\')\n            elif is_autocompletable_prefix(\'class :\'):autocomplete_prefix(\'class :\')\n            elif is_autocompletable_prefix(\'for  in :\'):autocomplete_prefix(\'for  in :\',left=5)\n            elif not (before==\'i\' and not after) and is_autocompletable_prefix(\'if :\'):autocomplete_prefix(\'if :\',left=1)#\'i|\' ---> \'if |:\' ONLY IF we\'ve typed something else in this buffer allready (often, I dedicate an input line to nothing but importing something)\n            elif is_autocompletable_prefix(\'import \'):autocomplete_prefix(\'import \',left=0)\n            elif is_autocompletable_prefix(\'from  import\'):autocomplete_prefix(\'from  import\',left=7)\n            elif is_autocompletable_prefix(\'elif :\',allow_single_liner=False):autocomplete_prefix(\'elif :\',left=1)\n            elif is_autocompletable_prefix(\'else:\',allow_single_liner=False):autocomplete_prefix(\'else:\',left=0)\n            elif is_autocompletable_prefix(\'try:\'):autocomplete_prefix(\'try:\',left=0)\n            # elif is_autocompletable_prefix(\'True \',suffixes=[\' \']):autocomplete_prefix(\'True \',left=0)\n            # elif is_autocompletable_prefix(\'False \',suffixes=[\' \']):autocomplete_prefix(\'False \',left=0)\n            elif is_autocompletable_prefix(\'break\',allow_single_liner=False):autocomplete_prefix(\'break\',left=0)\n            elif is_autocompletable_prefix(\'continue\',allow_single_liner=False):autocomplete_prefix(\'continue\',left=0)\n            elif is_autocompletable_prefix(\'yield \',allow_single_liner=False):autocomplete_prefix(\'yield \',left=0)\n            elif before_line.lstrip()!=\'yield\' and is_autocompletable_prefix(\'yield from \',allow_single_liner=False):autocomplete_prefix(\'from \',left=0)\n            # elif is_autocompletable_prefix(\'print()\'):autocomplete_prefix(\'print()\',left=1)#not a keyword, but used so frequently...\n            elif is_autocompletable_prefix(\'assert \'):autocomplete_prefix(\'assert \',left=0)\n            elif is_autocompletable_prefix(\'nonlocal \'):autocomplete_prefix(\'nonlocal \',left=0)\n            elif is_autocompletable_prefix(\'global \'):autocomplete_prefix(\'global \',left=0)\n            elif is_autocompletable_prefix(\'raise \'):autocomplete_prefix(\'raise \',left=0)\n            elif is_autocompletable_prefix(\'async \'):autocomplete_prefix(\'async \',left=0)\n            # elif is_autocompletable_prefix(\'async def ():\'):autocomplete_prefix(\'def ():\',left=3)\n\n            elif is_autocompletable_prefix(\'print()\',allow_single_liner=True):autocomplete_prefix(\'print()\',left=1);function_comma_flag=True\n            elif is_autocompletable_prefix(\'pass\',allow_single_liner=False):autocomplete_prefix(\'pass\',left=0);function_comma_flag=True\n\n            elif is_autocompletable_prefix(\'except :\',allow_single_liner=False):autocomplete_prefix(\'except :\',left=1)\n            elif is_autocompletable_prefix(\'with :\'):autocomplete_prefix(\'with :\',left=1)\n            elif ((not \'\\n\' in before and not after and re.fullmatch(r\'\\w+\',before_line) and not any(before_line.endswith(keyword) for keyword in keywords)) #space-completions are enabled if we\'re typing a function out as a comand, because then we know we don\'t have to worry about messy edge cases. space-functions are really convenient...\\\n                    or enable_space_autocompletions) \\\n                  and not regex_match(before_line.lstrip(),r\'(def .*)|(for \\w*)\') \\\n                  and not name_of_interest.isdigit() \\\n                  and name_of_interest \\\n                  and try_autocompleting_functions(N=20):\\\n                    pass#"not name_of_interest.isdigit() and name_of_interest " because \'5\' --> \'display_color_255\' without it, which is REALLY annoying\n            # elif is_autocompletable_prefix(\'except :\',[\':\',\'\']):autocomplete_prefix(\'except :\',left=1,remove_suffix=True)\n            # elif is_autocompletable_prefix(\'except  as :\',[\':\',\'\']):autocomplete_prefix(\'except  as :\',left=5,remove_suffix=True)\n            elif before_line.lstrip()==\'except \' and after_line.rstrip()==\':\':\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n                return\n            # elif before_line.endswith(\' is \'):\n                #"x is |" --> "x is not |"\n                # buffer.insert_text(\'not \')\n                # return\n            elif before_line.endswith(\' is not \'):\n                #"x is not |" --> "x is |"\n                buffer.delete_before_cursor(4)\n                return\n            elif before_line.lstrip()==\'yield from \':\n                #"yield from |" --> "yield |"\n                buffer.delete_before_cursor(len(\'from \'))\n                return\n            elif before_line.lstrip().startswith(\'except\') and before_line.strip().endswith(":") and not after_line.rstrip():\n                buffer.insert_text(\'pass\')\n                return\n            elif starts_with_any(before_line.lstrip(),\'except \',\'with \') and before_line.endswith(\' as \') and after_line.strip()==\':\':\n                #except A as |:   --->   except A:|\n                buffer.delete_before_cursor(len(\' as \'))\n                buffer.cursor_right()\n            elif before_line.lstrip().startswith(\'except \') and not \'(\' in before_line:#not \'(\' in before_line because it won\'t properly complete functions for some reason inside the \'except\' lines\n                if before_line.lstrip()==\'except \' and after_line.rstrip()==\' as :\':\n                    #\'except | as :\' --> \'except|:\'\n                    buffer.cursor_right(len(\' as \'))#leave the \':\' alone\n                    buffer.delete_before_cursor(len(\' as \'))\n                    buffer.delete_before_cursor()\n                else:\n                    if after_line==\' as :\':\n                        #\'except stuff | as :\' --> \'except stuff as |:\'\n                        buffer.cursor_right(4)\n                    elif after_line==\':\' and not \' as \' in before_line and not before_line.endswith(\'as\'):\n                        if before_line.endswith(\' \'):\n                            buffer.delete_before_cursor()#when we have two spaces because of a function \'()\' --> \' \'\n                        if before_line.lstrip()==\'except \':\n                            buffer.delete_before_cursor()\n                        else:\n                            buffer.insert_text(\' as \')\n                        # buffer.cursor_right(0)\n                    else:\n                        buffer.insert_text(\' \')\n            elif before_line.lstrip().startswith(\'except \') and before_line.endswith(\'(\') and after_line.startswith(\')\'):\n                #except Exception()|:   -->   except Exception as |:\n                buffer.cursor_right()\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\' as \')\n            elif before_line.lstrip().startswith(\'for \') and after_line.rstrip()==\' in :\':\n                if before_line.lstrip()==\'for \':#if we haven\'t given any variable name to iterate yet, switch to the \'from\' shortcut instead because from and for both start with f\n                    #Switch between \'for\' and \'from\'\n                    buffer.cursor_right(len(\' in :\'))\n                    buffer.delete_before_cursor(len(\'for \'+\' in :\'))\n                    buffer.insert_text(\'from  import\')\n                    buffer.cursor_left(len(\'import \'))\n                    return\n                #Shouldn\'t trigger when r is a function, because of where this is in the elif chain\n                buffer.cursor_right(4)\n            elif before_line.endswith(\'lambda \')and after_line.startswith(\':\'):\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n            elif endswithany(before_line,\' -\',\'[-\',\'(-\',\'{-\'):\n                #[-|] ---> [_ |]\n                #[x and -|] ---> [x and _ |]\n                #Posible imperfection: Maybe _ is a function. If it is, this current (sloppy) method of handling it won\'t call _, it will just add a space after it.\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'_ \')\n                return \n            elif starts_with_any(after_line,\' in]\',\' in}\',\'in )\'):\n                #A follow-up to a completion after pressing the f-key to create a comprehension\n                #[x for x| in]   --->   [x for x in |]\n                buffer.cursor_right(3)\n                buffer.insert_text(\' \')\n                return\n            elif single_line and before_line.endswith(\' in \') and starts_with_any(after_line,\']\',\'}\',\')\'):\n                #List comprehension on single-liners\n                #[x for x in |] --->  [x for x in ans]\n                buffer.insert_text(\'ans\')\n                return                \n            elif endswithany(before_line,\' in e\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in e|]   --->   [x for x in enumerate(|)]\n                #for x in e|:      --->   for x in enumerate(|):\n                buffer.insert_text(\'numerate()\')\n                buffer.cursor_left()\n                return\n            elif endswithany(before_line,\' in z\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in z|]   --->   [x for x in zip(|)]\n                #for x in z|:      --->   for x in zip(|):\n                buffer.insert_text(\'ip()\')\n                function_comma_flag=True\n                buffer.cursor_left()\n                return\n            elif endswithany(before_line,\' in r\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in r|]   --->   [x for x in range(|)]\n                #for x in r|:      --->   for x in range(|):\n                buffer.insert_text(\'ange()\')\n                buffer.cursor_left()\n                return\n            elif before_line.endswith(\'if \') and after_line.startswith(\' else\'):\n                #Probably didn\'t mean to press the space-bar, out of habit...this works because of other completions\n                #if | else    --->    if | else\n                return\n            elif (starts_with_any(after_line,\' else]\',\n                                            \' else \',\n                                            \' else)\',\n                                            \' else}\',\n                                            \' else,\',\n                                            \' else:\') or after_line==\' else\') and not \\\n                                            endswithany(before_line,\' if \',\n                                                                    \']if \',\n                                                                    \')if \',\n                                                                    \'}if \',\n                                                                    \'"if \',\n                                                                    "\'if ",\n                                                                    ):\n                #[x if y| else] ---> [x if y else |]\n                buffer.cursor_right(len(\' else\'))\n                buffer.insert_text(\' \')\n            elif before_line and after_line and before_line[-1]+after_line[0] in [\'()\',\'[]\',\'{}\']:\n                if document.text in [\'ans()\',\'ans[]\']:\n                    buffer.delete()\n                    buffer.delete_before_cursor(count=40000)\n                    buffer.insert_text(\' \')\n                    return\n                if \'\\n\' not in before and after==\')\':\n                    #\'print()|\' --> \'print(ans,|)\'\n                    #NOTE that upon hitting the enter key, the extra comma dissapears (\'print(a,b,c,ans,|)\'   --->   \'print(a,b,c,ans)\')\n                    buffer.insert_text(\'ans,\')\n                    return\n                buffer.cursor_right(count=1)\n                buffer.delete_before_cursor(count=2)\n                # if can_take_no_args:\n                #     if function_comma_flag:\n                #             buffer.insert_text(\',\')\n                #     else:\n                #             buffer.insert_text(\'(),\')\n                # else:\n                #     if function_comma_flag:\n                #         buffer.insert_text(\',\')\n                #     else:\n                #         buffer.insert_text(\' \')\n                if function_comma_flag and after_line.startswith("))"):\n                    buffer.insert_text(\',\')\n                else:\n                    buffer.insert_text(\' \')\n            elif function_comma_flag and after_line.startswith(\')\'):\n                if before_line.endswith(","):\n                    if \'\\n\' not in before and after==\')\':#(meant for one-liners, not multiliners. I wanted a convenient way to write ans into functions like this.)\n                        #print(a,b,c,|) --> print(a,b,c,ans,|)\n                        buffer.insert_text(\'ans,\')\n                        #NOTE that upon hitting the enter key, the extra comma dissapears (\'print(a,b,c,ans,|)\'   --->   \'print(a,b,c,ans)\\n|\')\n                    else:\n                        #print(|) --> print\n                        buffer.delete_before_cursor()\n                        buffer.cursor_right()\n                        if after_line.startswith("))"):\n                            #print(f(|)) --> print(f(),|)\n                            buffer.insert_text(\',\')\n                elif before_line.endswith("lambda"):#special case to detect and space-autocomplete lambda syntax inside functions (normally, space in a function would make a comma; but we want print(lambda|) to go to print(lambda |:), not print(lambda,|))\n\n                    buffer.cursor_left(count=6)\n                    rev=document.text_before_cursor[::-1]\n                    buffer.insert_text(\' \')#This space is just an easy patch to let lambdas be easily put inside function arguments (before it was kinda annoying and didnt work well but not it does. yay. )\n                    buffer.cursor_right(count=6)\n                    buffer.insert_text(\' :\')\n                    buffer.cursor_left(count=1)\n                else:\n                    buffer.insert_text(\',\')\n            elif not after_line and all(is_namespaceable(x) for x in split) and len(split)==2 and split[0]==\'def\':\n                buffer.insert_text(\'():\')\n                buffer.cursor_left(count=2)\n            elif (before_line.lstrip() in[\'if\',\'while\',\'for\',\'with\',\'try\',\'except\'] or split and  name_of_interest==\'lambda\') and not after_line.strip().startswith(":"):\n                buffer.insert_text(\' :\')\n                buffer.cursor_left(count=1)\n            elif before_line and after_line and before_line[-1]==\',\'and after_line[0]==\':\':# for after lambda x,a,b,c,cursor:\n                buffer.delete_before_cursor(count=1)\n                buffer.cursor_right(count=1)\n                buffer.insert_text(\' \')\n\n            elif len(split)>=2 and split[-2]==\'lambda\' and \':\'not in name_of_interest or after_line==\'):\' and not before_line.rstrip().endswith(\',\') and before_line.lstrip().startswith(\'def \'):# new argument in def\n                #def f(x|): --> def f(x,):\n                buffer.insert_text(\',\')\n            elif before_line.lstrip()==\'i\':#Quick shortcut for importing. Type \'i\' then press space. THis should only come after checking if i is a function, which should happen in some other if/else case above this line.\n                #"i|" --> "import |"\n                buffer.insert_text(\'mport \')\n            elif before_line.lstrip()==\'f\':#Quick shortcut for \'from * import * style importing\'. Type \'f\' then press space.\n                #"f|" --> "from | import"\n                buffer.insert_text(\'rom  import\')\n                buffer.cursor_left(7)\n            elif not after_line and (before_line.lstrip().startswith(\'import \') or before_line.lstrip().startswith(\'from \')):\n                if before_line.endswith(\' as\'):\n                    #for when the user doesn\'t know about or forgets about the \'as\' autocompletion, so we don\'t end up with \'as as\'\n                    #\'import x as as|\'  -->  \'import x as |\'\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text(\'\')#To trigger autocompletion\n                    return\n                if before_line.endswith(\',\'):\n                    #\'import x,\'  -->  \'import x, |\'\n                    #Weird behavior if we don\'t do this an the user manually puts a comma without a space before this function would\n                    buffer.insert_text(\' \')\n                    return\n                #not after_line, so we\'re at the end of the line, which means we are done inputting the module name after \'from\' or \'input\'\n                l=space_split(before_line)\n                allready_end_with_an_as=len(l)>=2 and l[-2]==\'as\'\n                if before_line.endswith(\' as \'):\n                    #import x as | --> import x,|\n                    buffer.delete_before_cursor(4)\n                    buffer.insert_text(\', \')\n                elif before_line.rstrip().endswith(\',\'):\n                    #import x,| --> import x as |\n                    buffer.delete_before_cursor(2)\n                    # if allready_end_with_an_as:\n                        # return\n                    # buffer.insert_text(\' as \')\n                elif \'import \' in before_line:#to protect against "from x|" --> "from x as |" if we decide to type out the whole thing (naively)\n                    #import x| --> import x as |\n                    buffer.insert_text(\', \' if allready_end_with_an_as else \' as \')#We default to the \' as \' instead of \',\' because \' as \' starts with a space, which is the key we pressed. This is as opposed to functions, which default to using the comma on space by default.\n                else:\n                    buffer.insert_text(\' \')\n            elif before_line.lstrip().count(\' \')==1 and before_line.lstrip().startswith(\'from \') and after_line==\' import\':#Quick shortcut for \'from * import * style importing\'. Type \'f\' then press space.\n                # "from *| import" --> "from * import |"\n                if before_line.lstrip()==\'from \' and after_line.startswith(\' import\'):#we have no module name specified yet\n                    #Switch between \'for\' and \'from\'\n                    buffer.cursor_right(len(\' import\'))\n                    buffer.delete_before_cursor(len(\'from \'+\' import\'))\n                    buffer.delete_before_cursor(13)\n                    buffer.insert_text(\'for  in :\')\n                    buffer.cursor_left(len(\' in :\'))\n                    return\n                buffer.cursor_right(7)\n                buffer.insert_text(\' \')\n            elif starts_with_any(before_line.lstrip(),\'for \',\'except \') and after_line==\':\':#If we want a one-line if, elif, etc.\n                if before_line.lstrip not in [\'for \',\'except \']:#make sure it\'s not empty; we don\'t want to override completion etc\n                    buffer.cursor_right(1)#Note that we exclude things we\'d normally want to say, like "if x in y:"\n                    buffer.insert_text(\'\')#To trigger autocompletion\n                    return\n            else:\n                buffer.insert_text(\' \')\n            buffer.insert_text(\'\')#To trigger autocompletion\n\n        except Exception as e:\n            from rp import print_stack_trace\n            print_stack_trace(e)\n\n    @handle("?",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'?\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        # after= document.text_after_cursor\n\n        # before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        # after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if before.endswith(\'=\'):\n            #x=| --> x?   (meant because I often want to use ? on something that I\'ve just imported, and this is a small, stable way to do it)\n            buffer.delete_before_cursor()\n        buffer.insert_text(\'?\')\n    @handle("!",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'!\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        if not before:\n            buffer.insert_text(\'!\')\n            return\n\n        # after= document.text_after_cursor\n\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        # after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if len(before)<3 and not (before_line.count("\'")%2 or before_line.count(\'"\')%2):#not in a string\n            #if not in the beginning (for a ! or !! shell command) and not in string, the only time we\'d want ! is for !=\n            buffer.insert_text(\'!=\')\n            return\n        buffer.insert_text(\'!\')\n    @handle(":",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\':\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if after_line==\':\':\n            buffer.cursor_right(count=1)\n        else:\n            buffer.insert_text(\':\')\n    @handle(\'=\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        import rp.r_iterm_comm as r_iterm_comm\n\n        def buffer_insert(text):\n            if(text==\'==\'):#text cannot be \'=\' because we still want to be able to use the \'-=\' augmented assignment\n                if before_line.endswith(\'-\'):\n                    #An easy way to type \'+\' without the shift key: \'-=\', in places where that token would normally be invalid. Chosen because \'-\' and \'=\' are right next to each other.\n                    buffer.delete_before_cursor()\n                    buffer.insert_text(\'+\')\n                    return\n            # if text in \'==\':\n                # if before_line.endswith(\'==\'):\n                    # return\n            buffer.insert_text(text)\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'=\',event):return\n        document=buffer.document\n        #\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n\n\n        for l,r in {\'()\',\'[]\'}:\n            if (not \' \' in before_line.strip() and before_line.endswith(r) and before_line.count(l)<=before_line.count(r) and not after_line) \\\n                and before_line.count(l)<before_line.count(r):\n                #The \')=\' operator\n                #The \']=\' operator\n                #alpha)|   --->   alpha=|(alpha)\n                #foo(bar)[0])|   --->   foo(bar[0])=|(foo(bar[0]))\n                buffer.delete_before_cursor()\n                arg=\'=\'+l+before_line.lstrip()\n                buffer.insert_text(arg)\n                buffer.cursor_left(len(arg))\n                buffer.cursor_right()\n                return\n            if endswithany(before_line,\'==\',\'<=\',\'>=\') and after_line.startswith(r):\n                #i[0==|]  --->  i[0]==|\n                #f(x==|)  --->  f(x)==|\n                #f(x>=|)  --->  f(x)>=|\n                #f(x<=|)  --->  f(x)<=|\n                end=before_line[-2:]\n                buffer.delete_before_cursor(2)\n                buffer.cursor_right()\n                buffer_insert(end)\n                return\n\n        if after_line.startswith(\')\'):\n            if   before_line.endswith(\'(\'):\n                #if f(|):   --->   if f()==|:\n                buffer.cursor_right()\n                buffer_insert(\'==\')\n                return\n            elif before_line.endswith(\',\'):\n                #if f(x,|):  --->   if f(x)==|:\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n                buffer_insert(\'==\')\n                return\n        if starts_with_any(before_line.lstrip(),\'elif\',\'if\',\'while\'):\n            # if x==y:\n            #     blah\n            # elif |: —> elif x==|:\n            #\n            # AND a cooler use-case: (because it only copies the variable from the same indent layer)\n            #   if x==5:\n            #       if y==6:\n            #           pass\n            #   elif x==7:\n            #       if y==7:\n            start=None\n            starts={\'elif\',\'if\',\'while\'}\n            for x in starts:\n                if before_line.strip()==x:\n                    indent=before_line[:before_line.find(x)]\n                    start=x\n            if start is not None:\n                assert before_line.startswith(indent)\n                i=-2\n                try:\n                    while True:\n                        match=before.split(\'\\n\')[i]\n                        # if match[:len(indent)].strip():#If wrong indentation level. This check is kinda rigid, maybe it would be nice to not have it...\n                            # break\n                        for match_start in starts:\n                            if match.startswith(indent+match_start) and \'==\' in match:\n                                match=match[match.find(match_start)+len(match_start):]\n                                match=match[:match.find(\'==\')]\n                                match=match.strip()\n                                if before_line[-1].strip():\n                                    buffer_insert(\' :\')\n                                    buffer.cursor_left()\n                                buffer_insert(match+\'==\')\n                                return\n                        i-=1\n                    return\n                except:pass\n        if (False or #\'=\' in before_line and not \'==\' in before_line or #We allready have some assignment operation on this line, therefore all other =\'s must belong to ==\'s....ALMOST ALL THE TIME. There is the edge case where we say "a=b=c=d=e" etc.\n            not function_comma_flag  and not after_line.startswith(\')\') and starts_with_any(before_line.lstrip(),\'if \',\'elif \',\'while \',\'not \',\'assert \',\'return \',\'yield \',\'for \',\'lambda \',\'with \',\'not \')) and\\\n                not (before_line.count("\'")%2 or before_line.count(\'"\')%2):#not in a string\n            #if x|:  -->  if x==|:\n            #   and\n            #if x==|:  -->  if x==|:\n            if not re.fullmatch(r\'.*(\\>|\\<)\',before_line):\n                from rp import text_to_speech as tts \n                # tts("r")\n                if before_line.endswith(\'!\'):\n                    buffer_insert(\'=\')\n                    return\n                if not before_line.endswith(\'==\') or before_line.endswith(\'!=\'):\n                    buffer_insert(\'==\')\n                return\n\n\n\n\n        char_operators=[\'\',\'+\',\'-\',\'*\',\'/\',\'%\',\'//\',\'**\',\'&\',\'|\',\'^\',\'>>\',\'<<\',\'~\']\n        letter_operators=[\'and\',\'or\',\'not\',\'==\',\'!=\',\'>=\',\'<=\']\n        var=r_iterm_comm.last_assignable_comm\n        # the .=, (=, and [= operators:\n        if endswithany(before_line.lstrip(),\'.\',\'(\',\'[\') and\\\n            (before_line.endswith(\'.\') and not after_line.strip() or\n             before_line.endswith(\'(\') and after_line.strip() in [\'\',\')\'] or\n             before_line.endswith(\'[\') and after_line.strip() in [\'\',\']\']):\n            if before_line.lstrip()==\'ans.\':\n                #Prevent: \'|\' --> \'ans.|\' --> \'ans=ans.\'\n                #Because last_assignable_comm is more useful in this case.\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'.\')\n                document=buffer.document\n                before_line=document.current_line_before_cursor\n                before     =document.text_before_cursor\n            #x.=y --> x=x.y\n            #x.|  --> x=x.|\n            #AND\n            #x(|) --> x=x(|)\n            #x[|] --> x=x[|]\n            operator=before_line.lstrip()[-1]\n            buffer.delete_before_cursor(count=1)\n            assign_to=before_line.lstrip()\n            if var and not assign_to[:-1]:\n                #.|  -->  ans=ans.|\n                buffer_insert(var+\'=\'+var+operator)\n                return\n            buffer_insert("="+assign_to)\n        elif before==\'ans(\'and after==\')\':# Space + equals -> import torch;\n            buffer.delete()\n            buffer.delete_before_cursor(count=1000)\n            buffer_insert("ans="+str(var))\n\n        elif var and before==var+"=":\n            buffer.delete_before_cursor(count=1000)\n            # tts("t")\n            buffer_insert("==")\n\n        elif var and not after and before in letter_operators:# User hasn\'t typed anything in yet\n            buffer.cursor_left(count=10000)\n            buffer_insert(var)\n            buffer_insert("=")\n            buffer_insert(var)\n            if before.isalpha():# and, or, not\n                buffer_insert(" ")# We need a space\n            buffer.cursor_right(count=10000)\n        elif var and not after and before in char_operators:# User hasn\'t typed anything in yet\n            buffer.cursor_left(count=10000)\n            buffer_insert(var)\n            buffer.cursor_right(count=10000)\n            buffer_insert(\'=\')\n        else:\n            buffer_insert(\'=\')\n\n    import os\n    if os.name != \'nt\':#If we are NOT running windows, which screws EVERYTHING up...\n        # @handle(Keys.ControlC)\n        # def _(event):\n        #     buffer=event.cli.current_buffer\n        #     # document=buffer.document\n        #     # before=document.text_before_cursor\n        #     # after= document.text_after_cursor\n        #     buffer.insert_text(\'RETURN\')\n\n\n        @handle(Keys.ControlH,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            #On ubuntu, shift+backspace triggers this; and inserting \'HISTORY\' is very annoying when we just want to backspace\n            buffer.delete_before_cursor()\n            # buffer.insert_text(\'HISTORY\')\n        @handle(Keys.ControlE)\n        def _(event):\n            #Run the buffer without erasing it or disturbing cursor position\n            run_code_without_destroying_buffer(event)\n\n        @handle(Keys.ControlW)\n        def _(event):\n            handle_run_cell(event)\n\n\n\n\n\n        @handle(Keys.ControlU,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            buffer.insert_text(\'UNDO\')\n        @handle(Keys.ControlP,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            before_line=buffer.document.current_line_before_cursor\n            after_line=buffer.document.current_line_after_cursor\n            if before_line==\'PREV\' and not after_line:\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'NEXT\')\n            elif before_line in [\'\',\'NEXT\'] and not after_line:\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'PREV\')\n\n    def move_arg(buffer,delta_positions:int):\n        assert delta_positions in {1,-1}\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n\n        def chop_at_parenthesis_level(s:str,l:int):\n            n=0\n            for i,c in enumerate(s):\n                if c in \'([{\':n+=1\n                if c in \'])}\':n-=1\n                if n==l:return s[:i]\n            return s\n\n        after_line=chop_at_parenthesis_level(after_line,-1)#Count and match parenthesis (we want \'A(B)(C)D)E\' --> \'A(B)(C)D\') (when we\'re dealing with after_line)\n        before_line=before_line[::-1]\n        before_line=chop_at_parenthesis_level(before_line,1)\n        before_line=before_line[::-1]\n\n\n        bargs=before_line.split(\',\')\n        aargs=after_line.split(\',\')\n        aarg=aargs[0]\n        barg=bargs[-1]\n        laarg=len(aarg)\n        lbarg=len(barg)\n        arg=barg+aarg\n        larg=len(arg)\n\n        def erase_arg():\n            buffer.delete_before_cursor(lbarg)\n            buffer.delete              (laarg)\n\n        if delta_positions==1:\n            if not \',\' in after_line:return#Otherwise we glitch and delete the rest of it\n            if len(aargs)==1:return\n            erase_arg()\n            buffer.delete()\n            buffer.cursor_right(len(aargs[1]))#Shouldn\'t get index error if called properly (where cursor is AFTER a comma)\n            buffer.insert_text(\',\'+arg)\n            buffer.cursor_left(larg)\n        if delta_positions==-1:\n            # if not \',\' in after_line:return#Otherwise we glitch and delete the rest of it\n            #     buffer.delete_before_cursor()\n            #     buffer.delete(laarg)\n            #     buffer.cursor_left(lbarg)\n            #     buffer.insert_text(arg+\',\')\n            erase_arg()\n            buffer.delete_before_cursor()\n            buffer.cursor_left(len(bargs[-2]))\n            buffer.insert_text(arg+\',\')\n            if len(bargs)>2:\n                buffer.cursor_left(larg+1)\n\n\n\n\n    @handle(\'<\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'<\',event):return\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.endswith(\',\'):\n            #Swap arguments around parenthesis! (Warning: Doesn\'t handle parenthesis inside strings as an edge case)\n            #(apple,f(x),|[\'bananna\'])   --->   (apple,|[\'bananna\'],f(x))\n            try:move_arg(buffer,-1)\n            except:print("JAM")\n            return\n        buffer.insert_text(\'<\')\n    @handle(\'>\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'>\',event):return\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.endswith(\',\'):\n            #Swap arguments around parenthesis! (Warning: Doesn\'t handle parenthesis inside strings as an edge case)\n            #(apple,|f(x),[\'bananna\'])   --->   (apple,[\'bananna\'],f(x))\n            try:move_arg(buffer,1)\n            except:print("JAM")\n            return\n        buffer.insert_text(\'>\')\n    def do_backspace(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if self_dot_var_equals_var(buffer,\'\\b\') and after_line.strip()!=\'=\':\n            #self.foo|=foo   --->   self.fo|=fo\n            return\n        if before_line.endswith(\' as \'):\n            #(I\'m often trigger-happy with the space-bar on using imports, and try to correct it with backspace. This saves me some time...)\n            #import osaidf as |   --->   import osaidf\n            buffer.delete_before_cursor(len(\' as \'))\n            return\n        if before_line.endswith(\', \'):\n            #import osaidf as c, |   --->   import osaidf as c|\n            buffer.delete_before_cursor(len(\', \'))\n            return\n        selection_tuples=list(document.selection_ranges())\n        if not selection_tuples:\n            before=document.text_before_cursor\n            after= document.text_after_cursor\n            if not after and before ==\'ans.\':\n                buffer.delete_before_cursor(len(before))\n                return\n            if not before_line.strip():\n                #(backspace entire indent when it\'s empty. example:)\n                #def f(x):\n                #····|return x\n                #  --->\n                #def f(x):return x\n                buffer.delete_before_cursor(len(before_line))\n            bl=before_line.lstrip()\n            al=after_line.rstrip()\n            if bl+\'|\'+al in {\'from | import\',\'for | in :\',\'while |:\',\'if |:\',\'elif |:\',\'except |:\',\'lambda :\',\'with |:\'}|\\\n                            {\'import |\',\'return |\',\'return|\',\'pass|\',\'else:|\',\'yield |\',\'assert |\'}:\n                            #Delete from both sides of the cursor on constructs we tend to make automatically (to make it less annoying)\n                buffer.cursor_right(len(al))\n                buffer.delete_before_cursor(len(bl+al))\n                return\n            if before and after:\n                if after_line.strip()in {\':\',\'():\'} and before_line.lstrip() in {\'def \',\'while \',\'for \',\'class \',\'if \',\'elif \',\'else\',\'except \',\'lambda \',\'with \',\'try\'}:\n                    #  \'    def |:\'   -->   \'    |\'\n                    buffer.delete(len(after_line))\n                    buffer.delete_before_cursor(len(before_line.lstrip()))\n                    return\n                pair=before[-1]+after[0]\n                if pair in [\'()\',\'{}\',\'[]\',"\'\'",\'""\']:\n                    #  \'f(|)\'   -->   \'f|\'\n                    buffer.cursor_right(count=1)\n                    buffer.delete_before_cursor(count=2)\n                    buffer.insert_text(\'\')#trigger autocompletion\n                    return\n            buffer.delete_before_cursor(count=1)\n        else:\n            buffer.cut_selection()\n        buffer.insert_text("")#Using this to trigger autocompletion on backspace\n    def alt_backspace_char_class(event):\n        #get char before cursor and distinguish between whitespace, alphanumerics, and other chars\n        c=event.cli.current_buffer.document.text_before_cursor\n        if not c:\n            return None#no chars behind cursor\n        c=c[-1]\n        if c.isalnum():\n            return 1\n        elif not c.strip():\n            return 2\n        else:\n            return 3\n\n    @handle(Keys.Backspace,eager=True)\n    def _(event):\n        if meta_pressed():\n            do_backspace(event)#We expect at least two characters to dissapear; so eat through one-char wide spaces (for example, "def |a()" --> "|a()", not "def|a()")\n            c=alt_backspace_char_class(event)\n            while c is not None and c==alt_backspace_char_class(event):\n                do_backspace(event)\n            return\n        do_backspace(event)\n\n    @handle(Keys.Right)\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        selection_tuples=list(document.selection_ranges())\n        for t in selection_tuples:\n            buffer._set_cursor_position(t[1])\n            buffer.exit_selection()\n        else:\n            cpos=buffer.cursor_position\n            buffer.cursor_right(1)\n            if buffer.cursor_position==cpos:\n                buffer=event.cli.current_buffer\n                buffer._set_cursor_position(min(buffer.cursor_position + 1,len(buffer.document.text)))\n            # buffer.cursor_right(0)# Gets stuck on ends of lines. Not as good as the new version\n\n    @handle(Keys.Left)\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        selection_tuples=list(document.selection_ranges())\n        for t in selection_tuples:# Handle arrow-keys on selection by putting the cursor on beginning or end of selection\n            buffer._set_cursor_position(min(t[0]+1,len(buffer.document.text)))\n            buffer.exit_selection()\n        else:\n            cpos=buffer.cursor_position\n            buffer.cursor_left(1)\n            if cpos==buffer.cursor_position:\n                buffer=event.cli.current_buffer\n                buffer._set_cursor_position(max(buffer.cursor_position - 1,0))\n\n    @handle(Keys.Down)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if meta_pressed():\n            buffer.cursor_down(10)\n        else:\n            buffer.auto_down(ryan_allow_completion_navigation=False)\n        # document=buffer.document\n        # assert isinstance(buffer,Buffer)\n        # if not has_selected_comlpetion(buffer):\n            \n        # if has_selected_completion(buffer) or not \'\\n\' in buffer.document.text:\n            # buffer.auto_down()# Will select next completion\n            # try:\n            #     if not has_selected_completion(buffer) or not \'\\n\' in buffer.document.text3:#\n            #         buffer.auto_down()# So we don\'t get stuck when we come back around again\n            # except:pass\n        # else:\n        #     temp=buffer.complete_state\n        #     try:\n        #         buffer.complete_state=False\n        #         buffer.auto_down()# Will select next completion\n        #     finally:\n        #         buffer.complete_state=temp\n\n    @handle(Keys.Up)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if meta_pressed():\n            buffer.cursor_up(10)\n        else:\n            buffer.auto_up(ryan_allow_completion_navigation=False)\n            return\n            assert isinstance(buffer,Buffer)\n            if has_selected_completion(buffer):#  Up is the only one that can initially select a history item\n                buffer.auto_up()# Will select next completion\n                if not has_selected_completion(buffer):\n                    buffer.auto_up()# So we don\'t get stuck when we come back around again\n            else:\n                temp=buffer.complete_state\n                try:\n                    buffer.complete_state=False# So we don\'t select a completion\n                    buffer.auto_up()# Will select next completion\n                finally:\n                    buffer.complete_state=temp\n\n\n\n\n\n    @handle(Keys.ControlZ)\n    def _(event):\n        buffer=event.cli.current_buffer\n        # print(buffer._redo_stack)\n        buffer.undo()\n\n    @handle(Keys.ControlY)\n    def _(event):\n        buffer=event.cli.current_buffer\n        # print(buffer._redo_stack)\n        buffer.redo()\n\n    @handle(Keys.ControlQ)\n    def _(event):\n        #Abandon the current buffer. But still save it to history.\n\n        buffer=event.cli.current_buffer\n        buffer.append_to_history()\n        event.cli.abort()\n        # print(buffer._redo_stack)\n        # buffer.redo()\n\n    import rp.r_iterm_comm as r_iterm_comm\n\n    @handle(Keys.ControlV)# On mac this is alt+z\n    def _(event):\n        if meta_pressed(clear=True):\n            edit_event_buffer_in_vim(event)\n        else:\n            buffer=event.cli.current_buffer\n            from rp import string_from_clipboard\n            clip=r_iterm_comm.clipboard_text\n            try:\n                clip=string_from_clipboard()\n                buffer.cut_selection()\n                buffer.insert_text(clip)\n            except:\n                pass# Paste failed\n\n    @handle(Keys.ControlA)# On mac this is alt+z\n    def _(event):\n        reprify=False\n        if meta_pressed(clear=True):\n            reprify=True\n        if True:\n            buffer=event.cli.current_buffer\n            try:\n                if reprify:\n                    clip=repr(str(get_ans()))\n                else:\n                    clip=str(get_ans())\n                buffer.cut_selection()\n                buffer.insert_text(clip)\n            except:\n                pass# Paste failed\n\n    @handle(Keys.ControlC)# ,filter=has_selection)# On mac this is alt+z\n    def _(event):\n        buffer=event.cli.current_buffer\n        selection_tuples=list(buffer.document.selection_ranges())\n\n        #region\n        if not selection_tuples:\n            selection_tuples=[]\n            line=buffer.document.current_line\n            to_copy="\\n" + line# \' \' * (len(line)-len(line.lstrip()))\n            buffer.cursor_right(12323213)\n        else:\n            to_copy=""\n            for t in selection_tuples:\n                to_copy+=buffer.document.text[t[0]:t[1]+1]\n        r_iterm_comm.clipboard_text=to_copy\n        from rp import string_to_clipboard\n        try:\n            string_to_clipboard(to_copy)\n        except:\n            pass# Copy failed\n\n\n    def inc_dec(inc_or_dec:str):# ++ ⟶ +=1\n        #increment or decrement\n        @handle(inc_or_dec,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,inc_or_dec,event):return\n            document=buffer.document\n            before=document.text_before_cursor\n            before_line=document.current_line_before_cursor\n            after_line=document.current_line_after_cursor\n            after= document.text_after_cursor\n            current_line= document.current_line\n            above_line=    line_above(buffer)\n            single_line=above_line is None\n            # import r_iterm_comm\n            # if not after and r_iterm_comm.last_assignable_comm and before[-1]==inc_or_dec:# So you can do ++ -> assignable ++= (because +=1 -> assignable+=1)\n            #     buffer.cursor_left(count=1000)\n            #     buffer.insert_text(r_iterm_comm.last_assignable_comm)\n            #     buffer.cursor_right(count=1000)\n            #     return\n            # print(\'GAGAGAGA\')\n\n            from rp import is_namespaceable\n            if inc_or_dec == \'-\' and all(is_namespaceable(x) for x in before_line if x not in \' \') and starts_with_any(before_line.lstrip(),\'def \',\'class \'):# When writing the title of a function, you don\'t have to use _ you can type - and it will turn it into _\n                #(on -)\n                #def |(): ---> def _|():\n                #     AND\n                #def f|(): ---> def _f_|():\n                buffer.insert_text(\'_\')\n                return\n            if inc_or_dec==\'-\' :\n                if is_namespaceable(before_line.strip()) and before_line.rstrip()==before_line and not single_line:\n                    #If multiline, and we\'re starting a line, and we\'re continuing some variable name, assume that we don\'t want to create an expression.\n                    #Example:\n                    #def f():\n                    #   x|   ---->    x_\n                    buffer.insert_text(\'_\')\n                    return\n\n                if before_line.endswith(\'for \')and starts_with_any(after_line,\' in)\',\' in}\',\' in]\'):\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(3)\n                    buffer.insert_text(\' \')\n                    return\n                skip=False\n                token,name,found=token_name_found_of_interest(before_line)\n                if before_line==\'from \'and after_line==\' import\':\n                    buffer.cursor_right(1233)\n                    buffer.delete_before_cursor(len(\'from  import\'))\n                elif found:\n                    # print("NAME IS "+name)\n                    if name==\'f\'==before_line.strip() and not callable(token):\n                        buffer.delete_before_cursor()\n                    else:\n                        skip=True   \n                if not skip:\n                    buffer.insert_text(\'for _ in :\')\n                    buffer.cursor_left()\n                    return \n\n            if (inc_or_dec==\'+\' or False) and (after_line.startswith(\'"\') or after_line.startswith("\'")):\n                #(on + followed by +) (for combining strings more easily)\n                #"Hello"|"World"  --->  "Hello"|+"World"  --->  "Hello"+|+"World"\n                #       AND\n                #\'Hello\'|\'World\'  --->  \'Hello\'|+\'World\'  --->  \'Hello\'+|+\'World\'\n                buffer.insert_text(\'+\')\n                buffer.cursor_left()\n                return\n            # if (inc_or_dec==\'-\' or True) and (endswithany(before_line,\'"\',"\'") and after_line.startswith("+")):\n            #     #On pressing the \'-\' key, (because string literals don\'t implement the \'-\') operator\n            #     #"Hello"|+"World"  --->  "Hello"+|+"World"\n            #     buffer.insert_text(\'+\')\n            #     return\n\n            if inc_or_dec==\'-\' and before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n                #(on -)\n                #for | in : --> for _ in |:\n                buffer.insert_text(\'_\')\n                buffer.cursor_right(len(\' in \'))\n                return\n            if len(before_line.strip())>1 and before and before[-1]==inc_or_dec and is_namespaceable(before_line[:-1].lstrip()):\n                #(on +) x+|  --->  x+=1\n                #       AND\n                #(on -) x-|  --->  x-=1\n                if not after_line:\n                    buffer.insert_text("=1")\n                else:\n                    buffer.insert_text(inc_or_dec)\n                    buffer.cursor_left()\n            elif inc_or_dec==\'-\' and before_line.endswith(\'-\'):\n                #becuase then we dont have to reach for the shify key (default blank vairable is _ in for loops)\n                #print(-|) ---> print(_|)\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'_\')\n            elif inc_or_dec==\'-\' and before_line.endswith(\'-=1\'):\n                #(when we wanted to make an underscore but got -=1, just press - again...)\n                #x-=1| ---> x_| \n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'_\')\n            else:\n                buffer.insert_text(inc_or_dec)\n            # if inc_or_dec==\'+\':\n            #     print("ewfoijfdsijoijowfijofejio")\n            #     if before.endswith(\'+\') and after and after[0] in \'\\\'"\':\n            #         buffer.cursor_left()\n    inc_dec(\'+\')\n    inc_dec(\'-\')\n\n    # @handle("h")\n    # def sploo(x):\n    #     print("A")\n    # @handle("h")\n    # def sploo(x):\n    #     print("B")\n\n\n    bracket_pairs={"()","[]","{}"}\n    def thing(begin,end):\n        @handle(begin,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,begin,event):return\n            if(begin==\'(\'):\n                document=buffer.document\n                before_line=document.current_line_before_cursor\n                after_line =document.current_line_after_cursor\n                if regex_match(before_line.lstrip(),r\'for\\s+\\w+\\s+in\\s+len\'):\n                    #for x in len|   -->  for x in range(len(|))\n                    buffer.delete_before_cursor(3)\n                    buffer.insert_text(\'range(len())\')\n                    buffer.cursor_left(2)\n                    return\n                if before_line.rstrip().startswith(\'def \') and after_line.strip()==\'():\':\n                    #def f|() --> def f(|):\n                    buffer.cursor_right()\n                    return\n            if not surround(buffer,begin,end):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                buffer.insert_text(begin)\n                if after.strip()==\':\' or not after or after[0].isspace() or before and before[-1]+after[0]in bracket_pairs or document.find_matching_bracket_position()!=0:\n                    buffer.insert_text(end)\n                    buffer.cursor_left(count=1)\n        @handle(end,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,end,event):return\n            if not surround(buffer,begin,end):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                if not after or after[0]!=end:#  or before.count(begin)>before.count(end):#Last part is checking for parenthesis matches. I know somewhere there\'s a way to do this already thats better and isnt confused by strings but idk where that is\n                    buffer.insert_text(end)\n                else:\n                    buffer.cursor_right(count=1)\n    for bracket_pair in bracket_pairs:\n        thing(bracket_pair[0],bracket_pair[1])\n\n    def surround(buffer,begin,end):\n        from rp.prompt_toolkit.selection import SelectionState\n        document=buffer.document\n        text=document.text\n        selection_tuples=list(document.selection_ranges())\n        for range in selection_tuples:\n            buffer.document=Document(text=text[:range[0]]+begin+text[range[0]:range[1]+1]+end +text[range[1]+1:],cursor_position=range[0]+1,selection=None)\n            buffer.document._selection=SelectionState(original_cursor_position=range[1]+1,type=document.selection.type)\n        # exec(mini_terminal)\n        # from rp.rp_ptpython.utils import get_jedi_script_from_document\n        # script=get_jedi_script_from_document(document,r_iterm_comm.globa,r_iterm_comm.globa)\n        # script.call_signatures()\n        return bool(selection_tuples)# Returns whether we have a selection\n    def thing2(char):\n        @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event,filter=has_selection):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,char,event):return\n            if not surround(buffer,char,char):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                before_line=document.current_line_before_cursor\n                after_line=document.current_line_after_cursor\n\n                if after.startswith(char) and not before.endswith(char):\n                    buffer.cursor_right()\n                # else:\n                #     buffer.insert_text(char)\n                #     buffer.cursor_left()\n                #     buffer.insert_text(char)\n\n                elif (before and after and before[-1]+after[0] in {"[]","()","{}",",}",",)",",]",\'+)\',\'+,\',\'+}\',\'+]\'}) or (not after_line or not before and not after or before and after and before[-1]in\'(=!#%&*+,-./:;<>^|~\' and after[0]in\')=!#%&*+,-./ :;<>^|~\' or before and after and before[-1]+after[0] in 2*char):\n                    #| --> "|"\n                    #| --> \'|\'\n                    buffer.insert_text(char)\n                    buffer.cursor_left()\n                    buffer.insert_text(char)\n                elif before.endswith(char):\n                    #For splitting strings into two pieces\n                    #(" pressed twice)\n                    #"Hello|World!"  -->  "Hello"|World!"  -->  "Hello"|"World!"\n                    buffer.insert_text(char)\n                    buffer.cursor_left()\n                else:\n                    buffer.insert_text(char)\n\n    for char in \'"\\\'\':\n        thing2(char)\n    @handle(\',\',filter=~vi_mode_enabled&microcompletions_enabled)  \n    def _(event):\n        #Comma event\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\',\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n            #for | in:  --->  for i,e in enumerate(|):\n            buffer.insert_text(\'i,e\')\n            buffer.cursor_right(len(\' in \'))\n            buffer.insert_text(\'enumerate()\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\'for \') and starts_with_any(after_line,\' in]\',\' in)\',\' in}\'):\n            #[x for | in]  --->  [x for i,e in enumerate(|)]\n            buffer.insert_text(\'i,e\')\n            buffer.cursor_right(len(\' in\'))\n            buffer.insert_text(\' enumerate()\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\',\') and after_line.startswith(\',\'):\n            #We prevent from accidently putting in more parenthesis than make sense\n            #x,|,y  --->  x,|,y    (no change)...\n            return\n        if before_line.endswith(\',\') and \\\n            not before_line.endswith(\',,\'):#...however, we do allow ,,,,,,,:   x,,|y  --->  x,,,|y  \n            #y,|x  -->  y,|,x\n            buffer.insert_text(\',\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\'-\'):\n            #Turning the \'-\' into a \'_\' where a \'-\' would be syntactically invalid\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            \n        if after_line.startswith(\',\'):\n            #f(a,b,c|,)   --->   [a,b,c,|)\n            #(don\'t waste commas)\n            buffer.cursor_right()\n            return\n        if not (before_line.endswith(\',\') and after_line.startswith(\']\')):\n            #[x,y|]  -->  [x,y,|]\n            #       AND\n            #[x,y,|]  -->  [x,y,|]\n            #for when I spam the [12,3123,12,31,23,12,31,23,123,1,23,123,12,31,23] and don\'t want accidental \',,\'s\n            buffer.insert_text(\',\')\n            return\n\n    # @handle(\',\')\n    # def thing3(char):\n    #     @handle(char)\n    #     def _(event,filter=~has_selection):# Parenthesis completion\n    #         buffer=event.cli.current_buffer\n    #         document=buffer.document\n    #         before=document.text_before_cursor\n    #         after= document.text_after_cursor\n    #         if before.endswith(\'(\') and after.startswith(\')\'):\n    #             buffer.cursor_right()\n    #         buffer.insert_text(char)\n    # for char in \'!#%&*,./:;<>^|~\':# + and - allready taken\n    #     thing3(char)\n\n    @handle(Keys.Delete)\n    def _(event):\n        event.cli.current_buffer.delete()\n\n    @handle(Keys.ControlSpace)# For commenting\n    def _(event):  # Parenthesis completion\n        # def toggle_comment_on_line(x):\n        #     y=x.lstrip()\n        #     if y.startswith("#"):# Line is commented out\n        #         i=x.find(\'#\')\n        #         return x[:i]+x[i+1:]\n        #     l=len(x)-len(y)\n        #     return l*\' \' +\'#\' + y\n\n        buffer=event.cli.current_buffer\n        # buffer.transform_current_line(toggle_comment_on_line)\n        # buffer.insert_text("ⵁ")\n        # buffer.delete_before_cursor\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        buffer.cursor_left(10000)\n        lstrip=current_line.lstrip()\n        w=len(current_line)-len(lstrip)\n        buffer.cursor_right(w)\n        if current_line.lstrip().startswith(\'#\'):\n            buffer.delete()\n        else:\n            buffer.insert_text(\'#\')\n        buffer.cursor_down()\n    #endregion\n\n    @handle(Keys.ControlT,eager=True)\n    def _(event):\n        """\n        Cursor to top.\n        """\n        event.cli.current_buffer.history_backward()\n    @handle(Keys.ControlB,eager=True)\n    def _(event):\n        """\n        Cursor to top.\n        """\n        event.cli.current_buffer.history_forward()\n\n    @handle(Keys.ControlL)\n    def _(event):\n        """\n        Clear whole screen and render again -- also when the sidebar is visible.\n        """\n        event.cli.renderer.clear()\n    @handle(Keys.F2)\n    def _(event):\n        """\n        Show/hide sidebar.\n        """\n        python_input.show_sidebar = not python_input.show_sidebar\n\n    @handle(Keys.F3)\n    def _(event):\n        """\n        Select from the history.\n        """\n        python_input.enter_history(event.cli)\n\n    @handle(Keys.F4)\n    def _(event):\n        """\n        Toggle between Vi and Emacs mode.\n        """\n        event.cli.vi_state.input_mode = \'vi-navigation\'\n        python_input.vi_mode = not python_input.vi_mode#If we\'re switching out of RP-Emacs, its most likely because we want them good ol\' vim bindings for manipulating text. \n        # print(event.cli.vi_state)\n        # python_input.vi_mode = not python_input.vi_mode\n\n    @handle(Keys.F6)\n    def _(event):\n        """\n        Enable/Disable paste mode.\n        """\n        python_input.paste_mode = not python_input.paste_mode\n\n    @handle(Keys.F1)\n    def _(event):\n        """\n        Enable/Disable mouse mode.\n        """\n        python_input.enable_mouse_support = not python_input.enable_mouse_support\n\n    @handle(Keys.F8)\n    def _(event):\n        """\n        Enable/Disable microcopletions.\n        """\n        python_input.enable_microcompletions = not python_input.enable_microcompletions\n\n    @handle(Keys.F7)\n    def _(event):\n        """\n        Enable/Disable line wraps.\n        """\n        python_input.wrap_lines = not python_input.wrap_lines\n        \n    def number_of_leading_spaces(string):\n        i=0\n        for x in string:\n            if x==\' \':\n                i+=1\n            else:\n                break\n        return i\n    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'\\t\',event):return\n        buffer.insert_text(\'    \')\n        after_line = buffer.document.current_line_after_cursor\n        before_line = buffer.document.current_line_after_cursor\n        # N=number_of_leading_spaces(before_line+after_line)\n        # if not before_line.strip() and N%4:\n            # buffer.insert_text(\' \'*(4-N%4))\n            # return\n        if after_line.lstrip():\n            buffer.cursor_left(4)\n    #region  Ryan Burgert Method\n\n    @handle(Keys.BackTab,filter=IsMultiline())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        # from r import mini_terminal\n        buffer=event.cli.current_buffer\n        after_line = buffer.document.current_line_after_cursor\n        before_line = buffer.document.current_line_before_cursor\n        # flag=before_line.strip() and before_line#has some whitespace characters on it\n        N=min(4,number_of_leading_spaces(before_line+after_line))\n        # i=0\n        if not after_line.strip() and not before_line.strip():\n            for i in range(4):\n                if buffer.document.current_line_before_cursor:\n                    buffer.delete_before_cursor(1)\n\n            return\n        for _ in range(N):\n            try:\n                if buffer.document.current_line.startswith(\' \') or not has_selected_completion(buffer):\n                    flag=False\n                    if not buffer.document.current_line_after_cursor:#Otherwise it might jump to another line if we dont do this first\n                        buffer.cursor_left()\n                        flag=True\n                    buffer.transform_current_line(lambda x:x[1:])\n                    if not flag and buffer.document.current_line_before_cursor.strip():\n                        buffer.cursor_left()\n                # buffer.transform_current_line(lambda x:(x[1:]if x.startswith(\' \'*4)else x.lstrip()))\n                # buffer.transform_current_line(lambda x:(x[4:]if x.startswith(\' \'*4)else x.lstrip()))\n            except:\n                pass# Error migght happen if cursor is in bad place. Not sure what to do about that; but its an edge case so I\'m just gonna squelch it.\n        #endregion\n        # if flag:\n            # buffer.cursor_right(i)\n    from rp import ring_terminal_bell ,text_to_speech\n    def try_to_unindent(buffer,*matching_prefixes):\n        b=buffer\n        current_line = b.document.current_line\n        after_line = b.document.current_line_after_cursor\n        before_line = b.document.current_line_before_cursor\n        before=b.document.text_before_cursor\n        after= b.document.text_after_cursor\n        l=find_level(before,*matching_prefixes)\n        if l is None:\n            # ring_terminal_bell()\n            # text_to_speech(\'a\')\n            return#We\'re at a bit of a loss on what to do here...\n        i=get_indent(current_line)\n        d=len(i)-l\n        L=len(before_line.lstrip())\n        # ring_terminal_bell()\n        buffer.cursor_left(L)\n        buffer.delete_before_cursor(d)\n        buffer.cursor_right(L)\n        # text_to_speech(\'b\')\n    indent_block_matches={\n            \'except\':{\'try\',\'finally\'},#cant add except for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)\n            \'finally\':{\'try\',\'except\',\'else\'},\n            \'else\':{\'if\',\'elif\',\'for\',\'while\',\'except\'},\n            \'elif\':{\'if\'},#cant add elif for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)\n            }\n    def try_to_autounindent(buffer):\n        b=buffer\n        current_line = b.document.current_line\n        after_line = b.document.current_line_after_cursor\n        before_line = b.document.current_line_before_cursor\n        before=b.document.text_before_cursor\n        after= b.document.text_after_cursor\n        if current_line.rstrip().endswith(\':\'):\n            \n            for m in indent_block_matches:\n                if current_line.lstrip().startswith(m):\n                    try_to_unindent(buffer,*indent_block_matches[m])\n                    # text_to_speech(\'c\')\n                    return\n        # text_to_speech(\'d\')\n        return\n\n\n\n    @handle(Keys.ControlJ, filter= ~vi_mode_enabled & ~sidebar_visible & ~has_selection &( ViInsertMode() | EmacsInsertMode()) &HasFocus(DEFAULT_BUFFER) )#& IsMultiline())\n    def _(event):\n        """\n        Behaviour of the Enter key. enter key\n\n        Auto indent after newline/Enter.\n        (When not in Vi navigaton mode, and when multiline is enabled.)\n        """\n        b = event.current_buffer\n        buffer=b\n        if handle_character(buffer,\'\\n\',event):return\n        empty_lines_required = python_input.accept_input_on_enter or 10000\n        text=current_line=after_line=before_line=before=after=above_line=None\n        def refresh_strings_from_buffer():\n            nonlocal text,current_line,after_line,before_line,before,after,above_line\n            text =         b.document.text_after_cursor\n            current_line = b.document.current_line\n            after_line =   b.document.current_line_after_cursor\n            before_line =  b.document.current_line_before_cursor\n            before=        b.document.text_before_cursor\n            after=         b.document.text_after_cursor\n            above_line=    line_above(b)\n        refresh_strings_from_buffer()\n\n        single_line = above_line is None\n        def auto_pass():#try automatically adding a \'pass\' keyword if it helps to avoid a syntax error; return True if we add a \'pass\'\n            if not single_line and not current_line.strip() and above_line.rstrip().endswith(\':\'):\n                #Implicitly add \'pass\' when hitting enter below an if/for/def block (which would otherwise be a syntax error because of the autounindent)\n                buffer.insert_text(\'pass\')\n                refresh_strings_from_buffer()\n                return True\n            return False\n        auto_pass()\n        if before_line.endswith(\' enumerate(\') and after_line.startswith(\')\'):\n            #for i,e in enumerate(|):   --->   for i,e in enumerate(ans):\\n|\n            buffer.insert_text(\'ans\')\n        elif before_line.lstrip()==\'f,\' and not \'f\' in r_iterm_comm.globa:\n            #f,|   --->   for i,e in enumerate(ans):\\n|\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'for i,e in enumerate(ans):\')\n        for end in \')]}\':\n            if current_line.endswith(\',\'+end) and before_line.endswith(\',\') and after_line==end:\n                #print(ans,|)   --->   print(ans|)\n                #[1,2,3,|]      --->   [1,2,3|]\n                #{1,2,3,|}      --->   {1,2,3|}\n                buffer.delete_before_cursor()\n                refresh_strings_from_buffer()\n        # if endswithany(before_line,\',-\',\'(-\',\'[-\',\'{-\'):\n            #A BETTER VERSION OF THIS HAS BEEN MOVED TO MISC TWEAKS WITH A BUG FIX \n            #BUG IN THIS BLOCK: On \\n: ‹(-|10)› –––>  ‹(_10)\\n|›\n            #Completing the \'-\' dash to the underscore variable \'_\' in one of many instances where it makes sense\n            #print(-|) ---> print(_)\\n|\n            # buffer.delete_before_cursor()\n            # buffer.insert_text(\'_\')\n            # refresh_strings_from_buffer()\n        #a line with a sigle letter on it is useless, so let\'s make it useful.\n        #TODO: Make it semantically aware: make \'e\' write \'except\' when in a try block, and \'else\' when in an \'if\' or after a \'for\' block. Same logic SHOULD (but doesn\'t yet) apply to all of these (see below line)\n        if before_line.lstrip()==\'#\':\n            #\'#|\' ---> \'|\'  (so we can hit enter twice to break out of a comment)\n            buffer.delete_before_cursor()\n            return\n        continue_comment=before_line.lstrip().startswith(\'#\')\n        if before_line==\'from \'and after_line==\' import\':\n            #With current completions, which come in the next few \'if\' blocks, we get this:\n            #from | import ---> for _ in ans:\\n\\t\n            buffer.delete_before_cursor(len(\'from \'))\n            buffer.delete(len(\' import\'))\n            buffer.insert_text(\'for  in :\')\n            buffer.cursor_left(len(\' in :\'))\n            refresh_strings_from_buffer()\n\n        if before_line.lstrip()==\'for \'and after_line.rstrip()==\' in :\':\n            #for | in :   --->   for _ in |:   (we don\'t stop here, it eventually goes to "for _ in ans": see the next \'if\' block)\n            buffer.insert_text(\'_\')\n            # buffer.insert_text(\'ans\')\n            # \n            refresh_strings_from_buffer()\n\n        if after_line.rstrip()==\' in :\':\n            buffer.cursor_right(len(\' in \'))\n            # \n            refresh_strings_from_buffer()\n\n        if after_line.rstrip()==\':\':\n            #for spaoddsg in |:   --->   for spaoddsg in ans:\n            spl=before_line.split()\n            if len(spl)==3 and spl[0]==\'for\' and spl[2]==\'in\':\n                buffer.insert_text(\'ans\')\n                # \n                refresh_strings_from_buffer()\n        if not (single_line and token_exists(current_line.strip())):\n            import rp.r_iterm_comm\n            enter_completable_keywords=dict(fo=\'for _ in ans:\',e=\'else:\',t=\'try:\',b=\'break\',c=\'continue\',f=\'finally:\',p=\'pass\',r=\'return\',y=\'yield\',d=\'def _():\',w=\'while True:\',i=\'if True:\')#enter-completion of keywords that don\'t need to take arguments\n            single_line_enabled_keywords={\'fo\',\'f\',\'i\',\'t\',\'d\',\'w\'}-set(rp.r_iterm_comm.globa)\n            keyword=current_line.lstrip()\n            if single_line and before_line and \'class \'.startswith(before_line) and not after_line:\n                #c|   --->  class _:\\n|\n                #cla|   --->  class _:\\n|\n                buffer.delete_before_cursor(100)\n                buffer.insert_text(\'class _:\\n    \')\n                return\n            if (not single_line or keyword in single_line_enabled_keywords) and keyword in enter_completable_keywords:\n                #Examples:\n                #\'e|\' ---> \'else:\\n    |\'\n                #\'t|\' ---> \'try:\\n    |\'\n                #\'r|\' ---> \'return\\n|\'\n                char=current_line.lstrip()\n                replacement=enter_completable_keywords[char]\n                level=lambda candidate:find_level(before,*indent_block_matches[candidate])\n                if replacement==\'else:\':\n                    exl=level(\'except\')\n                    ell=level(\'else\')\n                    if ell is None and exl is not None or exl is not None and exl>ell:\n                        text_to_speech(\'q\')\n                        replacement=\'except:\'\n                if \'_\' in replacement:\n                    if single_line:\n                        replacement=replacement.replace(\'_\',\'ans\')\n                if not \'try\' in text and replacement==\'finally:\':\n                    replacement=\'for _ in ans:\'\n                buffer.delete_before_cursor(len(char))\n                refresh_strings_from_buffer()\n                indent=current_line\n                assert not current_line.strip()\n                # if auto_pass():buffer.insert_text(\'\\n\'+indent)\n                buffer.insert_text(replacement)\n                try_to_autounindent(buffer)   \n                refresh_strings_from_buffer()\n\n            if not after and before.startswith(\'import \') and before.endswith(\', \'):\n                #Sometimes when using my import microcompletions I hit the space key by accident, which causes this:\n                #import w as x,y as z, |\n                #Which is a syntax error. Autocorrect it to:\n                #import w as x,y as z\n                buffer.delete_before_cursor(2)\n            if before_line.lstrip() in (\'def \',\'class \') and current_line.strip() in (\'def ():\',\'def (self):\',\'class :\') :\n                #def |():  --->  \'def ans():\\n|\'  or \'def _():\\n|\' \n                #class |:  --->  class _:\\n|\n                if single_line:\n                    buffer.insert_text(\'ans\')\n                else:\n                    buffer.insert_text(\'_\')\n            #we might have made some changes; refreshing:\n            refresh_strings_from_buffer()\n\n        # if  (after_line.startswith(\'"""\') and before_line.endswith (\'"""\')) or\\\n        #     (after_line.startswith("\'\'\'") and before_line.endswith ("\'\'\'")):\n        #     print("ASOID")\n        #     b.insert_text(\'\\n\')\n        #     return\n        def at_the_end(b):\n            """ we consider the cursor at the end when there is no text after\n            the cursor, or only whitespace. """\n            assert isinstance(b,Buffer)\n            refresh_strings_from_buffer()\n            #region RYAN BURGERT STUFF\n            text=after\n            assert isinstance(text,str)\n            if self_dot_var_equals_var(buffer) or (before_line.lstrip() and not beginswithany(before_line[::-1],\' \',\',\',\':\',\';\',\'{\',\'[\',\'"""\',"\'\'\'") and not \'"""\' in before_line and not "\'\'\'" in before_line and \'(\' in before_line or beginswithany(before_line.lstrip(),\'for \',\'def \',\'lambda \',\'while \',\'with \',\'if \',\'except \',\'try \') or not text or text.split(\'\\n\')[0] in ["):",\']\',\')\',\'}\',\':\']):# Presumably at the end of def( a,b,c,d,e^): where ^ is cursor\n                event.cli.current_buffer.cursor_right(1000000)# Move cursor to end of line then proceed as normal\n                text = b.document.text_after_cursor\n            #endregion\n            return text == \'\' or (text.isspace() and not \'\\n\' in text)\n        if single_line:#single-line commands are entered immediately.\n            if not current_line.rstrip().endswith(\':\') \\\n            and not     endswithany(current_line.lstrip(),\'@\',"\'\'\'",\'"""\') \\\n            and not starts_with_any(current_line.lstrip(),\'@\',"\'\'\'",\'"""\'):\n                b.accept_action.validate_and_handle(event.cli, b)\n                # print("JI")\n                # return\n        # if at_the_end(b):# TODO Stuff here\n            # print("""def a b c d e (enter)\n# ->\n# def a(b,c,d,e):\n# """)\n        if python_input.paste_mode:\n            # In paste mode, always insert text.\n            b.insert_text(\'\\n\')\n\n        elif at_the_end(b) and b.document.text.replace(\' \', \'\').endswith(\'\\n\' * (empty_lines_required - 1)):\n            if b.validate():\n                # When the cursor is at the end, and we have an empty line:\n                # drop the empty lines, but return the value.\n                b.document = Document(\n                    text=b.text.rstrip(),\n                    cursor_position=len(b.text.rstrip()))\n                b.accept_action.validate_and_handle(event.cli, b)\n        else:\n            auto_newline(b)\n            if continue_comment:\n                #\'#Foo|\'-->\'#Foo\\n#|\'\n                buffer.insert_text(\'#\')\n\n\n    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:\n            # Only when the `confirm_exit` flag is set.\n            python_input.confirm_exit and\n            # And the current buffer is empty.\n            cli.current_buffer_name == DEFAULT_BUFFER and\n            not cli.current_buffer.text))\n    def _(event):\n        """\n        Override Control-D exit, to ask for confirmation.\n        """\n        python_input.show_exit_confirmation = True\n\n\n\n\n    @handle(Keys.F5, filter=Condition(lambda cli: python_input.show_sidebar))#Only activate when the sidebar is visible\n    def _(event):\n        from rp.prompt_toolkit.shortcuts import confirm\n        from rp import input_yes_no,clear_terminal_screen\n\n        import rp.rp_ptpython.python_input as rrpi\n\n        clear_terminal_screen()\n        if input_yes_no("Ryan Python\\nPlease Confirm: Are you sure you want to this menu\'s settings (the F2 menu)?\\nIf you choose yes, they\'ll be saved for the next time you boot rp.\\nNote: You can also do this with the \'PT SAVE\' command."):\n            run_arbitrary_code_without_destroying_buffer("PT SAVE",event)\n            print("Saved the F2 menu\'s current settings; you\'ll see them again when you reboot rp!")\n        else:\n            clear_terminal_screen()\n            event.cli.renderer.clear()\n\n    return registry\n\n\ndef load_sidebar_bindings(python_input):\n    """\n    Load bindings for the navigation in the sidebar.\n    """\n    registry = Registry()\n\n    handle = registry.add_binding\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n\n    @handle(Keys.Up, filter=sidebar_visible)\n    @handle(Keys.ControlP, filter=sidebar_visible)\n    @handle(\'k\', filter=sidebar_visible)\n    def _(event):\n        " Go to previous option. "\n        python_input.selected_option_index = (\n            (python_input.selected_option_index - 1) % python_input.option_count)\n\n    @handle(Keys.Down, filter=sidebar_visible)\n    @handle(Keys.ControlN, filter=sidebar_visible)\n    @handle(\'j\', filter=sidebar_visible)\n    def _(event):\n        " Go to next option. "\n        python_input.selected_option_index = (\n            (python_input.selected_option_index + 1) % python_input.option_count)\n\n    @handle(Keys.Right, filter=sidebar_visible)\n    @handle(\'l\', filter=sidebar_visible)\n    @handle(\' \', filter=sidebar_visible)\n    def _(event):\n        " Select next value for current option. "\n        option = python_input.selected_option\n        option.activate_next()\n\n    @handle(Keys.Left, filter=sidebar_visible)\n    @handle(\'h\', filter=sidebar_visible)\n    def _(event):\n        " Select previous value for current option. "\n        option = python_input.selected_option\n        option.activate_previous()\n\n    @handle(Keys.ControlC, filter=sidebar_visible)\n    @handle(Keys.ControlG, filter=sidebar_visible)\n    @handle(Keys.ControlD, filter=sidebar_visible)\n    @handle(Keys.ControlJ, filter=sidebar_visible)\n    @handle(Keys.Escape, filter=sidebar_visible)\n    def _(event):\n        " Hide sidebar. "\n        python_input.show_sidebar = False\n\n    return registry\n\n\ndef load_confirm_exit_bindings(python_input):\n    """\n    Handle yes/no key presses when the exit confirmation is shown.\n    """\n    registry = Registry()\n\n    handle = registry.add_binding\n    confirmation_visible = Condition(lambda cli: python_input.show_exit_confirmation)\n\n    @handle(\'y\', filter=confirmation_visible)\n    @handle(\'Y\', filter=confirmation_visible)\n    @handle(Keys.ControlJ, filter=confirmation_visible)\n    @handle(Keys.ControlD, filter=confirmation_visible)\n    def _(event):\n        """\n        Really quit.\n        """\n        event.cli.exit()\n\n    @handle("n", filter=confirmation_visible)\n    # @handle("N", filter=confirmation_visible)\n    @handle(Keys.Any, filter=confirmation_visible)\n    def _(event):\n        """\n        Cancel exit.\n        """\n        python_input.show_exit_confirmation = False\n\n    return registry\ndiddly=0\n\ndef auto_newline(buffer):\n    r"""\n    Insert \\n at the cursor position. Also add necessary padding.\n    """\n    insert_text = buffer.insert_text\n\n    if buffer.document.current_line_after_cursor:\n        # When we are in the middle of a line. Always insert a newline.\n        insert_text(\'\\n\')\n    else:\n        # Go to new line, but also add indentation.\n        current_line = buffer.document.current_line_before_cursor.rstrip()\n        insert_text(\'\\n\')\n\n        # Unident if the last line ends with \'pass\', remove four spaces.\n        unindent = current_line.rstrip().endswith(\' pass\') or current_line.lstrip().startswith(\'return \') or current_line.lstrip().startswith(\'raise \')  or current_line.strip()==(\'break\') or  current_line.strip()==(\'continue\') or  current_line.strip()==(\'raise\') or  current_line.strip()==(\'pass\')or  current_line.strip()==(\'return\')\n\n        # Copy whitespace from current line\n        current_line2 = current_line[4:] if unindent else current_line\n\n        for c in current_line2:\n            if c.isspace():\n                insert_text(c)\n            else:\n                break\n\n        # If the last line ends with a colon, add four extra spaces.\n        if current_line[-1:] == \':\':\n            for x in range(4):\n                insert_text(\' \')\n\n'#TODO on space, if current name is not a function
#TODO fix autocomplete issues: backspace shouldn't erase everything, it should be faster, should highlight callables a different color, should let me immediately search in the middle of a word,3 shouldn't be persistent when I hit the enter key and the cursor is no longer on the keyword,
#TODO add a way to add a space without any of my autocomplete nonsense

#RULES:
    #Should follow normal typing even (such as import import --> import)
    #Should not use memory outisde current text (a few exceptions but they're exceptions not the rule)
    #Should be activated on the fringes of useless or invalid syntax

#TODO: Autocomplete "is" and "in" and "is not" and "and" and "or" (and any other alphabetic operators):
    #When NOT in a string: (WE NEED STRING AREA DETECTION):
        #On press 'a': "x |" ---> "x and |"
        #(because in no other situation would you need that space)
    #How to handle conflict: "in" vs "is":
        #Branch prediction: figure out how to predict which one the user uses more often.  #Let's say they use 'in' more often; more specifically, if the variable to the left has a __contains__ function:
            #On press i: "x |" ---> "x in |"
        #Let's say that the user actually wanted "is". Because of the rule that normal typing should be supported:
            #On press s: "x in |" ---> "x is |"
    #Shouldn't REALLY be limited to just spaces (should also allow ')',']','')

#Hold alt to make space act normal.


from __future__ import unicode_literals
import re
from rp.prompt_toolkit.document                    import Document
from rp.prompt_toolkit.enums                       import DEFAULT_BUFFER
from rp.prompt_toolkit.filters                     import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode
from rp.prompt_toolkit.key_binding.vi_state        import InputMode
from rp.prompt_toolkit.key_binding.registry        import Registry,_Binding
from rp.prompt_toolkit.keys                        import Keys,Key
from rp.prompt_toolkit.buffer                      import Buffer
from rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent

def get_all_function_names(code:str):        
    #Return all the names of all functions defined in the given code, in the order that they appear
    from rp import lrstrip_all_lines,line_split
    lines=line_split(lrstrip_all_lines(code))
    import re
    defs=[line for line in lines if re.fullmatch(r'\s*def\s+\w+\s*\(.*',line)]
    func_names=[d[len('def '):d.find('(')].strip() for d in defs]
    return func_names

def run_code_without_destroying_buffer(event,put_in_history=True):
    #Run the code in the buffer without clearing it or destroying cursor position etc
    buffer=event.cli.current_buffer
    import rp.r_iterm_comm as ric
    ric.dont_erase_buffer_on_enter+=['DO IT']
    buffer.accept_action.validate_and_handle(event.cli, buffer,put_in_history=put_in_history)

def run_arbitrary_code_without_destroying_buffer(code,event,put_in_history=True):
    buffer=event.cli.current_buffer
    original_document=buffer.document
    buffer.document = Document(text=code)#Temporarily change the text in the buffer
        # cursor_position=len(''.join(lines_before + reshaped_text)))
    run_code_without_destroying_buffer(event,put_in_history=put_in_history)
    buffer.document=original_document#Put the old text/cursor pos/etc back. Dont mutate the buffer

def handle_run_cell(event):
    #Happens when we press control+w or alt+w
    #Run current cell between the boundary prefixes
    buffer=event.cli.current_buffer
    def main():
        text=buffer.document.text
        cursor_pos=buffer.cursor_position
        cell_code=get_cell_code(text,cursor_pos,cell_boundary_prefix)
        from rp import fansi_print
        # fansi_print("RUNNING CODE CELL:",'blue','bold')
        # fansi_print(cell_code,'blue')

        #When we do this, don't include that spam in our history...right? Maybe I'll change my mind in the future...I can't decide...like, it's annoying but it's truthful...
        run_arbitrary_code_without_destroying_buffer(cell_code,event,put_in_history=True)#To include or not to include...which one??
    main()

def edit_event_buffer_in_vim(event):
        buffer=event.cli.current_buffer
        document=buffer.document
        text=buffer.document.text   
        from rp import text_file_to_string,temporary_file_path,string_to_text_file
        import subprocess

        path=temporary_file_path()+'.py'
        string_to_text_file(path,text)

        lineno=document.text_before_cursor.count('\n')
        colno=document.cursor_position_col

        #+=1 because vim's line/col numbers start at 1, not 0
        colno+=1
        lineno+=1

        try:
            try:
                subprocess.call(["vim",path,'+call cursor(%i,%i)'%(lineno,colno),'+normal zz'])#https://stackoverflow.com/questions/3313418/starting-vim-at-a-certain-position-line-and-column-of-a-file
            except:
                subprocess.call(["vi",path,'+call cursor(%i,%i)'%(lineno,colno),'+normal zz'])#If it doesn't work with vim, try vi. vi is installed on basically every computer by default (except windows)
        except FileNotFoundError as error:
            buffer.insert_text('#ERROR: Cant find vim. Are you sure its installed? '+str(error))
            return True

        text=text_file_to_string(path)

        from rp import delete_file
        delete_file(path)

        if text!='':
            #That means the user saved the file
            buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)

        event.cli.renderer.clear()#Refresh the screen

        try:
            #Attempt to restore the cursor position from vim and use it in rp
            #I'm still not 100% sure if this will always work; so for now I'm going to squelch any errors.
            import os
            def get_viminfo():return '\n'.join(open(os.path.expanduser('~/.viminfo'),errors='ignore').readlines())
            def get_last_cursor_row_in_vim():    return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("'0 ")].pop().split()[ 1]))
            def get_last_cursor_column_in_vim(): return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("'0 ")].pop().split()[ 2]))
            def get_last_path_edited_in_vim():   return     os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("'0 ")].pop().split()[-1])
            from rp import get_file_name
            if get_file_name(get_last_path_edited_in_vim())==get_file_name(path):
                #We recently edited the file, and we should attempt to restore the cursor
                buffer.set_cursor_column(get_last_cursor_column_in_vim())
                buffer.set_cursor_row(get_last_cursor_row_in_vim()-1 )
        except:
            pass

def split_python_tokens(string,return_tokens=False,ignore_errors=True):
    #return_tokens is as opposed to returning the strings of those tokens, and thus returning a list of strings (the default behaviour)
    #if ignore_errors, ignore any parsing errors and keep parsing tokens (return all tokens, even the ones that causes errors such as unterminated strings etc)
    #EXAMPLES:
    #    ⮤ split_python_tokens('aosid aoisjd aois   j d; ')
    #    ans = ['aosid', 'aoisjd', 'aois', 'j', 'd', ';']
    #    ⮤ split_python_tokens(' lambda x: 3,1')
    #    ans = [' ', 'lambda', 'x', ':', '3', ',', '1', '']
    import tokenize
    i=iter(string.splitlines())
    def f():return next(i).encode()
    token_iterator=tokenize.tokenize(f)
    tokens=[]
    while True:
        try:
            tokens.append(next(token_iterator))
        except StopIteration:
            break
        except:
            if ignore_errors:
                continue
            else:
                raise
    tokens=tokens[1:]#The first and last token are never useful (just begin/end of field tokens. Even tokenizing an empty string would yield these two tokens.)
    if tokens and tokens[-1].type==tokenize.ENDMARKER:#This token is useless imho. Especially when we're trying to return strings split from python tokens. It just adds an empty string to the end of the output. Useless...
        del tokens[-1]
    if return_tokens:
        return tokens
    else:
        return [token.string for token in tokens]

def get_ans():
    import rp.r_iterm_comm as ric
    if 'ans' in ric.globa:
        return ric.globa['ans']
    else:
        return None


def do_vim_copy(string):
    import rp
    global _copied_string
    rp.vim_copy(string)
    # _copied_string=string

def do_local_copy(string):
    import rp
    global _copied_string
    rp.local_copy(string)
    # _copied_string=string

def do_tmux_copy(string):
    import rp
    global _copied_string
    rp.tmux_copy(string)
    # _copied_string=string

def do_vim_paste(buffer,repr_mode=False,commented=None):
    import rp
    try:
        if repr_mode:
            text=repr(rp.vim_paste())
        else:
            text=str(rp.vim_paste())

        if commented is not None:
            text=commented_string(buffer,text,spaces=commented)

        buffer.insert_text(text)
    except:
        pass

def do_tmux_paste(buffer,repr_mode=False,commented=None):
    import rp
    try:
        if repr_mode:
            text=repr(rp.tmux_paste())
        else:
            text=str(rp.tmux_paste())

        if commented is not None:
            text=commented_string(buffer,text,spaces=commented)

        buffer.insert_text(text)
    except:
        pass

def do_web_copy(string):
    import rp
    global _copied_string
    rp.web_copy(string)
    # _copied_string=string

def do_local_paste(buffer,repr_mode=False):
    import rp
    try:
        if repr_mode:
            buffer.insert_text(repr(str(rp.local_paste())))
        else:
            buffer.insert_text(str(rp.local_paste()))
    except:
        pass
def do_web_paste(buffer,repr_mode=False):
    import rp
    try:
        if repr_mode:
            buffer.insert_text(repr(str(rp.web_paste())))
        else:
            buffer.insert_text(str(rp.web_paste()))
    except:
        pass

_copied_string=""
def do_copy(string):
    import rp
    global _copied_string
    rp.string_to_clipboard(string)
    _copied_string=string

def commented_string(buffer,string,spaces=0):
    if isinstance(spaces,int):
        spaces=' '*spaces
    cursor_column=buffer.document.cursor_position_col
    string=string.split('\n')
    string=['#'+spaces+x for x in string]
    flag=False
    for index,line in enumerate(string):
        if flag:
            string[index]=' '*cursor_column+line
        flag=True
    string='\n'.join(string)
    return string

def do_paste(buffer,commented:int=None):
    import rp
    string=rp.string_from_clipboard()
    if commented is not None:string=commented_string(buffer,string,spaces=commented)
    buffer.insert_text(string)

def do_string_paste(buffer):
    import rp
    buffer.insert_text(repr(rp.string_from_clipboard()))
import rp.r_iterm_comm as ric
enable_space_autocompletions=ric.enable_space_autocompletions#This variable is a list that's mutated between being empty and being full, which toggles it's truth value. This feature isn't completely figured out yet...I suppose it's better to disable it for the time being...

from rp import *
__all__ = (
    'load_python_bindings',
    'load_sidebar_bindings',
    'load_confirm_exit_bindings',
)
from rp import *

def toggle_top_line_text(buffer,top_line='debug()\n'):
    text=buffer.document.text
    old_cursor_pos=buffer.document.cursor_position
    buffer.cursor_up(99999)
    buffer.cursor_left(99999)
    if text.startswith(top_line):
        #Delete 'debug()' from the top
        buffer.delete(len(top_line))
        buffer.document=Document(buffer.document.text,old_cursor_pos-len(top_line),buffer.document.selection)
    else:
        #Insert 'debug()' at the top
        buffer.insert_text(top_line)
        buffer.document=Document(buffer.document.text,old_cursor_pos+len(top_line),buffer.document.selection)
def toggle_bottom_line_text(buffer,bottom_line):
    def toggled_last_line(string,line):
        # print()
        # print("BEFORE:"+repr(string))
        lines=string.splitlines() or ['']
        if line==lines[-1]:
            del lines[-1]
        else:
            lines.append(line)
        out='\n'.join(lines)
        # print("AFTER:"+repr(out))
        # print()
        return out
    text=buffer.document.text
    old_cursor_pos=buffer.document.cursor_position
    new_text=toggled_last_line(text,bottom_line)
    buffer.document=Document(new_text,min(old_cursor_pos,len(new_text)-1),buffer.document.selection)

n_makes_in_and_s_makes_is=True#This is imperfect and got annoying
s_makes_is=True#This is imperfect and got annoying

def text_to_speech(words):
    try:
        from rp import text_to_speech
        text_to_speech(words)
    except:pass#Who cares if this doesn't work, it's just for debugging anyway...


# alt_updown_speed=
# def any_key_pressed_prefix(key,buffer):
#     #This function should include only things that happen during every keystroke. 
#     #If this function returns True, it cancels the rest of the execution. 
#     #This function happens before anything else.
#     alt_updown_speed=3
#     return False


#region code cells
#See https://asciinema.org/a/Hwj84iFknDtqIh5Tag2Eug6aj
cell_boundary_prefix='##'#SETTINGS
def separator_boundaries(code,separator_token):
    #Return cursor positions of the beginning of each boundary, including the start and end of the string
    #code="""@handle(Keys.ControlU)
#    def _(event):
#        +++
#        +
#            buffer=event.cli.current_buffer
#            buffer.insert_text('UNDO')
#            +++
#        @handle(Keys.ControlP)
#        def _(event):
#            +++  Hello
#            -
#            buffer=event.cli.current_buffer
#+++"""
    #separator_boundaries(code,'+++')  ->  [0, 40, 145, 214, 295, 299]
    #NOTE THE -1 and len()+1 at either side were originally 0 and len(), but for practicality (executing cells where the cursor is at the beginning or end of the text) I did this as a quick hack.
     # The examples are slightly different than the current code because of this.
    return [-1]+[x.span()[0] for x in re.finditer(r'((?<=(\n))|^) *'+re.escape(separator_token),code)]+[len(code)+1]
def above_and_below(value,L):
    #Examples:
    # ⮤ above_and_below(30,[2, 3, 13, 27, 28, 35, 35, 52, 90, 95])
    #ans = (28, 35)
    #
    # ⮤ above_and_below(4,[1,3,7,8,9])
    #ans = (3, 7)
    # ⮤ above_and_below(100,[1,3,7,8,9])
    #ans = (9, 100)
    # ⮤ above_and_below(0,[3,7,8,9])
    #ans = (0, 3)
    return max((x for x in L if x<=value),default=min(L)),min((x for x in L if x>=value),default=max(L))
def get_cell_code(text,cursor_pos,prefix=cell_boundary_prefix):
    #EXAMPLE:
    # ⮤ code
    #ans = @handle(Keys.ControlU)
    #    def _(event):
    #        ###
    #        +
    #            buffer=event.cli.current_buffer
    #            buffer.insert_text('UNDO')
    #            ###
    #        @handle(Keys.ControlP)
    #        def _(event):
    #            ###  Hello
    #            -
    #            buffer=event.cli.current_buffer
    ####
    # ⮤ separator_boundaries(code,'###')
    #ans = [0, 40, 145, 214, 295, 299]
    # ⮤ get_cell_code(code,30,'###')
    #ans = @handle(Keys.ControlU)
    #    def _(event):
    # ⮤ get_cell_code(code,41,'###')
    #ans = 
    #        ###
    #        +
    #            buffer=event.cli.current_buffer
    #            buffer.insert_text('UNDO')
    # ⮤ get_cell_code(code,67,'###')
    #ans = 
    #        ###
    #        +
    #            buffer=event.cli.current_buffer
    #            buffer.insert_text('UNDO')
    # ⮤ get_cell_code(code,213,'###')
    #ans = 
    #            ###
    #        @handle(Keys.ControlP)
    #        def _(event):
    # ⮤ get_cell_code(code,150,'###')
    #ans = 
    #            ###
    #        @handle(Keys.ControlP)
    #        def _(event):
    start,end=above_and_below(cursor_pos,separator_boundaries(text,prefix))
    return text[max(0,start):min(len(text),end)]
#endregion

def swap_from_import(line):
    try:
        #EXAMPLES:
        #     >>> swap_from_import('   import jugio as gi')
        #    ans =    from jugio import
        #     >>> swap_from_import('   from bugg.malo import bees')
        #    ans =    import bugg.malo
        whitespace=line[:len(line)-len(line.lstrip())]
        line=line[len(whitespace):]
        items=line.split()
        items=items[:2]
        if items[0]=='from':
            items[0]='import'
        elif items[0]=='import':
            items[0]='from'
            items.append('import ')        
        line=' '.join(items)
        return whitespace+line
    except Exception:
        return line

align_char='→'
def align_lines_to_char(string,char=align_char,space=' '):
    #EXAMPLE:
    #    SPASTE
    #    ans = from rp.prompt_toolkit.document →import Document
    #    from rp.prompt_toolkit.enums →import DEFAULT_BUFFER
    #    from rp.prompt_toolkit.filters →import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode
    #    from rp.prompt_toolkit.key_binding.vi_state →import InputMode
    #    from rp.prompt_toolkit.key_binding.registry →import Registry
    #    from rp.prompt_toolkit.keys →import Keys,Key
    #    from rp.prompt_toolkit.buffer →import Buffer
    #    ⮤ print(align(ans))
    #    from rp.prompt_toolkit.document             import Document
    #    from rp.prompt_toolkit.enums                import DEFAULT_BUFFER
    #    from rp.prompt_toolkit.filters              import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode
    #    from rp.prompt_toolkit.key_binding.vi_state import InputMode
    #    from rp.prompt_toolkit.key_binding.registry import Registry
    #    from rp.prompt_toolkit.keys                 import Keys,Key
    #    from rp.prompt_toolkit.buffer               import Buffer
    assert len(space)==1
    lines=string.splitlines()
    while any([char in x for x in lines]):
        alignto=0
        for i,line in enumerate(lines):
            if char in line:
                alignto=max(line.find(char),alignto)
        for i,line in enumerate(lines):
            if char in line:
                pos=line.find(char)
                line=line[:pos]+space*(alignto-pos)+(line[pos+1:] if len(line)-1!=pos else '')
                lines[i]=line
    out='\n'.join(lines)
    return out

def split_def_arguments_into_multiple_lines(single_line_def):    
    # print("GOT "+repr(single_line_def))
    #EXAMPLE:
    #INPUT:  'def play_chord(*semitones:list,t=1,block=True,sampler=triangle_tone_sampler):'
    #OUTPUT:
    #def play_chord(*semitones:list,
    #               t=1,
    #               block=True,
    #               sampler=triangle_tone_sampler):
    s=single_line_def
    try:
        import re
        assert re.fullmatch(r' *def .*: *(#.*)?',s)
        l=s.split(',')
        w=l[0].find('(')
        assert w!=-1
        o=[]
        o.append(l.pop(0)+',')
        for _ in range(len(l)):
            o.append(' '+' '*w+l.pop(0)+',')
        o='\n'.join(o)
        o=o[:-1]
        return o
    except Exception as E:
        return s
            
def keys(root):
    #Stolen from rinsp_search
    out=set()
    try:out.update(dir(root))
    except:pass
    try:out.update(root.__dict__)
    except:pass
    return sorted(out)
            
def find_all_substring_matches(string,substring):
    #Return a list of starting indices
    #https://stackoverflow.com/questions/4664850/how-to-find-all-occurrences-of-a-substring
    #EXAMPLE:
    #    ⮤ find_all_substring_matches('jojo my jojo its jojo','jojo')
    #    ans = [0, 8, 17]
    return [m.start() for m in re.finditer(re.escape(substring), string)]
def token_exists(token_name):
    from rp import is_namespaceable
    if not is_namespaceable(token_name):
        return False#We don't want to run eval on anything except tokens...
    try:
        eval(token_name,ric.globa)
        return True
    except:
        return False#be on the safe side with space-function completions
def token_name_found_of_interest(before_line)->(str,object,bool):
    from rp import is_namespaceable
    token_of_interest=name_of_interest=None
    try:
        # fansi_print("\n\n"+split[-1]+"\n\n")

        string=''
        for char in reversed(before_line):
            if not (is_namespaceable(char) or char in '0987654321') and char not in '.':
                break
            string=char+string
        name_of_interest=string
        # print("HE")
        token_of_interest=eval(string,r_iterm_comm.globa)  # ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects
        # print("HOO",token_of_interest)
        #
        # for char in string:
        #     if not char.isalnum() and char not in '.' and not is_namespaceable(char):
        #         string=string.replace(char,' ')
        # name_of_interest=string
        # token_of_interest=eval(string,r_iterm_comm.globa)# ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects
    except:token_of_interest,name_of_interest,False#No variable called that was found
    return token_of_interest,name_of_interest,True
def starts_with_any(string,*prefixes):
    for p in prefixes:
        if string.startswith(p):
            return True
    return False

def cursor_on_string(text,cpos):
    #NOT accurate, dont put into the main RP library
    #EXAMPLE:
    # ⮤ def f(s):
    #2     print(s)
    #3     print(''.join([str(int(bool(cursor_on_string(s,i))))for i in  range(len(s))]))
    #4 
    #⮤ f('hello="Helo"+234')
    #hello="Helo"+234   <--- this works well because theresno whitespace between hello and = and "Helo"
    #0000001111110000
    import rp
    tokens=split_python_tokens(text)
    count=0
    for token in tokens:
        if count+len(token)>cpos:
            try:
                return isinstance(eval(token),str)
            except:
                return False
        count+=len(token)
    return False

def cursor_on_comment(text,cpos,tokens):
    #NOT accurate, dont put into the main RP library
    import rp
    tokens=split_python_tokens(text)
    count=0
    for token in tokens:
        if count+len(token)>cpos:
            try:
                return token.startswith('#')
            except:
                return False
        count+=len(token)
    return False

def current_token(text,cpos):
    #NOT accurate, dont put into the main RP library
    import rp
    tokens=split_python_tokens(text)
    count=0
    for token in tokens:
        if count+len(token)>cpos:
            return token
        count+=len(token)
    return ''

def true_get_if_in_string_or_comment(before_line,after_line,buffer):
    #This function IS not totally acurate, becauwe of a hack where I replace whitespace with other characters to trick the tokenizer into keeping cursor positoin relevant
    text=buffer.document.text#+' '#add space to prevent last char from returning false
    text=text.replace(' ','+').replace('\n','\n+')#Python tokenize gets rid of whitespace and newlines which we need to count but adding +'s still preserves whats  a string and whats a comment. its a quick cheap hack.'
    cpos=buffer.document.cursor_position-1
    token=current_token(text,cpos)
    out=False
    try:
        if isinstance(eval(token),str):
            out= True
    except:pass
    out=out or token.startswith('#')
    if out:
        # print("WAH")
        return True 
    return False

    # if cursor_on_string(text,cpos) or cursor_on_comment(text,cpos):
        # print("WAHH")
        # return True
    # return False
    # return '"' in before_line and after_line.count('"')==before_line.count('"') or \
                                       # "'" in before_line and after_line.count("'")==before_line.count("'") or \
                                       # '#' in before_line

_previous_after_line=None
_previous_before_line=None
_previous_result=False
def get_if_in_string_or_comment(before_line,after_line,buffer):
    if not '\n' in buffer.text:
        if re.fullmatch(r'((!|!!|CD |RUN |([A-Z]+ )).*)',before_line):#Things we want to turn microcompletions off for
            return True
    #This function attempts to make an nearly equivalent but faster version of true_get_if_in_string_or_comment
    global _previous_result,_previous_after_line,_previous_before_line
    if after_line!=_previous_after_line or\
          before_line.count('#')!=_previous_before_line.count('#') or\
          before_line.count("'")!=_previous_before_line.count("'") or\
          before_line.count('"')!=_previous_before_line.count('"'):
        _previous_result=true_get_if_in_string_or_comment(before_line,after_line,buffer)
    _previous_after_line =after_line
    _previous_before_line=before_line
    return _previous_result 


_meta_pressed=[]
def meta_pressed(clear=True):#This should only be called once per keystroke
    out=bool(_meta_pressed)
    if clear:
        _meta_pressed.clear()
    return out

def line_above(buffer):
    return line_above_document(buffer.document)

def line_above_document(document):
    before=document.text_before_cursor
    if not '\n' in before:
        return None
    before_lines=before.split("\n")
    return before_lines[-2]


def beginswithany(a,*b):
    for x in b:
        if a.startswith(x):
            return True
    return False

def ends_with_namespaceable(s):
    #      ⮤ ends_with_namespaceable('oaisjdoiasd')
    # ans = True
    #  ⮤ ends_with_namespaceable('oaisj[doiasd')
    # ans = True
    #  ⮤ ends_with_namespaceable('oaisj[4doiasd')
    # ans = False
    #  ⮤ ends_with_namespaceable('oaisj[4doi4asd')
    # ans = False
    #  ⮤ ends_with_namespaceable('oaisj[4doi4as5d')
    # ans = False
    #  ⮤ ends_with_namespaceable('oaisj[234234')
    # ans = False
    #  ⮤ ends_with_namespaceable('234,oaisj')
    from rp import is_namespaceable
    last_char=''
    for c in reversed(s):
        if not is_namespaceable(c) and not c.isnumeric():
            return not last_char.isnumeric()
        last_char=c
    return bool(last_char)
def ends_with_number(s):
    #  ⮤ ends_with_number('osdi[f[4')
    # ans = True
    #  ⮤ ends_with_number('osdi[f[d4')
    # ans = False
    #  ⮤ ends_with_number('osdiasdf4')
    # ans = False
    #  ⮤ ends_with_number('osdia34534sdf4')
    # ans = False
    #  ⮤ ends_with_number('osdia3asdfasd.4534sdf4')
    # ans = False
    #  ⮤ ends_with_number('osdia3asdfasd.4534sdf.4')
    # ans = True
    from rp import is_namespaceable
    last_char=''
    for c in reversed(s):
        if not c.isnumeric():
            return not is_namespaceable(c)
        last_char=c
    return bool(last_char)
def so_far(s):
    #EXAMPLES:
    # >> so_far('asod jasoidj a: soajdo is')
    #ans = 'soajdo is'
    # >> so_far('asod jasoidj a: soaasd ajdo is')
    #ans = 'soaasd ajdo is'
    # >> so_far('asod jasoidj a:retu')
    #ans = 'retu'
    i=s.rfind(':')
    s=s[i+1:]
    s=s.strip()
    return s
def splinterify(x):
    #For use in regex expression prefixes
    #EXAMPLES:
    # >> splinterify('hello')
    #ans = 'h|he|hel|hell'
    # >> splinterify('world')
    #ans = 'w|wo|wor|worl'
    out=[]
    for i in range(1,len(x)):
        out.append(x[:i])
    return '|'.join(out)
def indent_hiearchy(s:str):
    """
    Takes a str such as:
'''
def hiu(iub):
    ewq(ojhi)
    if h:
        apple
        hio
            iuy
              ioo'''
    And returns:
    ['              ioo',
     '            iuy',
     '        hio',
     '    if h:',
     'def hiu(iub):']
    """
    o=None
    for l in reversed(s.splitlines()):
        if o is None or not l.startswith(o):
            yield l
            o=get_indent(l)
            if not o:
                break
def find_header(code:str,*line_starts:str)->str:
    #(was originally just find_level, see it's purpose)
    #this function returns the entire line itself instead of just the number of indents
    #returns None if not in such a block
    for i,e in enumerate(indent_hiearchy(code)):
        if starts_with_any(e.lstrip(),*line_starts):
            return e
    return None
def find_level(code:str,*line_starts:str)->int:
    #return the unindents needed (assumed to be spaces) to reach block starting with any string from line_starts
    #returns None if not in such a block
    header=find_header(code,line_starts)
    if header is None:
        return None
    return len(get_indent(header))
def get_indent(line):
    #returns a string that just contains the line's indent
    return line[:len(line)-len(line.lstrip())]
def endswithany(a,*b):
    for x in b:
        if a.endswith(x):
            return True
    return False
def in_class_func_decl(buffer):#can be easily memoized but i wont bother unless its an issue; (prob got bigger probs tbh)
    document=buffer.document
    current_line=document.current_line
    before_line=document.current_line_before_cursor
    after_line=document.current_line_after_cursor
    before=document.text_before_cursor
    after= document.text_after_cursor
    lines=reversed(before.split('\n'))
    indent=get_indent(before_line)
    for line in lines:
        if not line.startswith(indent):
            return line.lstrip().startswith('class ')
    return False
class TabShouldInsertWhitespaceFilter(Filter):
    """
    When the 'tab' key is pressed with only whitespace character before the
    cursor, do autocompletion. Otherwise, insert indentation.

    Except for the first character at the first line. Then always do a
    completion. It doesn't make sense to start the first line with
    indentation.
    """
    def __call__(self, cli):
        b = cli.current_buffer
        before_cursor = b.document.current_line_before_cursor

        return bool(b.text and (not before_cursor or before_cursor.isspace()))

def has_selected_completion(buffer):# If we have a completion visibly selected on the menu
    return buffer.complete_state and buffer.complete_state.complete_index is not None
last_pressed_dash=False


class CommentedParenthesizerAutomator:
    def __init__(self,
        upper_marker='#',
        lower_marker='#',
        match_indent=True
        ):
    # def __init__(self,
    #     upper_marker='#╵',
    #     lower_marker='#╷',
    #     match_indent=True
    #     ):
        self.upper_marker=upper_marker
        self.lower_marker=lower_marker
        self.match_indent=match_indent#If true, indent the parnthesis comments along with the rest of the code. Otherwise, start the parenthesizer comments at the very beginning of the line

    def parenthezized_line(self,line:str)->str:
        assert '\n' not in line,'Input Assertion Error: line should be a single line, but its a multiline string. line='+repr(line)

        from rp import parenthesizer_automator

        original_line=line

        if self.match_indent:
            whitespace=line[:len(line)-len(line.lstrip())]
            assert line[len(whitespace):]==line.lstrip()
        else:
            whitespace=''

        middle_line  =line[len(whitespace):]
        parenth_lines=parenthesizer_automator(middle_line).splitlines()

        assert len(parenth_lines)==0 or len(parenth_lines)%2,'Internal logical assertion (this should never fail unless this function is broken) due to the nature of rp.parenthesizer_automator: rp.parenthesizer_automator should always return an odd number of lines, unless it returns 0 lines'
        if len(parenth_lines)<=1:
            return original_line

        upper_lines=parenth_lines[:len(parenth_lines)//2   ]
        lower_lines=parenth_lines[ len(parenth_lines)//2+1:]

        upper_lines=[(self.upper_marker+(upper_line[len(self.upper_marker):] if len(upper_line)>=len(self.upper_marker) else '')) for upper_line in upper_lines]
        lower_lines=[(self.lower_marker+(lower_line[len(self.lower_marker):] if len(lower_line)>=len(self.lower_marker) else '')) for lower_line in lower_lines]

        out_lines=[*upper_lines,middle_line,*lower_lines]
        out_lines=[whitespace+out_line for out_line in out_lines]

        out='\n'.join(out_lines)

        return out

    def is_upper_line(self,line:str)->bool:
        if not isinstance(line,str):return False#Can't be an upper line if it's not a line...
        assert '\n' not in line,'Input Assertion Error: line should be a single line, but its a multiline string. line='+repr(line)
        return line.lstrip().startswith(self.upper_marker) and set(line.strip())<=set(' #│┌┐') and set(line)&set('│└┘┌┐')

    def is_lower_line(self,line:str)->bool:
        if not isinstance(line,str):return False#Can't be a lower line if it's not a line...
        assert '\n' not in line,'Input Assertion Error: line should be a single line, but its a multiline string. line='+repr(line)
        return line.lstrip().startswith(self.lower_marker) and set(line.strip())<=set(' #│└┘') and set(line)&set('│└┘┌┐')

    def is_parenthesized_at_line(self,string:str,line_number:int)->bool:
        #Returns true if there are visible parenthesizer comments above and below the given linenumber in the given string
        #Check for comments with the right markers above and below that line
        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)

        if line_number==0:
            return False #You can't have any upper parenthesis if we're on the first line

        lines=string.splitlines()
        try:
            line_above=lines[line_number-1]
            line_below=lines[line_number+1]
            return self.is_lower_line(line_below) and self.is_upper_line(line_above)
        except IndexError:
            return False

    def unparenthesized(self,string,line_number)->str:
        #Remove the parenthesizer comments around a given line number on the given string
        lines=string.splitlines()

        #Delete all lower lines
        while True:
            try:
                line_below_index=line_number+1
                line_below=lines[line_below_index]
                if self.is_lower_line(line_below):
                    del lines[line_below_index]
                else:
                    break
            except IndexError:
                break

        #Delete all upper lines
        line_above_index=line_number-1
        while line_above_index>=0:
            try:
                line_above=lines[line_above_index]
                if self.is_upper_line(line_above):
                    del lines[line_above_index]
                    line_above_index-=1
                else:
                    break
            except IndexError:
                break

        return '\n'.join(lines)


    def parenthesized_at_line(self,string,line_number)->str:
        #Insert parenthesizer comments around a given line in a string and return the result
        lines=string.splitlines()
        line =lines[ line_number]
        lines=lines[line_number:line_number+1]=self.parenthezized_line(line).splitlines()
        return '\n'.join(lines)
        
    def unparenthesize_buffer(self,buffer)->None:
        #Remove the parenthesizer comments around the cursor in the given buffer
        #Delete all lower lines
        while self.is_lower_line(buffer.document.current_line_below):
            from rp import random_chance
            buffer.delete_line_below_cursor()

        #Delete all upper lines
        while self.is_upper_line(buffer.document.current_line_above):
            buffer.delete_line_above_cursor()

    def parenthesize_buffer(self,buffer)->None:
        #Insert parenthesizer comments around the cursor in a given buffer
        current_line =buffer.document.current_line
        cursor_column=buffer.document.cursor_position_col
        buffer.cursor_right(999999)
        buffer.delete_before_cursor(len(current_line))
        new_text=self.parenthezized_line(current_line)
        buffer.insert_text(new_text)
        if '\n' in new_text:
            buffer.cursor_up(new_text.count('\n')//2)
        buffer.set_cursor_column(cursor_column)

    def buffer_is_parenthesized_at_cursor(self,buffer)->bool:
        #Returns true if there are visible parenthesizer comments above and below the buffer's cursor
        #Check for comments with the right markers above and below that line
        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)
        return self.is_parenthesized_at_line(buffer.document.text,buffer.document.cursor_position_row)

    def buffer_refresh_parenthesization(self,buffer)->None:
        if self.buffer_is_parenthesized_at_cursor(buffer):
            #Refresh the parenthesization
            self.unparenthesize_buffer(buffer)
            self.parenthesize_buffer(buffer)
        else:
            pass

    def buffer_toggle_parenthesization(self,buffer)->None:
        if self.buffer_is_parenthesized_at_cursor(buffer):
            self.unparenthesize_buffer(buffer)
        else:
            self.parenthesize_buffer(buffer)


        
commented_parenthesizer_automator=CommentedParenthesizerAutomator()


_global_event=None
def post_handler(binding:_Binding,event:KeyPressEvent,old_document:Document):
    #This function should be very lightweight, as it's called once after EVERY keystroke in the editor (including ones like control+e which don't even modify the text)
    #I made sure that post_handler is called on every keystroke by modifying input_processor.py and replacing key_bindings.py's '@handle' with a lambda that also ensures this function is called
    #Get the pressed char
    char=event.data

    assert isinstance(char,str)

    #Get information about old_document
    old_text         = old_document.text
    old_current_line = old_document.current_line
    old_after_line   = old_document.current_line_after_cursor
    old_before_line  = old_document.current_line_before_cursor
    old_before       = old_document.text_before_cursor
    old_after        = old_document.text_after_cursor
    old_above_line   = line_above_document(old_document)

    #Get the buffer and related information
    buffer=event.cli.current_buffer
    text=document=current_line=after_line=before_line=before=after=above_line=None
    def refresh_strings_from_buffer():
        nonlocal text,document,current_line,after_line,before_line,before,after,above_line
        document     = buffer.document
        text         = buffer.document.text
        current_line = buffer.document.current_line
        after_line   = buffer.document.current_line_after_cursor
        before_line  = buffer.document.current_line_before_cursor
        before       = buffer.document.text_before_cursor
        after        = buffer.document.text_after_cursor
        above_line   = line_above(buffer)
    refresh_strings_from_buffer()

    if text!=old_text:
        commented_parenthesizer_automator.buffer_refresh_parenthesization(buffer)#This is optimized and only makes changes if nessecary


def handle_character(buffer,char,event=None):
    #This function should receive all VISIBLE keystrokes (such as 'a','b','c','1','2','3' but also ' ','\n','.','$' etc)
    #But it should NOT receive things like backspace, backtab, or other control keys that aren't actually part of the code
    #If this function returns true it overrides the other code that handles that specific char
    from rp import is_namespaceable
    global last_pressed_dash
    import rp.r_iterm_comm as ric
    import tokenize

    if False:#No microcompletions
        buffer.insert_text(char)
        return True

    text=current_line=after_line=before_line=before=after=above_line=before_tokens=after_tokens=before_line_ends_with_number=None
    def refresh_strings_from_buffer():
        nonlocal text,current_line,after_line,before_line,before,after,above_line,before_tokens,after_tokens,before_line_ends_with_number
        text                = buffer.document.text
        current_line        = buffer.document.current_line
        after_line          = buffer.document.current_line_after_cursor
        before_line         = buffer.document.current_line_before_cursor
        before              = buffer.document.text_before_cursor
        after               = buffer.document.text_after_cursor
        above_line          = line_above(buffer)

        after_tokens        = split_python_tokens(after_line ,True)
        before_tokens       = split_python_tokens(before_line,True)
        before_line_ends_with_number=before_tokens and before_tokens[-1].type==tokenize.NUMBER
    refresh_strings_from_buffer()

    if char=='\n' and after_line in ['"',"'"]:
        #Even if (especially if) we're in a string...
        #On \n:  ‹'|'›  -/->  ‹'\n|'›
        #On \n:  ‹'|'›  --->  ‹''\n|›
        buffer.cursor_right(100)

    if char==' ' and meta_pressed(clear=False):
        buffer.insert_text(' ')#This should always work
        meta_pressed(clear=True)
        return True

    if char=='v' and meta_pressed(clear=True):
        edit_event_buffer_in_vim(event)
        return True

    if char=='r' and meta_pressed(clear=True):
        run_arbitrary_code_without_destroying_buffer(repr(text),event,put_in_history=True)#To include or not to include...which one??
        buffer.document=Document('',0,buffer.document.selection)
        return True

    if char=='q' and meta_pressed(clear=True):
        #Delete all
        #Equivalent to \da
        buffer.document=Document('',0,buffer.document.selection)
        return True

    if char=='w' and meta_pressed(clear=True):
        handle_run_cell(event)
        return True

    in_string_or_comment=get_if_in_string_or_comment(before_line,after_line,buffer)
    if char not in '\n\'\"' and in_string_or_comment:
        buffer.insert_text(char)#Don't do anything but write the damn character lol
        return True

    if last_pressed_dash and char in '-=' and not in_string_or_comment and not after_line.strip() and re.fullmatch(r' *[a-zA-Z_0-9]+\_',before_line):
        buffer.delete_before_cursor()
        buffer.insert_text('-')#Trigger '--' or '-=' indirectly by replacing the '_' with a '-' where applicable (aka NOT if the user made the _ by typing _ with the shift key. This is one of the rare instances where stateful is OK)
    if char=='-':last_pressed_dash=True
    else:        last_pressed_dash=False

        
    if char in '/\n' and before_line.endswith('?/') and not after:
        #This rule is a HACK to preserve the functionality of ?/
        #Without this rule, pressing enter after ?/ will turn it into ??
        if char=='\n':
            return False
        #if char=='/':
        #    #Actually this rule isn't nessecary...pressing enter on // turns it into ??
        #    buffer.delete_before_cursor()
        #    buffer.insert_text('?')
        #    return True
    if char=='/' and before.endswith('???') and not after:
        return True
            



    if not in_string_or_comment:#This is just for visual purposes, so I can put the lines in a block of code and document ,after_line)it
      #region ..= and =.. in-place operators
        if char=='.' and before_line.endswith('=.') and not ' ' in before_line.strip() and before_line.count('=.')==1 and not before_line.endswith('==.') and not before_line.endswith('!=.'):
            #The '=..' in-place operator
            #On '.': right=.| --> right=|.right
            #`right=..cursor` —>  `right=cursor.right`
            varname=before_line[:-2]
            varname=varname.strip()
            buffer.insert_text(varname)
            buffer.cursor_left(len(varname)+1)
            return True
        if char=='=' and before_line.endswith('..'):
            #The '..=' in-place operator
            #On '=': cursor..| --> cursor.|=cursor
            #`cursor..=right` —>  `cursor.right=cursor`
            varname=before_line[:-2]
            varname=varname.strip()
            buffer.delete_before_cursor()
            buffer.insert_text(varname)
            buffer.cursor_left(len(varname))
            buffer.delete_before_cursor()
            buffer.insert_text('.=')
            buffer.cursor_left()
            return True
      #endregion

      #region pluralize list comprehension (must come before space stoppers)
        if char==' ' and (starts_with_any(after_line,']',':')) and re.fullmatch(r'((.* for)|(for)) [a-zA-Z_0-9]+ in ',before_line):
            #[thing(index) for index in |] --->  [thing(index) for index in indices|] #TO BE IMPROVED LATER. THIS IS JUST A PROOF OF CONCEPT RIGHT NOW.
            name=before_line.rstrip().split(' ')[-2]
            from rp import plural_noun,is_singular_noun_of,is_iterable,is_plural_noun,plural_noun
            refresh_strings_from_buffer()
            candidates=set(list(ric.globa)) | set(split_python_tokens(before+after))
            plural_name=plural_noun(name)
            if plural_name in candidates:#If this succeeds it makes the next loop a lot faster...
                buffer.insert_text(plural_name)
                return True
            for candidate in candidates:#Search all existing known names looking for a plural match to the iterator variable
                focus_name=name
                if not is_namespaceable(candidate) or candidate[:2]!=name[:2]:
                    continue#Speed things up
                if is_singular_noun_of(name,candidate) and is_plural_noun(candidate):
                    buffer.insert_text(plural_noun(candidate))
                    return True
            if '\n' not in text and after==']' and before.count('[')==1:
                #[x for x in |] --->  [x for x in ans|]
                buffer.insert_text('ans')
                return True
            # buffer.insert_text(plural_noun(name))#If we can't find a name that fits, and 'ans' isn't an option, just choose a plural name
            # return True 
        keywords={'async','await','with', 'nonlocal', 'while', 'None', 'global', 'as', 'is', 'and', 'else', 'yield', 'raise', 'del', 'break', 'in', 'not', 'False', 'assert', 'try', 'def', 'return', 'if', 'finally', 'lambda', 'for', 'from', 'True', 'pass', 'continue', 'elif', 'except', 'class', 'or', 'import'}
        from rp import is_namespaceable
        if char==' ' and (before_line=='for ' or before_line.endswith(' for ')) and starts_with_any(after_line,' in]','in)','in}',' in '):
            before_tokens=split_python_tokens(before_line)[:-1]#Get rid of the 'for'
            # dont_use_these_tokens=set(split_python_tokens(text))-set(before_tokens)
            for token in reversed(before_tokens):
                # if token=='[':#Technically correct but returns false negatives
                    # break#Welp..we failed to find a unique new variable...
                if is_namespaceable(token) and token not in keywords:
                    if token not in ric.globa:# and token not in dont_use_these_tokens:
                        buffer.insert_text(token)
                        buffer.cursor_right(len(' in'))
                        if not after_line.startswith(' in '):
                            buffer.insert_text(' ')
                        return True
        if char==' ' and re.fullmatch(r' *[a-zA-Z_0-9]+\(',before_line) and after_line==')':
            for line in before.splitlines()[::-1][1:]:
                if starts_with_any(line.lstrip(),*'for if while elif'.split()):
                    tokens=split_python_tokens(line.strip())
                    tokens=[token for token in tokens if is_namespaceable(token) and not token in keywords]
                    if tokens:
                        focus_name=tokens[0]
                        #ON SPACE:
                        #for focus_name in ans:
                        #   print(|)
                        #--->
                        #for focus_name in ans:
                        #   print(focus_name,)
                        buffer.insert_text(focus_name+',')
                        return True
      #endregion

      #region stopping double-spaces after 'or', 'and' etc

        if char==' ': 
            #TODO Possibly replace the below with something more useful than '_', such as the focus in the for loop or ans if there is no focus or perhaps 'True'
            if re.fullmatch(r' *for ',before_line) and re.fullmatch(r' in : *',after_line):
                #`    for | in :  `  --->  `    for _ in |:  `
                buffer.insert_text('_')
                buffer.cursor_right(len(' in '))
                refresh_strings_from_buffer()
            if re.fullmatch(r' *(if|while) ',before_line) and re.fullmatch(r': *',after_line):
                #`    if |:  `  --->  `    if _ |:  `   --->   `    if _:|  `
                #`    while |:  `  --->  `    while _ |:  `  --->  `    while _:|  `
                buffer.insert_text('_ ')
                refresh_strings_from_buffer()

        if char==' ':
            partial_correctables='or and not for if'.split(' ')
            if before_line.endswith(']') and after_line.startswith(']'):
                #  [[[]|]]  --->  [[[]]|]
                buffer.cursor_right()
                return True
            if before_line.endswith('[') and after_line.startswith('['):
                #  [[|[[]]]]  --->  [[[|[]]]]
                buffer.cursor_right()
                return True
            for c in partial_correctables:
                if before_line.strip().startswith(c+' '):
                    continue#We don't want `for f in y:` to be messed up
                if before_line.endswith(' '+c+' '+c[1:]):
                    #Leftovers from having 'a' --> 'and' or 'o'-->'or' if you just type out the whole thing
                    #AKA `a ob`-->`a or b` therefore `a or b`-->`a or rb` which is bad...this fixes that:
                    #  `a or r|` --> `a or |`
                    #  `a and nd|` --> `a and |`
                    buffer.delete_before_cursor(len(' '+c[1:]))
                    refresh_strings_from_buffer()
                    if c in 'for':
                        buffer.insert_text(' ')
                        return True#[x for or| in] --->  [x for | in]
                elif before_line.endswith(' '+c+' '):
                    return True#Do nothing
            full_correctables='return else or and not in'.split(' ')
            for c in full_correctables:
                if c=='in' and not starts_with_any(after_line,')','}',']'):
                    #This block is NOT used for list comprehension aka [x for x in in|]--->[x for x in |]
                    #It IS used for 'nin', which stands for 'not in'
                    if before_line.endswith(' '+c+' '+c):
                        if before_line.lstrip().startswith('for '):
                            buffer.delete_before_cursor(len('in'))
                            return True
                        else:
                            buffer.delete_before_cursor(len('in in'))
                            buffer.insert_text('not in ')
                            return True
                if before_line.endswith(' '+c+' '+c):
                    #`x if y else else|` ---> `x if y else |`
                    buffer.delete_before_cursor(len(' '+c))
                    refresh_strings_from_buffer()
                # elif before_line.endswith(' '+c+' '):
                    # return True#Do nothing
            if before_line.endswith(' if ') and starts_with_any(after_line,'}',')',']'):
                #[x for x in y if |] ---> [x for x in y if |]
                return True
            for keyword in 'or and not in is'.split():
                if before_line.endswith(' else '+keyword):
                    #`a=x ify and z w` ---> `a=x if y and z else w` 
                    buffer.delete_before_cursor(len(' '+keyword))
                    buffer.cursor_left(len(' else'))
                    buffer.insert_text(' '+keyword+' ')
                    return True
            for keyword in 'not in'.split():
                if before_line.endswith(keyword) and re.fullmatch(r' else(([^a-zA-Z0-9_].*)|())',after_line):
                    #a=x if not| else z   --->   a=x if not | else z
                    buffer.insert_text(' ')
                    return True
            if endswithany(before_line,' in ',' is '):
                #on space: `x in y |` --> `x in y |`
                #on space: `x is y |` --> `x is y |`
                if after_line==':':
                    buffer.insert_text('ans')
                return True
        if n_makes_in_and_s_makes_is and char=='t':
            if before_line.endswith(' in o'):
                #Because 'n' --> 'in', 'not'-->'in ot'
                #On t: ' in o|'-->' not '
                buffer.delete_before_cursor(4)
                buffer.insert_text('not ')
                return True
      #endregion

      #region spacebar to commas in lists
        #TODO: Make this much more general (beyond just lists and numbers) to move it out of the 'misc tweaks' section
        if char==' ':
            if after_line.startswith(']') and re.fullmatch(r' *[0-9]+\-? *(\, *[0-9]+\-? *)*\[ *(([^a-zA-Z\)\]].*)|())',before_line[::-1]):#If NOT used as an index but is a list of number literals)
                # if char==' ' and after_line.startswith(']') and re.fullmatch(r' *[0-9]+\-? *(\, *[0-9]+\-? *)*\[ *((nruter)|[\:\,\=]|(dleiy)|(ni )).*',before_line[::-1]):#<---- Possible alternative regex to the above
                #When creating list literals with numbers and hitting space, don't add a space; add a comma.
                #This helps when copying down lists of numbers from a piece of paper onto my mac (no numpad) without having to look up to put my fingers back on the right numbers (moving them back from the comma key, which I can't use my thumb for)
                buffer.insert_text(',')
                return True
            if after_line.startswith(']]'):
                if before_line.endswith(','):
                    #On space:  [[1,2,3,|]]  --->   [[1,2,3],[|]]
                    buffer.delete_before_cursor()
                    buffer.cursor_right()
                    buffer.insert_text(',[]')
                    buffer.cursor_left()
                    return True
                if after_line.startswith(']]]') and before_line.endswith(',['):
                    #On space: [[[1,2,3],[|]]]  --->   [[[1,2,3]],[[|]]]
                    #(and then by other completions...)   on space:  [[[1,2,3]],[[|]]] -->  [[[1,2,3]],[|]]
                    buffer.delete_before_cursor(2)
                    buffer.delete()
                    buffer.cursor_right()
                    # n=re.match(r'^\]*',after_line).span()[1]#How many ]'s does the after_line start with
                    n=re.match(r'^\[\,\]*',before_line[::-1]).span()[1]-1
                    # assert n>=3#Because in the 'if' condition, after_line.startswith(']]]')
                    # n-=1
                    buffer.insert_text(','+n*'['+']'*n)
                    buffer.cursor_left(n)
                    return True
        if char==' ' and before_line.endswith('[[') and after_line.startswith(']]'):
            #On space: [[[|]]]  -->  [[|]]
            buffer.delete_before_cursor()
            buffer.delete()
            return True
        if char in ' \n*.+[)},' and re.fullmatch(r'.*\[.* +',before_line) and after_line.startswith(']'):#All the valid characters that might commonly follow a list literal
            #On space or enter key: [1,2,3, |]      --->   [1,2,3]|
            #On space or enter key: [1,2,3,     |]  --->   [1,2,3]|
            #The space between the '3,' and the ']' is important
            #For all keys except the space key, proceed as usual (don't cancel further completions)
            number_of_spaces=len(before_line)-len(before_line.rstrip())
            buffer.delete_before_cursor(number_of_spaces)
            if before_line.rstrip().endswith(','):
                buffer.delete_before_cursor()#Delete the comma
            buffer.cursor_right()
            refresh_strings_from_buffer()
            if char==' ':return True#For all keys except the space key, proceed as usual (don't cancel further completions)

      #endregion

      #region
        if char=='-':
            if re.fullmatch(r'.* for [a-zA-Z_0-9]+',before_line):
                #[x for y| in]  --->  [x for y_| in]
                buffer.insert_text('_')
                return True
            if before_line.lstrip().startswith('def ') and after_line.strip()=='):':
                try:
                    if before_tokens[-2].string==',':
                        #ON -: def f(x,y|):  -->  def f(x,y_|):
                        buffer.insert_text('_')
                        return True
                    elif before_tokens[-1].string==',':
                        #ON -: def f(x,|):  -->  def f(x,_|):
                        buffer.insert_text('_')
                        return True
                    elif before_tokens[-3].string=='def':
                        #ON -: def f(|):  -->  def f(_|):
                        buffer.insert_text('_')
                        return True
                    elif before_tokens[-4].string=='def':
                        #ON -: def f(x|):  -->  def f(x,y_|):
                        buffer.insert_text('_')
                        return True
                except IndexError:
                    #Probably an error getting some index of before_tokens. This is perfectly ok...just ignore it.
                    pass
      #endregion

      #region
        # if ,before_line_ends_with_number:
        if char==' ' and before_line_ends_with_number and after_line.startswith(']') and len(before_tokens)>=2 and before_tokens[-2].string=='[':
            #ON Space:
            # a[0|]  --->  a[0][|]
            buffer.cursor_right()
            buffer.insert_text('[]')
            buffer.cursor_left()
            return True
        if before_line.endswith('[') and after_line.startswith(']'):
            if char in '+&^%@<>/,|' or char=='=' and not (len(before_tokens)>=2 and before_tokens[-2].type==tokenize.NAME):#This last part about '=' being special is so we can have the '[=' operator
                #Intentionally did not include any '*.!~-' as they can be unary operators that go before things. + is also technically a unary operator because '+5' is a valid int, but who even does that...
                #ON +:
                # a[0][|]  --->  a[0]+|
                buffer.delete()
                buffer.delete_before_cursor()
                buffer.insert_text(char)
                return True
      #endregion

      #region
        # EXAMPLES FOR THIS SECTION:
        # {a:5}..a\n   —>   {a:5}['a'] 
        # {a:5}..a..b..c\n   —>   {a:5}[‘a’][‘b’][‘c’]
        # {a:5}..a..b..c+5\n   —>   {a:5}[‘a’][‘b’][‘c’]+5
        # L..0\n   —>   L[0]\n
        # L.123+    —>  L[123]+
        # L..123+   —>  L['123']+
        # L.0.1.2\n   —>  L[0][1][2]
        # L.-1\n    —>   L[-1]\n
        # L.1;5\n  —>  L[1:5]\n
        # L.1;5.0\n   —>  L[1:5][0]\n
        # L.0;1.0;;1.-1.0;-1.0;;-1.1;\n   —>   L[1:1][0::1][-1][0:-1][0::-1][1:]   (first is len 26, second is len33  — so this saved 7 keystrokes)
        # L.;;3\n —>  L[::3]\n
        # image.;,;,0  —>  image[:,:,0]
        # “f f x  .y”  —>  f(f(x).y)
        # “f f x  .5”  —>  f(f(x),.5)
        # “L.4[5”   —>   L[4][5]
        # “f f x  .y.0.1..a”   —>  f(f(x).y[0][1][‘a’])
        # “f f x  .5”  —>   f(f(x),.5)   BUT    “f f x  .a”  —>   f(f(x).a)    AND NOT  “f f x  .a”  —>   f(f(x)[‘a’])
        # “d f a 8b 8c”   —>  def f(a,*b,**c):
        # “i.;.;.0”  —>  i[:,:,0]
        # “i.;,;,0”  —>  i[:,:,0]
        if before_line.endswith(').') and char.isnumeric():
            #On pressing 5: f(x().|)  --->  f(x(),.5|)  (To conuter a side-effect of one of the next blocks)
            #“f f x  .y”  —>  f(f(x).y)
            #“f f x  .5”  —>  f(f(x),.5)
            buffer.delete_before_cursor()
            buffer.insert_text(',.')
            refresh_strings_from_buffer()
        if '..' in before_line:
            i=before_line.rfind('..')
            key=before_line[i+2:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"
            if key and not key.isnumeric():
                do_number_key=key.isnumeric() and not char.isnumeric()#Do a    a..1   --->   a[1] completion  (no quotes)
                do_string_key=is_namespaceable(key) and key and not is_namespaceable(key+char)#Do a    a..b   --->   a['b'] completion (with quotes)
                assert not do_number_key or not do_string_key,'can only do one or the other. this is internal logic this should never break. key='+repr(key)
                if do_number_key or do_string_key:
                    #Javascript-like x.y ==== x['y'] notation by using '..' instead of '.'
                    #Example: On '+' (which isn't namespaceable):   ..stuff|   --->   ..['stuff']+|
                    q="'"*do_string_key
                    buffer.insert_text(q+"]")
                    l=len(before_line)-i#Amount we have to move left#Ignore the shift caused by adding "']" because of buffer.delete_before_cursor(2)
                    buffer.cursor_left(l-do_number_key)
                    buffer.delete_before_cursor(2)
                    buffer.insert_text("["+q)
                    buffer.cursor_right(l-do_number_key)
        if '.' in before_line and char not in ',:-':
            i=before_line.rfind('.')
            key=before_line[i+1:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"
            before_key=before_line[:i]
            #someList.5   --->   someList[5]
            numeric_key_candidate=key.replace(':','').replace(',','').replace('-','')
            do_number_key=numeric_key_candidate.isnumeric() and not (char.isnumeric() or (char=='-' and not (key and key[-1]=='-')))#Do a    a..1   --->   a[1] completion  (no quotes)
            if char==';' and (do_number_key or not numeric_key_candidate):
                buffer.insert_text(':')
                return True
            if char=='.' and key and not numeric_key_candidate:
                #Allow for "i.;.;.0"   --->   "i.;,;,0"  -->  "i[:,:,0]"  (have to worry about one less character (can forget about the comma in this particular case. The alternative is to give an invalid completion aka 'i.;.;.0'  -->  'i.:[:,0]'))
                buffer.insert_text(',')
                return True
            if do_number_key and numeric_key_candidate and not (not before_key or endswithany(before_key,',')) and not ends_with_number(before_key):
                buffer.insert_text("]")
                l=len(before_line)-i
                buffer.cursor_left(l)
                buffer.delete_before_cursor(1)
                buffer.insert_text("[")
                buffer.cursor_right(l)
            elif char in '.\n-+*&^%#/()[]{}@<>=':
                refresh_strings_from_buffer()
               #match=re.match(r'[0-9\,\:]+\-?\.[^= ]',before_line[::-1])
               #match=re.match(r'((([0-9]+\-?)|\:)(\,([0-9]+\-?)|\:)*)\-?\.[^= ]',before_line[::-1])
                match=re.match(r'(((([0-9]+\-?)|\:)*)(\,(([0-9]+\-?)|\:)*)*)\.[^= ]',before_line[::-1])
                bad_match=bool(re.match(r'[0-9]+\.[0-9]+'         ,before_line[::-1]))\
                  and not bool(re.match(r'[0-9]+\.[0-9]+\-?[a-zA-Z_\,]',before_line[::-1]))#Not part of a variale name but we still have before_line ending with something like 34234.32423
                bad_match=bad_match or\
                          bool(re.match(r'[0-9]+\.[0-9]*\-'       ,before_line[::-1]))
                bad_match=bad_match or before_line.endswith('.')
                if match and not bad_match and not re.fullmatch(r'.*[^\)\]a-zA-Z_\'\"][0-9]+',before_line) and\
                             not re.fullmatch(r'.*[0-9]+\,\w*',before_line):#To fix ‹[.5,.›  -/->  ‹[[.5,].|]›
                    double_dot=bool(re.match(r'[0123456789\,\:]+\.\.',before_line[::-1]))
                    start,end=match.span()#Number of digits
                    assert start==0
                    assert end>1
                    buffer.cursor_left(end)
                    buffer.delete_before_cursor()
                    if double_dot:buffer.delete_before_cursor()#;print('\n',end)# x.1.2..3.  -->  x[1][2]['3'].;
                    else:pass#x.1.2.3.4.5.   --->   x[1][2][3][4][5].
                    buffer.insert_text('[')
                    if double_dot:buffer.insert_text("'")
                    buffer.cursor_right(end)
                    if double_dot:buffer.insert_text("'")
                    buffer.insert_text(']')
                    refresh_strings_from_buffer()

        if char in '&^+/%|' and before_line.endswith(',') and not get_if_in_string_or_comment(before_line,after_line,buffer):#Not '-' because '-' can be a prefix for a number
            #Note: < and > purposely excluded because they're commands to swap arguments etc
            #On +: f(x,y,z,|)  --->  f(x,y,z+|)
            #“f f x  .y”  —>  f(f(x).y)
            #“f f x  .5”  —>  f(f(x),.5)
            buffer.delete_before_cursor()
            # return False#We should keep going if there are any other completions that could have been trigggered by this
        if char.isalpha() and before_line.endswith(',.'):
            #On y: f(x,.|)  --->  f(x.y|)
            buffer.cursor_left()
            buffer.delete_before_cursor()
            buffer.cursor_right()
        if char==',' and before_line.endswith('(') and after_line.startswith(')'):
            #Spacebar makes f(g(|)) --> f(g,)
            #So, on ',': f(g(|))  -->  f(g(),)
            buffer.cursor_right()
        if char.isalpha() and not after_line.strip() and before_line.lstrip()=='2':
            #Don't need to press shift to make the @ decorator symbol
            #Example:
            #'2memoized\ndf ' --->   '@memoized\ndef f():'
            buffer.delete_before_cursor()
            buffer.insert_text('@')
        if char.isalpha() and before_line.endswith('=.'):
            #fixed the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key
            # On press 'w' for example:
            # self=.|   --->   self.w|=  --->  self.w|=w   (and then type foo to get self.foo=foo)
            buffer.delete_before_cursor()
            buffer.cursor_left()
            buffer.insert_text('.')
            refresh_strings_from_buffer()

      #endregion

      #region async and await
        if char==' ' and before_line.lstrip in ('async','await') and not after_line.strip():
            buffer.insert_text(' ')
            return True
      #endregion


      #region misc tweaks

        if char=='\n' and not after_line and before_line.endswith(':'):
            buffer.insert_text('\n'+get_indent(before_line)+'    ')
            return True
        if char=='=' and before_line.endswith('.') and after_line.strip():
            #`if x.=5`   -->  `if x>=5|:`
            buffer.delete_before_cursor()
            buffer.insert_text('>')
            refresh_strings_from_buffer()
        if char=='=' and before_line.endswith(',') and after_line.strip():
            #NOTE This is a stylistic, heuristic choice. Technically, 'if x,=y:' is valid syntax. However, I find that I rarely ever do that. On the flip side, I do `if x<=y` much more often.
            #`if x,=5`   -->  `if x<=5|:`
            buffer.delete_before_cursor()
            buffer.insert_text('<')
            refresh_strings_from_buffer()

        if char=='\n':
            #A tweak meant to make ]= and )= operators betters
            if re.fullmatch(r'[^\=]+\=[^\=]+',before_line) and \
               after_line.startswith('(') or after_line.startswith('['):
              #We're on the right-hand-side of some assignment...  
                buffer.cursor_right(999999)#`i)=5\n`  -/->  `i=i\n|(5)` INSTEAD `i)=5\n`  --->  `i=i(5)\n|`
            refresh_strings_from_buffer()
        if char==' ' and re.fullmatch(r'.*[\,\(](and|or|not|nin|in|is)',before_line):
            #With function f: `f x and y` -/->  `f(x,and,y)
            #With function f: `f x and y` --->  `f(x and y)
            #Same goes for and,or,not,in,is,etc...
            for kw in 'and or not nin in is'.split():
                if before_line.endswith(kw):
                    if kw != 'not':
                        buffer.cursor_left(len(kw))
                        refresh_strings_from_buffer()
                        if not before_line.endswith('('):
                            buffer.delete_before_cursor()
                            buffer.insert_text(' ')
                        buffer.cursor_right(len(kw))
                    buffer.insert_text(' ')
                    if kw=='nin':
                        buffer.delete_before_cursor(len('nin '))
                        buffer.insert_text('not in ')
                    if kw=='isnt':
                        buffer.delete_before_cursor(len('isnt '))
                        buffer.insert_text('is not ')
                    return True
        if char==' ' and re.fullmatch(r'.*[^\w]is nt',before_line):
            #isn't ---> is not 
            #`x isnt y`  -->  `x is not y|`
            buffer.delete_before_cursor(len('is nt'))
            buffer.insert_text('is not ')
            return True
        if char in 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_':
            if not after:
                if before=='5':
                    #`5edit` --->  `%edit` #For ipython magics, turn 5 into % if at the beginning of a line
                    buffer.delete_before_cursor()
                    buffer.insert_text('%')
                elif before=='55':
                    #`55edit` --->  `%%edit` #For ipython magics, turn 5 into % if at the beginning of a line
                    buffer.delete_before_cursor(2)
                    buffer.insert_text('%%')
        if char in 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM[({_' and re.fullmatch(r'.*[^a-zA-Z_0-9]1',before_line):
            if char!='j':#1j is a valid literal. Don't destroy it.
                #Interperet ! or 1 as 'not '
                #`x f1y z` --->  `x if not y else z`
                buffer.delete_before_cursor()
                buffer.insert_text('not ')
        if char in 'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_({[\'"':
            #8 to * in function calls and lists etc
            if re.fullmatch(r'.*[\(\[\{\,] *8',before_line):
                buffer.delete_before_cursor()
                buffer.insert_text('*')
                refresh_strings_from_buffer()
            elif re.fullmatch(r'.*[\(\[\{\,] *88',before_line):
                buffer.delete_before_cursor(2)
                buffer.insert_text('**')
                refresh_strings_from_buffer()
        if char in '"\'' and re.fullmatch(r'.*\*',before_line) and re.fullmatch(r'[\]\}\)]',after_line):
            #auto Double quotes. Dont know where the other part in this code is and I'll make this more coherent later.
            buffer.insert_text(char)
            buffer.cursor_left()
            buffer.insert_text(char)
            return True
        if char=='-':
            if re.fullmatch(r'( )*for [a-zA-Z_]+',before_line):
                #`   for abc|`  --->   `   for abc_|`
                buffer.insert_text('_')
                return True
            if re.fullmatch(r' *(from |import ).*',before_line):
                #import thingy-5 as stuff-6   --->  import thingy_5 as stuff_6
                buffer.insert_text('_')#`from itertools import product as cartesian-` should do _ instead of -
                return True
        if char=='\n' and '\n' not in before and '\n' in after:
            #Fixing a bug in a hacky way: Don't enter commands if our cursor is on the first character and we're multi-line
            buffer.insert_text('\n')
            return True
        if char=='\n' and text=='ans[]' and after_line==']':
            #THIS IS BROKEN
            #TODO: Why does this never get triggered?
            #Space -->  ans[|]  -->  ans\n   (when we just want to see the answer but hitting space tries to index an array)
            buffer.delete()
            buffer.delete_before_cursor()
        if char in '.\n' and re.fullmatch(r'[a-zA-Z_]+\=(\/)+',current_line) and after_line=='':
            #On hitting enter, `torch=/`  -->  `torch?`
            #On hitting enter, `torch=//`  -->  `torch??`
            #On hitting enter, `torch=///`  -->  `torch???`
            #On hitting enter, `torch=////`  -->  `torch????`
            #Because `import torch\n=/\n` shows help for torch
            # print("AOSD")
            I=0
            for c in reversed(before_line):
                if c!='/':
                    break
                I+=1

            buffer.delete_before_cursor(len('=')+I)
            buffer.insert_text('?'*I)
        if char=='\n' and after=='' and before_line.endswith(';'):
            #Insert a new line if we end with ';' to make life easier
            #on '\n': `single_line_stuff();|`  --->  `single_line_stuff()\n|`
            buffer.delete_before_cursor()
            buffer.insert_text('\n')
            return True
        if (char!='=' and re.fullmatch(r'.*\=',before_line) and not re.fullmatch(r'.*\=\=',before_line) and starts_with_any(after_line,']') and not (len(after_line.strip())==2 and after_line.strip()[1]==':')) and not endswithany(before_line,'==','1=','!='):
            #On a letter or number 'q':  i[w=|]  -->  i[w]=q
            if before_line.endswith('>=') or before_line.endswith('<='):
                buffer.insert_text(char)
                return
            buffer.delete_before_cursor()
            buffer.cursor_right()
            buffer.insert_text('=')
        any_keyword_regex=r'False|class|finally|is|return|None|continue|for|lambda|try|True|def|from|nonlocal|while|and|del|global|not|with|as|elif|if|or|yield|assert|else|import|pass|break|except|in|raise'
        if char=='=' and     re.fullmatch(r'.*([^\+\-\(\[\,\/\@\%\^\&\*\~\<\>\=]|(([a-zA-Z_0-9]*) +))1',before_line) \
                     and not re.fullmatch(r'.*('+any_keyword_regex+r') +1',before_line)\
                     and not re.fullmatch(r'\s*\w+',before_line):#we don't want h1=5 to turn into h!=5
            #`x 1=y` -->  'x !=y'
            #TODO: Check to make sure that variable x1 is not in the text, nor is it in globa scope. Then we can be sure we meant to use != instead of ==, and that it is not just a number literal (we don't want 21=  to 2!=)
            buffer.delete_before_cursor()
            buffer.insert_text('!=')
            return True
        if char==' ' and re.fullmatch(r' *(from |import ).*',before_line) and after_line.strip().startswith('#'):
            buffer.insert_text(' ')#FIX: on space: `import x as y#Comment|` —> `import x as y#Comment|, ` 
            return True
        for kw in 'return break yield continue assert'.split():
            if char==' ' and not after_line.strip() and re.fullmatch(r" *(for|while|if|with|try|def|elif|else|except|finally)(( .*\:)|( *\:)) *("+splinterify(kw)+")",before_line):
                assert so_far(before_line) in kw,'Internal logical assertion should never fail'
                buffer.insert_text(kw[len(so_far(before_line)):])
                refresh_strings_from_buffer()
                #on space: `if x:re`         -->  `if x:return|`  -->  `if x:return |`
                #on space: `if x:y`          -->  `if x:yield|`   -->  `if x:yield |`
                #on space: `with x as y:con  -->  `if x:return|`  -->  `if x:continue |`
        if char==' ' and re.fullmatch(r'.*[\(\[\, ]\-',before_line):
            #if -|:   --->   if _ |:
            #print(-|)   --->   print(_,|)
            #print(_,-|)   --->   print(_,_|)
            buffer.delete_before_cursor()
            buffer.insert_text('_')
            refresh_strings_from_buffer()
        if char=='\n' \
             and before_line.endswith('-')\
             and (re.fullmatch(r' *[^\w\(\{].*',after_line) or not after_line.strip())\
             and re.fullmatch(r'(\s*)|(.*[^\w\s]\s*\-)',before_line):
            #On \n:   `[_ and -|]`  --->  `[_ and _]\n
            #On \n:   `x and -`  --->  `x and _
            #On \n:   `x+-`  --->  `x+-`
            buffer.delete_before_cursor()
            buffer.insert_text('_')
            refresh_strings_from_buffer()
        if char==' ' and re.fullmatch(' *for len',before_line) and re.fullmatch(' in : *',after_line):
            #`   for len| in :`  --->  `   for _ in range(len(|)):`
            buffer.delete_before_cursor(len('len'))
            buffer.insert_text('_')
            buffer.cursor_right(len(' in '))
            buffer.insert_text('range(len())')
            buffer.cursor_left(len('))'))
            return True
        if char in 'p' and meta_pressed(clear=True):
            run_arbitrary_code_without_destroying_buffer('PREV',event,put_in_history=True)
            return True
        if char in 'n' and meta_pressed(clear=True):
            run_arbitrary_code_without_destroying_buffer('NEXT',event,put_in_history=True)
            return True
        if char in '{([])}' and meta_pressed(clear=False):
            #When holding alt, add a ) or ] or } to the end of the line, instead of autocompleting it where it is currently
            #TODO: Add example
            if char in '{([':
                buffer.insert_text(char)
                char={'(':')','[':']','{':'}'}[char]
            meta_pressed(clear=True)
            # l=after_line.find(':')#In the event that we're in "for x in func(|thing:" we want "for x in func(|thing):" and not "for x in func(|thing:)"
            l=len(after_line)-1 if after_line.endswith(':') else len(after_line)
            buffer.cursor_right(l)
            buffer.insert_text(char)
            buffer.cursor_left(l+1)
            return True
        if char=='=' and re.fullmatch(r' *[\-][\)\]\.\+\*\&\%\@\>\<\/\[\(]',before_line):
            #  `-+=x`  --->     `_+=x|`
            #`  -)=f`  --->   `  _=f(_|)`
            # ` -.=x`  --->    ` _=_.x|`
            buffer.cursor_left()
            buffer.delete_before_cursor()
            buffer.insert_text('_')
            buffer.cursor_right()
        if char=='=' and re.fullmatch(r' +[\-]',before_line):
            #`if _:\n\t-=5`  --->   `if _:\n\t_=5|`
            buffer.delete_before_cursor()
            buffer.insert_text('_')
        if char=='=' and re.fullmatch(r' *\w+\(',before_line) and after_line==')':
            #Fixing the (= operator
            #`f(=x`   --->   `f=f(x|)`
            buffer.delete_before_cursor()
            buffer.delete()
            buffer.insert_text('=')
            buffer.insert_text(before_line[:-1].strip())
            buffer.insert_text('()')
            buffer.cursor_left()
            return True
        if char=='=' and before_line.endswith('-') and after_line.strip().endswith(':'):
            #   `if -=5`  --->  `if _=5:`  --->  `if _==5|:`
            buffer.delete_before_cursor()
            buffer.insert_text('_')
        if char in '<>/%^&@+[,*' and before_line.endswith('-'):
            #- is treated like _ when an syntax-breaking operator comes after it
            #`-*5` --->  `_*5`
            buffer.delete_before_cursor()
            buffer.insert_text('_')

        if char=='=' and not endswithany(before_line,'=','>','<') and after_line.strip().endswith(':') and not starts_with_any(before_line.strip(),'def '):
            if before_line.endswith('(') and after_line.startswith(')'):
                #On '=': `if f(|):` --->  `if f()==|:`
                buffer.cursor_right()
            if before_line.endswith(',') and starts_with_any(after_line,*'])}'):
                #On '=': `if f(x,|):` --->  `if f(x)==|:`
                #On '=': `if l[i,|]:` --->  `if l[i]==|:`
                buffer.delete_before_cursor()
                buffer.cursor_right()
            buffer.insert_text('==')
            return True
        if char=='=' and endswithany(before_line,'<=','>=','!='):
            #Drag the >= or <= or !=
            #`if f(x>==y`  --->  `if f(x)>=y`
            ending=before_line[-2:]
            buffer.delete_before_cursor(2)
            buffer.cursor_right()
            buffer.insert_text(ending)
            return True
        if char in '<>' and before_line.endswith(char):
            #Drag > and <
            #`if f(x>>y`  --->  `if f(x)>y`
            buffer.delete_before_cursor()
            buffer.cursor_right()
            buffer.insert_text(char)
            return True
        if char=='\n' and after_line=='):' and before_line.endswith(',') and before_line.strip().startswith('def '):
            #On enter, `def f(x,|):`  --->  `def f(x):\n\t|`
            buffer.delete_before_cursor()
        if char=='\n' and before_line.lstrip()=='d' and not after_line and in_class_func_decl(buffer):
            buffer.delete_before_cursor()
            if not '__init__' in before:
                buffer.insert_text('def __init__(self):')
            else:
                buffer.insert_text('def _(self):')
        if char=='\n' and re.fullmatch(r'\s*(from|import)\s.* as ',before_line):
            buffer.delete_before_cursor(len(' as '))
        if char.isnumeric() and before_line.endswith(' for ') and after_line.startswith(' in'):
            #[x f4  --->  [x for x in range(4|)]
            buffer.insert_text('_')
            buffer.cursor_right(len(' in'))
            buffer.insert_text(' range('+char+')')
            buffer.cursor_left()
            return True
        if char==' ' and before=='from ' and after==' import':
            #On space: `from | import`   --->   `for | in :`
            buffer.delete(len(after))
            buffer.delete_before_cursor(len(before))
            buffer.insert_text('for  in :')
            buffer.cursor_left(len(' in :'))
            return True
        if char==' ' and re.fullmatch(r'.*[^\w]not',before_line) and starts_with_any(after_line,*')]}'):
            #Patch: `print x is not y`  -/->  `print(x is not,y|)`
            #Patch: `print x is not y`  --->  `print(x is not y|)`
            buffer.insert_text(' ')
            return True
        if char==';' and after_line==')':
            #On ‹;›: ‹print(|)›  -->  ‹print();|›
            buffer.cursor_right(9999)
            buffer.insert_text(';')
            return True
        if char==' ' and before_line.lstrip()=='for ' and after_line==' in :':
            #`for | in :` --->  `for _| in :` --->  `for _ in |:`
            buffer.insert_text('_')
            buffer.cursor_right(len(' in '))
            return True
        if char in '- \n' and starts_with_any(before_line.lstrip(),'nonlocal ','global ','del '):
            #After nonlocal and global,
            if char=='-':
                #‹nonlocal -var-name› ---> ‹nonlocal _var_name›
                #  ‹global -var-name› --->   ‹global _var_name›
                buffer.insert_text('_')
                return True
            if char==' ':
                if re.fullmatch(r'.*\w',before_line):
                    # ‹nonlocal x y z› ---> ‹nonlocal x,y,z›
                    buffer.insert_text(',')
                    return True
            if char=='\n' and not after_line.strip():
                #On enter: ‹global x,y,  |›  --->  ‹global x,y\n|›
                if before_line.strip().endswith(','):
                    while before_line.strip().endswith(','):
                        buffer.delete_before_cursor()
                        refresh_strings_from_buffer()
        if char=='n' and before_line.endswith(',not i'):
            #On ‹n›: ‹print(x,not i|)›  --->  ‹print(x not in |)›
            buffer.cursor_left(len('not i'))
            buffer.delete_before_cursor()
            buffer.insert_text(' ')
            buffer.cursor_right(len('not i'))
            buffer.insert_text('n ')
            return True
        if before and char=='\n' and not after and 'print'.startswith(before) and not before in ric.globa:
            #If the variable doesn't exist and would cause an error,
            #Replace something like ‹pri› --->  ‹print(ans)›
            #Pseudo terminal does this by default without this microcompletion, but it's tidier to do it here
            buffer.delete_before_cursor(99999)
            buffer.insert_text('print(ans)')
        if (char.isalpha() or char=='_') and before in ['1','11']:
            #‹1ls› --> ‹!ls|›
            #‹11ls› --> ‹!!ls|›
            refresh_strings_from_buffer()
            buffer.delete_before_cursor(len(before))
            buffer.insert_text('!'*len(before))
        if char in '?/' and before_line.endswith('(') and after==')' and not '\n' in text:
            #On /: some_function(|) --> some_function?|
            #On ?: some_function(|) --> some_function?|
            buffer.delete_before_cursor()
            buffer.delete()
            buffer.insert_text('?')
            return True
        if char=='/' and endswithany(before_line,'??','?/','//') and not '\n' in text:
            #‹x///› ---> ‹x?/›
            #‹x////› ---> ‹x??›
            #‹x/////› ---> ‹x???›
            #‹x//////› ---> ‹x????›
            #‹x///////› ---> ‹x?????›
            if before_line.endswith('?/'):
                buffer.delete_before_cursor()
                buffer.insert_text('??')
            elif before_line.endswith('//'):
                buffer.delete_before_cursor(2)
                buffer.insert_text('?/')
            else:
                buffer.insert_text('?')
            return True
        if (char.isalpha() or char=='_') and not '\n' in text and not after and before.endswith('/.'):
            #On ‹c›: ‹np/.|›  --->  ‹np?.c|›
            #`np/.conv` --->  `np?.conv`
            buffer.delete_before_cursor(2)
            buffer.insert_text('?.')
        if char in '.([?+/*@&|\n' and before and not '\n' in before and not after and ric.current_candidates and re.fullmatch(r'[\w\.]*[\ws]+',before):
            #`np.lin.cho.geta.`  --->  `np.linalg.cholesky.__getattribute__.|`
            if not before_line.isnumeric():
                current=before_line.split('.')[-1]
                if (False or current not in ric.current_candidates) and (not char=='\n' or '.' in before_line):#If enter key, must have some . in the line to do anything
                    candidate=ric.current_candidates[0]#First autocompletion candidate
                    if not '.' in before:
                        buffer.delete_before_cursor(99999)
                    else:
                        while not before.endswith('.'):
                            buffer.delete_before_cursor()
                            refresh_strings_from_buffer()
                    buffer.insert_text(candidate)
        if char=='\n' and not '\n' in text and not after and before.endswith('/') and not before_line.endswith('?/'):
            #On \n: ‹thing/›     --->  ‹thing?\n›
            #On \n: ‹thing//›    --->  ‹thing??\n›
            #On \n: ‹thing///›   --->  ‹thing???\n›
            #On \n: ‹thing////›  --->  ‹thing????\n›
            i=0
            while before.endswith('/'):
                i+=1
                buffer.delete_before_cursor()
                refresh_strings_from_buffer()
            buffer.insert_text('?'*i)
        if char=='\n' and before_line.lstrip() in {'while ','if '} and after_line.strip()==':':
            buffer.insert_text('True')
        if char==';' and after_line.startswith('}'):
            #On ‹;›: ‹{x|}›  --->  ‹x:|›
            buffer.insert_text(':')
            return True
        if char==';' and after_line.startswith(')') and before_line.lstrip().startswith('def '):
            #On ‹;›: ‹def f(x|):›  --->  ‹def f(x:|):›
            buffer.insert_text(':')
            return True

        if char=='-' and before_line.lstrip().startswith('def ') and before_line.endswith(')') and after_line==':':
            buffer.insert_text('->')
            return True
        if (char=='-' or char=='>') and before_line.lstrip().startswith('def ') and before_line.endswith(')->') and after_line==':':
            #Do nothing
            return True

        if before=='cd' and not after and char==' ':
            #Allow 'cd thing' to be 'CD thing'
            buffer.delete_before_cursor(2)
            buffer.insert_text('CD ')
            return True

        if set(after)<=set('])}') and not '\n' in before:
            if char=='\n' and before.endswith('/'):
                # On enter:  ans[5/|]  --->  ans[5]?|
                buffer.delete_before_cursor()
                buffer.cursor_right(9999)
                buffer.insert_text('?')
                return False
            if char=='\n' and before.endswith('//'):
                # On enter:  ans[5//|]  --->  ans[5]??|
                buffer.delete_before_cursor(2)
                buffer.cursor_right(9999)
                buffer.insert_text('??')
                return False
            # if char=='/' and before.endswith('//'):
            #     # On /:  ans[5//|]  --->  ans[5]???|
            #     buffer.delete_before_cursor(2)
            #     buffer.cursor_right(9999)
            #     buffer.insert_text('???')
            #     return True
            if char=='?':
                # On ?:  ans[5|]  --->  ans[5]?|
                buffer.cursor_right(9999)
                return False
                
        
        import rp.r_iterm_comm as ric
        if char in './?=' and text=="" and ric.successful_commands:
            last_command=ric.successful_commands[-1]
            if not '\n' in last_command and not ';' in last_command:
                if last_command.startswith('from ') or last_command.startswith('import '):
                    #import numpy
                    #<on .>
                    #numpy.|
                    buffer.insert_text(last_command.split()[-1]+char)
                    if char=='=':
                        buffer.delete_before_cursor()
                    return True
                

        # if char==' ' and after_line.startswith(')') and endswithany(before_line,*'\'"'):
        #     #print('hello'|) ---> print('hello',|)
        #     #print('hello'|) -/-> print('hello' |)
        #     buffer.insert_text(',')
        #     return True




      #endregion
    return False


ans_dot_completion_string=None


def original_ptpython_load_python_bindings(python_input):
    #THIS IS NOT USED RIGHT NOW. But if this was used instead of load_python_bindings, there would be no microcompletions. Mayybe you want that? I certainly dont.
    """
    Custom key bindings.
    """
    registry = Registry()

    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)
    handle = registry.add_binding
    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)
    # handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)
    has_selection = HasSelection()
    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)

    @handle(Keys.ControlL)
    def _(event):
        """
        Clear whole screen and render again -- also when the sidebar is visible.
        """
        event.cli.renderer.clear()

    @handle(Keys.F2)
    def _(event):
        """
        Show/hide sidebar.
        """
        python_input.show_sidebar = not python_input.show_sidebar

    @handle(Keys.F3)
    def _(event):
        """
        Select from the history.
        """
        python_input.enter_history(event.cli)

    @handle(Keys.F4)
    def _(event):
        """
        Toggle between Vi and Emacs mode.
        """
        python_input.vi_mode = not python_input.vi_mode
        print(event.cli.vi_state)
        event.cli.vi_state.input_mode = 'vi-navigation'

    @handle(Keys.F6)
    def _(event):
        """
        Enable/Disable paste mode.
        """
        python_input.paste_mode = not python_input.paste_mode

    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())
    def _(event):
        """
        When tab should insert whitespace, do that instead of completion.
        """
        event.cli.current_buffer.insert_text('    ')

    @handle(Keys.ControlJ, filter= ~sidebar_visible & ~has_selection &
            (ViInsertMode() | EmacsInsertMode()) &
            HasFocus(DEFAULT_BUFFER) & IsMultiline())
    def _(event):
        """
        Behaviour of the Enter key.

        Auto indent after newline/Enter.
        (When not in Vi navigaton mode, and when multiline is enabled.)
        """
        b = event.current_buffer
        empty_lines_required = python_input.accept_input_on_enter or 10000

        def at_the_end(b):
            """ we consider the cursor at the end when there is no text after
            the cursor, or only whitespace. """
            text = b.document.text_after_cursor
            return text == '' or (text.isspace() and not '\n' in text)

        if python_input.paste_mode:
            # In paste mode, always insert text.
            b.insert_text('\n')

        elif at_the_end(b) and b.document.text.replace(' ', '').endswith(
                    '\n' * (empty_lines_required - 1)):
            if b.validate():
                # When the cursor is at the end, and we have an empty line:
                # drop the empty lines, but return the value.
                b.document = Document(
                    text=b.text.rstrip(),
                    cursor_position=len(b.text.rstrip()))

                b.accept_action.validate_and_handle(event.cli, b)
        else:
            auto_newline(b)

    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:
            # Only when the `confirm_exit` flag is set.
            python_input.confirm_exit and
            # And the current buffer is empty.
            cli.current_buffer_name == DEFAULT_BUFFER and
            not cli.current_buffer.text))
    def _(event):
        """
        Override Control-D exit, to ask for confirmation.
        """
        python_input.show_exit_confirmation = True

    return registry

def load_python_bindings(python_input):
    """
    Author: Ryan Burgert
    """
    registry = Registry()

    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)
    # handle = registry.add_binding # <---- OLD CODE
    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)# <---- NEW CODE: Make sure post_handler is called after every keystroke
    has_selection = HasSelection()
    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)
    # microcompletions_enabled = Condition(lambda cli: True)
    microcompletions_enabled = Condition(lambda cli: getattr(python_input,'enable_microcompletions',False))

    #region Ryan Burgert Stuff
    from rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent
    from rp.prompt_toolkit.document import Document
    #region Template
    def _(event):# Parenthesis completion
        #
        assert isinstance(event,KeyPressEvent)
        #
        from rp.prompt_toolkit.buffer import Buffer
        buffer=event.cli.current_buffer
        assert isinstance(buffer,Buffer)
        #
        document=buffer.document
        assert isinstance(document,Document)
        document.insert_after()
        #
        text=document.text_after_cursor
        assert isinstance(text,str)
        #
    # buffer.insert_text("(")
    # if not text or text[0] in " \t\n":
    #     buffer.insert_text(")")
    #     buffer.cursor_left(count=1)
#endregion
    for char in '''`~!@#$%^&*()-_=+[{]}\|;:'",<.>/?']''':
        def go(c):
            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)
            def _(event):
                buffer=event.cli.current_buffer
                if handle_character(buffer,c,event):return
                buffer.insert_text(c)
        go(char)
    for char in '~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?`1234567890-=qwertyuiop[]\\asdfghjkl;\'zxcvbnm,./':# Normal keyboard inputs
        def go(c):
            @handle(c,filter=has_selection & ~vi_mode_enabled)
            def _(event):
                buffer=event.cli.current_buffer
                if handle_character(buffer,c,event):return
                # buffer.on_text_changed+=lambda *x:buffer.save_to_undo_stack(clear_redo_stack=False)
                buffer.cut_selection()# Overwrite text if we have something selected
                buffer.insert_text(c)
        go(char)
    from rp import regex_match
    def self_dot_var_equals_var(buffer,char_to_insert=None):
        #(upon typing foo)
        #
        #class x:
        #   def __init__(foo):
        #       self.|=
        #
        #    --->
        #
        #class x:
        #   def __init__(foo):
        #       self.foo|=foo

        document=buffer.document
        current_line=document.current_line
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        #Are we donig this shenanagin right now? (Where we do self.foo=foo, and self.bar=bar...etc)
        if not '.' in before_line:return False
        self=before_line.lstrip()[:before_line.lstrip().find('.')]
        if not (before_line.lstrip().startswith(self+'.') and after_line.lstrip().startswith('=')):
            return False

        before_var_name=before_line.lstrip()[len(self+'.'):]#might be blank, but that's OK
        after_var_name=after_line[1:].strip()
        # print("\nbefore_var_name="+before_var_name+', after_var_name='+after_var_name)
        out=before_var_name==after_var_name
        var_name=before_var_name#or after_name, makes no difference

        if out and char_to_insert is not None:
            if char_to_insert =='\b':
                if var_name.strip():
                    assert buffer is not None#internal logic of how you use this function
                    buffer.delete_before_cursor()
                    buffer.cursor_right(len('='+var_name))
                    buffer.delete_before_cursor()
                    buffer.cursor_left(len('='+var_name)-1)
            else:
                assert buffer is not None#internal logic of how you use this function
                buffer.insert_text(char_to_insert)
                buffer.cursor_right(len('='+var_name))
                buffer.insert_text(char_to_insert)
                buffer.cursor_left(len(char_to_insert))
                buffer.cursor_left(len('='+var_name))
        return out
    def setting_index(buffer,char):
        document=buffer.document
        current_line=document.current_line
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        before=document.text_before_cursor
        after= document.text_after_cursor
        if regex_match(before_line,r'.*\[.*=') and after_line==']':
            #a[b=|]  --->  a[b]=|
            if before_line.endswith('=='):
                #But NOT this:
                #a[b==|]  --->  a[b=]=|
                return False
            buffer.delete_before_cursor()
            buffer.cursor_right()
            buffer.insert_text('='+char)
            return True
        return False
    @handle(';',filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        buffer=event.cli.current_buffer
        if handle_character(buffer,';',event):return
        document=buffer.document
        current_line=document.current_line
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        before=document.text_before_cursor
        after= document.text_after_cursor
        if after_line.startswith(']'):
            #We can avoid pressing the shift-key here:
            #L[|]  --->  L[:]
            buffer.insert_text(':')
        else:
            buffer.insert_text(';')
        return
    for char in 'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm_':#Letter inputs
            def go(char):
                @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)
                def _(event):
                    buffer=event.cli.current_buffer
                    if handle_character(buffer,char,event):return
                    document=buffer.document
                    current_line=document.current_line
                    before_line=document.current_line_before_cursor
                    after_line=document.current_line_after_cursor
                    before=document.text_before_cursor
                    after= document.text_after_cursor
                    if self_dot_var_equals_var(buffer,char) or setting_index(buffer,char):
                        return
                    token,name,found=token_name_found_of_interest(before_line)
                    # print(token,repr(name),found)
                    if (found and name in ('9','9j','9J') or name=='') and endswithany(before_line,'j','J','9'):
                        if not (before_line.endswith('9') and char in 'jJ'):#9j is a legit imaginary literal. That's an edge case...
                            #Tokens can't start with a digit and end with a letter. 
                            #So, because of that, we can start a () region by using the 9 key without holding shift
                            #(Later we'd want to extend this to quotes, or any other breaking syntax)
                            #(on press x, for ex)    [9|]  --->   [(x|)]
                            buffer.delete_before_cursor()
                            if before_line.lower().endswith('j'):
                                buffer.delete_before_cursor()
                            buffer.insert_text('(')
                            if before_line.lower().endswith('j'):
                                buffer.insert_text(before_line[-1])
                            buffer.insert_text(char)
                            buffer.insert_text(')')
                            buffer.cursor_left()
                            return
                    def writing_namespace_breaks_syntax(before_line):
                        return endswithany(before_line,' ',#This is like [x |for] (space to the left of |)
                            ')',']','}',*'1234567890','"',"'")#All of these are breaking syntax...
                    might_be_in_string_or_comment='"' in before_line and after_line.count('"')==before_line.count('"') or \
                                       "'" in before_line and after_line.count("'")==before_line.count("'") or \
                                       '#' in before_line
                    keywords={'with', 'nonlocal', 'while', 'None', 'global', 'as', 'is', 'and', 'else', 'yield', 'raise', 'del', 'break', 'in', 'not', 'False', 'assert', 'try', 'def', 'return', 'if', 'finally', 'lambda', 'for', 'from', 'True', 'pass', 'continue', 'elif', 'except', 'class', 'or', 'import', 'async', 'await'}
                    if before_line.strip() and not might_be_in_string_or_comment:
                        if not starts_with_any(before_line.lstrip() , 'from ','import '):
                            i_triggers_ifelse=False
                            if True:
                                # if writing_namespace_breaks_syntax(before_line) and char=='i' and i_triggers_ifelse and not endswithany(before_line.rstrip(),'else',*(keywords-{'True','False'})):
                                #     buffer.insert_text('if  else')
                                #     buffer.cursor_left(len(' else'))
                                #     return
                                # if endswithany(before_line,']i',')i','}i','"i',"'i",' i') and char=='f' or char=='i':
                                if before_line.endswith('i') and writing_namespace_breaks_syntax(before_line[:-1]) and char=='f' and not (endswithany(before_line[:-1].rstrip(),*(keywords-{'True','False'}))) or \
                                           i_triggers_ifelse and writing_namespace_breaks_syntax(before_line     ) and char=='i' and not (endswithany(before_line     .rstrip(),*(keywords-{'True','False'}))):
                                    #Ternary completion
                                    # if writing_namespace_breaks_syntax(before_line[:-1]):
                                        flag=True
                                        if char=='i':
                                            buffer.insert_text('i')
                                        if char=='f':
                                            if not before_line[:-1].strip():
                                                #We don't want to complete 'if | else' on an empty line where we want 'if |:'
                                                flag=False
                                        if flag:
                                            buffer.insert_text('f ')
                                            if not (starts_with_any(after_line.strip(),']','}') and 'for' in before_line):#This is an imperfect, sloppy check to see if we're in a list comprehension and we want 'x for x in y if z' instead of 'x for x in y if z else'
                                                 buffer.insert_text(' else')
                                                 buffer.cursor_left(len(' else'))
                                            return
                                if before_line.endswith('i') and char=='n':
                                    #Add space after writing 'in'
                                    if before_line.strip()!='i':#A blank line starting with 'in' generally is bad
                                        if re.fullmatch(r'^.*[a-zA-Z_0-9\)\}\]\'\"] +i',before_line):
                                            if not (before_line.endswith(' i') and endswithany(before_line[:-2],*(set(keywords)-{'True','False','not'}))):
                                                if writing_namespace_breaks_syntax(before_line[:-1]):
                                                    buffer.insert_text('n ')
                                                    return

                                if before_line.endswith('i') and char=='s':
                                    #Add space after writing 'is'
                                    if before_line.strip()!='i':#A blank line starting with 'in' generally is bad
                                        if re.fullmatch(r'^.*[a-zA-Z_0-9\)\}\]\'\"] +i',before_line):
                                            if not (before_line.endswith(' i') and endswithany(before_line[:-2],*(set(keywords)-{'True','False'}))):
                                                if writing_namespace_breaks_syntax(before_line[:-1]):
                                                    buffer.insert_text('s ')
                                                    return
                                # if char=='f':
                                #     if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,')','}',']') and not endswithany(before_line.rstrip(),' in','if'):
                                #         #Attempt Comprehension autocompletion
                                #         #[x |]  --->  [x for | in]
                                #         #[(a,b)|]  --->  [(a,b)for | in]
                                #         if re.fullmatch(r'^.*[a-zA-Z_\)\}\]\'\"] +',before_line):
                                #             if not endswithany(before_line.rstrip(),*(' '+x for x in keywords)):
                                #                 buffer.insert_text('for  in')
                                #                 buffer.cursor_left(len(' in'))
                                #                 return
                                if char in 'fi':
                                    if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,')','}',']') and not endswithany(before_line.rstrip(),' in','if'):
                                        #Attempt Comprehension autocompletion
                                        #[x |]  --->  [x for | in]
                                        #[(a,b)|]  --->  [(a,b)for | in]
                                        if re.fullmatch(r'^.*(([a-zA-Z_0-9] +)|([\)\}\]\'\"] *))',before_line):
                                            if not endswithany(before_line.rstrip(),*(' '+x for x in keywords)):
                                                if not re.fullmatch(r'.*for [^\[\(\{]+ in [^\[\(\{]+ ',before_line):
                                                    if char=='f':
                                                        if not before_line.endswith(' '):
                                                            buffer.insert_text(' ')#For the sake of aesthetics, [[x] for x in y] looks better than [[x]for x in y]
                                                        buffer.insert_text('for  in')
                                                        buffer.cursor_left(len(' in'))
                                                        return
                                                else:
                                                    #On press i or f: [x for x in y |] ---> [x for x in y if |]
                                                    buffer.insert_text('if ')
                                                    # buffer.cursor_left(len(' else'))
                                                    return
                                if char=='f':
                                    #f-->if
                                    if re.fullmatch(r'^.*[a-zA-Z_0-9\)\}\]\'\"] +',before_line):
                                        #x=x f|   --->   x=x if | else
                                        if not endswithany(before_line.strip(),*keywords):
                                            if not before_line.endswith(' for ')and not after_line.endswith(' in'):
                                                if not re.match(r'\w.*',after_line):
                                                    buffer.insert_text('if  else')
                                                    buffer.cursor_left(len(' else'))
                                                    return



                            if  not endswithany(before_line.rstrip(),*(keywords-{'True','False','and','or','not'})) and writing_namespace_breaks_syntax(before_line):
                                if not endswithany(before_line.rstrip(),*(keywords-{'not','True','False'})):
                                    if  not endswithany(before_line.rstrip(),*(keywords-{'True','False'})):
                                        if re.fullmatch(r'^.*[a-zA-Z_0-9\)\}\]\'\"] +',before_line):
                                            if char=='o':
                                                buffer.insert_text('or ')
                                                return
                                            if char=='a':
                                                buffer.insert_text('and ')
                                                return
                                # if not endswithany(before_line.rstrip(),*(keywords-{'and','or'})):
                                #     if char=='t':
                                #         buffer.insert_text('not ')
                                #         return
                                # TODO CORRECTION: 't' --> 'not ' should NOT be handled here, this should be handled as a space completion instead. I'll do that later...
                                # n_makes_in_and_s_makes_is=True#This is imperfect and got annoying
                                if n_makes_in_and_s_makes_is:#This completion is a real trouble-maker for edge cases...
                                    if char=='n' or char=='s':
                                        if before_line.strip() and not (before_line.endswith(' ') and endswithany(before_line[:-1],*(set(keywords)-{'not','True','False'}))):
                                            if re.fullmatch(r'.*[\]\}\)\'\"a-zA-Z0-9_] *',before_line):
                                                if not re.fullmatch(r'.*[^a-zA-Z0-9_](if|and|or|not|while|with|else|elif|is|yield) ',before_line):#prevent: return x if not negative  ——> return x if not in egative| else
                                                    if not re.fullmatch(r'[0-9]+[a-zA-Z_].*',before_line[::-1]):#Prevent: nuts2nuts  —>  nuts2 in uts
                                                        buffer.insert_text('in ' if char=='n' else 'is ')
                                                        return

                    if char=='m' and meta_pressed(clear=True):
                        # ⌥ + m ---> MORE
                        # ⌥ + m twice ---> MMORE
                        if before_line=='MORE':
                            buffer.cursor_left(4)
                            buffer.insert_text('M')
                            buffer.cursor_right(4)
                            return
                        if before_line=='':
                            buffer.insert_text('MORE')
                            return
                        if before_line=='MMORE':
                            buffer.cursor_left(4)
                            buffer.delete_before_cursor()
                            buffer.cursor_right(4)
                            return
                    if True:#not '"' in after_line and not "'" in after_line:
                        #Jump cursor to headers with special commands following the '\' key
                        #(on press d)
                        #def f():
                        #   return\|
                        #   --->
                        #|def f():
                        #   return
                        def jump_cursor_to_beginning_of_header(command:str='\\db',header:str='def '):
                            if before_line.endswith(command):
                                blines=before.splitlines()[:-1]
                                if any(x.lstrip().startswith(header)for x in blines):
                                    cline=lambda:buffer.document.current_line
                                    buffer.cursor_up()
                                    while not cline().lstrip().startswith(header):
                                        buffer.cursor_up()
                                        buffer.cursor_left(99999)
                                    buffer.cursor_right(99999)
                                    buffer.cursor_right(len(get_indent(cline())))
                                    return
                        # header_jump_commands={
                        #                  '\\db':'def ',
                        #                  '\\cl':'class ',
                        #                  '\\if':'if ',#go ...etc
                        #                  '\\wh':'while ',
                        #                  '\\wi':'with ',
                        #                  '\\fo':'for ',#go f
                        #                  '\\el':'el'}#go e
                        header_arg_commands={
                                             '\\re':'replace',
                                             '\\py':'python',
                                             '\\dtl':'delete to line',
                                             '\\go':'goto',
                                             '\\lo':'load',
                                             '\\sa':'save',
                                             '\\wr':'write',
                                             '\\ca':'cancel',
                                             '\\t3pa':'tmux_comment_paste',
                                             '\\3tpa':'tmux_comment_paste',
                                             '\\3an':'comment_ans',
                                             '\\/c':'source_code',
                                             '\\?c':'source_code',
                                             }
                        header_commands={
                                         '\\sim':'sort_imports',
                                         '\\bla':'black',
                                         '\\sg':'save_gist',
                                         '\\lg':'load_gist',
                                         '\\co':'copy',
                                         '\\pa':'paste',
                                         '\\3pa':'comment_paste',
                                         '\\vpa':'vim_paste',
                                         '\\vspa':'vim_string_paste',
                                         '\\vco':'vim_copy',
                                         '\\tpa':'tmux_paste',
                                         '\\tspa':'tmux_string_paste',
                                         '\\tco':'tmux_copy',
                                         '\\lpa':'local_paste',
                                         '\\lspa':'local_string_paste',
                                         '\\wpa':'web_paste',
                                         '\\wspa':'web_string_paste',
                                         '\\rpr':'repr',
                                         '\\rpa':'repr ans',
                                         '\\wco':'web_copy',
                                         '\\ed':'editor',
                                         '\\vi':'vim',
                                         '\\al':'align_lines',
                                         '\\ac':'align_char',
                                         '\\sw':'strip_whitespace',
                                         '\\sc':'strip_comments',
                                         '\\mla':'multi line arguments',
                                         '\\fo':'for',
                                         '\\fi':'import_from_swap',
                                         '\\de':'def',
                                         '\\wh':'while',
                                         '\\da':'delete all',
                                         '\\lss':'LSS',
                                         '\\lsr':'Relative LSS',
                                         '\\an':'ans',
                                         '\\san':'string ans',
                                         '\\tbp':'toggle_big_parenthesis',
                                         '\\spa':'string_paste',
                                         '\\d0l':'delete_empty_lines',
                                         '\\dtt':'delete_to_top',
                                         '\\dtb':'delete_to_bottom',
                                         '\\sl':'sort_lines',
                                         '\\rl':'reverse_lines',
                                         '\\ya':'yapf autoformat',
                                         '\\gg':'go to top',
                                         '\\GG':'go to bottom',
                                         '\\vO':'vim open up',
                                         '\\vo':'vim open down',
                                         '\\fn':'function_name',
                                         '\\tts':'tabs to spaces',
                                         '\\23p':'python_2_to_3',
                                         '\\db':'debug',
                                         '\\pu':'pudb',
                                         '\\wi':'workingindex',
                                         '\\en':'enumerate',
                                         }
                        # header_commands.update(header_jump_commands)
                        header_commands.update(header_arg_commands)

                        for command,header in header_commands.items():
                            key=command[-1]
                            chopped_command=command[:-1]
                            if before_line.endswith(chopped_command) and char==key:
                                buffer.delete_before_cursor(len(chopped_command))
                                # if command in header_jump_commands:
                                #     jump_cursor_to_beginning_of_header(chopped_command,header)
                                if command in header_arg_commands and '`' in before_line:
                                    if header=='replace':
                                        #DEMO: Type
                                        #`foo`bar\r
                                        #into the buffer (with a whole bunch of foo's which will be turned into bar's')
                                        if before_line.count('`')==2:#dumb assumption im makin
                                            arg1=before_line.split('`')[1]
                                            arg2=before_line.split('`')[2].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg1+'`'+arg2+'`'))
                                            text=buffer.document.text.replace(arg1,arg2)
                                            buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)
                                    if header=='cancel':
                                        #Cancel whatever command you've written and delete it. Beats having to delete it manually.
                                        if before_line.count('`')==2:#dumb assumption im makin
                                            arg1=before_line.split('`')[1]
                                            arg2=before_line.split('`')[2].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg1+'`'+arg2+'`'))
                                        if before_line.count('`')==1:#give a lambda that takes one argument
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg+'`'))
                                    if header=='python':
                                         #DEMO: Type        
                                         #`lambda x:x.replace('foo','bar')\p
                                         #into the buffer (with a whole bunch of foo's which will be turned into bar's')
                                        if before_line.count('`')==1:#give a lambda that takes one argument
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg+'`'))
                                            text=buffer.document.text
                                            try:
                                                modifier=eval(arg,r_iterm_comm.globa);text=modifier(text);buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)
                                            except BaseException as E:
                                                buffer.insert_text("\nERROR: "+str(E)+"\n(Undo to make me go away)\n")
                                    if header=='load':
                                        #Load a file into the buffer
                                        from rp import text_file_to_string, string_to_text_file
                                        if before_line.count('`')==1:#give a lambda that takes one argument
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg+'`'))
                                            text=buffer.document.text
                                            try:
                                                new_text=text_file_to_string(arg)
                                                buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)
                                            except BaseException as E:
                                                buffer.insert_text("\nERROR: "+str(E)+"\n(Undo to make me go away)\n")
                                    if header=='write':
                                        #Write a file from the buffer (without asking to overwrite)
                                        from rp import text_file_to_string, string_to_text_file
                                        if before_line.count('`')==1:#give a lambda that takes one argument
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg+'`'))
                                            text=buffer.document.text
                                            try:
                                                string_to_text_file(arg,text)
                                            except BaseException as E:
                                                buffer.insert_text("\nERROR: "+str(E)+"\n(Undo to make me go away)\n")
                                    if header=='save':
                                        #A safer alternative to write, which will create a backup file if we're overwriting it
                                        from rp import text_file_to_string  , \
                                                       string_to_text_file  , \
                                                       file_exists          , \
                                                       get_parent_directory , \
                                                       get_file_name        , \
                                                       path_join            , \
                                                       get_current_date
                                        if before_line.count('`')==1:#give a lambda that takes one argument
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            path=arg
                                            if file_exists(path):
                                                try:
                                                    file_name=get_file_name(path)
                                                    directory=get_parent_directory(path)
                                                    backup_path=path_join(directory,'.'+file_name+'.backup.'+str(get_current_date()).replace(' ','_')+'.py')
                                                    file_contents=text_file_to_string(path)
                                                    string_to_text_file(backup_path,file_contents)
                                                except BaseException as E:
                                                    buffer.insert_text('#Failed to backup file '+repr(path)+', aborting the save. (Undo to make me go away). Error: '+repr(E))
                                                    return
                                            buffer.delete_before_cursor(len(path+'`'))
                                            text=buffer.document.text
                                            try:
                                                string_to_text_file(path,text)
                                            except BaseException as E:
                                                buffer.insert_text("\nERROR: "+str(E)+"\n(Undo to make me go away)\n")
                                                
                                        header='aoisjdaosijdoiasjdaosijd' #Prevent string ans from triggering
                                        # else:
                                            # buffer.insert_text('\\sa')#For '\san' for string ans

                                    if header=='goto':
                                        if before_line.count('`')==1:
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg+'`'))
                                            text=buffer.document.text
                                            try:
                                                n=int(arg)
                                                go_to_line_number(n,buffer)
                                            except Exception as e:
                                                buffer.insert_text('\n#ERROR: '+str(e))
                                                pass
                                    if header=='delete to line':
                                        if before_line.count('`')==1:
                                            # buffer.insert_text('\n#we: ')
                                            arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(arg+'`'))
                                            text=buffer.document.text
                                            try:
                                                _i=current_line_index(buffer)+1
                                                _n=int(arg)
                                                if _n<_i:
                                                    go_to_line_number(_n,buffer)
                                                for _ in range(abs(_n-_i)+1):
                                                    delete_current_line(buffer)
                                            except Exception as e:
                                                buffer.insert_text('\n#ERROR: '+str(e))
                                                pass
                                    # if header=='delete':
                                    #     if before_line.count('`')==1:
                                    #         arg=before_line.split('`')[1].split('\\')[0]
                                    #         buffer.delete_before_cursor(len(arg+'`'))
                                    #         text=buffer.document.text
                                    #         try:
                                    #             _i=current_line_index(buffer)
                                    #             _n=int(arg)
                                    #             if n<i:
                                    #                 go_to_line_number(_n,buffer)
                                    #             for _ in range(abs(_n-_i)+1):
                                    #                 delete_current_line(buffer)
                                    #         except Exception as e:
                                    #             buffer.insert_text('\n#ERROR: '+str(e))
                                    #             pass
                                
                                if header=='load' and not '`' in before_line:
                                    from rp import text_file_to_string, string_to_text_file, input_select_file
                                    try:
                                        print(end='\033[999B\n\033[999D\n')#Move the cursor to the bottom left of the screenhttps://tldp.org/HOWTO/Bash-Prompt-HOWTO/x361.html
                                        arg=input_select_file(message='Please select a python file to load into the buffer')
                                        new_text=text_file_to_string(arg)
                                        buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)
                                    except BaseException as E:
                                        buffer.insert_text("\nERROR: "+str(E)+"\n(Undo to make me go away)\n")
                                    event.cli.renderer.clear()#Refresh the screen
                                    event.cli.renderer.clear()#Refresh the screen
                                    event.cli.renderer.clear()#Refresh the screen
                                    
                                if header=='LSS':
                                    #LSS refers to the command 'LSS' aka 'LS SEL' in rp's pseudo_terminal.
                                    try:
                                        import rp
                                        rp.clear_terminal_screen()
                                        buffer.insert_text(repr(rp.input_select_path()))
                                    except:pass
                                    event.cli.renderer.clear()#Refresh the screen
                                    
                                if header=='Relative LSS':
                                    #LSS refers to the command 'LSS' aka 'LS SEL' in rp's pseudo_terminal.
                                    try:
                                        import rp
                                        rp.clear_terminal_screen()
                                        buffer.insert_text(repr(rp.get_relative_path(rp.input_select_path())))
                                    except:pass
                                    event.cli.renderer.clear()#Refresh the screen
                                        
                                if header=='workingindex':
                                    buffer.insert_text('#'+str(buffer.working_index))

                                if header=='debug':
                                    toggle_top_line_text(buffer,"from rp import debug;debug()\n")
                                    # toggle_bottom_line_text(buffer,"pip_import('sys').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py
                                if header=='pudb':
                                    line="from rp import pip_import;pip_import('pudb').set_trace()"
                                    import rp
                                    if rp.currently_running_windows():
                                        line+='#WARNING: pudb crashes on windows; it\'s unix-only'
                                    line+='\n'
                                    toggle_top_line_text(buffer,line)
                                    # toggle_bottom_line_text(buffer,"pip_import('sys').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py
                                if header=='align_lines':
                                    #Insert the alignment char that cant normally be typed on a keyboard in this app
                                    text=buffer.document.text
                                    text=align_lines_to_char(text)
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='align_char':
                                    buffer.insert_text(align_char)
                                    buffer.cursor_left()
                                if header=='strip_whitespace':
                                    text=buffer.document.text
                                    text='\n'.join(line.rstrip() for line in text.split('\n'))
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='import_from_swap':
                                    before_line=buffer.document.current_line_before_cursor
                                    after_line=buffer.document.current_line_after_cursor
                                    current_line=buffer.document.current_line
                                    buffer.delete_before_cursor(len(before_line))
                                    buffer.delete(len(after_line))
                                    buffer.insert_text(swap_from_import(current_line))
                                if header=='enumerate':
                                    def uses_enumerate(line):
                                        ans=line
                                        ans=ans.split(' in ')
                                        ans=ans[1]
                                        ans=ans.strip()
                                        ans=ans.startswith('enumerate')
                                        return ans

                                    def transform_var(line):
                                        ans=line
                                        ans=ans.split(' in ')
                                        l=ans
                                        ans=ans[0]
                                        ans=ans.strip()
                                        ans=ans[len('for '):]
                                        oldvar=ans
                                        if not ans.isalnum():
                                            ans='('+ans+')'
                                        ans=','+ans
                                        var=ans
                                        return line.replace(oldvar,var,1)
                                    def enumeratify(line):
                                        ans=line.rstrip()
                                        ans=ans[:ans.find(' in ')+len(' in ')]+'enumerate('+ans[ans.find(' in ')+len(' in '):-1]+'):'
                                        return ans
                                    before_line=buffer.document.current_line_before_cursor
                                    after_line=buffer.document.current_line_after_cursor
                                    current_line=buffer.document.current_line
                                    buffer.delete_before_cursor(len(before_line))
                                    buffer.delete(len(after_line))
                                    buffer.insert_text(swap_from_import(current_line))
                                    leading_whitespace=current_line[:len(current_line)-len(current_line.lstrip())]
                                    buffer.cursor_right(9999)
                                    buffer.delete_before_cursor(len(current_line))
                                    new_line=transform_var(enumeratify(current_line))
                                    buffer.insert_text(leading_whitespace+new_line)
                                    buffer.cursor_left(9999)
                                    buffer.cursor_right(len(leading_whitespace+'for '))

                                if header=='toggle_big_parenthesis':
                                    if not '\n' in before+after:
                                        #If has a single line, add a new line to avoid a glitch where we get too many parenthesis
                                        text=buffer.document.text
                                        buffer.document=Document(buffer.document.text+'\n',min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                    commented_parenthesizer_automator.buffer_toggle_parenthesization(buffer)
                                if header=='delete_to_top':
                                    text=buffer.document.text
                                    lineno=document.text_before_cursor.count('\n')
                                    colno=document.cursor_position_col
                                    text=text.splitlines()[lineno:]
                                    text='\n'.join(text)
                                    buffer.document=Document(text,colno-len(r'\dt'),buffer.document.selection)
                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='delete_to_bottom':
                                    text=buffer.document.text
                                    lineno=document.text_before_cursor.count('\n')
                                    colno=document.cursor_position_col
                                    text=text.splitlines()[:lineno+1]
                                    text='\n'.join(text)
                                    buffer.document=Document(text,text.rfind('\n')+colno-len(r'\dt'),buffer.document.selection)
                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='delete_empty_lines':
                                    text=buffer.document.text
                                    text='\n'.join(line for line in text.split('\n') if line.strip())
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='sort_lines':
                                    text=buffer.document.text
                                    text='\n'.join(sorted(text.split('\n')))
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='reverse_lines':
                                    text=buffer.document.text
                                    text='\n'.join(reversed(text.split('\n')))
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='strip_comments':
                                    from rp import strip_python_comments
                                    text=buffer.document.text
                                    text=strip_python_comments(text)
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='repr':
                                    #A shortcut to `repr\py
                                    text=buffer.document.text
                                    buffer.document=Document(repr(text),min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='black':
                                    from rp import pip_import
                                    try:
                                        pip_import('black')
                                        import black
                                        text=buffer.document.text
                                        text=black.format_str(text,mode=black.Mode())
                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                    except BaseException as e:
                                        buffer.insert_text('#sort_imports: Error: '+str(e).replace('\n',' ; '))
                                if header=='sort_imports':
                                    from rp import pip_import
                                    try:
                                        pip_import('isort')
                                        import isort
                                        text=buffer.document.text
                                        text=isort.code(text)
                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                    except BaseException as e:
                                        buffer.insert_text('#sort_imports: Error: '+str(e).replace('\n',' ; '))
                                if header=='source_code':
                                    #Sets ans=rp.get_source_code(current buffer)
                                    indent=''
                                    if before_line.count('`')==1:
                                        commented_arg=before_line.split('`')[1].split('\\')[0]
                                        buffer.delete_before_cursor(len(commented_arg+'`'))
                                        before_line=buffer.document.current_line_before_cursor
                                        indent=' '*(len(before_line)-len(before_line.lstrip()))
                                        text=commented_arg
                                    else:
                                        text=buffer.document.text
                                        buffer.delete_before_cursor(99999999)
                                        buffer.delete(99999999)
                                    try:
                                        item=eval(text,r_iterm_comm.globa)
                                        from rp import get_source_code
                                        code=get_source_code(item)
                                        code=code.splitlines()
                                        code=code[::-1]
                                        code[:-1]=[indent+line for line in code[:-1]] 
                                        code=code[::-1]
                                        code='\n'.join(code)
                                        # buffer.document=Document(code,min(len(code),buffer.document.cursor_position),buffer.document.selection)
                                        buffer.insert_text(code)
                                    except BaseException as e:
                                        buffer.insert_text('#get_source_code: Error: '+str(e).replace('\n',' ; '))
                                if header=='save_gist':
                                    #Sets ans=str(current buffer)
                                    text=buffer.document.text
                                    text=repr(text)
                                    text='from rp import save_gist;ans=save_gist(%s)'%text
                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??
                                if header=='load_gist':
                                    from rp import load_gist
                                    text=buffer.document.text
                                    try:
                                        try:
                                            text=load_gist(text)
                                        except Exception:
                                            text='git.io/'+text
                                            text=load_gist(text)
                                    except Exception:
                                        text='#Failed to load gist at specified url'
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='repr ans':
                                    #Sets ans=str(current buffer)
                                    text=buffer.document.text
                                    text=repr(text)
                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??
                                if header=='tabs to spaces':
                                    text=buffer.document.text
                                    text=text.replace('\t','    ')
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='function_name':
                                    #Insert the current function's name
                                    func_names=get_all_function_names(buffer.document.text_before_cursor)
                                    buffer.insert_text(func_names[-1] if func_names else '')
                                if header=='python_2_to_3':
                                    text=buffer.document.text
                                    from rp import python_2_to_3
                                    text=python_2_to_3(text)
                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                if header=='while':
                                    text=buffer.document.text
                                    text='while True:\n'+'\n'.join(['    '+line for line in text.split('\n')])
                                    buffer.document=Document(text,10,buffer.document.selection)
                                if header=='for':
                                    text=buffer.document.text
                                    text='for  in :\n'+'\n'.join(['    '+line for line in text.split('\n')])
                                    buffer.document=Document(text,4,buffer.document.selection)
                                if header=='def':
                                    text=buffer.document.text
                                    text='def ():\n'+'\n'.join(['    '+line for line in text.split('\n')])
                                    buffer.document=Document(text,4,buffer.document.selection)
                                if header=='go to top':
                                    buffer.cursor_up(1000000)
                                if header=='go to bottom':
                                    buffer.cursor_down(1000000)
                                if header=='vim open down':
                                    buffer.delete_before_cursor()
                                    buffer.cursor_up()
                                    buffer.cursor_right(1000000)
                                    buffer.insert_text('\n'+get_indent(current_line))
                                if header=='vim open up':
                                    buffer.delete_before_cursor()
                                    buffer.cursor_left(1000000)
                                    buffer.insert_text('\n')
                                    buffer.cursor_up()
                                    buffer.insert_text(get_indent(current_line))
                                if header=='multi line arguments':
                                    #Meant to split a def(x,y,z,w,asd,as,das,d,asd,aoisdaiosdiasidasd,as,d,asd,a,sd,as,da,sd,as,da,sd,asd,): onto multiple lines to make it more readable. see split_def_arguments_into_multiple_lines's documentation for an example.
                                    before_line=before_line[:-3]#get rid of the \ml
                                    buffer.delete_before_cursor(len(before_line))
                                    buffer.delete(len(after_line))
                                    # print("\n\n\n"+before_line+after_line+'\n\n\n')
                                    new_def=split_def_arguments_into_multiple_lines(before_line+after_line)
                                    # print("THEN")
                                    # print("\n\n\n"+new_def+'\n\n\n')
                                    # print("END")
                                    # print(new_def)
                                    buffer.insert_text(new_def)
                                if header=='local_copy':
                                    import rp
                                    do_local_copy(buffer.document.text)
                                if header=='vim_copy':
                                    import rp
                                    do_vim_copy(buffer.document.text)
                                if header=='tmux_copy':
                                    import rp
                                    do_tmux_copy(buffer.document.text)
                                if header=='web_copy':
                                    import rp
                                    do_web_copy(buffer.document.text)
                                if header=='copy':
                                    import rp
                                    do_copy(buffer.document.text)
                                if header=='editor':
                                    text=buffer.document.text   
                                    try:
                                        from rp import pip_import
                                        editor=pip_import('editor')
                                        text=editor.edit(contents=text,use_tty=True,suffix='.py').decode()
                                        buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)
                                        event.cli.renderer.clear()#Refresh the screen
                                    except ImportError:
                                        buffer.insert_text("#ERROR: Cannot import 'editor'. Try pip install python-editor")
                                if header=='vim':
                                    edit_event_buffer_in_vim(event)
                                if header=='save' or header=='string ans':#header=='save' because of the conflict of \sa in the dict
                                    buffer.insert_text(repr(str(get_ans())))
                                if header=='ans':
                                    buffer.insert_text(str(get_ans()))

                                if header=='web_string_paste'   : do_web_paste(buffer,repr_mode=True)
                                if header=='tmux_string_paste'  : do_tmux_paste(buffer,repr_mode=True)
                                if header=='vim_string_paste'  : do_vim_paste(buffer,repr_mode=True)
                                if header=='local_string_paste' : do_local_paste(buffer,repr_mode=True)

                                if header=='web_paste'          : do_web_paste(buffer,repr_mode=False)
                                if header=='tmux_paste'         : do_tmux_paste(buffer,repr_mode=False)
                                if header=='vim_paste'         : do_vim_paste(buffer,repr_mode=False)
                                if header=='local_paste'        : do_local_paste(buffer,repr_mode=False)

                                if 'comment_paste' in header or 'comment_ans'==header:
                                    commented_arg=''
                                    if before_line.count('`')==1:
                                            commented_arg=before_line.split('`')[1].split('\\')[0]
                                            buffer.delete_before_cursor(len(commented_arg+'`'))
                                    
                                    if header=='tmux_comment_paste' : do_tmux_paste(buffer,repr_mode=False,commented=commented_arg)
                                    if header=='comment_paste'      : do_paste(buffer,commented=commented_arg)
                                    if header=='comment_ans'      : 

                                        ans=str(get_ans())
                                        ans=commented_string(buffer,ans,spaces=commented_arg)
                                        buffer.insert_text(ans)

                                if header=='paste'              : do_paste(buffer)
                                if header=='string_paste'       : do_string_paste(buffer)

                                if header=='delete all':
                                    buffer.document=Document('',0,buffer.document.selection)
                                if header=='yapf autoformat':
                                    try:
                                        from rp import pip_import
                                        yapf=pip_import('yapf')
                                    except:
                                        fansi_print("ERROR: To use yapf's autoformat, you must first install yapf. 'pip install yapf' is an option. See https://github.com/google/yapf",'red','bold')
                                        return
                                    try:
                                        # buffer.delete_before_cursor(len('\\ya'))
                                        buffer.document=Document(yapf.yapf_api.FormatCode(buffer.document.text)[0],buffer.document.cursor_position,buffer.document.selection)
                                    except Exception as e:
                                        from rp import fansi_print 
                                        buffer.insert_text("\n#ERROR Using yapf autoformatter: "+str(e))
                                return

                    if char in {'d','c'} and not before_line.strip():
                        above=line_above(buffer)#returns None if there are no above lines
                        if above is not None and get_indent(above)==get_indent(before_line):
                            if above.strip().startswith('@'):#we have a decorator on our hands...
                                #when we're below a decorator and we press d or c, the only valid syntax is to create a 'def' or a 'class' keyword 
                                if char=='d':
                                    if in_class_func_decl(buffer):
                                        #class c:
                                        #   @decorator
                                        #   |
                                        #
                                        #   --->
                                        # 
                                        #class c:
                                        #   @decorator
                                        #   def |(self):
                                        buffer.insert_text('def (self):')
                                        buffer.cursor_left(7)
                                        return
                                    else:
                                        #@decorator
                                        #|
                                        #
                                        #--->
                                        # 
                                        #@decorator
                                        #def |():
                                        buffer.insert_text('def ():')
                                        buffer.cursor_left(3)
                                        return
                                if char=='c':
                                        #@decorator
                                        #|
                                        #
                                        #--->
                                        # 
                                        #@decorator
                                        #class |:
                                        buffer.insert_text('class :')
                                        buffer.cursor_left(1)
                                        return
                    if char=='s':
                            # cl=find_level("class ")#class level
                            # dl=find_level("def ")#def level
                            # dh=find_header("def ")#def header
                            # if cl is not None and dl is not None and dl>cl:
                            #     if '(self' in dh:
                            if meta_pressed(clear=True):
                                buffer.insert_text('self')
                                return 
                    # if char=='e':
                            # buffer.insert_text('trans')
                            # if meta_pressed(clear=False):
                                # buffer.accept_action.run_in_terminal(render_cli_done=True)
                                # buffer.accept_action.validate_and_handle(event.cli, buffer)
                                # buffer.insert_text('elf')
                                # buffer.insert_text('self')
                                # return 
                    if regex_match(before_line,r'\s*for _ in range\(\d+'):
                        #(let's say we press Y)
                        #for _ in range(123|):  --->  for _ in range(Y|):
                        buffer.delete_before_cursor(len(before_line.lstrip())-len('for _ in range('))
                        buffer.insert_text(char)
                        return
                    buffer.insert_text(char) 
            go(char)
            meta_pressed(clear=True)#Reset: we don't want to keep the esc key pressed (this should go after every keystroke. Period. But it doesnt yet cause ima be a lazy...)
    for char in '1234567890':#Digit inputs
        def go(c):
            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)
            def _(event):
                buffer=event.cli.current_buffer
                if handle_character(buffer,c,event):return
                if self_dot_var_equals_var(buffer,c) or setting_index(buffer,c):
                    return
                document=buffer.document
                current_line=document.current_line
                before_line=document.current_line_before_cursor
                after_line=document.current_line_after_cursor
                before=document.text_before_cursor
                after= document.text_after_cursor
                above_line=line_above(buffer)
                single_line=above_line is None
                #
                if c=='3':
                    if before_line.endswith(':') and not after_line and starts_with_any(before_line.lstrip(),'def ','for ','if ','while ','except ','try:'):
                        #Adding comments to the end of function declarations...what meaningful function would start with '3'?
                        buffer.insert_text('#')
                        return
                    if not single_line and not before_line.strip():
                        #Why reach for the shift key?
                        #What meaningful text could you write on a line starting with 3....on multi lines....
                        buffer.insert_text('#')
                        return
                    if meta_pressed():
                        buffer.cursor_right(123123)
                        buffer.insert_text('#')
                        return
                    if endswithany(before_line,')',']') and after_line=='':
                        #If inserting '3' would be break syntax and '#' would not, insert '#'
                        #This saves a shift-key stroke
                        buffer.insert_text('#')
                        return
                if before == 'from ' and after == ' import':
                    #Lets us do 'f 5' to get a for loop in the first line, instead of trying to import something
                    #from | import    --->   for _ in range(4|):
                    buffer.delete_before_cursor(999)
                    buffer.delete(999)
                    buffer.insert_text('for _ in range('+c+'):')
                    buffer.cursor_left(2)
                    return
                if regex_match(before_line,r'\s*for\s+\w+\s+in\s+') and after_line.strip()==':':
                    #(let's say c=3...)
                    #for x in |: --> for x in range(3|):
                    buffer.insert_text('range('+c+')')
                    buffer.cursor_left()
                    return
                if before_line.endswith('for ') and endswithany(after_line,' in]',' in)',' in}'):
                    #[x for | in]  --->  [x for _ in range(9|)]
                    buffer.insert_text('_')
                    buffer.cursor_right(3)
                    buffer.insert_text(' range()')
                    buffer.cursor_left()
                    buffer.insert_text(c)
                    return
                if before_line.endswith(' in ') and endswithany(after_line,']',')','}'):
                    #[x for y in |]  --->  [x for y in range(9)]
                    buffer.insert_text('range()')
                    buffer.cursor_left()
                    buffer.insert_text(c)
                    return
                if before_line.lstrip()=='for ' and after_line.rstrip()==' in :':
                    #(let's say c=3...)
                    #for | in : --> for _ in range(3|):
                    buffer.insert_text('_')
                    buffer.cursor_right(len(' in '))
                    buffer.insert_text('range('+c+')')
                    buffer.cursor_left()
                    return
                if c=='8' and before_line.lstrip().startswith('def ') and after_line.endswith('):') and before_line.count('(')==1 and endswithany(before_line,'(',',','*'):
                    #Why use the shift key to make kwargs?
                    #(on pressing 8)
                    #def f(|)   --->   def f(*|)
                    #def f(a,b,*|)   --->   def f(a,b,**|)
                    buffer.insert_text('*')
                    return
                if before_line.lstrip()=='def 'and after_line in ['():',':']:
                    #8 is the key that makes the * chracter. We can't start function names with numbers, so let's make this the default...
                    #On press 8:
                    #def |:   --->   def _(*args,**kwargs):|
                    buffer.delete(len(before_line))
                    buffer.insert_text('_(*args,**kwargs):')
                    return
                if before=='ans.' and not after:
                    if ans_dot_completion_string:
                        # Let's say c=3...
                        # (middle 'ans.|' is current state)
                        #   ans(|)   -->   ans.|   -->   ans(.3|)
                        #                   AND
                        #   ans[|]   -->   ans.|   -->   ans[.3|]
                        buffer.delete_before_cursor()
                        buffer.insert_text(ans_dot_completion_string)
                        buffer.cursor_left()
                        buffer.insert_text('.')
                    else:
                        # Let's say c=3...
                        #   ans.|   -->  .3|
                        # This lets use the 'ans.' completion from just typing '.', without sacrificing the ability to type '.4'
                        buffer.delete_before_cursor(len(before))
                        buffer.insert_text('.')
                buffer.insert_text(c)
        go(char)


    # @handle('Ω')
    # def _(event):
    #     import rp.prompt_toolkit.key_binding.bindings.vi as vi 
    #     try:
    #         vi.ryan_go_to_vim_navigation_mode(event)
    #     except:pass
    #
    @handle(Keys.ShiftLeft)
    def _(event):
        """
        Select from the history.
        """
        buffer=event.cli.current_buffer
        before_line=buffer.document.current_line_before_cursor
        if before_line.lstrip():
            #····blah|   --->   ····|blah
            buffer.cursor_left(len(before_line.lstrip()))
        elif before_line:
            #····|blah   --->   |····blah
            buffer.cursor_left(1000000)
        elif buffer.cursor_position:
            after=buffer.document.text_after_cursor
            if after.count('\n'):
                buffer.cursor_up()
                move_line_down(buffer)
                buffer.cursor_up()
            else:
                move_line_down(buffer)
            buffer.cursor_left(1000000)

#     @handle(Keys.ControlBackslash)
#     def _(event):
#         buffer=event.cli.current_buffer
#         pseudo_terminal(merge_dicts(r_iterm_comm.globa,{ans:buffer.document.text}))

    @handle(Keys.ShiftRight)
    def _(event):
        buffer=event.cli.current_buffer
        after_line=buffer.document.current_line_after_cursor
        before_line=buffer.document.current_line_before_cursor    
        if after_line and before_line.strip() or after_line and after_line==after_line.lstrip():
            #····|blah   --->   ····blah|
            buffer.cursor_right(1000000)
        elif after_line:
            #|····blah   --->   ····|blah
            buffer.cursor_right(len(after_line)-len(after_line.lstrip()))
        else:
            after=buffer.document.text_after_cursor
            if after.count('\n')==0:
                return#We're on the bottom
            elif after.count('\n')==1:
                buffer.cursor_down()
                move_line_down(buffer)
                buffer.cursor_down()
            else:
                move_line_down(buffer)
    def move_line_down(buffer,up=False):
        document=buffer.document
        current_line=document.current_line
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        buffer.cursor_left(1000000)
        if not buffer.cursor_position:
            buffer.delete(2)
        buffer.cursor_right(1000000)
        # print("Ima doing/ it!")
        delete_current_line(buffer)
        buffer.cursor_right(10000)
        buffer.cursor_down(1)
        buffer.cursor_left(10000)
        #region Adaptive indentation: Currently not implemented. Sticking to simplicity.
        if False:
            buffer.insert_line_above(copy_margin=not up)
            buffer.insert_text(current_line.lstrip() if not up else current_line)
            text=buffer.document.text
            lstrip=text.lstrip()
        else:
            buffer.insert_line_above(copy_margin=False)
            buffer.insert_text(current_line)
            lstrip=text=buffer.document.text

        # buffer.cursor_down(1)
        # buffer.cursor_right(1000000)
        buffer.document=Document(lstrip,buffer.document.cursor_position+(len(lstrip)-len(text)),buffer.document.selection)

    #These keys don't respond on the mac terminal
    # @handle(Keys.ShiftUp)
    # def _(event):
    #     print(324982308974078923)
    #     event.cli.current_buffer.cursor_right(1000000)
    #
    # @handle(Keys.ShiftDown)
    # def _(event):
    #     print(324982308974078923)
    #     buffer=event.cli.current_buffer
    #     document=buffer.document
    #     current_line=document.current_line

    @handle(Keys.ControlD)# Duplicate current line Only applies when there's text, else it will trigger the exit
    def _(event):
        buffer=event.cli.current_buffer
        document=buffer.document
        buffer.cursor_right(10000)
        current_line=document.current_line
        # buffer.insert_line_below()
        buffer.insert_text("\n"+current_line)
    def current_line_index(buffer):
        #returns current line number, starting from 0
        return buffer.document.text_before_cursor.count('\n')
    def go_to_line_number(n,buffer):
        i=current_line_index(buffer)
        delta=i-n
        if delta<0:
            buffer.cursor_down(abs(delta))
        else:
            buffer.cursor_up(abs(delta))
        buffer.cursor_up()
    def delete_current_line(buffer):
        buffer.delete_line_at_cursor()
        # document=buffer.document
        # current_line=document.current_line
        # buffer.cursor_left(10000)
        # firstline=buffer.cursor_position==0
        # buffer.delete(len(current_line))
        # buffer.delete_before_cursor()
        # if firstline:
        #     buffer.delete()
        # else:
        #     buffer.cursor_down()

    #region Bracket Match Writers
    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar
    can_take_no_args=False# Doesn't practically matter right now if function_comma_flag is false


    @handle(Keys.ControlDelete)# Delete current line
    def _(event):
        buffer=event.cli.current_buffer
        delete_current_line(buffer)

    #region Bracket Match Writers
    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar
    can_take_no_args=False# Doesn't practically matter right now if function_comma_flag is false

    @handle('.',filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):# period '.' event handler function thingy
        buffer=event.cli.current_buffer
        if handle_character(buffer,'.',event):return
        if self_dot_var_equals_var(buffer,'.'):
            #self.foo|=foo   --->   self.foo.|=self.foo.
            return
        document=buffer.document
        before=document.text_before_cursor
        after= document.text_after_cursor
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor



        # if before_line.endswith('=') and not before_line.endswith('=='):
            #Moved this functionality elsewhere to fix the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key
            #self=|   --->   self.|=   (and then type foo to get self.foo=foo)
            # buffer.cursor_left()
            # buffer.insert_text('.')
            # return
        if not before and not after:
            buffer.insert_text('ans.')
            return
        import rp.r_iterm_comm
        var=rp.r_iterm_comm.last_assignable_comm
        # if before.endswith('=') and before[:-1]==var:
            #THIS COMLPETION IS COMMENTED OUT EVEN THOUGH IT WORKS. IT GOT ANNOYING FOR TETING THE =.. OPERATOR, WHICH I THINK MIGHT BE MORE IMPORTANT FOR DEMOING RPTERM
            #var=|  -->  var.|
            #You can use a sequence like:
            #  (What you type)   (What rp types)
            #   i numpy np          import numpy as np
            #   =.array?            np.array?
            # buffer.delete_before_cursor()
        if before_line.endswith("''") and not before_line.endswith("'''") and after_line.startswith("''") and not after_line.startswith("'''") or\
           before_line.endswith('""') and not before_line.endswith('"""') and after_line.startswith('""') and not after_line.startswith('"""'):
           # “''.['“   —>  ''.join([''])
            buffer.insert_text('.join()')
            buffer.delete(2)
            buffer.cursor_left()
            return
        if before_line.endswith("''.join(") and after_line.startswith(')'):
            # “''..[“        —>     ''.join(map(str,[]))
            # “''.[''“       —>     ''.join([''])
            buffer.insert_text('map(str,)')
            buffer.cursor_left()
            return
        if before+after in {'ans[]','ans()'} and after in {']',')'}:
            #ans[|]  -->  ans.|
            #       AND
            #ans(|)  -->  ans.|
            #
            #For space-completing 'ans' then wanting to use a '.', but can't 
            #
            #Edge case: when we want to write ans(.25) where ans is a float-function
            #   This is handled like so:
            #       ans(|)  -->  ans.|  -->  ans(.25)  
            #   Basically, the parenthesis are put back because the character following the '.' is a digit
            #   (This is handled in the digit handler, search for "ans_dot_completion_string")
            buffer.delete()
            buffer.delete_before_cursor()
            global ans_dot_completion_string
            ans_dot_completion_string=before[-1]+after[0]# is either () or []
        buffer.insert_text('.')


    @handle(Keys.Escape,filter=~vi_mode_enabled)#microcompletions_enabled)
    def _(event):
        _meta_pressed.append(True)#This is meant to be flipped to false immediately after anything reads it, with meta_pressed(). We're using a list to easily keep track of this after this method is @'d outta this file somewhere else idk where

    @handle(' ',filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):# Spacebar event handle spacebar
        buffer=event.cli.current_buffer
        if handle_character(buffer,' ',event):return
        single_line = line_above(buffer) is None
        if meta_pressed():#No shenanagins -- just give me a space.
            buffer.insert_text(' ')
            return
        nonlocal function_comma_flag# ,can_take_no_args
        # from rp import mini_terminal
        # exec(mini_terminal)
        document=buffer.document
        before=document.text_before_cursor
        after= document.text_after_cursor

        if document.text=='':# What else would we possibly want the spacebar for on an empty input? Spacebar invokes functions, and the default variable is ans.
            import rp.r_iterm_comm as ric
            if callable(ric.ans):
                buffer.insert_text('ans()')
                buffer.cursor_left()
                function_comma_flag=True
            elif hasattr(ric.ans,'__getitem__'):#if we can do ans[0], ans[1] etc
                buffer.insert_text('ans[]')#we cant call it...might want to iterate through it though!
                buffer.cursor_left()
                function_comma_flag=True
            else:
                buffer.insert_text('ans')#Bleh it's boring
            return


        if before.startswith('!'):# Don't do anything special
            buffer.insert_text(' ')
            return
        before_line=before.split('\n')[-1]# all on same line, but before cursor
        after_line=after.split('\n')[0]# ditto but after cursor
        if before_line.endswith(' in len') and starts_with_any(after_line,*'}])'):
                #[x for x in len|]  --->  [x for x in range(len(|))]
                buffer.delete_before_cursor(3)
                buffer.insert_text('range(len())')
                buffer.cursor_left(2)
                return
        if before_line.lstrip().startswith('class ') and after_line.startswith(':'):
            #class c|:   --->   class c(|):
            buffer.insert_text('()')
            buffer.cursor_left()
            return
        if before_line.lstrip().startswith('class ') and after_line.startswith('):'):
            if before_line.endswith(','):
                #class c(x,|):   --->   class c(x):|
                buffer.delete_before_cursor()
                buffer.cursor_right(2)
                return
            if before_line.endswith('('):
                #class c(|):   --->   class c:|
                buffer.delete_before_cursor()
                buffer.delete()
                buffer.cursor_right()
                return
        if before_line.lstrip().startswith('def '): 
            if before_line.endswith('def __') and after_line.startswith('__(self):'):
                #class x:
                #   def __|__(self):
                # 
                #   --->
                # 
                #class x:
                #   def __init__(self,|):
                buffer.insert_text('init')
                buffer.cursor_right(7)
                buffer.insert_text(',')
                return
            if before_line.strip()=='def' and after_line.startswith('(self):'):
                #class x:
                #   def |(self):
                # 
                #   --->
                # 
                #class x:
                #   def __|__(self):
                buffer.insert_text('____')
                buffer.cursor_left(2)
                return
            if after_line.startswith('__(self):'):
                #class x:
                #   def __eq|__(self):
                # 
                #   --->
                # 
                #class x:
                #   def __eq__(self|):
                if before_line.endswith('__'):
                    #autocomplete might have messed things up, this is a sloppy hack to fix that...
                    #def __eq__|__(self):   --->   #def __eq__(self|): 
                    buffer.delete_before_cursor(2)
                buffer.cursor_right(7)
                return
            if after_line.startswith('(self):'):
                #def f|(self):   --->   def f(self,|):
                buffer.cursor_right(5)
                buffer.insert_text(',')
                return
            if before_line.endswith(':') and not after_line.strip():
                #def f(x):|   --->   def f(x):return |
                buffer.insert_text('return ')
                return
            if before_line.strip()=='def __' and after_line.startswith('__(self):'):
                #class x:
                #   def __|__(self):
                # 
                #   --->
                # 
                #class x:
                #   def __init__(self|):
                buffer.insert_text('init')
                buffer.cursor_right(7)
                return
            if before_line.strip()=='def' and after_line.startswith('():'):
                def on_first_line():
                    return '\n' not in (before+after)
                function_title='ans' if on_first_line() else '_'
                #def |():   --->   def _(|):   (sometimes, when using decorators, you want an anonymous function)
                #def |():   --->   def ans(|): (if we're defining a function on the first line, perhaps we want to use it as our answer? I haven't actually used this yet; it's just an idea, I'll see how much I like it...)
                buffer.insert_text(function_title)
                buffer.cursor_right(1)
                return
        if before_line.strip()=='def' and not after_line.strip().endswith(':'):
            buffer.insert_text(' :')
            buffer.cursor_left()
            return
        if before_line.strip().startswith('def ') and endswithany(before_line.strip(),',','(') and after_line.strip()=='):':
            if before_line.endswith(','):
                buffer.delete_before_cursor()
            buffer.cursor_right(2)#If we want a one-line function
            return
        if self_dot_var_equals_var(buffer):
            #self.|foo=foo   --->   self.foo=foo|
            buffer.cursor_right(999999)
        from rp import is_namespaceable,space_split
        if before_line.strip().startswith('def ') and len(space_split(before_line.strip()))==2:
            if after_line.strip()==':' and is_namespaceable(before_line.split(' ')[-1]):
                buffer.insert_text('()')
                buffer.cursor_left()
                return
        if after_line=='):' and before_line.endswith(','):
            buffer.delete_before_cursor()
            if starts_with_any(before_line.strip(),*'if while'.split()):
                #if f(x,|):  --->  if f(x) |:
                buffer.cursor_right(1)
                buffer.insert_text(' ')#Lets us trigger things like a--->and
            else:
                #for x in range(5,|):   --->   for x in range(5):|
                buffer.cursor_right(2)
            return
        if before_line.endswith(' imoprt') or before_line.startswith("imoprt"):# This is a really common typo for me
            buffer.delete_before_cursor(6)
            buffer.insert_text('import ')
            return
        from rp import regex_match
        if regex_match(before_line.lstrip(),r'for\s+\w+\s+in\s+len'):
                #(Also implemented upon pressing '(')
                #for x in len|   -->  for x in range(len(|))
                buffer.delete_before_cursor(3)
                buffer.insert_text('range(len())')
                buffer.cursor_left(2)
                return
        if before_line.lstrip()=='if ' and after_line.rstrip()==':':
            #if |:   --->   import |
            buffer.delete_before_cursor(3)
            buffer.insert_text('import ')
            buffer.delete()
            return
        if before_line.lstrip()=='import ' and not after_line.rstrip():
            #import |   --->   if |:
            buffer.delete_before_cursor(len('import '))
            buffer.insert_text('if :')
            buffer.cursor_left()
            return
        # if before_line.lstrip()=='for ' and after_line==' in :':
        #     #"for | in :"  --->  "for _ in |:"
        #     buffer.insert_text('ans')
        #     return
        keywords={'async','await','with', 'nonlocal', 'while', 'None', 'global', 'as', 'is', 'and', 'else', 'yield', 'raise', 'del', 'break', 'in', 'not', 'False', 'assert', 'try', 'def', 'return', 'if', 'finally', 'lambda', 'for', 'from', 'True', 'pass', 'continue', 'elif', 'except', 'class', 'or', 'import'}

        if regex_match(before,r'\s*for\s+\w+\s+in\s+') and after.strip()==':':
            #"for x in |:"  --->  "for x in ans:"
            #(better alternative than "for x in |:" ---> "for x in:|", which is in the next block...)
            buffer.insert_text('ans')
            return
        elif starts_with_any(before_line.lstrip(),'if ','for ','while ') and before_line.endswith(' ') and after_line.rstrip()==':':# This is a really common typo for me
            #if x|:   --->   if x:|
            buffer.delete_before_cursor(1)
            buffer.cursor_right(2)
            return
        from rp import space_split,is_namespaceable
        import rp.r_iterm_comm as r_iterm_comm
        split=space_split(before_line)
        from rp import printed
        from_or_import_on_beginning_of_line=before_line.lstrip().startswith("import ") or before_line.lstrip().startswith("from ")
        def is_callable_token(token_name):
            try:
                return callable(eval(token_name,r_iterm_comm.globa))
            except:
                return False#be on the safe side with space-function completions
        try:
            function_comma_flag=function_comma_flag and( after_line.startswith(")") or after_line.startswith("'") or after_line.startswith('"') or after_line.startswith(']') or after_line.startswith(']') )
            token_of_interest,name_of_interest,found_token_of_interest=token_name_found_of_interest(before_line)
            from rp import regex_match
            def is_autocompletable_prefix(big,suffixes=[''],allow_single_liner=True,use_name_of_interest=False):
                #leave suffixes [] or None to allow any suffix
                if not allow_single_liner:
                    if '\n' not in before+after:
                        return False
                if use_name_of_interest:
                    name=name_of_interest
                else:
                    name=before_line.strip()
                return big.strip() != name and big.startswith(name) and before_line.strip() and (not suffixes or after_line in suffixes)#Shouldn't trigger when r is a function, because of where this is in the elif chain
            def autocomplete_prefix(big,left=1,remove_suffix=False):
                if remove_suffix:#used in 'except|:' --> 'except | as :', which is also 'except|' --> 'except | as :'
                    buffer.cursor_right(len(after_line))
                    buffer.delete_before_cursor(len(after_line))
                buffer.insert_text(big[len(name_of_interest):])
                buffer.cursor_left(left)
                try_to_autounindent(buffer)

            def try_autocompleting_functions(N,not_just_functions=False):
                from rp import ring_terminal_bell
                # if not_just_functions:
                    # ring_terminal_bell
                #TODO: right now not_just_functions doesn't do anything, it's supposed to let you space complete functions while importing
                nonlocal before_line,after_line,before,after

                #go through the top N current autocompletion results, and if one of them is callable, call it.
                # if before.count(' ')+before.count('\n')>1:
                    # return False #Don't autocomplete like this unless we are doing a one-liner
                bs=before_line.lstrip()#Before Strip  (bs)
                if not not_just_functions:
                    if not '\n' in before.strip() and before.strip().isupper() or beginswithany(bs,'import ','from ','def ') or 'lambda' in bs:#Basically, any place we're allowed to declare new variable names, we shouldn't be autocompleting them. lambda is bit tricky so I'm just sayig 'no space function completion on lines that contain lambda'.
                        return False#We might be typing something like 'UNDO ALL', in which case we do NOT want the 'UNDO' to be autocompleted
                import rp.r_iterm_comm as ric
                for candidate in ric.current_candidates:#Don't autocomplete if our current word to complete allready exists. For example, don't complete 'in' into 'inverse', etc.
                    try:
                        if hasattr(candidate,'text') and candidate.text==name_of_interest or candidate==name_of_interest:
                            return False
                    except:pass
                # ring_terminal_bell()
                # print(ric.current_candidates)
                if not_just_functions:
                    if not ric.current_candidates or  '.' in before_line:
                        return False#Problem avoided: Used to be 'import scipy.stats' -/-> 'import stats as |s'
                    buffer.delete_before_cursor(len(name_of_interest))#erase the current line
                    #space completions: 
                    #import num|   --->   import numpy as |
                    #(etc)
                    space_completion=ric.current_candidates[0]
                    if before_line.endswith(space_completion):
                        return False#Problem avoided: Used to be 'import cv2|' -/-> 'import cv2cv2 as |s'
                    #region Erase before and after so we don't do stupid things: Example, on autocompleting 'print', we want:
                    #   'pr|i'  --->  'print|'
                    #       and NOT
                    #   'pr|i'  --->  'prprint|i'
                    if is_namespaceable(space_completion):
                        #Allready taken care of in above line commented "erase the current line"
                        # while before_line and before_line[-1] in space_completion:
                        #     buffer.delete_before_cursor()
                        #     before_line=before_line[:-1]
                        #     before     =before     [:-1]
                        while after_line  and  after_line[ 0] in space_completion:
                            buffer.delete()
                            after_line =after_line [1: ]
                            after      =after      [1: ]
                    #endregion
                    buffer.insert_text(space_completion)
                    return True 
                for x in ric.current_candidates[:N]:
                    if is_callable_token(x) or not_just_functions and not (after_line.strip()=='():' and before_line.rstrip().startswith('def ')):
                        # if re.fullmatch(r'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]',before_line):
                            buffer.delete_before_cursor(len(name_of_interest))#erase the current line
                            buffer.insert_text(x+('' if  not_just_functions else '()'))
                            buffer.cursor_left()
                            nonlocal function_comma_flag
                            function_comma_flag=True
                            return True
            if before_line.lstrip().startswith('def ') and before_line.endswith("=lambda")and after_line.startswith(')'):#When passing a lambda as an argument in a function definition default value (a nichey case, but important nevertheless), add a space so the rest of the program knows its a lambda (which it uses spaces to see)
                buffer.cursor_left(6)
                buffer.insert_text(' ')
                buffer.cursor_right(6)

            if not from_or_import_on_beginning_of_line \
                and not before_line.endswith(" ") \
                and callable(token_of_interest)  \
                and not (after_line.strip()=='():' and before_line.rstrip().startswith('def '))\
                and not re.fullmatch(r'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]+',before_line)\
                and not re.fullmatch(r' *def [a-zA-Z0-9_]+\( *[a-zA-Z0-9_]+( *\, *[a-zA-Z0-9_]+ *)*',before_line)\
            :
                function_comma_flag=True
                import inspect
                #space-function implementation HERE
                #ON SPACE
                # callable_function|   --->   callable_function(|)
                #This is a big deal. I use this ALL THE TIME.

                # try:
                #     can_take_no_args=len(inspect.getfullargspec(token_of_interest).args)==0
                # except:# Probably a builtin function
                #     can_take_no_args=0 or token_of_interest is print
                if before_line.count('=')==1 and after_line=='('+before_line.split('=')[0].strip()+')':
                    #We came from using the )= operator. We want `matrix)=np.asarray float` --->  `matrix=np.asarray(matrix,float)` and not `matrix=np.asarray(float)(matrix)` (which would happen without this block)
                    buffer.cursor_right(99999)
                    buffer.cursor_left()
                    buffer.insert_text(',')
                else:
                    buffer.insert_text('()')
                    buffer.cursor_left(count=1)
            # region Brackets....they work but conceptually they're annoying.
            # elif not from_or_import_on_beginning_of_line and not before_line.endswith(" ") and hasattr(token_of_interest,'__getitem__'):
            #     buffer.insert_text('[]')
            #     buffer.cursor_left(count=1)
            #endregion

            elif regex_match(before_line.lstrip(),r'(from .*)|(import \w*)') and try_autocompleting_functions(N=1,not_just_functions=True):
                if(before_line.lstrip().startswith('from ')):
                    buffer.cursor_right(len(' import'))
                    buffer.insert_text(' ')
                elif(before_line.lstrip().startswith('import ')):
                    buffer.insert_text(' as ')#Without this, space would be redundant with respect to tab
            elif regex_match(before_line.lstrip(),r'from \w* import '):
                #'from rp import |'  -->  'from rp import *'
                buffer.insert_text('*')
            elif regex_match(before_line.lstrip(),r'from \w* import \*'):
                #'from rp import *|'  -->  'from rp import '
                buffer.delete_before_cursor()

            elif before_line.lstrip().startswith('with ') and after_line.startswith(':') and not before_line.endswith(' as '):
                buffer.insert_text(' as ')

            elif endswithany(before_line,' in len',' in le',' in l') and starts_with_any(after_line,':',']','}',')'):
                #Doesn't work if e is allready callable.
                #[x for x in l|]   --->   [x for x in range(len(|))]
                #for x in l|:      --->   for x in range(len(|)):
                buffer.delete_before_cursor(1 if before_line.endswith('l') else 2 if before_line.endswith('le') else 3)
                buffer.insert_text('range(len())')
                buffer.cursor_left(2)
                return
            elif name_of_interest in {'l','la','lam','lamb','lambd','lambda'} \
                and not 'import 'in before_line \
                and not before_line.lstrip() in {'for '+name_of_interest,'with '+name_of_interest} \
                and not re.fullmatch(r'( *def .*)|(.*[^a-zA-Z0-9_]lambda [^\:]*)|(.*[^a-zA-Z0-9_](for|in|as) (l|la|lam|lamb|lambd|lambda))',before_line) \
                :
                #Make a lambda from l
                #Shouldn't trigger when l is a function, because of where this is in the elif chain
                noil=len(name_of_interest)#noil stands for ((name of interest) length)
                if before_line.strip()!=name_of_interest:#don't do this at the beginning of an empty line
                    buffer.cursor_left(noil)
                    if not buffer.document.text_before_cursor.endswith(' '):
                        buffer.insert_text(' ')
                    buffer.cursor_right(noil)
                buffer.insert_text('lambda :'[noil:])
                buffer.cursor_left()
            elif regex_match(before_line.strip(),r'(for .* in in)') and after_line.strip()==':':
                buffer.delete_before_cursor(2)
            elif regex_match(before_line.strip(),r'(from \w* import import)') and after_line.strip()=='':
                buffer.delete_before_cursor(len('import'))
            elif before_line.endswith('lambda:'):
                #The default, most boring kind of lambda...
                #"lambda:|"   --->  "lambda:None|"
                buffer.insert_text('None')

            #None of the 'is_autocompletable_prefix's ahead should trigger when the prefix is a function, so as not to interfere with normal autocompletion in most cases
            elif is_autocompletable_prefix('def ():'):
                if in_class_func_decl(buffer):  autocomplete_prefix('def (self):',left=7)
                else:           autocomplete_prefix('def ():',left=3)
            elif before_line.lstrip().startswith('def ') and after_line.rstrip().endswith('):') and after_line.startswith('('):buffer.cursor_right()


            elif after_line.startswith(' in)'):
                #print(x for y| in)  -->  print(x for y in |)
                buffer.cursor_right(len(' in'))
                buffer.insert_text(' ')
            elif before_line.endswith(',for'):
                #print(x,for|)  -->  print(x for | in)
                buffer.delete_before_cursor(len(',for'))
                buffer.insert_text(' for  in')
                buffer.cursor_left(len(' in'))
            elif before_line.endswith(',if'):
                #Because when we're in functions, hitting space makes commas, we can still do 'for', 'if', etc
                #print(x,if)  -->  print(x for | in)
                buffer.delete_before_cursor(3)
                buffer.insert_text(' if  else')
                buffer.cursor_left(len(' else'))
            elif before_line.lstrip()=='else:'and not after_line.strip():
                #else:|   --->   elif |:
                buffer.delete_before_cursor(len('else:'))
                buffer.insert_text('elif :')
                buffer.cursor_left()
            elif before_line.lstrip()=='elif 'and after_line.rstrip()==':':
                #elif:|   --->   else:
                buffer.delete_before_cursor(len('elif '))
                buffer.insert_text('else')
                buffer.cursor_right()
            elif before_line.lstrip()=='f' and not after_line.strip() and single_line:
                #f|   --->   from | import         ONLY ON ONE-LINERS
                buffer.insert_text('rom  import')
                buffer.cursor_left(len(' import'))
            #Note that this was created after some other things in this file, and might even be redundant sometimes. For example, 'if'-->'if |:' is allready covered elsewhere in key_bindings.py
            elif is_autocompletable_prefix('return ',allow_single_liner=False):autocomplete_prefix('return ',left=0)
            elif is_autocompletable_prefix('while :'):autocomplete_prefix('while :')
            elif is_autocompletable_prefix('class :'):autocomplete_prefix('class :')
            elif is_autocompletable_prefix('for  in :'):autocomplete_prefix('for  in :',left=5)
            elif not (before=='i' and not after) and is_autocompletable_prefix('if :'):autocomplete_prefix('if :',left=1)#'i|' ---> 'if |:' ONLY IF we've typed something else in this buffer allready (often, I dedicate an input line to nothing but importing something)
            elif is_autocompletable_prefix('import '):autocomplete_prefix('import ',left=0)
            elif is_autocompletable_prefix('from  import'):autocomplete_prefix('from  import',left=7)
            elif is_autocompletable_prefix('elif :',allow_single_liner=False):autocomplete_prefix('elif :',left=1)
            elif is_autocompletable_prefix('else:',allow_single_liner=False):autocomplete_prefix('else:',left=0)
            elif is_autocompletable_prefix('try:'):autocomplete_prefix('try:',left=0)
            # elif is_autocompletable_prefix('True ',suffixes=[' ']):autocomplete_prefix('True ',left=0)
            # elif is_autocompletable_prefix('False ',suffixes=[' ']):autocomplete_prefix('False ',left=0)
            elif is_autocompletable_prefix('break',allow_single_liner=False):autocomplete_prefix('break',left=0)
            elif is_autocompletable_prefix('continue',allow_single_liner=False):autocomplete_prefix('continue',left=0)
            elif is_autocompletable_prefix('yield ',allow_single_liner=False):autocomplete_prefix('yield ',left=0)
            elif before_line.lstrip()!='yield' and is_autocompletable_prefix('yield from ',allow_single_liner=False):autocomplete_prefix('from ',left=0)
            # elif is_autocompletable_prefix('print()'):autocomplete_prefix('print()',left=1)#not a keyword, but used so frequently...
            elif is_autocompletable_prefix('assert '):autocomplete_prefix('assert ',left=0)
            elif is_autocompletable_prefix('nonlocal '):autocomplete_prefix('nonlocal ',left=0)
            elif is_autocompletable_prefix('global '):autocomplete_prefix('global ',left=0)
            elif is_autocompletable_prefix('raise '):autocomplete_prefix('raise ',left=0)
            elif is_autocompletable_prefix('async '):autocomplete_prefix('async ',left=0)
            # elif is_autocompletable_prefix('async def ():'):autocomplete_prefix('def ():',left=3)

            elif is_autocompletable_prefix('print()',allow_single_liner=True):autocomplete_prefix('print()',left=1);function_comma_flag=True
            elif is_autocompletable_prefix('pass',allow_single_liner=False):autocomplete_prefix('pass',left=0);function_comma_flag=True

            elif is_autocompletable_prefix('except :',allow_single_liner=False):autocomplete_prefix('except :',left=1)
            elif is_autocompletable_prefix('with :'):autocomplete_prefix('with :',left=1)
            elif ((not '\n' in before and not after and re.fullmatch(r'\w+',before_line) and not any(before_line.endswith(keyword) for keyword in keywords)) #space-completions are enabled if we're typing a function out as a comand, because then we know we don't have to worry about messy edge cases. space-functions are really convenient...\
                    or enable_space_autocompletions) \
                  and not regex_match(before_line.lstrip(),r'(def .*)|(for \w*)') \
                  and not name_of_interest.isdigit() \
                  and name_of_interest \
                  and try_autocompleting_functions(N=20):\
                    pass#"not name_of_interest.isdigit() and name_of_interest " because '5' --> 'display_color_255' without it, which is REALLY annoying
            # elif is_autocompletable_prefix('except :',[':','']):autocomplete_prefix('except :',left=1,remove_suffix=True)
            # elif is_autocompletable_prefix('except  as :',[':','']):autocomplete_prefix('except  as :',left=5,remove_suffix=True)
            elif before_line.lstrip()=='except ' and after_line.rstrip()==':':
                buffer.delete_before_cursor()
                buffer.cursor_right()
                return
            # elif before_line.endswith(' is '):
                #"x is |" --> "x is not |"
                # buffer.insert_text('not ')
                # return
            elif before_line.endswith(' is not '):
                #"x is not |" --> "x is |"
                buffer.delete_before_cursor(4)
                return
            elif before_line.lstrip()=='yield from ':
                #"yield from |" --> "yield |"
                buffer.delete_before_cursor(len('from '))
                return
            elif before_line.lstrip().startswith('except') and before_line.strip().endswith(":") and not after_line.rstrip():
                buffer.insert_text('pass')
                return
            elif starts_with_any(before_line.lstrip(),'except ','with ') and before_line.endswith(' as ') and after_line.strip()==':':
                #except A as |:   --->   except A:|
                buffer.delete_before_cursor(len(' as '))
                buffer.cursor_right()
            elif before_line.lstrip().startswith('except ') and not '(' in before_line:#not '(' in before_line because it won't properly complete functions for some reason inside the 'except' lines
                if before_line.lstrip()=='except ' and after_line.rstrip()==' as :':
                    #'except | as :' --> 'except|:'
                    buffer.cursor_right(len(' as '))#leave the ':' alone
                    buffer.delete_before_cursor(len(' as '))
                    buffer.delete_before_cursor()
                else:
                    if after_line==' as :':
                        #'except stuff | as :' --> 'except stuff as |:'
                        buffer.cursor_right(4)
                    elif after_line==':' and not ' as ' in before_line and not before_line.endswith('as'):
                        if before_line.endswith(' '):
                            buffer.delete_before_cursor()#when we have two spaces because of a function '()' --> ' '
                        if before_line.lstrip()=='except ':
                            buffer.delete_before_cursor()
                        else:
                            buffer.insert_text(' as ')
                        # buffer.cursor_right(0)
                    else:
                        buffer.insert_text(' ')
            elif before_line.lstrip().startswith('except ') and before_line.endswith('(') and after_line.startswith(')'):
                #except Exception()|:   -->   except Exception as |:
                buffer.cursor_right()
                buffer.delete_before_cursor(2)
                buffer.insert_text(' as ')
            elif before_line.lstrip().startswith('for ') and after_line.rstrip()==' in :':
                if before_line.lstrip()=='for ':#if we haven't given any variable name to iterate yet, switch to the 'from' shortcut instead because from and for both start with f
                    #Switch between 'for' and 'from'
                    buffer.cursor_right(len(' in :'))
                    buffer.delete_before_cursor(len('for '+' in :'))
                    buffer.insert_text('from  import')
                    buffer.cursor_left(len('import '))
                    return
                #Shouldn't trigger when r is a function, because of where this is in the elif chain
                buffer.cursor_right(4)
            elif before_line.endswith('lambda ')and after_line.startswith(':'):
                buffer.delete_before_cursor()
                buffer.cursor_right()
            elif endswithany(before_line,' -','[-','(-','{-'):
                #[-|] ---> [_ |]
                #[x and -|] ---> [x and _ |]
                #Posible imperfection: Maybe _ is a function. If it is, this current (sloppy) method of handling it won't call _, it will just add a space after it.
                buffer.delete_before_cursor()
                buffer.insert_text('_ ')
                return 
            elif starts_with_any(after_line,' in]',' in}','in )'):
                #A follow-up to a completion after pressing the f-key to create a comprehension
                #[x for x| in]   --->   [x for x in |]
                buffer.cursor_right(3)
                buffer.insert_text(' ')
                return
            elif single_line and before_line.endswith(' in ') and starts_with_any(after_line,']','}',')'):
                #List comprehension on single-liners
                #[x for x in |] --->  [x for x in ans]
                buffer.insert_text('ans')
                return                
            elif endswithany(before_line,' in e') and starts_with_any(after_line,':',']','}',')'):
                #Doesn't work if e is allready callable.
                #[x for x in e|]   --->   [x for x in enumerate(|)]
                #for x in e|:      --->   for x in enumerate(|):
                buffer.insert_text('numerate()')
                buffer.cursor_left()
                return
            elif endswithany(before_line,' in z') and starts_with_any(after_line,':',']','}',')'):
                #Doesn't work if e is allready callable.
                #[x for x in z|]   --->   [x for x in zip(|)]
                #for x in z|:      --->   for x in zip(|):
                buffer.insert_text('ip()')
                function_comma_flag=True
                buffer.cursor_left()
                return
            elif endswithany(before_line,' in r') and starts_with_any(after_line,':',']','}',')'):
                #Doesn't work if e is allready callable.
                #[x for x in r|]   --->   [x for x in range(|)]
                #for x in r|:      --->   for x in range(|):
                buffer.insert_text('ange()')
                buffer.cursor_left()
                return
            elif before_line.endswith('if ') and after_line.startswith(' else'):
                #Probably didn't mean to press the space-bar, out of habit...this works because of other completions
                #if | else    --->    if | else
                return
            elif (starts_with_any(after_line,' else]',
                                            ' else ',
                                            ' else)',
                                            ' else}',
                                            ' else,',
                                            ' else:') or after_line==' else') and not \
                                            endswithany(before_line,' if ',
                                                                    ']if ',
                                                                    ')if ',
                                                                    '}if ',
                                                                    '"if ',
                                                                    "'if ",
                                                                    ):
                #[x if y| else] ---> [x if y else |]
                buffer.cursor_right(len(' else'))
                buffer.insert_text(' ')
            elif before_line and after_line and before_line[-1]+after_line[0] in ['()','[]','{}']:
                if document.text in ['ans()','ans[]']:
                    buffer.delete()
                    buffer.delete_before_cursor(count=40000)
                    buffer.insert_text(' ')
                    return
                if '\n' not in before and after==')':
                    #'print()|' --> 'print(ans,|)'
                    #NOTE that upon hitting the enter key, the extra comma dissapears ('print(a,b,c,ans,|)'   --->   'print(a,b,c,ans)')
                    buffer.insert_text('ans,')
                    return
                buffer.cursor_right(count=1)
                buffer.delete_before_cursor(count=2)
                # if can_take_no_args:
                #     if function_comma_flag:
                #             buffer.insert_text(',')
                #     else:
                #             buffer.insert_text('(),')
                # else:
                #     if function_comma_flag:
                #         buffer.insert_text(',')
                #     else:
                #         buffer.insert_text(' ')
                if function_comma_flag and after_line.startswith("))"):
                    buffer.insert_text(',')
                else:
                    buffer.insert_text(' ')
            elif function_comma_flag and after_line.startswith(')'):
                if before_line.endswith(","):
                    if '\n' not in before and after==')':#(meant for one-liners, not multiliners. I wanted a convenient way to write ans into functions like this.)
                        #print(a,b,c,|) --> print(a,b,c,ans,|)
                        buffer.insert_text('ans,')
                        #NOTE that upon hitting the enter key, the extra comma dissapears ('print(a,b,c,ans,|)'   --->   'print(a,b,c,ans)\n|')
                    else:
                        #print(|) --> print
                        buffer.delete_before_cursor()
                        buffer.cursor_right()
                        if after_line.startswith("))"):
                            #print(f(|)) --> print(f(),|)
                            buffer.insert_text(',')
                elif before_line.endswith("lambda"):#special case to detect and space-autocomplete lambda syntax inside functions (normally, space in a function would make a comma; but we want print(lambda|) to go to print(lambda |:), not print(lambda,|))

                    buffer.cursor_left(count=6)
                    rev=document.text_before_cursor[::-1]
                    buffer.insert_text(' ')#This space is just an easy patch to let lambdas be easily put inside function arguments (before it was kinda annoying and didnt work well but not it does. yay. )
                    buffer.cursor_right(count=6)
                    buffer.insert_text(' :')
                    buffer.cursor_left(count=1)
                else:
                    buffer.insert_text(',')
            elif not after_line and all(is_namespaceable(x) for x in split) and len(split)==2 and split[0]=='def':
                buffer.insert_text('():')
                buffer.cursor_left(count=2)
            elif (before_line.lstrip() in['if','while','for','with','try','except'] or split and  name_of_interest=='lambda') and not after_line.strip().startswith(":"):
                buffer.insert_text(' :')
                buffer.cursor_left(count=1)
            elif before_line and after_line and before_line[-1]==','and after_line[0]==':':# for after lambda x,a,b,c,cursor:
                buffer.delete_before_cursor(count=1)
                buffer.cursor_right(count=1)
                buffer.insert_text(' ')

            elif len(split)>=2 and split[-2]=='lambda' and ':'not in name_of_interest or after_line=='):' and not before_line.rstrip().endswith(',') and before_line.lstrip().startswith('def '):# new argument in def
                #def f(x|): --> def f(x,):
                buffer.insert_text(',')
            elif before_line.lstrip()=='i':#Quick shortcut for importing. Type 'i' then press space. THis should only come after checking if i is a function, which should happen in some other if/else case above this line.
                #"i|" --> "import |"
                buffer.insert_text('mport ')
            elif before_line.lstrip()=='f':#Quick shortcut for 'from * import * style importing'. Type 'f' then press space.
                #"f|" --> "from | import"
                buffer.insert_text('rom  import')
                buffer.cursor_left(7)
            elif not after_line and (before_line.lstrip().startswith('import ') or before_line.lstrip().startswith('from ')):
                if before_line.endswith(' as'):
                    #for when the user doesn't know about or forgets about the 'as' autocompletion, so we don't end up with 'as as'
                    #'import x as as|'  -->  'import x as |'
                    buffer.delete_before_cursor(2)
                    buffer.insert_text('')#To trigger autocompletion
                    return
                if before_line.endswith(','):
                    #'import x,'  -->  'import x, |'
                    #Weird behavior if we don't do this an the user manually puts a comma without a space before this function would
                    buffer.insert_text(' ')
                    return
                #not after_line, so we're at the end of the line, which means we are done inputting the module name after 'from' or 'input'
                l=space_split(before_line)
                allready_end_with_an_as=len(l)>=2 and l[-2]=='as'
                if before_line.endswith(' as '):
                    #import x as | --> import x,|
                    buffer.delete_before_cursor(4)
                    buffer.insert_text(', ')
                elif before_line.rstrip().endswith(','):
                    #import x,| --> import x as |
                    buffer.delete_before_cursor(2)
                    # if allready_end_with_an_as:
                        # return
                    # buffer.insert_text(' as ')
                elif 'import ' in before_line:#to protect against "from x|" --> "from x as |" if we decide to type out the whole thing (naively)
                    #import x| --> import x as |
                    buffer.insert_text(', ' if allready_end_with_an_as else ' as ')#We default to the ' as ' instead of ',' because ' as ' starts with a space, which is the key we pressed. This is as opposed to functions, which default to using the comma on space by default.
                else:
                    buffer.insert_text(' ')
            elif before_line.lstrip().count(' ')==1 and before_line.lstrip().startswith('from ') and after_line==' import':#Quick shortcut for 'from * import * style importing'. Type 'f' then press space.
                # "from *| import" --> "from * import |"
                if before_line.lstrip()=='from ' and after_line.startswith(' import'):#we have no module name specified yet
                    #Switch between 'for' and 'from'
                    buffer.cursor_right(len(' import'))
                    buffer.delete_before_cursor(len('from '+' import'))
                    buffer.delete_before_cursor(13)
                    buffer.insert_text('for  in :')
                    buffer.cursor_left(len(' in :'))
                    return
                buffer.cursor_right(7)
                buffer.insert_text(' ')
            elif starts_with_any(before_line.lstrip(),'for ','except ') and after_line==':':#If we want a one-line if, elif, etc.
                if before_line.lstrip not in ['for ','except ']:#make sure it's not empty; we don't want to override completion etc
                    buffer.cursor_right(1)#Note that we exclude things we'd normally want to say, like "if x in y:"
                    buffer.insert_text('')#To trigger autocompletion
                    return
            else:
                buffer.insert_text(' ')
            buffer.insert_text('')#To trigger autocompletion

        except Exception as e:
            from rp import print_stack_trace
            print_stack_trace(e)

    @handle("?",filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        buffer=event.cli.current_buffer
        if handle_character(buffer,'?',event):return
        document=buffer.document
        before=document.text_before_cursor
        # after= document.text_after_cursor

        # before_line=before.split('\n')[-1]# all on same line, but before cursor
        # after_line=after.split('\n')[0]# ditto but after cursor
        if before.endswith('='):
            #x=| --> x?   (meant because I often want to use ? on something that I've just imported, and this is a small, stable way to do it)
            buffer.delete_before_cursor()
        buffer.insert_text('?')
    @handle("!",filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        buffer=event.cli.current_buffer
        if handle_character(buffer,'!',event):return
        document=buffer.document
        before=document.text_before_cursor
        if not before:
            buffer.insert_text('!')
            return

        # after= document.text_after_cursor

        before_line=before.split('\n')[-1]# all on same line, but before cursor
        # after_line=after.split('\n')[0]# ditto but after cursor
        if len(before)<3 and not (before_line.count("'")%2 or before_line.count('"')%2):#not in a string
            #if not in the beginning (for a ! or !! shell command) and not in string, the only time we'd want ! is for !=
            buffer.insert_text('!=')
            return
        buffer.insert_text('!')
    @handle(":",filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        buffer=event.cli.current_buffer
        if handle_character(buffer,':',event):return
        document=buffer.document
        before=document.text_before_cursor
        after= document.text_after_cursor

        before_line=before.split('\n')[-1]# all on same line, but before cursor
        after_line=after.split('\n')[0]# ditto but after cursor
        if after_line==':':
            buffer.cursor_right(count=1)
        else:
            buffer.insert_text(':')
    @handle('=',filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        import rp.r_iterm_comm as r_iterm_comm

        def buffer_insert(text):
            if(text=='=='):#text cannot be '=' because we still want to be able to use the '-=' augmented assignment
                if before_line.endswith('-'):
                    #An easy way to type '+' without the shift key: '-=', in places where that token would normally be invalid. Chosen because '-' and '=' are right next to each other.
                    buffer.delete_before_cursor()
                    buffer.insert_text('+')
                    return
            # if text in '==':
                # if before_line.endswith('=='):
                    # return
            buffer.insert_text(text)
        buffer=event.cli.current_buffer
        if handle_character(buffer,'=',event):return
        document=buffer.document
        #
        before=document.text_before_cursor
        after= document.text_after_cursor
        before_line=before.split('\n')[-1]# all on same line, but before cursor
        after_line=after.split('\n')[0]# ditto but after cursor


        for l,r in {'()','[]'}:
            if (not ' ' in before_line.strip() and before_line.endswith(r) and before_line.count(l)<=before_line.count(r) and not after_line) \
                and before_line.count(l)<before_line.count(r):
                #The ')=' operator
                #The ']=' operator
                #alpha)|   --->   alpha=|(alpha)
                #foo(bar)[0])|   --->   foo(bar[0])=|(foo(bar[0]))
                buffer.delete_before_cursor()
                arg='='+l+before_line.lstrip()
                buffer.insert_text(arg)
                buffer.cursor_left(len(arg))
                buffer.cursor_right()
                return
            if endswithany(before_line,'==','<=','>=') and after_line.startswith(r):
                #i[0==|]  --->  i[0]==|
                #f(x==|)  --->  f(x)==|
                #f(x>=|)  --->  f(x)>=|
                #f(x<=|)  --->  f(x)<=|
                end=before_line[-2:]
                buffer.delete_before_cursor(2)
                buffer.cursor_right()
                buffer_insert(end)
                return

        if after_line.startswith(')'):
            if   before_line.endswith('('):
                #if f(|):   --->   if f()==|:
                buffer.cursor_right()
                buffer_insert('==')
                return
            elif before_line.endswith(','):
                #if f(x,|):  --->   if f(x)==|:
                buffer.delete_before_cursor()
                buffer.cursor_right()
                buffer_insert('==')
                return
        if starts_with_any(before_line.lstrip(),'elif','if','while'):
            # if x==y:
            #     blah
            # elif |: —> elif x==|:
            #
            # AND a cooler use-case: (because it only copies the variable from the same indent layer)
            #   if x==5:
            #       if y==6:
            #           pass
            #   elif x==7:
            #       if y==7:
            start=None
            starts={'elif','if','while'}
            for x in starts:
                if before_line.strip()==x:
                    indent=before_line[:before_line.find(x)]
                    start=x
            if start is not None:
                assert before_line.startswith(indent)
                i=-2
                try:
                    while True:
                        match=before.split('\n')[i]
                        # if match[:len(indent)].strip():#If wrong indentation level. This check is kinda rigid, maybe it would be nice to not have it...
                            # break
                        for match_start in starts:
                            if match.startswith(indent+match_start) and '==' in match:
                                match=match[match.find(match_start)+len(match_start):]
                                match=match[:match.find('==')]
                                match=match.strip()
                                if before_line[-1].strip():
                                    buffer_insert(' :')
                                    buffer.cursor_left()
                                buffer_insert(match+'==')
                                return
                        i-=1
                    return
                except:pass
        if (False or #'=' in before_line and not '==' in before_line or #We allready have some assignment operation on this line, therefore all other ='s must belong to =='s....ALMOST ALL THE TIME. There is the edge case where we say "a=b=c=d=e" etc.
            not function_comma_flag  and not after_line.startswith(')') and starts_with_any(before_line.lstrip(),'if ','elif ','while ','not ','assert ','return ','yield ','for ','lambda ','with ','not ')) and\
                not (before_line.count("'")%2 or before_line.count('"')%2):#not in a string
            #if x|:  -->  if x==|:
            #   and
            #if x==|:  -->  if x==|:
            if not re.fullmatch(r'.*(\>|\<)',before_line):
                from rp import text_to_speech as tts 
                # tts("r")
                if before_line.endswith('!'):
                    buffer_insert('=')
                    return
                if not before_line.endswith('==') or before_line.endswith('!='):
                    buffer_insert('==')
                return




        char_operators=['','+','-','*','/','%','//','**','&','|','^','>>','<<','~']
        letter_operators=['and','or','not','==','!=','>=','<=']
        var=r_iterm_comm.last_assignable_comm
        # the .=, (=, and [= operators:
        if endswithany(before_line.lstrip(),'.','(','[') and\
            (before_line.endswith('.') and not after_line.strip() or
             before_line.endswith('(') and after_line.strip() in ['',')'] or
             before_line.endswith('[') and after_line.strip() in ['',']']):
            if before_line.lstrip()=='ans.':
                #Prevent: '|' --> 'ans.|' --> 'ans=ans.'
                #Because last_assignable_comm is more useful in this case.
                buffer.delete_before_cursor(4)
                buffer.insert_text('.')
                document=buffer.document
                before_line=document.current_line_before_cursor
                before     =document.text_before_cursor
            #x.=y --> x=x.y
            #x.|  --> x=x.|
            #AND
            #x(|) --> x=x(|)
            #x[|] --> x=x[|]
            operator=before_line.lstrip()[-1]
            buffer.delete_before_cursor(count=1)
            assign_to=before_line.lstrip()
            if var and not assign_to[:-1]:
                #.|  -->  ans=ans.|
                buffer_insert(var+'='+var+operator)
                return
            buffer_insert("="+assign_to)
        elif before=='ans('and after==')':# Space + equals -> import torch;
            buffer.delete()
            buffer.delete_before_cursor(count=1000)
            buffer_insert("ans="+str(var))

        elif var and before==var+"=":
            buffer.delete_before_cursor(count=1000)
            # tts("t")
            buffer_insert("==")

        elif var and not after and before in letter_operators:# User hasn't typed anything in yet
            buffer.cursor_left(count=10000)
            buffer_insert(var)
            buffer_insert("=")
            buffer_insert(var)
            if before.isalpha():# and, or, not
                buffer_insert(" ")# We need a space
            buffer.cursor_right(count=10000)
        elif var and not after and before in char_operators:# User hasn't typed anything in yet
            buffer.cursor_left(count=10000)
            buffer_insert(var)
            buffer.cursor_right(count=10000)
            buffer_insert('=')
        else:
            buffer_insert('=')

    import os
    if os.name != 'nt':#If we are NOT running windows, which screws EVERYTHING up...
        # @handle(Keys.ControlC)
        # def _(event):
        #     buffer=event.cli.current_buffer
        #     # document=buffer.document
        #     # before=document.text_before_cursor
        #     # after= document.text_after_cursor
        #     buffer.insert_text('RETURN')


        @handle(Keys.ControlH,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event):
            buffer=event.cli.current_buffer
            #On ubuntu, shift+backspace triggers this; and inserting 'HISTORY' is very annoying when we just want to backspace
            buffer.delete_before_cursor()
            # buffer.insert_text('HISTORY')
        @handle(Keys.ControlE)
        def _(event):
            #Run the buffer without erasing it or disturbing cursor position
            run_code_without_destroying_buffer(event)

        @handle(Keys.ControlW)
        def _(event):
            handle_run_cell(event)





        @handle(Keys.ControlU,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event):
            buffer=event.cli.current_buffer
            buffer.insert_text('UNDO')
        @handle(Keys.ControlP,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event):
            buffer=event.cli.current_buffer
            before_line=buffer.document.current_line_before_cursor
            after_line=buffer.document.current_line_after_cursor
            if before_line=='PREV' and not after_line:
                buffer.delete_before_cursor(4)
                buffer.insert_text('NEXT')
            elif before_line in ['','NEXT'] and not after_line:
                buffer.delete_before_cursor(4)
                buffer.insert_text('PREV')

    def move_arg(buffer,delta_positions:int):
        assert delta_positions in {1,-1}
        document=buffer.document
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor

        def chop_at_parenthesis_level(s:str,l:int):
            n=0
            for i,c in enumerate(s):
                if c in '([{':n+=1
                if c in '])}':n-=1
                if n==l:return s[:i]
            return s

        after_line=chop_at_parenthesis_level(after_line,-1)#Count and match parenthesis (we want 'A(B)(C)D)E' --> 'A(B)(C)D') (when we're dealing with after_line)
        before_line=before_line[::-1]
        before_line=chop_at_parenthesis_level(before_line,1)
        before_line=before_line[::-1]


        bargs=before_line.split(',')
        aargs=after_line.split(',')
        aarg=aargs[0]
        barg=bargs[-1]
        laarg=len(aarg)
        lbarg=len(barg)
        arg=barg+aarg
        larg=len(arg)

        def erase_arg():
            buffer.delete_before_cursor(lbarg)
            buffer.delete              (laarg)

        if delta_positions==1:
            if not ',' in after_line:return#Otherwise we glitch and delete the rest of it
            if len(aargs)==1:return
            erase_arg()
            buffer.delete()
            buffer.cursor_right(len(aargs[1]))#Shouldn't get index error if called properly (where cursor is AFTER a comma)
            buffer.insert_text(','+arg)
            buffer.cursor_left(larg)
        if delta_positions==-1:
            # if not ',' in after_line:return#Otherwise we glitch and delete the rest of it
            #     buffer.delete_before_cursor()
            #     buffer.delete(laarg)
            #     buffer.cursor_left(lbarg)
            #     buffer.insert_text(arg+',')
            erase_arg()
            buffer.delete_before_cursor()
            buffer.cursor_left(len(bargs[-2]))
            buffer.insert_text(arg+',')
            if len(bargs)>2:
                buffer.cursor_left(larg+1)




    @handle('<',filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        buffer=event.cli.current_buffer
        if handle_character(buffer,'<',event):return
        document=buffer.document
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        if before_line.endswith(','):
            #Swap arguments around parenthesis! (Warning: Doesn't handle parenthesis inside strings as an edge case)
            #(apple,f(x),|['bananna'])   --->   (apple,|['bananna'],f(x))
            try:move_arg(buffer,-1)
            except:print("JAM")
            return
        buffer.insert_text('<')
    @handle('>',filter=~vi_mode_enabled&microcompletions_enabled)
    def _(event):
        buffer=event.cli.current_buffer
        if handle_character(buffer,'>',event):return
        document=buffer.document
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        if before_line.endswith(','):
            #Swap arguments around parenthesis! (Warning: Doesn't handle parenthesis inside strings as an edge case)
            #(apple,|f(x),['bananna'])   --->   (apple,['bananna'],f(x))
            try:move_arg(buffer,1)
            except:print("JAM")
            return
        buffer.insert_text('>')
    def do_backspace(event):
        buffer=event.cli.current_buffer
        document=buffer.document
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        if self_dot_var_equals_var(buffer,'\b') and after_line.strip()!='=':
            #self.foo|=foo   --->   self.fo|=fo
            return
        if before_line.endswith(' as '):
            #(I'm often trigger-happy with the space-bar on using imports, and try to correct it with backspace. This saves me some time...)
            #import osaidf as |   --->   import osaidf
            buffer.delete_before_cursor(len(' as '))
            return
        if before_line.endswith(', '):
            #import osaidf as c, |   --->   import osaidf as c|
            buffer.delete_before_cursor(len(', '))
            return
        selection_tuples=list(document.selection_ranges())
        if not selection_tuples:
            before=document.text_before_cursor
            after= document.text_after_cursor
            if not after and before =='ans.':
                buffer.delete_before_cursor(len(before))
                return
            if not before_line.strip():
                #(backspace entire indent when it's empty. example:)
                #def f(x):
                #····|return x
                #  --->
                #def f(x):return x
                buffer.delete_before_cursor(len(before_line))
            bl=before_line.lstrip()
            al=after_line.rstrip()
            if bl+'|'+al in {'from | import','for | in :','while |:','if |:','elif |:','except |:','lambda :','with |:'}|\
                            {'import |','return |','return|','pass|','else:|','yield |','assert |'}:
                            #Delete from both sides of the cursor on constructs we tend to make automatically (to make it less annoying)
                buffer.cursor_right(len(al))
                buffer.delete_before_cursor(len(bl+al))
                return
            if before and after:
                if after_line.strip()in {':','():'} and before_line.lstrip() in {'def ','while ','for ','class ','if ','elif ','else','except ','lambda ','with ','try'}:
                    #  '    def |:'   -->   '    |'
                    buffer.delete(len(after_line))
                    buffer.delete_before_cursor(len(before_line.lstrip()))
                    return
                pair=before[-1]+after[0]
                if pair in ['()','{}','[]',"''",'""']:
                    #  'f(|)'   -->   'f|'
                    buffer.cursor_right(count=1)
                    buffer.delete_before_cursor(count=2)
                    buffer.insert_text('')#trigger autocompletion
                    return
            buffer.delete_before_cursor(count=1)
        else:
            buffer.cut_selection()
        buffer.insert_text("")#Using this to trigger autocompletion on backspace
    def alt_backspace_char_class(event):
        #get char before cursor and distinguish between whitespace, alphanumerics, and other chars
        c=event.cli.current_buffer.document.text_before_cursor
        if not c:
            return None#no chars behind cursor
        c=c[-1]
        if c.isalnum():
            return 1
        elif not c.strip():
            return 2
        else:
            return 3

    @handle(Keys.Backspace,eager=True)
    def _(event):
        if meta_pressed():
            do_backspace(event)#We expect at least two characters to dissapear; so eat through one-char wide spaces (for example, "def |a()" --> "|a()", not "def|a()")
            c=alt_backspace_char_class(event)
            while c is not None and c==alt_backspace_char_class(event):
                do_backspace(event)
            return
        do_backspace(event)

    @handle(Keys.Right)
    def _(event):
        buffer=event.cli.current_buffer
        document=buffer.document
        selection_tuples=list(document.selection_ranges())
        for t in selection_tuples:
            buffer._set_cursor_position(t[1])
            buffer.exit_selection()
        else:
            cpos=buffer.cursor_position
            buffer.cursor_right(1)
            if buffer.cursor_position==cpos:
                buffer=event.cli.current_buffer
                buffer._set_cursor_position(min(buffer.cursor_position + 1,len(buffer.document.text)))
            # buffer.cursor_right(0)# Gets stuck on ends of lines. Not as good as the new version

    @handle(Keys.Left)
    def _(event):
        buffer=event.cli.current_buffer
        document=buffer.document
        selection_tuples=list(document.selection_ranges())
        for t in selection_tuples:# Handle arrow-keys on selection by putting the cursor on beginning or end of selection
            buffer._set_cursor_position(min(t[0]+1,len(buffer.document.text)))
            buffer.exit_selection()
        else:
            cpos=buffer.cursor_position
            buffer.cursor_left(1)
            if cpos==buffer.cursor_position:
                buffer=event.cli.current_buffer
                buffer._set_cursor_position(max(buffer.cursor_position - 1,0))

    @handle(Keys.Down)
    def _(event):
        buffer=event.cli.current_buffer
        if meta_pressed():
            buffer.cursor_down(10)
        else:
            buffer.auto_down(ryan_allow_completion_navigation=False)
        # document=buffer.document
        # assert isinstance(buffer,Buffer)
        # if not has_selected_comlpetion(buffer):
            
        # if has_selected_completion(buffer) or not '\n' in buffer.document.text:
            # buffer.auto_down()# Will select next completion
            # try:
            #     if not has_selected_completion(buffer) or not '\n' in buffer.document.text3:#
            #         buffer.auto_down()# So we don't get stuck when we come back around again
            # except:pass
        # else:
        #     temp=buffer.complete_state
        #     try:
        #         buffer.complete_state=False
        #         buffer.auto_down()# Will select next completion
        #     finally:
        #         buffer.complete_state=temp

    @handle(Keys.Up)
    def _(event):
        buffer=event.cli.current_buffer
        if meta_pressed():
            buffer.cursor_up(10)
        else:
            buffer.auto_up(ryan_allow_completion_navigation=False)
            return
            assert isinstance(buffer,Buffer)
            if has_selected_completion(buffer):#  Up is the only one that can initially select a history item
                buffer.auto_up()# Will select next completion
                if not has_selected_completion(buffer):
                    buffer.auto_up()# So we don't get stuck when we come back around again
            else:
                temp=buffer.complete_state
                try:
                    buffer.complete_state=False# So we don't select a completion
                    buffer.auto_up()# Will select next completion
                finally:
                    buffer.complete_state=temp





    @handle(Keys.ControlZ)
    def _(event):
        buffer=event.cli.current_buffer
        # print(buffer._redo_stack)
        buffer.undo()

    @handle(Keys.ControlY)
    def _(event):
        buffer=event.cli.current_buffer
        # print(buffer._redo_stack)
        buffer.redo()

    @handle(Keys.ControlQ)
    def _(event):
        #Abandon the current buffer. But still save it to history.

        buffer=event.cli.current_buffer
        buffer.append_to_history()
        event.cli.abort()
        # print(buffer._redo_stack)
        # buffer.redo()

    import rp.r_iterm_comm as r_iterm_comm

    @handle(Keys.ControlV)# On mac this is alt+z
    def _(event):
        if meta_pressed(clear=True):
            edit_event_buffer_in_vim(event)
        else:
            buffer=event.cli.current_buffer
            from rp import string_from_clipboard
            clip=r_iterm_comm.clipboard_text
            try:
                clip=string_from_clipboard()
                buffer.cut_selection()
                buffer.insert_text(clip)
            except:
                pass# Paste failed

    @handle(Keys.ControlA)# On mac this is alt+z
    def _(event):
        reprify=False
        if meta_pressed(clear=True):
            reprify=True
        if True:
            buffer=event.cli.current_buffer
            try:
                if reprify:
                    clip=repr(str(get_ans()))
                else:
                    clip=str(get_ans())
                buffer.cut_selection()
                buffer.insert_text(clip)
            except:
                pass# Paste failed

    @handle(Keys.ControlC)# ,filter=has_selection)# On mac this is alt+z
    def _(event):
        buffer=event.cli.current_buffer
        selection_tuples=list(buffer.document.selection_ranges())

        #region
        if not selection_tuples:
            selection_tuples=[]
            line=buffer.document.current_line
            to_copy="\n" + line# ' ' * (len(line)-len(line.lstrip()))
            buffer.cursor_right(12323213)
        else:
            to_copy=""
            for t in selection_tuples:
                to_copy+=buffer.document.text[t[0]:t[1]+1]
        r_iterm_comm.clipboard_text=to_copy
        from rp import string_to_clipboard
        try:
            string_to_clipboard(to_copy)
        except:
            pass# Copy failed


    def inc_dec(inc_or_dec:str):# ++ ⟶ +=1
        #increment or decrement
        @handle(inc_or_dec,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event):
            buffer=event.cli.current_buffer
            if handle_character(buffer,inc_or_dec,event):return
            document=buffer.document
            before=document.text_before_cursor
            before_line=document.current_line_before_cursor
            after_line=document.current_line_after_cursor
            after= document.text_after_cursor
            current_line= document.current_line
            above_line=    line_above(buffer)
            single_line=above_line is None
            # import r_iterm_comm
            # if not after and r_iterm_comm.last_assignable_comm and before[-1]==inc_or_dec:# So you can do ++ -> assignable ++= (because +=1 -> assignable+=1)
            #     buffer.cursor_left(count=1000)
            #     buffer.insert_text(r_iterm_comm.last_assignable_comm)
            #     buffer.cursor_right(count=1000)
            #     return
            # print('GAGAGAGA')

            from rp import is_namespaceable
            if inc_or_dec == '-' and all(is_namespaceable(x) for x in before_line if x not in ' ') and starts_with_any(before_line.lstrip(),'def ','class '):# When writing the title of a function, you don't have to use _ you can type - and it will turn it into _
                #(on -)
                #def |(): ---> def _|():
                #     AND
                #def f|(): ---> def _f_|():
                buffer.insert_text('_')
                return
            if inc_or_dec=='-' :
                if is_namespaceable(before_line.strip()) and before_line.rstrip()==before_line and not single_line:
                    #If multiline, and we're starting a line, and we're continuing some variable name, assume that we don't want to create an expression.
                    #Example:
                    #def f():
                    #   x|   ---->    x_
                    buffer.insert_text('_')
                    return

                if before_line.endswith('for ')and starts_with_any(after_line,' in)',' in}',' in]'):
                    buffer.insert_text('_')
                    buffer.cursor_right(3)
                    buffer.insert_text(' ')
                    return
                skip=False
                token,name,found=token_name_found_of_interest(before_line)
                if before_line=='from 'and after_line==' import':
                    buffer.cursor_right(1233)
                    buffer.delete_before_cursor(len('from  import'))
                elif found:
                    # print("NAME IS "+name)
                    if name=='f'==before_line.strip() and not callable(token):
                        buffer.delete_before_cursor()
                    else:
                        skip=True   
                if not skip:
                    buffer.insert_text('for _ in :')
                    buffer.cursor_left()
                    return 

            if (inc_or_dec=='+' or False) and (after_line.startswith('"') or after_line.startswith("'")):
                #(on + followed by +) (for combining strings more easily)
                #"Hello"|"World"  --->  "Hello"|+"World"  --->  "Hello"+|+"World"
                #       AND
                #'Hello'|'World'  --->  'Hello'|+'World'  --->  'Hello'+|+'World'
                buffer.insert_text('+')
                buffer.cursor_left()
                return
            # if (inc_or_dec=='-' or True) and (endswithany(before_line,'"',"'") and after_line.startswith("+")):
            #     #On pressing the '-' key, (because string literals don't implement the '-') operator
            #     #"Hello"|+"World"  --->  "Hello"+|+"World"
            #     buffer.insert_text('+')
            #     return

            if inc_or_dec=='-' and before_line.lstrip()=='for ' and after_line.rstrip()==' in :':
                #(on -)
                #for | in : --> for _ in |:
                buffer.insert_text('_')
                buffer.cursor_right(len(' in '))
                return
            if len(before_line.strip())>1 and before and before[-1]==inc_or_dec and is_namespaceable(before_line[:-1].lstrip()):
                #(on +) x+|  --->  x+=1
                #       AND
                #(on -) x-|  --->  x-=1
                if not after_line:
                    buffer.insert_text("=1")
                else:
                    buffer.insert_text(inc_or_dec)
                    buffer.cursor_left()
            elif inc_or_dec=='-' and before_line.endswith('-'):
                #becuase then we dont have to reach for the shify key (default blank vairable is _ in for loops)
                #print(-|) ---> print(_|)
                buffer.delete_before_cursor()
                buffer.insert_text('_')
            elif inc_or_dec=='-' and before_line.endswith('-=1'):
                #(when we wanted to make an underscore but got -=1, just press - again...)
                #x-=1| ---> x_| 
                buffer.delete_before_cursor(3)
                buffer.insert_text('_')
            else:
                buffer.insert_text(inc_or_dec)
            # if inc_or_dec=='+':
            #     print("ewfoijfdsijoijowfijofejio")
            #     if before.endswith('+') and after and after[0] in '\'"':
            #         buffer.cursor_left()
    inc_dec('+')
    inc_dec('-')

    # @handle("h")
    # def sploo(x):
    #     print("A")
    # @handle("h")
    # def sploo(x):
    #     print("B")


    bracket_pairs={"()","[]","{}"}
    def thing(begin,end):
        @handle(begin,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event):# Parenthesis completion
            buffer=event.cli.current_buffer
            if handle_character(buffer,begin,event):return
            if(begin=='('):
                document=buffer.document
                before_line=document.current_line_before_cursor
                after_line =document.current_line_after_cursor
                if regex_match(before_line.lstrip(),r'for\s+\w+\s+in\s+len'):
                    #for x in len|   -->  for x in range(len(|))
                    buffer.delete_before_cursor(3)
                    buffer.insert_text('range(len())')
                    buffer.cursor_left(2)
                    return
                if before_line.rstrip().startswith('def ') and after_line.strip()=='():':
                    #def f|() --> def f(|):
                    buffer.cursor_right()
                    return
            if not surround(buffer,begin,end):
                document=buffer.document
                before=document.text_before_cursor
                after= document.text_after_cursor
                buffer.insert_text(begin)
                if after.strip()==':' or not after or after[0].isspace() or before and before[-1]+after[0]in bracket_pairs or document.find_matching_bracket_position()!=0:
                    buffer.insert_text(end)
                    buffer.cursor_left(count=1)
        @handle(end,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event):# Parenthesis completion
            buffer=event.cli.current_buffer
            if handle_character(buffer,end,event):return
            if not surround(buffer,begin,end):
                document=buffer.document
                before=document.text_before_cursor
                after= document.text_after_cursor
                if not after or after[0]!=end:#  or before.count(begin)>before.count(end):#Last part is checking for parenthesis matches. I know somewhere there's a way to do this already thats better and isnt confused by strings but idk where that is
                    buffer.insert_text(end)
                else:
                    buffer.cursor_right(count=1)
    for bracket_pair in bracket_pairs:
        thing(bracket_pair[0],bracket_pair[1])

    def surround(buffer,begin,end):
        from rp.prompt_toolkit.selection import SelectionState
        document=buffer.document
        text=document.text
        selection_tuples=list(document.selection_ranges())
        for range in selection_tuples:
            buffer.document=Document(text=text[:range[0]]+begin+text[range[0]:range[1]+1]+end +text[range[1]+1:],cursor_position=range[0]+1,selection=None)
            buffer.document._selection=SelectionState(original_cursor_position=range[1]+1,type=document.selection.type)
        # exec(mini_terminal)
        # from rp.rp_ptpython.utils import get_jedi_script_from_document
        # script=get_jedi_script_from_document(document,r_iterm_comm.globa,r_iterm_comm.globa)
        # script.call_signatures()
        return bool(selection_tuples)# Returns whether we have a selection
    def thing2(char):
        @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)
        def _(event,filter=has_selection):# Parenthesis completion
            buffer=event.cli.current_buffer
            if handle_character(buffer,char,event):return
            if not surround(buffer,char,char):
                document=buffer.document
                before=document.text_before_cursor
                after= document.text_after_cursor
                before_line=document.current_line_before_cursor
                after_line=document.current_line_after_cursor

                if after.startswith(char) and not before.endswith(char):
                    buffer.cursor_right()
                # else:
                #     buffer.insert_text(char)
                #     buffer.cursor_left()
                #     buffer.insert_text(char)

                elif (before and after and before[-1]+after[0] in {"[]","()","{}",",}",",)",",]",'+)','+,','+}','+]'}) or (not after_line or not before and not after or before and after and before[-1]in'(=!#%&*+,-./:;<>^|~' and after[0]in')=!#%&*+,-./ :;<>^|~' or before and after and before[-1]+after[0] in 2*char):
                    #| --> "|"
                    #| --> '|'
                    buffer.insert_text(char)
                    buffer.cursor_left()
                    buffer.insert_text(char)
                elif before.endswith(char):
                    #For splitting strings into two pieces
                    #(" pressed twice)
                    #"Hello|World!"  -->  "Hello"|World!"  -->  "Hello"|"World!"
                    buffer.insert_text(char)
                    buffer.cursor_left()
                else:
                    buffer.insert_text(char)

    for char in '"\'':
        thing2(char)
    @handle(',',filter=~vi_mode_enabled&microcompletions_enabled)  
    def _(event):
        #Comma event
        buffer=event.cli.current_buffer
        if handle_character(buffer,',',event):return
        document=buffer.document
        before=document.text_before_cursor
        after= document.text_after_cursor
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        if before_line.lstrip()=='for ' and after_line.rstrip()==' in :':
            #for | in:  --->  for i,e in enumerate(|):
            buffer.insert_text('i,e')
            buffer.cursor_right(len(' in '))
            buffer.insert_text('enumerate()')
            buffer.cursor_left()
            return
        if before_line.endswith('for ') and starts_with_any(after_line,' in]',' in)',' in}'):
            #[x for | in]  --->  [x for i,e in enumerate(|)]
            buffer.insert_text('i,e')
            buffer.cursor_right(len(' in'))
            buffer.insert_text(' enumerate()')
            buffer.cursor_left()
            return
        if before_line.endswith(',') and after_line.startswith(','):
            #We prevent from accidently putting in more parenthesis than make sense
            #x,|,y  --->  x,|,y    (no change)...
            return
        if before_line.endswith(',') and \
            not before_line.endswith(',,'):#...however, we do allow ,,,,,,,:   x,,|y  --->  x,,,|y  
            #y,|x  -->  y,|,x
            buffer.insert_text(',')
            buffer.cursor_left()
            return
        if before_line.endswith('-'):
            #Turning the '-' into a '_' where a '-' would be syntactically invalid
            buffer.delete_before_cursor()
            buffer.insert_text('_')
            
        if after_line.startswith(','):
            #f(a,b,c|,)   --->   [a,b,c,|)
            #(don't waste commas)
            buffer.cursor_right()
            return
        if not (before_line.endswith(',') and after_line.startswith(']')):
            #[x,y|]  -->  [x,y,|]
            #       AND
            #[x,y,|]  -->  [x,y,|]
            #for when I spam the [12,3123,12,31,23,12,31,23,123,1,23,123,12,31,23] and don't want accidental ',,'s
            buffer.insert_text(',')
            return

    # @handle(',')
    # def thing3(char):
    #     @handle(char)
    #     def _(event,filter=~has_selection):# Parenthesis completion
    #         buffer=event.cli.current_buffer
    #         document=buffer.document
    #         before=document.text_before_cursor
    #         after= document.text_after_cursor
    #         if before.endswith('(') and after.startswith(')'):
    #             buffer.cursor_right()
    #         buffer.insert_text(char)
    # for char in '!#%&*,./:;<>^|~':# + and - allready taken
    #     thing3(char)

    @handle(Keys.Delete)
    def _(event):
        event.cli.current_buffer.delete()

    @handle(Keys.ControlSpace)# For commenting
    def _(event):  # Parenthesis completion
        # def toggle_comment_on_line(x):
        #     y=x.lstrip()
        #     if y.startswith("#"):# Line is commented out
        #         i=x.find('#')
        #         return x[:i]+x[i+1:]
        #     l=len(x)-len(y)
        #     return l*' ' +'#' + y

        buffer=event.cli.current_buffer
        # buffer.transform_current_line(toggle_comment_on_line)
        # buffer.insert_text("ⵁ")
        # buffer.delete_before_cursor
        document=buffer.document
        before=document.text_before_cursor
        after= document.text_after_cursor
        current_line=document.current_line
        before_line=document.current_line_before_cursor
        after_line=document.current_line_after_cursor
        buffer.cursor_left(10000)
        lstrip=current_line.lstrip()
        w=len(current_line)-len(lstrip)
        buffer.cursor_right(w)
        if current_line.lstrip().startswith('#'):
            buffer.delete()
        else:
            buffer.insert_text('#')
        buffer.cursor_down()
    #endregion

    @handle(Keys.ControlT,eager=True)
    def _(event):
        """
        Cursor to top.
        """
        event.cli.current_buffer.history_backward()
    @handle(Keys.ControlB,eager=True)
    def _(event):
        """
        Cursor to top.
        """
        event.cli.current_buffer.history_forward()

    @handle(Keys.ControlL)
    def _(event):
        """
        Clear whole screen and render again -- also when the sidebar is visible.
        """
        event.cli.renderer.clear()
    @handle(Keys.F2)
    def _(event):
        """
        Show/hide sidebar.
        """
        python_input.show_sidebar = not python_input.show_sidebar

    @handle(Keys.F3)
    def _(event):
        """
        Select from the history.
        """
        python_input.enter_history(event.cli)

    @handle(Keys.F4)
    def _(event):
        """
        Toggle between Vi and Emacs mode.
        """
        event.cli.vi_state.input_mode = 'vi-navigation'
        python_input.vi_mode = not python_input.vi_mode#If we're switching out of RP-Emacs, its most likely because we want them good ol' vim bindings for manipulating text. 
        # print(event.cli.vi_state)
        # python_input.vi_mode = not python_input.vi_mode

    @handle(Keys.F6)
    def _(event):
        """
        Enable/Disable paste mode.
        """
        python_input.paste_mode = not python_input.paste_mode

    @handle(Keys.F1)
    def _(event):
        """
        Enable/Disable mouse mode.
        """
        python_input.enable_mouse_support = not python_input.enable_mouse_support

    @handle(Keys.F8)
    def _(event):
        """
        Enable/Disable microcopletions.
        """
        python_input.enable_microcompletions = not python_input.enable_microcompletions

    @handle(Keys.F7)
    def _(event):
        """
        Enable/Disable line wraps.
        """
        python_input.wrap_lines = not python_input.wrap_lines
        
    def number_of_leading_spaces(string):
        i=0
        for x in string:
            if x==' ':
                i+=1
            else:
                break
        return i
    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())
    def _(event):
        """
        When tab should insert whitespace, do that instead of completion.
        """
        buffer=event.cli.current_buffer
        if handle_character(buffer,'\t',event):return
        buffer.insert_text('    ')
        after_line = buffer.document.current_line_after_cursor
        before_line = buffer.document.current_line_after_cursor
        # N=number_of_leading_spaces(before_line+after_line)
        # if not before_line.strip() and N%4:
            # buffer.insert_text(' '*(4-N%4))
            # return
        if after_line.lstrip():
            buffer.cursor_left(4)
    #region  Ryan Burgert Method

    @handle(Keys.BackTab,filter=IsMultiline())
    def _(event):
        """
        When tab should insert whitespace, do that instead of completion.
        """
        # from r import mini_terminal
        buffer=event.cli.current_buffer
        after_line = buffer.document.current_line_after_cursor
        before_line = buffer.document.current_line_before_cursor
        # flag=before_line.strip() and before_line#has some whitespace characters on it
        N=min(4,number_of_leading_spaces(before_line+after_line))
        # i=0
        if not after_line.strip() and not before_line.strip():
            for i in range(4):
                if buffer.document.current_line_before_cursor:
                    buffer.delete_before_cursor(1)

            return
        for _ in range(N):
            try:
                if buffer.document.current_line.startswith(' ') or not has_selected_completion(buffer):
                    flag=False
                    if not buffer.document.current_line_after_cursor:#Otherwise it might jump to another line if we dont do this first
                        buffer.cursor_left()
                        flag=True
                    buffer.transform_current_line(lambda x:x[1:])
                    if not flag and buffer.document.current_line_before_cursor.strip():
                        buffer.cursor_left()
                # buffer.transform_current_line(lambda x:(x[1:]if x.startswith(' '*4)else x.lstrip()))
                # buffer.transform_current_line(lambda x:(x[4:]if x.startswith(' '*4)else x.lstrip()))
            except:
                pass# Error migght happen if cursor is in bad place. Not sure what to do about that; but its an edge case so I'm just gonna squelch it.
        #endregion
        # if flag:
            # buffer.cursor_right(i)
    from rp import ring_terminal_bell ,text_to_speech
    def try_to_unindent(buffer,*matching_prefixes):
        b=buffer
        current_line = b.document.current_line
        after_line = b.document.current_line_after_cursor
        before_line = b.document.current_line_before_cursor
        before=b.document.text_before_cursor
        after= b.document.text_after_cursor
        l=find_level(before,*matching_prefixes)
        if l is None:
            # ring_terminal_bell()
            # text_to_speech('a')
            return#We're at a bit of a loss on what to do here...
        i=get_indent(current_line)
        d=len(i)-l
        L=len(before_line.lstrip())
        # ring_terminal_bell()
        buffer.cursor_left(L)
        buffer.delete_before_cursor(d)
        buffer.cursor_right(L)
        # text_to_speech('b')
    indent_block_matches={
            'except':{'try','finally'},#cant add except for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)
            'finally':{'try','except','else'},
            'else':{'if','elif','for','while','except'},
            'elif':{'if'},#cant add elif for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)
            }
    def try_to_autounindent(buffer):
        b=buffer
        current_line = b.document.current_line
        after_line = b.document.current_line_after_cursor
        before_line = b.document.current_line_before_cursor
        before=b.document.text_before_cursor
        after= b.document.text_after_cursor
        if current_line.rstrip().endswith(':'):
            
            for m in indent_block_matches:
                if current_line.lstrip().startswith(m):
                    try_to_unindent(buffer,*indent_block_matches[m])
                    # text_to_speech('c')
                    return
        # text_to_speech('d')
        return



    @handle(Keys.ControlJ, filter= ~vi_mode_enabled & ~sidebar_visible & ~has_selection &( ViInsertMode() | EmacsInsertMode()) &HasFocus(DEFAULT_BUFFER) )#& IsMultiline())
    def _(event):
        """
        Behaviour of the Enter key. enter key

        Auto indent after newline/Enter.
        (When not in Vi navigaton mode, and when multiline is enabled.)
        """
        b = event.current_buffer
        buffer=b
        if handle_character(buffer,'\n',event):return
        empty_lines_required = python_input.accept_input_on_enter or 10000
        text=current_line=after_line=before_line=before=after=above_line=None
        def refresh_strings_from_buffer():
            nonlocal text,current_line,after_line,before_line,before,after,above_line
            text =         b.document.text_after_cursor
            current_line = b.document.current_line
            after_line =   b.document.current_line_after_cursor
            before_line =  b.document.current_line_before_cursor
            before=        b.document.text_before_cursor
            after=         b.document.text_after_cursor
            above_line=    line_above(b)
        refresh_strings_from_buffer()

        single_line = above_line is None
        def auto_pass():#try automatically adding a 'pass' keyword if it helps to avoid a syntax error; return True if we add a 'pass'
            if not single_line and not current_line.strip() and above_line.rstrip().endswith(':'):
                #Implicitly add 'pass' when hitting enter below an if/for/def block (which would otherwise be a syntax error because of the autounindent)
                buffer.insert_text('pass')
                refresh_strings_from_buffer()
                return True
            return False
        auto_pass()
        if before_line.endswith(' enumerate(') and after_line.startswith(')'):
            #for i,e in enumerate(|):   --->   for i,e in enumerate(ans):\n|
            buffer.insert_text('ans')
        elif before_line.lstrip()=='f,' and not 'f' in r_iterm_comm.globa:
            #f,|   --->   for i,e in enumerate(ans):\n|
            buffer.delete_before_cursor(2)
            buffer.insert_text('for i,e in enumerate(ans):')
        for end in ')]}':
            if current_line.endswith(','+end) and before_line.endswith(',') and after_line==end:
                #print(ans,|)   --->   print(ans|)
                #[1,2,3,|]      --->   [1,2,3|]
                #{1,2,3,|}      --->   {1,2,3|}
                buffer.delete_before_cursor()
                refresh_strings_from_buffer()
        # if endswithany(before_line,',-','(-','[-','{-'):
            #A BETTER VERSION OF THIS HAS BEEN MOVED TO MISC TWEAKS WITH A BUG FIX 
            #BUG IN THIS BLOCK: On \n: ‹(-|10)› –––>  ‹(_10)\n|›
            #Completing the '-' dash to the underscore variable '_' in one of many instances where it makes sense
            #print(-|) ---> print(_)\n|
            # buffer.delete_before_cursor()
            # buffer.insert_text('_')
            # refresh_strings_from_buffer()
        #a line with a sigle letter on it is useless, so let's make it useful.
        #TODO: Make it semantically aware: make 'e' write 'except' when in a try block, and 'else' when in an 'if' or after a 'for' block. Same logic SHOULD (but doesn't yet) apply to all of these (see below line)
        if before_line.lstrip()=='#':
            #'#|' ---> '|'  (so we can hit enter twice to break out of a comment)
            buffer.delete_before_cursor()
            return
        continue_comment=before_line.lstrip().startswith('#')
        if before_line=='from 'and after_line==' import':
            #With current completions, which come in the next few 'if' blocks, we get this:
            #from | import ---> for _ in ans:\n\t
            buffer.delete_before_cursor(len('from '))
            buffer.delete(len(' import'))
            buffer.insert_text('for  in :')
            buffer.cursor_left(len(' in :'))
            refresh_strings_from_buffer()

        if before_line.lstrip()=='for 'and after_line.rstrip()==' in :':
            #for | in :   --->   for _ in |:   (we don't stop here, it eventually goes to "for _ in ans": see the next 'if' block)
            buffer.insert_text('_')
            # buffer.insert_text('ans')
            # 
            refresh_strings_from_buffer()

        if after_line.rstrip()==' in :':
            buffer.cursor_right(len(' in '))
            # 
            refresh_strings_from_buffer()

        if after_line.rstrip()==':':
            #for spaoddsg in |:   --->   for spaoddsg in ans:
            spl=before_line.split()
            if len(spl)==3 and spl[0]=='for' and spl[2]=='in':
                buffer.insert_text('ans')
                # 
                refresh_strings_from_buffer()
        if not (single_line and token_exists(current_line.strip())):
            import rp.r_iterm_comm
            enter_completable_keywords=dict(fo='for _ in ans:',e='else:',t='try:',b='break',c='continue',f='finally:',p='pass',r='return',y='yield',d='def _():',w='while True:',i='if True:')#enter-completion of keywords that don't need to take arguments
            single_line_enabled_keywords={'fo','f','i','t','d','w'}-set(rp.r_iterm_comm.globa)
            keyword=current_line.lstrip()
            if single_line and before_line and 'class '.startswith(before_line) and not after_line:
                #c|   --->  class _:\n|
                #cla|   --->  class _:\n|
                buffer.delete_before_cursor(100)
                buffer.insert_text('class _:\n    ')
                return
            if (not single_line or keyword in single_line_enabled_keywords) and keyword in enter_completable_keywords:
                #Examples:
                #'e|' ---> 'else:\n    |'
                #'t|' ---> 'try:\n    |'
                #'r|' ---> 'return\n|'
                char=current_line.lstrip()
                replacement=enter_completable_keywords[char]
                level=lambda candidate:find_level(before,*indent_block_matches[candidate])
                if replacement=='else:':
                    exl=level('except')
                    ell=level('else')
                    if ell is None and exl is not None or exl is not None and exl>ell:
                        text_to_speech('q')
                        replacement='except:'
                if '_' in replacement:
                    if single_line:
                        replacement=replacement.replace('_','ans')
                if not 'try' in text and replacement=='finally:':
                    replacement='for _ in ans:'
                buffer.delete_before_cursor(len(char))
                refresh_strings_from_buffer()
                indent=current_line
                assert not current_line.strip()
                # if auto_pass():buffer.insert_text('\n'+indent)
                buffer.insert_text(replacement)
                try_to_autounindent(buffer)   
                refresh_strings_from_buffer()

            if not after and before.startswith('import ') and before.endswith(', '):
                #Sometimes when using my import microcompletions I hit the space key by accident, which causes this:
                #import w as x,y as z, |
                #Which is a syntax error. Autocorrect it to:
                #import w as x,y as z
                buffer.delete_before_cursor(2)
            if before_line.lstrip() in ('def ','class ') and current_line.strip() in ('def ():','def (self):','class :') :
                #def |():  --->  'def ans():\n|'  or 'def _():\n|' 
                #class |:  --->  class _:\n|
                if single_line:
                    buffer.insert_text('ans')
                else:
                    buffer.insert_text('_')
            #we might have made some changes; refreshing:
            refresh_strings_from_buffer()

        # if  (after_line.startswith('"""') and before_line.endswith ('"""')) or\
        #     (after_line.startswith("'''") and before_line.endswith ("'''")):
        #     print("ASOID")
        #     b.insert_text('\n')
        #     return
        def at_the_end(b):
            """ we consider the cursor at the end when there is no text after
            the cursor, or only whitespace. """
            assert isinstance(b,Buffer)
            refresh_strings_from_buffer()
            #region RYAN BURGERT STUFF
            text=after
            assert isinstance(text,str)
            if self_dot_var_equals_var(buffer) or (before_line.lstrip() and not beginswithany(before_line[::-1],' ',',',':',';','{','[','"""',"'''") and not '"""' in before_line and not "'''" in before_line and '(' in before_line or beginswithany(before_line.lstrip(),'for ','def ','lambda ','while ','with ','if ','except ','try ') or not text or text.split('\n')[0] in ["):",']',')','}',':']):# Presumably at the end of def( a,b,c,d,e^): where ^ is cursor
                event.cli.current_buffer.cursor_right(1000000)# Move cursor to end of line then proceed as normal
                text = b.document.text_after_cursor
            #endregion
            return text == '' or (text.isspace() and not '\n' in text)
        if single_line:#single-line commands are entered immediately.
            if not current_line.rstrip().endswith(':') \
            and not     endswithany(current_line.lstrip(),'@',"'''",'"""') \
            and not starts_with_any(current_line.lstrip(),'@',"'''",'"""'):
                b.accept_action.validate_and_handle(event.cli, b)
                # print("JI")
                # return
        # if at_the_end(b):# TODO Stuff here
            # print("""def a b c d e (enter)
# ->
# def a(b,c,d,e):
# """)
        if python_input.paste_mode:
            # In paste mode, always insert text.
            b.insert_text('\n')

        elif at_the_end(b) and b.document.text.replace(' ', '').endswith('\n' * (empty_lines_required - 1)):
            if b.validate():
                # When the cursor is at the end, and we have an empty line:
                # drop the empty lines, but return the value.
                b.document = Document(
                    text=b.text.rstrip(),
                    cursor_position=len(b.text.rstrip()))
                b.accept_action.validate_and_handle(event.cli, b)
        else:
            auto_newline(b)
            if continue_comment:
                #'#Foo|'-->'#Foo\n#|'
                buffer.insert_text('#')


    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:
            # Only when the `confirm_exit` flag is set.
            python_input.confirm_exit and
            # And the current buffer is empty.
            cli.current_buffer_name == DEFAULT_BUFFER and
            not cli.current_buffer.text))
    def _(event):
        """
        Override Control-D exit, to ask for confirmation.
        """
        python_input.show_exit_confirmation = True




    @handle(Keys.F5, filter=Condition(lambda cli: python_input.show_sidebar))#Only activate when the sidebar is visible
    def _(event):
        from rp.prompt_toolkit.shortcuts import confirm
        from rp import input_yes_no,clear_terminal_screen

        import rp.rp_ptpython.python_input as rrpi

        clear_terminal_screen()
        if input_yes_no("Ryan Python\nPlease Confirm: Are you sure you want to this menu's settings (the F2 menu)?\nIf you choose yes, they'll be saved for the next time you boot rp.\nNote: You can also do this with the 'PT SAVE' command."):
            run_arbitrary_code_without_destroying_buffer("PT SAVE",event)
            print("Saved the F2 menu's current settings; you'll see them again when you reboot rp!")
        else:
            clear_terminal_screen()
            event.cli.renderer.clear()

    return registry


def load_sidebar_bindings(python_input):
    """
    Load bindings for the navigation in the sidebar.
    """
    registry = Registry()

    handle = registry.add_binding
    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)

    @handle(Keys.Up, filter=sidebar_visible)
    @handle(Keys.ControlP, filter=sidebar_visible)
    @handle('k', filter=sidebar_visible)
    def _(event):
        " Go to previous option. "
        python_input.selected_option_index = (
            (python_input.selected_option_index - 1) % python_input.option_count)

    @handle(Keys.Down, filter=sidebar_visible)
    @handle(Keys.ControlN, filter=sidebar_visible)
    @handle('j', filter=sidebar_visible)
    def _(event):
        " Go to next option. "
        python_input.selected_option_index = (
            (python_input.selected_option_index + 1) % python_input.option_count)

    @handle(Keys.Right, filter=sidebar_visible)
    @handle('l', filter=sidebar_visible)
    @handle(' ', filter=sidebar_visible)
    def _(event):
        " Select next value for current option. "
        option = python_input.selected_option
        option.activate_next()

    @handle(Keys.Left, filter=sidebar_visible)
    @handle('h', filter=sidebar_visible)
    def _(event):
        " Select previous value for current option. "
        option = python_input.selected_option
        option.activate_previous()

    @handle(Keys.ControlC, filter=sidebar_visible)
    @handle(Keys.ControlG, filter=sidebar_visible)
    @handle(Keys.ControlD, filter=sidebar_visible)
    @handle(Keys.ControlJ, filter=sidebar_visible)
    @handle(Keys.Escape, filter=sidebar_visible)
    def _(event):
        " Hide sidebar. "
        python_input.show_sidebar = False

    return registry


def load_confirm_exit_bindings(python_input):
    """
    Handle yes/no key presses when the exit confirmation is shown.
    """
    registry = Registry()

    handle = registry.add_binding
    confirmation_visible = Condition(lambda cli: python_input.show_exit_confirmation)

    @handle('y', filter=confirmation_visible)
    @handle('Y', filter=confirmation_visible)
    @handle(Keys.ControlJ, filter=confirmation_visible)
    @handle(Keys.ControlD, filter=confirmation_visible)
    def _(event):
        """
        Really quit.
        """
        event.cli.exit()

    @handle("n", filter=confirmation_visible)
    # @handle("N", filter=confirmation_visible)
    @handle(Keys.Any, filter=confirmation_visible)
    def _(event):
        """
        Cancel exit.
        """
        python_input.show_exit_confirmation = False

    return registry
diddly=0

def auto_newline(buffer):
    r"""
    Insert \n at the cursor position. Also add necessary padding.
    """
    insert_text = buffer.insert_text

    if buffer.document.current_line_after_cursor:
        # When we are in the middle of a line. Always insert a newline.
        insert_text('\n')
    else:
        # Go to new line, but also add indentation.
        current_line = buffer.document.current_line_before_cursor.rstrip()
        insert_text('\n')

        # Unident if the last line ends with 'pass', remove four spaces.
        unindent = current_line.rstrip().endswith(' pass') or current_line.lstrip().startswith('return ') or current_line.lstrip().startswith('raise ')  or current_line.strip()==('break') or  current_line.strip()==('continue') or  current_line.strip()==('raise') or  current_line.strip()==('pass')or  current_line.strip()==('return')

        # Copy whitespace from current line
        current_line2 = current_line[4:] if unindent else current_line

        for c in current_line2:
            if c.isspace():
                insert_text(c)
            else:
                break

        # If the last line ends with a colon, add four extra spaces.
        if current_line[-1:] == ':':
            for x in range(4):
                insert_text(' ')
None
ans='#TODO on space, if current name is not a function\n#TODO fix autocomplete issues: backspace shouldn\'t erase everything, it should be faster, should highlight callables a different color, should let me immediately search in the middle of a word,3 shouldn\'t be persistent when I hit the enter key and the cursor is no longer on the keyword,\n#TODO add a way to add a space without any of my autocomplete nonsense\n\n#RULES:\n    #Should follow normal typing even (such as import import --> import)\n    #Should not use memory outisde current text (a few exceptions but they\'re exceptions not the rule)\n    #Should be activated on the fringes of useless or invalid syntax\n\n#TODO: Autocomplete "is" and "in" and "is not" and "and" and "or" (and any other alphabetic operators):\n    #When NOT in a string: (WE NEED STRING AREA DETECTION):\n        #On press \'a\': "x |" ---> "x and |"\n        #(because in no other situation would you need that space)\n    #How to handle conflict: "in" vs "is":\n        #Branch prediction: figure out how to predict which one the user uses more often.  #Let\'s say they use \'in\' more often; more specifically, if the variable to the left has a __contains__ function:\n            #On press i: "x |" ---> "x in |"\n        #Let\'s say that the user actually wanted "is". Because of the rule that normal typing should be supported:\n            #On press s: "x in |" ---> "x is |"\n    #Shouldn\'t REALLY be limited to just spaces (should also allow \')\',\']\',\'\')\n\n#Hold alt to make space act normal.\n\n\nfrom __future__ import unicode_literals\nimport re\nfrom rp.prompt_toolkit.document                    import Document\nfrom rp.prompt_toolkit.enums                       import DEFAULT_BUFFER\nfrom rp.prompt_toolkit.filters                     import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\nfrom rp.prompt_toolkit.key_binding.vi_state        import InputMode\nfrom rp.prompt_toolkit.key_binding.registry        import Registry,_Binding\nfrom rp.prompt_toolkit.keys                        import Keys,Key\nfrom rp.prompt_toolkit.buffer                      import Buffer\nfrom rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent\n\ndef get_all_function_names(code:str):        \n    #Return all the names of all functions defined in the given code, in the order that they appear\n    from rp import lrstrip_all_lines,line_split\n    lines=line_split(lrstrip_all_lines(code))\n    import re\n    defs=[line for line in lines if re.fullmatch(r\'\\s*def\\s+\\w+\\s*\\(.*\',line)]\n    func_names=[d[len(\'def \'):d.find(\'(\')].strip() for d in defs]\n    return func_names\n\ndef run_code_without_destroying_buffer(event,put_in_history=True):\n    #Run the code in the buffer without clearing it or destroying cursor position etc\n    buffer=event.cli.current_buffer\n    import rp.r_iterm_comm as ric\n    ric.dont_erase_buffer_on_enter+=[\'DO IT\']\n    buffer.accept_action.validate_and_handle(event.cli, buffer,put_in_history=put_in_history)\n\ndef run_arbitrary_code_without_destroying_buffer(code,event,put_in_history=True):\n    buffer=event.cli.current_buffer\n    original_document=buffer.document\n    buffer.document = Document(text=code)#Temporarily change the text in the buffer\n        # cursor_position=len(\'\'.join(lines_before + reshaped_text)))\n    run_code_without_destroying_buffer(event,put_in_history=put_in_history)\n    buffer.document=original_document#Put the old text/cursor pos/etc back. Dont mutate the buffer\n\ndef handle_run_cell(event):\n    #Happens when we press control+w or alt+w\n    #Run current cell between the boundary prefixes\n    buffer=event.cli.current_buffer\n    def main():\n        text=buffer.document.text\n        cursor_pos=buffer.cursor_position\n        cell_code=get_cell_code(text,cursor_pos,cell_boundary_prefix)\n        from rp import fansi_print\n        # fansi_print("RUNNING CODE CELL:",\'blue\',\'bold\')\n        # fansi_print(cell_code,\'blue\')\n\n        #When we do this, don\'t include that spam in our history...right? Maybe I\'ll change my mind in the future...I can\'t decide...like, it\'s annoying but it\'s truthful...\n        run_arbitrary_code_without_destroying_buffer(cell_code,event,put_in_history=True)#To include or not to include...which one??\n    main()\n\ndef edit_event_buffer_in_vim(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        text=buffer.document.text   \n        from rp import text_file_to_string,temporary_file_path,string_to_text_file\n        import subprocess\n\n        path=temporary_file_path()+\'.py\'\n        string_to_text_file(path,text)\n\n        lineno=document.text_before_cursor.count(\'\\n\')\n        colno=document.cursor_position_col\n\n        #+=1 because vim\'s line/col numbers start at 1, not 0\n        colno+=1\n        lineno+=1\n\n        try:\n            try:\n                subprocess.call(["vim",path,\'+call cursor(%i,%i)\'%(lineno,colno),\'+normal zz\'])#https://stackoverflow.com/questions/3313418/starting-vim-at-a-certain-position-line-and-column-of-a-file\n            except:\n                subprocess.call(["vi",path,\'+call cursor(%i,%i)\'%(lineno,colno),\'+normal zz\'])#If it doesn\'t work with vim, try vi. vi is installed on basically every computer by default (except windows)\n        except FileNotFoundError as error:\n            buffer.insert_text(\'#ERROR: Cant find vim. Are you sure its installed? \'+str(error))\n            return True\n\n        text=text_file_to_string(path)\n\n        from rp import delete_file\n        delete_file(path)\n\n        if text!=\'\':\n            #That means the user saved the file\n            buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n\n        event.cli.renderer.clear()#Refresh the screen\n\n        try:\n            #Attempt to restore the cursor position from vim and use it in rp\n            #I\'m still not 100% sure if this will always work; so for now I\'m going to squelch any errors.\n            import os\n            def get_viminfo():return \'\\n\'.join(open(os.path.expanduser(\'~/.viminfo\'),errors=\'ignore\').readlines())\n            def get_last_cursor_row_in_vim():    return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[ 1]))\n            def get_last_cursor_column_in_vim(): return int(os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[ 2]))\n            def get_last_path_edited_in_vim():   return     os.path.expanduser([line for line in get_viminfo().splitlines() if line.startswith("\'0 ")].pop().split()[-1])\n            from rp import get_file_name\n            if get_file_name(get_last_path_edited_in_vim())==get_file_name(path):\n                #We recently edited the file, and we should attempt to restore the cursor\n                buffer.set_cursor_column(get_last_cursor_column_in_vim())\n                buffer.set_cursor_row(get_last_cursor_row_in_vim()-1 )\n        except:\n            pass\n\ndef split_python_tokens(string,return_tokens=False,ignore_errors=True):\n    #return_tokens is as opposed to returning the strings of those tokens, and thus returning a list of strings (the default behaviour)\n    #if ignore_errors, ignore any parsing errors and keep parsing tokens (return all tokens, even the ones that causes errors such as unterminated strings etc)\n    #EXAMPLES:\n    #    ⮤ split_python_tokens(\'aosid aoisjd aois   j d; \')\n    #    ans = [\'aosid\', \'aoisjd\', \'aois\', \'j\', \'d\', \';\']\n    #    ⮤ split_python_tokens(\' lambda x: 3,1\')\n    #    ans = [\' \', \'lambda\', \'x\', \':\', \'3\', \',\', \'1\', \'\']\n    import tokenize\n    i=iter(string.splitlines())\n    def f():return next(i).encode()\n    token_iterator=tokenize.tokenize(f)\n    tokens=[]\n    while True:\n        try:\n            tokens.append(next(token_iterator))\n        except StopIteration:\n            break\n        except:\n            if ignore_errors:\n                continue\n            else:\n                raise\n    tokens=tokens[1:]#The first and last token are never useful (just begin/end of field tokens. Even tokenizing an empty string would yield these two tokens.)\n    if tokens and tokens[-1].type==tokenize.ENDMARKER:#This token is useless imho. Especially when we\'re trying to return strings split from python tokens. It just adds an empty string to the end of the output. Useless...\n        del tokens[-1]\n    if return_tokens:\n        return tokens\n    else:\n        return [token.string for token in tokens]\n\ndef get_ans():\n    import rp.r_iterm_comm as ric\n    if \'ans\' in ric.globa:\n        return ric.globa[\'ans\']\n    else:\n        return None\n\n\ndef do_vim_copy(string):\n    import rp\n    global _copied_string\n    rp.vim_copy(string)\n    # _copied_string=string\n\ndef do_local_copy(string):\n    import rp\n    global _copied_string\n    rp.local_copy(string)\n    # _copied_string=string\n\ndef do_tmux_copy(string):\n    import rp\n    global _copied_string\n    rp.tmux_copy(string)\n    # _copied_string=string\n\ndef do_vim_paste(buffer,repr_mode=False,commented=None):\n    import rp\n    try:\n        if repr_mode:\n            text=repr(rp.vim_paste())\n        else:\n            text=str(rp.vim_paste())\n\n        if commented is not None:\n            text=commented_string(buffer,text,spaces=commented)\n\n        buffer.insert_text(text)\n    except:\n        pass\n\ndef do_tmux_paste(buffer,repr_mode=False,commented=None):\n    import rp\n    try:\n        if repr_mode:\n            text=repr(rp.tmux_paste())\n        else:\n            text=str(rp.tmux_paste())\n\n        if commented is not None:\n            text=commented_string(buffer,text,spaces=commented)\n\n        buffer.insert_text(text)\n    except:\n        pass\n\ndef do_web_copy(string):\n    import rp\n    global _copied_string\n    rp.web_copy(string)\n    # _copied_string=string\n\ndef do_local_paste(buffer,repr_mode=False):\n    import rp\n    try:\n        if repr_mode:\n            buffer.insert_text(repr(str(rp.local_paste())))\n        else:\n            buffer.insert_text(str(rp.local_paste()))\n    except:\n        pass\ndef do_web_paste(buffer,repr_mode=False):\n    import rp\n    try:\n        if repr_mode:\n            buffer.insert_text(repr(str(rp.web_paste())))\n        else:\n            buffer.insert_text(str(rp.web_paste()))\n    except:\n        pass\n\n_copied_string=""\ndef do_copy(string):\n    import rp\n    global _copied_string\n    rp.string_to_clipboard(string)\n    _copied_string=string\n\ndef commented_string(buffer,string,spaces=0):\n    if isinstance(spaces,int):\n        spaces=\' \'*spaces\n    cursor_column=buffer.document.cursor_position_col\n    string=string.split(\'\\n\')\n    string=[\'#\'+spaces+x for x in string]\n    flag=False\n    for index,line in enumerate(string):\n        if flag:\n            string[index]=\' \'*cursor_column+line\n        flag=True\n    string=\'\\n\'.join(string)\n    return string\n\ndef do_paste(buffer,commented:int=None):\n    import rp\n    string=rp.string_from_clipboard()\n    if commented is not None:string=commented_string(buffer,string,spaces=commented)\n    buffer.insert_text(string)\n\ndef do_string_paste(buffer):\n    import rp\n    buffer.insert_text(repr(rp.string_from_clipboard()))\nimport rp.r_iterm_comm as ric\nenable_space_autocompletions=ric.enable_space_autocompletions#This variable is a list that\'s mutated between being empty and being full, which toggles it\'s truth value. This feature isn\'t completely figured out yet...I suppose it\'s better to disable it for the time being...\n\nfrom rp import *\n__all__ = (\n    \'load_python_bindings\',\n    \'load_sidebar_bindings\',\n    \'load_confirm_exit_bindings\',\n)\nfrom rp import *\n\ndef toggle_top_line_text(buffer,top_line=\'debug()\\n\'):\n    text=buffer.document.text\n    old_cursor_pos=buffer.document.cursor_position\n    buffer.cursor_up(99999)\n    buffer.cursor_left(99999)\n    if text.startswith(top_line):\n        #Delete \'debug()\' from the top\n        buffer.delete(len(top_line))\n        buffer.document=Document(buffer.document.text,old_cursor_pos-len(top_line),buffer.document.selection)\n    else:\n        #Insert \'debug()\' at the top\n        buffer.insert_text(top_line)\n        buffer.document=Document(buffer.document.text,old_cursor_pos+len(top_line),buffer.document.selection)\ndef toggle_bottom_line_text(buffer,bottom_line):\n    def toggled_last_line(string,line):\n        # print()\n        # print("BEFORE:"+repr(string))\n        lines=string.splitlines() or [\'\']\n        if line==lines[-1]:\n            del lines[-1]\n        else:\n            lines.append(line)\n        out=\'\\n\'.join(lines)\n        # print("AFTER:"+repr(out))\n        # print()\n        return out\n    text=buffer.document.text\n    old_cursor_pos=buffer.document.cursor_position\n    new_text=toggled_last_line(text,bottom_line)\n    buffer.document=Document(new_text,min(old_cursor_pos,len(new_text)-1),buffer.document.selection)\n\nn_makes_in_and_s_makes_is=True#This is imperfect and got annoying\ns_makes_is=True#This is imperfect and got annoying\n\ndef text_to_speech(words):\n    try:\n        from rp import text_to_speech\n        text_to_speech(words)\n    except:pass#Who cares if this doesn\'t work, it\'s just for debugging anyway...\n\n\n# alt_updown_speed=\n# def any_key_pressed_prefix(key,buffer):\n#     #This function should include only things that happen during every keystroke. \n#     #If this function returns True, it cancels the rest of the execution. \n#     #This function happens before anything else.\n#     alt_updown_speed=3\n#     return False\n\n\n#region code cells\n#See https://asciinema.org/a/Hwj84iFknDtqIh5Tag2Eug6aj\ncell_boundary_prefix=\'##\'#SETTINGS\ndef separator_boundaries(code,separator_token):\n    #Return cursor positions of the beginning of each boundary, including the start and end of the string\n    #code="""@handle(Keys.ControlU)\n#    def _(event):\n#        +++\n#        +\n#            buffer=event.cli.current_buffer\n#            buffer.insert_text(\'UNDO\')\n#            +++\n#        @handle(Keys.ControlP)\n#        def _(event):\n#            +++  Hello\n#            -\n#            buffer=event.cli.current_buffer\n#+++"""\n    #separator_boundaries(code,\'+++\')  ->  [0, 40, 145, 214, 295, 299]\n    #NOTE THE -1 and len()+1 at either side were originally 0 and len(), but for practicality (executing cells where the cursor is at the beginning or end of the text) I did this as a quick hack.\n     # The examples are slightly different than the current code because of this.\n    return [-1]+[x.span()[0] for x in re.finditer(r\'((?<=(\\n))|^) *\'+re.escape(separator_token),code)]+[len(code)+1]\ndef above_and_below(value,L):\n    #Examples:\n    # ⮤ above_and_below(30,[2, 3, 13, 27, 28, 35, 35, 52, 90, 95])\n    #ans = (28, 35)\n    #\n    # ⮤ above_and_below(4,[1,3,7,8,9])\n    #ans = (3, 7)\n    # ⮤ above_and_below(100,[1,3,7,8,9])\n    #ans = (9, 100)\n    # ⮤ above_and_below(0,[3,7,8,9])\n    #ans = (0, 3)\n    return max((x for x in L if x<=value),default=min(L)),min((x for x in L if x>=value),default=max(L))\ndef get_cell_code(text,cursor_pos,prefix=cell_boundary_prefix):\n    #EXAMPLE:\n    # ⮤ code\n    #ans = @handle(Keys.ControlU)\n    #    def _(event):\n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    #            ###  Hello\n    #            -\n    #            buffer=event.cli.current_buffer\n    ####\n    # ⮤ separator_boundaries(code,\'###\')\n    #ans = [0, 40, 145, 214, 295, 299]\n    # ⮤ get_cell_code(code,30,\'###\')\n    #ans = @handle(Keys.ControlU)\n    #    def _(event):\n    # ⮤ get_cell_code(code,41,\'###\')\n    #ans = \n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    # ⮤ get_cell_code(code,67,\'###\')\n    #ans = \n    #        ###\n    #        +\n    #            buffer=event.cli.current_buffer\n    #            buffer.insert_text(\'UNDO\')\n    # ⮤ get_cell_code(code,213,\'###\')\n    #ans = \n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    # ⮤ get_cell_code(code,150,\'###\')\n    #ans = \n    #            ###\n    #        @handle(Keys.ControlP)\n    #        def _(event):\n    start,end=above_and_below(cursor_pos,separator_boundaries(text,prefix))\n    return text[max(0,start):min(len(text),end)]\n#endregion\n\ndef swap_from_import(line):\n    try:\n        #EXAMPLES:\n        #     >>> swap_from_import(\'   import jugio as gi\')\n        #    ans =    from jugio import\n        #     >>> swap_from_import(\'   from bugg.malo import bees\')\n        #    ans =    import bugg.malo\n        whitespace=line[:len(line)-len(line.lstrip())]\n        line=line[len(whitespace):]\n        items=line.split()\n        items=items[:2]\n        if items[0]==\'from\':\n            items[0]=\'import\'\n        elif items[0]==\'import\':\n            items[0]=\'from\'\n            items.append(\'import \')        \n        line=\' \'.join(items)\n        return whitespace+line\n    except Exception:\n        return line\n\nalign_char=\'→\'\ndef align_lines_to_char(string,char=align_char,space=\' \'):\n    #EXAMPLE:\n    #    SPASTE\n    #    ans = from rp.prompt_toolkit.document →import Document\n    #    from rp.prompt_toolkit.enums →import DEFAULT_BUFFER\n    #    from rp.prompt_toolkit.filters →import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\n    #    from rp.prompt_toolkit.key_binding.vi_state →import InputMode\n    #    from rp.prompt_toolkit.key_binding.registry →import Registry\n    #    from rp.prompt_toolkit.keys →import Keys,Key\n    #    from rp.prompt_toolkit.buffer →import Buffer\n    #    ⮤ print(align(ans))\n    #    from rp.prompt_toolkit.document             import Document\n    #    from rp.prompt_toolkit.enums                import DEFAULT_BUFFER\n    #    from rp.prompt_toolkit.filters              import HasSelection, IsMultiline, Filter, HasFocus, Condition, ViInsertMode, EmacsInsertMode\n    #    from rp.prompt_toolkit.key_binding.vi_state import InputMode\n    #    from rp.prompt_toolkit.key_binding.registry import Registry\n    #    from rp.prompt_toolkit.keys                 import Keys,Key\n    #    from rp.prompt_toolkit.buffer               import Buffer\n    assert len(space)==1\n    lines=string.splitlines()\n    while any([char in x for x in lines]):\n        alignto=0\n        for i,line in enumerate(lines):\n            if char in line:\n                alignto=max(line.find(char),alignto)\n        for i,line in enumerate(lines):\n            if char in line:\n                pos=line.find(char)\n                line=line[:pos]+space*(alignto-pos)+(line[pos+1:] if len(line)-1!=pos else \'\')\n                lines[i]=line\n    out=\'\\n\'.join(lines)\n    return out\n\ndef split_def_arguments_into_multiple_lines(single_line_def):    \n    # print("GOT "+repr(single_line_def))\n    #EXAMPLE:\n    #INPUT:  \'def play_chord(*semitones:list,t=1,block=True,sampler=triangle_tone_sampler):\'\n    #OUTPUT:\n    #def play_chord(*semitones:list,\n    #               t=1,\n    #               block=True,\n    #               sampler=triangle_tone_sampler):\n    s=single_line_def\n    try:\n        import re\n        assert re.fullmatch(r\' *def .*: *(#.*)?\',s)\n        l=s.split(\',\')\n        w=l[0].find(\'(\')\n        assert w!=-1\n        o=[]\n        o.append(l.pop(0)+\',\')\n        for _ in range(len(l)):\n            o.append(\' \'+\' \'*w+l.pop(0)+\',\')\n        o=\'\\n\'.join(o)\n        o=o[:-1]\n        return o\n    except Exception as E:\n        return s\n            \ndef keys(root):\n    #Stolen from rinsp_search\n    out=set()\n    try:out.update(dir(root))\n    except:pass\n    try:out.update(root.__dict__)\n    except:pass\n    return sorted(out)\n            \ndef find_all_substring_matches(string,substring):\n    #Return a list of starting indices\n    #https://stackoverflow.com/questions/4664850/how-to-find-all-occurrences-of-a-substring\n    #EXAMPLE:\n    #    ⮤ find_all_substring_matches(\'jojo my jojo its jojo\',\'jojo\')\n    #    ans = [0, 8, 17]\n    return [m.start() for m in re.finditer(re.escape(substring), string)]\ndef token_exists(token_name):\n    from rp import is_namespaceable\n    if not is_namespaceable(token_name):\n        return False#We don\'t want to run eval on anything except tokens...\n    try:\n        eval(token_name,ric.globa)\n        return True\n    except:\n        return False#be on the safe side with space-function completions\ndef token_name_found_of_interest(before_line)->(str,object,bool):\n    from rp import is_namespaceable\n    token_of_interest=name_of_interest=None\n    try:\n        # fansi_print("\\n\\n"+split[-1]+"\\n\\n")\n\n        string=\'\'\n        for char in reversed(before_line):\n            if not (is_namespaceable(char) or char in \'0987654321\') and char not in \'.\':\n                break\n            string=char+string\n        name_of_interest=string\n        # print("HE")\n        token_of_interest=eval(string,r_iterm_comm.globa)  # ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects\n        # print("HOO",token_of_interest)\n        #\n        # for char in string:\n        #     if not char.isalnum() and char not in \'.\' and not is_namespaceable(char):\n        #         string=string.replace(char,\' \')\n        # name_of_interest=string\n        # token_of_interest=eval(string,r_iterm_comm.globa)# ≣token_of_interest=r_iterm_comm.rp_evaluator(string,True)# Should be just a name so there should be no side effects\n    except:token_of_interest,name_of_interest,False#No variable called that was found\n    return token_of_interest,name_of_interest,True\ndef starts_with_any(string,*prefixes):\n    for p in prefixes:\n        if string.startswith(p):\n            return True\n    return False\n\ndef cursor_on_string(text,cpos):\n    #NOT accurate, dont put into the main RP library\n    #EXAMPLE:\n    # ⮤ def f(s):\n    #2     print(s)\n    #3     print(\'\'.join([str(int(bool(cursor_on_string(s,i))))for i in  range(len(s))]))\n    #4 \n    #⮤ f(\'hello="Helo"+234\')\n    #hello="Helo"+234   <--- this works well because theresno whitespace between hello and = and "Helo"\n    #0000001111110000\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            try:\n                return isinstance(eval(token),str)\n            except:\n                return False\n        count+=len(token)\n    return False\n\ndef cursor_on_comment(text,cpos,tokens):\n    #NOT accurate, dont put into the main RP library\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            try:\n                return token.startswith(\'#\')\n            except:\n                return False\n        count+=len(token)\n    return False\n\ndef current_token(text,cpos):\n    #NOT accurate, dont put into the main RP library\n    import rp\n    tokens=split_python_tokens(text)\n    count=0\n    for token in tokens:\n        if count+len(token)>cpos:\n            return token\n        count+=len(token)\n    return \'\'\n\ndef true_get_if_in_string_or_comment(before_line,after_line,buffer):\n    #This function IS not totally acurate, becauwe of a hack where I replace whitespace with other characters to trick the tokenizer into keeping cursor positoin relevant\n    text=buffer.document.text#+\' \'#add space to prevent last char from returning false\n    text=text.replace(\' \',\'+\').replace(\'\\n\',\'\\n+\')#Python tokenize gets rid of whitespace and newlines which we need to count but adding +\'s still preserves whats  a string and whats a comment. its a quick cheap hack.\'\n    cpos=buffer.document.cursor_position-1\n    token=current_token(text,cpos)\n    out=False\n    try:\n        if isinstance(eval(token),str):\n            out= True\n    except:pass\n    out=out or token.startswith(\'#\')\n    if out:\n        # print("WAH")\n        return True \n    return False\n\n    # if cursor_on_string(text,cpos) or cursor_on_comment(text,cpos):\n        # print("WAHH")\n        # return True\n    # return False\n    # return \'"\' in before_line and after_line.count(\'"\')==before_line.count(\'"\') or \\\n                                       # "\'" in before_line and after_line.count("\'")==before_line.count("\'") or \\\n                                       # \'#\' in before_line\n\n_previous_after_line=None\n_previous_before_line=None\n_previous_result=False\ndef get_if_in_string_or_comment(before_line,after_line,buffer):\n    if not \'\\n\' in buffer.text:\n        if re.fullmatch(r\'((!|!!|CD |RUN |([A-Z]+ )).*)\',before_line):#Things we want to turn microcompletions off for\n            return True\n    #This function attempts to make an nearly equivalent but faster version of true_get_if_in_string_or_comment\n    global _previous_result,_previous_after_line,_previous_before_line\n    if after_line!=_previous_after_line or\\\n          before_line.count(\'#\')!=_previous_before_line.count(\'#\') or\\\n          before_line.count("\'")!=_previous_before_line.count("\'") or\\\n          before_line.count(\'"\')!=_previous_before_line.count(\'"\'):\n        _previous_result=true_get_if_in_string_or_comment(before_line,after_line,buffer)\n    _previous_after_line =after_line\n    _previous_before_line=before_line\n    return _previous_result \n\n\n_meta_pressed=[]\ndef meta_pressed(clear=True):#This should only be called once per keystroke\n    out=bool(_meta_pressed)\n    if clear:\n        _meta_pressed.clear()\n    return out\n\ndef line_above(buffer):\n    return line_above_document(buffer.document)\n\ndef line_above_document(document):\n    before=document.text_before_cursor\n    if not \'\\n\' in before:\n        return None\n    before_lines=before.split("\\n")\n    return before_lines[-2]\n\n\ndef beginswithany(a,*b):\n    for x in b:\n        if a.startswith(x):\n            return True\n    return False\n\ndef ends_with_namespaceable(s):\n    #      ⮤ ends_with_namespaceable(\'oaisjdoiasd\')\n    # ans = True\n    #  ⮤ ends_with_namespaceable(\'oaisj[doiasd\')\n    # ans = True\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doiasd\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doi4asd\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[4doi4as5d\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'oaisj[234234\')\n    # ans = False\n    #  ⮤ ends_with_namespaceable(\'234,oaisj\')\n    from rp import is_namespaceable\n    last_char=\'\'\n    for c in reversed(s):\n        if not is_namespaceable(c) and not c.isnumeric():\n            return not last_char.isnumeric()\n        last_char=c\n    return bool(last_char)\ndef ends_with_number(s):\n    #  ⮤ ends_with_number(\'osdi[f[4\')\n    # ans = True\n    #  ⮤ ends_with_number(\'osdi[f[d4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdiasdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia34534sdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia3asdfasd.4534sdf4\')\n    # ans = False\n    #  ⮤ ends_with_number(\'osdia3asdfasd.4534sdf.4\')\n    # ans = True\n    from rp import is_namespaceable\n    last_char=\'\'\n    for c in reversed(s):\n        if not c.isnumeric():\n            return not is_namespaceable(c)\n        last_char=c\n    return bool(last_char)\ndef so_far(s):\n    #EXAMPLES:\n    # >> so_far(\'asod jasoidj a: soajdo is\')\n    #ans = \'soajdo is\'\n    # >> so_far(\'asod jasoidj a: soaasd ajdo is\')\n    #ans = \'soaasd ajdo is\'\n    # >> so_far(\'asod jasoidj a:retu\')\n    #ans = \'retu\'\n    i=s.rfind(\':\')\n    s=s[i+1:]\n    s=s.strip()\n    return s\ndef splinterify(x):\n    #For use in regex expression prefixes\n    #EXAMPLES:\n    # >> splinterify(\'hello\')\n    #ans = \'h|he|hel|hell\'\n    # >> splinterify(\'world\')\n    #ans = \'w|wo|wor|worl\'\n    out=[]\n    for i in range(1,len(x)):\n        out.append(x[:i])\n    return \'|\'.join(out)\ndef indent_hiearchy(s:str):\n    """\n    Takes a str such as:\n\'\'\'\ndef hiu(iub):\n    ewq(ojhi)\n    if h:\n        apple\n        hio\n            iuy\n              ioo\'\'\'\n    And returns:\n    [\'              ioo\',\n     \'            iuy\',\n     \'        hio\',\n     \'    if h:\',\n     \'def hiu(iub):\']\n    """\n    o=None\n    for l in reversed(s.splitlines()):\n        if o is None or not l.startswith(o):\n            yield l\n            o=get_indent(l)\n            if not o:\n                break\ndef find_header(code:str,*line_starts:str)->str:\n    #(was originally just find_level, see it\'s purpose)\n    #this function returns the entire line itself instead of just the number of indents\n    #returns None if not in such a block\n    for i,e in enumerate(indent_hiearchy(code)):\n        if starts_with_any(e.lstrip(),*line_starts):\n            return e\n    return None\ndef find_level(code:str,*line_starts:str)->int:\n    #return the unindents needed (assumed to be spaces) to reach block starting with any string from line_starts\n    #returns None if not in such a block\n    header=find_header(code,line_starts)\n    if header is None:\n        return None\n    return len(get_indent(header))\ndef get_indent(line):\n    #returns a string that just contains the line\'s indent\n    return line[:len(line)-len(line.lstrip())]\ndef endswithany(a,*b):\n    for x in b:\n        if a.endswith(x):\n            return True\n    return False\ndef in_class_func_decl(buffer):#can be easily memoized but i wont bother unless its an issue; (prob got bigger probs tbh)\n    document=buffer.document\n    current_line=document.current_line\n    before_line=document.current_line_before_cursor\n    after_line=document.current_line_after_cursor\n    before=document.text_before_cursor\n    after= document.text_after_cursor\n    lines=reversed(before.split(\'\\n\'))\n    indent=get_indent(before_line)\n    for line in lines:\n        if not line.startswith(indent):\n            return line.lstrip().startswith(\'class \')\n    return False\nclass TabShouldInsertWhitespaceFilter(Filter):\n    """\n    When the \'tab\' key is pressed with only whitespace character before the\n    cursor, do autocompletion. Otherwise, insert indentation.\n\n    Except for the first character at the first line. Then always do a\n    completion. It doesn\'t make sense to start the first line with\n    indentation.\n    """\n    def __call__(self, cli):\n        b = cli.current_buffer\n        before_cursor = b.document.current_line_before_cursor\n\n        return bool(b.text and (not before_cursor or before_cursor.isspace()))\n\ndef has_selected_completion(buffer):# If we have a completion visibly selected on the menu\n    return buffer.complete_state and buffer.complete_state.complete_index is not None\nlast_pressed_dash=False\n\n\nclass CommentedParenthesizerAutomator:\n    def __init__(self,\n        upper_marker=\'#\',\n        lower_marker=\'#\',\n        match_indent=True\n        ):\n    # def __init__(self,\n    #     upper_marker=\'#╵\',\n    #     lower_marker=\'#╷\',\n    #     match_indent=True\n    #     ):\n        self.upper_marker=upper_marker\n        self.lower_marker=lower_marker\n        self.match_indent=match_indent#If true, indent the parnthesis comments along with the rest of the code. Otherwise, start the parenthesizer comments at the very beginning of the line\n\n    def parenthezized_line(self,line:str)->str:\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n\n        from rp import parenthesizer_automator\n\n        original_line=line\n\n        if self.match_indent:\n            whitespace=line[:len(line)-len(line.lstrip())]\n            assert line[len(whitespace):]==line.lstrip()\n        else:\n            whitespace=\'\'\n\n        middle_line  =line[len(whitespace):]\n        parenth_lines=parenthesizer_automator(middle_line).splitlines()\n\n        assert len(parenth_lines)==0 or len(parenth_lines)%2,\'Internal logical assertion (this should never fail unless this function is broken) due to the nature of rp.parenthesizer_automator: rp.parenthesizer_automator should always return an odd number of lines, unless it returns 0 lines\'\n        if len(parenth_lines)<=1:\n            return original_line\n\n        upper_lines=parenth_lines[:len(parenth_lines)//2   ]\n        lower_lines=parenth_lines[ len(parenth_lines)//2+1:]\n\n        upper_lines=[(self.upper_marker+(upper_line[len(self.upper_marker):] if len(upper_line)>=len(self.upper_marker) else \'\')) for upper_line in upper_lines]\n        lower_lines=[(self.lower_marker+(lower_line[len(self.lower_marker):] if len(lower_line)>=len(self.lower_marker) else \'\')) for lower_line in lower_lines]\n\n        out_lines=[*upper_lines,middle_line,*lower_lines]\n        out_lines=[whitespace+out_line for out_line in out_lines]\n\n        out=\'\\n\'.join(out_lines)\n\n        return out\n\n    def is_upper_line(self,line:str)->bool:\n        if not isinstance(line,str):return False#Can\'t be an upper line if it\'s not a line...\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n        return line.lstrip().startswith(self.upper_marker) and set(line.strip())<=set(\' #│┌┐\') and set(line)&set(\'│└┘┌┐\')\n\n    def is_lower_line(self,line:str)->bool:\n        if not isinstance(line,str):return False#Can\'t be a lower line if it\'s not a line...\n        assert \'\\n\' not in line,\'Input Assertion Error: line should be a single line, but its a multiline string. line=\'+repr(line)\n        return line.lstrip().startswith(self.lower_marker) and set(line.strip())<=set(\' #│└┘\') and set(line)&set(\'│└┘┌┐\')\n\n    def is_parenthesized_at_line(self,string:str,line_number:int)->bool:\n        #Returns true if there are visible parenthesizer comments above and below the given linenumber in the given string\n        #Check for comments with the right markers above and below that line\n        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)\n\n        if line_number==0:\n            return False #You can\'t have any upper parenthesis if we\'re on the first line\n\n        lines=string.splitlines()\n        try:\n            line_above=lines[line_number-1]\n            line_below=lines[line_number+1]\n            return self.is_lower_line(line_below) and self.is_upper_line(line_above)\n        except IndexError:\n            return False\n\n    def unparenthesized(self,string,line_number)->str:\n        #Remove the parenthesizer comments around a given line number on the given string\n        lines=string.splitlines()\n\n        #Delete all lower lines\n        while True:\n            try:\n                line_below_index=line_number+1\n                line_below=lines[line_below_index]\n                if self.is_lower_line(line_below):\n                    del lines[line_below_index]\n                else:\n                    break\n            except IndexError:\n                break\n\n        #Delete all upper lines\n        line_above_index=line_number-1\n        while line_above_index>=0:\n            try:\n                line_above=lines[line_above_index]\n                if self.is_upper_line(line_above):\n                    del lines[line_above_index]\n                    line_above_index-=1\n                else:\n                    break\n            except IndexError:\n                break\n\n        return \'\\n\'.join(lines)\n\n\n    def parenthesized_at_line(self,string,line_number)->str:\n        #Insert parenthesizer comments around a given line in a string and return the result\n        lines=string.splitlines()\n        line =lines[ line_number]\n        lines=lines[line_number:line_number+1]=self.parenthezized_line(line).splitlines()\n        return \'\\n\'.join(lines)\n        \n    def unparenthesize_buffer(self,buffer)->None:\n        #Remove the parenthesizer comments around the cursor in the given buffer\n        #Delete all lower lines\n        while self.is_lower_line(buffer.document.current_line_below):\n            from rp import random_chance\n            buffer.delete_line_below_cursor()\n\n        #Delete all upper lines\n        while self.is_upper_line(buffer.document.current_line_above):\n            buffer.delete_line_above_cursor()\n\n    def parenthesize_buffer(self,buffer)->None:\n        #Insert parenthesizer comments around the cursor in a given buffer\n        current_line =buffer.document.current_line\n        cursor_column=buffer.document.cursor_position_col\n        buffer.cursor_right(999999)\n        buffer.delete_before_cursor(len(current_line))\n        new_text=self.parenthezized_line(current_line)\n        buffer.insert_text(new_text)\n        if \'\\n\' in new_text:\n            buffer.cursor_up(new_text.count(\'\\n\')//2)\n        buffer.set_cursor_column(cursor_column)\n\n    def buffer_is_parenthesized_at_cursor(self,buffer)->bool:\n        #Returns true if there are visible parenthesizer comments above and below the buffer\'s cursor\n        #Check for comments with the right markers above and below that line\n        #Used to determine whether this line is worth looking at (to see whether we must update its surroundings when using the editor)\n        return self.is_parenthesized_at_line(buffer.document.text,buffer.document.cursor_position_row)\n\n    def buffer_refresh_parenthesization(self,buffer)->None:\n        if self.buffer_is_parenthesized_at_cursor(buffer):\n            #Refresh the parenthesization\n            self.unparenthesize_buffer(buffer)\n            self.parenthesize_buffer(buffer)\n        else:\n            pass\n\n    def buffer_toggle_parenthesization(self,buffer)->None:\n        if self.buffer_is_parenthesized_at_cursor(buffer):\n            self.unparenthesize_buffer(buffer)\n        else:\n            self.parenthesize_buffer(buffer)\n\n\n        \ncommented_parenthesizer_automator=CommentedParenthesizerAutomator()\n\n\n_global_event=None\ndef post_handler(binding:_Binding,event:KeyPressEvent,old_document:Document):\n    #This function should be very lightweight, as it\'s called once after EVERY keystroke in the editor (including ones like control+e which don\'t even modify the text)\n    #I made sure that post_handler is called on every keystroke by modifying input_processor.py and replacing key_bindings.py\'s \'@handle\' with a lambda that also ensures this function is called\n    #Get the pressed char\n    char=event.data\n\n    assert isinstance(char,str)\n\n    #Get information about old_document\n    old_text         = old_document.text\n    old_current_line = old_document.current_line\n    old_after_line   = old_document.current_line_after_cursor\n    old_before_line  = old_document.current_line_before_cursor\n    old_before       = old_document.text_before_cursor\n    old_after        = old_document.text_after_cursor\n    old_above_line   = line_above_document(old_document)\n\n    #Get the buffer and related information\n    buffer=event.cli.current_buffer\n    text=document=current_line=after_line=before_line=before=after=above_line=None\n    def refresh_strings_from_buffer():\n        nonlocal text,document,current_line,after_line,before_line,before,after,above_line\n        document     = buffer.document\n        text         = buffer.document.text\n        current_line = buffer.document.current_line\n        after_line   = buffer.document.current_line_after_cursor\n        before_line  = buffer.document.current_line_before_cursor\n        before       = buffer.document.text_before_cursor\n        after        = buffer.document.text_after_cursor\n        above_line   = line_above(buffer)\n    refresh_strings_from_buffer()\n\n    if text!=old_text:\n        commented_parenthesizer_automator.buffer_refresh_parenthesization(buffer)#This is optimized and only makes changes if nessecary\n\n\ndef handle_character(buffer,char,event=None):\n    #This function should receive all VISIBLE keystrokes (such as \'a\',\'b\',\'c\',\'1\',\'2\',\'3\' but also \' \',\'\\n\',\'.\',\'$\' etc)\n    #But it should NOT receive things like backspace, backtab, or other control keys that aren\'t actually part of the code\n    #If this function returns true it overrides the other code that handles that specific char\n    from rp import is_namespaceable\n    global last_pressed_dash\n    import rp.r_iterm_comm as ric\n    import tokenize\n\n    if False:#No microcompletions\n        buffer.insert_text(char)\n        return True\n\n    text=current_line=after_line=before_line=before=after=above_line=before_tokens=after_tokens=before_line_ends_with_number=None\n    def refresh_strings_from_buffer():\n        nonlocal text,current_line,after_line,before_line,before,after,above_line,before_tokens,after_tokens,before_line_ends_with_number\n        text                = buffer.document.text\n        current_line        = buffer.document.current_line\n        after_line          = buffer.document.current_line_after_cursor\n        before_line         = buffer.document.current_line_before_cursor\n        before              = buffer.document.text_before_cursor\n        after               = buffer.document.text_after_cursor\n        above_line          = line_above(buffer)\n\n        after_tokens        = split_python_tokens(after_line ,True)\n        before_tokens       = split_python_tokens(before_line,True)\n        before_line_ends_with_number=before_tokens and before_tokens[-1].type==tokenize.NUMBER\n    refresh_strings_from_buffer()\n\n    if char==\'\\n\' and after_line in [\'"\',"\'"]:\n        #Even if (especially if) we\'re in a string...\n        #On \\n:  ‹\'|\'›  -/->  ‹\'\\n|\'›\n        #On \\n:  ‹\'|\'›  --->  ‹\'\'\\n|›\n        buffer.cursor_right(100)\n\n    if char==\' \' and meta_pressed(clear=False):\n        buffer.insert_text(\' \')#This should always work\n        meta_pressed(clear=True)\n        return True\n\n    if char==\'v\' and meta_pressed(clear=True):\n        edit_event_buffer_in_vim(event)\n        return True\n\n    if char==\'r\' and meta_pressed(clear=True):\n        run_arbitrary_code_without_destroying_buffer(repr(text),event,put_in_history=True)#To include or not to include...which one??\n        buffer.document=Document(\'\',0,buffer.document.selection)\n        return True\n\n    if char==\'q\' and meta_pressed(clear=True):\n        #Delete all\n        #Equivalent to \\da\n        buffer.document=Document(\'\',0,buffer.document.selection)\n        return True\n\n    if char==\'w\' and meta_pressed(clear=True):\n        handle_run_cell(event)\n        return True\n\n    in_string_or_comment=get_if_in_string_or_comment(before_line,after_line,buffer)\n    if char not in \'\\n\\\'\\"\' and in_string_or_comment:\n        buffer.insert_text(char)#Don\'t do anything but write the damn character lol\n        return True\n\n    if last_pressed_dash and char in \'-=\' and not in_string_or_comment and not after_line.strip() and re.fullmatch(r\' *[a-zA-Z_0-9]+\\_\',before_line):\n        buffer.delete_before_cursor()\n        buffer.insert_text(\'-\')#Trigger \'--\' or \'-=\' indirectly by replacing the \'_\' with a \'-\' where applicable (aka NOT if the user made the _ by typing _ with the shift key. This is one of the rare instances where stateful is OK)\n    if char==\'-\':last_pressed_dash=True\n    else:        last_pressed_dash=False\n\n        \n    if char in \'/\\n\' and before_line.endswith(\'?/\') and not after:\n        #This rule is a HACK to preserve the functionality of ?/\n        #Without this rule, pressing enter after ?/ will turn it into ??\n        if char==\'\\n\':\n            return False\n        #if char==\'/\':\n        #    #Actually this rule isn\'t nessecary...pressing enter on // turns it into ??\n        #    buffer.delete_before_cursor()\n        #    buffer.insert_text(\'?\')\n        #    return True\n    if char==\'/\' and before.endswith(\'???\') and not after:\n        return True\n            \n\n\n\n    if not in_string_or_comment:#This is just for visual purposes, so I can put the lines in a block of code and document ,after_line)it\n      #region ..= and =.. in-place operators\n        if char==\'.\' and before_line.endswith(\'=.\') and not \' \' in before_line.strip() and before_line.count(\'=.\')==1 and not before_line.endswith(\'==.\') and not before_line.endswith(\'!=.\'):\n            #The \'=..\' in-place operator\n            #On \'.\': right=.| --> right=|.right\n            #`right=..cursor` —>  `right=cursor.right`\n            varname=before_line[:-2]\n            varname=varname.strip()\n            buffer.insert_text(varname)\n            buffer.cursor_left(len(varname)+1)\n            return True\n        if char==\'=\' and before_line.endswith(\'..\'):\n            #The \'..=\' in-place operator\n            #On \'=\': cursor..| --> cursor.|=cursor\n            #`cursor..=right` —>  `cursor.right=cursor`\n            varname=before_line[:-2]\n            varname=varname.strip()\n            buffer.delete_before_cursor()\n            buffer.insert_text(varname)\n            buffer.cursor_left(len(varname))\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'.=\')\n            buffer.cursor_left()\n            return True\n      #endregion\n\n      #region pluralize list comprehension (must come before space stoppers)\n        if char==\' \' and (starts_with_any(after_line,\']\',\':\')) and re.fullmatch(r\'((.* for)|(for)) [a-zA-Z_0-9]+ in \',before_line):\n            #[thing(index) for index in |] --->  [thing(index) for index in indices|] #TO BE IMPROVED LATER. THIS IS JUST A PROOF OF CONCEPT RIGHT NOW.\n            name=before_line.rstrip().split(\' \')[-2]\n            from rp import plural_noun,is_singular_noun_of,is_iterable,is_plural_noun,plural_noun\n            refresh_strings_from_buffer()\n            candidates=set(list(ric.globa)) | set(split_python_tokens(before+after))\n            plural_name=plural_noun(name)\n            if plural_name in candidates:#If this succeeds it makes the next loop a lot faster...\n                buffer.insert_text(plural_name)\n                return True\n            for candidate in candidates:#Search all existing known names looking for a plural match to the iterator variable\n                focus_name=name\n                if not is_namespaceable(candidate) or candidate[:2]!=name[:2]:\n                    continue#Speed things up\n                if is_singular_noun_of(name,candidate) and is_plural_noun(candidate):\n                    buffer.insert_text(plural_noun(candidate))\n                    return True\n            if \'\\n\' not in text and after==\']\' and before.count(\'[\')==1:\n                #[x for x in |] --->  [x for x in ans|]\n                buffer.insert_text(\'ans\')\n                return True\n            # buffer.insert_text(plural_noun(name))#If we can\'t find a name that fits, and \'ans\' isn\'t an option, just choose a plural name\n            # return True \n        keywords={\'async\',\'await\',\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\'}\n        from rp import is_namespaceable\n        if char==\' \' and (before_line==\'for \' or before_line.endswith(\' for \')) and starts_with_any(after_line,\' in]\',\'in)\',\'in}\',\' in \'):\n            before_tokens=split_python_tokens(before_line)[:-1]#Get rid of the \'for\'\n            # dont_use_these_tokens=set(split_python_tokens(text))-set(before_tokens)\n            for token in reversed(before_tokens):\n                # if token==\'[\':#Technically correct but returns false negatives\n                    # break#Welp..we failed to find a unique new variable...\n                if is_namespaceable(token) and token not in keywords:\n                    if token not in ric.globa:# and token not in dont_use_these_tokens:\n                        buffer.insert_text(token)\n                        buffer.cursor_right(len(\' in\'))\n                        if not after_line.startswith(\' in \'):\n                            buffer.insert_text(\' \')\n                        return True\n        if char==\' \' and re.fullmatch(r\' *[a-zA-Z_0-9]+\\(\',before_line) and after_line==\')\':\n            for line in before.splitlines()[::-1][1:]:\n                if starts_with_any(line.lstrip(),*\'for if while elif\'.split()):\n                    tokens=split_python_tokens(line.strip())\n                    tokens=[token for token in tokens if is_namespaceable(token) and not token in keywords]\n                    if tokens:\n                        focus_name=tokens[0]\n                        #ON SPACE:\n                        #for focus_name in ans:\n                        #   print(|)\n                        #--->\n                        #for focus_name in ans:\n                        #   print(focus_name,)\n                        buffer.insert_text(focus_name+\',\')\n                        return True\n      #endregion\n\n      #region stopping double-spaces after \'or\', \'and\' etc\n\n        if char==\' \': \n            #TODO Possibly replace the below with something more useful than \'_\', such as the focus in the for loop or ans if there is no focus or perhaps \'True\'\n            if re.fullmatch(r\' *for \',before_line) and re.fullmatch(r\' in : *\',after_line):\n                #`    for | in :  `  --->  `    for _ in |:  `\n                buffer.insert_text(\'_\')\n                buffer.cursor_right(len(\' in \'))\n                refresh_strings_from_buffer()\n            if re.fullmatch(r\' *(if|while) \',before_line) and re.fullmatch(r\': *\',after_line):\n                #`    if |:  `  --->  `    if _ |:  `   --->   `    if _:|  `\n                #`    while |:  `  --->  `    while _ |:  `  --->  `    while _:|  `\n                buffer.insert_text(\'_ \')\n                refresh_strings_from_buffer()\n\n        if char==\' \':\n            partial_correctables=\'or and not for if\'.split(\' \')\n            if before_line.endswith(\']\') and after_line.startswith(\']\'):\n                #  [[[]|]]  --->  [[[]]|]\n                buffer.cursor_right()\n                return True\n            if before_line.endswith(\'[\') and after_line.startswith(\'[\'):\n                #  [[|[[]]]]  --->  [[[|[]]]]\n                buffer.cursor_right()\n                return True\n            for c in partial_correctables:\n                if before_line.strip().startswith(c+\' \'):\n                    continue#We don\'t want `for f in y:` to be messed up\n                if before_line.endswith(\' \'+c+\' \'+c[1:]):\n                    #Leftovers from having \'a\' --> \'and\' or \'o\'-->\'or\' if you just type out the whole thing\n                    #AKA `a ob`-->`a or b` therefore `a or b`-->`a or rb` which is bad...this fixes that:\n                    #  `a or r|` --> `a or |`\n                    #  `a and nd|` --> `a and |`\n                    buffer.delete_before_cursor(len(\' \'+c[1:]))\n                    refresh_strings_from_buffer()\n                    if c in \'for\':\n                        buffer.insert_text(\' \')\n                        return True#[x for or| in] --->  [x for | in]\n                elif before_line.endswith(\' \'+c+\' \'):\n                    return True#Do nothing\n            full_correctables=\'return else or and not in\'.split(\' \')\n            for c in full_correctables:\n                if c==\'in\' and not starts_with_any(after_line,\')\',\'}\',\']\'):\n                    #This block is NOT used for list comprehension aka [x for x in in|]--->[x for x in |]\n                    #It IS used for \'nin\', which stands for \'not in\'\n                    if before_line.endswith(\' \'+c+\' \'+c):\n                        if before_line.lstrip().startswith(\'for \'):\n                            buffer.delete_before_cursor(len(\'in\'))\n                            return True\n                        else:\n                            buffer.delete_before_cursor(len(\'in in\'))\n                            buffer.insert_text(\'not in \')\n                            return True\n                if before_line.endswith(\' \'+c+\' \'+c):\n                    #`x if y else else|` ---> `x if y else |`\n                    buffer.delete_before_cursor(len(\' \'+c))\n                    refresh_strings_from_buffer()\n                # elif before_line.endswith(\' \'+c+\' \'):\n                    # return True#Do nothing\n            if before_line.endswith(\' if \') and starts_with_any(after_line,\'}\',\')\',\']\'):\n                #[x for x in y if |] ---> [x for x in y if |]\n                return True\n            for keyword in \'or and not in is\'.split():\n                if before_line.endswith(\' else \'+keyword):\n                    #`a=x ify and z w` ---> `a=x if y and z else w` \n                    buffer.delete_before_cursor(len(\' \'+keyword))\n                    buffer.cursor_left(len(\' else\'))\n                    buffer.insert_text(\' \'+keyword+\' \')\n                    return True\n            for keyword in \'not in\'.split():\n                if before_line.endswith(keyword) and re.fullmatch(r\' else(([^a-zA-Z0-9_].*)|())\',after_line):\n                    #a=x if not| else z   --->   a=x if not | else z\n                    buffer.insert_text(\' \')\n                    return True\n            if endswithany(before_line,\' in \',\' is \'):\n                #on space: `x in y |` --> `x in y |`\n                #on space: `x is y |` --> `x is y |`\n                if after_line==\':\':\n                    buffer.insert_text(\'ans\')\n                return True\n        if n_makes_in_and_s_makes_is and char==\'t\':\n            if before_line.endswith(\' in o\'):\n                #Because \'n\' --> \'in\', \'not\'-->\'in ot\'\n                #On t: \' in o|\'-->\' not \'\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'not \')\n                return True\n      #endregion\n\n      #region spacebar to commas in lists\n        #TODO: Make this much more general (beyond just lists and numbers) to move it out of the \'misc tweaks\' section\n        if char==\' \':\n            if after_line.startswith(\']\') and re.fullmatch(r\' *[0-9]+\\-? *(\\, *[0-9]+\\-? *)*\\[ *(([^a-zA-Z\\)\\]].*)|())\',before_line[::-1]):#If NOT used as an index but is a list of number literals)\n                # if char==\' \' and after_line.startswith(\']\') and re.fullmatch(r\' *[0-9]+\\-? *(\\, *[0-9]+\\-? *)*\\[ *((nruter)|[\\:\\,\\=]|(dleiy)|(ni )).*\',before_line[::-1]):#<---- Possible alternative regex to the above\n                #When creating list literals with numbers and hitting space, don\'t add a space; add a comma.\n                #This helps when copying down lists of numbers from a piece of paper onto my mac (no numpad) without having to look up to put my fingers back on the right numbers (moving them back from the comma key, which I can\'t use my thumb for)\n                buffer.insert_text(\',\')\n                return True\n            if after_line.startswith(\']]\'):\n                if before_line.endswith(\',\'):\n                    #On space:  [[1,2,3,|]]  --->   [[1,2,3],[|]]\n                    buffer.delete_before_cursor()\n                    buffer.cursor_right()\n                    buffer.insert_text(\',[]\')\n                    buffer.cursor_left()\n                    return True\n                if after_line.startswith(\']]]\') and before_line.endswith(\',[\'):\n                    #On space: [[[1,2,3],[|]]]  --->   [[[1,2,3]],[[|]]]\n                    #(and then by other completions...)   on space:  [[[1,2,3]],[[|]]] -->  [[[1,2,3]],[|]]\n                    buffer.delete_before_cursor(2)\n                    buffer.delete()\n                    buffer.cursor_right()\n                    # n=re.match(r\'^\\]*\',after_line).span()[1]#How many ]\'s does the after_line start with\n                    n=re.match(r\'^\\[\\,\\]*\',before_line[::-1]).span()[1]-1\n                    # assert n>=3#Because in the \'if\' condition, after_line.startswith(\']]]\')\n                    # n-=1\n                    buffer.insert_text(\',\'+n*\'[\'+\']\'*n)\n                    buffer.cursor_left(n)\n                    return True\n        if char==\' \' and before_line.endswith(\'[[\') and after_line.startswith(\']]\'):\n            #On space: [[[|]]]  -->  [[|]]\n            buffer.delete_before_cursor()\n            buffer.delete()\n            return True\n        if char in \' \\n*.+[)},\' and re.fullmatch(r\'.*\\[.* +\',before_line) and after_line.startswith(\']\'):#All the valid characters that might commonly follow a list literal\n            #On space or enter key: [1,2,3, |]      --->   [1,2,3]|\n            #On space or enter key: [1,2,3,     |]  --->   [1,2,3]|\n            #The space between the \'3,\' and the \']\' is important\n            #For all keys except the space key, proceed as usual (don\'t cancel further completions)\n            number_of_spaces=len(before_line)-len(before_line.rstrip())\n            buffer.delete_before_cursor(number_of_spaces)\n            if before_line.rstrip().endswith(\',\'):\n                buffer.delete_before_cursor()#Delete the comma\n            buffer.cursor_right()\n            refresh_strings_from_buffer()\n            if char==\' \':return True#For all keys except the space key, proceed as usual (don\'t cancel further completions)\n\n      #endregion\n\n      #region\n        if char==\'-\':\n            if re.fullmatch(r\'.* for [a-zA-Z_0-9]+\',before_line):\n                #[x for y| in]  --->  [x for y_| in]\n                buffer.insert_text(\'_\')\n                return True\n            if before_line.lstrip().startswith(\'def \') and after_line.strip()==\'):\':\n                try:\n                    if before_tokens[-2].string==\',\':\n                        #ON -: def f(x,y|):  -->  def f(x,y_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-1].string==\',\':\n                        #ON -: def f(x,|):  -->  def f(x,_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-3].string==\'def\':\n                        #ON -: def f(|):  -->  def f(_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                    elif before_tokens[-4].string==\'def\':\n                        #ON -: def f(x|):  -->  def f(x,y_|):\n                        buffer.insert_text(\'_\')\n                        return True\n                except IndexError:\n                    #Probably an error getting some index of before_tokens. This is perfectly ok...just ignore it.\n                    pass\n      #endregion\n\n      #region\n        # if ,before_line_ends_with_number:\n        if char==\' \' and before_line_ends_with_number and after_line.startswith(\']\') and len(before_tokens)>=2 and before_tokens[-2].string==\'[\':\n            #ON Space:\n            # a[0|]  --->  a[0][|]\n            buffer.cursor_right()\n            buffer.insert_text(\'[]\')\n            buffer.cursor_left()\n            return True\n        if before_line.endswith(\'[\') and after_line.startswith(\']\'):\n            if char in \'+&^%@<>/,|\' or char==\'=\' and not (len(before_tokens)>=2 and before_tokens[-2].type==tokenize.NAME):#This last part about \'=\' being special is so we can have the \'[=\' operator\n                #Intentionally did not include any \'*.!~-\' as they can be unary operators that go before things. + is also technically a unary operator because \'+5\' is a valid int, but who even does that...\n                #ON +:\n                # a[0][|]  --->  a[0]+|\n                buffer.delete()\n                buffer.delete_before_cursor()\n                buffer.insert_text(char)\n                return True\n      #endregion\n\n      #region\n        # EXAMPLES FOR THIS SECTION:\n        # {a:5}..a\\n   —>   {a:5}[\'a\'] \n        # {a:5}..a..b..c\\n   —>   {a:5}[‘a’][‘b’][‘c’]\n        # {a:5}..a..b..c+5\\n   —>   {a:5}[‘a’][‘b’][‘c’]+5\n        # L..0\\n   —>   L[0]\\n\n        # L.123+    —>  L[123]+\n        # L..123+   —>  L[\'123\']+\n        # L.0.1.2\\n   —>  L[0][1][2]\n        # L.-1\\n    —>   L[-1]\\n\n        # L.1;5\\n  —>  L[1:5]\\n\n        # L.1;5.0\\n   —>  L[1:5][0]\\n\n        # L.0;1.0;;1.-1.0;-1.0;;-1.1;\\n   —>   L[1:1][0::1][-1][0:-1][0::-1][1:]   (first is len 26, second is len33  — so this saved 7 keystrokes)\n        # L.;;3\\n —>  L[::3]\\n\n        # image.;,;,0  —>  image[:,:,0]\n        # “f f x  .y”  —>  f(f(x).y)\n        # “f f x  .5”  —>  f(f(x),.5)\n        # “L.4[5”   —>   L[4][5]\n        # “f f x  .y.0.1..a”   —>  f(f(x).y[0][1][‘a’])\n        # “f f x  .5”  —>   f(f(x),.5)   BUT    “f f x  .a”  —>   f(f(x).a)    AND NOT  “f f x  .a”  —>   f(f(x)[‘a’])\n        # “d f a 8b 8c”   —>  def f(a,*b,**c):\n        # “i.;.;.0”  —>  i[:,:,0]\n        # “i.;,;,0”  —>  i[:,:,0]\n        if before_line.endswith(\').\') and char.isnumeric():\n            #On pressing 5: f(x().|)  --->  f(x(),.5|)  (To conuter a side-effect of one of the next blocks)\n            #“f f x  .y”  —>  f(f(x).y)\n            #“f f x  .5”  —>  f(f(x),.5)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\',.\')\n            refresh_strings_from_buffer()\n        if \'..\' in before_line:\n            i=before_line.rfind(\'..\')\n            key=before_line[i+2:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"\n            if key and not key.isnumeric():\n                do_number_key=key.isnumeric() and not char.isnumeric()#Do a    a..1   --->   a[1] completion  (no quotes)\n                do_string_key=is_namespaceable(key) and key and not is_namespaceable(key+char)#Do a    a..b   --->   a[\'b\'] completion (with quotes)\n                assert not do_number_key or not do_string_key,\'can only do one or the other. this is internal logic this should never break. key=\'+repr(key)\n                if do_number_key or do_string_key:\n                    #Javascript-like x.y ==== x[\'y\'] notation by using \'..\' instead of \'.\'\n                    #Example: On \'+\' (which isn\'t namespaceable):   ..stuff|   --->   ..[\'stuff\']+|\n                    q="\'"*do_string_key\n                    buffer.insert_text(q+"]")\n                    l=len(before_line)-i#Amount we have to move left#Ignore the shift caused by adding "\']" because of buffer.delete_before_cursor(2)\n                    buffer.cursor_left(l-do_number_key)\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text("["+q)\n                    buffer.cursor_right(l-do_number_key)\n        if \'.\' in before_line and char not in \',:-\':\n            i=before_line.rfind(\'.\')\n            key=before_line[i+1:]#If before_line is "aido.dsodifg..sdfgoj345.f.sdfg..abcd" then key is "abcd"\n            before_key=before_line[:i]\n            #someList.5   --->   someList[5]\n            numeric_key_candidate=key.replace(\':\',\'\').replace(\',\',\'\').replace(\'-\',\'\')\n            do_number_key=numeric_key_candidate.isnumeric() and not (char.isnumeric() or (char==\'-\' and not (key and key[-1]==\'-\')))#Do a    a..1   --->   a[1] completion  (no quotes)\n            if char==\';\' and (do_number_key or not numeric_key_candidate):\n                buffer.insert_text(\':\')\n                return True\n            if char==\'.\' and key and not numeric_key_candidate:\n                #Allow for "i.;.;.0"   --->   "i.;,;,0"  -->  "i[:,:,0]"  (have to worry about one less character (can forget about the comma in this particular case. The alternative is to give an invalid completion aka \'i.;.;.0\'  -->  \'i.:[:,0]\'))\n                buffer.insert_text(\',\')\n                return True\n            if do_number_key and numeric_key_candidate and not (not before_key or endswithany(before_key,\',\')) and not ends_with_number(before_key):\n                buffer.insert_text("]")\n                l=len(before_line)-i\n                buffer.cursor_left(l)\n                buffer.delete_before_cursor(1)\n                buffer.insert_text("[")\n                buffer.cursor_right(l)\n            elif char in \'.\\n-+*&^%#/()[]{}@<>=\':\n                refresh_strings_from_buffer()\n               #match=re.match(r\'[0-9\\,\\:]+\\-?\\.[^= ]\',before_line[::-1])\n               #match=re.match(r\'((([0-9]+\\-?)|\\:)(\\,([0-9]+\\-?)|\\:)*)\\-?\\.[^= ]\',before_line[::-1])\n                match=re.match(r\'(((([0-9]+\\-?)|\\:)*)(\\,(([0-9]+\\-?)|\\:)*)*)\\.[^= ]\',before_line[::-1])\n                bad_match=bool(re.match(r\'[0-9]+\\.[0-9]+\'         ,before_line[::-1]))\\\n                  and not bool(re.match(r\'[0-9]+\\.[0-9]+\\-?[a-zA-Z_\\,]\',before_line[::-1]))#Not part of a variale name but we still have before_line ending with something like 34234.32423\n                bad_match=bad_match or\\\n                          bool(re.match(r\'[0-9]+\\.[0-9]*\\-\'       ,before_line[::-1]))\n                bad_match=bad_match or before_line.endswith(\'.\')\n                if match and not bad_match and not re.fullmatch(r\'.*[^\\)\\]a-zA-Z_\\\'\\"][0-9]+\',before_line) and\\\n                             not re.fullmatch(r\'.*[0-9]+\\,\\w*\',before_line):#To fix ‹[.5,.›  -/->  ‹[[.5,].|]›\n                    double_dot=bool(re.match(r\'[0123456789\\,\\:]+\\.\\.\',before_line[::-1]))\n                    start,end=match.span()#Number of digits\n                    assert start==0\n                    assert end>1\n                    buffer.cursor_left(end)\n                    buffer.delete_before_cursor()\n                    if double_dot:buffer.delete_before_cursor()#;print(\'\\n\',end)# x.1.2..3.  -->  x[1][2][\'3\'].;\n                    else:pass#x.1.2.3.4.5.   --->   x[1][2][3][4][5].\n                    buffer.insert_text(\'[\')\n                    if double_dot:buffer.insert_text("\'")\n                    buffer.cursor_right(end)\n                    if double_dot:buffer.insert_text("\'")\n                    buffer.insert_text(\']\')\n                    refresh_strings_from_buffer()\n\n        if char in \'&^+/%|\' and before_line.endswith(\',\') and not get_if_in_string_or_comment(before_line,after_line,buffer):#Not \'-\' because \'-\' can be a prefix for a number\n            #Note: < and > purposely excluded because they\'re commands to swap arguments etc\n            #On +: f(x,y,z,|)  --->  f(x,y,z+|)\n            #“f f x  .y”  —>  f(f(x).y)\n            #“f f x  .5”  —>  f(f(x),.5)\n            buffer.delete_before_cursor()\n            # return False#We should keep going if there are any other completions that could have been trigggered by this\n        if char.isalpha() and before_line.endswith(\',.\'):\n            #On y: f(x,.|)  --->  f(x.y|)\n            buffer.cursor_left()\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n        if char==\',\' and before_line.endswith(\'(\') and after_line.startswith(\')\'):\n            #Spacebar makes f(g(|)) --> f(g,)\n            #So, on \',\': f(g(|))  -->  f(g(),)\n            buffer.cursor_right()\n        if char.isalpha() and not after_line.strip() and before_line.lstrip()==\'2\':\n            #Don\'t need to press shift to make the @ decorator symbol\n            #Example:\n            #\'2memoized\\ndf \' --->   \'@memoized\\ndef f():\'\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'@\')\n        if char.isalpha() and before_line.endswith(\'=.\'):\n            #fixed the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key\n            # On press \'w\' for example:\n            # self=.|   --->   self.w|=  --->  self.w|=w   (and then type foo to get self.foo=foo)\n            buffer.delete_before_cursor()\n            buffer.cursor_left()\n            buffer.insert_text(\'.\')\n            refresh_strings_from_buffer()\n\n      #endregion\n\n      #region async and await\n        if char==\' \' and before_line.lstrip in (\'async\',\'await\') and not after_line.strip():\n            buffer.insert_text(\' \')\n            return True\n      #endregion\n\n\n      #region misc tweaks\n\n        if char==\'\\n\' and not after_line and before_line.endswith(\':\'):\n            buffer.insert_text(\'\\n\'+get_indent(before_line)+\'    \')\n            return True\n        if char==\'=\' and before_line.endswith(\'.\') and after_line.strip():\n            #`if x.=5`   -->  `if x>=5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'>\')\n            refresh_strings_from_buffer()\n        if char==\'=\' and before_line.endswith(\',\') and after_line.strip():\n            #NOTE This is a stylistic, heuristic choice. Technically, \'if x,=y:\' is valid syntax. However, I find that I rarely ever do that. On the flip side, I do `if x<=y` much more often.\n            #`if x,=5`   -->  `if x<=5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'<\')\n            refresh_strings_from_buffer()\n\n        if char==\'\\n\':\n            #A tweak meant to make ]= and )= operators betters\n            if re.fullmatch(r\'[^\\=]+\\=[^\\=]+\',before_line) and \\\n               after_line.startswith(\'(\') or after_line.startswith(\'[\'):\n              #We\'re on the right-hand-side of some assignment...  \n                buffer.cursor_right(999999)#`i)=5\\n`  -/->  `i=i\\n|(5)` INSTEAD `i)=5\\n`  --->  `i=i(5)\\n|`\n            refresh_strings_from_buffer()\n        if char==\' \' and re.fullmatch(r\'.*[\\,\\(](and|or|not|nin|in|is)\',before_line):\n            #With function f: `f x and y` -/->  `f(x,and,y)\n            #With function f: `f x and y` --->  `f(x and y)\n            #Same goes for and,or,not,in,is,etc...\n            for kw in \'and or not nin in is\'.split():\n                if before_line.endswith(kw):\n                    if kw != \'not\':\n                        buffer.cursor_left(len(kw))\n                        refresh_strings_from_buffer()\n                        if not before_line.endswith(\'(\'):\n                            buffer.delete_before_cursor()\n                            buffer.insert_text(\' \')\n                        buffer.cursor_right(len(kw))\n                    buffer.insert_text(\' \')\n                    if kw==\'nin\':\n                        buffer.delete_before_cursor(len(\'nin \'))\n                        buffer.insert_text(\'not in \')\n                    if kw==\'isnt\':\n                        buffer.delete_before_cursor(len(\'isnt \'))\n                        buffer.insert_text(\'is not \')\n                    return True\n        if char==\' \' and re.fullmatch(r\'.*[^\\w]is nt\',before_line):\n            #isn\'t ---> is not \n            #`x isnt y`  -->  `x is not y|`\n            buffer.delete_before_cursor(len(\'is nt\'))\n            buffer.insert_text(\'is not \')\n            return True\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_\':\n            if not after:\n                if before==\'5\':\n                    #`5edit` --->  `%edit` #For ipython magics, turn 5 into % if at the beginning of a line\n                    buffer.delete_before_cursor()\n                    buffer.insert_text(\'%\')\n                elif before==\'55\':\n                    #`55edit` --->  `%%edit` #For ipython magics, turn 5 into % if at the beginning of a line\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text(\'%%\')\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM[({_\' and re.fullmatch(r\'.*[^a-zA-Z_0-9]1\',before_line):\n            if char!=\'j\':#1j is a valid literal. Don\'t destroy it.\n                #Interperet ! or 1 as \'not \'\n                #`x f1y z` --->  `x if not y else z`\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'not \')\n        if char in \'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM_({[\\\'"\':\n            #8 to * in function calls and lists etc\n            if re.fullmatch(r\'.*[\\(\\[\\{\\,] *8\',before_line):\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'*\')\n                refresh_strings_from_buffer()\n            elif re.fullmatch(r\'.*[\\(\\[\\{\\,] *88\',before_line):\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\'**\')\n                refresh_strings_from_buffer()\n        if char in \'"\\\'\' and re.fullmatch(r\'.*\\*\',before_line) and re.fullmatch(r\'[\\]\\}\\)]\',after_line):\n            #auto Double quotes. Dont know where the other part in this code is and I\'ll make this more coherent later.\n            buffer.insert_text(char)\n            buffer.cursor_left()\n            buffer.insert_text(char)\n            return True\n        if char==\'-\':\n            if re.fullmatch(r\'( )*for [a-zA-Z_]+\',before_line):\n                #`   for abc|`  --->   `   for abc_|`\n                buffer.insert_text(\'_\')\n                return True\n            if re.fullmatch(r\' *(from |import ).*\',before_line):\n                #import thingy-5 as stuff-6   --->  import thingy_5 as stuff_6\n                buffer.insert_text(\'_\')#`from itertools import product as cartesian-` should do _ instead of -\n                return True\n        if char==\'\\n\' and \'\\n\' not in before and \'\\n\' in after:\n            #Fixing a bug in a hacky way: Don\'t enter commands if our cursor is on the first character and we\'re multi-line\n            buffer.insert_text(\'\\n\')\n            return True\n        if char==\'\\n\' and text==\'ans[]\' and after_line==\']\':\n            #THIS IS BROKEN\n            #TODO: Why does this never get triggered?\n            #Space -->  ans[|]  -->  ans\\n   (when we just want to see the answer but hitting space tries to index an array)\n            buffer.delete()\n            buffer.delete_before_cursor()\n        if char in \'.\\n\' and re.fullmatch(r\'[a-zA-Z_]+\\=(\\/)+\',current_line) and after_line==\'\':\n            #On hitting enter, `torch=/`  -->  `torch?`\n            #On hitting enter, `torch=//`  -->  `torch??`\n            #On hitting enter, `torch=///`  -->  `torch???`\n            #On hitting enter, `torch=////`  -->  `torch????`\n            #Because `import torch\\n=/\\n` shows help for torch\n            # print("AOSD")\n            I=0\n            for c in reversed(before_line):\n                if c!=\'/\':\n                    break\n                I+=1\n\n            buffer.delete_before_cursor(len(\'=\')+I)\n            buffer.insert_text(\'?\'*I)\n        if char==\'\\n\' and after==\'\' and before_line.endswith(\';\'):\n            #Insert a new line if we end with \';\' to make life easier\n            #on \'\\n\': `single_line_stuff();|`  --->  `single_line_stuff()\\n|`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'\\n\')\n            return True\n        if (char!=\'=\' and re.fullmatch(r\'.*\\=\',before_line) and not re.fullmatch(r\'.*\\=\\=\',before_line) and starts_with_any(after_line,\']\') and not (len(after_line.strip())==2 and after_line.strip()[1]==\':\')) and not endswithany(before_line,\'==\',\'1=\',\'!=\'):\n            #On a letter or number \'q\':  i[w=|]  -->  i[w]=q\n            if before_line.endswith(\'>=\') or before_line.endswith(\'<=\'):\n                buffer.insert_text(char)\n                return\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(\'=\')\n        any_keyword_regex=r\'False|class|finally|is|return|None|continue|for|lambda|try|True|def|from|nonlocal|while|and|del|global|not|with|as|elif|if|or|yield|assert|else|import|pass|break|except|in|raise\'\n        if char==\'=\' and     re.fullmatch(r\'.*([^\\+\\-\\(\\[\\,\\/\\@\\%\\^\\&\\*\\~\\<\\>\\=]|(([a-zA-Z_0-9]*) +))1\',before_line) \\\n                     and not re.fullmatch(r\'.*(\'+any_keyword_regex+r\') +1\',before_line)\\\n                     and not re.fullmatch(r\'\\s*\\w+\',before_line):#we don\'t want h1=5 to turn into h!=5\n            #`x 1=y` -->  \'x !=y\'\n            #TODO: Check to make sure that variable x1 is not in the text, nor is it in globa scope. Then we can be sure we meant to use != instead of ==, and that it is not just a number literal (we don\'t want 21=  to 2!=)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'!=\')\n            return True\n        if char==\' \' and re.fullmatch(r\' *(from |import ).*\',before_line) and after_line.strip().startswith(\'#\'):\n            buffer.insert_text(\' \')#FIX: on space: `import x as y#Comment|` —> `import x as y#Comment|, ` \n            return True\n        for kw in \'return break yield continue assert\'.split():\n            if char==\' \' and not after_line.strip() and re.fullmatch(r" *(for|while|if|with|try|def|elif|else|except|finally)(( .*\\:)|( *\\:)) *("+splinterify(kw)+")",before_line):\n                assert so_far(before_line) in kw,\'Internal logical assertion should never fail\'\n                buffer.insert_text(kw[len(so_far(before_line)):])\n                refresh_strings_from_buffer()\n                #on space: `if x:re`         -->  `if x:return|`  -->  `if x:return |`\n                #on space: `if x:y`          -->  `if x:yield|`   -->  `if x:yield |`\n                #on space: `with x as y:con  -->  `if x:return|`  -->  `if x:continue |`\n        if char==\' \' and re.fullmatch(r\'.*[\\(\\[\\, ]\\-\',before_line):\n            #if -|:   --->   if _ |:\n            #print(-|)   --->   print(_,|)\n            #print(_,-|)   --->   print(_,_|)\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            refresh_strings_from_buffer()\n        if char==\'\\n\' \\\n             and before_line.endswith(\'-\')\\\n             and (re.fullmatch(r\' *[^\\w\\(\\{].*\',after_line) or not after_line.strip())\\\n             and re.fullmatch(r\'(\\s*)|(.*[^\\w\\s]\\s*\\-)\',before_line):\n            #On \\n:   `[_ and -|]`  --->  `[_ and _]\\n\n            #On \\n:   `x and -`  --->  `x and _\n            #On \\n:   `x+-`  --->  `x+-`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            refresh_strings_from_buffer()\n        if char==\' \' and re.fullmatch(\' *for len\',before_line) and re.fullmatch(\' in : *\',after_line):\n            #`   for len| in :`  --->  `   for _ in range(len(|)):`\n            buffer.delete_before_cursor(len(\'len\'))\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in \'))\n            buffer.insert_text(\'range(len())\')\n            buffer.cursor_left(len(\'))\'))\n            return True\n        if char in \'p\' and meta_pressed(clear=True):\n            run_arbitrary_code_without_destroying_buffer(\'PREV\',event,put_in_history=True)\n            return True\n        if char in \'n\' and meta_pressed(clear=True):\n            run_arbitrary_code_without_destroying_buffer(\'NEXT\',event,put_in_history=True)\n            return True\n        if char in \'{([])}\' and meta_pressed(clear=False):\n            #When holding alt, add a ) or ] or } to the end of the line, instead of autocompleting it where it is currently\n            #TODO: Add example\n            if char in \'{([\':\n                buffer.insert_text(char)\n                char={\'(\':\')\',\'[\':\']\',\'{\':\'}\'}[char]\n            meta_pressed(clear=True)\n            # l=after_line.find(\':\')#In the event that we\'re in "for x in func(|thing:" we want "for x in func(|thing):" and not "for x in func(|thing:)"\n            l=len(after_line)-1 if after_line.endswith(\':\') else len(after_line)\n            buffer.cursor_right(l)\n            buffer.insert_text(char)\n            buffer.cursor_left(l+1)\n            return True\n        if char==\'=\' and re.fullmatch(r\' *[\\-][\\)\\]\\.\\+\\*\\&\\%\\@\\>\\<\\/\\[\\(]\',before_line):\n            #  `-+=x`  --->     `_+=x|`\n            #`  -)=f`  --->   `  _=f(_|)`\n            # ` -.=x`  --->    ` _=_.x|`\n            buffer.cursor_left()\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            buffer.cursor_right()\n        if char==\'=\' and re.fullmatch(r\' +[\\-]\',before_line):\n            #`if _:\\n\\t-=5`  --->   `if _:\\n\\t_=5|`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n        if char==\'=\' and re.fullmatch(r\' *\\w+\\(\',before_line) and after_line==\')\':\n            #Fixing the (= operator\n            #`f(=x`   --->   `f=f(x|)`\n            buffer.delete_before_cursor()\n            buffer.delete()\n            buffer.insert_text(\'=\')\n            buffer.insert_text(before_line[:-1].strip())\n            buffer.insert_text(\'()\')\n            buffer.cursor_left()\n            return True\n        if char==\'=\' and before_line.endswith(\'-\') and after_line.strip().endswith(\':\'):\n            #   `if -=5`  --->  `if _=5:`  --->  `if _==5|:`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n        if char in \'<>/%^&@+[,*\' and before_line.endswith(\'-\'):\n            #- is treated like _ when an syntax-breaking operator comes after it\n            #`-*5` --->  `_*5`\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n\n        if char==\'=\' and not endswithany(before_line,\'=\',\'>\',\'<\') and after_line.strip().endswith(\':\') and not starts_with_any(before_line.strip(),\'def \'):\n            if before_line.endswith(\'(\') and after_line.startswith(\')\'):\n                #On \'=\': `if f(|):` --->  `if f()==|:`\n                buffer.cursor_right()\n            if before_line.endswith(\',\') and starts_with_any(after_line,*\'])}\'):\n                #On \'=\': `if f(x,|):` --->  `if f(x)==|:`\n                #On \'=\': `if l[i,|]:` --->  `if l[i]==|:`\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n            buffer.insert_text(\'==\')\n            return True\n        if char==\'=\' and endswithany(before_line,\'<=\',\'>=\',\'!=\'):\n            #Drag the >= or <= or !=\n            #`if f(x>==y`  --->  `if f(x)>=y`\n            ending=before_line[-2:]\n            buffer.delete_before_cursor(2)\n            buffer.cursor_right()\n            buffer.insert_text(ending)\n            return True\n        if char in \'<>\' and before_line.endswith(char):\n            #Drag > and <\n            #`if f(x>>y`  --->  `if f(x)>y`\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(char)\n            return True\n        if char==\'\\n\' and after_line==\'):\' and before_line.endswith(\',\') and before_line.strip().startswith(\'def \'):\n            #On enter, `def f(x,|):`  --->  `def f(x):\\n\\t|`\n            buffer.delete_before_cursor()\n        if char==\'\\n\' and before_line.lstrip()==\'d\' and not after_line and in_class_func_decl(buffer):\n            buffer.delete_before_cursor()\n            if not \'__init__\' in before:\n                buffer.insert_text(\'def __init__(self):\')\n            else:\n                buffer.insert_text(\'def _(self):\')\n        if char==\'\\n\' and re.fullmatch(r\'\\s*(from|import)\\s.* as \',before_line):\n            buffer.delete_before_cursor(len(\' as \'))\n        if char.isnumeric() and before_line.endswith(\' for \') and after_line.startswith(\' in\'):\n            #[x f4  --->  [x for x in range(4|)]\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in\'))\n            buffer.insert_text(\' range(\'+char+\')\')\n            buffer.cursor_left()\n            return True\n        if char==\' \' and before==\'from \' and after==\' import\':\n            #On space: `from | import`   --->   `for | in :`\n            buffer.delete(len(after))\n            buffer.delete_before_cursor(len(before))\n            buffer.insert_text(\'for  in :\')\n            buffer.cursor_left(len(\' in :\'))\n            return True\n        if char==\' \' and re.fullmatch(r\'.*[^\\w]not\',before_line) and starts_with_any(after_line,*\')]}\'):\n            #Patch: `print x is not y`  -/->  `print(x is not,y|)`\n            #Patch: `print x is not y`  --->  `print(x is not y|)`\n            buffer.insert_text(\' \')\n            return True\n        if char==\';\' and after_line==\')\':\n            #On ‹;›: ‹print(|)›  -->  ‹print();|›\n            buffer.cursor_right(9999)\n            buffer.insert_text(\';\')\n            return True\n        if char==\' \' and before_line.lstrip()==\'for \' and after_line==\' in :\':\n            #`for | in :` --->  `for _| in :` --->  `for _ in |:`\n            buffer.insert_text(\'_\')\n            buffer.cursor_right(len(\' in \'))\n            return True\n        if char in \'- \\n\' and starts_with_any(before_line.lstrip(),\'nonlocal \',\'global \',\'del \'):\n            #After nonlocal and global,\n            if char==\'-\':\n                #‹nonlocal -var-name› ---> ‹nonlocal _var_name›\n                #  ‹global -var-name› --->   ‹global _var_name›\n                buffer.insert_text(\'_\')\n                return True\n            if char==\' \':\n                if re.fullmatch(r\'.*\\w\',before_line):\n                    # ‹nonlocal x y z› ---> ‹nonlocal x,y,z›\n                    buffer.insert_text(\',\')\n                    return True\n            if char==\'\\n\' and not after_line.strip():\n                #On enter: ‹global x,y,  |›  --->  ‹global x,y\\n|›\n                if before_line.strip().endswith(\',\'):\n                    while before_line.strip().endswith(\',\'):\n                        buffer.delete_before_cursor()\n                        refresh_strings_from_buffer()\n        if char==\'n\' and before_line.endswith(\',not i\'):\n            #On ‹n›: ‹print(x,not i|)›  --->  ‹print(x not in |)›\n            buffer.cursor_left(len(\'not i\'))\n            buffer.delete_before_cursor()\n            buffer.insert_text(\' \')\n            buffer.cursor_right(len(\'not i\'))\n            buffer.insert_text(\'n \')\n            return True\n        if before and char==\'\\n\' and not after and \'print\'.startswith(before) and not before in ric.globa:\n            #If the variable doesn\'t exist and would cause an error,\n            #Replace something like ‹pri› --->  ‹print(ans)›\n            #Pseudo terminal does this by default without this microcompletion, but it\'s tidier to do it here\n            buffer.delete_before_cursor(99999)\n            buffer.insert_text(\'print(ans)\')\n        if (char.isalpha() or char==\'_\') and before in [\'1\',\'11\']:\n            #‹1ls› --> ‹!ls|›\n            #‹11ls› --> ‹!!ls|›\n            refresh_strings_from_buffer()\n            buffer.delete_before_cursor(len(before))\n            buffer.insert_text(\'!\'*len(before))\n        if char in \'?/\' and before_line.endswith(\'(\') and after==\')\' and not \'\\n\' in text:\n            #On /: some_function(|) --> some_function?|\n            #On ?: some_function(|) --> some_function?|\n            buffer.delete_before_cursor()\n            buffer.delete()\n            buffer.insert_text(\'?\')\n            return True\n        if char==\'/\' and endswithany(before_line,\'??\',\'?/\',\'//\') and not \'\\n\' in text:\n            #‹x///› ---> ‹x?/›\n            #‹x////› ---> ‹x??›\n            #‹x/////› ---> ‹x???›\n            #‹x//////› ---> ‹x????›\n            #‹x///////› ---> ‹x?????›\n            if before_line.endswith(\'?/\'):\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'??\')\n            elif before_line.endswith(\'//\'):\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\'?/\')\n            else:\n                buffer.insert_text(\'?\')\n            return True\n        if (char.isalpha() or char==\'_\') and not \'\\n\' in text and not after and before.endswith(\'/.\'):\n            #On ‹c›: ‹np/.|›  --->  ‹np?.c|›\n            #`np/.conv` --->  `np?.conv`\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'?.\')\n        if char in \'.([?+/*@&|\\n\' and before and not \'\\n\' in before and not after and ric.current_candidates and re.fullmatch(r\'[\\w\\.]*[\\ws]+\',before):\n            #`np.lin.cho.geta.`  --->  `np.linalg.cholesky.__getattribute__.|`\n            if not before_line.isnumeric():\n                current=before_line.split(\'.\')[-1]\n                if (False or current not in ric.current_candidates) and (not char==\'\\n\' or \'.\' in before_line):#If enter key, must have some . in the line to do anything\n                    candidate=ric.current_candidates[0]#First autocompletion candidate\n                    if not \'.\' in before:\n                        buffer.delete_before_cursor(99999)\n                    else:\n                        while not before.endswith(\'.\'):\n                            buffer.delete_before_cursor()\n                            refresh_strings_from_buffer()\n                    buffer.insert_text(candidate)\n        if char==\'\\n\' and not \'\\n\' in text and not after and before.endswith(\'/\') and not before_line.endswith(\'?/\'):\n            #On \\n: ‹thing/›     --->  ‹thing?\\n›\n            #On \\n: ‹thing//›    --->  ‹thing??\\n›\n            #On \\n: ‹thing///›   --->  ‹thing???\\n›\n            #On \\n: ‹thing////›  --->  ‹thing????\\n›\n            i=0\n            while before.endswith(\'/\'):\n                i+=1\n                buffer.delete_before_cursor()\n                refresh_strings_from_buffer()\n            buffer.insert_text(\'?\'*i)\n        if char==\'\\n\' and before_line.lstrip() in {\'while \',\'if \'} and after_line.strip()==\':\':\n            buffer.insert_text(\'True\')\n        if char==\';\' and after_line.startswith(\'}\'):\n            #On ‹;›: ‹{x|}›  --->  ‹x:|›\n            buffer.insert_text(\':\')\n            return True\n        if char==\';\' and after_line.startswith(\')\') and before_line.lstrip().startswith(\'def \'):\n            #On ‹;›: ‹def f(x|):›  --->  ‹def f(x:|):›\n            buffer.insert_text(\':\')\n            return True\n\n        if char==\'-\' and before_line.lstrip().startswith(\'def \') and before_line.endswith(\')\') and after_line==\':\':\n            buffer.insert_text(\'->\')\n            return True\n        if (char==\'-\' or char==\'>\') and before_line.lstrip().startswith(\'def \') and before_line.endswith(\')->\') and after_line==\':\':\n            #Do nothing\n            return True\n\n        if before==\'cd\' and not after and char==\' \':\n            #Allow \'cd thing\' to be \'CD thing\'\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'CD \')\n            return True\n\n        if set(after)<=set(\'])}\') and not \'\\n\' in before:\n            if char==\'\\n\' and before.endswith(\'/\'):\n                # On enter:  ans[5/|]  --->  ans[5]?|\n                buffer.delete_before_cursor()\n                buffer.cursor_right(9999)\n                buffer.insert_text(\'?\')\n                return False\n            if char==\'\\n\' and before.endswith(\'//\'):\n                # On enter:  ans[5//|]  --->  ans[5]??|\n                buffer.delete_before_cursor(2)\n                buffer.cursor_right(9999)\n                buffer.insert_text(\'??\')\n                return False\n            # if char==\'/\' and before.endswith(\'//\'):\n            #     # On /:  ans[5//|]  --->  ans[5]???|\n            #     buffer.delete_before_cursor(2)\n            #     buffer.cursor_right(9999)\n            #     buffer.insert_text(\'???\')\n            #     return True\n            if char==\'?\':\n                # On ?:  ans[5|]  --->  ans[5]?|\n                buffer.cursor_right(9999)\n                return False\n                \n        \n        import rp.r_iterm_comm as ric\n        if char in \'./?=\' and text=="" and ric.successful_commands:\n            last_command=ric.successful_commands[-1]\n            if not \'\\n\' in last_command and not \';\' in last_command:\n                if last_command.startswith(\'from \') or last_command.startswith(\'import \'):\n                    #import numpy\n                    #<on .>\n                    #numpy.|\n                    buffer.insert_text(last_command.split()[-1]+char)\n                    if char==\'=\':\n                        buffer.delete_before_cursor()\n                    return True\n                \n\n        # if char==\' \' and after_line.startswith(\')\') and endswithany(before_line,*\'\\\'"\'):\n        #     #print(\'hello\'|) ---> print(\'hello\',|)\n        #     #print(\'hello\'|) -/-> print(\'hello\' |)\n        #     buffer.insert_text(\',\')\n        #     return True\n\n\n\n\n      #endregion\n    return False\n\n\nans_dot_completion_string=None\n\n\ndef original_ptpython_load_python_bindings(python_input):\n    #THIS IS NOT USED RIGHT NOW. But if this was used instead of load_python_bindings, there would be no microcompletions. Mayybe you want that? I certainly dont.\n    """\n    Custom key bindings.\n    """\n    registry = Registry()\n\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n    handle = registry.add_binding\n    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)\n    # handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)\n    has_selection = HasSelection()\n    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)\n\n    @handle(Keys.ControlL)\n    def _(event):\n        """\n        Clear whole screen and render again -- also when the sidebar is visible.\n        """\n        event.cli.renderer.clear()\n\n    @handle(Keys.F2)\n    def _(event):\n        """\n        Show/hide sidebar.\n        """\n        python_input.show_sidebar = not python_input.show_sidebar\n\n    @handle(Keys.F3)\n    def _(event):\n        """\n        Select from the history.\n        """\n        python_input.enter_history(event.cli)\n\n    @handle(Keys.F4)\n    def _(event):\n        """\n        Toggle between Vi and Emacs mode.\n        """\n        python_input.vi_mode = not python_input.vi_mode\n        print(event.cli.vi_state)\n        event.cli.vi_state.input_mode = \'vi-navigation\'\n\n    @handle(Keys.F6)\n    def _(event):\n        """\n        Enable/Disable paste mode.\n        """\n        python_input.paste_mode = not python_input.paste_mode\n\n    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        event.cli.current_buffer.insert_text(\'    \')\n\n    @handle(Keys.ControlJ, filter= ~sidebar_visible & ~has_selection &\n            (ViInsertMode() | EmacsInsertMode()) &\n            HasFocus(DEFAULT_BUFFER) & IsMultiline())\n    def _(event):\n        """\n        Behaviour of the Enter key.\n\n        Auto indent after newline/Enter.\n        (When not in Vi navigaton mode, and when multiline is enabled.)\n        """\n        b = event.current_buffer\n        empty_lines_required = python_input.accept_input_on_enter or 10000\n\n        def at_the_end(b):\n            """ we consider the cursor at the end when there is no text after\n            the cursor, or only whitespace. """\n            text = b.document.text_after_cursor\n            return text == \'\' or (text.isspace() and not \'\\n\' in text)\n\n        if python_input.paste_mode:\n            # In paste mode, always insert text.\n            b.insert_text(\'\\n\')\n\n        elif at_the_end(b) and b.document.text.replace(\' \', \'\').endswith(\n                    \'\\n\' * (empty_lines_required - 1)):\n            if b.validate():\n                # When the cursor is at the end, and we have an empty line:\n                # drop the empty lines, but return the value.\n                b.document = Document(\n                    text=b.text.rstrip(),\n                    cursor_position=len(b.text.rstrip()))\n\n                b.accept_action.validate_and_handle(event.cli, b)\n        else:\n            auto_newline(b)\n\n    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:\n            # Only when the `confirm_exit` flag is set.\n            python_input.confirm_exit and\n            # And the current buffer is empty.\n            cli.current_buffer_name == DEFAULT_BUFFER and\n            not cli.current_buffer.text))\n    def _(event):\n        """\n        Override Control-D exit, to ask for confirmation.\n        """\n        python_input.show_exit_confirmation = True\n\n    return registry\n\ndef load_python_bindings(python_input):\n    """\n    Author: Ryan Burgert\n    """\n    registry = Registry()\n\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n    # handle = registry.add_binding # <---- OLD CODE\n    handle = lambda *args,**kwargs:registry.add_binding(*args,post_handler=post_handler,**kwargs)# <---- NEW CODE: Make sure post_handler is called after every keystroke\n    has_selection = HasSelection()\n    vi_mode_enabled = Condition(lambda cli: python_input.vi_mode)\n    # microcompletions_enabled = Condition(lambda cli: True)\n    microcompletions_enabled = Condition(lambda cli: getattr(python_input,\'enable_microcompletions\',False))\n\n    #region Ryan Burgert Stuff\n    from rp.prompt_toolkit.key_binding.input_processor import KeyPressEvent\n    from rp.prompt_toolkit.document import Document\n    #region Template\n    def _(event):# Parenthesis completion\n        #\n        assert isinstance(event,KeyPressEvent)\n        #\n        from rp.prompt_toolkit.buffer import Buffer\n        buffer=event.cli.current_buffer\n        assert isinstance(buffer,Buffer)\n        #\n        document=buffer.document\n        assert isinstance(document,Document)\n        document.insert_after()\n        #\n        text=document.text_after_cursor\n        assert isinstance(text,str)\n        #\n    # buffer.insert_text("(")\n    # if not text or text[0] in " \\t\\n":\n    #     buffer.insert_text(")")\n    #     buffer.cursor_left(count=1)\n#endregion\n    for char in \'\'\'`~!@#$%^&*()-_=+[{]}\\|;:\'",<.>/?\']\'\'\':\n        def go(c):\n            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                buffer.insert_text(c)\n        go(char)\n    for char in \'~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:"ZXCVBNM<>?`1234567890-=qwertyuiop[]\\\\asdfghjkl;\\\'zxcvbnm,./\':# Normal keyboard inputs\n        def go(c):\n            @handle(c,filter=has_selection & ~vi_mode_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                # buffer.on_text_changed+=lambda *x:buffer.save_to_undo_stack(clear_redo_stack=False)\n                buffer.cut_selection()# Overwrite text if we have something selected\n                buffer.insert_text(c)\n        go(char)\n    from rp import regex_match\n    def self_dot_var_equals_var(buffer,char_to_insert=None):\n        #(upon typing foo)\n        #\n        #class x:\n        #   def __init__(foo):\n        #       self.|=\n        #\n        #    --->\n        #\n        #class x:\n        #   def __init__(foo):\n        #       self.foo|=foo\n\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        #Are we donig this shenanagin right now? (Where we do self.foo=foo, and self.bar=bar...etc)\n        if not \'.\' in before_line:return False\n        self=before_line.lstrip()[:before_line.lstrip().find(\'.\')]\n        if not (before_line.lstrip().startswith(self+\'.\') and after_line.lstrip().startswith(\'=\')):\n            return False\n\n        before_var_name=before_line.lstrip()[len(self+\'.\'):]#might be blank, but that\'s OK\n        after_var_name=after_line[1:].strip()\n        # print("\\nbefore_var_name="+before_var_name+\', after_var_name=\'+after_var_name)\n        out=before_var_name==after_var_name\n        var_name=before_var_name#or after_name, makes no difference\n\n        if out and char_to_insert is not None:\n            if char_to_insert ==\'\\b\':\n                if var_name.strip():\n                    assert buffer is not None#internal logic of how you use this function\n                    buffer.delete_before_cursor()\n                    buffer.cursor_right(len(\'=\'+var_name))\n                    buffer.delete_before_cursor()\n                    buffer.cursor_left(len(\'=\'+var_name)-1)\n            else:\n                assert buffer is not None#internal logic of how you use this function\n                buffer.insert_text(char_to_insert)\n                buffer.cursor_right(len(\'=\'+var_name))\n                buffer.insert_text(char_to_insert)\n                buffer.cursor_left(len(char_to_insert))\n                buffer.cursor_left(len(\'=\'+var_name))\n        return out\n    def setting_index(buffer,char):\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        if regex_match(before_line,r\'.*\\[.*=\') and after_line==\']\':\n            #a[b=|]  --->  a[b]=|\n            if before_line.endswith(\'==\'):\n                #But NOT this:\n                #a[b==|]  --->  a[b=]=|\n                return False\n            buffer.delete_before_cursor()\n            buffer.cursor_right()\n            buffer.insert_text(\'=\'+char)\n            return True\n        return False\n    @handle(\';\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\';\',event):return\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        if after_line.startswith(\']\'):\n            #We can avoid pressing the shift-key here:\n            #L[|]  --->  L[:]\n            buffer.insert_text(\':\')\n        else:\n            buffer.insert_text(\';\')\n        return\n    for char in \'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm_\':#Letter inputs\n            def go(char):\n                @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)\n                def _(event):\n                    buffer=event.cli.current_buffer\n                    if handle_character(buffer,char,event):return\n                    document=buffer.document\n                    current_line=document.current_line\n                    before_line=document.current_line_before_cursor\n                    after_line=document.current_line_after_cursor\n                    before=document.text_before_cursor\n                    after= document.text_after_cursor\n                    if self_dot_var_equals_var(buffer,char) or setting_index(buffer,char):\n                        return\n                    token,name,found=token_name_found_of_interest(before_line)\n                    # print(token,repr(name),found)\n                    if (found and name in (\'9\',\'9j\',\'9J\') or name==\'\') and endswithany(before_line,\'j\',\'J\',\'9\'):\n                        if not (before_line.endswith(\'9\') and char in \'jJ\'):#9j is a legit imaginary literal. That\'s an edge case...\n                            #Tokens can\'t start with a digit and end with a letter. \n                            #So, because of that, we can start a () region by using the 9 key without holding shift\n                            #(Later we\'d want to extend this to quotes, or any other breaking syntax)\n                            #(on press x, for ex)    [9|]  --->   [(x|)]\n                            buffer.delete_before_cursor()\n                            if before_line.lower().endswith(\'j\'):\n                                buffer.delete_before_cursor()\n                            buffer.insert_text(\'(\')\n                            if before_line.lower().endswith(\'j\'):\n                                buffer.insert_text(before_line[-1])\n                            buffer.insert_text(char)\n                            buffer.insert_text(\')\')\n                            buffer.cursor_left()\n                            return\n                    def writing_namespace_breaks_syntax(before_line):\n                        return endswithany(before_line,\' \',#This is like [x |for] (space to the left of |)\n                            \')\',\']\',\'}\',*\'1234567890\',\'"\',"\'")#All of these are breaking syntax...\n                    might_be_in_string_or_comment=\'"\' in before_line and after_line.count(\'"\')==before_line.count(\'"\') or \\\n                                       "\'" in before_line and after_line.count("\'")==before_line.count("\'") or \\\n                                       \'#\' in before_line\n                    keywords={\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\', \'async\', \'await\'}\n                    if before_line.strip() and not might_be_in_string_or_comment:\n                        if not starts_with_any(before_line.lstrip() , \'from \',\'import \'):\n                            i_triggers_ifelse=False\n                            if True:\n                                # if writing_namespace_breaks_syntax(before_line) and char==\'i\' and i_triggers_ifelse and not endswithany(before_line.rstrip(),\'else\',*(keywords-{\'True\',\'False\'})):\n                                #     buffer.insert_text(\'if  else\')\n                                #     buffer.cursor_left(len(\' else\'))\n                                #     return\n                                # if endswithany(before_line,\']i\',\')i\',\'}i\',\'"i\',"\'i",\' i\') and char==\'f\' or char==\'i\':\n                                if before_line.endswith(\'i\') and writing_namespace_breaks_syntax(before_line[:-1]) and char==\'f\' and not (endswithany(before_line[:-1].rstrip(),*(keywords-{\'True\',\'False\'}))) or \\\n                                           i_triggers_ifelse and writing_namespace_breaks_syntax(before_line     ) and char==\'i\' and not (endswithany(before_line     .rstrip(),*(keywords-{\'True\',\'False\'}))):\n                                    #Ternary completion\n                                    # if writing_namespace_breaks_syntax(before_line[:-1]):\n                                        flag=True\n                                        if char==\'i\':\n                                            buffer.insert_text(\'i\')\n                                        if char==\'f\':\n                                            if not before_line[:-1].strip():\n                                                #We don\'t want to complete \'if | else\' on an empty line where we want \'if |:\'\n                                                flag=False\n                                        if flag:\n                                            buffer.insert_text(\'f \')\n                                            if not (starts_with_any(after_line.strip(),\']\',\'}\') and \'for\' in before_line):#This is an imperfect, sloppy check to see if we\'re in a list comprehension and we want \'x for x in y if z\' instead of \'x for x in y if z else\'\n                                                 buffer.insert_text(\' else\')\n                                                 buffer.cursor_left(len(\' else\'))\n                                            return\n                                if before_line.endswith(\'i\') and char==\'n\':\n                                    #Add space after writing \'in\'\n                                    if before_line.strip()!=\'i\':#A blank line starting with \'in\' generally is bad\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +i\',before_line):\n                                            if not (before_line.endswith(\' i\') and endswithany(before_line[:-2],*(set(keywords)-{\'True\',\'False\',\'not\'}))):\n                                                if writing_namespace_breaks_syntax(before_line[:-1]):\n                                                    buffer.insert_text(\'n \')\n                                                    return\n\n                                if before_line.endswith(\'i\') and char==\'s\':\n                                    #Add space after writing \'is\'\n                                    if before_line.strip()!=\'i\':#A blank line starting with \'in\' generally is bad\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +i\',before_line):\n                                            if not (before_line.endswith(\' i\') and endswithany(before_line[:-2],*(set(keywords)-{\'True\',\'False\'}))):\n                                                if writing_namespace_breaks_syntax(before_line[:-1]):\n                                                    buffer.insert_text(\'s \')\n                                                    return\n                                # if char==\'f\':\n                                #     if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,\')\',\'}\',\']\') and not endswithany(before_line.rstrip(),\' in\',\'if\'):\n                                #         #Attempt Comprehension autocompletion\n                                #         #[x |]  --->  [x for | in]\n                                #         #[(a,b)|]  --->  [(a,b)for | in]\n                                #         if re.fullmatch(r\'^.*[a-zA-Z_\\)\\}\\]\\\'\\"] +\',before_line):\n                                #             if not endswithany(before_line.rstrip(),*(\' \'+x for x in keywords)):\n                                #                 buffer.insert_text(\'for  in\')\n                                #                 buffer.cursor_left(len(\' in\'))\n                                #                 return\n                                if char in \'fi\':\n                                    if writing_namespace_breaks_syntax(before_line) and starts_with_any(after_line,\')\',\'}\',\']\') and not endswithany(before_line.rstrip(),\' in\',\'if\'):\n                                        #Attempt Comprehension autocompletion\n                                        #[x |]  --->  [x for | in]\n                                        #[(a,b)|]  --->  [(a,b)for | in]\n                                        if re.fullmatch(r\'^.*(([a-zA-Z_0-9] +)|([\\)\\}\\]\\\'\\"] *))\',before_line):\n                                            if not endswithany(before_line.rstrip(),*(\' \'+x for x in keywords)):\n                                                if not re.fullmatch(r\'.*for [^\\[\\(\\{]+ in [^\\[\\(\\{]+ \',before_line):\n                                                    if char==\'f\':\n                                                        if not before_line.endswith(\' \'):\n                                                            buffer.insert_text(\' \')#For the sake of aesthetics, [[x] for x in y] looks better than [[x]for x in y]\n                                                        buffer.insert_text(\'for  in\')\n                                                        buffer.cursor_left(len(\' in\'))\n                                                        return\n                                                else:\n                                                    #On press i or f: [x for x in y |] ---> [x for x in y if |]\n                                                    buffer.insert_text(\'if \')\n                                                    # buffer.cursor_left(len(\' else\'))\n                                                    return\n                                if char==\'f\':\n                                    #f-->if\n                                    if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +\',before_line):\n                                        #x=x f|   --->   x=x if | else\n                                        if not endswithany(before_line.strip(),*keywords):\n                                            if not before_line.endswith(\' for \')and not after_line.endswith(\' in\'):\n                                                if not re.match(r\'\\w.*\',after_line):\n                                                    buffer.insert_text(\'if  else\')\n                                                    buffer.cursor_left(len(\' else\'))\n                                                    return\n\n\n\n                            if  not endswithany(before_line.rstrip(),*(keywords-{\'True\',\'False\',\'and\',\'or\',\'not\'})) and writing_namespace_breaks_syntax(before_line):\n                                if not endswithany(before_line.rstrip(),*(keywords-{\'not\',\'True\',\'False\'})):\n                                    if  not endswithany(before_line.rstrip(),*(keywords-{\'True\',\'False\'})):\n                                        if re.fullmatch(r\'^.*[a-zA-Z_0-9\\)\\}\\]\\\'\\"] +\',before_line):\n                                            if char==\'o\':\n                                                buffer.insert_text(\'or \')\n                                                return\n                                            if char==\'a\':\n                                                buffer.insert_text(\'and \')\n                                                return\n                                # if not endswithany(before_line.rstrip(),*(keywords-{\'and\',\'or\'})):\n                                #     if char==\'t\':\n                                #         buffer.insert_text(\'not \')\n                                #         return\n                                # TODO CORRECTION: \'t\' --> \'not \' should NOT be handled here, this should be handled as a space completion instead. I\'ll do that later...\n                                # n_makes_in_and_s_makes_is=True#This is imperfect and got annoying\n                                if n_makes_in_and_s_makes_is:#This completion is a real trouble-maker for edge cases...\n                                    if char==\'n\' or char==\'s\':\n                                        if before_line.strip() and not (before_line.endswith(\' \') and endswithany(before_line[:-1],*(set(keywords)-{\'not\',\'True\',\'False\'}))):\n                                            if re.fullmatch(r\'.*[\\]\\}\\)\\\'\\"a-zA-Z0-9_] *\',before_line):\n                                                if not re.fullmatch(r\'.*[^a-zA-Z0-9_](if|and|or|not|while|with|else|elif|is|yield) \',before_line):#prevent: return x if not negative  ——> return x if not in egative| else\n                                                    if not re.fullmatch(r\'[0-9]+[a-zA-Z_].*\',before_line[::-1]):#Prevent: nuts2nuts  —>  nuts2 in uts\n                                                        buffer.insert_text(\'in \' if char==\'n\' else \'is \')\n                                                        return\n\n                    if char==\'m\' and meta_pressed(clear=True):\n                        # ⌥ + m ---> MORE\n                        # ⌥ + m twice ---> MMORE\n                        if before_line==\'MORE\':\n                            buffer.cursor_left(4)\n                            buffer.insert_text(\'M\')\n                            buffer.cursor_right(4)\n                            return\n                        if before_line==\'\':\n                            buffer.insert_text(\'MORE\')\n                            return\n                        if before_line==\'MMORE\':\n                            buffer.cursor_left(4)\n                            buffer.delete_before_cursor()\n                            buffer.cursor_right(4)\n                            return\n                    if True:#not \'"\' in after_line and not "\'" in after_line:\n                        #Jump cursor to headers with special commands following the \'\\\' key\n                        #(on press d)\n                        #def f():\n                        #   return\\|\n                        #   --->\n                        #|def f():\n                        #   return\n                        def jump_cursor_to_beginning_of_header(command:str=\'\\\\db\',header:str=\'def \'):\n                            if before_line.endswith(command):\n                                blines=before.splitlines()[:-1]\n                                if any(x.lstrip().startswith(header)for x in blines):\n                                    cline=lambda:buffer.document.current_line\n                                    buffer.cursor_up()\n                                    while not cline().lstrip().startswith(header):\n                                        buffer.cursor_up()\n                                        buffer.cursor_left(99999)\n                                    buffer.cursor_right(99999)\n                                    buffer.cursor_right(len(get_indent(cline())))\n                                    return\n                        # header_jump_commands={\n                        #                  \'\\\\db\':\'def \',\n                        #                  \'\\\\cl\':\'class \',\n                        #                  \'\\\\if\':\'if \',#go ...etc\n                        #                  \'\\\\wh\':\'while \',\n                        #                  \'\\\\wi\':\'with \',\n                        #                  \'\\\\fo\':\'for \',#go f\n                        #                  \'\\\\el\':\'el\'}#go e\n                        header_arg_commands={\n                                             \'\\\\re\':\'replace\',\n                                             \'\\\\py\':\'python\',\n                                             \'\\\\dtl\':\'delete to line\',\n                                             \'\\\\go\':\'goto\',\n                                             \'\\\\lo\':\'load\',\n                                             \'\\\\sa\':\'save\',\n                                             \'\\\\wr\':\'write\',\n                                             \'\\\\ca\':\'cancel\',\n                                             \'\\\\t3pa\':\'tmux_comment_paste\',\n                                             \'\\\\3tpa\':\'tmux_comment_paste\',\n                                             \'\\\\3an\':\'comment_ans\',\n                                             \'\\\\/c\':\'source_code\',\n                                             \'\\\\?c\':\'source_code\',\n                                             }\n                        header_commands={\n                                         \'\\\\sim\':\'sort_imports\',\n                                         \'\\\\bla\':\'black\',\n                                         \'\\\\sg\':\'save_gist\',\n                                         \'\\\\lg\':\'load_gist\',\n                                         \'\\\\co\':\'copy\',\n                                         \'\\\\pa\':\'paste\',\n                                         \'\\\\3pa\':\'comment_paste\',\n                                         \'\\\\vpa\':\'vim_paste\',\n                                         \'\\\\vspa\':\'vim_string_paste\',\n                                         \'\\\\vco\':\'vim_copy\',\n                                         \'\\\\tpa\':\'tmux_paste\',\n                                         \'\\\\tspa\':\'tmux_string_paste\',\n                                         \'\\\\tco\':\'tmux_copy\',\n                                         \'\\\\lpa\':\'local_paste\',\n                                         \'\\\\lspa\':\'local_string_paste\',\n                                         \'\\\\wpa\':\'web_paste\',\n                                         \'\\\\wspa\':\'web_string_paste\',\n                                         \'\\\\rpr\':\'repr\',\n                                         \'\\\\rpa\':\'repr ans\',\n                                         \'\\\\wco\':\'web_copy\',\n                                         \'\\\\ed\':\'editor\',\n                                         \'\\\\vi\':\'vim\',\n                                         \'\\\\al\':\'align_lines\',\n                                         \'\\\\ac\':\'align_char\',\n                                         \'\\\\sw\':\'strip_whitespace\',\n                                         \'\\\\sc\':\'strip_comments\',\n                                         \'\\\\mla\':\'multi line arguments\',\n                                         \'\\\\fo\':\'for\',\n                                         \'\\\\fi\':\'import_from_swap\',\n                                         \'\\\\de\':\'def\',\n                                         \'\\\\wh\':\'while\',\n                                         \'\\\\da\':\'delete all\',\n                                         \'\\\\lss\':\'LSS\',\n                                         \'\\\\lsr\':\'Relative LSS\',\n                                         \'\\\\an\':\'ans\',\n                                         \'\\\\san\':\'string ans\',\n                                         \'\\\\tbp\':\'toggle_big_parenthesis\',\n                                         \'\\\\spa\':\'string_paste\',\n                                         \'\\\\d0l\':\'delete_empty_lines\',\n                                         \'\\\\dtt\':\'delete_to_top\',\n                                         \'\\\\dtb\':\'delete_to_bottom\',\n                                         \'\\\\sl\':\'sort_lines\',\n                                         \'\\\\rl\':\'reverse_lines\',\n                                         \'\\\\ya\':\'yapf autoformat\',\n                                         \'\\\\gg\':\'go to top\',\n                                         \'\\\\GG\':\'go to bottom\',\n                                         \'\\\\vO\':\'vim open up\',\n                                         \'\\\\vo\':\'vim open down\',\n                                         \'\\\\fn\':\'function_name\',\n                                         \'\\\\tts\':\'tabs to spaces\',\n                                         \'\\\\23p\':\'python_2_to_3\',\n                                         \'\\\\db\':\'debug\',\n                                         \'\\\\pu\':\'pudb\',\n                                         \'\\\\wi\':\'workingindex\',\n                                         \'\\\\en\':\'enumerate\',\n                                         }\n                        # header_commands.update(header_jump_commands)\n                        header_commands.update(header_arg_commands)\n\n                        for command,header in header_commands.items():\n                            key=command[-1]\n                            chopped_command=command[:-1]\n                            if before_line.endswith(chopped_command) and char==key:\n                                buffer.delete_before_cursor(len(chopped_command))\n                                # if command in header_jump_commands:\n                                #     jump_cursor_to_beginning_of_header(chopped_command,header)\n                                if command in header_arg_commands and \'`\' in before_line:\n                                    if header==\'replace\':\n                                        #DEMO: Type\n                                        #`foo`bar\\r\n                                        #into the buffer (with a whole bunch of foo\'s which will be turned into bar\'s\')\n                                        if before_line.count(\'`\')==2:#dumb assumption im makin\n                                            arg1=before_line.split(\'`\')[1]\n                                            arg2=before_line.split(\'`\')[2].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg1+\'`\'+arg2+\'`\'))\n                                            text=buffer.document.text.replace(arg1,arg2)\n                                            buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)\n                                    if header==\'cancel\':\n                                        #Cancel whatever command you\'ve written and delete it. Beats having to delete it manually.\n                                        if before_line.count(\'`\')==2:#dumb assumption im makin\n                                            arg1=before_line.split(\'`\')[1]\n                                            arg2=before_line.split(\'`\')[2].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg1+\'`\'+arg2+\'`\'))\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                    if header==\'python\':\n                                         #DEMO: Type        \n                                         #`lambda x:x.replace(\'foo\',\'bar\')\\p\n                                         #into the buffer (with a whole bunch of foo\'s which will be turned into bar\'s\')\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                modifier=eval(arg,r_iterm_comm.globa);text=modifier(text);buffer.document=Document(text,buffer.document.cursor_position,buffer.document.selection)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'load\':\n                                        #Load a file into the buffer\n                                        from rp import text_file_to_string, string_to_text_file\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                new_text=text_file_to_string(arg)\n                                                buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'write\':\n                                        #Write a file from the buffer (without asking to overwrite)\n                                        from rp import text_file_to_string, string_to_text_file\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                string_to_text_file(arg,text)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    if header==\'save\':\n                                        #A safer alternative to write, which will create a backup file if we\'re overwriting it\n                                        from rp import text_file_to_string  , \\\n                                                       string_to_text_file  , \\\n                                                       file_exists          , \\\n                                                       get_parent_directory , \\\n                                                       get_file_name        , \\\n                                                       path_join            , \\\n                                                       get_current_date\n                                        if before_line.count(\'`\')==1:#give a lambda that takes one argument\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            path=arg\n                                            if file_exists(path):\n                                                try:\n                                                    file_name=get_file_name(path)\n                                                    directory=get_parent_directory(path)\n                                                    backup_path=path_join(directory,\'.\'+file_name+\'.backup.\'+str(get_current_date()).replace(\' \',\'_\')+\'.py\')\n                                                    file_contents=text_file_to_string(path)\n                                                    string_to_text_file(backup_path,file_contents)\n                                                except BaseException as E:\n                                                    buffer.insert_text(\'#Failed to backup file \'+repr(path)+\', aborting the save. (Undo to make me go away). Error: \'+repr(E))\n                                                    return\n                                            buffer.delete_before_cursor(len(path+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                string_to_text_file(path,text)\n                                            except BaseException as E:\n                                                buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                                \n                                        header=\'aoisjdaosijdoiasjdaosijd\' #Prevent string ans from triggering\n                                        # else:\n                                            # buffer.insert_text(\'\\\\sa\')#For \'\\san\' for string ans\n\n                                    if header==\'goto\':\n                                        if before_line.count(\'`\')==1:\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                n=int(arg)\n                                                go_to_line_number(n,buffer)\n                                            except Exception as e:\n                                                buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                                pass\n                                    if header==\'delete to line\':\n                                        if before_line.count(\'`\')==1:\n                                            # buffer.insert_text(\'\\n#we: \')\n                                            arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(arg+\'`\'))\n                                            text=buffer.document.text\n                                            try:\n                                                _i=current_line_index(buffer)+1\n                                                _n=int(arg)\n                                                if _n<_i:\n                                                    go_to_line_number(_n,buffer)\n                                                for _ in range(abs(_n-_i)+1):\n                                                    delete_current_line(buffer)\n                                            except Exception as e:\n                                                buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                                pass\n                                    # if header==\'delete\':\n                                    #     if before_line.count(\'`\')==1:\n                                    #         arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                    #         buffer.delete_before_cursor(len(arg+\'`\'))\n                                    #         text=buffer.document.text\n                                    #         try:\n                                    #             _i=current_line_index(buffer)\n                                    #             _n=int(arg)\n                                    #             if n<i:\n                                    #                 go_to_line_number(_n,buffer)\n                                    #             for _ in range(abs(_n-_i)+1):\n                                    #                 delete_current_line(buffer)\n                                    #         except Exception as e:\n                                    #             buffer.insert_text(\'\\n#ERROR: \'+str(e))\n                                    #             pass\n                                \n                                if header==\'load\' and not \'`\' in before_line:\n                                    from rp import text_file_to_string, string_to_text_file, input_select_file\n                                    try:\n                                        print(end=\'\\033[999B\\n\\033[999D\\n\')#Move the cursor to the bottom left of the screenhttps://tldp.org/HOWTO/Bash-Prompt-HOWTO/x361.html\n                                        arg=input_select_file(message=\'Please select a python file to load into the buffer\')\n                                        new_text=text_file_to_string(arg)\n                                        buffer.document=Document(new_text,buffer.document.cursor_position,buffer.document.selection)\n                                    except BaseException as E:\n                                        buffer.insert_text("\\nERROR: "+str(E)+"\\n(Undo to make me go away)\\n")\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    \n                                if header==\'LSS\':\n                                    #LSS refers to the command \'LSS\' aka \'LS SEL\' in rp\'s pseudo_terminal.\n                                    try:\n                                        import rp\n                                        rp.clear_terminal_screen()\n                                        buffer.insert_text(repr(rp.input_select_path()))\n                                    except:pass\n                                    event.cli.renderer.clear()#Refresh the screen\n                                    \n                                if header==\'Relative LSS\':\n                                    #LSS refers to the command \'LSS\' aka \'LS SEL\' in rp\'s pseudo_terminal.\n                                    try:\n                                        import rp\n                                        rp.clear_terminal_screen()\n                                        buffer.insert_text(repr(rp.get_relative_path(rp.input_select_path())))\n                                    except:pass\n                                    event.cli.renderer.clear()#Refresh the screen\n                                        \n                                if header==\'workingindex\':\n                                    buffer.insert_text(\'#\'+str(buffer.working_index))\n\n                                if header==\'debug\':\n                                    toggle_top_line_text(buffer,"from rp import debug;debug()\\n")\n                                    # toggle_bottom_line_text(buffer,"pip_import(\'sys\').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py\n                                if header==\'pudb\':\n                                    line="from rp import pip_import;pip_import(\'pudb\').set_trace()"\n                                    import rp\n                                    if rp.currently_running_windows():\n                                        line+=\'#WARNING: pudb crashes on windows; it\\\'s unix-only\'\n                                    line+=\'\\n\'\n                                    toggle_top_line_text(buffer,line)\n                                    # toggle_bottom_line_text(buffer,"pip_import(\'sys\').settrace(None)#Exit the debugger")#Use the default exit-the-debugger#Commented this out. THis functionality is not handled, in a better way, in patch_linecache.py\n                                if header==\'align_lines\':\n                                    #Insert the alignment char that cant normally be typed on a keyboard in this app\n                                    text=buffer.document.text\n                                    text=align_lines_to_char(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'align_char\':\n                                    buffer.insert_text(align_char)\n                                    buffer.cursor_left()\n                                if header==\'strip_whitespace\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(line.rstrip() for line in text.split(\'\\n\'))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'import_from_swap\':\n                                    before_line=buffer.document.current_line_before_cursor\n                                    after_line=buffer.document.current_line_after_cursor\n                                    current_line=buffer.document.current_line\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    buffer.insert_text(swap_from_import(current_line))\n                                if header==\'enumerate\':\n                                    def uses_enumerate(line):\n                                        ans=line\n                                        ans=ans.split(\' in \')\n                                        ans=ans[1]\n                                        ans=ans.strip()\n                                        ans=ans.startswith(\'enumerate\')\n                                        return ans\n\n                                    def transform_var(line):\n                                        ans=line\n                                        ans=ans.split(\' in \')\n                                        l=ans\n                                        ans=ans[0]\n                                        ans=ans.strip()\n                                        ans=ans[len(\'for \'):]\n                                        oldvar=ans\n                                        if not ans.isalnum():\n                                            ans=\'(\'+ans+\')\'\n                                        ans=\',\'+ans\n                                        var=ans\n                                        return line.replace(oldvar,var,1)\n                                    def enumeratify(line):\n                                        ans=line.rstrip()\n                                        ans=ans[:ans.find(\' in \')+len(\' in \')]+\'enumerate(\'+ans[ans.find(\' in \')+len(\' in \'):-1]+\'):\'\n                                        return ans\n                                    before_line=buffer.document.current_line_before_cursor\n                                    after_line=buffer.document.current_line_after_cursor\n                                    current_line=buffer.document.current_line\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    buffer.insert_text(swap_from_import(current_line))\n                                    leading_whitespace=current_line[:len(current_line)-len(current_line.lstrip())]\n                                    buffer.cursor_right(9999)\n                                    buffer.delete_before_cursor(len(current_line))\n                                    new_line=transform_var(enumeratify(current_line))\n                                    buffer.insert_text(leading_whitespace+new_line)\n                                    buffer.cursor_left(9999)\n                                    buffer.cursor_right(len(leading_whitespace+\'for \'))\n\n                                if header==\'toggle_big_parenthesis\':\n                                    if not \'\\n\' in before+after:\n                                        #If has a single line, add a new line to avoid a glitch where we get too many parenthesis\n                                        text=buffer.document.text\n                                        buffer.document=Document(buffer.document.text+\'\\n\',min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    commented_parenthesizer_automator.buffer_toggle_parenthesization(buffer)\n                                if header==\'delete_to_top\':\n                                    text=buffer.document.text\n                                    lineno=document.text_before_cursor.count(\'\\n\')\n                                    colno=document.cursor_position_col\n                                    text=text.splitlines()[lineno:]\n                                    text=\'\\n\'.join(text)\n                                    buffer.document=Document(text,colno-len(r\'\\dt\'),buffer.document.selection)\n                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'delete_to_bottom\':\n                                    text=buffer.document.text\n                                    lineno=document.text_before_cursor.count(\'\\n\')\n                                    colno=document.cursor_position_col\n                                    text=text.splitlines()[:lineno+1]\n                                    text=\'\\n\'.join(text)\n                                    buffer.document=Document(text,text.rfind(\'\\n\')+colno-len(r\'\\dt\'),buffer.document.selection)\n                                    # buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'delete_empty_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(line for line in text.split(\'\\n\') if line.strip())\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'sort_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(sorted(text.split(\'\\n\')))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'reverse_lines\':\n                                    text=buffer.document.text\n                                    text=\'\\n\'.join(reversed(text.split(\'\\n\')))\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'strip_comments\':\n                                    from rp import strip_python_comments\n                                    text=buffer.document.text\n                                    text=strip_python_comments(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'repr\':\n                                    #A shortcut to `repr\\py\n                                    text=buffer.document.text\n                                    buffer.document=Document(repr(text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'black\':\n                                    from rp import pip_import\n                                    try:\n                                        pip_import(\'black\')\n                                        import black\n                                        text=buffer.document.text\n                                        text=black.format_str(text,mode=black.Mode())\n                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#sort_imports: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'sort_imports\':\n                                    from rp import pip_import\n                                    try:\n                                        pip_import(\'isort\')\n                                        import isort\n                                        text=buffer.document.text\n                                        text=isort.code(text)\n                                        buffer.document=Document((text),min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#sort_imports: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'source_code\':\n                                    #Sets ans=rp.get_source_code(current buffer)\n                                    indent=\'\'\n                                    if before_line.count(\'`\')==1:\n                                        commented_arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                        buffer.delete_before_cursor(len(commented_arg+\'`\'))\n                                        before_line=buffer.document.current_line_before_cursor\n                                        indent=\' \'*(len(before_line)-len(before_line.lstrip()))\n                                        text=commented_arg\n                                    else:\n                                        text=buffer.document.text\n                                        buffer.delete_before_cursor(99999999)\n                                        buffer.delete(99999999)\n                                    try:\n                                        item=eval(text,r_iterm_comm.globa)\n                                        from rp import get_source_code\n                                        code=get_source_code(item)\n                                        code=code.splitlines()\n                                        code=code[::-1]\n                                        code[:-1]=[indent+line for line in code[:-1]] \n                                        code=code[::-1]\n                                        code=\'\\n\'.join(code)\n                                        # buffer.document=Document(code,min(len(code),buffer.document.cursor_position),buffer.document.selection)\n                                        buffer.insert_text(code)\n                                    except BaseException as e:\n                                        buffer.insert_text(\'#get_source_code: Error: \'+str(e).replace(\'\\n\',\' ; \'))\n                                if header==\'save_gist\':\n                                    #Sets ans=str(current buffer)\n                                    text=buffer.document.text\n                                    text=repr(text)\n                                    text=\'from rp import save_gist;ans=save_gist(%s)\'%text\n                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??\n                                if header==\'load_gist\':\n                                    from rp import load_gist\n                                    text=buffer.document.text\n                                    try:\n                                        try:\n                                            text=load_gist(text)\n                                        except Exception:\n                                            text=\'git.io/\'+text\n                                            text=load_gist(text)\n                                    except Exception:\n                                        text=\'#Failed to load gist at specified url\'\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'repr ans\':\n                                    #Sets ans=str(current buffer)\n                                    text=buffer.document.text\n                                    text=repr(text)\n                                    run_arbitrary_code_without_destroying_buffer(text,event,put_in_history=True)#To include or not to include...which one??\n                                if header==\'tabs to spaces\':\n                                    text=buffer.document.text\n                                    text=text.replace(\'\\t\',\'    \')\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'function_name\':\n                                    #Insert the current function\'s name\n                                    func_names=get_all_function_names(buffer.document.text_before_cursor)\n                                    buffer.insert_text(func_names[-1] if func_names else \'\')\n                                if header==\'python_2_to_3\':\n                                    text=buffer.document.text\n                                    from rp import python_2_to_3\n                                    text=python_2_to_3(text)\n                                    buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                if header==\'while\':\n                                    text=buffer.document.text\n                                    text=\'while True:\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,10,buffer.document.selection)\n                                if header==\'for\':\n                                    text=buffer.document.text\n                                    text=\'for  in :\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,4,buffer.document.selection)\n                                if header==\'def\':\n                                    text=buffer.document.text\n                                    text=\'def ():\\n\'+\'\\n\'.join([\'    \'+line for line in text.split(\'\\n\')])\n                                    buffer.document=Document(text,4,buffer.document.selection)\n                                if header==\'go to top\':\n                                    buffer.cursor_up(1000000)\n                                if header==\'go to bottom\':\n                                    buffer.cursor_down(1000000)\n                                if header==\'vim open down\':\n                                    buffer.delete_before_cursor()\n                                    buffer.cursor_up()\n                                    buffer.cursor_right(1000000)\n                                    buffer.insert_text(\'\\n\'+get_indent(current_line))\n                                if header==\'vim open up\':\n                                    buffer.delete_before_cursor()\n                                    buffer.cursor_left(1000000)\n                                    buffer.insert_text(\'\\n\')\n                                    buffer.cursor_up()\n                                    buffer.insert_text(get_indent(current_line))\n                                if header==\'multi line arguments\':\n                                    #Meant to split a def(x,y,z,w,asd,as,das,d,asd,aoisdaiosdiasidasd,as,d,asd,a,sd,as,da,sd,as,da,sd,asd,): onto multiple lines to make it more readable. see split_def_arguments_into_multiple_lines\'s documentation for an example.\n                                    before_line=before_line[:-3]#get rid of the \\ml\n                                    buffer.delete_before_cursor(len(before_line))\n                                    buffer.delete(len(after_line))\n                                    # print("\\n\\n\\n"+before_line+after_line+\'\\n\\n\\n\')\n                                    new_def=split_def_arguments_into_multiple_lines(before_line+after_line)\n                                    # print("THEN")\n                                    # print("\\n\\n\\n"+new_def+\'\\n\\n\\n\')\n                                    # print("END")\n                                    # print(new_def)\n                                    buffer.insert_text(new_def)\n                                if header==\'local_copy\':\n                                    import rp\n                                    do_local_copy(buffer.document.text)\n                                if header==\'vim_copy\':\n                                    import rp\n                                    do_vim_copy(buffer.document.text)\n                                if header==\'tmux_copy\':\n                                    import rp\n                                    do_tmux_copy(buffer.document.text)\n                                if header==\'web_copy\':\n                                    import rp\n                                    do_web_copy(buffer.document.text)\n                                if header==\'copy\':\n                                    import rp\n                                    do_copy(buffer.document.text)\n                                if header==\'editor\':\n                                    text=buffer.document.text   \n                                    try:\n                                        from rp import pip_import\n                                        editor=pip_import(\'editor\')\n                                        text=editor.edit(contents=text,use_tty=True,suffix=\'.py\').decode()\n                                        buffer.document=Document(text,min(len(text),buffer.document.cursor_position),buffer.document.selection)\n                                        event.cli.renderer.clear()#Refresh the screen\n                                    except ImportError:\n                                        buffer.insert_text("#ERROR: Cannot import \'editor\'. Try pip install python-editor")\n                                if header==\'vim\':\n                                    edit_event_buffer_in_vim(event)\n                                if header==\'save\' or header==\'string ans\':#header==\'save\' because of the conflict of \\sa in the dict\n                                    buffer.insert_text(repr(str(get_ans())))\n                                if header==\'ans\':\n                                    buffer.insert_text(str(get_ans()))\n\n                                if header==\'web_string_paste\'   : do_web_paste(buffer,repr_mode=True)\n                                if header==\'tmux_string_paste\'  : do_tmux_paste(buffer,repr_mode=True)\n                                if header==\'vim_string_paste\'  : do_vim_paste(buffer,repr_mode=True)\n                                if header==\'local_string_paste\' : do_local_paste(buffer,repr_mode=True)\n\n                                if header==\'web_paste\'          : do_web_paste(buffer,repr_mode=False)\n                                if header==\'tmux_paste\'         : do_tmux_paste(buffer,repr_mode=False)\n                                if header==\'vim_paste\'         : do_vim_paste(buffer,repr_mode=False)\n                                if header==\'local_paste\'        : do_local_paste(buffer,repr_mode=False)\n\n                                if \'comment_paste\' in header or \'comment_ans\'==header:\n                                    commented_arg=\'\'\n                                    if before_line.count(\'`\')==1:\n                                            commented_arg=before_line.split(\'`\')[1].split(\'\\\\\')[0]\n                                            buffer.delete_before_cursor(len(commented_arg+\'`\'))\n                                    \n                                    if header==\'tmux_comment_paste\' : do_tmux_paste(buffer,repr_mode=False,commented=commented_arg)\n                                    if header==\'comment_paste\'      : do_paste(buffer,commented=commented_arg)\n                                    if header==\'comment_ans\'      : \n\n                                        ans=str(get_ans())\n                                        ans=commented_string(buffer,ans,spaces=commented_arg)\n                                        buffer.insert_text(ans)\n\n                                if header==\'paste\'              : do_paste(buffer)\n                                if header==\'string_paste\'       : do_string_paste(buffer)\n\n                                if header==\'delete all\':\n                                    buffer.document=Document(\'\',0,buffer.document.selection)\n                                if header==\'yapf autoformat\':\n                                    try:\n                                        from rp import pip_import\n                                        yapf=pip_import(\'yapf\')\n                                    except:\n                                        fansi_print("ERROR: To use yapf\'s autoformat, you must first install yapf. \'pip install yapf\' is an option. See https://github.com/google/yapf",\'red\',\'bold\')\n                                        return\n                                    try:\n                                        # buffer.delete_before_cursor(len(\'\\\\ya\'))\n                                        buffer.document=Document(yapf.yapf_api.FormatCode(buffer.document.text)[0],buffer.document.cursor_position,buffer.document.selection)\n                                    except Exception as e:\n                                        from rp import fansi_print \n                                        buffer.insert_text("\\n#ERROR Using yapf autoformatter: "+str(e))\n                                return\n\n                    if char in {\'d\',\'c\'} and not before_line.strip():\n                        above=line_above(buffer)#returns None if there are no above lines\n                        if above is not None and get_indent(above)==get_indent(before_line):\n                            if above.strip().startswith(\'@\'):#we have a decorator on our hands...\n                                #when we\'re below a decorator and we press d or c, the only valid syntax is to create a \'def\' or a \'class\' keyword \n                                if char==\'d\':\n                                    if in_class_func_decl(buffer):\n                                        #class c:\n                                        #   @decorator\n                                        #   |\n                                        #\n                                        #   --->\n                                        # \n                                        #class c:\n                                        #   @decorator\n                                        #   def |(self):\n                                        buffer.insert_text(\'def (self):\')\n                                        buffer.cursor_left(7)\n                                        return\n                                    else:\n                                        #@decorator\n                                        #|\n                                        #\n                                        #--->\n                                        # \n                                        #@decorator\n                                        #def |():\n                                        buffer.insert_text(\'def ():\')\n                                        buffer.cursor_left(3)\n                                        return\n                                if char==\'c\':\n                                        #@decorator\n                                        #|\n                                        #\n                                        #--->\n                                        # \n                                        #@decorator\n                                        #class |:\n                                        buffer.insert_text(\'class :\')\n                                        buffer.cursor_left(1)\n                                        return\n                    if char==\'s\':\n                            # cl=find_level("class ")#class level\n                            # dl=find_level("def ")#def level\n                            # dh=find_header("def ")#def header\n                            # if cl is not None and dl is not None and dl>cl:\n                            #     if \'(self\' in dh:\n                            if meta_pressed(clear=True):\n                                buffer.insert_text(\'self\')\n                                return \n                    # if char==\'e\':\n                            # buffer.insert_text(\'trans\')\n                            # if meta_pressed(clear=False):\n                                # buffer.accept_action.run_in_terminal(render_cli_done=True)\n                                # buffer.accept_action.validate_and_handle(event.cli, buffer)\n                                # buffer.insert_text(\'elf\')\n                                # buffer.insert_text(\'self\')\n                                # return \n                    if regex_match(before_line,r\'\\s*for _ in range\\(\\d+\'):\n                        #(let\'s say we press Y)\n                        #for _ in range(123|):  --->  for _ in range(Y|):\n                        buffer.delete_before_cursor(len(before_line.lstrip())-len(\'for _ in range(\'))\n                        buffer.insert_text(char)\n                        return\n                    buffer.insert_text(char) \n            go(char)\n            meta_pressed(clear=True)#Reset: we don\'t want to keep the esc key pressed (this should go after every keystroke. Period. But it doesnt yet cause ima be a lazy...)\n    for char in \'1234567890\':#Digit inputs\n        def go(c):\n            @handle(c,filter=~vi_mode_enabled&microcompletions_enabled)\n            def _(event):\n                buffer=event.cli.current_buffer\n                if handle_character(buffer,c,event):return\n                if self_dot_var_equals_var(buffer,c) or setting_index(buffer,c):\n                    return\n                document=buffer.document\n                current_line=document.current_line\n                before_line=document.current_line_before_cursor\n                after_line=document.current_line_after_cursor\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                above_line=line_above(buffer)\n                single_line=above_line is None\n                #\n                if c==\'3\':\n                    if before_line.endswith(\':\') and not after_line and starts_with_any(before_line.lstrip(),\'def \',\'for \',\'if \',\'while \',\'except \',\'try:\'):\n                        #Adding comments to the end of function declarations...what meaningful function would start with \'3\'?\n                        buffer.insert_text(\'#\')\n                        return\n                    if not single_line and not before_line.strip():\n                        #Why reach for the shift key?\n                        #What meaningful text could you write on a line starting with 3....on multi lines....\n                        buffer.insert_text(\'#\')\n                        return\n                    if meta_pressed():\n                        buffer.cursor_right(123123)\n                        buffer.insert_text(\'#\')\n                        return\n                    if endswithany(before_line,\')\',\']\') and after_line==\'\':\n                        #If inserting \'3\' would be break syntax and \'#\' would not, insert \'#\'\n                        #This saves a shift-key stroke\n                        buffer.insert_text(\'#\')\n                        return\n                if before == \'from \' and after == \' import\':\n                    #Lets us do \'f 5\' to get a for loop in the first line, instead of trying to import something\n                    #from | import    --->   for _ in range(4|):\n                    buffer.delete_before_cursor(999)\n                    buffer.delete(999)\n                    buffer.insert_text(\'for _ in range(\'+c+\'):\')\n                    buffer.cursor_left(2)\n                    return\n                if regex_match(before_line,r\'\\s*for\\s+\\w+\\s+in\\s+\') and after_line.strip()==\':\':\n                    #(let\'s say c=3...)\n                    #for x in |: --> for x in range(3|):\n                    buffer.insert_text(\'range(\'+c+\')\')\n                    buffer.cursor_left()\n                    return\n                if before_line.endswith(\'for \') and endswithany(after_line,\' in]\',\' in)\',\' in}\'):\n                    #[x for | in]  --->  [x for _ in range(9|)]\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(3)\n                    buffer.insert_text(\' range()\')\n                    buffer.cursor_left()\n                    buffer.insert_text(c)\n                    return\n                if before_line.endswith(\' in \') and endswithany(after_line,\']\',\')\',\'}\'):\n                    #[x for y in |]  --->  [x for y in range(9)]\n                    buffer.insert_text(\'range()\')\n                    buffer.cursor_left()\n                    buffer.insert_text(c)\n                    return\n                if before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n                    #(let\'s say c=3...)\n                    #for | in : --> for _ in range(3|):\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(len(\' in \'))\n                    buffer.insert_text(\'range(\'+c+\')\')\n                    buffer.cursor_left()\n                    return\n                if c==\'8\' and before_line.lstrip().startswith(\'def \') and after_line.endswith(\'):\') and before_line.count(\'(\')==1 and endswithany(before_line,\'(\',\',\',\'*\'):\n                    #Why use the shift key to make kwargs?\n                    #(on pressing 8)\n                    #def f(|)   --->   def f(*|)\n                    #def f(a,b,*|)   --->   def f(a,b,**|)\n                    buffer.insert_text(\'*\')\n                    return\n                if before_line.lstrip()==\'def \'and after_line in [\'():\',\':\']:\n                    #8 is the key that makes the * chracter. We can\'t start function names with numbers, so let\'s make this the default...\n                    #On press 8:\n                    #def |:   --->   def _(*args,**kwargs):|\n                    buffer.delete(len(before_line))\n                    buffer.insert_text(\'_(*args,**kwargs):\')\n                    return\n                if before==\'ans.\' and not after:\n                    if ans_dot_completion_string:\n                        # Let\'s say c=3...\n                        # (middle \'ans.|\' is current state)\n                        #   ans(|)   -->   ans.|   -->   ans(.3|)\n                        #                   AND\n                        #   ans[|]   -->   ans.|   -->   ans[.3|]\n                        buffer.delete_before_cursor()\n                        buffer.insert_text(ans_dot_completion_string)\n                        buffer.cursor_left()\n                        buffer.insert_text(\'.\')\n                    else:\n                        # Let\'s say c=3...\n                        #   ans.|   -->  .3|\n                        # This lets use the \'ans.\' completion from just typing \'.\', without sacrificing the ability to type \'.4\'\n                        buffer.delete_before_cursor(len(before))\n                        buffer.insert_text(\'.\')\n                buffer.insert_text(c)\n        go(char)\n\n\n    # @handle(\'Ω\')\n    # def _(event):\n    #     import rp.prompt_toolkit.key_binding.bindings.vi as vi \n    #     try:\n    #         vi.ryan_go_to_vim_navigation_mode(event)\n    #     except:pass\n    #\n    @handle(Keys.ShiftLeft)\n    def _(event):\n        """\n        Select from the history.\n        """\n        buffer=event.cli.current_buffer\n        before_line=buffer.document.current_line_before_cursor\n        if before_line.lstrip():\n            #····blah|   --->   ····|blah\n            buffer.cursor_left(len(before_line.lstrip()))\n        elif before_line:\n            #····|blah   --->   |····blah\n            buffer.cursor_left(1000000)\n        elif buffer.cursor_position:\n            after=buffer.document.text_after_cursor\n            if after.count(\'\\n\'):\n                buffer.cursor_up()\n                move_line_down(buffer)\n                buffer.cursor_up()\n            else:\n                move_line_down(buffer)\n            buffer.cursor_left(1000000)\n\n#     @handle(Keys.ControlBackslash)\n#     def _(event):\n#         buffer=event.cli.current_buffer\n#         pseudo_terminal(merge_dicts(r_iterm_comm.globa,{ans:buffer.document.text}))\n\n    @handle(Keys.ShiftRight)\n    def _(event):\n        buffer=event.cli.current_buffer\n        after_line=buffer.document.current_line_after_cursor\n        before_line=buffer.document.current_line_before_cursor    \n        if after_line and before_line.strip() or after_line and after_line==after_line.lstrip():\n            #····|blah   --->   ····blah|\n            buffer.cursor_right(1000000)\n        elif after_line:\n            #|····blah   --->   ····|blah\n            buffer.cursor_right(len(after_line)-len(after_line.lstrip()))\n        else:\n            after=buffer.document.text_after_cursor\n            if after.count(\'\\n\')==0:\n                return#We\'re on the bottom\n            elif after.count(\'\\n\')==1:\n                buffer.cursor_down()\n                move_line_down(buffer)\n                buffer.cursor_down()\n            else:\n                move_line_down(buffer)\n    def move_line_down(buffer,up=False):\n        document=buffer.document\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        buffer.cursor_left(1000000)\n        if not buffer.cursor_position:\n            buffer.delete(2)\n        buffer.cursor_right(1000000)\n        # print("Ima doing/ it!")\n        delete_current_line(buffer)\n        buffer.cursor_right(10000)\n        buffer.cursor_down(1)\n        buffer.cursor_left(10000)\n        #region Adaptive indentation: Currently not implemented. Sticking to simplicity.\n        if False:\n            buffer.insert_line_above(copy_margin=not up)\n            buffer.insert_text(current_line.lstrip() if not up else current_line)\n            text=buffer.document.text\n            lstrip=text.lstrip()\n        else:\n            buffer.insert_line_above(copy_margin=False)\n            buffer.insert_text(current_line)\n            lstrip=text=buffer.document.text\n\n        # buffer.cursor_down(1)\n        # buffer.cursor_right(1000000)\n        buffer.document=Document(lstrip,buffer.document.cursor_position+(len(lstrip)-len(text)),buffer.document.selection)\n\n    #These keys don\'t respond on the mac terminal\n    # @handle(Keys.ShiftUp)\n    # def _(event):\n    #     print(324982308974078923)\n    #     event.cli.current_buffer.cursor_right(1000000)\n    #\n    # @handle(Keys.ShiftDown)\n    # def _(event):\n    #     print(324982308974078923)\n    #     buffer=event.cli.current_buffer\n    #     document=buffer.document\n    #     current_line=document.current_line\n\n    @handle(Keys.ControlD)# Duplicate current line Only applies when there\'s text, else it will trigger the exit\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        buffer.cursor_right(10000)\n        current_line=document.current_line\n        # buffer.insert_line_below()\n        buffer.insert_text("\\n"+current_line)\n    def current_line_index(buffer):\n        #returns current line number, starting from 0\n        return buffer.document.text_before_cursor.count(\'\\n\')\n    def go_to_line_number(n,buffer):\n        i=current_line_index(buffer)\n        delta=i-n\n        if delta<0:\n            buffer.cursor_down(abs(delta))\n        else:\n            buffer.cursor_up(abs(delta))\n        buffer.cursor_up()\n    def delete_current_line(buffer):\n        buffer.delete_line_at_cursor()\n        # document=buffer.document\n        # current_line=document.current_line\n        # buffer.cursor_left(10000)\n        # firstline=buffer.cursor_position==0\n        # buffer.delete(len(current_line))\n        # buffer.delete_before_cursor()\n        # if firstline:\n        #     buffer.delete()\n        # else:\n        #     buffer.cursor_down()\n\n    #region Bracket Match Writers\n    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar\n    can_take_no_args=False# Doesn\'t practically matter right now if function_comma_flag is false\n\n\n    @handle(Keys.ControlDelete)# Delete current line\n    def _(event):\n        buffer=event.cli.current_buffer\n        delete_current_line(buffer)\n\n    #region Bracket Match Writers\n    function_comma_flag=False# Used to keep track of when we are writing arguments to fucntions that were initially parenthesized with the spacebar\n    can_take_no_args=False# Doesn\'t practically matter right now if function_comma_flag is false\n\n    @handle(\'.\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):# period \'.\' event handler function thingy\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'.\',event):return\n        if self_dot_var_equals_var(buffer,\'.\'):\n            #self.foo|=foo   --->   self.foo.|=self.foo.\n            return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n\n\n\n        # if before_line.endswith(\'=\') and not before_line.endswith(\'==\'):\n            #Moved this functionality elsewhere to fix the i=.5 which autocompleted to i.5=5, which is not what we want because 5 is a numeric key\n            #self=|   --->   self.|=   (and then type foo to get self.foo=foo)\n            # buffer.cursor_left()\n            # buffer.insert_text(\'.\')\n            # return\n        if not before and not after:\n            buffer.insert_text(\'ans.\')\n            return\n        import rp.r_iterm_comm\n        var=rp.r_iterm_comm.last_assignable_comm\n        # if before.endswith(\'=\') and before[:-1]==var:\n            #THIS COMLPETION IS COMMENTED OUT EVEN THOUGH IT WORKS. IT GOT ANNOYING FOR TETING THE =.. OPERATOR, WHICH I THINK MIGHT BE MORE IMPORTANT FOR DEMOING RPTERM\n            #var=|  -->  var.|\n            #You can use a sequence like:\n            #  (What you type)   (What rp types)\n            #   i numpy np          import numpy as np\n            #   =.array?            np.array?\n            # buffer.delete_before_cursor()\n        if before_line.endswith("\'\'") and not before_line.endswith("\'\'\'") and after_line.startswith("\'\'") and not after_line.startswith("\'\'\'") or\\\n           before_line.endswith(\'""\') and not before_line.endswith(\'"""\') and after_line.startswith(\'""\') and not after_line.startswith(\'"""\'):\n           # “\'\'.[\'“   —>  \'\'.join([\'\'])\n            buffer.insert_text(\'.join()\')\n            buffer.delete(2)\n            buffer.cursor_left()\n            return\n        if before_line.endswith("\'\'.join(") and after_line.startswith(\')\'):\n            # “\'\'..[“        —>     \'\'.join(map(str,[]))\n            # “\'\'.[\'\'“       —>     \'\'.join([\'\'])\n            buffer.insert_text(\'map(str,)\')\n            buffer.cursor_left()\n            return\n        if before+after in {\'ans[]\',\'ans()\'} and after in {\']\',\')\'}:\n            #ans[|]  -->  ans.|\n            #       AND\n            #ans(|)  -->  ans.|\n            #\n            #For space-completing \'ans\' then wanting to use a \'.\', but can\'t \n            #\n            #Edge case: when we want to write ans(.25) where ans is a float-function\n            #   This is handled like so:\n            #       ans(|)  -->  ans.|  -->  ans(.25)  \n            #   Basically, the parenthesis are put back because the character following the \'.\' is a digit\n            #   (This is handled in the digit handler, search for "ans_dot_completion_string")\n            buffer.delete()\n            buffer.delete_before_cursor()\n            global ans_dot_completion_string\n            ans_dot_completion_string=before[-1]+after[0]# is either () or []\n        buffer.insert_text(\'.\')\n\n\n    @handle(Keys.Escape,filter=~vi_mode_enabled)#microcompletions_enabled)\n    def _(event):\n        _meta_pressed.append(True)#This is meant to be flipped to false immediately after anything reads it, with meta_pressed(). We\'re using a list to easily keep track of this after this method is @\'d outta this file somewhere else idk where\n\n    @handle(\' \',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):# Spacebar event handle spacebar\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\' \',event):return\n        single_line = line_above(buffer) is None\n        if meta_pressed():#No shenanagins -- just give me a space.\n            buffer.insert_text(\' \')\n            return\n        nonlocal function_comma_flag# ,can_take_no_args\n        # from rp import mini_terminal\n        # exec(mini_terminal)\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n\n        if document.text==\'\':# What else would we possibly want the spacebar for on an empty input? Spacebar invokes functions, and the default variable is ans.\n            import rp.r_iterm_comm as ric\n            if callable(ric.ans):\n                buffer.insert_text(\'ans()\')\n                buffer.cursor_left()\n                function_comma_flag=True\n            elif hasattr(ric.ans,\'__getitem__\'):#if we can do ans[0], ans[1] etc\n                buffer.insert_text(\'ans[]\')#we cant call it...might want to iterate through it though!\n                buffer.cursor_left()\n                function_comma_flag=True\n            else:\n                buffer.insert_text(\'ans\')#Bleh it\'s boring\n            return\n\n\n        if before.startswith(\'!\'):# Don\'t do anything special\n            buffer.insert_text(\' \')\n            return\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if before_line.endswith(\' in len\') and starts_with_any(after_line,*\'}])\'):\n                #[x for x in len|]  --->  [x for x in range(len(|))]\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n        if before_line.lstrip().startswith(\'class \') and after_line.startswith(\':\'):\n            #class c|:   --->   class c(|):\n            buffer.insert_text(\'()\')\n            buffer.cursor_left()\n            return\n        if before_line.lstrip().startswith(\'class \') and after_line.startswith(\'):\'):\n            if before_line.endswith(\',\'):\n                #class c(x,|):   --->   class c(x):|\n                buffer.delete_before_cursor()\n                buffer.cursor_right(2)\n                return\n            if before_line.endswith(\'(\'):\n                #class c(|):   --->   class c:|\n                buffer.delete_before_cursor()\n                buffer.delete()\n                buffer.cursor_right()\n                return\n        if before_line.lstrip().startswith(\'def \'): \n            if before_line.endswith(\'def __\') and after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __init__(self,|):\n                buffer.insert_text(\'init\')\n                buffer.cursor_right(7)\n                buffer.insert_text(\',\')\n                return\n            if before_line.strip()==\'def\' and after_line.startswith(\'(self):\'):\n                #class x:\n                #   def |(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __|__(self):\n                buffer.insert_text(\'____\')\n                buffer.cursor_left(2)\n                return\n            if after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __eq|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __eq__(self|):\n                if before_line.endswith(\'__\'):\n                    #autocomplete might have messed things up, this is a sloppy hack to fix that...\n                    #def __eq__|__(self):   --->   #def __eq__(self|): \n                    buffer.delete_before_cursor(2)\n                buffer.cursor_right(7)\n                return\n            if after_line.startswith(\'(self):\'):\n                #def f|(self):   --->   def f(self,|):\n                buffer.cursor_right(5)\n                buffer.insert_text(\',\')\n                return\n            if before_line.endswith(\':\') and not after_line.strip():\n                #def f(x):|   --->   def f(x):return |\n                buffer.insert_text(\'return \')\n                return\n            if before_line.strip()==\'def __\' and after_line.startswith(\'__(self):\'):\n                #class x:\n                #   def __|__(self):\n                # \n                #   --->\n                # \n                #class x:\n                #   def __init__(self|):\n                buffer.insert_text(\'init\')\n                buffer.cursor_right(7)\n                return\n            if before_line.strip()==\'def\' and after_line.startswith(\'():\'):\n                def on_first_line():\n                    return \'\\n\' not in (before+after)\n                function_title=\'ans\' if on_first_line() else \'_\'\n                #def |():   --->   def _(|):   (sometimes, when using decorators, you want an anonymous function)\n                #def |():   --->   def ans(|): (if we\'re defining a function on the first line, perhaps we want to use it as our answer? I haven\'t actually used this yet; it\'s just an idea, I\'ll see how much I like it...)\n                buffer.insert_text(function_title)\n                buffer.cursor_right(1)\n                return\n        if before_line.strip()==\'def\' and not after_line.strip().endswith(\':\'):\n            buffer.insert_text(\' :\')\n            buffer.cursor_left()\n            return\n        if before_line.strip().startswith(\'def \') and endswithany(before_line.strip(),\',\',\'(\') and after_line.strip()==\'):\':\n            if before_line.endswith(\',\'):\n                buffer.delete_before_cursor()\n            buffer.cursor_right(2)#If we want a one-line function\n            return\n        if self_dot_var_equals_var(buffer):\n            #self.|foo=foo   --->   self.foo=foo|\n            buffer.cursor_right(999999)\n        from rp import is_namespaceable,space_split\n        if before_line.strip().startswith(\'def \') and len(space_split(before_line.strip()))==2:\n            if after_line.strip()==\':\' and is_namespaceable(before_line.split(\' \')[-1]):\n                buffer.insert_text(\'()\')\n                buffer.cursor_left()\n                return\n        if after_line==\'):\' and before_line.endswith(\',\'):\n            buffer.delete_before_cursor()\n            if starts_with_any(before_line.strip(),*\'if while\'.split()):\n                #if f(x,|):  --->  if f(x) |:\n                buffer.cursor_right(1)\n                buffer.insert_text(\' \')#Lets us trigger things like a--->and\n            else:\n                #for x in range(5,|):   --->   for x in range(5):|\n                buffer.cursor_right(2)\n            return\n        if before_line.endswith(\' imoprt\') or before_line.startswith("imoprt"):# This is a really common typo for me\n            buffer.delete_before_cursor(6)\n            buffer.insert_text(\'import \')\n            return\n        from rp import regex_match\n        if regex_match(before_line.lstrip(),r\'for\\s+\\w+\\s+in\\s+len\'):\n                #(Also implemented upon pressing \'(\')\n                #for x in len|   -->  for x in range(len(|))\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n        if before_line.lstrip()==\'if \' and after_line.rstrip()==\':\':\n            #if |:   --->   import |\n            buffer.delete_before_cursor(3)\n            buffer.insert_text(\'import \')\n            buffer.delete()\n            return\n        if before_line.lstrip()==\'import \' and not after_line.rstrip():\n            #import |   --->   if |:\n            buffer.delete_before_cursor(len(\'import \'))\n            buffer.insert_text(\'if :\')\n            buffer.cursor_left()\n            return\n        # if before_line.lstrip()==\'for \' and after_line==\' in :\':\n        #     #"for | in :"  --->  "for _ in |:"\n        #     buffer.insert_text(\'ans\')\n        #     return\n        keywords={\'async\',\'await\',\'with\', \'nonlocal\', \'while\', \'None\', \'global\', \'as\', \'is\', \'and\', \'else\', \'yield\', \'raise\', \'del\', \'break\', \'in\', \'not\', \'False\', \'assert\', \'try\', \'def\', \'return\', \'if\', \'finally\', \'lambda\', \'for\', \'from\', \'True\', \'pass\', \'continue\', \'elif\', \'except\', \'class\', \'or\', \'import\'}\n\n        if regex_match(before,r\'\\s*for\\s+\\w+\\s+in\\s+\') and after.strip()==\':\':\n            #"for x in |:"  --->  "for x in ans:"\n            #(better alternative than "for x in |:" ---> "for x in:|", which is in the next block...)\n            buffer.insert_text(\'ans\')\n            return\n        elif starts_with_any(before_line.lstrip(),\'if \',\'for \',\'while \') and before_line.endswith(\' \') and after_line.rstrip()==\':\':# This is a really common typo for me\n            #if x|:   --->   if x:|\n            buffer.delete_before_cursor(1)\n            buffer.cursor_right(2)\n            return\n        from rp import space_split,is_namespaceable\n        import rp.r_iterm_comm as r_iterm_comm\n        split=space_split(before_line)\n        from rp import printed\n        from_or_import_on_beginning_of_line=before_line.lstrip().startswith("import ") or before_line.lstrip().startswith("from ")\n        def is_callable_token(token_name):\n            try:\n                return callable(eval(token_name,r_iterm_comm.globa))\n            except:\n                return False#be on the safe side with space-function completions\n        try:\n            function_comma_flag=function_comma_flag and( after_line.startswith(")") or after_line.startswith("\'") or after_line.startswith(\'"\') or after_line.startswith(\']\') or after_line.startswith(\']\') )\n            token_of_interest,name_of_interest,found_token_of_interest=token_name_found_of_interest(before_line)\n            from rp import regex_match\n            def is_autocompletable_prefix(big,suffixes=[\'\'],allow_single_liner=True,use_name_of_interest=False):\n                #leave suffixes [] or None to allow any suffix\n                if not allow_single_liner:\n                    if \'\\n\' not in before+after:\n                        return False\n                if use_name_of_interest:\n                    name=name_of_interest\n                else:\n                    name=before_line.strip()\n                return big.strip() != name and big.startswith(name) and before_line.strip() and (not suffixes or after_line in suffixes)#Shouldn\'t trigger when r is a function, because of where this is in the elif chain\n            def autocomplete_prefix(big,left=1,remove_suffix=False):\n                if remove_suffix:#used in \'except|:\' --> \'except | as :\', which is also \'except|\' --> \'except | as :\'\n                    buffer.cursor_right(len(after_line))\n                    buffer.delete_before_cursor(len(after_line))\n                buffer.insert_text(big[len(name_of_interest):])\n                buffer.cursor_left(left)\n                try_to_autounindent(buffer)\n\n            def try_autocompleting_functions(N,not_just_functions=False):\n                from rp import ring_terminal_bell\n                # if not_just_functions:\n                    # ring_terminal_bell\n                #TODO: right now not_just_functions doesn\'t do anything, it\'s supposed to let you space complete functions while importing\n                nonlocal before_line,after_line,before,after\n\n                #go through the top N current autocompletion results, and if one of them is callable, call it.\n                # if before.count(\' \')+before.count(\'\\n\')>1:\n                    # return False #Don\'t autocomplete like this unless we are doing a one-liner\n                bs=before_line.lstrip()#Before Strip  (bs)\n                if not not_just_functions:\n                    if not \'\\n\' in before.strip() and before.strip().isupper() or beginswithany(bs,\'import \',\'from \',\'def \') or \'lambda\' in bs:#Basically, any place we\'re allowed to declare new variable names, we shouldn\'t be autocompleting them. lambda is bit tricky so I\'m just sayig \'no space function completion on lines that contain lambda\'.\n                        return False#We might be typing something like \'UNDO ALL\', in which case we do NOT want the \'UNDO\' to be autocompleted\n                import rp.r_iterm_comm as ric\n                for candidate in ric.current_candidates:#Don\'t autocomplete if our current word to complete allready exists. For example, don\'t complete \'in\' into \'inverse\', etc.\n                    try:\n                        if hasattr(candidate,\'text\') and candidate.text==name_of_interest or candidate==name_of_interest:\n                            return False\n                    except:pass\n                # ring_terminal_bell()\n                # print(ric.current_candidates)\n                if not_just_functions:\n                    if not ric.current_candidates or  \'.\' in before_line:\n                        return False#Problem avoided: Used to be \'import scipy.stats\' -/-> \'import stats as |s\'\n                    buffer.delete_before_cursor(len(name_of_interest))#erase the current line\n                    #space completions: \n                    #import num|   --->   import numpy as |\n                    #(etc)\n                    space_completion=ric.current_candidates[0]\n                    if before_line.endswith(space_completion):\n                        return False#Problem avoided: Used to be \'import cv2|\' -/-> \'import cv2cv2 as |s\'\n                    #region Erase before and after so we don\'t do stupid things: Example, on autocompleting \'print\', we want:\n                    #   \'pr|i\'  --->  \'print|\'\n                    #       and NOT\n                    #   \'pr|i\'  --->  \'prprint|i\'\n                    if is_namespaceable(space_completion):\n                        #Allready taken care of in above line commented "erase the current line"\n                        # while before_line and before_line[-1] in space_completion:\n                        #     buffer.delete_before_cursor()\n                        #     before_line=before_line[:-1]\n                        #     before     =before     [:-1]\n                        while after_line  and  after_line[ 0] in space_completion:\n                            buffer.delete()\n                            after_line =after_line [1: ]\n                            after      =after      [1: ]\n                    #endregion\n                    buffer.insert_text(space_completion)\n                    return True \n                for x in ric.current_candidates[:N]:\n                    if is_callable_token(x) or not_just_functions and not (after_line.strip()==\'():\' and before_line.rstrip().startswith(\'def \')):\n                        # if re.fullmatch(r\'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]\',before_line):\n                            buffer.delete_before_cursor(len(name_of_interest))#erase the current line\n                            buffer.insert_text(x+(\'\' if  not_just_functions else \'()\'))\n                            buffer.cursor_left()\n                            nonlocal function_comma_flag\n                            function_comma_flag=True\n                            return True\n            if before_line.lstrip().startswith(\'def \') and before_line.endswith("=lambda")and after_line.startswith(\')\'):#When passing a lambda as an argument in a function definition default value (a nichey case, but important nevertheless), add a space so the rest of the program knows its a lambda (which it uses spaces to see)\n                buffer.cursor_left(6)\n                buffer.insert_text(\' \')\n                buffer.cursor_right(6)\n\n            if not from_or_import_on_beginning_of_line \\\n                and not before_line.endswith(" ") \\\n                and callable(token_of_interest)  \\\n                and not (after_line.strip()==\'():\' and before_line.rstrip().startswith(\'def \'))\\\n                and not re.fullmatch(r\'((.*[^a-zA-Z0-9_])|())for [a-zA-Z0-9_]+\',before_line)\\\n                and not re.fullmatch(r\' *def [a-zA-Z0-9_]+\\( *[a-zA-Z0-9_]+( *\\, *[a-zA-Z0-9_]+ *)*\',before_line)\\\n            :\n                function_comma_flag=True\n                import inspect\n                #space-function implementation HERE\n                #ON SPACE\n                # callable_function|   --->   callable_function(|)\n                #This is a big deal. I use this ALL THE TIME.\n\n                # try:\n                #     can_take_no_args=len(inspect.getfullargspec(token_of_interest).args)==0\n                # except:# Probably a builtin function\n                #     can_take_no_args=0 or token_of_interest is print\n                if before_line.count(\'=\')==1 and after_line==\'(\'+before_line.split(\'=\')[0].strip()+\')\':\n                    #We came from using the )= operator. We want `matrix)=np.asarray float` --->  `matrix=np.asarray(matrix,float)` and not `matrix=np.asarray(float)(matrix)` (which would happen without this block)\n                    buffer.cursor_right(99999)\n                    buffer.cursor_left()\n                    buffer.insert_text(\',\')\n                else:\n                    buffer.insert_text(\'()\')\n                    buffer.cursor_left(count=1)\n            # region Brackets....they work but conceptually they\'re annoying.\n            # elif not from_or_import_on_beginning_of_line and not before_line.endswith(" ") and hasattr(token_of_interest,\'__getitem__\'):\n            #     buffer.insert_text(\'[]\')\n            #     buffer.cursor_left(count=1)\n            #endregion\n\n            elif regex_match(before_line.lstrip(),r\'(from .*)|(import \\w*)\') and try_autocompleting_functions(N=1,not_just_functions=True):\n                if(before_line.lstrip().startswith(\'from \')):\n                    buffer.cursor_right(len(\' import\'))\n                    buffer.insert_text(\' \')\n                elif(before_line.lstrip().startswith(\'import \')):\n                    buffer.insert_text(\' as \')#Without this, space would be redundant with respect to tab\n            elif regex_match(before_line.lstrip(),r\'from \\w* import \'):\n                #\'from rp import |\'  -->  \'from rp import *\'\n                buffer.insert_text(\'*\')\n            elif regex_match(before_line.lstrip(),r\'from \\w* import \\*\'):\n                #\'from rp import *|\'  -->  \'from rp import \'\n                buffer.delete_before_cursor()\n\n            elif before_line.lstrip().startswith(\'with \') and after_line.startswith(\':\') and not before_line.endswith(\' as \'):\n                buffer.insert_text(\' as \')\n\n            elif endswithany(before_line,\' in len\',\' in le\',\' in l\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in l|]   --->   [x for x in range(len(|))]\n                #for x in l|:      --->   for x in range(len(|)):\n                buffer.delete_before_cursor(1 if before_line.endswith(\'l\') else 2 if before_line.endswith(\'le\') else 3)\n                buffer.insert_text(\'range(len())\')\n                buffer.cursor_left(2)\n                return\n            elif name_of_interest in {\'l\',\'la\',\'lam\',\'lamb\',\'lambd\',\'lambda\'} \\\n                and not \'import \'in before_line \\\n                and not before_line.lstrip() in {\'for \'+name_of_interest,\'with \'+name_of_interest} \\\n                and not re.fullmatch(r\'( *def .*)|(.*[^a-zA-Z0-9_]lambda [^\\:]*)|(.*[^a-zA-Z0-9_](for|in|as) (l|la|lam|lamb|lambd|lambda))\',before_line) \\\n                :\n                #Make a lambda from l\n                #Shouldn\'t trigger when l is a function, because of where this is in the elif chain\n                noil=len(name_of_interest)#noil stands for ((name of interest) length)\n                if before_line.strip()!=name_of_interest:#don\'t do this at the beginning of an empty line\n                    buffer.cursor_left(noil)\n                    if not buffer.document.text_before_cursor.endswith(\' \'):\n                        buffer.insert_text(\' \')\n                    buffer.cursor_right(noil)\n                buffer.insert_text(\'lambda :\'[noil:])\n                buffer.cursor_left()\n            elif regex_match(before_line.strip(),r\'(for .* in in)\') and after_line.strip()==\':\':\n                buffer.delete_before_cursor(2)\n            elif regex_match(before_line.strip(),r\'(from \\w* import import)\') and after_line.strip()==\'\':\n                buffer.delete_before_cursor(len(\'import\'))\n            elif before_line.endswith(\'lambda:\'):\n                #The default, most boring kind of lambda...\n                #"lambda:|"   --->  "lambda:None|"\n                buffer.insert_text(\'None\')\n\n            #None of the \'is_autocompletable_prefix\'s ahead should trigger when the prefix is a function, so as not to interfere with normal autocompletion in most cases\n            elif is_autocompletable_prefix(\'def ():\'):\n                if in_class_func_decl(buffer):  autocomplete_prefix(\'def (self):\',left=7)\n                else:           autocomplete_prefix(\'def ():\',left=3)\n            elif before_line.lstrip().startswith(\'def \') and after_line.rstrip().endswith(\'):\') and after_line.startswith(\'(\'):buffer.cursor_right()\n\n\n            elif after_line.startswith(\' in)\'):\n                #print(x for y| in)  -->  print(x for y in |)\n                buffer.cursor_right(len(\' in\'))\n                buffer.insert_text(\' \')\n            elif before_line.endswith(\',for\'):\n                #print(x,for|)  -->  print(x for | in)\n                buffer.delete_before_cursor(len(\',for\'))\n                buffer.insert_text(\' for  in\')\n                buffer.cursor_left(len(\' in\'))\n            elif before_line.endswith(\',if\'):\n                #Because when we\'re in functions, hitting space makes commas, we can still do \'for\', \'if\', etc\n                #print(x,if)  -->  print(x for | in)\n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\' if  else\')\n                buffer.cursor_left(len(\' else\'))\n            elif before_line.lstrip()==\'else:\'and not after_line.strip():\n                #else:|   --->   elif |:\n                buffer.delete_before_cursor(len(\'else:\'))\n                buffer.insert_text(\'elif :\')\n                buffer.cursor_left()\n            elif before_line.lstrip()==\'elif \'and after_line.rstrip()==\':\':\n                #elif:|   --->   else:\n                buffer.delete_before_cursor(len(\'elif \'))\n                buffer.insert_text(\'else\')\n                buffer.cursor_right()\n            elif before_line.lstrip()==\'f\' and not after_line.strip() and single_line:\n                #f|   --->   from | import         ONLY ON ONE-LINERS\n                buffer.insert_text(\'rom  import\')\n                buffer.cursor_left(len(\' import\'))\n            #Note that this was created after some other things in this file, and might even be redundant sometimes. For example, \'if\'-->\'if |:\' is allready covered elsewhere in key_bindings.py\n            elif is_autocompletable_prefix(\'return \',allow_single_liner=False):autocomplete_prefix(\'return \',left=0)\n            elif is_autocompletable_prefix(\'while :\'):autocomplete_prefix(\'while :\')\n            elif is_autocompletable_prefix(\'class :\'):autocomplete_prefix(\'class :\')\n            elif is_autocompletable_prefix(\'for  in :\'):autocomplete_prefix(\'for  in :\',left=5)\n            elif not (before==\'i\' and not after) and is_autocompletable_prefix(\'if :\'):autocomplete_prefix(\'if :\',left=1)#\'i|\' ---> \'if |:\' ONLY IF we\'ve typed something else in this buffer allready (often, I dedicate an input line to nothing but importing something)\n            elif is_autocompletable_prefix(\'import \'):autocomplete_prefix(\'import \',left=0)\n            elif is_autocompletable_prefix(\'from  import\'):autocomplete_prefix(\'from  import\',left=7)\n            elif is_autocompletable_prefix(\'elif :\',allow_single_liner=False):autocomplete_prefix(\'elif :\',left=1)\n            elif is_autocompletable_prefix(\'else:\',allow_single_liner=False):autocomplete_prefix(\'else:\',left=0)\n            elif is_autocompletable_prefix(\'try:\'):autocomplete_prefix(\'try:\',left=0)\n            # elif is_autocompletable_prefix(\'True \',suffixes=[\' \']):autocomplete_prefix(\'True \',left=0)\n            # elif is_autocompletable_prefix(\'False \',suffixes=[\' \']):autocomplete_prefix(\'False \',left=0)\n            elif is_autocompletable_prefix(\'break\',allow_single_liner=False):autocomplete_prefix(\'break\',left=0)\n            elif is_autocompletable_prefix(\'continue\',allow_single_liner=False):autocomplete_prefix(\'continue\',left=0)\n            elif is_autocompletable_prefix(\'yield \',allow_single_liner=False):autocomplete_prefix(\'yield \',left=0)\n            elif before_line.lstrip()!=\'yield\' and is_autocompletable_prefix(\'yield from \',allow_single_liner=False):autocomplete_prefix(\'from \',left=0)\n            # elif is_autocompletable_prefix(\'print()\'):autocomplete_prefix(\'print()\',left=1)#not a keyword, but used so frequently...\n            elif is_autocompletable_prefix(\'assert \'):autocomplete_prefix(\'assert \',left=0)\n            elif is_autocompletable_prefix(\'nonlocal \'):autocomplete_prefix(\'nonlocal \',left=0)\n            elif is_autocompletable_prefix(\'global \'):autocomplete_prefix(\'global \',left=0)\n            elif is_autocompletable_prefix(\'raise \'):autocomplete_prefix(\'raise \',left=0)\n            elif is_autocompletable_prefix(\'async \'):autocomplete_prefix(\'async \',left=0)\n            # elif is_autocompletable_prefix(\'async def ():\'):autocomplete_prefix(\'def ():\',left=3)\n\n            elif is_autocompletable_prefix(\'print()\',allow_single_liner=True):autocomplete_prefix(\'print()\',left=1);function_comma_flag=True\n            elif is_autocompletable_prefix(\'pass\',allow_single_liner=False):autocomplete_prefix(\'pass\',left=0);function_comma_flag=True\n\n            elif is_autocompletable_prefix(\'except :\',allow_single_liner=False):autocomplete_prefix(\'except :\',left=1)\n            elif is_autocompletable_prefix(\'with :\'):autocomplete_prefix(\'with :\',left=1)\n            elif ((not \'\\n\' in before and not after and re.fullmatch(r\'\\w+\',before_line) and not any(before_line.endswith(keyword) for keyword in keywords)) #space-completions are enabled if we\'re typing a function out as a comand, because then we know we don\'t have to worry about messy edge cases. space-functions are really convenient...\\\n                    or enable_space_autocompletions) \\\n                  and not regex_match(before_line.lstrip(),r\'(def .*)|(for \\w*)\') \\\n                  and not name_of_interest.isdigit() \\\n                  and name_of_interest \\\n                  and try_autocompleting_functions(N=20):\\\n                    pass#"not name_of_interest.isdigit() and name_of_interest " because \'5\' --> \'display_color_255\' without it, which is REALLY annoying\n            # elif is_autocompletable_prefix(\'except :\',[\':\',\'\']):autocomplete_prefix(\'except :\',left=1,remove_suffix=True)\n            # elif is_autocompletable_prefix(\'except  as :\',[\':\',\'\']):autocomplete_prefix(\'except  as :\',left=5,remove_suffix=True)\n            elif before_line.lstrip()==\'except \' and after_line.rstrip()==\':\':\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n                return\n            # elif before_line.endswith(\' is \'):\n                #"x is |" --> "x is not |"\n                # buffer.insert_text(\'not \')\n                # return\n            elif before_line.endswith(\' is not \'):\n                #"x is not |" --> "x is |"\n                buffer.delete_before_cursor(4)\n                return\n            elif before_line.lstrip()==\'yield from \':\n                #"yield from |" --> "yield |"\n                buffer.delete_before_cursor(len(\'from \'))\n                return\n            elif before_line.lstrip().startswith(\'except\') and before_line.strip().endswith(":") and not after_line.rstrip():\n                buffer.insert_text(\'pass\')\n                return\n            elif starts_with_any(before_line.lstrip(),\'except \',\'with \') and before_line.endswith(\' as \') and after_line.strip()==\':\':\n                #except A as |:   --->   except A:|\n                buffer.delete_before_cursor(len(\' as \'))\n                buffer.cursor_right()\n            elif before_line.lstrip().startswith(\'except \') and not \'(\' in before_line:#not \'(\' in before_line because it won\'t properly complete functions for some reason inside the \'except\' lines\n                if before_line.lstrip()==\'except \' and after_line.rstrip()==\' as :\':\n                    #\'except | as :\' --> \'except|:\'\n                    buffer.cursor_right(len(\' as \'))#leave the \':\' alone\n                    buffer.delete_before_cursor(len(\' as \'))\n                    buffer.delete_before_cursor()\n                else:\n                    if after_line==\' as :\':\n                        #\'except stuff | as :\' --> \'except stuff as |:\'\n                        buffer.cursor_right(4)\n                    elif after_line==\':\' and not \' as \' in before_line and not before_line.endswith(\'as\'):\n                        if before_line.endswith(\' \'):\n                            buffer.delete_before_cursor()#when we have two spaces because of a function \'()\' --> \' \'\n                        if before_line.lstrip()==\'except \':\n                            buffer.delete_before_cursor()\n                        else:\n                            buffer.insert_text(\' as \')\n                        # buffer.cursor_right(0)\n                    else:\n                        buffer.insert_text(\' \')\n            elif before_line.lstrip().startswith(\'except \') and before_line.endswith(\'(\') and after_line.startswith(\')\'):\n                #except Exception()|:   -->   except Exception as |:\n                buffer.cursor_right()\n                buffer.delete_before_cursor(2)\n                buffer.insert_text(\' as \')\n            elif before_line.lstrip().startswith(\'for \') and after_line.rstrip()==\' in :\':\n                if before_line.lstrip()==\'for \':#if we haven\'t given any variable name to iterate yet, switch to the \'from\' shortcut instead because from and for both start with f\n                    #Switch between \'for\' and \'from\'\n                    buffer.cursor_right(len(\' in :\'))\n                    buffer.delete_before_cursor(len(\'for \'+\' in :\'))\n                    buffer.insert_text(\'from  import\')\n                    buffer.cursor_left(len(\'import \'))\n                    return\n                #Shouldn\'t trigger when r is a function, because of where this is in the elif chain\n                buffer.cursor_right(4)\n            elif before_line.endswith(\'lambda \')and after_line.startswith(\':\'):\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n            elif endswithany(before_line,\' -\',\'[-\',\'(-\',\'{-\'):\n                #[-|] ---> [_ |]\n                #[x and -|] ---> [x and _ |]\n                #Posible imperfection: Maybe _ is a function. If it is, this current (sloppy) method of handling it won\'t call _, it will just add a space after it.\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'_ \')\n                return \n            elif starts_with_any(after_line,\' in]\',\' in}\',\'in )\'):\n                #A follow-up to a completion after pressing the f-key to create a comprehension\n                #[x for x| in]   --->   [x for x in |]\n                buffer.cursor_right(3)\n                buffer.insert_text(\' \')\n                return\n            elif single_line and before_line.endswith(\' in \') and starts_with_any(after_line,\']\',\'}\',\')\'):\n                #List comprehension on single-liners\n                #[x for x in |] --->  [x for x in ans]\n                buffer.insert_text(\'ans\')\n                return                \n            elif endswithany(before_line,\' in e\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in e|]   --->   [x for x in enumerate(|)]\n                #for x in e|:      --->   for x in enumerate(|):\n                buffer.insert_text(\'numerate()\')\n                buffer.cursor_left()\n                return\n            elif endswithany(before_line,\' in z\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in z|]   --->   [x for x in zip(|)]\n                #for x in z|:      --->   for x in zip(|):\n                buffer.insert_text(\'ip()\')\n                function_comma_flag=True\n                buffer.cursor_left()\n                return\n            elif endswithany(before_line,\' in r\') and starts_with_any(after_line,\':\',\']\',\'}\',\')\'):\n                #Doesn\'t work if e is allready callable.\n                #[x for x in r|]   --->   [x for x in range(|)]\n                #for x in r|:      --->   for x in range(|):\n                buffer.insert_text(\'ange()\')\n                buffer.cursor_left()\n                return\n            elif before_line.endswith(\'if \') and after_line.startswith(\' else\'):\n                #Probably didn\'t mean to press the space-bar, out of habit...this works because of other completions\n                #if | else    --->    if | else\n                return\n            elif (starts_with_any(after_line,\' else]\',\n                                            \' else \',\n                                            \' else)\',\n                                            \' else}\',\n                                            \' else,\',\n                                            \' else:\') or after_line==\' else\') and not \\\n                                            endswithany(before_line,\' if \',\n                                                                    \']if \',\n                                                                    \')if \',\n                                                                    \'}if \',\n                                                                    \'"if \',\n                                                                    "\'if ",\n                                                                    ):\n                #[x if y| else] ---> [x if y else |]\n                buffer.cursor_right(len(\' else\'))\n                buffer.insert_text(\' \')\n            elif before_line and after_line and before_line[-1]+after_line[0] in [\'()\',\'[]\',\'{}\']:\n                if document.text in [\'ans()\',\'ans[]\']:\n                    buffer.delete()\n                    buffer.delete_before_cursor(count=40000)\n                    buffer.insert_text(\' \')\n                    return\n                if \'\\n\' not in before and after==\')\':\n                    #\'print()|\' --> \'print(ans,|)\'\n                    #NOTE that upon hitting the enter key, the extra comma dissapears (\'print(a,b,c,ans,|)\'   --->   \'print(a,b,c,ans)\')\n                    buffer.insert_text(\'ans,\')\n                    return\n                buffer.cursor_right(count=1)\n                buffer.delete_before_cursor(count=2)\n                # if can_take_no_args:\n                #     if function_comma_flag:\n                #             buffer.insert_text(\',\')\n                #     else:\n                #             buffer.insert_text(\'(),\')\n                # else:\n                #     if function_comma_flag:\n                #         buffer.insert_text(\',\')\n                #     else:\n                #         buffer.insert_text(\' \')\n                if function_comma_flag and after_line.startswith("))"):\n                    buffer.insert_text(\',\')\n                else:\n                    buffer.insert_text(\' \')\n            elif function_comma_flag and after_line.startswith(\')\'):\n                if before_line.endswith(","):\n                    if \'\\n\' not in before and after==\')\':#(meant for one-liners, not multiliners. I wanted a convenient way to write ans into functions like this.)\n                        #print(a,b,c,|) --> print(a,b,c,ans,|)\n                        buffer.insert_text(\'ans,\')\n                        #NOTE that upon hitting the enter key, the extra comma dissapears (\'print(a,b,c,ans,|)\'   --->   \'print(a,b,c,ans)\\n|\')\n                    else:\n                        #print(|) --> print\n                        buffer.delete_before_cursor()\n                        buffer.cursor_right()\n                        if after_line.startswith("))"):\n                            #print(f(|)) --> print(f(),|)\n                            buffer.insert_text(\',\')\n                elif before_line.endswith("lambda"):#special case to detect and space-autocomplete lambda syntax inside functions (normally, space in a function would make a comma; but we want print(lambda|) to go to print(lambda |:), not print(lambda,|))\n\n                    buffer.cursor_left(count=6)\n                    rev=document.text_before_cursor[::-1]\n                    buffer.insert_text(\' \')#This space is just an easy patch to let lambdas be easily put inside function arguments (before it was kinda annoying and didnt work well but not it does. yay. )\n                    buffer.cursor_right(count=6)\n                    buffer.insert_text(\' :\')\n                    buffer.cursor_left(count=1)\n                else:\n                    buffer.insert_text(\',\')\n            elif not after_line and all(is_namespaceable(x) for x in split) and len(split)==2 and split[0]==\'def\':\n                buffer.insert_text(\'():\')\n                buffer.cursor_left(count=2)\n            elif (before_line.lstrip() in[\'if\',\'while\',\'for\',\'with\',\'try\',\'except\'] or split and  name_of_interest==\'lambda\') and not after_line.strip().startswith(":"):\n                buffer.insert_text(\' :\')\n                buffer.cursor_left(count=1)\n            elif before_line and after_line and before_line[-1]==\',\'and after_line[0]==\':\':# for after lambda x,a,b,c,cursor:\n                buffer.delete_before_cursor(count=1)\n                buffer.cursor_right(count=1)\n                buffer.insert_text(\' \')\n\n            elif len(split)>=2 and split[-2]==\'lambda\' and \':\'not in name_of_interest or after_line==\'):\' and not before_line.rstrip().endswith(\',\') and before_line.lstrip().startswith(\'def \'):# new argument in def\n                #def f(x|): --> def f(x,):\n                buffer.insert_text(\',\')\n            elif before_line.lstrip()==\'i\':#Quick shortcut for importing. Type \'i\' then press space. THis should only come after checking if i is a function, which should happen in some other if/else case above this line.\n                #"i|" --> "import |"\n                buffer.insert_text(\'mport \')\n            elif before_line.lstrip()==\'f\':#Quick shortcut for \'from * import * style importing\'. Type \'f\' then press space.\n                #"f|" --> "from | import"\n                buffer.insert_text(\'rom  import\')\n                buffer.cursor_left(7)\n            elif not after_line and (before_line.lstrip().startswith(\'import \') or before_line.lstrip().startswith(\'from \')):\n                if before_line.endswith(\' as\'):\n                    #for when the user doesn\'t know about or forgets about the \'as\' autocompletion, so we don\'t end up with \'as as\'\n                    #\'import x as as|\'  -->  \'import x as |\'\n                    buffer.delete_before_cursor(2)\n                    buffer.insert_text(\'\')#To trigger autocompletion\n                    return\n                if before_line.endswith(\',\'):\n                    #\'import x,\'  -->  \'import x, |\'\n                    #Weird behavior if we don\'t do this an the user manually puts a comma without a space before this function would\n                    buffer.insert_text(\' \')\n                    return\n                #not after_line, so we\'re at the end of the line, which means we are done inputting the module name after \'from\' or \'input\'\n                l=space_split(before_line)\n                allready_end_with_an_as=len(l)>=2 and l[-2]==\'as\'\n                if before_line.endswith(\' as \'):\n                    #import x as | --> import x,|\n                    buffer.delete_before_cursor(4)\n                    buffer.insert_text(\', \')\n                elif before_line.rstrip().endswith(\',\'):\n                    #import x,| --> import x as |\n                    buffer.delete_before_cursor(2)\n                    # if allready_end_with_an_as:\n                        # return\n                    # buffer.insert_text(\' as \')\n                elif \'import \' in before_line:#to protect against "from x|" --> "from x as |" if we decide to type out the whole thing (naively)\n                    #import x| --> import x as |\n                    buffer.insert_text(\', \' if allready_end_with_an_as else \' as \')#We default to the \' as \' instead of \',\' because \' as \' starts with a space, which is the key we pressed. This is as opposed to functions, which default to using the comma on space by default.\n                else:\n                    buffer.insert_text(\' \')\n            elif before_line.lstrip().count(\' \')==1 and before_line.lstrip().startswith(\'from \') and after_line==\' import\':#Quick shortcut for \'from * import * style importing\'. Type \'f\' then press space.\n                # "from *| import" --> "from * import |"\n                if before_line.lstrip()==\'from \' and after_line.startswith(\' import\'):#we have no module name specified yet\n                    #Switch between \'for\' and \'from\'\n                    buffer.cursor_right(len(\' import\'))\n                    buffer.delete_before_cursor(len(\'from \'+\' import\'))\n                    buffer.delete_before_cursor(13)\n                    buffer.insert_text(\'for  in :\')\n                    buffer.cursor_left(len(\' in :\'))\n                    return\n                buffer.cursor_right(7)\n                buffer.insert_text(\' \')\n            elif starts_with_any(before_line.lstrip(),\'for \',\'except \') and after_line==\':\':#If we want a one-line if, elif, etc.\n                if before_line.lstrip not in [\'for \',\'except \']:#make sure it\'s not empty; we don\'t want to override completion etc\n                    buffer.cursor_right(1)#Note that we exclude things we\'d normally want to say, like "if x in y:"\n                    buffer.insert_text(\'\')#To trigger autocompletion\n                    return\n            else:\n                buffer.insert_text(\' \')\n            buffer.insert_text(\'\')#To trigger autocompletion\n\n        except Exception as e:\n            from rp import print_stack_trace\n            print_stack_trace(e)\n\n    @handle("?",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'?\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        # after= document.text_after_cursor\n\n        # before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        # after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if before.endswith(\'=\'):\n            #x=| --> x?   (meant because I often want to use ? on something that I\'ve just imported, and this is a small, stable way to do it)\n            buffer.delete_before_cursor()\n        buffer.insert_text(\'?\')\n    @handle("!",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'!\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        if not before:\n            buffer.insert_text(\'!\')\n            return\n\n        # after= document.text_after_cursor\n\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        # after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if len(before)<3 and not (before_line.count("\'")%2 or before_line.count(\'"\')%2):#not in a string\n            #if not in the beginning (for a ! or !! shell command) and not in string, the only time we\'d want ! is for !=\n            buffer.insert_text(\'!=\')\n            return\n        buffer.insert_text(\'!\')\n    @handle(":",filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\':\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n        if after_line==\':\':\n            buffer.cursor_right(count=1)\n        else:\n            buffer.insert_text(\':\')\n    @handle(\'=\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        import rp.r_iterm_comm as r_iterm_comm\n\n        def buffer_insert(text):\n            if(text==\'==\'):#text cannot be \'=\' because we still want to be able to use the \'-=\' augmented assignment\n                if before_line.endswith(\'-\'):\n                    #An easy way to type \'+\' without the shift key: \'-=\', in places where that token would normally be invalid. Chosen because \'-\' and \'=\' are right next to each other.\n                    buffer.delete_before_cursor()\n                    buffer.insert_text(\'+\')\n                    return\n            # if text in \'==\':\n                # if before_line.endswith(\'==\'):\n                    # return\n            buffer.insert_text(text)\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'=\',event):return\n        document=buffer.document\n        #\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=before.split(\'\\n\')[-1]# all on same line, but before cursor\n        after_line=after.split(\'\\n\')[0]# ditto but after cursor\n\n\n        for l,r in {\'()\',\'[]\'}:\n            if (not \' \' in before_line.strip() and before_line.endswith(r) and before_line.count(l)<=before_line.count(r) and not after_line) \\\n                and before_line.count(l)<before_line.count(r):\n                #The \')=\' operator\n                #The \']=\' operator\n                #alpha)|   --->   alpha=|(alpha)\n                #foo(bar)[0])|   --->   foo(bar[0])=|(foo(bar[0]))\n                buffer.delete_before_cursor()\n                arg=\'=\'+l+before_line.lstrip()\n                buffer.insert_text(arg)\n                buffer.cursor_left(len(arg))\n                buffer.cursor_right()\n                return\n            if endswithany(before_line,\'==\',\'<=\',\'>=\') and after_line.startswith(r):\n                #i[0==|]  --->  i[0]==|\n                #f(x==|)  --->  f(x)==|\n                #f(x>=|)  --->  f(x)>=|\n                #f(x<=|)  --->  f(x)<=|\n                end=before_line[-2:]\n                buffer.delete_before_cursor(2)\n                buffer.cursor_right()\n                buffer_insert(end)\n                return\n\n        if after_line.startswith(\')\'):\n            if   before_line.endswith(\'(\'):\n                #if f(|):   --->   if f()==|:\n                buffer.cursor_right()\n                buffer_insert(\'==\')\n                return\n            elif before_line.endswith(\',\'):\n                #if f(x,|):  --->   if f(x)==|:\n                buffer.delete_before_cursor()\n                buffer.cursor_right()\n                buffer_insert(\'==\')\n                return\n        if starts_with_any(before_line.lstrip(),\'elif\',\'if\',\'while\'):\n            # if x==y:\n            #     blah\n            # elif |: —> elif x==|:\n            #\n            # AND a cooler use-case: (because it only copies the variable from the same indent layer)\n            #   if x==5:\n            #       if y==6:\n            #           pass\n            #   elif x==7:\n            #       if y==7:\n            start=None\n            starts={\'elif\',\'if\',\'while\'}\n            for x in starts:\n                if before_line.strip()==x:\n                    indent=before_line[:before_line.find(x)]\n                    start=x\n            if start is not None:\n                assert before_line.startswith(indent)\n                i=-2\n                try:\n                    while True:\n                        match=before.split(\'\\n\')[i]\n                        # if match[:len(indent)].strip():#If wrong indentation level. This check is kinda rigid, maybe it would be nice to not have it...\n                            # break\n                        for match_start in starts:\n                            if match.startswith(indent+match_start) and \'==\' in match:\n                                match=match[match.find(match_start)+len(match_start):]\n                                match=match[:match.find(\'==\')]\n                                match=match.strip()\n                                if before_line[-1].strip():\n                                    buffer_insert(\' :\')\n                                    buffer.cursor_left()\n                                buffer_insert(match+\'==\')\n                                return\n                        i-=1\n                    return\n                except:pass\n        if (False or #\'=\' in before_line and not \'==\' in before_line or #We allready have some assignment operation on this line, therefore all other =\'s must belong to ==\'s....ALMOST ALL THE TIME. There is the edge case where we say "a=b=c=d=e" etc.\n            not function_comma_flag  and not after_line.startswith(\')\') and starts_with_any(before_line.lstrip(),\'if \',\'elif \',\'while \',\'not \',\'assert \',\'return \',\'yield \',\'for \',\'lambda \',\'with \',\'not \')) and\\\n                not (before_line.count("\'")%2 or before_line.count(\'"\')%2):#not in a string\n            #if x|:  -->  if x==|:\n            #   and\n            #if x==|:  -->  if x==|:\n            if not re.fullmatch(r\'.*(\\>|\\<)\',before_line):\n                from rp import text_to_speech as tts \n                # tts("r")\n                if before_line.endswith(\'!\'):\n                    buffer_insert(\'=\')\n                    return\n                if not before_line.endswith(\'==\') or before_line.endswith(\'!=\'):\n                    buffer_insert(\'==\')\n                return\n\n\n\n\n        char_operators=[\'\',\'+\',\'-\',\'*\',\'/\',\'%\',\'//\',\'**\',\'&\',\'|\',\'^\',\'>>\',\'<<\',\'~\']\n        letter_operators=[\'and\',\'or\',\'not\',\'==\',\'!=\',\'>=\',\'<=\']\n        var=r_iterm_comm.last_assignable_comm\n        # the .=, (=, and [= operators:\n        if endswithany(before_line.lstrip(),\'.\',\'(\',\'[\') and\\\n            (before_line.endswith(\'.\') and not after_line.strip() or\n             before_line.endswith(\'(\') and after_line.strip() in [\'\',\')\'] or\n             before_line.endswith(\'[\') and after_line.strip() in [\'\',\']\']):\n            if before_line.lstrip()==\'ans.\':\n                #Prevent: \'|\' --> \'ans.|\' --> \'ans=ans.\'\n                #Because last_assignable_comm is more useful in this case.\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'.\')\n                document=buffer.document\n                before_line=document.current_line_before_cursor\n                before     =document.text_before_cursor\n            #x.=y --> x=x.y\n            #x.|  --> x=x.|\n            #AND\n            #x(|) --> x=x(|)\n            #x[|] --> x=x[|]\n            operator=before_line.lstrip()[-1]\n            buffer.delete_before_cursor(count=1)\n            assign_to=before_line.lstrip()\n            if var and not assign_to[:-1]:\n                #.|  -->  ans=ans.|\n                buffer_insert(var+\'=\'+var+operator)\n                return\n            buffer_insert("="+assign_to)\n        elif before==\'ans(\'and after==\')\':# Space + equals -> import torch;\n            buffer.delete()\n            buffer.delete_before_cursor(count=1000)\n            buffer_insert("ans="+str(var))\n\n        elif var and before==var+"=":\n            buffer.delete_before_cursor(count=1000)\n            # tts("t")\n            buffer_insert("==")\n\n        elif var and not after and before in letter_operators:# User hasn\'t typed anything in yet\n            buffer.cursor_left(count=10000)\n            buffer_insert(var)\n            buffer_insert("=")\n            buffer_insert(var)\n            if before.isalpha():# and, or, not\n                buffer_insert(" ")# We need a space\n            buffer.cursor_right(count=10000)\n        elif var and not after and before in char_operators:# User hasn\'t typed anything in yet\n            buffer.cursor_left(count=10000)\n            buffer_insert(var)\n            buffer.cursor_right(count=10000)\n            buffer_insert(\'=\')\n        else:\n            buffer_insert(\'=\')\n\n    import os\n    if os.name != \'nt\':#If we are NOT running windows, which screws EVERYTHING up...\n        # @handle(Keys.ControlC)\n        # def _(event):\n        #     buffer=event.cli.current_buffer\n        #     # document=buffer.document\n        #     # before=document.text_before_cursor\n        #     # after= document.text_after_cursor\n        #     buffer.insert_text(\'RETURN\')\n\n\n        @handle(Keys.ControlH,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            #On ubuntu, shift+backspace triggers this; and inserting \'HISTORY\' is very annoying when we just want to backspace\n            buffer.delete_before_cursor()\n            # buffer.insert_text(\'HISTORY\')\n        @handle(Keys.ControlE)\n        def _(event):\n            #Run the buffer without erasing it or disturbing cursor position\n            run_code_without_destroying_buffer(event)\n\n        @handle(Keys.ControlW)\n        def _(event):\n            handle_run_cell(event)\n\n\n\n\n\n        @handle(Keys.ControlU,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            buffer.insert_text(\'UNDO\')\n        @handle(Keys.ControlP,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            before_line=buffer.document.current_line_before_cursor\n            after_line=buffer.document.current_line_after_cursor\n            if before_line==\'PREV\' and not after_line:\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'NEXT\')\n            elif before_line in [\'\',\'NEXT\'] and not after_line:\n                buffer.delete_before_cursor(4)\n                buffer.insert_text(\'PREV\')\n\n    def move_arg(buffer,delta_positions:int):\n        assert delta_positions in {1,-1}\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n\n        def chop_at_parenthesis_level(s:str,l:int):\n            n=0\n            for i,c in enumerate(s):\n                if c in \'([{\':n+=1\n                if c in \'])}\':n-=1\n                if n==l:return s[:i]\n            return s\n\n        after_line=chop_at_parenthesis_level(after_line,-1)#Count and match parenthesis (we want \'A(B)(C)D)E\' --> \'A(B)(C)D\') (when we\'re dealing with after_line)\n        before_line=before_line[::-1]\n        before_line=chop_at_parenthesis_level(before_line,1)\n        before_line=before_line[::-1]\n\n\n        bargs=before_line.split(\',\')\n        aargs=after_line.split(\',\')\n        aarg=aargs[0]\n        barg=bargs[-1]\n        laarg=len(aarg)\n        lbarg=len(barg)\n        arg=barg+aarg\n        larg=len(arg)\n\n        def erase_arg():\n            buffer.delete_before_cursor(lbarg)\n            buffer.delete              (laarg)\n\n        if delta_positions==1:\n            if not \',\' in after_line:return#Otherwise we glitch and delete the rest of it\n            if len(aargs)==1:return\n            erase_arg()\n            buffer.delete()\n            buffer.cursor_right(len(aargs[1]))#Shouldn\'t get index error if called properly (where cursor is AFTER a comma)\n            buffer.insert_text(\',\'+arg)\n            buffer.cursor_left(larg)\n        if delta_positions==-1:\n            # if not \',\' in after_line:return#Otherwise we glitch and delete the rest of it\n            #     buffer.delete_before_cursor()\n            #     buffer.delete(laarg)\n            #     buffer.cursor_left(lbarg)\n            #     buffer.insert_text(arg+\',\')\n            erase_arg()\n            buffer.delete_before_cursor()\n            buffer.cursor_left(len(bargs[-2]))\n            buffer.insert_text(arg+\',\')\n            if len(bargs)>2:\n                buffer.cursor_left(larg+1)\n\n\n\n\n    @handle(\'<\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'<\',event):return\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.endswith(\',\'):\n            #Swap arguments around parenthesis! (Warning: Doesn\'t handle parenthesis inside strings as an edge case)\n            #(apple,f(x),|[\'bananna\'])   --->   (apple,|[\'bananna\'],f(x))\n            try:move_arg(buffer,-1)\n            except:print("JAM")\n            return\n        buffer.insert_text(\'<\')\n    @handle(\'>\',filter=~vi_mode_enabled&microcompletions_enabled)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'>\',event):return\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.endswith(\',\'):\n            #Swap arguments around parenthesis! (Warning: Doesn\'t handle parenthesis inside strings as an edge case)\n            #(apple,|f(x),[\'bananna\'])   --->   (apple,[\'bananna\'],f(x))\n            try:move_arg(buffer,1)\n            except:print("JAM")\n            return\n        buffer.insert_text(\'>\')\n    def do_backspace(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if self_dot_var_equals_var(buffer,\'\\b\') and after_line.strip()!=\'=\':\n            #self.foo|=foo   --->   self.fo|=fo\n            return\n        if before_line.endswith(\' as \'):\n            #(I\'m often trigger-happy with the space-bar on using imports, and try to correct it with backspace. This saves me some time...)\n            #import osaidf as |   --->   import osaidf\n            buffer.delete_before_cursor(len(\' as \'))\n            return\n        if before_line.endswith(\', \'):\n            #import osaidf as c, |   --->   import osaidf as c|\n            buffer.delete_before_cursor(len(\', \'))\n            return\n        selection_tuples=list(document.selection_ranges())\n        if not selection_tuples:\n            before=document.text_before_cursor\n            after= document.text_after_cursor\n            if not after and before ==\'ans.\':\n                buffer.delete_before_cursor(len(before))\n                return\n            if not before_line.strip():\n                #(backspace entire indent when it\'s empty. example:)\n                #def f(x):\n                #····|return x\n                #  --->\n                #def f(x):return x\n                buffer.delete_before_cursor(len(before_line))\n            bl=before_line.lstrip()\n            al=after_line.rstrip()\n            if bl+\'|\'+al in {\'from | import\',\'for | in :\',\'while |:\',\'if |:\',\'elif |:\',\'except |:\',\'lambda :\',\'with |:\'}|\\\n                            {\'import |\',\'return |\',\'return|\',\'pass|\',\'else:|\',\'yield |\',\'assert |\'}:\n                            #Delete from both sides of the cursor on constructs we tend to make automatically (to make it less annoying)\n                buffer.cursor_right(len(al))\n                buffer.delete_before_cursor(len(bl+al))\n                return\n            if before and after:\n                if after_line.strip()in {\':\',\'():\'} and before_line.lstrip() in {\'def \',\'while \',\'for \',\'class \',\'if \',\'elif \',\'else\',\'except \',\'lambda \',\'with \',\'try\'}:\n                    #  \'    def |:\'   -->   \'    |\'\n                    buffer.delete(len(after_line))\n                    buffer.delete_before_cursor(len(before_line.lstrip()))\n                    return\n                pair=before[-1]+after[0]\n                if pair in [\'()\',\'{}\',\'[]\',"\'\'",\'""\']:\n                    #  \'f(|)\'   -->   \'f|\'\n                    buffer.cursor_right(count=1)\n                    buffer.delete_before_cursor(count=2)\n                    buffer.insert_text(\'\')#trigger autocompletion\n                    return\n            buffer.delete_before_cursor(count=1)\n        else:\n            buffer.cut_selection()\n        buffer.insert_text("")#Using this to trigger autocompletion on backspace\n    def alt_backspace_char_class(event):\n        #get char before cursor and distinguish between whitespace, alphanumerics, and other chars\n        c=event.cli.current_buffer.document.text_before_cursor\n        if not c:\n            return None#no chars behind cursor\n        c=c[-1]\n        if c.isalnum():\n            return 1\n        elif not c.strip():\n            return 2\n        else:\n            return 3\n\n    @handle(Keys.Backspace,eager=True)\n    def _(event):\n        if meta_pressed():\n            do_backspace(event)#We expect at least two characters to dissapear; so eat through one-char wide spaces (for example, "def |a()" --> "|a()", not "def|a()")\n            c=alt_backspace_char_class(event)\n            while c is not None and c==alt_backspace_char_class(event):\n                do_backspace(event)\n            return\n        do_backspace(event)\n\n    @handle(Keys.Right)\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        selection_tuples=list(document.selection_ranges())\n        for t in selection_tuples:\n            buffer._set_cursor_position(t[1])\n            buffer.exit_selection()\n        else:\n            cpos=buffer.cursor_position\n            buffer.cursor_right(1)\n            if buffer.cursor_position==cpos:\n                buffer=event.cli.current_buffer\n                buffer._set_cursor_position(min(buffer.cursor_position + 1,len(buffer.document.text)))\n            # buffer.cursor_right(0)# Gets stuck on ends of lines. Not as good as the new version\n\n    @handle(Keys.Left)\n    def _(event):\n        buffer=event.cli.current_buffer\n        document=buffer.document\n        selection_tuples=list(document.selection_ranges())\n        for t in selection_tuples:# Handle arrow-keys on selection by putting the cursor on beginning or end of selection\n            buffer._set_cursor_position(min(t[0]+1,len(buffer.document.text)))\n            buffer.exit_selection()\n        else:\n            cpos=buffer.cursor_position\n            buffer.cursor_left(1)\n            if cpos==buffer.cursor_position:\n                buffer=event.cli.current_buffer\n                buffer._set_cursor_position(max(buffer.cursor_position - 1,0))\n\n    @handle(Keys.Down)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if meta_pressed():\n            buffer.cursor_down(10)\n        else:\n            buffer.auto_down(ryan_allow_completion_navigation=False)\n        # document=buffer.document\n        # assert isinstance(buffer,Buffer)\n        # if not has_selected_comlpetion(buffer):\n            \n        # if has_selected_completion(buffer) or not \'\\n\' in buffer.document.text:\n            # buffer.auto_down()# Will select next completion\n            # try:\n            #     if not has_selected_completion(buffer) or not \'\\n\' in buffer.document.text3:#\n            #         buffer.auto_down()# So we don\'t get stuck when we come back around again\n            # except:pass\n        # else:\n        #     temp=buffer.complete_state\n        #     try:\n        #         buffer.complete_state=False\n        #         buffer.auto_down()# Will select next completion\n        #     finally:\n        #         buffer.complete_state=temp\n\n    @handle(Keys.Up)\n    def _(event):\n        buffer=event.cli.current_buffer\n        if meta_pressed():\n            buffer.cursor_up(10)\n        else:\n            buffer.auto_up(ryan_allow_completion_navigation=False)\n            return\n            assert isinstance(buffer,Buffer)\n            if has_selected_completion(buffer):#  Up is the only one that can initially select a history item\n                buffer.auto_up()# Will select next completion\n                if not has_selected_completion(buffer):\n                    buffer.auto_up()# So we don\'t get stuck when we come back around again\n            else:\n                temp=buffer.complete_state\n                try:\n                    buffer.complete_state=False# So we don\'t select a completion\n                    buffer.auto_up()# Will select next completion\n                finally:\n                    buffer.complete_state=temp\n\n\n\n\n\n    @handle(Keys.ControlZ)\n    def _(event):\n        buffer=event.cli.current_buffer\n        # print(buffer._redo_stack)\n        buffer.undo()\n\n    @handle(Keys.ControlY)\n    def _(event):\n        buffer=event.cli.current_buffer\n        # print(buffer._redo_stack)\n        buffer.redo()\n\n    @handle(Keys.ControlQ)\n    def _(event):\n        #Abandon the current buffer. But still save it to history.\n\n        buffer=event.cli.current_buffer\n        buffer.append_to_history()\n        event.cli.abort()\n        # print(buffer._redo_stack)\n        # buffer.redo()\n\n    import rp.r_iterm_comm as r_iterm_comm\n\n    @handle(Keys.ControlV)# On mac this is alt+z\n    def _(event):\n        if meta_pressed(clear=True):\n            edit_event_buffer_in_vim(event)\n        else:\n            buffer=event.cli.current_buffer\n            from rp import string_from_clipboard\n            clip=r_iterm_comm.clipboard_text\n            try:\n                clip=string_from_clipboard()\n                buffer.cut_selection()\n                buffer.insert_text(clip)\n            except:\n                pass# Paste failed\n\n    @handle(Keys.ControlA)# On mac this is alt+z\n    def _(event):\n        reprify=False\n        if meta_pressed(clear=True):\n            reprify=True\n        if True:\n            buffer=event.cli.current_buffer\n            try:\n                if reprify:\n                    clip=repr(str(get_ans()))\n                else:\n                    clip=str(get_ans())\n                buffer.cut_selection()\n                buffer.insert_text(clip)\n            except:\n                pass# Paste failed\n\n    @handle(Keys.ControlC)# ,filter=has_selection)# On mac this is alt+z\n    def _(event):\n        buffer=event.cli.current_buffer\n        selection_tuples=list(buffer.document.selection_ranges())\n\n        #region\n        if not selection_tuples:\n            selection_tuples=[]\n            line=buffer.document.current_line\n            to_copy="\\n" + line# \' \' * (len(line)-len(line.lstrip()))\n            buffer.cursor_right(12323213)\n        else:\n            to_copy=""\n            for t in selection_tuples:\n                to_copy+=buffer.document.text[t[0]:t[1]+1]\n        r_iterm_comm.clipboard_text=to_copy\n        from rp import string_to_clipboard\n        try:\n            string_to_clipboard(to_copy)\n        except:\n            pass# Copy failed\n\n\n    def inc_dec(inc_or_dec:str):# ++ ⟶ +=1\n        #increment or decrement\n        @handle(inc_or_dec,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,inc_or_dec,event):return\n            document=buffer.document\n            before=document.text_before_cursor\n            before_line=document.current_line_before_cursor\n            after_line=document.current_line_after_cursor\n            after= document.text_after_cursor\n            current_line= document.current_line\n            above_line=    line_above(buffer)\n            single_line=above_line is None\n            # import r_iterm_comm\n            # if not after and r_iterm_comm.last_assignable_comm and before[-1]==inc_or_dec:# So you can do ++ -> assignable ++= (because +=1 -> assignable+=1)\n            #     buffer.cursor_left(count=1000)\n            #     buffer.insert_text(r_iterm_comm.last_assignable_comm)\n            #     buffer.cursor_right(count=1000)\n            #     return\n            # print(\'GAGAGAGA\')\n\n            from rp import is_namespaceable\n            if inc_or_dec == \'-\' and all(is_namespaceable(x) for x in before_line if x not in \' \') and starts_with_any(before_line.lstrip(),\'def \',\'class \'):# When writing the title of a function, you don\'t have to use _ you can type - and it will turn it into _\n                #(on -)\n                #def |(): ---> def _|():\n                #     AND\n                #def f|(): ---> def _f_|():\n                buffer.insert_text(\'_\')\n                return\n            if inc_or_dec==\'-\' :\n                if is_namespaceable(before_line.strip()) and before_line.rstrip()==before_line and not single_line:\n                    #If multiline, and we\'re starting a line, and we\'re continuing some variable name, assume that we don\'t want to create an expression.\n                    #Example:\n                    #def f():\n                    #   x|   ---->    x_\n                    buffer.insert_text(\'_\')\n                    return\n\n                if before_line.endswith(\'for \')and starts_with_any(after_line,\' in)\',\' in}\',\' in]\'):\n                    buffer.insert_text(\'_\')\n                    buffer.cursor_right(3)\n                    buffer.insert_text(\' \')\n                    return\n                skip=False\n                token,name,found=token_name_found_of_interest(before_line)\n                if before_line==\'from \'and after_line==\' import\':\n                    buffer.cursor_right(1233)\n                    buffer.delete_before_cursor(len(\'from  import\'))\n                elif found:\n                    # print("NAME IS "+name)\n                    if name==\'f\'==before_line.strip() and not callable(token):\n                        buffer.delete_before_cursor()\n                    else:\n                        skip=True   \n                if not skip:\n                    buffer.insert_text(\'for _ in :\')\n                    buffer.cursor_left()\n                    return \n\n            if (inc_or_dec==\'+\' or False) and (after_line.startswith(\'"\') or after_line.startswith("\'")):\n                #(on + followed by +) (for combining strings more easily)\n                #"Hello"|"World"  --->  "Hello"|+"World"  --->  "Hello"+|+"World"\n                #       AND\n                #\'Hello\'|\'World\'  --->  \'Hello\'|+\'World\'  --->  \'Hello\'+|+\'World\'\n                buffer.insert_text(\'+\')\n                buffer.cursor_left()\n                return\n            # if (inc_or_dec==\'-\' or True) and (endswithany(before_line,\'"\',"\'") and after_line.startswith("+")):\n            #     #On pressing the \'-\' key, (because string literals don\'t implement the \'-\') operator\n            #     #"Hello"|+"World"  --->  "Hello"+|+"World"\n            #     buffer.insert_text(\'+\')\n            #     return\n\n            if inc_or_dec==\'-\' and before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n                #(on -)\n                #for | in : --> for _ in |:\n                buffer.insert_text(\'_\')\n                buffer.cursor_right(len(\' in \'))\n                return\n            if len(before_line.strip())>1 and before and before[-1]==inc_or_dec and is_namespaceable(before_line[:-1].lstrip()):\n                #(on +) x+|  --->  x+=1\n                #       AND\n                #(on -) x-|  --->  x-=1\n                if not after_line:\n                    buffer.insert_text("=1")\n                else:\n                    buffer.insert_text(inc_or_dec)\n                    buffer.cursor_left()\n            elif inc_or_dec==\'-\' and before_line.endswith(\'-\'):\n                #becuase then we dont have to reach for the shify key (default blank vairable is _ in for loops)\n                #print(-|) ---> print(_|)\n                buffer.delete_before_cursor()\n                buffer.insert_text(\'_\')\n            elif inc_or_dec==\'-\' and before_line.endswith(\'-=1\'):\n                #(when we wanted to make an underscore but got -=1, just press - again...)\n                #x-=1| ---> x_| \n                buffer.delete_before_cursor(3)\n                buffer.insert_text(\'_\')\n            else:\n                buffer.insert_text(inc_or_dec)\n            # if inc_or_dec==\'+\':\n            #     print("ewfoijfdsijoijowfijofejio")\n            #     if before.endswith(\'+\') and after and after[0] in \'\\\'"\':\n            #         buffer.cursor_left()\n    inc_dec(\'+\')\n    inc_dec(\'-\')\n\n    # @handle("h")\n    # def sploo(x):\n    #     print("A")\n    # @handle("h")\n    # def sploo(x):\n    #     print("B")\n\n\n    bracket_pairs={"()","[]","{}"}\n    def thing(begin,end):\n        @handle(begin,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,begin,event):return\n            if(begin==\'(\'):\n                document=buffer.document\n                before_line=document.current_line_before_cursor\n                after_line =document.current_line_after_cursor\n                if regex_match(before_line.lstrip(),r\'for\\s+\\w+\\s+in\\s+len\'):\n                    #for x in len|   -->  for x in range(len(|))\n                    buffer.delete_before_cursor(3)\n                    buffer.insert_text(\'range(len())\')\n                    buffer.cursor_left(2)\n                    return\n                if before_line.rstrip().startswith(\'def \') and after_line.strip()==\'():\':\n                    #def f|() --> def f(|):\n                    buffer.cursor_right()\n                    return\n            if not surround(buffer,begin,end):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                buffer.insert_text(begin)\n                if after.strip()==\':\' or not after or after[0].isspace() or before and before[-1]+after[0]in bracket_pairs or document.find_matching_bracket_position()!=0:\n                    buffer.insert_text(end)\n                    buffer.cursor_left(count=1)\n        @handle(end,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,end,event):return\n            if not surround(buffer,begin,end):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                if not after or after[0]!=end:#  or before.count(begin)>before.count(end):#Last part is checking for parenthesis matches. I know somewhere there\'s a way to do this already thats better and isnt confused by strings but idk where that is\n                    buffer.insert_text(end)\n                else:\n                    buffer.cursor_right(count=1)\n    for bracket_pair in bracket_pairs:\n        thing(bracket_pair[0],bracket_pair[1])\n\n    def surround(buffer,begin,end):\n        from rp.prompt_toolkit.selection import SelectionState\n        document=buffer.document\n        text=document.text\n        selection_tuples=list(document.selection_ranges())\n        for range in selection_tuples:\n            buffer.document=Document(text=text[:range[0]]+begin+text[range[0]:range[1]+1]+end +text[range[1]+1:],cursor_position=range[0]+1,selection=None)\n            buffer.document._selection=SelectionState(original_cursor_position=range[1]+1,type=document.selection.type)\n        # exec(mini_terminal)\n        # from rp.rp_ptpython.utils import get_jedi_script_from_document\n        # script=get_jedi_script_from_document(document,r_iterm_comm.globa,r_iterm_comm.globa)\n        # script.call_signatures()\n        return bool(selection_tuples)# Returns whether we have a selection\n    def thing2(char):\n        @handle(char,filter=~vi_mode_enabled&microcompletions_enabled)\n        def _(event,filter=has_selection):# Parenthesis completion\n            buffer=event.cli.current_buffer\n            if handle_character(buffer,char,event):return\n            if not surround(buffer,char,char):\n                document=buffer.document\n                before=document.text_before_cursor\n                after= document.text_after_cursor\n                before_line=document.current_line_before_cursor\n                after_line=document.current_line_after_cursor\n\n                if after.startswith(char) and not before.endswith(char):\n                    buffer.cursor_right()\n                # else:\n                #     buffer.insert_text(char)\n                #     buffer.cursor_left()\n                #     buffer.insert_text(char)\n\n                elif (before and after and before[-1]+after[0] in {"[]","()","{}",",}",",)",",]",\'+)\',\'+,\',\'+}\',\'+]\'}) or (not after_line or not before and not after or before and after and before[-1]in\'(=!#%&*+,-./:;<>^|~\' and after[0]in\')=!#%&*+,-./ :;<>^|~\' or before and after and before[-1]+after[0] in 2*char):\n                    #| --> "|"\n                    #| --> \'|\'\n                    buffer.insert_text(char)\n                    buffer.cursor_left()\n                    buffer.insert_text(char)\n                elif before.endswith(char):\n                    #For splitting strings into two pieces\n                    #(" pressed twice)\n                    #"Hello|World!"  -->  "Hello"|World!"  -->  "Hello"|"World!"\n                    buffer.insert_text(char)\n                    buffer.cursor_left()\n                else:\n                    buffer.insert_text(char)\n\n    for char in \'"\\\'\':\n        thing2(char)\n    @handle(\',\',filter=~vi_mode_enabled&microcompletions_enabled)  \n    def _(event):\n        #Comma event\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\',\',event):return\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        if before_line.lstrip()==\'for \' and after_line.rstrip()==\' in :\':\n            #for | in:  --->  for i,e in enumerate(|):\n            buffer.insert_text(\'i,e\')\n            buffer.cursor_right(len(\' in \'))\n            buffer.insert_text(\'enumerate()\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\'for \') and starts_with_any(after_line,\' in]\',\' in)\',\' in}\'):\n            #[x for | in]  --->  [x for i,e in enumerate(|)]\n            buffer.insert_text(\'i,e\')\n            buffer.cursor_right(len(\' in\'))\n            buffer.insert_text(\' enumerate()\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\',\') and after_line.startswith(\',\'):\n            #We prevent from accidently putting in more parenthesis than make sense\n            #x,|,y  --->  x,|,y    (no change)...\n            return\n        if before_line.endswith(\',\') and \\\n            not before_line.endswith(\',,\'):#...however, we do allow ,,,,,,,:   x,,|y  --->  x,,,|y  \n            #y,|x  -->  y,|,x\n            buffer.insert_text(\',\')\n            buffer.cursor_left()\n            return\n        if before_line.endswith(\'-\'):\n            #Turning the \'-\' into a \'_\' where a \'-\' would be syntactically invalid\n            buffer.delete_before_cursor()\n            buffer.insert_text(\'_\')\n            \n        if after_line.startswith(\',\'):\n            #f(a,b,c|,)   --->   [a,b,c,|)\n            #(don\'t waste commas)\n            buffer.cursor_right()\n            return\n        if not (before_line.endswith(\',\') and after_line.startswith(\']\')):\n            #[x,y|]  -->  [x,y,|]\n            #       AND\n            #[x,y,|]  -->  [x,y,|]\n            #for when I spam the [12,3123,12,31,23,12,31,23,123,1,23,123,12,31,23] and don\'t want accidental \',,\'s\n            buffer.insert_text(\',\')\n            return\n\n    # @handle(\',\')\n    # def thing3(char):\n    #     @handle(char)\n    #     def _(event,filter=~has_selection):# Parenthesis completion\n    #         buffer=event.cli.current_buffer\n    #         document=buffer.document\n    #         before=document.text_before_cursor\n    #         after= document.text_after_cursor\n    #         if before.endswith(\'(\') and after.startswith(\')\'):\n    #             buffer.cursor_right()\n    #         buffer.insert_text(char)\n    # for char in \'!#%&*,./:;<>^|~\':# + and - allready taken\n    #     thing3(char)\n\n    @handle(Keys.Delete)\n    def _(event):\n        event.cli.current_buffer.delete()\n\n    @handle(Keys.ControlSpace)# For commenting\n    def _(event):  # Parenthesis completion\n        # def toggle_comment_on_line(x):\n        #     y=x.lstrip()\n        #     if y.startswith("#"):# Line is commented out\n        #         i=x.find(\'#\')\n        #         return x[:i]+x[i+1:]\n        #     l=len(x)-len(y)\n        #     return l*\' \' +\'#\' + y\n\n        buffer=event.cli.current_buffer\n        # buffer.transform_current_line(toggle_comment_on_line)\n        # buffer.insert_text("ⵁ")\n        # buffer.delete_before_cursor\n        document=buffer.document\n        before=document.text_before_cursor\n        after= document.text_after_cursor\n        current_line=document.current_line\n        before_line=document.current_line_before_cursor\n        after_line=document.current_line_after_cursor\n        buffer.cursor_left(10000)\n        lstrip=current_line.lstrip()\n        w=len(current_line)-len(lstrip)\n        buffer.cursor_right(w)\n        if current_line.lstrip().startswith(\'#\'):\n            buffer.delete()\n        else:\n            buffer.insert_text(\'#\')\n        buffer.cursor_down()\n    #endregion\n\n    @handle(Keys.ControlT,eager=True)\n    def _(event):\n        """\n        Cursor to top.\n        """\n        event.cli.current_buffer.history_backward()\n    @handle(Keys.ControlB,eager=True)\n    def _(event):\n        """\n        Cursor to top.\n        """\n        event.cli.current_buffer.history_forward()\n\n    @handle(Keys.ControlL)\n    def _(event):\n        """\n        Clear whole screen and render again -- also when the sidebar is visible.\n        """\n        event.cli.renderer.clear()\n    @handle(Keys.F2)\n    def _(event):\n        """\n        Show/hide sidebar.\n        """\n        python_input.show_sidebar = not python_input.show_sidebar\n\n    @handle(Keys.F3)\n    def _(event):\n        """\n        Select from the history.\n        """\n        python_input.enter_history(event.cli)\n\n    @handle(Keys.F4)\n    def _(event):\n        """\n        Toggle between Vi and Emacs mode.\n        """\n        event.cli.vi_state.input_mode = \'vi-navigation\'\n        python_input.vi_mode = not python_input.vi_mode#If we\'re switching out of RP-Emacs, its most likely because we want them good ol\' vim bindings for manipulating text. \n        # print(event.cli.vi_state)\n        # python_input.vi_mode = not python_input.vi_mode\n\n    @handle(Keys.F6)\n    def _(event):\n        """\n        Enable/Disable paste mode.\n        """\n        python_input.paste_mode = not python_input.paste_mode\n\n    @handle(Keys.F1)\n    def _(event):\n        """\n        Enable/Disable mouse mode.\n        """\n        python_input.enable_mouse_support = not python_input.enable_mouse_support\n\n    @handle(Keys.F8)\n    def _(event):\n        """\n        Enable/Disable microcopletions.\n        """\n        python_input.enable_microcompletions = not python_input.enable_microcompletions\n\n    @handle(Keys.F7)\n    def _(event):\n        """\n        Enable/Disable line wraps.\n        """\n        python_input.wrap_lines = not python_input.wrap_lines\n        \n    def number_of_leading_spaces(string):\n        i=0\n        for x in string:\n            if x==\' \':\n                i+=1\n            else:\n                break\n        return i\n    @handle(Keys.Tab, filter= ~sidebar_visible & ~has_selection & TabShouldInsertWhitespaceFilter())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        buffer=event.cli.current_buffer\n        if handle_character(buffer,\'\\t\',event):return\n        buffer.insert_text(\'    \')\n        after_line = buffer.document.current_line_after_cursor\n        before_line = buffer.document.current_line_after_cursor\n        # N=number_of_leading_spaces(before_line+after_line)\n        # if not before_line.strip() and N%4:\n            # buffer.insert_text(\' \'*(4-N%4))\n            # return\n        if after_line.lstrip():\n            buffer.cursor_left(4)\n    #region  Ryan Burgert Method\n\n    @handle(Keys.BackTab,filter=IsMultiline())\n    def _(event):\n        """\n        When tab should insert whitespace, do that instead of completion.\n        """\n        # from r import mini_terminal\n        buffer=event.cli.current_buffer\n        after_line = buffer.document.current_line_after_cursor\n        before_line = buffer.document.current_line_before_cursor\n        # flag=before_line.strip() and before_line#has some whitespace characters on it\n        N=min(4,number_of_leading_spaces(before_line+after_line))\n        # i=0\n        if not after_line.strip() and not before_line.strip():\n            for i in range(4):\n                if buffer.document.current_line_before_cursor:\n                    buffer.delete_before_cursor(1)\n\n            return\n        for _ in range(N):\n            try:\n                if buffer.document.current_line.startswith(\' \') or not has_selected_completion(buffer):\n                    flag=False\n                    if not buffer.document.current_line_after_cursor:#Otherwise it might jump to another line if we dont do this first\n                        buffer.cursor_left()\n                        flag=True\n                    buffer.transform_current_line(lambda x:x[1:])\n                    if not flag and buffer.document.current_line_before_cursor.strip():\n                        buffer.cursor_left()\n                # buffer.transform_current_line(lambda x:(x[1:]if x.startswith(\' \'*4)else x.lstrip()))\n                # buffer.transform_current_line(lambda x:(x[4:]if x.startswith(\' \'*4)else x.lstrip()))\n            except:\n                pass# Error migght happen if cursor is in bad place. Not sure what to do about that; but its an edge case so I\'m just gonna squelch it.\n        #endregion\n        # if flag:\n            # buffer.cursor_right(i)\n    from rp import ring_terminal_bell ,text_to_speech\n    def try_to_unindent(buffer,*matching_prefixes):\n        b=buffer\n        current_line = b.document.current_line\n        after_line = b.document.current_line_after_cursor\n        before_line = b.document.current_line_before_cursor\n        before=b.document.text_before_cursor\n        after= b.document.text_after_cursor\n        l=find_level(before,*matching_prefixes)\n        if l is None:\n            # ring_terminal_bell()\n            # text_to_speech(\'a\')\n            return#We\'re at a bit of a loss on what to do here...\n        i=get_indent(current_line)\n        d=len(i)-l\n        L=len(before_line.lstrip())\n        # ring_terminal_bell()\n        buffer.cursor_left(L)\n        buffer.delete_before_cursor(d)\n        buffer.cursor_right(L)\n        # text_to_speech(\'b\')\n    indent_block_matches={\n            \'except\':{\'try\',\'finally\'},#cant add except for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)\n            \'finally\':{\'try\',\'except\',\'else\'},\n            \'else\':{\'if\',\'elif\',\'for\',\'while\',\'except\'},\n            \'elif\':{\'if\'},#cant add elif for buggy reasons (it sees itself when trying to unindent and thus doesnt unindent)\n            }\n    def try_to_autounindent(buffer):\n        b=buffer\n        current_line = b.document.current_line\n        after_line = b.document.current_line_after_cursor\n        before_line = b.document.current_line_before_cursor\n        before=b.document.text_before_cursor\n        after= b.document.text_after_cursor\n        if current_line.rstrip().endswith(\':\'):\n            \n            for m in indent_block_matches:\n                if current_line.lstrip().startswith(m):\n                    try_to_unindent(buffer,*indent_block_matches[m])\n                    # text_to_speech(\'c\')\n                    return\n        # text_to_speech(\'d\')\n        return\n\n\n\n    @handle(Keys.ControlJ, filter= ~vi_mode_enabled & ~sidebar_visible & ~has_selection &( ViInsertMode() | EmacsInsertMode()) &HasFocus(DEFAULT_BUFFER) )#& IsMultiline())\n    def _(event):\n        """\n        Behaviour of the Enter key. enter key\n\n        Auto indent after newline/Enter.\n        (When not in Vi navigaton mode, and when multiline is enabled.)\n        """\n        b = event.current_buffer\n        buffer=b\n        if handle_character(buffer,\'\\n\',event):return\n        empty_lines_required = python_input.accept_input_on_enter or 10000\n        text=current_line=after_line=before_line=before=after=above_line=None\n        def refresh_strings_from_buffer():\n            nonlocal text,current_line,after_line,before_line,before,after,above_line\n            text =         b.document.text_after_cursor\n            current_line = b.document.current_line\n            after_line =   b.document.current_line_after_cursor\n            before_line =  b.document.current_line_before_cursor\n            before=        b.document.text_before_cursor\n            after=         b.document.text_after_cursor\n            above_line=    line_above(b)\n        refresh_strings_from_buffer()\n\n        single_line = above_line is None\n        def auto_pass():#try automatically adding a \'pass\' keyword if it helps to avoid a syntax error; return True if we add a \'pass\'\n            if not single_line and not current_line.strip() and above_line.rstrip().endswith(\':\'):\n                #Implicitly add \'pass\' when hitting enter below an if/for/def block (which would otherwise be a syntax error because of the autounindent)\n                buffer.insert_text(\'pass\')\n                refresh_strings_from_buffer()\n                return True\n            return False\n        auto_pass()\n        if before_line.endswith(\' enumerate(\') and after_line.startswith(\')\'):\n            #for i,e in enumerate(|):   --->   for i,e in enumerate(ans):\\n|\n            buffer.insert_text(\'ans\')\n        elif before_line.lstrip()==\'f,\' and not \'f\' in r_iterm_comm.globa:\n            #f,|   --->   for i,e in enumerate(ans):\\n|\n            buffer.delete_before_cursor(2)\n            buffer.insert_text(\'for i,e in enumerate(ans):\')\n        for end in \')]}\':\n            if current_line.endswith(\',\'+end) and before_line.endswith(\',\') and after_line==end:\n                #print(ans,|)   --->   print(ans|)\n                #[1,2,3,|]      --->   [1,2,3|]\n                #{1,2,3,|}      --->   {1,2,3|}\n                buffer.delete_before_cursor()\n                refresh_strings_from_buffer()\n        # if endswithany(before_line,\',-\',\'(-\',\'[-\',\'{-\'):\n            #A BETTER VERSION OF THIS HAS BEEN MOVED TO MISC TWEAKS WITH A BUG FIX \n            #BUG IN THIS BLOCK: On \\n: ‹(-|10)› –––>  ‹(_10)\\n|›\n            #Completing the \'-\' dash to the underscore variable \'_\' in one of many instances where it makes sense\n            #print(-|) ---> print(_)\\n|\n            # buffer.delete_before_cursor()\n            # buffer.insert_text(\'_\')\n            # refresh_strings_from_buffer()\n        #a line with a sigle letter on it is useless, so let\'s make it useful.\n        #TODO: Make it semantically aware: make \'e\' write \'except\' when in a try block, and \'else\' when in an \'if\' or after a \'for\' block. Same logic SHOULD (but doesn\'t yet) apply to all of these (see below line)\n        if before_line.lstrip()==\'#\':\n            #\'#|\' ---> \'|\'  (so we can hit enter twice to break out of a comment)\n            buffer.delete_before_cursor()\n            return\n        continue_comment=before_line.lstrip().startswith(\'#\')\n        if before_line==\'from \'and after_line==\' import\':\n            #With current completions, which come in the next few \'if\' blocks, we get this:\n            #from | import ---> for _ in ans:\\n\\t\n            buffer.delete_before_cursor(len(\'from \'))\n            buffer.delete(len(\' import\'))\n            buffer.insert_text(\'for  in :\')\n            buffer.cursor_left(len(\' in :\'))\n            refresh_strings_from_buffer()\n\n        if before_line.lstrip()==\'for \'and after_line.rstrip()==\' in :\':\n            #for | in :   --->   for _ in |:   (we don\'t stop here, it eventually goes to "for _ in ans": see the next \'if\' block)\n            buffer.insert_text(\'_\')\n            # buffer.insert_text(\'ans\')\n            # \n            refresh_strings_from_buffer()\n\n        if after_line.rstrip()==\' in :\':\n            buffer.cursor_right(len(\' in \'))\n            # \n            refresh_strings_from_buffer()\n\n        if after_line.rstrip()==\':\':\n            #for spaoddsg in |:   --->   for spaoddsg in ans:\n            spl=before_line.split()\n            if len(spl)==3 and spl[0]==\'for\' and spl[2]==\'in\':\n                buffer.insert_text(\'ans\')\n                # \n                refresh_strings_from_buffer()\n        if not (single_line and token_exists(current_line.strip())):\n            import rp.r_iterm_comm\n            enter_completable_keywords=dict(fo=\'for _ in ans:\',e=\'else:\',t=\'try:\',b=\'break\',c=\'continue\',f=\'finally:\',p=\'pass\',r=\'return\',y=\'yield\',d=\'def _():\',w=\'while True:\',i=\'if True:\')#enter-completion of keywords that don\'t need to take arguments\n            single_line_enabled_keywords={\'fo\',\'f\',\'i\',\'t\',\'d\',\'w\'}-set(rp.r_iterm_comm.globa)\n            keyword=current_line.lstrip()\n            if single_line and before_line and \'class \'.startswith(before_line) and not after_line:\n                #c|   --->  class _:\\n|\n                #cla|   --->  class _:\\n|\n                buffer.delete_before_cursor(100)\n                buffer.insert_text(\'class _:\\n    \')\n                return\n            if (not single_line or keyword in single_line_enabled_keywords) and keyword in enter_completable_keywords:\n                #Examples:\n                #\'e|\' ---> \'else:\\n    |\'\n                #\'t|\' ---> \'try:\\n    |\'\n                #\'r|\' ---> \'return\\n|\'\n                char=current_line.lstrip()\n                replacement=enter_completable_keywords[char]\n                level=lambda candidate:find_level(before,*indent_block_matches[candidate])\n                if replacement==\'else:\':\n                    exl=level(\'except\')\n                    ell=level(\'else\')\n                    if ell is None and exl is not None or exl is not None and exl>ell:\n                        text_to_speech(\'q\')\n                        replacement=\'except:\'\n                if \'_\' in replacement:\n                    if single_line:\n                        replacement=replacement.replace(\'_\',\'ans\')\n                if not \'try\' in text and replacement==\'finally:\':\n                    replacement=\'for _ in ans:\'\n                buffer.delete_before_cursor(len(char))\n                refresh_strings_from_buffer()\n                indent=current_line\n                assert not current_line.strip()\n                # if auto_pass():buffer.insert_text(\'\\n\'+indent)\n                buffer.insert_text(replacement)\n                try_to_autounindent(buffer)   \n                refresh_strings_from_buffer()\n\n            if not after and before.startswith(\'import \') and before.endswith(\', \'):\n                #Sometimes when using my import microcompletions I hit the space key by accident, which causes this:\n                #import w as x,y as z, |\n                #Which is a syntax error. Autocorrect it to:\n                #import w as x,y as z\n                buffer.delete_before_cursor(2)\n            if before_line.lstrip() in (\'def \',\'class \') and current_line.strip() in (\'def ():\',\'def (self):\',\'class :\') :\n                #def |():  --->  \'def ans():\\n|\'  or \'def _():\\n|\' \n                #class |:  --->  class _:\\n|\n                if single_line:\n                    buffer.insert_text(\'ans\')\n                else:\n                    buffer.insert_text(\'_\')\n            #we might have made some changes; refreshing:\n            refresh_strings_from_buffer()\n\n        # if  (after_line.startswith(\'"""\') and before_line.endswith (\'"""\')) or\\\n        #     (after_line.startswith("\'\'\'") and before_line.endswith ("\'\'\'")):\n        #     print("ASOID")\n        #     b.insert_text(\'\\n\')\n        #     return\n        def at_the_end(b):\n            """ we consider the cursor at the end when there is no text after\n            the cursor, or only whitespace. """\n            assert isinstance(b,Buffer)\n            refresh_strings_from_buffer()\n            #region RYAN BURGERT STUFF\n            text=after\n            assert isinstance(text,str)\n            if self_dot_var_equals_var(buffer) or (before_line.lstrip() and not beginswithany(before_line[::-1],\' \',\',\',\':\',\';\',\'{\',\'[\',\'"""\',"\'\'\'") and not \'"""\' in before_line and not "\'\'\'" in before_line and \'(\' in before_line or beginswithany(before_line.lstrip(),\'for \',\'def \',\'lambda \',\'while \',\'with \',\'if \',\'except \',\'try \') or not text or text.split(\'\\n\')[0] in ["):",\']\',\')\',\'}\',\':\']):# Presumably at the end of def( a,b,c,d,e^): where ^ is cursor\n                event.cli.current_buffer.cursor_right(1000000)# Move cursor to end of line then proceed as normal\n                text = b.document.text_after_cursor\n            #endregion\n            return text == \'\' or (text.isspace() and not \'\\n\' in text)\n        if single_line:#single-line commands are entered immediately.\n            if not current_line.rstrip().endswith(\':\') \\\n            and not     endswithany(current_line.lstrip(),\'@\',"\'\'\'",\'"""\') \\\n            and not starts_with_any(current_line.lstrip(),\'@\',"\'\'\'",\'"""\'):\n                b.accept_action.validate_and_handle(event.cli, b)\n                # print("JI")\n                # return\n        # if at_the_end(b):# TODO Stuff here\n            # print("""def a b c d e (enter)\n# ->\n# def a(b,c,d,e):\n# """)\n        if python_input.paste_mode:\n            # In paste mode, always insert text.\n            b.insert_text(\'\\n\')\n\n        elif at_the_end(b) and b.document.text.replace(\' \', \'\').endswith(\'\\n\' * (empty_lines_required - 1)):\n            if b.validate():\n                # When the cursor is at the end, and we have an empty line:\n                # drop the empty lines, but return the value.\n                b.document = Document(\n                    text=b.text.rstrip(),\n                    cursor_position=len(b.text.rstrip()))\n                b.accept_action.validate_and_handle(event.cli, b)\n        else:\n            auto_newline(b)\n            if continue_comment:\n                #\'#Foo|\'-->\'#Foo\\n#|\'\n                buffer.insert_text(\'#\')\n\n\n    @handle(Keys.ControlD, filter=~sidebar_visible & Condition(lambda cli:\n            # Only when the `confirm_exit` flag is set.\n            python_input.confirm_exit and\n            # And the current buffer is empty.\n            cli.current_buffer_name == DEFAULT_BUFFER and\n            not cli.current_buffer.text))\n    def _(event):\n        """\n        Override Control-D exit, to ask for confirmation.\n        """\n        python_input.show_exit_confirmation = True\n\n\n\n\n    @handle(Keys.F5, filter=Condition(lambda cli: python_input.show_sidebar))#Only activate when the sidebar is visible\n    def _(event):\n        from rp.prompt_toolkit.shortcuts import confirm\n        from rp import input_yes_no,clear_terminal_screen\n\n        import rp.rp_ptpython.python_input as rrpi\n\n        clear_terminal_screen()\n        if input_yes_no("Ryan Python\\nPlease Confirm: Are you sure you want to this menu\'s settings (the F2 menu)?\\nIf you choose yes, they\'ll be saved for the next time you boot rp.\\nNote: You can also do this with the \'PT SAVE\' command."):\n            run_arbitrary_code_without_destroying_buffer("PT SAVE",event)\n            print("Saved the F2 menu\'s current settings; you\'ll see them again when you reboot rp!")\n        else:\n            clear_terminal_screen()\n            event.cli.renderer.clear()\n\n    return registry\n\n\ndef load_sidebar_bindings(python_input):\n    """\n    Load bindings for the navigation in the sidebar.\n    """\n    registry = Registry()\n\n    handle = registry.add_binding\n    sidebar_visible = Condition(lambda cli: python_input.show_sidebar)\n\n    @handle(Keys.Up, filter=sidebar_visible)\n    @handle(Keys.ControlP, filter=sidebar_visible)\n    @handle(\'k\', filter=sidebar_visible)\n    def _(event):\n        " Go to previous option. "\n        python_input.selected_option_index = (\n            (python_input.selected_option_index - 1) % python_input.option_count)\n\n    @handle(Keys.Down, filter=sidebar_visible)\n    @handle(Keys.ControlN, filter=sidebar_visible)\n    @handle(\'j\', filter=sidebar_visible)\n    def _(event):\n        " Go to next option. "\n        python_input.selected_option_index = (\n            (python_input.selected_option_index + 1) % python_input.option_count)\n\n    @handle(Keys.Right, filter=sidebar_visible)\n    @handle(\'l\', filter=sidebar_visible)\n    @handle(\' \', filter=sidebar_visible)\n    def _(event):\n        " Select next value for current option. "\n        option = python_input.selected_option\n        option.activate_next()\n\n    @handle(Keys.Left, filter=sidebar_visible)\n    @handle(\'h\', filter=sidebar_visible)\n    def _(event):\n        " Select previous value for current option. "\n        option = python_input.selected_option\n        option.activate_previous()\n\n    @handle(Keys.ControlC, filter=sidebar_visible)\n    @handle(Keys.ControlG, filter=sidebar_visible)\n    @handle(Keys.ControlD, filter=sidebar_visible)\n    @handle(Keys.ControlJ, filter=sidebar_visible)\n    @handle(Keys.Escape, filter=sidebar_visible)\n    def _(event):\n        " Hide sidebar. "\n        python_input.show_sidebar = False\n\n    return registry\n\n\ndef load_confirm_exit_bindings(python_input):\n    """\n    Handle yes/no key presses when the exit confirmation is shown.\n    """\n    registry = Registry()\n\n    handle = registry.add_binding\n    confirmation_visible = Condition(lambda cli: python_input.show_exit_confirmation)\n\n    @handle(\'y\', filter=confirmation_visible)\n    @handle(\'Y\', filter=confirmation_visible)\n    @handle(Keys.ControlJ, filter=confirmation_visible)\n    @handle(Keys.ControlD, filter=confirmation_visible)\n    def _(event):\n        """\n        Really quit.\n        """\n        event.cli.exit()\n\n    @handle("n", filter=confirmation_visible)\n    # @handle("N", filter=confirmation_visible)\n    @handle(Keys.Any, filter=confirmation_visible)\n    def _(event):\n        """\n        Cancel exit.\n        """\n        python_input.show_exit_confirmation = False\n\n    return registry\ndiddly=0\n\ndef auto_newline(buffer):\n    r"""\n    Insert \\n at the cursor position. Also add necessary padding.\n    """\n    insert_text = buffer.insert_text\n\n    if buffer.document.current_line_after_cursor:\n        # When we are in the middle of a line. Always insert a newline.\n        insert_text(\'\\n\')\n    else:\n        # Go to new line, but also add indentation.\n        current_line = buffer.document.current_line_before_cursor.rstrip()\n        insert_text(\'\\n\')\n\n        # Unident if the last line ends with \'pass\', remove four spaces.\n        unindent = current_line.rstrip().endswith(\' pass\') or current_line.lstrip().startswith(\'return \') or current_line.lstrip().startswith(\'raise \')  or current_line.strip()==(\'break\') or  current_line.strip()==(\'continue\') or  current_line.strip()==(\'raise\') or  current_line.strip()==(\'pass\')or  current_line.strip()==(\'return\')\n\n        # Copy whitespace from current line\n        current_line2 = current_line[4:] if unindent else current_line\n\n        for c in current_line2:\n            if c.isspace():\n                insert_text(c)\n            else:\n                break\n\n        # If the last line ends with a colon, add four extra spaces.\n        if current_line[-1:] == \':\':\n            for x in range(4):\n                insert_text(\' \')\n\n'
ans=234234234
ans='234234234'