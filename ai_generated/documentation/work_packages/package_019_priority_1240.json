{
  "package_id": 19,
  "functions": [
    "update",
    "keys",
    "read",
    "save_json",
    "trace_func",
    "clear",
    "pseudo_terminal",
    "_reload_modules"
  ],
  "total_functions": 8,
  "estimated_hours": 6.0,
  "priority_score": 1240,
  "context": {
    "update": {
      "function_name": "update",
      "calls": [],
      "called_by": [
        "_get_hash",
        "trace_func",
        "_get_pyin_settings",
        "load_tsv",
        "keys",
        "_rinsp_search_helper",
        "cv_manually_selected_contours",
        "pseudo_terminal",
        "clear",
        "gather_args_bind",
        "save_json",
        "download_url",
        "fansi_syntax_highlighting",
        "_which",
        "get_font_supported_chars",
        "bundle_vars",
        "merged_dicts",
        "fansi",
        "_old_fansi_syntax_highlighting",
        "gather_args",
        "globalize_locals",
        "display_image_in_notebook",
        "read",
        "_init_update",
        "_reload_modules",
        "_load_files",
        "_get_visible_scope"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "_which",
        "_get_hash",
        "get_font_supported_chars",
        "bundle_vars",
        "merged_dicts",
        "update",
        "trace_func",
        "fansi",
        "_get_pyin_settings",
        "load_tsv",
        "keys",
        "_old_fansi_syntax_highlighting",
        "_rinsp_search_helper",
        "gather_args",
        "globalize_locals",
        "cv_manually_selected_contours",
        "display_image_in_notebook",
        "read",
        "_init_update",
        "_reload_modules",
        "pseudo_terminal",
        "clear",
        "gather_args_bind",
        "save_json",
        "_load_files",
        "_get_visible_scope",
        "download_url",
        "fansi_syntax_highlighting"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "keys": {
      "function_name": "keys",
      "calls": [
        "update"
      ],
      "called_by": [
        "display_dict",
        "random_batch",
        "_pterm_exeval",
        "get_youtube_video_transcript",
        "skia_stamp_image",
        "random_element",
        "validate_tensor_shapes",
        "load_safetensors",
        "tmuxp_create_session_yaml",
        "fansi",
        "_rp_show_custom_line_profile",
        "repr_kwargs_dict",
        "_get_rp_color",
        "broadcast_kwargs",
        "search_replace_simul",
        "_rinsp_search_helper",
        "dict_to_list",
        "cv_optical_flow"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "_pterm_exeval",
        "get_youtube_video_transcript",
        "update",
        "load_safetensors",
        "fansi",
        "_rp_show_custom_line_profile",
        "broadcast_kwargs",
        "_get_rp_color",
        "keys",
        "_rinsp_search_helper",
        "cv_optical_flow",
        "display_dict",
        "random_batch",
        "skia_stamp_image",
        "random_element",
        "validate_tensor_shapes",
        "tmuxp_create_session_yaml",
        "repr_kwargs_dict",
        "search_replace_simul",
        "dict_to_list"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "read": {
      "function_name": "read",
      "calls": [
        "update"
      ],
      "called_by": [
        "local_paste",
        "record_mono_audio",
        "save_gist",
        "_get_hash",
        "currently_running_desktop",
        "text_file_to_string",
        "_torch_tensor_to_bytes_for_hashing",
        "_cv_initialize_cameras",
        "download_google_font",
        "load_wav_file",
        "load_mp3_file",
        "number_of_lines_in_file",
        "shorten_url",
        "input_keypress",
        "load_image_from_webcam",
        "_load_video_stream",
        "file_to_bytes"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "local_paste",
        "record_mono_audio",
        "save_gist",
        "_get_hash",
        "text_file_to_string",
        "update",
        "_torch_tensor_to_bytes_for_hashing",
        "load_mp3_file",
        "number_of_lines_in_file",
        "shorten_url",
        "_load_video_stream",
        "read",
        "currently_running_desktop",
        "_cv_initialize_cameras",
        "download_google_font",
        "load_wav_file",
        "input_keypress",
        "load_image_from_webcam",
        "file_to_bytes"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "save_json": {
      "function_name": "save_json",
      "calls": [
        "update",
        "string_to_text_file"
      ],
      "called_by": [
        "_omni_save",
        "_view_json_via_jtree"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "save_json",
        "update",
        "_omni_save",
        "string_to_text_file",
        "_view_json_via_jtree"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "trace_func": {
      "function_name": "trace_func",
      "calls": [
        "update"
      ],
      "called_by": [],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "update",
        "trace_func"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "clear": {
      "function_name": "clear",
      "calls": [
        "update"
      ],
      "called_by": [
        "cv_manually_selected_contours",
        "update_style",
        "pseudo_terminal",
        "play_the_matrix_animation",
        "do",
        "skia_text_to_image",
        "_copy_image_to_clipboard_via_copykitten",
        "clean_imports_via_unimport"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "cv_manually_selected_contours",
        "update_style",
        "pseudo_terminal",
        "clear",
        "update",
        "play_the_matrix_animation",
        "do",
        "skia_text_to_image",
        "_copy_image_to_clipboard_via_copykitten",
        "clean_imports_via_unimport"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "pseudo_terminal": {
      "function_name": "pseudo_terminal",
      "calls": [
        "get_my_mac_address",
        "input_yes_no",
        "text_file_to_string",
        "update",
        "_warnings_are_off",
        "print_line",
        "number_of_leading_spaces",
        "_get_processor_name",
        "update_rp",
        "ends_with_any",
        "_rinsp_search_helper",
        "lrstrip_all_lines",
        "fuzzy_string_match",
        "_omni_save",
        "running_in_google_colab",
        "string_to_clipboard",
        "get_source_file",
        "_refresh_autocomplete_module_list",
        "get_my_local_ip_address",
        "display_image_in_terminal_color",
        "input_select",
        "make_directory",
        "_clean_cd_history",
        "pop",
        "get_current_date",
        "get_source_code",
        "repr_string_to_modifier",
        "is_literal",
        "_iterfzf",
        "mini_editor",
        "get_free_disk_space",
        "line_split",
        "_ipython_exeval_maker",
        "strip",
        "_update_cd_history",
        "_save_pyin_settings_file",
        "get_paths_parents",
        "human_readable_file_size",
        "undo",
        "_vimore",
        "display_image_in_notebook",
        "running_in_docker",
        "indentify",
        "get_process_id",
        "get_absolute_path",
        "open_file_with_default_application",
        "rinsp",
        "print_code",
        "path_split",
        "print_stack_trace",
        "connected_to_internet",
        "horizontally_concatenated_strings",
        "string_to_text_file",
        "is_namespaceable",
        "_write_to_pterm_hist",
        "file_exists",
        "disable_fansi",
        "printed",
        "_warnings_on",
        "_mv",
        "display_website_in_terminal",
        "print_rich_stack_trace",
        "_fzf_multi_grep",
        "web_copy_path",
        "get_module_path",
        "object_to_base64",
        "is_valid_python_syntax",
        "get_used_ram",
        "equal",
        "google_search_url",
        "run",
        "_launch_ranger",
        "tmux_paste",
        "print",
        "breadth_first_path_iterator",
        "delete_file",
        "_load_text_from_file_or_url",
        "redo",
        "get_snapshot",
        "launch_visidata",
        "tmux_copy",
        "get_module_path_from_name",
        "temporary_file_path",
        "get_free_ram",
        "_fd",
        "get_current_directory",
        "set_numpy_print_options",
        "get_my_public_ip_address",
        "_view_interactive_json",
        "add_to_successful_command_history",
        "running_in_mamba",
        "scope",
        "regex_replace",
        "_get_env_info",
        "append_line_to_file",
        "do",
        "line_join",
        "is_valid_url",
        "_get_pterm_verbose",
        "itc",
        "_set_ryan_tmux_conf",
        "input_multiline",
        "_ric_current_candidate_fuzzy_matches",
        "string_pager",
        "is_empty_folder",
        "display_file_tree",
        "get_file_extension",
        "unique",
        "_set_ryan_ranger_config",
        "print_verbose_stack_trace",
        "pip_import",
        "set_snapshot",
        "_paste_from_clipboard",
        "fansi_is_disabled",
        "input_select_folder",
        "currently_running_linux",
        "get_conda_name",
        "get_name_from_name_error",
        "directory_exists",
        "input_select_path",
        "path_exists",
        "fansi_is_enabled",
        "print_highlighted_stack_trace",
        "is_a_git_repo",
        "fansi_print",
        "do_if_new",
        "level_label",
        "_display_pterm_image",
        "dupdate",
        "_delete_pyin_settings_file",
        "save_text_file",
        "string_to_modifier",
        "get_file_size",
        "_rich_inspect",
        "_set_ryan_vimrc",
        "_cdh_back_query",
        "is_image_file",
        "vim_copy",
        "_get_cd_history",
        "fansi_syntax_highlighting",
        "main",
        "_display_filetype_size_histogram",
        "_pterm_exeval",
        "_set_session_title",
        "show_error",
        "fansi",
        "_display_pterm_flamechart",
        "date_modified",
        "replace",
        "open_url_in_web_browser",
        "pretty_print",
        "running_in_ssh",
        "vim",
        "unindent",
        "get_all_paths",
        "starts_with_any",
        "get_venv_name",
        "get_relative_path",
        "_truncate_string_floats",
        "make_parent_directory",
        "load_image",
        "base64_to_object",
        "running_in_tmux",
        "print_history",
        "_cdh_folder_is_protected",
        "currently_running_windows",
        "eval_for_rinsp",
        "path_join",
        "get_process_title",
        "web_paste",
        "display_list",
        "get_total_disk_space",
        "rinsp_search",
        "_dhistory_helper",
        "_pterm_cd",
        "is_image",
        "running_in_venv",
        "currently_in_a_tty",
        "is_a_module",
        "running_in_conda",
        "_view_image_via_textual_imageview",
        "_autocomplete_lss_name",
        "get_ans",
        "clear",
        "get_computer_name",
        "is_symbolic_link",
        "take_snapshot",
        "_maybe_display_string_in_pager",
        "get_terminal_width",
        "strip_ansi_escapes",
        "_pterm_fuzzy_cd",
        "string_from_clipboard",
        "_warnings_off",
        "set_ans",
        "par_map",
        "web_copy",
        "local_paste",
        "_set_ryan_xonshrc",
        "vim_paste",
        "merged_dicts",
        "is_numpy_array",
        "_get_prompt_style",
        "get_subfolders",
        "columnify_strings",
        "input_select_file",
        "set_current_directory",
        "fansify",
        "cyan",
        "get_used_disk_space",
        "view_table",
        "input_default",
        "get_total_ram",
        "handy_hash",
        "currently_running_mac",
        "_reload_modules",
        "pterm_pretty_print",
        "random_element",
        "run_as_new_thread",
        "web_paste_path",
        "copy_image_to_clipboard",
        "can_undo",
        "set_prompt_style",
        "get_scope",
        "local_copy",
        "can_redo",
        "enable_fansi"
      ],
      "called_by": [
        "_pterm"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "get_my_mac_address",
        "input_yes_no",
        "text_file_to_string",
        "update",
        "_warnings_are_off",
        "print_line",
        "number_of_leading_spaces",
        "_get_processor_name",
        "update_rp",
        "ends_with_any",
        "_rinsp_search_helper",
        "lrstrip_all_lines",
        "fuzzy_string_match",
        "_omni_save",
        "running_in_google_colab",
        "string_to_clipboard",
        "get_source_file",
        "_refresh_autocomplete_module_list",
        "get_my_local_ip_address",
        "display_image_in_terminal_color",
        "input_select",
        "_clean_cd_history",
        "pop",
        "get_current_date",
        "get_source_code",
        "repr_string_to_modifier",
        "is_literal",
        "_iterfzf",
        "mini_editor",
        "get_free_disk_space",
        "line_split",
        "_ipython_exeval_maker",
        "strip",
        "_update_cd_history",
        "_save_pyin_settings_file",
        "get_paths_parents",
        "human_readable_file_size",
        "undo",
        "_vimore",
        "display_image_in_notebook",
        "running_in_docker",
        "indentify",
        "get_process_id",
        "get_absolute_path",
        "open_file_with_default_application",
        "rinsp",
        "print_code",
        "path_split",
        "print_stack_trace",
        "connected_to_internet",
        "horizontally_concatenated_strings",
        "string_to_text_file",
        "is_namespaceable",
        "_write_to_pterm_hist",
        "file_exists",
        "disable_fansi",
        "printed",
        "_pterm",
        "_warnings_on",
        "_mv",
        "display_website_in_terminal",
        "print_rich_stack_trace",
        "_fzf_multi_grep",
        "web_copy_path",
        "get_module_path",
        "object_to_base64",
        "pseudo_terminal",
        "is_valid_python_syntax",
        "get_used_ram",
        "equal",
        "google_search_url",
        "run",
        "_launch_ranger",
        "tmux_paste",
        "print",
        "breadth_first_path_iterator",
        "delete_file",
        "_load_text_from_file_or_url",
        "redo",
        "get_snapshot",
        "launch_visidata",
        "tmux_copy",
        "get_module_path_from_name",
        "temporary_file_path",
        "get_free_ram",
        "_fd",
        "get_current_directory",
        "set_numpy_print_options",
        "get_my_public_ip_address",
        "_view_interactive_json",
        "add_to_successful_command_history",
        "running_in_mamba",
        "scope",
        "regex_replace",
        "_get_env_info",
        "append_line_to_file",
        "do",
        "is_valid_url",
        "_get_pterm_verbose",
        "itc",
        "_set_ryan_tmux_conf",
        "input_multiline",
        "_ric_current_candidate_fuzzy_matches",
        "string_pager",
        "is_empty_folder",
        "display_file_tree",
        "get_file_extension",
        "unique",
        "_set_ryan_ranger_config",
        "print_verbose_stack_trace",
        "pip_import",
        "set_snapshot",
        "_paste_from_clipboard",
        "fansi_is_disabled",
        "input_select_folder",
        "currently_running_linux",
        "get_conda_name",
        "get_name_from_name_error",
        "directory_exists",
        "input_select_path",
        "path_exists",
        "fansi_is_enabled",
        "print_highlighted_stack_trace",
        "is_a_git_repo",
        "make_directory",
        "fansi_print",
        "do_if_new",
        "level_label",
        "_display_pterm_image",
        "dupdate",
        "_delete_pyin_settings_file",
        "save_text_file",
        "string_to_modifier",
        "get_file_size",
        "_rich_inspect",
        "_set_ryan_vimrc",
        "_cdh_back_query",
        "is_image_file",
        "vim_copy",
        "_get_cd_history",
        "fansi_syntax_highlighting",
        "main",
        "_display_filetype_size_histogram",
        "_pterm_exeval",
        "_set_session_title",
        "show_error",
        "fansi",
        "_display_pterm_flamechart",
        "date_modified",
        "replace",
        "open_url_in_web_browser",
        "pretty_print",
        "running_in_ssh",
        "vim",
        "unindent",
        "get_all_paths",
        "starts_with_any",
        "get_venv_name",
        "get_relative_path",
        "_truncate_string_floats",
        "make_parent_directory",
        "load_image",
        "base64_to_object",
        "running_in_tmux",
        "print_history",
        "_cdh_folder_is_protected",
        "currently_running_windows",
        "eval_for_rinsp",
        "path_join",
        "get_process_title",
        "web_paste",
        "display_list",
        "get_total_disk_space",
        "rinsp_search",
        "_dhistory_helper",
        "_pterm_cd",
        "is_image",
        "running_in_venv",
        "currently_in_a_tty",
        "running_in_conda",
        "_view_image_via_textual_imageview",
        "_autocomplete_lss_name",
        "get_ans",
        "clear",
        "get_computer_name",
        "is_symbolic_link",
        "take_snapshot",
        "_maybe_display_string_in_pager",
        "get_terminal_width",
        "strip_ansi_escapes",
        "_pterm_fuzzy_cd",
        "string_from_clipboard",
        "_warnings_off",
        "set_ans",
        "par_map",
        "web_copy",
        "local_paste",
        "_set_ryan_xonshrc",
        "vim_paste",
        "merged_dicts",
        "is_numpy_array",
        "_get_prompt_style",
        "get_subfolders",
        "columnify_strings",
        "get_scope",
        "input_select_file",
        "set_current_directory",
        "fansify",
        "cyan",
        "get_used_disk_space",
        "view_table",
        "input_default",
        "get_total_ram",
        "handy_hash",
        "currently_running_mac",
        "can_redo",
        "_reload_modules",
        "pterm_pretty_print",
        "random_element",
        "run_as_new_thread",
        "web_paste_path",
        "copy_image_to_clipboard",
        "can_undo",
        "set_prompt_style",
        "line_join",
        "local_copy",
        "is_a_module",
        "enable_fansi"
      ],
      "multiplexing": [
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "fansi",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size",
        "get_file_size"
      ],
      "is_via_variant": false,
      "is_private": false
    },
    "_reload_modules": {
      "function_name": "_reload_modules",
      "calls": [
        "print_stack_trace",
        "update"
      ],
      "called_by": [
        "pseudo_terminal"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "print_stack_trace",
        "_reload_modules",
        "update",
        "pseudo_terminal"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": true
    }
  },
  "documentation_status": {
    "update": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "keys": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "read": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "save_json": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "trace_func": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "clear": {
      "current_quality": "basic",
      "current_docstring": "Clears the viewports",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type",
        "Expand description with more detail about purpose and behavior"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "pseudo_terminal": {
      "current_quality": "basic",
      "current_docstring": "An interactive terminal session, powered by RP ",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document function parameters and their types",
        "Document return value and type",
        "Expand description with more detail about purpose and behavior"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "_reload_modules": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    }
  },
  "work_instructions": [
    "For each function in this package:",
    "1. Read the existing docstring (if any) and understand the function's purpose",
    "2. Examine the function's implementation to understand its behavior",
    "3. Check related functions (in context) to understand how they work together",
    "4. ENHANCE (don't replace) the docstring following the template:",
    "   - Keep original docstring if it exists",
    "   - Add 'Enhanced Documentation:' section with usage patterns",
    "   - Include concrete examples with >>> syntax",
    "   - Document parameters and return values",
    "   - Note related functions and when to use vs alternatives",
    "   - Add relevant tags for searchability",
    "5. Test your examples to ensure they work",
    "6. Update the appropriate tag files in documentation/tags/",
    "7. SPECIAL: Document the multiplexing pattern - how the base function dispatches to specific implementations"
  ],
  "quality_checklist": [
    "\u2610 Each function has enhanced docstring with purpose clearly explained",
    "\u2610 All parameters are documented with types and descriptions",
    "\u2610 Return values are documented with types and descriptions",
    "\u2610 At least one concrete example with >>> syntax that actually runs",
    "\u2610 Related functions are mentioned with explanations",
    "\u2610 Usage patterns and common scenarios are described",
    "\u2610 Relevant tags added for searchability",
    "\u2610 Function added to appropriate tag files in documentation/tags/",
    "\u2610 Examples tested and confirmed working",
    "\u2610 Cross-references to multiplexing patterns or _via_ variants documented"
  ]
}