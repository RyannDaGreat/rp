{
  "package_id": 1,
  "functions": [
    "pip_import",
    "print",
    "fansi_print",
    "add",
    "delete_file",
    "as_easydict",
    "rinsp",
    "_get_pynput_mouse_controller"
  ],
  "total_functions": 8,
  "estimated_hours": 6.0,
  "priority_score": 3745,
  "context": {
    "pip_import": {
      "function_name": "pip_import",
      "calls": [
        "module_exists",
        "add",
        "input_yes_no",
        "print",
        "fansi_print",
        "pip_install",
        "pip_import",
        "offer_to_blacklist",
        "connected_to_internet",
        "running_in_google_colab"
      ],
      "called_by": [
        "list_dict_transpose",
        "_get_depth_pro_model",
        "get_process_using_port",
        "_cv_initialize_cameras",
        "_datamuse_words_request",
        "block",
        "_view_markdown_in_terminal",
        "get_process_username",
        "_init_pillow_heif",
        "send_facebook_message",
        "load_yaml_file",
        "cv_inpaint_image",
        "clean_imports_via_unimport",
        "unwarped_perspective_image",
        "get_process_start_date",
        "get_git_remote_url",
        "_disable_insecure_request_warning",
        "_autoformat_python_code_via_black",
        "load_image_from_url",
        "print_process_info",
        "_load_images_via_pdf2image",
        "get_mac_address_vendor",
        "_copy_image_to_clipboard_via_pyjpgclipboard",
        "play_sound_from_samples",
        "strip_python_docstrings",
        "launch_xonsh",
        "cv_draw_contours",
        "tmuxp_launch_session_from_yaml",
        "decode_bytes_to_image",
        "_web_copy",
        "dunk_string_diff",
        "_cv_helper",
        "_binary_floyd_steinburg_dithering",
        "_launch_ranger",
        "save_openexr_image",
        "view_string_diff",
        "get_monitor_resolution",
        "delete_file",
        "_load_text_from_file_or_url",
        "_get_jupyter_output_widget",
        "reduced_row_echelon_form",
        "_get_inflect_engine",
        "as_pil_image",
        "save_animated_png",
        "get_my_public_ip_address",
        "laplacian_blend",
        "apply_colormap_to_image",
        "_convert_content_grid",
        "download_youtube_video",
        "get_all_facebook_messages",
        "print_verbose_stack_trace",
        "display_pandas_correlation_heatmap",
        "get_cutscene_frame_numbers",
        "cv_remap_image",
        "get_bilinear_weights",
        "_display_columns",
        "cv_draw_rectangle",
        "_cv_save_video_mp4",
        "split_python_tokens",
        "line_graph_via_plotille",
        "mouse_middle_press",
        "_pterm_exeval",
        "_get_all_notebook_sessions_via_ipybname",
        "temporary_numpy_random_seed",
        "cv_contour_match",
        "_load_image_from_file_via_imageio",
        "_load_video_stream",
        "s3_list_objects",
        "_encode_image_to_bytes",
        "_get_javascript_runtime",
        "is_valid_openexr_file",
        "get_image_file_dimensions",
        "_display_downloadable_image_in_notebook_via_ipython",
        "edit_image_in_terminal",
        "whiten_points_covariance",
        "_view_image_via_textual_imageview",
        "words_to_number",
        "skia_stamp_image",
        "torch_scatter_add_image",
        "torch_resize_image",
        "download_url",
        "delete_folder",
        "color_name_to_float_color",
        "skia_resize_image",
        "_get_kernel_to_pid_mapping",
        "cv_equalize_histogram",
        "_string_pager_via_click",
        "_get_apriltag_detector",
        "cv_simplify_contour",
        "get_video_file_framerate",
        "autoformat_html_via_bs4",
        "clear_jupyter_notebook_outputs",
        "load_parquet",
        "add_ipython_kernel",
        "autoformat_python_via_black",
        "__getattribute__",
        "cv_distance_to_contour",
        "fansi_pygments",
        "_ipython_exeval_maker",
        "get_notebook_path",
        "_rich_print",
        "_display_image_slideshow_animated",
        "_get_skia_sampling",
        "run_depth_pro",
        "_get_hash",
        "_static_calldefs",
        "torch_remap_image",
        "get_pdf_num_pages",
        "_make_sure_nltk_has_wordnet_installed",
        "play_sound_file_via_pygame",
        "_sort_imports_via_isort",
        "load_tsv",
        "print_rich_stack_trace",
        "_fzf_multi_grep",
        "cv_line_graph",
        "display_qr_code_in_terminal",
        "get_used_ram",
        "load_image_from_screenshot_via_mss",
        "save_image_avif",
        "_load_pdf_as_text_via_pdfminer",
        "_get_punkt_languages",
        "print_notebook_gpu_summary",
        "_get_openexr_image_dimensions",
        "bar_graph",
        "cv_find_contours",
        "get_youtube_video_transcript",
        "launch_visidata",
        "can_convert_object_to_bytes",
        "select_torch_device",
        "get_process_memory",
        "in_tokens",
        "curl",
        "get_cloud_provider",
        "autoimportable_module",
        "load_animated_gif",
        "remove_duplicate_frames",
        "_ensure_tapnet_installed",
        "cv_distance_transform",
        "display_markdown",
        "parse_dyaml_junctions",
        "save_image",
        "prime_factors",
        "visualize_pytorch_model",
        "is_a_git_repo",
        "display_image",
        "load_image_from_clipboard",
        "_rich_inspect",
        "_single_line_cv_text_to_image",
        "_initialize_bokeh",
        "save_safetensors",
        "display_image_in_terminal",
        "_display_video_via_mediapy",
        "mouse_right_press",
        "display_polygon",
        "sobel_edges",
        "norm_pdf",
        "input_select_serial_device_id",
        "xy_torch_matrices",
        "as_easydict",
        "mouse_left_release",
        "_load_image_from_file_via_opencv",
        "load_gist",
        "cv_box_blur",
        "load_safetensors",
        "display_clear",
        "get_apriltag_image",
        "get_number_of_monitors",
        "_view_json_via_jtree",
        "ip_to_mac_address",
        "histogram_in_terminal",
        "save_video_avi",
        "_torch_device_to_index",
        "cv_gauss_blur",
        "as_numpy_video",
        "record_mono_audio",
        "line_graph",
        "tmux_kill_session",
        "check_pip_requirements",
        "save_image_to_imgur",
        "_as_skia_image",
        "_install_ollama",
        "cv_contour_length",
        "curl_bytes",
        "display_image_in_terminal_color",
        "shorten_github_url",
        "gather_vars",
        "display_cv_color_histogram",
        "_iterfzf",
        "_pip_import_pyflow",
        "string_to_date",
        "_moviepy_VideoFileClip",
        "_filter_dict_via_fzf",
        "text_to_speech_via_google",
        "_load_image_from_screenshot_via_pyscreenshot",
        "cv_resize_image",
        "load_wav_file",
        "rinsp",
        "_get_parts_of_speech_via_nltk",
        "norm_cdf",
        "scatter_plot",
        "print_gpu_summary",
        "_skimage_skeletonize",
        "get_process_exists",
        "display_update",
        "cv_imshow",
        "auto_canny",
        "load_image_from_webcam",
        "bundle_vars",
        "cv_draw_circle",
        "_display_image_in_notebook_via_ipyplot",
        "get_free_ram",
        "iana_to_tzinfo",
        "translate",
        "get_git_commit_message",
        "_resize_image_via_skimage",
        "_get_facebook_client",
        "send_text_message",
        "get_process_cwd",
        "fansi_pygments_demo",
        "cv_contour_area",
        "_slow_pil_text_to_image",
        "MIDI_output",
        "_init_nvml",
        "image_to_text",
        "get_current_git_hash",
        "big_ascii_text",
        "run_removestar",
        "display_image_in_terminal_imgcat",
        "PynputCasette",
        "cv_closest_contour_point",
        "python_2_to_3",
        "load_openexr_image",
        "_copy_image_to_clipboard_via_copykitten",
        "cv_optical_flow",
        "get_english_synonyms_via_nltk",
        "get_principle_components",
        "format_date",
        "zalgo_text",
        "bytes_to_object",
        "cv_draw_arrow",
        "unwarped_perspective_contour",
        "view_table",
        "get_total_ram",
        "format_signature",
        "get_video_file_shape",
        "get_all_pids_and_their_commands",
        "mouse_right_release",
        "_get_byte_to_binary_grayscale_image_floyd_steinburg_dithering_function",
        "get_normal_map",
        "_string_pager_via_pypager",
        "get_my_mac_address",
        "_cv_skeletonize",
        "optical_flow_to_arrow_grid",
        "_qualify_imports",
        "parse_yaml",
        "type_string_with_keyboard",
        "mouse_left_click",
        "get_openexr_channels",
        "wordcloud_image",
        "_dill_dumps",
        "mouse_right_click",
        "as_numpy_videos",
        "mouse_middle_click",
        "_load_image_from_file_via_PIL",
        "split_sentences",
        "cv_apply_affine_to_image",
        "display_website_in_terminal",
        "pseudo_terminal",
        "delaunay_interpolation_weights",
        "minify_python_code",
        "cv_erode",
        "play_sound_file",
        "save_image_jxl",
        "_nltk_wordnet_is_installed",
        "_run_openai_llm",
        "skia_text_to_image",
        "cv_floodfill_mask",
        "_extract_archive_via_pyunpack",
        "longest_common_substring",
        "pip_import",
        "cv_dilate",
        "_get_youtube_video_data_via_embeddify",
        "_set_ryan_vimrc",
        "_get_pynput_mouse_controller",
        "cv_closest_contour",
        "set_process_title",
        "mouse_middle_release",
        "get_font_supported_chars",
        "clf",
        "_ensure_punkt_downloaded",
        "_translate_offline",
        "get_process_title",
        "web_paste",
        "get_plt",
        "add_trailing_commas",
        "mouse_left_press",
        "load_mp3_file",
        "autoformat_python_via_black_macchiato",
        "set_os_volume",
        "tmux_get_all_session_names",
        "_ensure_git_installed",
        "inverse_norm_cdf",
        "_rotate_rgb_image",
        "get_git_info",
        "optical_flow_to_image",
        "get_git_commit_date",
        "MIDI_input",
        "_load_files",
        "save_wav",
        "run_cotracker"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "input_yes_no",
        "record_mono_audio",
        "list_dict_transpose",
        "line_graph",
        "tmux_kill_session",
        "check_pip_requirements",
        "_get_depth_pro_model",
        "save_image_to_imgur",
        "_as_skia_image",
        "_install_ollama",
        "get_process_using_port",
        "cv_contour_length",
        "_cv_initialize_cameras",
        "_datamuse_words_request",
        "curl_bytes",
        "block",
        "display_image_in_terminal_color",
        "_view_markdown_in_terminal",
        "get_process_username",
        "shorten_github_url",
        "_init_pillow_heif",
        "send_facebook_message",
        "gather_vars",
        "display_cv_color_histogram",
        "_iterfzf",
        "load_yaml_file",
        "_pip_import_pyflow",
        "string_to_date",
        "_moviepy_VideoFileClip",
        "cv_inpaint_image",
        "clean_imports_via_unimport",
        "unwarped_perspective_image",
        "_filter_dict_via_fzf",
        "get_process_start_date",
        "text_to_speech_via_google",
        "_load_image_from_screenshot_via_pyscreenshot",
        "cv_resize_image",
        "get_git_remote_url",
        "_disable_insecure_request_warning",
        "load_wav_file",
        "_autoformat_python_code_via_black",
        "rinsp",
        "_get_parts_of_speech_via_nltk",
        "load_image_from_url",
        "print_process_info",
        "_load_images_via_pdf2image",
        "get_mac_address_vendor",
        "norm_cdf",
        "scatter_plot",
        "_copy_image_to_clipboard_via_pyjpgclipboard",
        "play_sound_from_samples",
        "print_gpu_summary",
        "strip_python_docstrings",
        "_skimage_skeletonize",
        "get_process_exists",
        "display_update",
        "launch_xonsh",
        "cv_draw_contours",
        "cv_imshow",
        "tmuxp_launch_session_from_yaml",
        "decode_bytes_to_image",
        "_web_copy",
        "dunk_string_diff",
        "auto_canny",
        "_cv_helper",
        "load_image_from_webcam",
        "_binary_floyd_steinburg_dithering",
        "_launch_ranger",
        "bundle_vars",
        "save_openexr_image",
        "view_string_diff",
        "get_monitor_resolution",
        "delete_file",
        "_load_text_from_file_or_url",
        "_get_jupyter_output_widget",
        "cv_draw_circle",
        "reduced_row_echelon_form",
        "_get_inflect_engine",
        "as_pil_image",
        "_display_image_in_notebook_via_ipyplot",
        "save_animated_png",
        "get_free_ram",
        "iana_to_tzinfo",
        "get_my_public_ip_address",
        "translate",
        "laplacian_blend",
        "apply_colormap_to_image",
        "_convert_content_grid",
        "get_git_commit_message",
        "download_youtube_video",
        "get_all_facebook_messages",
        "_resize_image_via_skimage",
        "_get_facebook_client",
        "print_verbose_stack_trace",
        "send_text_message",
        "display_pandas_correlation_heatmap",
        "get_process_cwd",
        "get_cutscene_frame_numbers",
        "fansi_pygments_demo",
        "cv_remap_image",
        "cv_contour_area",
        "_slow_pil_text_to_image",
        "get_bilinear_weights",
        "MIDI_output",
        "_display_columns",
        "cv_draw_rectangle",
        "_cv_save_video_mp4",
        "_init_nvml",
        "split_python_tokens",
        "line_graph_via_plotille",
        "image_to_text",
        "get_current_git_hash",
        "mouse_middle_press",
        "_pterm_exeval",
        "_get_all_notebook_sessions_via_ipybname",
        "big_ascii_text",
        "run_removestar",
        "temporary_numpy_random_seed",
        "display_image_in_terminal_imgcat",
        "cv_contour_match",
        "_load_image_from_file_via_imageio",
        "_load_video_stream",
        "s3_list_objects",
        "_encode_image_to_bytes",
        "PynputCasette",
        "_get_javascript_runtime",
        "is_valid_openexr_file",
        "get_image_file_dimensions",
        "_display_downloadable_image_in_notebook_via_ipython",
        "edit_image_in_terminal",
        "cv_closest_contour_point",
        "pip_install",
        "python_2_to_3",
        "whiten_points_covariance",
        "load_openexr_image",
        "_view_image_via_textual_imageview",
        "words_to_number",
        "_copy_image_to_clipboard_via_copykitten",
        "cv_optical_flow",
        "module_exists",
        "skia_stamp_image",
        "get_english_synonyms_via_nltk",
        "get_principle_components",
        "torch_scatter_add_image",
        "format_date",
        "torch_resize_image",
        "download_url",
        "delete_folder",
        "zalgo_text",
        "bytes_to_object",
        "cv_draw_arrow",
        "unwarped_perspective_contour",
        "color_name_to_float_color",
        "view_table",
        "skia_resize_image",
        "get_total_ram",
        "format_signature",
        "get_video_file_shape",
        "get_all_pids_and_their_commands",
        "mouse_right_release",
        "_get_byte_to_binary_grayscale_image_floyd_steinburg_dithering_function",
        "get_normal_map",
        "_string_pager_via_pypager",
        "get_my_mac_address",
        "_get_kernel_to_pid_mapping",
        "cv_equalize_histogram",
        "_string_pager_via_click",
        "_get_apriltag_detector",
        "_cv_skeletonize",
        "optical_flow_to_arrow_grid",
        "cv_simplify_contour",
        "running_in_google_colab",
        "_qualify_imports",
        "get_video_file_framerate",
        "autoformat_html_via_bs4",
        "clear_jupyter_notebook_outputs",
        "load_parquet",
        "parse_yaml",
        "add_ipython_kernel",
        "autoformat_python_via_black",
        "__getattribute__",
        "cv_distance_to_contour",
        "type_string_with_keyboard",
        "fansi_pygments",
        "mouse_left_click",
        "get_openexr_channels",
        "_ipython_exeval_maker",
        "wordcloud_image",
        "_dill_dumps",
        "mouse_right_click",
        "as_numpy_videos",
        "get_notebook_path",
        "_rich_print",
        "_display_image_slideshow_animated",
        "mouse_middle_click",
        "_get_skia_sampling",
        "connected_to_internet",
        "run_depth_pro",
        "_get_hash",
        "_load_image_from_file_via_PIL",
        "_static_calldefs",
        "split_sentences",
        "torch_remap_image",
        "get_pdf_num_pages",
        "cv_apply_affine_to_image",
        "_make_sure_nltk_has_wordnet_installed",
        "play_sound_file_via_pygame",
        "_sort_imports_via_isort",
        "load_tsv",
        "display_website_in_terminal",
        "print_rich_stack_trace",
        "_fzf_multi_grep",
        "cv_line_graph",
        "pseudo_terminal",
        "display_qr_code_in_terminal",
        "get_used_ram",
        "delaunay_interpolation_weights",
        "load_image_from_screenshot_via_mss",
        "save_image_avif",
        "_load_pdf_as_text_via_pdfminer",
        "_get_punkt_languages",
        "print_notebook_gpu_summary",
        "minify_python_code",
        "cv_erode",
        "_get_openexr_image_dimensions",
        "bar_graph",
        "cv_find_contours",
        "print",
        "get_youtube_video_transcript",
        "play_sound_file",
        "save_image_jxl",
        "_nltk_wordnet_is_installed",
        "launch_visidata",
        "can_convert_object_to_bytes",
        "select_torch_device",
        "_run_openai_llm",
        "skia_text_to_image",
        "cv_floodfill_mask",
        "get_process_memory",
        "in_tokens",
        "curl",
        "get_cloud_provider",
        "_extract_archive_via_pyunpack",
        "autoimportable_module",
        "load_animated_gif",
        "remove_duplicate_frames",
        "longest_common_substring",
        "_ensure_tapnet_installed",
        "cv_distance_transform",
        "pip_import",
        "display_markdown",
        "parse_dyaml_junctions",
        "save_image",
        "prime_factors",
        "visualize_pytorch_model",
        "is_a_git_repo",
        "display_image",
        "fansi_print",
        "cv_dilate",
        "load_image_from_clipboard",
        "_rich_inspect",
        "_get_youtube_video_data_via_embeddify",
        "_set_ryan_vimrc",
        "_get_pynput_mouse_controller",
        "cv_closest_contour",
        "set_process_title",
        "_single_line_cv_text_to_image",
        "mouse_middle_release",
        "get_font_supported_chars",
        "clf",
        "_initialize_bokeh",
        "save_safetensors",
        "_ensure_punkt_downloaded",
        "display_image_in_terminal",
        "_display_video_via_mediapy",
        "mouse_right_press",
        "_translate_offline",
        "display_polygon",
        "sobel_edges",
        "norm_pdf",
        "input_select_serial_device_id",
        "get_process_title",
        "web_paste",
        "get_plt",
        "xy_torch_matrices",
        "as_easydict",
        "add_trailing_commas",
        "mouse_left_release",
        "mouse_left_press",
        "_load_image_from_file_via_opencv",
        "load_mp3_file",
        "autoformat_python_via_black_macchiato",
        "set_os_volume",
        "tmux_get_all_session_names",
        "_ensure_git_installed",
        "inverse_norm_cdf",
        "offer_to_blacklist",
        "load_gist",
        "cv_box_blur",
        "_rotate_rgb_image",
        "add",
        "load_safetensors",
        "get_git_info",
        "display_clear",
        "get_apriltag_image",
        "as_numpy_video",
        "get_number_of_monitors",
        "_view_json_via_jtree",
        "ip_to_mac_address",
        "optical_flow_to_image",
        "get_git_commit_date",
        "histogram_in_terminal",
        "MIDI_input",
        "save_video_avi",
        "_torch_device_to_index",
        "_load_files",
        "save_wav",
        "cv_gauss_blur",
        "run_cotracker"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "print": {
      "function_name": "print",
      "calls": [],
      "called_by": [
        "killport",
        "save_gist",
        "ring_terminal_bell",
        "save_images",
        "write_to_fp",
        "tmux_kill_session",
        "check_pip_requirements",
        "kill_process",
        "swap_paths",
        "on_fail",
        "is_valid_shell_syntax",
        "_run_ai_cli_coder",
        "set_cursor_to_bar",
        "input_select",
        "print_fansi_reference_table",
        "add_ipython_kernel",
        "shorten_github_url",
        "mini_editor",
        "pip_install_multiple",
        "input_conditional",
        "_run_filebrowser",
        "_terminal_move_cursor_to_bottom_left",
        "display_help",
        "text_to_speech_via_google",
        "_rich_print",
        "select_git_commit",
        "rinsp",
        "_disable_terminal_mouse_reporting",
        "print_code",
        "print_process_info",
        "_multi_line_python_input",
        "_legacy_fansi",
        "resize_videos",
        "_test_validate_tensor_shapes",
        "printed",
        "_terminal_move_cursor_to_bottom_and_new_line",
        "print_gpu_summary",
        "_mv",
        "print_rich_stack_trace",
        "mli",
        "_set_ryan_rprc",
        "pseudo_terminal",
        "cv_imshow",
        "_cv_print_cam_props",
        "do_path",
        "_install_lazygit",
        "input_integer",
        "print_notebook_gpu_summary",
        "search_processes",
        "launch_terminal_in_colab",
        "select_torch_device",
        "_fd",
        "currently_running_desktop",
        "add_to_successful_command_history",
        "download_google_font",
        "test_parse_dyaml_junctions",
        "git_clone",
        "_set_ryan_tmux_conf",
        "download_youtube_video",
        "get_all_facebook_messages",
        "display_file_tree",
        "print_lines",
        "pip_import",
        "set_snapshot",
        "fansi_pygments_demo",
        "display_markdown",
        "MIDI_output",
        "input_select_path",
        "_display_columns",
        "fansi_print_lines",
        "cv_resize_images",
        "print_highlighted_stack_trace",
        "_ensure_filebrowser_installed",
        "fansi_print",
        "list_cap_props",
        "input_option",
        "_set_ryan_vimrc",
        "_run_sys_command",
        "line_graph_via_plotille",
        "set_cursor_to_underscore",
        "_display_filetype_size_histogram",
        "_pterm_exeval",
        "_set_session_title",
        "fansi",
        "display_query_options",
        "save_safetensors",
        "fetch_data",
        "_fix_CERTIFICATE_VERIFY_FAILED_errors",
        "_terminal_move_cursor_to_top_left",
        "display_image_in_terminal",
        "s3_list_objects",
        "pretty_print",
        "convert_to_gif_via_ffmpeg",
        "print_all_git_paths",
        "print_history",
        "path_join",
        "clear_terminal_screen",
        "rinsp_search",
        "load_video",
        "_pterm_cd",
        "_rp_show_custom_line_profile",
        "make_zip_file_from_folder",
        "_rma",
        "_fdt_for_command_line",
        "validate_tensor_shapes",
        "ptoc",
        "_pterm_fuzzy_cd",
        "play_sound_file_via_afplay",
        "offer_to_blacklist",
        "printed_generator",
        "set_ans",
        "_set_ryan_xonshrc",
        "load_safetensors",
        "_print_status",
        "run_test",
        "_nbca",
        "display_code_cell",
        "set_cursor_to_box",
        "find_and_replace_text_files",
        "pterm_pretty_print",
        "histogram_in_terminal",
        "MIDI_input",
        "text_to_speech_voices_comparison",
        "display_image_slideshow",
        "convert_image_files",
        "set_prompt_style"
      ],
      "aliases": [
        "_builtin_print"
      ],
      "via_variants": [],
      "cluster": [
        "killport",
        "save_gist",
        "ring_terminal_bell",
        "save_images",
        "write_to_fp",
        "tmux_kill_session",
        "check_pip_requirements",
        "kill_process",
        "swap_paths",
        "on_fail",
        "is_valid_shell_syntax",
        "_run_ai_cli_coder",
        "set_cursor_to_bar",
        "input_select",
        "print_fansi_reference_table",
        "add_ipython_kernel",
        "shorten_github_url",
        "mini_editor",
        "pip_install_multiple",
        "input_conditional",
        "_run_filebrowser",
        "_terminal_move_cursor_to_bottom_left",
        "display_help",
        "text_to_speech_via_google",
        "_rich_print",
        "select_git_commit",
        "rinsp",
        "_disable_terminal_mouse_reporting",
        "print_code",
        "print_process_info",
        "_multi_line_python_input",
        "_legacy_fansi",
        "resize_videos",
        "_test_validate_tensor_shapes",
        "printed",
        "_terminal_move_cursor_to_bottom_and_new_line",
        "print_gpu_summary",
        "_mv",
        "set_prompt_style",
        "print_rich_stack_trace",
        "mli",
        "_set_ryan_rprc",
        "pseudo_terminal",
        "cv_imshow",
        "_cv_print_cam_props",
        "do_path",
        "_install_lazygit",
        "input_integer",
        "print_notebook_gpu_summary",
        "print",
        "search_processes",
        "launch_terminal_in_colab",
        "select_torch_device",
        "_fd",
        "currently_running_desktop",
        "add_to_successful_command_history",
        "download_google_font",
        "test_parse_dyaml_junctions",
        "_builtin_print",
        "git_clone",
        "_set_ryan_tmux_conf",
        "download_youtube_video",
        "get_all_facebook_messages",
        "display_file_tree",
        "print_lines",
        "pip_import",
        "set_snapshot",
        "fansi_pygments_demo",
        "display_markdown",
        "MIDI_output",
        "input_select_path",
        "_display_columns",
        "fansi_print_lines",
        "cv_resize_images",
        "print_highlighted_stack_trace",
        "_ensure_filebrowser_installed",
        "fansi_print",
        "input_option",
        "_set_ryan_vimrc",
        "_run_sys_command",
        "line_graph_via_plotille",
        "set_cursor_to_underscore",
        "_display_filetype_size_histogram",
        "_pterm_exeval",
        "_set_session_title",
        "fansi",
        "display_query_options",
        "save_safetensors",
        "fetch_data",
        "_fix_CERTIFICATE_VERIFY_FAILED_errors",
        "_terminal_move_cursor_to_top_left",
        "display_image_in_terminal",
        "s3_list_objects",
        "pretty_print",
        "convert_to_gif_via_ffmpeg",
        "print_all_git_paths",
        "print_history",
        "path_join",
        "clear_terminal_screen",
        "rinsp_search",
        "load_video",
        "_pterm_cd",
        "_rp_show_custom_line_profile",
        "make_zip_file_from_folder",
        "_rma",
        "_fdt_for_command_line",
        "validate_tensor_shapes",
        "ptoc",
        "_pterm_fuzzy_cd",
        "play_sound_file_via_afplay",
        "offer_to_blacklist",
        "printed_generator",
        "set_ans",
        "_set_ryan_xonshrc",
        "load_safetensors",
        "_print_status",
        "run_test",
        "_nbca",
        "display_code_cell",
        "set_cursor_to_box",
        "find_and_replace_text_files",
        "pterm_pretty_print",
        "histogram_in_terminal",
        "MIDI_input",
        "text_to_speech_voices_comparison",
        "display_image_slideshow",
        "convert_image_files",
        "list_cap_props"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "fansi_print": {
      "function_name": "fansi_print",
      "calls": [
        "fansi",
        "print"
      ],
      "called_by": [
        "change_video_file_framerate",
        "print_verbose_stack_trace",
        "_convert_powerpoint_file",
        "accumulate_clipboard_text",
        "import_all_submodules",
        "pip_import",
        "_make_sure_nltk_has_wordnet_installed",
        "play_sound_from_samples",
        "med_filter",
        "display_video_in_terminal_color",
        "_mv",
        "slowmo_video_via_rife",
        "fansi_printed",
        "_fart",
        "_fzf_multi_grep",
        "_get_depth_pro_model",
        "display_video",
        "mli",
        "_autocomplete_lss_name",
        "text_to_speech_via_apple",
        "clear_jupyter_notebook_outputs",
        "string_to_clipboard",
        "pseudo_terminal",
        "display_image",
        "_write_default_gitignore",
        "_cv_initialize_cameras",
        "tmuxp_launch_session_from_yaml",
        "explore_torch_module",
        "take_snapshot",
        "string_from_clipboard",
        "min_filter",
        "try_import",
        "set_ans",
        "_launch_ranger",
        "git_pull",
        "_waste_gpu",
        "_pterm_exeval",
        "gauss_blur",
        "pip_install_multiple",
        "show_error",
        "max_filter",
        "_display_pterm_flamechart",
        "_run_bashtop",
        "select_torch_device",
        "_vimore",
        "linterp",
        "_pip_import_depth_pro",
        "print_all_git_paths",
        "_filter_dict_via_fzf",
        "git_import",
        "python_input",
        "_ensure_ollama_server_running",
        "eval_for_rinsp",
        "waste_gpus",
        "input_multiline",
        "add_audio_to_video_file",
        "set_prompt_style",
        "_multi_line_python_input"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "change_video_file_framerate",
        "print_verbose_stack_trace",
        "_convert_powerpoint_file",
        "accumulate_clipboard_text",
        "import_all_submodules",
        "pip_import",
        "_make_sure_nltk_has_wordnet_installed",
        "play_sound_from_samples",
        "med_filter",
        "display_video_in_terminal_color",
        "_mv",
        "slowmo_video_via_rife",
        "fansi_printed",
        "_fart",
        "_fzf_multi_grep",
        "_get_depth_pro_model",
        "display_video",
        "mli",
        "_autocomplete_lss_name",
        "text_to_speech_via_apple",
        "clear_jupyter_notebook_outputs",
        "string_to_clipboard",
        "pseudo_terminal",
        "display_image",
        "fansi_print",
        "_write_default_gitignore",
        "_cv_initialize_cameras",
        "tmuxp_launch_session_from_yaml",
        "explore_torch_module",
        "take_snapshot",
        "string_from_clipboard",
        "min_filter",
        "try_import",
        "set_ans",
        "_launch_ranger",
        "git_pull",
        "_waste_gpu",
        "print",
        "_pterm_exeval",
        "gauss_blur",
        "pip_install_multiple",
        "show_error",
        "fansi",
        "max_filter",
        "_display_pterm_flamechart",
        "_run_bashtop",
        "select_torch_device",
        "_vimore",
        "linterp",
        "_pip_import_depth_pro",
        "print_all_git_paths",
        "_filter_dict_via_fzf",
        "git_import",
        "python_input",
        "_ensure_ollama_server_running",
        "eval_for_rinsp",
        "waste_gpus",
        "input_multiline",
        "add_audio_to_video_file",
        "set_prompt_style",
        "_multi_line_python_input"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "add": {
      "function_name": "add",
      "calls": [],
      "called_by": [
        "get_system_commands",
        "args_hash",
        "leave_ImportFrom",
        "pip_import",
        "import_all_submodules",
        "_get_all_paths_fast",
        "__setitem__",
        "recursion_helper",
        "_rinsp_search_helper",
        "get_cudnn_version",
        "_qualify_imports",
        "offer_to_blacklist",
        "load_image_from_webcam",
        "try_import",
        "lazy_par_map",
        "_pterm_exeval",
        "_inline_rp_code",
        "_dict_hash",
        "get_all_importable_module_names",
        "get_all_paths",
        "_get_env_info",
        "extract_imports",
        "laplacian_blend",
        "explore",
        "_get_parts_of_speech_via_nltk",
        "load_image_from_url"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "add",
        "get_system_commands",
        "lazy_par_map",
        "_pterm_exeval",
        "args_hash",
        "leave_ImportFrom",
        "pip_import",
        "import_all_submodules",
        "_get_all_paths_fast",
        "__setitem__",
        "recursion_helper",
        "_inline_rp_code",
        "_dict_hash",
        "get_all_importable_module_names",
        "_rinsp_search_helper",
        "get_cudnn_version",
        "_qualify_imports",
        "get_all_paths",
        "_get_env_info",
        "extract_imports",
        "laplacian_blend",
        "explore",
        "_get_parts_of_speech_via_nltk",
        "offer_to_blacklist",
        "load_image_from_webcam",
        "load_image_from_url",
        "try_import"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "delete_file": {
      "function_name": "delete_file",
      "calls": [
        "file_exists",
        "pip_import"
      ],
      "called_by": [
        "edit_image_in_terminal",
        "encode_video_to_bytes",
        "file_cache_wrap",
        "_display_video_in_notebook",
        "_view_image_via_textual_imageview",
        "_paste_path_from_bundle",
        "save_image_to_imgur",
        "make_zip_file_from_folder",
        "pseudo_terminal",
        "tmuxp_launch_session_from_yaml",
        "load_image_from_clipboard",
        "_delete_pyin_settings_file",
        "_view_markdown_in_terminal",
        "zip_folder_to_bytes",
        "decorator",
        "replace_symlink_with_hardlink",
        "decode_video_from_bytes",
        "view_table",
        "launch_visidata",
        "tmux_copy",
        "convert_image_file",
        "_view_json_via_jtree",
        "convert_to_gif_via_ffmpeg",
        "text_to_speech_via_google",
        "clear_cache",
        "load_animated_gif",
        "download_youtube_video",
        "delete_path",
        "delete_symlink"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "edit_image_in_terminal",
        "file_exists",
        "pip_import",
        "encode_video_to_bytes",
        "file_cache_wrap",
        "_display_video_in_notebook",
        "_view_image_via_textual_imageview",
        "_paste_path_from_bundle",
        "save_image_to_imgur",
        "make_zip_file_from_folder",
        "pseudo_terminal",
        "tmuxp_launch_session_from_yaml",
        "load_image_from_clipboard",
        "_delete_pyin_settings_file",
        "_view_markdown_in_terminal",
        "zip_folder_to_bytes",
        "decorator",
        "delete_file",
        "replace_symlink_with_hardlink",
        "decode_video_from_bytes",
        "view_table",
        "launch_visidata",
        "tmux_copy",
        "convert_image_file",
        "_view_json_via_jtree",
        "convert_to_gif_via_ffmpeg",
        "text_to_speech_via_google",
        "clear_cache",
        "load_animated_gif",
        "download_youtube_video",
        "delete_path",
        "delete_symlink"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "as_easydict": {
      "function_name": "as_easydict",
      "calls": [
        "pip_import"
      ],
      "called_by": [
        "gather_attrs",
        "load_json",
        "load_safetensors",
        "validate_tensor_shapes",
        "load_yaml_file",
        "parse_yaml",
        "broadcast_kwargs",
        "as_easydicts"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "gather_attrs",
        "load_json",
        "as_easydict",
        "load_safetensors",
        "pip_import",
        "validate_tensor_shapes",
        "load_yaml_file",
        "parse_yaml",
        "broadcast_kwargs",
        "as_easydicts"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": false
    },
    "rinsp": {
      "function_name": "rinsp",
      "calls": [
        "file_exists",
        "read_symlink",
        "pip_import",
        "is_utf8_file",
        "linerino",
        "get_all_submodule_names",
        "sorty",
        "number_of_lines_in_file",
        "is_torch_tensor",
        "is_module",
        "color",
        "get_process_using_port",
        "print_stack_trace",
        "is_dictlike",
        "number_of_lines",
        "path_exists",
        "get_source_file",
        "get_all_files",
        "_maybe_display_string_in_pager",
        "symlink_is_broken",
        "autoformat_python_via_black",
        "strip_ansi_escapes",
        "indentify_all_but_first_line",
        "get_terminal_width",
        "get_file_size",
        "errortext",
        "is_image_file",
        "get_port_is_taken",
        "fansi_syntax_highlighting",
        "append_stat",
        "print",
        "format_parent_hierarchy",
        "is_numpy_array",
        "get_parent_hierarchy",
        "line_split",
        "fansi",
        "strip",
        "is_video_file",
        "date_modified",
        "human_readable_file_size",
        "replace",
        "format_signature",
        "display_dict",
        "get_video_file_shape",
        "get_video_file_duration",
        "mean",
        "parent_class_names",
        "currently_running_windows",
        "get_full_class_name",
        "get_all_folders",
        "get_image_file_dimensions",
        "line_join",
        "print_process_info"
      ],
      "called_by": [
        "pseudo_terminal"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "file_exists",
        "read_symlink",
        "pip_import",
        "is_utf8_file",
        "linerino",
        "get_all_submodule_names",
        "sorty",
        "number_of_lines_in_file",
        "is_torch_tensor",
        "is_module",
        "color",
        "get_process_using_port",
        "is_dictlike",
        "number_of_lines",
        "path_exists",
        "pseudo_terminal",
        "get_source_file",
        "get_all_files",
        "_maybe_display_string_in_pager",
        "symlink_is_broken",
        "autoformat_python_via_black",
        "strip_ansi_escapes",
        "indentify_all_but_first_line",
        "get_terminal_width",
        "get_file_size",
        "errortext",
        "is_image_file",
        "get_port_is_taken",
        "fansi_syntax_highlighting",
        "append_stat",
        "print",
        "format_parent_hierarchy",
        "is_numpy_array",
        "get_parent_hierarchy",
        "line_split",
        "fansi",
        "strip",
        "is_video_file",
        "date_modified",
        "human_readable_file_size",
        "replace",
        "format_signature",
        "display_dict",
        "get_video_file_shape",
        "get_video_file_duration",
        "line_join",
        "rinsp",
        "mean",
        "parent_class_names",
        "currently_running_windows",
        "get_full_class_name",
        "get_all_folders",
        "get_image_file_dimensions",
        "print_stack_trace",
        "print_process_info"
      ],
      "multiplexing": [
        "isinstance",
        "isinstance",
        "line_join",
        "str",
        "isinstance",
        "str"
      ],
      "is_via_variant": false,
      "is_private": false
    },
    "_get_pynput_mouse_controller": {
      "function_name": "_get_pynput_mouse_controller",
      "calls": [
        "pip_import"
      ],
      "called_by": [
        "set_mouse_position",
        "mouse_middle_press",
        "mouse_middle_release",
        "mouse_left_click",
        "mouse_right_press",
        "mouse_left_release",
        "mouse_left_press",
        "mouse_right_release",
        "mouse_middle_click",
        "mouse_right_click",
        "get_mouse_position"
      ],
      "aliases": [],
      "via_variants": [],
      "cluster": [
        "set_mouse_position",
        "mouse_middle_press",
        "mouse_middle_release",
        "mouse_left_click",
        "mouse_right_press",
        "pip_import",
        "mouse_left_release",
        "mouse_left_press",
        "mouse_right_release",
        "mouse_middle_click",
        "mouse_right_click",
        "_get_pynput_mouse_controller",
        "get_mouse_position"
      ],
      "multiplexing": [],
      "is_via_variant": false,
      "is_private": true
    }
  },
  "documentation_status": {
    "pip_import": {
      "current_quality": "excellent",
      "current_docstring": "TODO: Make this function only request sudo if we need it. Otherwise it's a nuisance.\nTODO: Add an \"always\" option to \"yes\" and \"no\" for installing modules.\n\nAttempts to import a module, and if success...",
      "suggestions": [
        "Document function parameters and their types"
      ],
      "has_examples": true,
      "has_parameters": false,
      "has_return_info": true
    },
    "print": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "fansi_print": {
      "current_quality": "good",
      "current_docstring": "This function prints colored text in a terminal.\nIt can also print bolded, underlined, or highlighted text.\nIt uses ANSI escape sequences to do this...\n   ...and so calling it 'fansi' is a pun on 'fan...",
      "suggestions": [
        "Document function parameters and their types"
      ],
      "has_examples": true,
      "has_parameters": false,
      "has_return_info": false
    },
    "add": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "delete_file": {
      "current_quality": "good",
      "current_docstring": "Deletes a file at a given path.\n\nArgs:\n    path (str): Path to the file.\n    permanent (bool, optional): If True, delete file permanently. Otherwise, move to trash. Defaults to True.\n\npermanent exists...",
      "suggestions": [
        "Add concrete usage examples with >>> syntax",
        "Document return value and type"
      ],
      "has_examples": false,
      "has_parameters": true,
      "has_return_info": false
    },
    "as_easydict": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "rinsp": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    },
    "_get_pynput_mouse_controller": {
      "current_quality": "missing",
      "current_docstring": "",
      "suggestions": [
        "Add comprehensive docstring with purpose, parameters, and examples"
      ],
      "has_examples": false,
      "has_parameters": false,
      "has_return_info": false
    }
  },
  "work_instructions": [
    "For each function in this package:",
    "1. Read the existing docstring (if any) and understand the function's purpose",
    "2. Examine the function's implementation to understand its behavior",
    "3. Check related functions (in context) to understand how they work together",
    "4. ENHANCE (don't replace) the docstring following the template:",
    "   - Keep original docstring if it exists",
    "   - Add 'Enhanced Documentation:' section with usage patterns",
    "   - Include concrete examples with >>> syntax",
    "   - Document parameters and return values",
    "   - Note related functions and when to use vs alternatives",
    "   - Add relevant tags for searchability",
    "5. Test your examples to ensure they work",
    "6. Update the appropriate tag files in documentation/tags/",
    "7. SPECIAL: Document the multiplexing pattern - how the base function dispatches to specific implementations"
  ],
  "quality_checklist": [
    "\u2610 Each function has enhanced docstring with purpose clearly explained",
    "\u2610 All parameters are documented with types and descriptions",
    "\u2610 Return values are documented with types and descriptions",
    "\u2610 At least one concrete example with >>> syntax that actually runs",
    "\u2610 Related functions are mentioned with explanations",
    "\u2610 Usage patterns and common scenarios are described",
    "\u2610 Relevant tags added for searchability",
    "\u2610 Function added to appropriate tag files in documentation/tags/",
    "\u2610 Examples tested and confirmed working",
    "\u2610 Cross-references to multiplexing patterns or _via_ variants documented"
  ]
}